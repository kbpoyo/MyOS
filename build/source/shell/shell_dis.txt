
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x81000162

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x000054cc memsz 0x00005554 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000046ee  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       000003e1  81004700  81004700  00005700  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009cc  81004b00  81004b00  00005b00  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000074  810054e0  810054e0  000064cc  2**5
                  ALLOC
  4 .debug_info   0001595e  00000000  00000000  000064cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00004ca4  00000000  00000000  0001be2a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 00000530  00000000  00000000  00020ad0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   000031a5  00000000  00000000  00021000  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    00001121  00000000  00000000  000241a5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line_str 00000efb  00000000  00000000  000252c6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003f  00000000  00000000  000261c1  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00000fe8  00000000  00000000  00026200  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000004e  00000000  00000000  000271e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81000586 l       .text	00000000 L5
810005be l       .text	00000000 L15
81000590 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 findfp.c
810005c9 l     F .text	000000ad std
81000676 l     F .text	0000001b stdin_init
81000691 l     F .text	0000001b stdout_init
810006ac l     F .text	0000001b stderr_init
810054e0 l     O .bss	00000004 __sfp_recursive_mutex
810054e4 l     O .bss	00000004 __sinit_recursive_mutex
8100096f l     F .text	0000000a __fp_lock
81000979 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
81004b00 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 mallocr.c
81000f3c l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
81001a8d l       .text	00000000 L20
81001a44 l       .text	00000000 L5
81001a8a l       .text	00000000 L15
81001a50 l       .text	00000000 L8
81001a71 l       .text	00000000 L9
81001a80 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 mlock.c
81005548 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81001cdd l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fputwc.c
81003871 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 locale.c
81003f62 l     F .text	0000000a __get_global_locale
81003f6c l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
810041ce l     F .text	0000000a __get_global_locale
810041d8 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
810044e6 l     F .text	0000000a __get_global_locale
810044f0 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
810045f0 l     F .text	0000000a __get_global_locale
810045fa l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
810046ae g     F .text	00000040 _isatty_r
810042aa g     F .text	00000037 cleanup_glue
8100045d g     F .text	000000d6 _puts_r
81004008 g     F .text	00000046 _lseek_r
810002a8 g     F .text	0000001b yield
81000428 g     F .text	00000035 printf
810044fa g     F .text	00000077 _wcrtomb_r
81003113 g     F .text	0000004a __sseek
810008be g     F .text	00000099 __sinit
81003182 g     F .text	00000112 __swbuf_r
81003f76 g     F .text	0000005f _setlocale_r
810006c7 g     F .text	0000006f __sfmoreglue
81001bfb g     F .text	00000006 __malloc_unlock
81001ae0 g       .text	00000000 memmove
810008a4 g     F .text	0000001a _cleanup
8100466b g     F .text	00000043 _fstat_r
81005550 g     O .bss	00000004 errno
810030ae g     F .text	0000000a __seofread
8100027b g     F .text	0000002d execve
8100021d g     F .text	0000001b getpid
81001a98 g       .text	00000000 memcpy
81000883 g     F .text	00000021 _cleanup_r
81000533 g     F .text	0000001c puts
810003fb g     F .text	0000002d _printf_r
81000392 g     F .text	00000021 isatty
81005500 g     O .bss	00000004 __malloc_top_pad
810054e0 g       .bss	00000000 __bss_start__
810009cb g     F .text	0000049e __sfvwrite_r
8100302a g     F .text	00000040 _sbrk_r
81004264 g     F .text	00000046 _read_r
81003496 g     F .text	00000107 _fclose_r
81003838 g     F .text	00000039 fflush
81005504 g     O .bss	00000004 __malloc_max_sbrked_mem
81000365 g     F .text	0000002d lseek
81004794 g     O .rodata	00000004 _global_impure_ptr
81002750 g     F .text	000008da _realloc_r
81003987 g     F .text	00000057 _fputwc_r
81000983 g     F .text	00000024 __fp_lock_all
810042e1 g     F .text	00000160 _reclaim_reent
81000317 g     F .text	0000002d write
810003b3 g     F .text	00000027 fstat
810001a7 g     F .text	0000004c sys_call
81001d43 g     F .text	000000a8 __sfputs_r
81000957 g     F .text	00000006 __sfp_lock_acquire
81001a00 g       .text	00000000 memchr
81005554 g       .bss	00000000 __bss_end__
81003a26 g     F .text	000003db _free_r
81004860 g     O .rodata	00000180 _ctype_b
81003fd5 g     F .text	00000014 __locale_mb_cur_max
8100534c g     O .data	00000004 __malloc_sbrk_base
81000162 g       .text	00000000 _start
810002ea g     F .text	0000002d read
81005520 g     O .bss	00000028 __malloc_current_mallinfo
810003fb g     F .text	0000002d _iprintf_r
81003456 g     F .text	00000040 _close_r
81000260 g     F .text	0000001b fork
810032fb g     F .text	0000015b __swsetup_r
81000736 g     F .text	0000014d __sfp
81004f40 g     O .data	00000408 __malloc_av_
81000969 g     F .text	00000006 __sinit_lock_release
8100306a g     F .text	00000044 __sread
81001bf5 g     F .text	00000006 __malloc_lock
810003da g     F .text	00000021 sbrk
810037e0 g     F .text	00000058 _fflush_r
81000172 g     F .text	00000035 cstart
81001b6d g       .text	00000000 memset
81000000 g     F .text	00000162 main
81005508 g     O .bss	00000004 __malloc_max_total_mem
81003294 g     F .text	00000021 __swbuf
8100315d g     F .text	00000025 __sclose
8100359d g     F .text	0000001d fclose
810011cf g     F .text	00000822 _malloc_r
81004628 g     F .text	00000043 __ascii_wctomb
81000e69 g     F .text	00000068 _fwalk
810041e2 g     F .text	0000002a _mbtowc_r
81003e01 g     F .text	00000161 _malloc_trim_r
81004441 g     F .text	000000a5 strcmp
81001deb g     F .text	00000025 vfiprintf
81000428 g     F .text	00000035 iprintf
8100554c g     O .bss	00000004 _PathLocale
810032b5 g     F .text	00000046 _write_r
81003fe9 g     F .text	0000001f setlocale
81002166 g     F .text	0000019b _printf_common
81004f24 g     O .data	00000004 _impure_ptr
810035ba g     F .text	00000226 __sflush_r
8100420c g     F .text	00000058 __ascii_mbtowc
810009a7 g     F .text	00000024 __fp_unlock_all
81000238 g     F .text	00000028 print_msg
8100413b g     F .text	00000093 __swhatbuf_r
810038d7 g     F .text	000000b0 __fputwc
810030b8 g     F .text	0000005b __swrite
81005348 g     O .data	00000004 __malloc_trim_threshold
81001e10 g     F .text	00000356 _vfiprintf_r
81000ed1 g     F .text	0000006b _fwalk_reent
8100095d g     F .text	00000006 __sfp_lock_release
810049e0 g     O .rodata	00000101 _ctype_
8100404e g     F .text	000000ed __smakebuf_r
81000550 g       .text	00000000 strlen
81002301 g     F .text	0000044f _printf_i
810002c3 g     F .text	00000027 open
81001c01 g     F .text	000000dc __sprint_r
81004604 g     F .text	00000024 _wctomb_r
81001e10 g     F .text	00000356 _vfprintf_r
810001f3 g     F .text	0000002a msleep
81004571 g     F .text	0000007f wcrtomb
81000344 g     F .text	00000021 close
81005360 g     O .data	0000016c __global_locale
81001deb g     F .text	00000025 vfprintf
810039de g     F .text	00000048 fputwc
81000963 g     F .text	00000006 __sinit_lock_acquire



Disassembly of section .text:

81000000 <main>:
 */

#include "lib_syscall.h"
#include <stdio.h>

int main(int argc, char** argv) {
81000000:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000004:	83 e4 f0             	and    $0xfffffff0,%esp
81000007:	ff 71 fc             	push   -0x4(%ecx)
8100000a:	55                   	push   %ebp
8100000b:	89 e5                	mov    %esp,%ebp
8100000d:	53                   	push   %ebx
8100000e:	51                   	push   %ecx
8100000f:	83 ec 10             	sub    $0x10,%esp
81000012:	89 cb                	mov    %ecx,%ebx
    sbrk(0);
81000014:	83 ec 0c             	sub    $0xc,%esp
81000017:	6a 00                	push   $0x0
81000019:	e8 bc 03 00 00       	call   810003da <sbrk>
8100001e:	83 c4 10             	add    $0x10,%esp
    sbrk(100);
81000021:	83 ec 0c             	sub    $0xc,%esp
81000024:	6a 64                	push   $0x64
81000026:	e8 af 03 00 00       	call   810003da <sbrk>
8100002b:	83 c4 10             	add    $0x10,%esp
    sbrk(200);
8100002e:	83 ec 0c             	sub    $0xc,%esp
81000031:	68 c8 00 00 00       	push   $0xc8
81000036:	e8 9f 03 00 00       	call   810003da <sbrk>
8100003b:	83 c4 10             	add    $0x10,%esp
    sbrk(4096*2 + 200);
8100003e:	83 ec 0c             	sub    $0xc,%esp
81000041:	68 c8 20 00 00       	push   $0x20c8
81000046:	e8 8f 03 00 00       	call   810003da <sbrk>
8100004b:	83 c4 10             	add    $0x10,%esp
    sbrk(4096*5 + 1234);
8100004e:	83 ec 0c             	sub    $0xc,%esp
81000051:	68 d2 54 00 00       	push   $0x54d2
81000056:	e8 7f 03 00 00       	call   810003da <sbrk>
8100005b:	83 c4 10             	add    $0x10,%esp

    printf("hello from shell\n");
8100005e:	83 ec 0c             	sub    $0xc,%esp
81000061:	68 00 47 00 81       	push   $0x81004700
81000066:	e8 c8 04 00 00       	call   81000533 <puts>
8100006b:	83 c4 10             	add    $0x10,%esp
    printf("os version: %s\n", "1.0.0");
8100006e:	83 ec 08             	sub    $0x8,%esp
81000071:	68 11 47 00 81       	push   $0x81004711
81000076:	68 17 47 00 81       	push   $0x81004717
8100007b:	e8 a8 03 00 00       	call   81000428 <iprintf>
81000080:	83 c4 10             	add    $0x10,%esp
    printf("os version: %f\n", 15.1234);
81000083:	83 ec 04             	sub    $0x4,%esp
81000086:	dd 05 88 47 00 81    	fldl   0x81004788
8100008c:	8d 64 24 f8          	lea    -0x8(%esp),%esp
81000090:	dd 1c 24             	fstpl  (%esp)
81000093:	68 27 47 00 81       	push   $0x81004727
81000098:	e8 8b 03 00 00       	call   81000428 <iprintf>
8100009d:	83 c4 10             	add    $0x10,%esp
    printf("%05d, %-5d, %d\n", 1, 2, 3);
810000a0:	6a 03                	push   $0x3
810000a2:	6a 02                	push   $0x2
810000a4:	6a 01                	push   $0x1
810000a6:	68 37 47 00 81       	push   $0x81004737
810000ab:	e8 78 03 00 00       	call   81000428 <iprintf>
810000b0:	83 c4 10             	add    $0x10,%esp

    print_msg("main pid %d", getpid());
810000b3:	e8 65 01 00 00       	call   8100021d <getpid>
810000b8:	83 ec 08             	sub    $0x8,%esp
810000bb:	50                   	push   %eax
810000bc:	68 47 47 00 81       	push   $0x81004747
810000c1:	e8 72 01 00 00       	call   81000238 <print_msg>
810000c6:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < argc; ++i) {
810000c9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810000d0:	eb 26                	jmp    810000f8 <main+0xf8>
        print_msg("arg: %s", argv[i]);
810000d2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810000d5:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810000dc:	8b 43 04             	mov    0x4(%ebx),%eax
810000df:	01 d0                	add    %edx,%eax
810000e1:	8b 00                	mov    (%eax),%eax
810000e3:	83 ec 08             	sub    $0x8,%esp
810000e6:	50                   	push   %eax
810000e7:	68 53 47 00 81       	push   $0x81004753
810000ec:	e8 47 01 00 00       	call   81000238 <print_msg>
810000f1:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < argc; ++i) {
810000f4:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810000f8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810000fb:	3b 03                	cmp    (%ebx),%eax
810000fd:	7c d3                	jl     810000d2 <main+0xd2>
    }

    int pid = fork();
810000ff:	e8 5c 01 00 00       	call   81000260 <fork>
81000104:	89 45 f0             	mov    %eax,-0x10(%ebp)
    yield();
81000107:	e8 9c 01 00 00       	call   810002a8 <yield>
    if (pid > 0) print_msg("parent pid=%d", pid);
8100010c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000110:	7e 15                	jle    81000127 <main+0x127>
81000112:	83 ec 08             	sub    $0x8,%esp
81000115:	ff 75 f0             	push   -0x10(%ebp)
81000118:	68 5b 47 00 81       	push   $0x8100475b
8100011d:	e8 16 01 00 00       	call   81000238 <print_msg>
81000122:	83 c4 10             	add    $0x10,%esp
81000125:	eb 13                	jmp    8100013a <main+0x13a>
    else print_msg("chiled pid=%d", pid);
81000127:	83 ec 08             	sub    $0x8,%esp
8100012a:	ff 75 f0             	push   -0x10(%ebp)
8100012d:	68 69 47 00 81       	push   $0x81004769
81000132:	e8 01 01 00 00       	call   81000238 <print_msg>
81000137:	83 c4 10             	add    $0x10,%esp

    for (;;) {
        print_msg("shell pid=%d", getpid());
8100013a:	e8 de 00 00 00       	call   8100021d <getpid>
8100013f:	83 ec 08             	sub    $0x8,%esp
81000142:	50                   	push   %eax
81000143:	68 77 47 00 81       	push   $0x81004777
81000148:	e8 eb 00 00 00       	call   81000238 <print_msg>
8100014d:	83 c4 10             	add    $0x10,%esp
        msleep(1000);
81000150:	83 ec 0c             	sub    $0xc,%esp
81000153:	68 e8 03 00 00       	push   $0x3e8
81000158:	e8 96 00 00 00       	call   810001f3 <msleep>
8100015d:	83 c4 10             	add    $0x10,%esp
        print_msg("shell pid=%d", getpid());
81000160:	eb d8                	jmp    8100013a <main+0x13a>

81000162 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
81000162:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
81000165:	8e d8                	mov    %eax,%ds
	mov %ax, %es
81000167:	8e c0                	mov    %eax,%es
	mov %ax, %fs
81000169:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
8100016b:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
8100016d:	e9 00 00 00 00       	jmp    81000172 <cstart>

81000172 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
81000172:	55                   	push   %ebp
81000173:	89 e5                	mov    %esp,%ebp
81000175:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
81000178:	c7 45 f4 e0 54 00 81 	movl   $0x810054e0,-0xc(%ebp)
    while (start < __bss_end__) {
8100017f:	eb 09                	jmp    8100018a <cstart+0x18>
        *(start++);
81000181:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000184:	83 c0 01             	add    $0x1,%eax
81000187:	89 45 f4             	mov    %eax,-0xc(%ebp)
    while (start < __bss_end__) {
8100018a:	81 7d f4 54 55 00 81 	cmpl   $0x81005554,-0xc(%ebp)
81000191:	72 ee                	jb     81000181 <cstart+0xf>
    }
    
    main(argc, argv);
81000193:	83 ec 08             	sub    $0x8,%esp
81000196:	ff 75 0c             	push   0xc(%ebp)
81000199:	ff 75 08             	push   0x8(%ebp)
8100019c:	e8 5f fe ff ff       	call   81000000 <main>
810001a1:	83 c4 10             	add    $0x10,%esp
}
810001a4:	90                   	nop
810001a5:	c9                   	leave  
810001a6:	c3                   	ret    

810001a7 <sys_call>:
#include    "cpu/syscall.h"
#include    "os_cfg.h"
#include    "lib_syscall.h"


int sys_call(syscall_args_t *args) {
810001a7:	55                   	push   %ebp
810001a8:	89 e5                	mov    %esp,%ebp
810001aa:	57                   	push   %edi
810001ab:	56                   	push   %esi
810001ac:	53                   	push   %ebx
810001ad:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
810001b0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810001b7:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
810001be:	8b 45 08             	mov    0x8(%ebp),%eax
810001c1:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
810001c4:	8b 55 08             	mov    0x8(%ebp),%edx
810001c7:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
810001ca:	8b 4d 08             	mov    0x8(%ebp),%ecx
810001cd:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
810001d0:	8b 5d 08             	mov    0x8(%ebp),%ebx
810001d3:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
810001d6:	8b 75 08             	mov    0x8(%ebp),%esi
810001d9:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
810001db:	8d 7d e8             	lea    -0x18(%ebp),%edi
810001de:	50                   	push   %eax
810001df:	52                   	push   %edx
810001e0:	51                   	push   %ecx
810001e1:	53                   	push   %ebx
810001e2:	56                   	push   %esi
810001e3:	ff 1f                	lcall  *(%edi)
810001e5:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
810001e8:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
810001eb:	83 c4 10             	add    $0x10,%esp
810001ee:	5b                   	pop    %ebx
810001ef:	5e                   	pop    %esi
810001f0:	5f                   	pop    %edi
810001f1:	5d                   	pop    %ebp
810001f2:	c3                   	ret    

810001f3 <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
810001f3:	55                   	push   %ebp
810001f4:	89 e5                	mov    %esp,%ebp
810001f6:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
810001f9:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810001fd:	7e 1b                	jle    8100021a <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
810001ff:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
81000206:	8b 45 08             	mov    0x8(%ebp),%eax
81000209:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
8100020c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100020f:	50                   	push   %eax
81000210:	e8 92 ff ff ff       	call   810001a7 <sys_call>
81000215:	83 c4 04             	add    $0x4,%esp
81000218:	eb 01                	jmp    8100021b <msleep+0x28>
    if (ms <= 0) return;
8100021a:	90                   	nop

}
8100021b:	c9                   	leave  
8100021c:	c3                   	ret    

8100021d <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
8100021d:	55                   	push   %ebp
8100021e:	89 e5                	mov    %esp,%ebp
81000220:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000223:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
8100022a:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100022d:	50                   	push   %eax
8100022e:	e8 74 ff ff ff       	call   810001a7 <sys_call>
81000233:	83 c4 04             	add    $0x4,%esp
}
81000236:	c9                   	leave  
81000237:	c3                   	ret    

81000238 <print_msg>:

void print_msg(const char *fmt, int arg) {
81000238:	55                   	push   %ebp
81000239:	89 e5                	mov    %esp,%ebp
8100023b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
8100023e:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
81000245:	8b 45 08             	mov    0x8(%ebp),%eax
81000248:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
8100024b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100024e:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
81000251:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000254:	50                   	push   %eax
81000255:	e8 4d ff ff ff       	call   810001a7 <sys_call>
8100025a:	83 c4 04             	add    $0x4,%esp
}
8100025d:	90                   	nop
8100025e:	c9                   	leave  
8100025f:	c3                   	ret    

81000260 <fork>:

int fork (void) {
81000260:	55                   	push   %ebp
81000261:	89 e5                	mov    %esp,%ebp
81000263:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
81000266:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
8100026d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000270:	50                   	push   %eax
81000271:	e8 31 ff ff ff       	call   810001a7 <sys_call>
81000276:	83 c4 04             	add    $0x4,%esp
}
81000279:	c9                   	leave  
8100027a:	c3                   	ret    

8100027b <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
8100027b:	55                   	push   %ebp
8100027c:	89 e5                	mov    %esp,%ebp
8100027e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
81000281:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
81000288:	8b 45 08             	mov    0x8(%ebp),%eax
8100028b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
8100028e:	8b 45 0c             	mov    0xc(%ebp),%eax
81000291:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
81000294:	8b 45 10             	mov    0x10(%ebp),%eax
81000297:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
8100029a:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100029d:	50                   	push   %eax
8100029e:	e8 04 ff ff ff       	call   810001a7 <sys_call>
810002a3:	83 c4 04             	add    $0x4,%esp
}
810002a6:	c9                   	leave  
810002a7:	c3                   	ret    

810002a8 <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
810002a8:	55                   	push   %ebp
810002a9:	89 e5                	mov    %esp,%ebp
810002ab:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
810002ae:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
810002b5:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002b8:	50                   	push   %eax
810002b9:	e8 e9 fe ff ff       	call   810001a7 <sys_call>
810002be:	83 c4 04             	add    $0x4,%esp
}
810002c1:	c9                   	leave  
810002c2:	c3                   	ret    

810002c3 <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
810002c3:	55                   	push   %ebp
810002c4:	89 e5                	mov    %esp,%ebp
810002c6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
810002c9:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
810002d0:	8b 45 08             	mov    0x8(%ebp),%eax
810002d3:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
810002d6:	8b 45 0c             	mov    0xc(%ebp),%eax
810002d9:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
810002dc:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002df:	50                   	push   %eax
810002e0:	e8 c2 fe ff ff       	call   810001a7 <sys_call>
810002e5:	83 c4 04             	add    $0x4,%esp
}
810002e8:	c9                   	leave  
810002e9:	c3                   	ret    

810002ea <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
810002ea:	55                   	push   %ebp
810002eb:	89 e5                	mov    %esp,%ebp
810002ed:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
810002f0:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
810002f7:	8b 45 08             	mov    0x8(%ebp),%eax
810002fa:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
810002fd:	8b 45 0c             	mov    0xc(%ebp),%eax
81000300:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000303:	8b 45 10             	mov    0x10(%ebp),%eax
81000306:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000309:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100030c:	50                   	push   %eax
8100030d:	e8 95 fe ff ff       	call   810001a7 <sys_call>
81000312:	83 c4 04             	add    $0x4,%esp
}
81000315:	c9                   	leave  
81000316:	c3                   	ret    

81000317 <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
81000317:	55                   	push   %ebp
81000318:	89 e5                	mov    %esp,%ebp
8100031a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
8100031d:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
81000324:	8b 45 08             	mov    0x8(%ebp),%eax
81000327:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
8100032a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100032d:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000330:	8b 45 10             	mov    0x10(%ebp),%eax
81000333:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000336:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000339:	50                   	push   %eax
8100033a:	e8 68 fe ff ff       	call   810001a7 <sys_call>
8100033f:	83 c4 04             	add    $0x4,%esp
}
81000342:	c9                   	leave  
81000343:	c3                   	ret    

81000344 <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
81000344:	55                   	push   %ebp
81000345:	89 e5                	mov    %esp,%ebp
81000347:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
8100034a:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
81000351:	8b 45 08             	mov    0x8(%ebp),%eax
81000354:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000357:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100035a:	50                   	push   %eax
8100035b:	e8 47 fe ff ff       	call   810001a7 <sys_call>
81000360:	83 c4 04             	add    $0x4,%esp
}
81000363:	c9                   	leave  
81000364:	c3                   	ret    

81000365 <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
81000365:	55                   	push   %ebp
81000366:	89 e5                	mov    %esp,%ebp
81000368:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
8100036b:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
81000372:	8b 45 08             	mov    0x8(%ebp),%eax
81000375:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
81000378:	8b 45 0c             	mov    0xc(%ebp),%eax
8100037b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
8100037e:	8b 45 10             	mov    0x10(%ebp),%eax
81000381:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000384:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000387:	50                   	push   %eax
81000388:	e8 1a fe ff ff       	call   810001a7 <sys_call>
8100038d:	83 c4 04             	add    $0x4,%esp
}
81000390:	c9                   	leave  
81000391:	c3                   	ret    

81000392 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
81000392:	55                   	push   %ebp
81000393:	89 e5                	mov    %esp,%ebp
81000395:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
81000398:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
8100039f:	8b 45 08             	mov    0x8(%ebp),%eax
810003a2:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
810003a5:	8d 45 ec             	lea    -0x14(%ebp),%eax
810003a8:	50                   	push   %eax
810003a9:	e8 f9 fd ff ff       	call   810001a7 <sys_call>
810003ae:	83 c4 04             	add    $0x4,%esp
}
810003b1:	c9                   	leave  
810003b2:	c3                   	ret    

810003b3 <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
810003b3:	55                   	push   %ebp
810003b4:	89 e5                	mov    %esp,%ebp
810003b6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
810003b9:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
810003c0:	8b 45 08             	mov    0x8(%ebp),%eax
810003c3:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
810003c6:	8b 45 0c             	mov    0xc(%ebp),%eax
810003c9:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
810003cc:	8d 45 ec             	lea    -0x14(%ebp),%eax
810003cf:	50                   	push   %eax
810003d0:	e8 d2 fd ff ff       	call   810001a7 <sys_call>
810003d5:	83 c4 04             	add    $0x4,%esp
}
810003d8:	c9                   	leave  
810003d9:	c3                   	ret    

810003da <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
810003da:	55                   	push   %ebp
810003db:	89 e5                	mov    %esp,%ebp
810003dd:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
810003e0:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)incr;
810003e7:	8b 45 08             	mov    0x8(%ebp),%eax
810003ea:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
810003ed:	8d 45 ec             	lea    -0x14(%ebp),%eax
810003f0:	50                   	push   %eax
810003f1:	e8 b1 fd ff ff       	call   810001a7 <sys_call>
810003f6:	83 c4 04             	add    $0x4,%esp
810003f9:	c9                   	leave  
810003fa:	c3                   	ret    

810003fb <_iprintf_r>:
810003fb:	55                   	push   %ebp
810003fc:	89 e5                	mov    %esp,%ebp
810003fe:	83 ec 18             	sub    $0x18,%esp
81000401:	8d 45 10             	lea    0x10(%ebp),%eax
81000404:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000407:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100040a:	8b 45 08             	mov    0x8(%ebp),%eax
8100040d:	8b 40 08             	mov    0x8(%eax),%eax
81000410:	52                   	push   %edx
81000411:	ff 75 0c             	push   0xc(%ebp)
81000414:	50                   	push   %eax
81000415:	ff 75 08             	push   0x8(%ebp)
81000418:	e8 f3 19 00 00       	call   81001e10 <_vfiprintf_r>
8100041d:	83 c4 10             	add    $0x10,%esp
81000420:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000423:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000426:	c9                   	leave  
81000427:	c3                   	ret    

81000428 <iprintf>:
81000428:	55                   	push   %ebp
81000429:	89 e5                	mov    %esp,%ebp
8100042b:	83 ec 18             	sub    $0x18,%esp
8100042e:	a1 24 4f 00 81       	mov    0x81004f24,%eax
81000433:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000436:	8d 45 0c             	lea    0xc(%ebp),%eax
81000439:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100043c:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100043f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000442:	8b 40 08             	mov    0x8(%eax),%eax
81000445:	52                   	push   %edx
81000446:	ff 75 08             	push   0x8(%ebp)
81000449:	50                   	push   %eax
8100044a:	ff 75 f4             	push   -0xc(%ebp)
8100044d:	e8 be 19 00 00       	call   81001e10 <_vfiprintf_r>
81000452:	83 c4 10             	add    $0x10,%esp
81000455:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000458:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100045b:	c9                   	leave  
8100045c:	c3                   	ret    

8100045d <_puts_r>:
8100045d:	55                   	push   %ebp
8100045e:	89 e5                	mov    %esp,%ebp
81000460:	83 ec 38             	sub    $0x38,%esp
81000463:	83 ec 0c             	sub    $0xc,%esp
81000466:	ff 75 0c             	push   0xc(%ebp)
81000469:	e8 e2 00 00 00       	call   81000550 <strlen>
8100046e:	83 c4 10             	add    $0x10,%esp
81000471:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000474:	8b 45 0c             	mov    0xc(%ebp),%eax
81000477:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100047a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100047d:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000480:	c7 45 d4 90 47 00 81 	movl   $0x81004790,-0x2c(%ebp)
81000487:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
8100048e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000491:	83 c0 01             	add    $0x1,%eax
81000494:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000497:	8d 45 cc             	lea    -0x34(%ebp),%eax
8100049a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100049d:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
810004a4:	8b 45 08             	mov    0x8(%ebp),%eax
810004a7:	8b 40 08             	mov    0x8(%eax),%eax
810004aa:	89 45 f0             	mov    %eax,-0x10(%ebp)
810004ad:	8b 45 08             	mov    0x8(%ebp),%eax
810004b0:	89 45 ec             	mov    %eax,-0x14(%ebp)
810004b3:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810004b7:	74 18                	je     810004d1 <_puts_r+0x74>
810004b9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810004bc:	8b 40 38             	mov    0x38(%eax),%eax
810004bf:	85 c0                	test   %eax,%eax
810004c1:	75 0e                	jne    810004d1 <_puts_r+0x74>
810004c3:	83 ec 0c             	sub    $0xc,%esp
810004c6:	ff 75 ec             	push   -0x14(%ebp)
810004c9:	e8 f0 03 00 00       	call   810008be <__sinit>
810004ce:	83 c4 10             	add    $0x10,%esp
810004d1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810004d4:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810004d8:	98                   	cwtl   
810004d9:	25 00 20 00 00       	and    $0x2000,%eax
810004de:	85 c0                	test   %eax,%eax
810004e0:	75 24                	jne    81000506 <_puts_r+0xa9>
810004e2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810004e5:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810004e9:	80 cc 20             	or     $0x20,%ah
810004ec:	89 c2                	mov    %eax,%edx
810004ee:	8b 45 f0             	mov    -0x10(%ebp),%eax
810004f1:	66 89 50 0c          	mov    %dx,0xc(%eax)
810004f5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810004f8:	8b 40 64             	mov    0x64(%eax),%eax
810004fb:	80 e4 df             	and    $0xdf,%ah
810004fe:	89 c2                	mov    %eax,%edx
81000500:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000503:	89 50 64             	mov    %edx,0x64(%eax)
81000506:	83 ec 04             	sub    $0x4,%esp
81000509:	8d 45 dc             	lea    -0x24(%ebp),%eax
8100050c:	50                   	push   %eax
8100050d:	ff 75 f0             	push   -0x10(%ebp)
81000510:	ff 75 08             	push   0x8(%ebp)
81000513:	e8 b3 04 00 00       	call   810009cb <__sfvwrite_r>
81000518:	83 c4 10             	add    $0x10,%esp
8100051b:	85 c0                	test   %eax,%eax
8100051d:	74 07                	je     81000526 <_puts_r+0xc9>
8100051f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000524:	eb 05                	jmp    8100052b <_puts_r+0xce>
81000526:	b8 0a 00 00 00       	mov    $0xa,%eax
8100052b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100052e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000531:	c9                   	leave  
81000532:	c3                   	ret    

81000533 <puts>:
81000533:	55                   	push   %ebp
81000534:	89 e5                	mov    %esp,%ebp
81000536:	83 ec 08             	sub    $0x8,%esp
81000539:	a1 24 4f 00 81       	mov    0x81004f24,%eax
8100053e:	83 ec 08             	sub    $0x8,%esp
81000541:	ff 75 08             	push   0x8(%ebp)
81000544:	50                   	push   %eax
81000545:	e8 13 ff ff ff       	call   8100045d <_puts_r>
8100054a:	83 c4 10             	add    $0x10,%esp
8100054d:	c9                   	leave  
8100054e:	c3                   	ret    
8100054f:	90                   	nop

81000550 <strlen>:
81000550:	55                   	push   %ebp
81000551:	89 e5                	mov    %esp,%ebp
81000553:	57                   	push   %edi
81000554:	8b 55 08             	mov    0x8(%ebp),%edx
81000557:	89 d7                	mov    %edx,%edi
81000559:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100055f:	74 25                	je     81000586 <L5>
81000561:	8a 0f                	mov    (%edi),%cl
81000563:	47                   	inc    %edi
81000564:	84 c9                	test   %cl,%cl
81000566:	74 56                	je     810005be <L15>
81000568:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100056e:	74 16                	je     81000586 <L5>
81000570:	8a 0f                	mov    (%edi),%cl
81000572:	47                   	inc    %edi
81000573:	84 c9                	test   %cl,%cl
81000575:	74 47                	je     810005be <L15>
81000577:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100057d:	74 07                	je     81000586 <L5>
8100057f:	8a 0f                	mov    (%edi),%cl
81000581:	47                   	inc    %edi
81000582:	84 c9                	test   %cl,%cl
81000584:	74 38                	je     810005be <L15>

81000586 <L5>:
81000586:	83 ef 04             	sub    $0x4,%edi
81000589:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81000590 <L10>:
81000590:	83 c7 04             	add    $0x4,%edi
81000593:	8b 0f                	mov    (%edi),%ecx
81000595:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
8100059b:	f7 d1                	not    %ecx
8100059d:	21 c8                	and    %ecx,%eax
8100059f:	a9 80 80 80 80       	test   $0x80808080,%eax
810005a4:	74 ea                	je     81000590 <L10>
810005a6:	f7 d1                	not    %ecx
810005a8:	47                   	inc    %edi
810005a9:	84 c9                	test   %cl,%cl
810005ab:	74 11                	je     810005be <L15>
810005ad:	47                   	inc    %edi
810005ae:	c1 e9 08             	shr    $0x8,%ecx
810005b1:	84 c9                	test   %cl,%cl
810005b3:	74 09                	je     810005be <L15>
810005b5:	47                   	inc    %edi
810005b6:	c1 e9 08             	shr    $0x8,%ecx
810005b9:	84 c9                	test   %cl,%cl
810005bb:	74 01                	je     810005be <L15>
810005bd:	47                   	inc    %edi

810005be <L15>:
810005be:	29 d7                	sub    %edx,%edi
810005c0:	8d 47 ff             	lea    -0x1(%edi),%eax
810005c3:	8d 65 fc             	lea    -0x4(%ebp),%esp
810005c6:	5f                   	pop    %edi
810005c7:	c9                   	leave  
810005c8:	c3                   	ret    

810005c9 <std>:
810005c9:	55                   	push   %ebp
810005ca:	89 e5                	mov    %esp,%ebp
810005cc:	83 ec 08             	sub    $0x8,%esp
810005cf:	8b 45 08             	mov    0x8(%ebp),%eax
810005d2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810005d8:	8b 45 08             	mov    0x8(%ebp),%eax
810005db:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810005e2:	8b 45 08             	mov    0x8(%ebp),%eax
810005e5:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810005ec:	8b 45 0c             	mov    0xc(%ebp),%eax
810005ef:	89 c2                	mov    %eax,%edx
810005f1:	8b 45 08             	mov    0x8(%ebp),%eax
810005f4:	66 89 50 0c          	mov    %dx,0xc(%eax)
810005f8:	8b 45 08             	mov    0x8(%ebp),%eax
810005fb:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000602:	8b 45 10             	mov    0x10(%ebp),%eax
81000605:	89 c2                	mov    %eax,%edx
81000607:	8b 45 08             	mov    0x8(%ebp),%eax
8100060a:	66 89 50 0e          	mov    %dx,0xe(%eax)
8100060e:	8b 45 08             	mov    0x8(%ebp),%eax
81000611:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000618:	8b 45 08             	mov    0x8(%ebp),%eax
8100061b:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000622:	8b 45 08             	mov    0x8(%ebp),%eax
81000625:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8100062c:	8b 45 08             	mov    0x8(%ebp),%eax
8100062f:	83 c0 5c             	add    $0x5c,%eax
81000632:	83 ec 04             	sub    $0x4,%esp
81000635:	6a 08                	push   $0x8
81000637:	6a 00                	push   $0x0
81000639:	50                   	push   %eax
8100063a:	e8 2e 15 00 00       	call   81001b6d <memset>
8100063f:	83 c4 10             	add    $0x10,%esp
81000642:	8b 45 08             	mov    0x8(%ebp),%eax
81000645:	8b 55 08             	mov    0x8(%ebp),%edx
81000648:	89 50 1c             	mov    %edx,0x1c(%eax)
8100064b:	8b 45 08             	mov    0x8(%ebp),%eax
8100064e:	c7 40 20 6a 30 00 81 	movl   $0x8100306a,0x20(%eax)
81000655:	8b 45 08             	mov    0x8(%ebp),%eax
81000658:	c7 40 24 b8 30 00 81 	movl   $0x810030b8,0x24(%eax)
8100065f:	8b 45 08             	mov    0x8(%ebp),%eax
81000662:	c7 40 28 13 31 00 81 	movl   $0x81003113,0x28(%eax)
81000669:	8b 45 08             	mov    0x8(%ebp),%eax
8100066c:	c7 40 2c 5d 31 00 81 	movl   $0x8100315d,0x2c(%eax)
81000673:	90                   	nop
81000674:	c9                   	leave  
81000675:	c3                   	ret    

81000676 <stdin_init>:
81000676:	55                   	push   %ebp
81000677:	89 e5                	mov    %esp,%ebp
81000679:	83 ec 08             	sub    $0x8,%esp
8100067c:	83 ec 04             	sub    $0x4,%esp
8100067f:	6a 00                	push   $0x0
81000681:	6a 04                	push   $0x4
81000683:	ff 75 08             	push   0x8(%ebp)
81000686:	e8 3e ff ff ff       	call   810005c9 <std>
8100068b:	83 c4 10             	add    $0x10,%esp
8100068e:	90                   	nop
8100068f:	c9                   	leave  
81000690:	c3                   	ret    

81000691 <stdout_init>:
81000691:	55                   	push   %ebp
81000692:	89 e5                	mov    %esp,%ebp
81000694:	83 ec 08             	sub    $0x8,%esp
81000697:	83 ec 04             	sub    $0x4,%esp
8100069a:	6a 01                	push   $0x1
8100069c:	6a 09                	push   $0x9
8100069e:	ff 75 08             	push   0x8(%ebp)
810006a1:	e8 23 ff ff ff       	call   810005c9 <std>
810006a6:	83 c4 10             	add    $0x10,%esp
810006a9:	90                   	nop
810006aa:	c9                   	leave  
810006ab:	c3                   	ret    

810006ac <stderr_init>:
810006ac:	55                   	push   %ebp
810006ad:	89 e5                	mov    %esp,%ebp
810006af:	83 ec 08             	sub    $0x8,%esp
810006b2:	83 ec 04             	sub    $0x4,%esp
810006b5:	6a 02                	push   $0x2
810006b7:	6a 12                	push   $0x12
810006b9:	ff 75 08             	push   0x8(%ebp)
810006bc:	e8 08 ff ff ff       	call   810005c9 <std>
810006c1:	83 c4 10             	add    $0x10,%esp
810006c4:	90                   	nop
810006c5:	c9                   	leave  
810006c6:	c3                   	ret    

810006c7 <__sfmoreglue>:
810006c7:	55                   	push   %ebp
810006c8:	89 e5                	mov    %esp,%ebp
810006ca:	53                   	push   %ebx
810006cb:	83 ec 14             	sub    $0x14,%esp
810006ce:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810006d1:	8d 43 ff             	lea    -0x1(%ebx),%eax
810006d4:	6b c0 68             	imul   $0x68,%eax,%eax
810006d7:	83 c0 74             	add    $0x74,%eax
810006da:	83 ec 08             	sub    $0x8,%esp
810006dd:	50                   	push   %eax
810006de:	ff 75 08             	push   0x8(%ebp)
810006e1:	e8 e9 0a 00 00       	call   810011cf <_malloc_r>
810006e6:	83 c4 10             	add    $0x10,%esp
810006e9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810006ec:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810006f0:	75 07                	jne    810006f9 <__sfmoreglue+0x32>
810006f2:	b8 00 00 00 00       	mov    $0x0,%eax
810006f7:	eb 38                	jmp    81000731 <__sfmoreglue+0x6a>
810006f9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006fc:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000702:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000705:	89 58 04             	mov    %ebx,0x4(%eax)
81000708:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100070b:	8d 50 0c             	lea    0xc(%eax),%edx
8100070e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000711:	89 50 08             	mov    %edx,0x8(%eax)
81000714:	89 d8                	mov    %ebx,%eax
81000716:	6b c0 68             	imul   $0x68,%eax,%eax
81000719:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100071c:	83 c2 0c             	add    $0xc,%edx
8100071f:	83 ec 04             	sub    $0x4,%esp
81000722:	50                   	push   %eax
81000723:	6a 00                	push   $0x0
81000725:	52                   	push   %edx
81000726:	e8 42 14 00 00       	call   81001b6d <memset>
8100072b:	83 c4 10             	add    $0x10,%esp
8100072e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000731:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000734:	c9                   	leave  
81000735:	c3                   	ret    

81000736 <__sfp>:
81000736:	55                   	push   %ebp
81000737:	89 e5                	mov    %esp,%ebp
81000739:	83 ec 18             	sub    $0x18,%esp
8100073c:	e8 16 02 00 00       	call   81000957 <__sfp_lock_acquire>
81000741:	a1 94 47 00 81       	mov    0x81004794,%eax
81000746:	8b 40 38             	mov    0x38(%eax),%eax
81000749:	85 c0                	test   %eax,%eax
8100074b:	75 11                	jne    8100075e <__sfp+0x28>
8100074d:	a1 94 47 00 81       	mov    0x81004794,%eax
81000752:	83 ec 0c             	sub    $0xc,%esp
81000755:	50                   	push   %eax
81000756:	e8 63 01 00 00       	call   810008be <__sinit>
8100075b:	83 c4 10             	add    $0x10,%esp
8100075e:	a1 94 47 00 81       	mov    0x81004794,%eax
81000763:	05 e0 02 00 00       	add    $0x2e0,%eax
81000768:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100076b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100076e:	8b 40 08             	mov    0x8(%eax),%eax
81000771:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000774:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000777:	8b 40 04             	mov    0x4(%eax),%eax
8100077a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100077d:	eb 10                	jmp    8100078f <__sfp+0x59>
8100077f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000782:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000786:	66 85 c0             	test   %ax,%ax
81000789:	74 58                	je     810007e3 <__sfp+0xad>
8100078b:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
8100078f:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81000793:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000797:	79 e6                	jns    8100077f <__sfp+0x49>
81000799:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100079c:	8b 00                	mov    (%eax),%eax
8100079e:	85 c0                	test   %eax,%eax
810007a0:	75 1e                	jne    810007c0 <__sfp+0x8a>
810007a2:	83 ec 08             	sub    $0x8,%esp
810007a5:	6a 04                	push   $0x4
810007a7:	ff 75 08             	push   0x8(%ebp)
810007aa:	e8 18 ff ff ff       	call   810006c7 <__sfmoreglue>
810007af:	83 c4 10             	add    $0x10,%esp
810007b2:	8b 55 ec             	mov    -0x14(%ebp),%edx
810007b5:	89 02                	mov    %eax,(%edx)
810007b7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810007ba:	8b 00                	mov    (%eax),%eax
810007bc:	85 c0                	test   %eax,%eax
810007be:	74 0a                	je     810007ca <__sfp+0x94>
810007c0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810007c3:	8b 00                	mov    (%eax),%eax
810007c5:	89 45 ec             	mov    %eax,-0x14(%ebp)
810007c8:	eb a1                	jmp    8100076b <__sfp+0x35>
810007ca:	90                   	nop
810007cb:	e8 8d 01 00 00       	call   8100095d <__sfp_lock_release>
810007d0:	8b 45 08             	mov    0x8(%ebp),%eax
810007d3:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810007d9:	b8 00 00 00 00       	mov    $0x0,%eax
810007de:	e9 9e 00 00 00       	jmp    81000881 <__sfp+0x14b>
810007e3:	90                   	nop
810007e4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007e7:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
810007ed:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007f0:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
810007f6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007f9:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000800:	e8 58 01 00 00       	call   8100095d <__sfp_lock_release>
81000805:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000808:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100080e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000811:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000818:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100081b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000822:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000825:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100082c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100082f:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000836:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000839:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000840:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000843:	83 c0 5c             	add    $0x5c,%eax
81000846:	83 ec 04             	sub    $0x4,%esp
81000849:	6a 08                	push   $0x8
8100084b:	6a 00                	push   $0x0
8100084d:	50                   	push   %eax
8100084e:	e8 1a 13 00 00       	call   81001b6d <memset>
81000853:	83 c4 10             	add    $0x10,%esp
81000856:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000859:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81000860:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000863:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
8100086a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100086d:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81000874:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000877:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
8100087e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000881:	c9                   	leave  
81000882:	c3                   	ret    

81000883 <_cleanup_r>:
81000883:	55                   	push   %ebp
81000884:	89 e5                	mov    %esp,%ebp
81000886:	83 ec 18             	sub    $0x18,%esp
81000889:	c7 45 f4 96 34 00 81 	movl   $0x81003496,-0xc(%ebp)
81000890:	83 ec 08             	sub    $0x8,%esp
81000893:	ff 75 f4             	push   -0xc(%ebp)
81000896:	ff 75 08             	push   0x8(%ebp)
81000899:	e8 33 06 00 00       	call   81000ed1 <_fwalk_reent>
8100089e:	83 c4 10             	add    $0x10,%esp
810008a1:	90                   	nop
810008a2:	c9                   	leave  
810008a3:	c3                   	ret    

810008a4 <_cleanup>:
810008a4:	55                   	push   %ebp
810008a5:	89 e5                	mov    %esp,%ebp
810008a7:	83 ec 08             	sub    $0x8,%esp
810008aa:	a1 94 47 00 81       	mov    0x81004794,%eax
810008af:	83 ec 0c             	sub    $0xc,%esp
810008b2:	50                   	push   %eax
810008b3:	e8 cb ff ff ff       	call   81000883 <_cleanup_r>
810008b8:	83 c4 10             	add    $0x10,%esp
810008bb:	90                   	nop
810008bc:	c9                   	leave  
810008bd:	c3                   	ret    

810008be <__sinit>:
810008be:	55                   	push   %ebp
810008bf:	89 e5                	mov    %esp,%ebp
810008c1:	83 ec 08             	sub    $0x8,%esp
810008c4:	e8 9a 00 00 00       	call   81000963 <__sinit_lock_acquire>
810008c9:	8b 45 08             	mov    0x8(%ebp),%eax
810008cc:	8b 40 38             	mov    0x38(%eax),%eax
810008cf:	85 c0                	test   %eax,%eax
810008d1:	74 07                	je     810008da <__sinit+0x1c>
810008d3:	e8 91 00 00 00       	call   81000969 <__sinit_lock_release>
810008d8:	eb 7b                	jmp    81000955 <__sinit+0x97>
810008da:	8b 45 08             	mov    0x8(%ebp),%eax
810008dd:	c7 40 3c 83 08 00 81 	movl   $0x81000883,0x3c(%eax)
810008e4:	8b 45 08             	mov    0x8(%ebp),%eax
810008e7:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
810008ee:	00 00 00 
810008f1:	8b 45 08             	mov    0x8(%ebp),%eax
810008f4:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
810008fb:	00 00 00 
810008fe:	8b 45 08             	mov    0x8(%ebp),%eax
81000901:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
81000907:	8b 45 08             	mov    0x8(%ebp),%eax
8100090a:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81000910:	8b 45 08             	mov    0x8(%ebp),%eax
81000913:	8b 40 04             	mov    0x4(%eax),%eax
81000916:	83 ec 0c             	sub    $0xc,%esp
81000919:	50                   	push   %eax
8100091a:	e8 57 fd ff ff       	call   81000676 <stdin_init>
8100091f:	83 c4 10             	add    $0x10,%esp
81000922:	8b 45 08             	mov    0x8(%ebp),%eax
81000925:	8b 40 08             	mov    0x8(%eax),%eax
81000928:	83 ec 0c             	sub    $0xc,%esp
8100092b:	50                   	push   %eax
8100092c:	e8 60 fd ff ff       	call   81000691 <stdout_init>
81000931:	83 c4 10             	add    $0x10,%esp
81000934:	8b 45 08             	mov    0x8(%ebp),%eax
81000937:	8b 40 0c             	mov    0xc(%eax),%eax
8100093a:	83 ec 0c             	sub    $0xc,%esp
8100093d:	50                   	push   %eax
8100093e:	e8 69 fd ff ff       	call   810006ac <stderr_init>
81000943:	83 c4 10             	add    $0x10,%esp
81000946:	8b 45 08             	mov    0x8(%ebp),%eax
81000949:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81000950:	e8 14 00 00 00       	call   81000969 <__sinit_lock_release>
81000955:	c9                   	leave  
81000956:	c3                   	ret    

81000957 <__sfp_lock_acquire>:
81000957:	55                   	push   %ebp
81000958:	89 e5                	mov    %esp,%ebp
8100095a:	90                   	nop
8100095b:	5d                   	pop    %ebp
8100095c:	c3                   	ret    

8100095d <__sfp_lock_release>:
8100095d:	55                   	push   %ebp
8100095e:	89 e5                	mov    %esp,%ebp
81000960:	90                   	nop
81000961:	5d                   	pop    %ebp
81000962:	c3                   	ret    

81000963 <__sinit_lock_acquire>:
81000963:	55                   	push   %ebp
81000964:	89 e5                	mov    %esp,%ebp
81000966:	90                   	nop
81000967:	5d                   	pop    %ebp
81000968:	c3                   	ret    

81000969 <__sinit_lock_release>:
81000969:	55                   	push   %ebp
8100096a:	89 e5                	mov    %esp,%ebp
8100096c:	90                   	nop
8100096d:	5d                   	pop    %ebp
8100096e:	c3                   	ret    

8100096f <__fp_lock>:
8100096f:	55                   	push   %ebp
81000970:	89 e5                	mov    %esp,%ebp
81000972:	b8 00 00 00 00       	mov    $0x0,%eax
81000977:	5d                   	pop    %ebp
81000978:	c3                   	ret    

81000979 <__fp_unlock>:
81000979:	55                   	push   %ebp
8100097a:	89 e5                	mov    %esp,%ebp
8100097c:	b8 00 00 00 00       	mov    $0x0,%eax
81000981:	5d                   	pop    %ebp
81000982:	c3                   	ret    

81000983 <__fp_lock_all>:
81000983:	55                   	push   %ebp
81000984:	89 e5                	mov    %esp,%ebp
81000986:	83 ec 08             	sub    $0x8,%esp
81000989:	e8 c9 ff ff ff       	call   81000957 <__sfp_lock_acquire>
8100098e:	a1 24 4f 00 81       	mov    0x81004f24,%eax
81000993:	83 ec 08             	sub    $0x8,%esp
81000996:	68 6f 09 00 81       	push   $0x8100096f
8100099b:	50                   	push   %eax
8100099c:	e8 c8 04 00 00       	call   81000e69 <_fwalk>
810009a1:	83 c4 10             	add    $0x10,%esp
810009a4:	90                   	nop
810009a5:	c9                   	leave  
810009a6:	c3                   	ret    

810009a7 <__fp_unlock_all>:
810009a7:	55                   	push   %ebp
810009a8:	89 e5                	mov    %esp,%ebp
810009aa:	83 ec 08             	sub    $0x8,%esp
810009ad:	a1 24 4f 00 81       	mov    0x81004f24,%eax
810009b2:	83 ec 08             	sub    $0x8,%esp
810009b5:	68 79 09 00 81       	push   $0x81000979
810009ba:	50                   	push   %eax
810009bb:	e8 a9 04 00 00       	call   81000e69 <_fwalk>
810009c0:	83 c4 10             	add    $0x10,%esp
810009c3:	e8 95 ff ff ff       	call   8100095d <__sfp_lock_release>
810009c8:	90                   	nop
810009c9:	c9                   	leave  
810009ca:	c3                   	ret    

810009cb <__sfvwrite_r>:
810009cb:	55                   	push   %ebp
810009cc:	89 e5                	mov    %esp,%ebp
810009ce:	57                   	push   %edi
810009cf:	56                   	push   %esi
810009d0:	53                   	push   %ebx
810009d1:	83 ec 3c             	sub    $0x3c,%esp
810009d4:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810009d7:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
810009de:	8b 45 10             	mov    0x10(%ebp),%eax
810009e1:	8b 78 08             	mov    0x8(%eax),%edi
810009e4:	85 ff                	test   %edi,%edi
810009e6:	75 0a                	jne    810009f2 <__sfvwrite_r+0x27>
810009e8:	b8 00 00 00 00       	mov    $0x0,%eax
810009ed:	e9 6f 04 00 00       	jmp    81000e61 <__sfvwrite_r+0x496>
810009f2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810009f6:	98                   	cwtl   
810009f7:	83 e0 08             	and    $0x8,%eax
810009fa:	85 c0                	test   %eax,%eax
810009fc:	74 07                	je     81000a05 <__sfvwrite_r+0x3a>
810009fe:	8b 43 10             	mov    0x10(%ebx),%eax
81000a01:	85 c0                	test   %eax,%eax
81000a03:	75 1d                	jne    81000a22 <__sfvwrite_r+0x57>
81000a05:	83 ec 08             	sub    $0x8,%esp
81000a08:	53                   	push   %ebx
81000a09:	ff 75 08             	push   0x8(%ebp)
81000a0c:	e8 ea 28 00 00       	call   810032fb <__swsetup_r>
81000a11:	83 c4 10             	add    $0x10,%esp
81000a14:	85 c0                	test   %eax,%eax
81000a16:	74 0a                	je     81000a22 <__sfvwrite_r+0x57>
81000a18:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000a1d:	e9 3f 04 00 00       	jmp    81000e61 <__sfvwrite_r+0x496>
81000a22:	8b 45 10             	mov    0x10(%ebp),%eax
81000a25:	8b 00                	mov    (%eax),%eax
81000a27:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000a2a:	bf 00 00 00 00       	mov    $0x0,%edi
81000a2f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a33:	98                   	cwtl   
81000a34:	83 e0 02             	and    $0x2,%eax
81000a37:	85 c0                	test   %eax,%eax
81000a39:	74 68                	je     81000aa3 <__sfvwrite_r+0xd8>
81000a3b:	eb 11                	jmp    81000a4e <__sfvwrite_r+0x83>
81000a3d:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000a40:	8b 08                	mov    (%eax),%ecx
81000a42:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000a45:	8b 78 04             	mov    0x4(%eax),%edi
81000a48:	83 c0 08             	add    $0x8,%eax
81000a4b:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000a4e:	85 ff                	test   %edi,%edi
81000a50:	74 eb                	je     81000a3d <__sfvwrite_r+0x72>
81000a52:	8b 4b 24             	mov    0x24(%ebx),%ecx
81000a55:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
81000a5a:	39 c7                	cmp    %eax,%edi
81000a5c:	0f 46 c7             	cmovbe %edi,%eax
81000a5f:	89 c2                	mov    %eax,%edx
81000a61:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000a64:	52                   	push   %edx
81000a65:	ff 75 c4             	push   -0x3c(%ebp)
81000a68:	50                   	push   %eax
81000a69:	ff 75 08             	push   0x8(%ebp)
81000a6c:	ff d1                	call   *%ecx
81000a6e:	83 c4 10             	add    $0x10,%esp
81000a71:	89 c6                	mov    %eax,%esi
81000a73:	85 f6                	test   %esi,%esi
81000a75:	0f 8e cf 03 00 00    	jle    81000e4a <__sfvwrite_r+0x47f>
81000a7b:	89 f0                	mov    %esi,%eax
81000a7d:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000a80:	89 f0                	mov    %esi,%eax
81000a82:	29 c7                	sub    %eax,%edi
81000a84:	8b 45 10             	mov    0x10(%ebp),%eax
81000a87:	8b 40 08             	mov    0x8(%eax),%eax
81000a8a:	89 f2                	mov    %esi,%edx
81000a8c:	29 d0                	sub    %edx,%eax
81000a8e:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000a91:	89 41 08             	mov    %eax,0x8(%ecx)
81000a94:	8b 45 10             	mov    0x10(%ebp),%eax
81000a97:	8b 40 08             	mov    0x8(%eax),%eax
81000a9a:	85 c0                	test   %eax,%eax
81000a9c:	75 b0                	jne    81000a4e <__sfvwrite_r+0x83>
81000a9e:	e9 a0 03 00 00       	jmp    81000e43 <__sfvwrite_r+0x478>
81000aa3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000aa7:	98                   	cwtl   
81000aa8:	83 e0 01             	and    $0x1,%eax
81000aab:	85 c0                	test   %eax,%eax
81000aad:	0f 85 44 02 00 00    	jne    81000cf7 <__sfvwrite_r+0x32c>
81000ab3:	eb 11                	jmp    81000ac6 <__sfvwrite_r+0xfb>
81000ab5:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000ab8:	8b 08                	mov    (%eax),%ecx
81000aba:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000abd:	8b 78 04             	mov    0x4(%eax),%edi
81000ac0:	83 c0 08             	add    $0x8,%eax
81000ac3:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000ac6:	85 ff                	test   %edi,%edi
81000ac8:	74 eb                	je     81000ab5 <__sfvwrite_r+0xea>
81000aca:	8b 73 08             	mov    0x8(%ebx),%esi
81000acd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ad1:	98                   	cwtl   
81000ad2:	25 00 02 00 00       	and    $0x200,%eax
81000ad7:	85 c0                	test   %eax,%eax
81000ad9:	0f 84 4f 01 00 00    	je     81000c2e <__sfvwrite_r+0x263>
81000adf:	89 f0                	mov    %esi,%eax
81000ae1:	39 c7                	cmp    %eax,%edi
81000ae3:	0f 82 12 01 00 00    	jb     81000bfb <__sfvwrite_r+0x230>
81000ae9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000aed:	98                   	cwtl   
81000aee:	25 80 04 00 00       	and    $0x480,%eax
81000af3:	85 c0                	test   %eax,%eax
81000af5:	0f 84 00 01 00 00    	je     81000bfb <__sfvwrite_r+0x230>
81000afb:	8b 03                	mov    (%ebx),%eax
81000afd:	8b 53 10             	mov    0x10(%ebx),%edx
81000b00:	29 d0                	sub    %edx,%eax
81000b02:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000b05:	8b 53 14             	mov    0x14(%ebx),%edx
81000b08:	89 d0                	mov    %edx,%eax
81000b0a:	01 c0                	add    %eax,%eax
81000b0c:	01 d0                	add    %edx,%eax
81000b0e:	89 c2                	mov    %eax,%edx
81000b10:	c1 ea 1f             	shr    $0x1f,%edx
81000b13:	01 d0                	add    %edx,%eax
81000b15:	d1 f8                	sar    %eax
81000b17:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000b1a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000b1d:	01 f8                	add    %edi,%eax
81000b1f:	8d 50 01             	lea    0x1(%eax),%edx
81000b22:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000b25:	39 c2                	cmp    %eax,%edx
81000b27:	76 0b                	jbe    81000b34 <__sfvwrite_r+0x169>
81000b29:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000b2c:	01 f8                	add    %edi,%eax
81000b2e:	83 c0 01             	add    $0x1,%eax
81000b31:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000b34:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b38:	98                   	cwtl   
81000b39:	25 00 04 00 00       	and    $0x400,%eax
81000b3e:	85 c0                	test   %eax,%eax
81000b40:	74 4f                	je     81000b91 <__sfvwrite_r+0x1c6>
81000b42:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000b45:	83 ec 08             	sub    $0x8,%esp
81000b48:	50                   	push   %eax
81000b49:	ff 75 08             	push   0x8(%ebp)
81000b4c:	e8 7e 06 00 00       	call   810011cf <_malloc_r>
81000b51:	83 c4 10             	add    $0x10,%esp
81000b54:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000b57:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000b5b:	75 0e                	jne    81000b6b <__sfvwrite_r+0x1a0>
81000b5d:	8b 45 08             	mov    0x8(%ebp),%eax
81000b60:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000b66:	e9 e6 02 00 00       	jmp    81000e51 <__sfvwrite_r+0x486>
81000b6b:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000b6e:	8b 43 10             	mov    0x10(%ebx),%eax
81000b71:	83 ec 04             	sub    $0x4,%esp
81000b74:	52                   	push   %edx
81000b75:	50                   	push   %eax
81000b76:	ff 75 dc             	push   -0x24(%ebp)
81000b79:	e8 1a 0f 00 00       	call   81001a98 <memcpy>
81000b7e:	83 c4 10             	add    $0x10,%esp
81000b81:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b85:	66 25 7f fb          	and    $0xfb7f,%ax
81000b89:	0c 80                	or     $0x80,%al
81000b8b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000b8f:	eb 49                	jmp    81000bda <__sfvwrite_r+0x20f>
81000b91:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000b94:	8b 43 10             	mov    0x10(%ebx),%eax
81000b97:	83 ec 04             	sub    $0x4,%esp
81000b9a:	52                   	push   %edx
81000b9b:	50                   	push   %eax
81000b9c:	ff 75 08             	push   0x8(%ebp)
81000b9f:	e8 ac 1b 00 00       	call   81002750 <_realloc_r>
81000ba4:	83 c4 10             	add    $0x10,%esp
81000ba7:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000baa:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000bae:	75 2a                	jne    81000bda <__sfvwrite_r+0x20f>
81000bb0:	8b 43 10             	mov    0x10(%ebx),%eax
81000bb3:	83 ec 08             	sub    $0x8,%esp
81000bb6:	50                   	push   %eax
81000bb7:	ff 75 08             	push   0x8(%ebp)
81000bba:	e8 67 2e 00 00       	call   81003a26 <_free_r>
81000bbf:	83 c4 10             	add    $0x10,%esp
81000bc2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000bc6:	24 7f                	and    $0x7f,%al
81000bc8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000bcc:	8b 45 08             	mov    0x8(%ebp),%eax
81000bcf:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000bd5:	e9 77 02 00 00       	jmp    81000e51 <__sfvwrite_r+0x486>
81000bda:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000bdd:	89 43 10             	mov    %eax,0x10(%ebx)
81000be0:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000be3:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000be6:	01 d0                	add    %edx,%eax
81000be8:	89 03                	mov    %eax,(%ebx)
81000bea:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000bed:	89 43 14             	mov    %eax,0x14(%ebx)
81000bf0:	89 fe                	mov    %edi,%esi
81000bf2:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000bf5:	2b 45 d0             	sub    -0x30(%ebp),%eax
81000bf8:	89 43 08             	mov    %eax,0x8(%ebx)
81000bfb:	89 f0                	mov    %esi,%eax
81000bfd:	39 c7                	cmp    %eax,%edi
81000bff:	73 02                	jae    81000c03 <__sfvwrite_r+0x238>
81000c01:	89 fe                	mov    %edi,%esi
81000c03:	89 f2                	mov    %esi,%edx
81000c05:	8b 03                	mov    (%ebx),%eax
81000c07:	83 ec 04             	sub    $0x4,%esp
81000c0a:	52                   	push   %edx
81000c0b:	ff 75 c4             	push   -0x3c(%ebp)
81000c0e:	50                   	push   %eax
81000c0f:	e8 cc 0e 00 00       	call   81001ae0 <memmove>
81000c14:	83 c4 10             	add    $0x10,%esp
81000c17:	8b 43 08             	mov    0x8(%ebx),%eax
81000c1a:	29 f0                	sub    %esi,%eax
81000c1c:	89 43 08             	mov    %eax,0x8(%ebx)
81000c1f:	8b 03                	mov    (%ebx),%eax
81000c21:	89 f2                	mov    %esi,%edx
81000c23:	01 d0                	add    %edx,%eax
81000c25:	89 03                	mov    %eax,(%ebx)
81000c27:	89 fe                	mov    %edi,%esi
81000c29:	e9 9d 00 00 00       	jmp    81000ccb <__sfvwrite_r+0x300>
81000c2e:	8b 13                	mov    (%ebx),%edx
81000c30:	8b 43 10             	mov    0x10(%ebx),%eax
81000c33:	39 c2                	cmp    %eax,%edx
81000c35:	77 07                	ja     81000c3e <__sfvwrite_r+0x273>
81000c37:	8b 43 14             	mov    0x14(%ebx),%eax
81000c3a:	39 c7                	cmp    %eax,%edi
81000c3c:	73 4c                	jae    81000c8a <__sfvwrite_r+0x2bf>
81000c3e:	89 f0                	mov    %esi,%eax
81000c40:	39 c7                	cmp    %eax,%edi
81000c42:	0f 46 c7             	cmovbe %edi,%eax
81000c45:	89 c6                	mov    %eax,%esi
81000c47:	89 f2                	mov    %esi,%edx
81000c49:	8b 03                	mov    (%ebx),%eax
81000c4b:	83 ec 04             	sub    $0x4,%esp
81000c4e:	52                   	push   %edx
81000c4f:	ff 75 c4             	push   -0x3c(%ebp)
81000c52:	50                   	push   %eax
81000c53:	e8 88 0e 00 00       	call   81001ae0 <memmove>
81000c58:	83 c4 10             	add    $0x10,%esp
81000c5b:	8b 43 08             	mov    0x8(%ebx),%eax
81000c5e:	29 f0                	sub    %esi,%eax
81000c60:	89 43 08             	mov    %eax,0x8(%ebx)
81000c63:	8b 03                	mov    (%ebx),%eax
81000c65:	89 f2                	mov    %esi,%edx
81000c67:	01 d0                	add    %edx,%eax
81000c69:	89 03                	mov    %eax,(%ebx)
81000c6b:	8b 43 08             	mov    0x8(%ebx),%eax
81000c6e:	85 c0                	test   %eax,%eax
81000c70:	75 58                	jne    81000cca <__sfvwrite_r+0x2ff>
81000c72:	83 ec 08             	sub    $0x8,%esp
81000c75:	53                   	push   %ebx
81000c76:	ff 75 08             	push   0x8(%ebp)
81000c79:	e8 62 2b 00 00       	call   810037e0 <_fflush_r>
81000c7e:	83 c4 10             	add    $0x10,%esp
81000c81:	85 c0                	test   %eax,%eax
81000c83:	74 45                	je     81000cca <__sfvwrite_r+0x2ff>
81000c85:	e9 c7 01 00 00       	jmp    81000e51 <__sfvwrite_r+0x486>
81000c8a:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81000c90:	77 04                	ja     81000c96 <__sfvwrite_r+0x2cb>
81000c92:	89 f8                	mov    %edi,%eax
81000c94:	eb 05                	jmp    81000c9b <__sfvwrite_r+0x2d0>
81000c96:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81000c9b:	8b 4b 14             	mov    0x14(%ebx),%ecx
81000c9e:	99                   	cltd   
81000c9f:	f7 f9                	idiv   %ecx
81000ca1:	89 c2                	mov    %eax,%edx
81000ca3:	8b 43 14             	mov    0x14(%ebx),%eax
81000ca6:	89 d6                	mov    %edx,%esi
81000ca8:	0f af f0             	imul   %eax,%esi
81000cab:	8b 53 24             	mov    0x24(%ebx),%edx
81000cae:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000cb1:	56                   	push   %esi
81000cb2:	ff 75 c4             	push   -0x3c(%ebp)
81000cb5:	50                   	push   %eax
81000cb6:	ff 75 08             	push   0x8(%ebp)
81000cb9:	ff d2                	call   *%edx
81000cbb:	83 c4 10             	add    $0x10,%esp
81000cbe:	89 c6                	mov    %eax,%esi
81000cc0:	85 f6                	test   %esi,%esi
81000cc2:	0f 8e 85 01 00 00    	jle    81000e4d <__sfvwrite_r+0x482>
81000cc8:	eb 01                	jmp    81000ccb <__sfvwrite_r+0x300>
81000cca:	90                   	nop
81000ccb:	89 f0                	mov    %esi,%eax
81000ccd:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000cd0:	89 f0                	mov    %esi,%eax
81000cd2:	29 c7                	sub    %eax,%edi
81000cd4:	8b 45 10             	mov    0x10(%ebp),%eax
81000cd7:	8b 40 08             	mov    0x8(%eax),%eax
81000cda:	89 f2                	mov    %esi,%edx
81000cdc:	29 d0                	sub    %edx,%eax
81000cde:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000ce1:	89 41 08             	mov    %eax,0x8(%ecx)
81000ce4:	8b 45 10             	mov    0x10(%ebp),%eax
81000ce7:	8b 40 08             	mov    0x8(%eax),%eax
81000cea:	85 c0                	test   %eax,%eax
81000cec:	0f 85 d4 fd ff ff    	jne    81000ac6 <__sfvwrite_r+0xfb>
81000cf2:	e9 4c 01 00 00       	jmp    81000e43 <__sfvwrite_r+0x478>
81000cf7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000cfe:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000d05:	eb 18                	jmp    81000d1f <__sfvwrite_r+0x354>
81000d07:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000d0e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000d11:	8b 08                	mov    (%eax),%ecx
81000d13:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000d16:	8b 78 04             	mov    0x4(%eax),%edi
81000d19:	83 c0 08             	add    $0x8,%eax
81000d1c:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000d1f:	85 ff                	test   %edi,%edi
81000d21:	74 e4                	je     81000d07 <__sfvwrite_r+0x33c>
81000d23:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000d27:	75 32                	jne    81000d5b <__sfvwrite_r+0x390>
81000d29:	83 ec 04             	sub    $0x4,%esp
81000d2c:	57                   	push   %edi
81000d2d:	6a 0a                	push   $0xa
81000d2f:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81000d32:	56                   	push   %esi
81000d33:	e8 c8 0c 00 00       	call   81001a00 <memchr>
81000d38:	83 c4 10             	add    $0x10,%esp
81000d3b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81000d3e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81000d42:	74 0a                	je     81000d4e <__sfvwrite_r+0x383>
81000d44:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000d47:	83 c0 01             	add    $0x1,%eax
81000d4a:	29 f0                	sub    %esi,%eax
81000d4c:	eb 03                	jmp    81000d51 <__sfvwrite_r+0x386>
81000d4e:	8d 47 01             	lea    0x1(%edi),%eax
81000d51:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000d54:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81000d5b:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000d5e:	39 c7                	cmp    %eax,%edi
81000d60:	0f 46 c7             	cmovbe %edi,%eax
81000d63:	89 c1                	mov    %eax,%ecx
81000d65:	8b 53 08             	mov    0x8(%ebx),%edx
81000d68:	8b 43 14             	mov    0x14(%ebx),%eax
81000d6b:	8d 34 02             	lea    (%edx,%eax,1),%esi
81000d6e:	8b 13                	mov    (%ebx),%edx
81000d70:	8b 43 10             	mov    0x10(%ebx),%eax
81000d73:	39 c2                	cmp    %eax,%edx
81000d75:	76 38                	jbe    81000daf <__sfvwrite_r+0x3e4>
81000d77:	39 f1                	cmp    %esi,%ecx
81000d79:	7e 34                	jle    81000daf <__sfvwrite_r+0x3e4>
81000d7b:	89 f2                	mov    %esi,%edx
81000d7d:	8b 03                	mov    (%ebx),%eax
81000d7f:	83 ec 04             	sub    $0x4,%esp
81000d82:	52                   	push   %edx
81000d83:	ff 75 c4             	push   -0x3c(%ebp)
81000d86:	50                   	push   %eax
81000d87:	e8 54 0d 00 00       	call   81001ae0 <memmove>
81000d8c:	83 c4 10             	add    $0x10,%esp
81000d8f:	8b 03                	mov    (%ebx),%eax
81000d91:	89 f2                	mov    %esi,%edx
81000d93:	01 d0                	add    %edx,%eax
81000d95:	89 03                	mov    %eax,(%ebx)
81000d97:	83 ec 08             	sub    $0x8,%esp
81000d9a:	53                   	push   %ebx
81000d9b:	ff 75 08             	push   0x8(%ebp)
81000d9e:	e8 3d 2a 00 00       	call   810037e0 <_fflush_r>
81000da3:	83 c4 10             	add    $0x10,%esp
81000da6:	85 c0                	test   %eax,%eax
81000da8:	74 4f                	je     81000df9 <__sfvwrite_r+0x42e>
81000daa:	e9 a2 00 00 00       	jmp    81000e51 <__sfvwrite_r+0x486>
81000daf:	8b 73 14             	mov    0x14(%ebx),%esi
81000db2:	89 c8                	mov    %ecx,%eax
81000db4:	39 c6                	cmp    %eax,%esi
81000db6:	7f 1b                	jg     81000dd3 <__sfvwrite_r+0x408>
81000db8:	8b 53 24             	mov    0x24(%ebx),%edx
81000dbb:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000dbe:	56                   	push   %esi
81000dbf:	ff 75 c4             	push   -0x3c(%ebp)
81000dc2:	50                   	push   %eax
81000dc3:	ff 75 08             	push   0x8(%ebp)
81000dc6:	ff d2                	call   *%edx
81000dc8:	83 c4 10             	add    $0x10,%esp
81000dcb:	89 c6                	mov    %eax,%esi
81000dcd:	85 f6                	test   %esi,%esi
81000dcf:	7f 28                	jg     81000df9 <__sfvwrite_r+0x42e>
81000dd1:	eb 7e                	jmp    81000e51 <__sfvwrite_r+0x486>
81000dd3:	89 ce                	mov    %ecx,%esi
81000dd5:	89 f2                	mov    %esi,%edx
81000dd7:	8b 03                	mov    (%ebx),%eax
81000dd9:	83 ec 04             	sub    $0x4,%esp
81000ddc:	52                   	push   %edx
81000ddd:	ff 75 c4             	push   -0x3c(%ebp)
81000de0:	50                   	push   %eax
81000de1:	e8 fa 0c 00 00       	call   81001ae0 <memmove>
81000de6:	83 c4 10             	add    $0x10,%esp
81000de9:	8b 43 08             	mov    0x8(%ebx),%eax
81000dec:	29 f0                	sub    %esi,%eax
81000dee:	89 43 08             	mov    %eax,0x8(%ebx)
81000df1:	8b 03                	mov    (%ebx),%eax
81000df3:	89 f2                	mov    %esi,%edx
81000df5:	01 d0                	add    %edx,%eax
81000df7:	89 03                	mov    %eax,(%ebx)
81000df9:	29 75 e0             	sub    %esi,-0x20(%ebp)
81000dfc:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000e00:	75 1a                	jne    81000e1c <__sfvwrite_r+0x451>
81000e02:	83 ec 08             	sub    $0x8,%esp
81000e05:	53                   	push   %ebx
81000e06:	ff 75 08             	push   0x8(%ebp)
81000e09:	e8 d2 29 00 00       	call   810037e0 <_fflush_r>
81000e0e:	83 c4 10             	add    $0x10,%esp
81000e11:	85 c0                	test   %eax,%eax
81000e13:	75 3b                	jne    81000e50 <__sfvwrite_r+0x485>
81000e15:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000e1c:	89 f0                	mov    %esi,%eax
81000e1e:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000e21:	89 f0                	mov    %esi,%eax
81000e23:	29 c7                	sub    %eax,%edi
81000e25:	8b 45 10             	mov    0x10(%ebp),%eax
81000e28:	8b 40 08             	mov    0x8(%eax),%eax
81000e2b:	89 f2                	mov    %esi,%edx
81000e2d:	29 d0                	sub    %edx,%eax
81000e2f:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000e32:	89 41 08             	mov    %eax,0x8(%ecx)
81000e35:	8b 45 10             	mov    0x10(%ebp),%eax
81000e38:	8b 40 08             	mov    0x8(%eax),%eax
81000e3b:	85 c0                	test   %eax,%eax
81000e3d:	0f 85 dc fe ff ff    	jne    81000d1f <__sfvwrite_r+0x354>
81000e43:	b8 00 00 00 00       	mov    $0x0,%eax
81000e48:	eb 17                	jmp    81000e61 <__sfvwrite_r+0x496>
81000e4a:	90                   	nop
81000e4b:	eb 04                	jmp    81000e51 <__sfvwrite_r+0x486>
81000e4d:	90                   	nop
81000e4e:	eb 01                	jmp    81000e51 <__sfvwrite_r+0x486>
81000e50:	90                   	nop
81000e51:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e55:	83 c8 40             	or     $0x40,%eax
81000e58:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000e5c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000e61:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000e64:	5b                   	pop    %ebx
81000e65:	5e                   	pop    %esi
81000e66:	5f                   	pop    %edi
81000e67:	5d                   	pop    %ebp
81000e68:	c3                   	ret    

81000e69 <_fwalk>:
81000e69:	55                   	push   %ebp
81000e6a:	89 e5                	mov    %esp,%ebp
81000e6c:	57                   	push   %edi
81000e6d:	56                   	push   %esi
81000e6e:	53                   	push   %ebx
81000e6f:	83 ec 1c             	sub    $0x1c,%esp
81000e72:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000e79:	8b 45 08             	mov    0x8(%ebp),%eax
81000e7c:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000e82:	eb 3e                	jmp    81000ec2 <_fwalk+0x59>
81000e84:	8b 5e 08             	mov    0x8(%esi),%ebx
81000e87:	8b 7e 04             	mov    0x4(%esi),%edi
81000e8a:	eb 2d                	jmp    81000eb9 <_fwalk+0x50>
81000e8c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e90:	66 85 c0             	test   %ax,%ax
81000e93:	74 21                	je     81000eb6 <_fwalk+0x4d>
81000e95:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e99:	66 83 f8 01          	cmp    $0x1,%ax
81000e9d:	74 17                	je     81000eb6 <_fwalk+0x4d>
81000e9f:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000ea3:	66 83 f8 ff          	cmp    $0xffff,%ax
81000ea7:	74 0d                	je     81000eb6 <_fwalk+0x4d>
81000ea9:	83 ec 0c             	sub    $0xc,%esp
81000eac:	53                   	push   %ebx
81000ead:	ff 55 0c             	call   *0xc(%ebp)
81000eb0:	83 c4 10             	add    $0x10,%esp
81000eb3:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000eb6:	83 c3 68             	add    $0x68,%ebx
81000eb9:	83 ef 01             	sub    $0x1,%edi
81000ebc:	85 ff                	test   %edi,%edi
81000ebe:	79 cc                	jns    81000e8c <_fwalk+0x23>
81000ec0:	8b 36                	mov    (%esi),%esi
81000ec2:	85 f6                	test   %esi,%esi
81000ec4:	75 be                	jne    81000e84 <_fwalk+0x1b>
81000ec6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000ec9:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000ecc:	5b                   	pop    %ebx
81000ecd:	5e                   	pop    %esi
81000ece:	5f                   	pop    %edi
81000ecf:	5d                   	pop    %ebp
81000ed0:	c3                   	ret    

81000ed1 <_fwalk_reent>:
81000ed1:	55                   	push   %ebp
81000ed2:	89 e5                	mov    %esp,%ebp
81000ed4:	57                   	push   %edi
81000ed5:	56                   	push   %esi
81000ed6:	53                   	push   %ebx
81000ed7:	83 ec 1c             	sub    $0x1c,%esp
81000eda:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000ee1:	8b 45 08             	mov    0x8(%ebp),%eax
81000ee4:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000eea:	eb 41                	jmp    81000f2d <_fwalk_reent+0x5c>
81000eec:	8b 5e 08             	mov    0x8(%esi),%ebx
81000eef:	8b 7e 04             	mov    0x4(%esi),%edi
81000ef2:	eb 30                	jmp    81000f24 <_fwalk_reent+0x53>
81000ef4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ef8:	66 85 c0             	test   %ax,%ax
81000efb:	74 24                	je     81000f21 <_fwalk_reent+0x50>
81000efd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f01:	66 83 f8 01          	cmp    $0x1,%ax
81000f05:	74 1a                	je     81000f21 <_fwalk_reent+0x50>
81000f07:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000f0b:	66 83 f8 ff          	cmp    $0xffff,%ax
81000f0f:	74 10                	je     81000f21 <_fwalk_reent+0x50>
81000f11:	83 ec 08             	sub    $0x8,%esp
81000f14:	53                   	push   %ebx
81000f15:	ff 75 08             	push   0x8(%ebp)
81000f18:	ff 55 0c             	call   *0xc(%ebp)
81000f1b:	83 c4 10             	add    $0x10,%esp
81000f1e:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000f21:	83 c3 68             	add    $0x68,%ebx
81000f24:	83 ef 01             	sub    $0x1,%edi
81000f27:	85 ff                	test   %edi,%edi
81000f29:	79 c9                	jns    81000ef4 <_fwalk_reent+0x23>
81000f2b:	8b 36                	mov    (%esi),%esi
81000f2d:	85 f6                	test   %esi,%esi
81000f2f:	75 bb                	jne    81000eec <_fwalk_reent+0x1b>
81000f31:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000f34:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000f37:	5b                   	pop    %ebx
81000f38:	5e                   	pop    %esi
81000f39:	5f                   	pop    %edi
81000f3a:	5d                   	pop    %ebp
81000f3b:	c3                   	ret    

81000f3c <malloc_extend_top>:
81000f3c:	55                   	push   %ebp
81000f3d:	89 e5                	mov    %esp,%ebp
81000f3f:	83 ec 38             	sub    $0x38,%esp
81000f42:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000f49:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
81000f4e:	8b 40 08             	mov    0x8(%eax),%eax
81000f51:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000f54:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000f57:	8b 40 04             	mov    0x4(%eax),%eax
81000f5a:	83 e0 fc             	and    $0xfffffffc,%eax
81000f5d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000f60:	8b 55 e0             	mov    -0x20(%ebp),%edx
81000f63:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000f66:	01 d0                	add    %edx,%eax
81000f68:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000f6b:	8b 15 00 55 00 81    	mov    0x81005500,%edx
81000f71:	8b 45 0c             	mov    0xc(%ebp),%eax
81000f74:	01 d0                	add    %edx,%eax
81000f76:	83 c0 10             	add    $0x10,%eax
81000f79:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000f7c:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81000f83:	a1 4c 53 00 81       	mov    0x8100534c,%eax
81000f88:	83 f8 ff             	cmp    $0xffffffff,%eax
81000f8b:	74 15                	je     81000fa2 <malloc_extend_top+0x66>
81000f8d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81000f90:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000f93:	01 d0                	add    %edx,%eax
81000f95:	8d 50 ff             	lea    -0x1(%eax),%edx
81000f98:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000f9b:	f7 d8                	neg    %eax
81000f9d:	21 d0                	and    %edx,%eax
81000f9f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000fa2:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000fa5:	83 ec 08             	sub    $0x8,%esp
81000fa8:	50                   	push   %eax
81000fa9:	ff 75 08             	push   0x8(%ebp)
81000fac:	e8 79 20 00 00       	call   8100302a <_sbrk_r>
81000fb1:	83 c4 10             	add    $0x10,%esp
81000fb4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000fb7:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81000fbb:	0f 84 0b 02 00 00    	je     810011cc <malloc_extend_top+0x290>
81000fc1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fc4:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81000fc7:	73 0e                	jae    81000fd7 <malloc_extend_top+0x9b>
81000fc9:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
81000fce:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81000fd1:	0f 85 f5 01 00 00    	jne    810011cc <malloc_extend_top+0x290>
81000fd7:	a1 20 55 00 81       	mov    0x81005520,%eax
81000fdc:	89 c2                	mov    %eax,%edx
81000fde:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000fe1:	01 d0                	add    %edx,%eax
81000fe3:	a3 20 55 00 81       	mov    %eax,0x81005520
81000fe8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000feb:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81000fee:	75 30                	jne    81001020 <malloc_extend_top+0xe4>
81000ff0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000ff3:	8d 50 ff             	lea    -0x1(%eax),%edx
81000ff6:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000ff9:	21 d0                	and    %edx,%eax
81000ffb:	85 c0                	test   %eax,%eax
81000ffd:	75 21                	jne    81001020 <malloc_extend_top+0xe4>
81000fff:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001002:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001005:	01 d0                	add    %edx,%eax
81001007:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100100a:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
8100100f:	8b 40 08             	mov    0x8(%eax),%eax
81001012:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001015:	83 ca 01             	or     $0x1,%edx
81001018:	89 50 04             	mov    %edx,0x4(%eax)
8100101b:	e9 76 01 00 00       	jmp    81001196 <malloc_extend_top+0x25a>
81001020:	a1 4c 53 00 81       	mov    0x8100534c,%eax
81001025:	83 f8 ff             	cmp    $0xffffffff,%eax
81001028:	75 0a                	jne    81001034 <malloc_extend_top+0xf8>
8100102a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100102d:	a3 4c 53 00 81       	mov    %eax,0x8100534c
81001032:	eb 13                	jmp    81001047 <malloc_extend_top+0x10b>
81001034:	8b 15 20 55 00 81    	mov    0x81005520,%edx
8100103a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100103d:	2b 45 d8             	sub    -0x28(%ebp),%eax
81001040:	01 d0                	add    %edx,%eax
81001042:	a3 20 55 00 81       	mov    %eax,0x81005520
81001047:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100104a:	83 c0 08             	add    $0x8,%eax
8100104d:	83 e0 07             	and    $0x7,%eax
81001050:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001053:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81001057:	74 13                	je     8100106c <malloc_extend_top+0x130>
81001059:	b8 08 00 00 00       	mov    $0x8,%eax
8100105e:	2b 45 cc             	sub    -0x34(%ebp),%eax
81001061:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001064:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001067:	01 45 f4             	add    %eax,-0xc(%ebp)
8100106a:	eb 07                	jmp    81001073 <malloc_extend_top+0x137>
8100106c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001073:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001076:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001079:	01 d0                	add    %edx,%eax
8100107b:	89 c2                	mov    %eax,%edx
8100107d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001080:	83 e8 01             	sub    $0x1,%eax
81001083:	21 c2                	and    %eax,%edx
81001085:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001088:	29 d0                	sub    %edx,%eax
8100108a:	01 45 f0             	add    %eax,-0x10(%ebp)
8100108d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001090:	83 e8 01             	sub    $0x1,%eax
81001093:	21 45 f0             	and    %eax,-0x10(%ebp)
81001096:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001099:	83 ec 08             	sub    $0x8,%esp
8100109c:	50                   	push   %eax
8100109d:	ff 75 08             	push   0x8(%ebp)
810010a0:	e8 85 1f 00 00       	call   8100302a <_sbrk_r>
810010a5:	83 c4 10             	add    $0x10,%esp
810010a8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810010ab:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810010af:	75 28                	jne    810010d9 <malloc_extend_top+0x19d>
810010b1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810010b8:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810010bf:	8b 55 f4             	mov    -0xc(%ebp),%edx
810010c2:	8b 45 e8             	mov    -0x18(%ebp),%eax
810010c5:	01 d0                	add    %edx,%eax
810010c7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810010ca:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810010ce:	74 09                	je     810010d9 <malloc_extend_top+0x19d>
810010d0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810010d3:	83 e8 08             	sub    $0x8,%eax
810010d6:	01 45 ec             	add    %eax,-0x14(%ebp)
810010d9:	a1 20 55 00 81       	mov    0x81005520,%eax
810010de:	89 c2                	mov    %eax,%edx
810010e0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010e3:	01 d0                	add    %edx,%eax
810010e5:	a3 20 55 00 81       	mov    %eax,0x81005520
810010ea:	ba 40 4f 00 81       	mov    $0x81004f40,%edx
810010ef:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010f2:	89 42 08             	mov    %eax,0x8(%edx)
810010f5:	8b 45 ec             	mov    -0x14(%ebp),%eax
810010f8:	2b 45 f4             	sub    -0xc(%ebp),%eax
810010fb:	89 c2                	mov    %eax,%edx
810010fd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001100:	01 d0                	add    %edx,%eax
81001102:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001105:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
8100110a:	8b 40 08             	mov    0x8(%eax),%eax
8100110d:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001110:	83 ca 01             	or     $0x1,%edx
81001113:	89 50 04             	mov    %edx,0x4(%eax)
81001116:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
8100111b:	39 45 e0             	cmp    %eax,-0x20(%ebp)
8100111e:	74 76                	je     81001196 <malloc_extend_top+0x25a>
81001120:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81001124:	77 14                	ja     8100113a <malloc_extend_top+0x1fe>
81001126:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
8100112b:	8b 40 08             	mov    0x8(%eax),%eax
8100112e:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81001135:	e9 93 00 00 00       	jmp    810011cd <malloc_extend_top+0x291>
8100113a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100113d:	83 e8 0c             	sub    $0xc,%eax
81001140:	83 e0 f8             	and    $0xfffffff8,%eax
81001143:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001146:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001149:	8b 40 04             	mov    0x4(%eax),%eax
8100114c:	83 e0 01             	and    $0x1,%eax
8100114f:	0b 45 dc             	or     -0x24(%ebp),%eax
81001152:	89 c2                	mov    %eax,%edx
81001154:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001157:	89 50 04             	mov    %edx,0x4(%eax)
8100115a:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100115d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001160:	01 d0                	add    %edx,%eax
81001162:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81001169:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100116c:	8d 50 04             	lea    0x4(%eax),%edx
8100116f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001172:	01 d0                	add    %edx,%eax
81001174:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8100117b:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
8100117f:	76 15                	jbe    81001196 <malloc_extend_top+0x25a>
81001181:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001184:	83 c0 08             	add    $0x8,%eax
81001187:	83 ec 08             	sub    $0x8,%esp
8100118a:	50                   	push   %eax
8100118b:	ff 75 08             	push   0x8(%ebp)
8100118e:	e8 93 28 00 00       	call   81003a26 <_free_r>
81001193:	83 c4 10             	add    $0x10,%esp
81001196:	a1 20 55 00 81       	mov    0x81005520,%eax
8100119b:	89 c2                	mov    %eax,%edx
8100119d:	a1 04 55 00 81       	mov    0x81005504,%eax
810011a2:	39 c2                	cmp    %eax,%edx
810011a4:	76 0a                	jbe    810011b0 <malloc_extend_top+0x274>
810011a6:	a1 20 55 00 81       	mov    0x81005520,%eax
810011ab:	a3 04 55 00 81       	mov    %eax,0x81005504
810011b0:	a1 20 55 00 81       	mov    0x81005520,%eax
810011b5:	89 c2                	mov    %eax,%edx
810011b7:	a1 08 55 00 81       	mov    0x81005508,%eax
810011bc:	39 c2                	cmp    %eax,%edx
810011be:	76 0d                	jbe    810011cd <malloc_extend_top+0x291>
810011c0:	a1 20 55 00 81       	mov    0x81005520,%eax
810011c5:	a3 08 55 00 81       	mov    %eax,0x81005508
810011ca:	eb 01                	jmp    810011cd <malloc_extend_top+0x291>
810011cc:	90                   	nop
810011cd:	c9                   	leave  
810011ce:	c3                   	ret    

810011cf <_malloc_r>:
810011cf:	55                   	push   %ebp
810011d0:	89 e5                	mov    %esp,%ebp
810011d2:	53                   	push   %ebx
810011d3:	83 ec 44             	sub    $0x44,%esp
810011d6:	8b 45 0c             	mov    0xc(%ebp),%eax
810011d9:	83 c0 0b             	add    $0xb,%eax
810011dc:	83 f8 16             	cmp    $0x16,%eax
810011df:	76 0b                	jbe    810011ec <_malloc_r+0x1d>
810011e1:	8b 45 0c             	mov    0xc(%ebp),%eax
810011e4:	83 c0 0b             	add    $0xb,%eax
810011e7:	83 e0 f8             	and    $0xfffffff8,%eax
810011ea:	eb 05                	jmp    810011f1 <_malloc_r+0x22>
810011ec:	b8 10 00 00 00       	mov    $0x10,%eax
810011f1:	89 45 d0             	mov    %eax,-0x30(%ebp)
810011f4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810011f7:	85 c0                	test   %eax,%eax
810011f9:	78 08                	js     81001203 <_malloc_r+0x34>
810011fb:	8b 45 d0             	mov    -0x30(%ebp),%eax
810011fe:	3b 45 0c             	cmp    0xc(%ebp),%eax
81001201:	73 13                	jae    81001216 <_malloc_r+0x47>
81001203:	8b 45 08             	mov    0x8(%ebp),%eax
81001206:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100120c:	b8 00 00 00 00       	mov    $0x0,%eax
81001211:	e9 d6 07 00 00       	jmp    810019ec <_malloc_r+0x81d>
81001216:	83 ec 0c             	sub    $0xc,%esp
81001219:	ff 75 08             	push   0x8(%ebp)
8100121c:	e8 d4 09 00 00       	call   81001bf5 <__malloc_lock>
81001221:	83 c4 10             	add    $0x10,%esp
81001224:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
8100122b:	0f 87 b0 00 00 00    	ja     810012e1 <_malloc_r+0x112>
81001231:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001234:	c1 e8 03             	shr    $0x3,%eax
81001237:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100123a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100123d:	83 c0 01             	add    $0x1,%eax
81001240:	01 c0                	add    %eax,%eax
81001242:	c1 e0 02             	shl    $0x2,%eax
81001245:	05 40 4f 00 81       	add    $0x81004f40,%eax
8100124a:	83 e8 08             	sub    $0x8,%eax
8100124d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001250:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001253:	8b 40 0c             	mov    0xc(%eax),%eax
81001256:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001259:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100125c:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
8100125f:	75 0d                	jne    8100126e <_malloc_r+0x9f>
81001261:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81001265:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001268:	8b 40 0c             	mov    0xc(%eax),%eax
8100126b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100126e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001271:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81001274:	74 62                	je     810012d8 <_malloc_r+0x109>
81001276:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001279:	8b 40 04             	mov    0x4(%eax),%eax
8100127c:	83 e0 fc             	and    $0xfffffffc,%eax
8100127f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001282:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001285:	8b 40 0c             	mov    0xc(%eax),%eax
81001288:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100128b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100128e:	8b 40 08             	mov    0x8(%eax),%eax
81001291:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001294:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001297:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100129a:	89 50 0c             	mov    %edx,0xc(%eax)
8100129d:	8b 45 d8             	mov    -0x28(%ebp),%eax
810012a0:	8b 55 dc             	mov    -0x24(%ebp),%edx
810012a3:	89 50 08             	mov    %edx,0x8(%eax)
810012a6:	8b 55 f4             	mov    -0xc(%ebp),%edx
810012a9:	8b 45 cc             	mov    -0x34(%ebp),%eax
810012ac:	01 d0                	add    %edx,%eax
810012ae:	8b 50 04             	mov    0x4(%eax),%edx
810012b1:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810012b4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810012b7:	01 c8                	add    %ecx,%eax
810012b9:	83 ca 01             	or     $0x1,%edx
810012bc:	89 50 04             	mov    %edx,0x4(%eax)
810012bf:	83 ec 0c             	sub    $0xc,%esp
810012c2:	ff 75 08             	push   0x8(%ebp)
810012c5:	e8 31 09 00 00       	call   81001bfb <__malloc_unlock>
810012ca:	83 c4 10             	add    $0x10,%esp
810012cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012d0:	83 c0 08             	add    $0x8,%eax
810012d3:	e9 14 07 00 00       	jmp    810019ec <_malloc_r+0x81d>
810012d8:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
810012dc:	e9 46 01 00 00       	jmp    81001427 <_malloc_r+0x258>
810012e1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012e4:	c1 e8 09             	shr    $0x9,%eax
810012e7:	85 c0                	test   %eax,%eax
810012e9:	75 08                	jne    810012f3 <_malloc_r+0x124>
810012eb:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012ee:	c1 e8 03             	shr    $0x3,%eax
810012f1:	eb 77                	jmp    8100136a <_malloc_r+0x19b>
810012f3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012f6:	c1 e8 09             	shr    $0x9,%eax
810012f9:	83 f8 04             	cmp    $0x4,%eax
810012fc:	77 0b                	ja     81001309 <_malloc_r+0x13a>
810012fe:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001301:	c1 e8 06             	shr    $0x6,%eax
81001304:	83 c0 38             	add    $0x38,%eax
81001307:	eb 61                	jmp    8100136a <_malloc_r+0x19b>
81001309:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100130c:	c1 e8 09             	shr    $0x9,%eax
8100130f:	83 f8 14             	cmp    $0x14,%eax
81001312:	77 0b                	ja     8100131f <_malloc_r+0x150>
81001314:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001317:	c1 e8 09             	shr    $0x9,%eax
8100131a:	83 c0 5b             	add    $0x5b,%eax
8100131d:	eb 4b                	jmp    8100136a <_malloc_r+0x19b>
8100131f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001322:	c1 e8 09             	shr    $0x9,%eax
81001325:	83 f8 54             	cmp    $0x54,%eax
81001328:	77 0b                	ja     81001335 <_malloc_r+0x166>
8100132a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100132d:	c1 e8 0c             	shr    $0xc,%eax
81001330:	83 c0 6e             	add    $0x6e,%eax
81001333:	eb 35                	jmp    8100136a <_malloc_r+0x19b>
81001335:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001338:	c1 e8 09             	shr    $0x9,%eax
8100133b:	3d 54 01 00 00       	cmp    $0x154,%eax
81001340:	77 0b                	ja     8100134d <_malloc_r+0x17e>
81001342:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001345:	c1 e8 0f             	shr    $0xf,%eax
81001348:	83 c0 77             	add    $0x77,%eax
8100134b:	eb 1d                	jmp    8100136a <_malloc_r+0x19b>
8100134d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001350:	c1 e8 09             	shr    $0x9,%eax
81001353:	3d 54 05 00 00       	cmp    $0x554,%eax
81001358:	77 0b                	ja     81001365 <_malloc_r+0x196>
8100135a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100135d:	c1 e8 12             	shr    $0x12,%eax
81001360:	83 c0 7c             	add    $0x7c,%eax
81001363:	eb 05                	jmp    8100136a <_malloc_r+0x19b>
81001365:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100136a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100136d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001370:	83 c0 01             	add    $0x1,%eax
81001373:	01 c0                	add    %eax,%eax
81001375:	c1 e0 02             	shl    $0x2,%eax
81001378:	05 40 4f 00 81       	add    $0x81004f40,%eax
8100137d:	83 e8 08             	sub    $0x8,%eax
81001380:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001383:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001386:	8b 40 0c             	mov    0xc(%eax),%eax
81001389:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100138c:	e9 86 00 00 00       	jmp    81001417 <_malloc_r+0x248>
81001391:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001394:	8b 40 04             	mov    0x4(%eax),%eax
81001397:	83 e0 fc             	and    $0xfffffffc,%eax
8100139a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100139d:	8b 45 cc             	mov    -0x34(%ebp),%eax
810013a0:	2b 45 d0             	sub    -0x30(%ebp),%eax
810013a3:	89 45 e8             	mov    %eax,-0x18(%ebp)
810013a6:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810013aa:	7e 06                	jle    810013b2 <_malloc_r+0x1e3>
810013ac:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
810013b0:	eb 71                	jmp    81001423 <_malloc_r+0x254>
810013b2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810013b6:	78 56                	js     8100140e <_malloc_r+0x23f>
810013b8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013bb:	8b 40 0c             	mov    0xc(%eax),%eax
810013be:	89 45 d8             	mov    %eax,-0x28(%ebp)
810013c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013c4:	8b 40 08             	mov    0x8(%eax),%eax
810013c7:	89 45 dc             	mov    %eax,-0x24(%ebp)
810013ca:	8b 45 dc             	mov    -0x24(%ebp),%eax
810013cd:	8b 55 d8             	mov    -0x28(%ebp),%edx
810013d0:	89 50 0c             	mov    %edx,0xc(%eax)
810013d3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810013d6:	8b 55 dc             	mov    -0x24(%ebp),%edx
810013d9:	89 50 08             	mov    %edx,0x8(%eax)
810013dc:	8b 55 f4             	mov    -0xc(%ebp),%edx
810013df:	8b 45 cc             	mov    -0x34(%ebp),%eax
810013e2:	01 d0                	add    %edx,%eax
810013e4:	8b 50 04             	mov    0x4(%eax),%edx
810013e7:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810013ea:	8b 45 cc             	mov    -0x34(%ebp),%eax
810013ed:	01 c8                	add    %ecx,%eax
810013ef:	83 ca 01             	or     $0x1,%edx
810013f2:	89 50 04             	mov    %edx,0x4(%eax)
810013f5:	83 ec 0c             	sub    $0xc,%esp
810013f8:	ff 75 08             	push   0x8(%ebp)
810013fb:	e8 fb 07 00 00       	call   81001bfb <__malloc_unlock>
81001400:	83 c4 10             	add    $0x10,%esp
81001403:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001406:	83 c0 08             	add    $0x8,%eax
81001409:	e9 de 05 00 00       	jmp    810019ec <_malloc_r+0x81d>
8100140e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001411:	8b 40 0c             	mov    0xc(%eax),%eax
81001414:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001417:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100141a:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100141d:	0f 85 6e ff ff ff    	jne    81001391 <_malloc_r+0x1c2>
81001423:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001427:	b8 48 4f 00 81       	mov    $0x81004f48,%eax
8100142c:	8b 40 08             	mov    0x8(%eax),%eax
8100142f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001432:	b8 48 4f 00 81       	mov    $0x81004f48,%eax
81001437:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100143a:	0f 84 9c 02 00 00    	je     810016dc <_malloc_r+0x50d>
81001440:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001443:	8b 40 04             	mov    0x4(%eax),%eax
81001446:	83 e0 fc             	and    $0xfffffffc,%eax
81001449:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100144c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100144f:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001452:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001455:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001459:	7e 7a                	jle    810014d5 <_malloc_r+0x306>
8100145b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100145e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001461:	01 d0                	add    %edx,%eax
81001463:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001466:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001469:	83 c8 01             	or     $0x1,%eax
8100146c:	89 c2                	mov    %eax,%edx
8100146e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001471:	89 50 04             	mov    %edx,0x4(%eax)
81001474:	b8 48 4f 00 81       	mov    $0x81004f48,%eax
81001479:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100147c:	89 50 0c             	mov    %edx,0xc(%eax)
8100147f:	ba 48 4f 00 81       	mov    $0x81004f48,%edx
81001484:	8b 40 0c             	mov    0xc(%eax),%eax
81001487:	89 42 08             	mov    %eax,0x8(%edx)
8100148a:	ba 48 4f 00 81       	mov    $0x81004f48,%edx
8100148f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001492:	89 50 0c             	mov    %edx,0xc(%eax)
81001495:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001498:	8b 50 0c             	mov    0xc(%eax),%edx
8100149b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100149e:	89 50 08             	mov    %edx,0x8(%eax)
810014a1:	8b 45 e8             	mov    -0x18(%ebp),%eax
810014a4:	83 c8 01             	or     $0x1,%eax
810014a7:	89 c2                	mov    %eax,%edx
810014a9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810014ac:	89 50 04             	mov    %edx,0x4(%eax)
810014af:	8b 55 e8             	mov    -0x18(%ebp),%edx
810014b2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810014b5:	01 c2                	add    %eax,%edx
810014b7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810014ba:	89 02                	mov    %eax,(%edx)
810014bc:	83 ec 0c             	sub    $0xc,%esp
810014bf:	ff 75 08             	push   0x8(%ebp)
810014c2:	e8 34 07 00 00       	call   81001bfb <__malloc_unlock>
810014c7:	83 c4 10             	add    $0x10,%esp
810014ca:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014cd:	83 c0 08             	add    $0x8,%eax
810014d0:	e9 17 05 00 00       	jmp    810019ec <_malloc_r+0x81d>
810014d5:	b8 48 4f 00 81       	mov    $0x81004f48,%eax
810014da:	ba 48 4f 00 81       	mov    $0x81004f48,%edx
810014df:	89 50 0c             	mov    %edx,0xc(%eax)
810014e2:	ba 48 4f 00 81       	mov    $0x81004f48,%edx
810014e7:	8b 40 0c             	mov    0xc(%eax),%eax
810014ea:	89 42 08             	mov    %eax,0x8(%edx)
810014ed:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810014f1:	78 32                	js     81001525 <_malloc_r+0x356>
810014f3:	8b 55 f4             	mov    -0xc(%ebp),%edx
810014f6:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014f9:	01 d0                	add    %edx,%eax
810014fb:	8b 50 04             	mov    0x4(%eax),%edx
810014fe:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001501:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001504:	01 c8                	add    %ecx,%eax
81001506:	83 ca 01             	or     $0x1,%edx
81001509:	89 50 04             	mov    %edx,0x4(%eax)
8100150c:	83 ec 0c             	sub    $0xc,%esp
8100150f:	ff 75 08             	push   0x8(%ebp)
81001512:	e8 e4 06 00 00       	call   81001bfb <__malloc_unlock>
81001517:	83 c4 10             	add    $0x10,%esp
8100151a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100151d:	83 c0 08             	add    $0x8,%eax
81001520:	e9 c7 04 00 00       	jmp    810019ec <_malloc_r+0x81d>
81001525:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
8100152c:	77 7f                	ja     810015ad <_malloc_r+0x3de>
8100152e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001531:	c1 e8 03             	shr    $0x3,%eax
81001534:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001537:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
8100153c:	8b 58 04             	mov    0x4(%eax),%ebx
8100153f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001542:	8d 50 03             	lea    0x3(%eax),%edx
81001545:	85 c0                	test   %eax,%eax
81001547:	0f 48 c2             	cmovs  %edx,%eax
8100154a:	c1 f8 02             	sar    $0x2,%eax
8100154d:	ba 01 00 00 00       	mov    $0x1,%edx
81001552:	89 c1                	mov    %eax,%ecx
81001554:	d3 e2                	shl    %cl,%edx
81001556:	89 d0                	mov    %edx,%eax
81001558:	ba 40 4f 00 81       	mov    $0x81004f40,%edx
8100155d:	09 d8                	or     %ebx,%eax
8100155f:	89 42 04             	mov    %eax,0x4(%edx)
81001562:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001565:	83 c0 01             	add    $0x1,%eax
81001568:	01 c0                	add    %eax,%eax
8100156a:	c1 e0 02             	shl    $0x2,%eax
8100156d:	05 40 4f 00 81       	add    $0x81004f40,%eax
81001572:	83 e8 08             	sub    $0x8,%eax
81001575:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001578:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100157b:	8b 40 08             	mov    0x8(%eax),%eax
8100157e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001581:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001584:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001587:	89 50 0c             	mov    %edx,0xc(%eax)
8100158a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100158d:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001590:	89 50 08             	mov    %edx,0x8(%eax)
81001593:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001596:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001599:	89 50 08             	mov    %edx,0x8(%eax)
8100159c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100159f:	8b 50 08             	mov    0x8(%eax),%edx
810015a2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810015a5:	89 50 0c             	mov    %edx,0xc(%eax)
810015a8:	e9 2f 01 00 00       	jmp    810016dc <_malloc_r+0x50d>
810015ad:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015b0:	c1 e8 09             	shr    $0x9,%eax
810015b3:	85 c0                	test   %eax,%eax
810015b5:	75 08                	jne    810015bf <_malloc_r+0x3f0>
810015b7:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015ba:	c1 e8 03             	shr    $0x3,%eax
810015bd:	eb 77                	jmp    81001636 <_malloc_r+0x467>
810015bf:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015c2:	c1 e8 09             	shr    $0x9,%eax
810015c5:	83 f8 04             	cmp    $0x4,%eax
810015c8:	77 0b                	ja     810015d5 <_malloc_r+0x406>
810015ca:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015cd:	c1 e8 06             	shr    $0x6,%eax
810015d0:	83 c0 38             	add    $0x38,%eax
810015d3:	eb 61                	jmp    81001636 <_malloc_r+0x467>
810015d5:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015d8:	c1 e8 09             	shr    $0x9,%eax
810015db:	83 f8 14             	cmp    $0x14,%eax
810015de:	77 0b                	ja     810015eb <_malloc_r+0x41c>
810015e0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015e3:	c1 e8 09             	shr    $0x9,%eax
810015e6:	83 c0 5b             	add    $0x5b,%eax
810015e9:	eb 4b                	jmp    81001636 <_malloc_r+0x467>
810015eb:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015ee:	c1 e8 09             	shr    $0x9,%eax
810015f1:	83 f8 54             	cmp    $0x54,%eax
810015f4:	77 0b                	ja     81001601 <_malloc_r+0x432>
810015f6:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015f9:	c1 e8 0c             	shr    $0xc,%eax
810015fc:	83 c0 6e             	add    $0x6e,%eax
810015ff:	eb 35                	jmp    81001636 <_malloc_r+0x467>
81001601:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001604:	c1 e8 09             	shr    $0x9,%eax
81001607:	3d 54 01 00 00       	cmp    $0x154,%eax
8100160c:	77 0b                	ja     81001619 <_malloc_r+0x44a>
8100160e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001611:	c1 e8 0f             	shr    $0xf,%eax
81001614:	83 c0 77             	add    $0x77,%eax
81001617:	eb 1d                	jmp    81001636 <_malloc_r+0x467>
81001619:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100161c:	c1 e8 09             	shr    $0x9,%eax
8100161f:	3d 54 05 00 00       	cmp    $0x554,%eax
81001624:	77 0b                	ja     81001631 <_malloc_r+0x462>
81001626:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001629:	c1 e8 12             	shr    $0x12,%eax
8100162c:	83 c0 7c             	add    $0x7c,%eax
8100162f:	eb 05                	jmp    81001636 <_malloc_r+0x467>
81001631:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001636:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001639:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100163c:	83 c0 01             	add    $0x1,%eax
8100163f:	01 c0                	add    %eax,%eax
81001641:	c1 e0 02             	shl    $0x2,%eax
81001644:	05 40 4f 00 81       	add    $0x81004f40,%eax
81001649:	83 e8 08             	sub    $0x8,%eax
8100164c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100164f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001652:	8b 40 08             	mov    0x8(%eax),%eax
81001655:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001658:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100165b:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100165e:	75 36                	jne    81001696 <_malloc_r+0x4c7>
81001660:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
81001665:	8b 58 04             	mov    0x4(%eax),%ebx
81001668:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100166b:	8d 50 03             	lea    0x3(%eax),%edx
8100166e:	85 c0                	test   %eax,%eax
81001670:	0f 48 c2             	cmovs  %edx,%eax
81001673:	c1 f8 02             	sar    $0x2,%eax
81001676:	ba 01 00 00 00       	mov    $0x1,%edx
8100167b:	89 c1                	mov    %eax,%ecx
8100167d:	d3 e2                	shl    %cl,%edx
8100167f:	89 d0                	mov    %edx,%eax
81001681:	ba 40 4f 00 81       	mov    $0x81004f40,%edx
81001686:	09 d8                	or     %ebx,%eax
81001688:	89 42 04             	mov    %eax,0x4(%edx)
8100168b:	eb 28                	jmp    810016b5 <_malloc_r+0x4e6>
8100168d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001690:	8b 40 08             	mov    0x8(%eax),%eax
81001693:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001696:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001699:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100169c:	74 0e                	je     810016ac <_malloc_r+0x4dd>
8100169e:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016a1:	8b 40 04             	mov    0x4(%eax),%eax
810016a4:	83 e0 fc             	and    $0xfffffffc,%eax
810016a7:	39 45 cc             	cmp    %eax,-0x34(%ebp)
810016aa:	72 e1                	jb     8100168d <_malloc_r+0x4be>
810016ac:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016af:	8b 40 0c             	mov    0xc(%eax),%eax
810016b2:	89 45 d8             	mov    %eax,-0x28(%ebp)
810016b5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016b8:	8b 55 d8             	mov    -0x28(%ebp),%edx
810016bb:	89 50 0c             	mov    %edx,0xc(%eax)
810016be:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016c1:	8b 55 dc             	mov    -0x24(%ebp),%edx
810016c4:	89 50 08             	mov    %edx,0x8(%eax)
810016c7:	8b 45 d8             	mov    -0x28(%ebp),%eax
810016ca:	8b 55 f4             	mov    -0xc(%ebp),%edx
810016cd:	89 50 08             	mov    %edx,0x8(%eax)
810016d0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810016d3:	8b 50 08             	mov    0x8(%eax),%edx
810016d6:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016d9:	89 50 0c             	mov    %edx,0xc(%eax)
810016dc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810016df:	8d 50 03             	lea    0x3(%eax),%edx
810016e2:	85 c0                	test   %eax,%eax
810016e4:	0f 48 c2             	cmovs  %edx,%eax
810016e7:	c1 f8 02             	sar    $0x2,%eax
810016ea:	ba 01 00 00 00       	mov    $0x1,%edx
810016ef:	89 c1                	mov    %eax,%ecx
810016f1:	d3 e2                	shl    %cl,%edx
810016f3:	89 d0                	mov    %edx,%eax
810016f5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810016f8:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
810016fd:	8b 40 04             	mov    0x4(%eax),%eax
81001700:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81001703:	0f 87 13 02 00 00    	ja     8100191c <_malloc_r+0x74d>
81001709:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
8100170e:	8b 40 04             	mov    0x4(%eax),%eax
81001711:	23 45 e4             	and    -0x1c(%ebp),%eax
81001714:	85 c0                	test   %eax,%eax
81001716:	75 27                	jne    8100173f <_malloc_r+0x570>
81001718:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100171b:	83 e0 fc             	and    $0xfffffffc,%eax
8100171e:	83 c0 04             	add    $0x4,%eax
81001721:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001724:	d1 65 e4             	shll   -0x1c(%ebp)
81001727:	eb 07                	jmp    81001730 <_malloc_r+0x561>
81001729:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
8100172d:	d1 65 e4             	shll   -0x1c(%ebp)
81001730:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
81001735:	8b 40 04             	mov    0x4(%eax),%eax
81001738:	23 45 e4             	and    -0x1c(%ebp),%eax
8100173b:	85 c0                	test   %eax,%eax
8100173d:	74 ea                	je     81001729 <_malloc_r+0x55a>
8100173f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001742:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001745:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001748:	83 c0 01             	add    $0x1,%eax
8100174b:	01 c0                	add    %eax,%eax
8100174d:	c1 e0 02             	shl    $0x2,%eax
81001750:	05 40 4f 00 81       	add    $0x81004f40,%eax
81001755:	83 e8 08             	sub    $0x8,%eax
81001758:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100175b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100175e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001761:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001764:	8b 40 0c             	mov    0xc(%eax),%eax
81001767:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100176a:	e9 22 01 00 00       	jmp    81001891 <_malloc_r+0x6c2>
8100176f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001772:	8b 40 04             	mov    0x4(%eax),%eax
81001775:	83 e0 fc             	and    $0xfffffffc,%eax
81001778:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100177b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100177e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001781:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001784:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001788:	0f 8e 9e 00 00 00    	jle    8100182c <_malloc_r+0x65d>
8100178e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001791:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001794:	01 d0                	add    %edx,%eax
81001796:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001799:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100179c:	83 c8 01             	or     $0x1,%eax
8100179f:	89 c2                	mov    %eax,%edx
810017a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017a4:	89 50 04             	mov    %edx,0x4(%eax)
810017a7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017aa:	8b 40 0c             	mov    0xc(%eax),%eax
810017ad:	89 45 d8             	mov    %eax,-0x28(%ebp)
810017b0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017b3:	8b 40 08             	mov    0x8(%eax),%eax
810017b6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810017b9:	8b 45 dc             	mov    -0x24(%ebp),%eax
810017bc:	8b 55 d8             	mov    -0x28(%ebp),%edx
810017bf:	89 50 0c             	mov    %edx,0xc(%eax)
810017c2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810017c5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810017c8:	89 50 08             	mov    %edx,0x8(%eax)
810017cb:	b8 48 4f 00 81       	mov    $0x81004f48,%eax
810017d0:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810017d3:	89 50 0c             	mov    %edx,0xc(%eax)
810017d6:	ba 48 4f 00 81       	mov    $0x81004f48,%edx
810017db:	8b 40 0c             	mov    0xc(%eax),%eax
810017de:	89 42 08             	mov    %eax,0x8(%edx)
810017e1:	ba 48 4f 00 81       	mov    $0x81004f48,%edx
810017e6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017e9:	89 50 0c             	mov    %edx,0xc(%eax)
810017ec:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017ef:	8b 50 0c             	mov    0xc(%eax),%edx
810017f2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017f5:	89 50 08             	mov    %edx,0x8(%eax)
810017f8:	8b 45 e8             	mov    -0x18(%ebp),%eax
810017fb:	83 c8 01             	or     $0x1,%eax
810017fe:	89 c2                	mov    %eax,%edx
81001800:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001803:	89 50 04             	mov    %edx,0x4(%eax)
81001806:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001809:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100180c:	01 c2                	add    %eax,%edx
8100180e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001811:	89 02                	mov    %eax,(%edx)
81001813:	83 ec 0c             	sub    $0xc,%esp
81001816:	ff 75 08             	push   0x8(%ebp)
81001819:	e8 dd 03 00 00       	call   81001bfb <__malloc_unlock>
8100181e:	83 c4 10             	add    $0x10,%esp
81001821:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001824:	83 c0 08             	add    $0x8,%eax
81001827:	e9 c0 01 00 00       	jmp    810019ec <_malloc_r+0x81d>
8100182c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001830:	78 56                	js     81001888 <_malloc_r+0x6b9>
81001832:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001835:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001838:	01 d0                	add    %edx,%eax
8100183a:	8b 50 04             	mov    0x4(%eax),%edx
8100183d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001840:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001843:	01 c8                	add    %ecx,%eax
81001845:	83 ca 01             	or     $0x1,%edx
81001848:	89 50 04             	mov    %edx,0x4(%eax)
8100184b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100184e:	8b 40 0c             	mov    0xc(%eax),%eax
81001851:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001854:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001857:	8b 40 08             	mov    0x8(%eax),%eax
8100185a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100185d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001860:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001863:	89 50 0c             	mov    %edx,0xc(%eax)
81001866:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001869:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100186c:	89 50 08             	mov    %edx,0x8(%eax)
8100186f:	83 ec 0c             	sub    $0xc,%esp
81001872:	ff 75 08             	push   0x8(%ebp)
81001875:	e8 81 03 00 00       	call   81001bfb <__malloc_unlock>
8100187a:	83 c4 10             	add    $0x10,%esp
8100187d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001880:	83 c0 08             	add    $0x8,%eax
81001883:	e9 64 01 00 00       	jmp    810019ec <_malloc_r+0x81d>
81001888:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100188b:	8b 40 0c             	mov    0xc(%eax),%eax
8100188e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001891:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001894:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001897:	0f 85 d2 fe ff ff    	jne    8100176f <_malloc_r+0x5a0>
8100189d:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
810018a1:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810018a5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810018a8:	83 e0 03             	and    $0x3,%eax
810018ab:	85 c0                	test   %eax,%eax
810018ad:	0f 85 ae fe ff ff    	jne    81001761 <_malloc_r+0x592>
810018b3:	8b 45 e0             	mov    -0x20(%ebp),%eax
810018b6:	83 e0 03             	and    $0x3,%eax
810018b9:	85 c0                	test   %eax,%eax
810018bb:	75 19                	jne    810018d6 <_malloc_r+0x707>
810018bd:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
810018c2:	8b 48 04             	mov    0x4(%eax),%ecx
810018c5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810018c8:	f7 d0                	not    %eax
810018ca:	ba 40 4f 00 81       	mov    $0x81004f40,%edx
810018cf:	21 c8                	and    %ecx,%eax
810018d1:	89 42 04             	mov    %eax,0x4(%edx)
810018d4:	eb 13                	jmp    810018e9 <_malloc_r+0x71a>
810018d6:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
810018da:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
810018de:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810018e1:	8b 40 08             	mov    0x8(%eax),%eax
810018e4:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
810018e7:	74 ca                	je     810018b3 <_malloc_r+0x6e4>
810018e9:	d1 65 e4             	shll   -0x1c(%ebp)
810018ec:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
810018f1:	8b 40 04             	mov    0x4(%eax),%eax
810018f4:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810018f7:	77 23                	ja     8100191c <_malloc_r+0x74d>
810018f9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810018fd:	74 1d                	je     8100191c <_malloc_r+0x74d>
810018ff:	eb 07                	jmp    81001908 <_malloc_r+0x739>
81001901:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81001905:	d1 65 e4             	shll   -0x1c(%ebp)
81001908:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
8100190d:	8b 40 04             	mov    0x4(%eax),%eax
81001910:	23 45 e4             	and    -0x1c(%ebp),%eax
81001913:	85 c0                	test   %eax,%eax
81001915:	74 ea                	je     81001901 <_malloc_r+0x732>
81001917:	e9 23 fe ff ff       	jmp    8100173f <_malloc_r+0x570>
8100191c:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
81001921:	8b 40 08             	mov    0x8(%eax),%eax
81001924:	8b 40 04             	mov    0x4(%eax),%eax
81001927:	83 e0 fc             	and    $0xfffffffc,%eax
8100192a:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100192d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001930:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
81001935:	8b 40 08             	mov    0x8(%eax),%eax
81001938:	8b 40 04             	mov    0x4(%eax),%eax
8100193b:	83 e0 fc             	and    $0xfffffffc,%eax
8100193e:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81001941:	77 06                	ja     81001949 <_malloc_r+0x77a>
81001943:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001947:	7f 53                	jg     8100199c <_malloc_r+0x7cd>
81001949:	83 ec 08             	sub    $0x8,%esp
8100194c:	ff 75 d0             	push   -0x30(%ebp)
8100194f:	ff 75 08             	push   0x8(%ebp)
81001952:	e8 e5 f5 ff ff       	call   81000f3c <malloc_extend_top>
81001957:	83 c4 10             	add    $0x10,%esp
8100195a:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
8100195f:	8b 40 08             	mov    0x8(%eax),%eax
81001962:	8b 40 04             	mov    0x4(%eax),%eax
81001965:	83 e0 fc             	and    $0xfffffffc,%eax
81001968:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100196b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100196e:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
81001973:	8b 40 08             	mov    0x8(%eax),%eax
81001976:	8b 40 04             	mov    0x4(%eax),%eax
81001979:	83 e0 fc             	and    $0xfffffffc,%eax
8100197c:	39 45 d0             	cmp    %eax,-0x30(%ebp)
8100197f:	77 06                	ja     81001987 <_malloc_r+0x7b8>
81001981:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001985:	7f 15                	jg     8100199c <_malloc_r+0x7cd>
81001987:	83 ec 0c             	sub    $0xc,%esp
8100198a:	ff 75 08             	push   0x8(%ebp)
8100198d:	e8 69 02 00 00       	call   81001bfb <__malloc_unlock>
81001992:	83 c4 10             	add    $0x10,%esp
81001995:	b8 00 00 00 00       	mov    $0x0,%eax
8100199a:	eb 50                	jmp    810019ec <_malloc_r+0x81d>
8100199c:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
810019a1:	8b 40 08             	mov    0x8(%eax),%eax
810019a4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810019a7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810019aa:	83 c8 01             	or     $0x1,%eax
810019ad:	89 c2                	mov    %eax,%edx
810019af:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019b2:	89 50 04             	mov    %edx,0x4(%eax)
810019b5:	ba 40 4f 00 81       	mov    $0x81004f40,%edx
810019ba:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810019bd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810019c0:	01 c8                	add    %ecx,%eax
810019c2:	89 42 08             	mov    %eax,0x8(%edx)
810019c5:	8b 45 e8             	mov    -0x18(%ebp),%eax
810019c8:	83 c8 01             	or     $0x1,%eax
810019cb:	89 c2                	mov    %eax,%edx
810019cd:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
810019d2:	8b 40 08             	mov    0x8(%eax),%eax
810019d5:	89 50 04             	mov    %edx,0x4(%eax)
810019d8:	83 ec 0c             	sub    $0xc,%esp
810019db:	ff 75 08             	push   0x8(%ebp)
810019de:	e8 18 02 00 00       	call   81001bfb <__malloc_unlock>
810019e3:	83 c4 10             	add    $0x10,%esp
810019e6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019e9:	83 c0 08             	add    $0x8,%eax
810019ec:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810019ef:	c9                   	leave  
810019f0:	c3                   	ret    
810019f1:	66 90                	xchg   %ax,%ax
810019f3:	66 90                	xchg   %ax,%ax
810019f5:	66 90                	xchg   %ax,%ax
810019f7:	66 90                	xchg   %ax,%ax
810019f9:	66 90                	xchg   %ax,%ax
810019fb:	66 90                	xchg   %ax,%ax
810019fd:	66 90                	xchg   %ax,%ax
810019ff:	90                   	nop

81001a00 <memchr>:
81001a00:	55                   	push   %ebp
81001a01:	89 e5                	mov    %esp,%ebp
81001a03:	57                   	push   %edi
81001a04:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001a08:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001a0b:	8b 7d 08             	mov    0x8(%ebp),%edi
81001a0e:	31 d2                	xor    %edx,%edx
81001a10:	85 c9                	test   %ecx,%ecx
81001a12:	74 79                	je     81001a8d <L20>
81001a14:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001a1a:	74 28                	je     81001a44 <L5>
81001a1c:	3a 07                	cmp    (%edi),%al
81001a1e:	74 6a                	je     81001a8a <L15>
81001a20:	47                   	inc    %edi
81001a21:	49                   	dec    %ecx
81001a22:	74 69                	je     81001a8d <L20>
81001a24:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001a2a:	74 18                	je     81001a44 <L5>
81001a2c:	3a 07                	cmp    (%edi),%al
81001a2e:	74 5a                	je     81001a8a <L15>
81001a30:	47                   	inc    %edi
81001a31:	49                   	dec    %ecx
81001a32:	74 59                	je     81001a8d <L20>
81001a34:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001a3a:	74 08                	je     81001a44 <L5>
81001a3c:	3a 07                	cmp    (%edi),%al
81001a3e:	74 4a                	je     81001a8a <L15>
81001a40:	47                   	inc    %edi
81001a41:	49                   	dec    %ecx
81001a42:	74 49                	je     81001a8d <L20>

81001a44 <L5>:
81001a44:	88 c4                	mov    %al,%ah
81001a46:	89 c2                	mov    %eax,%edx
81001a48:	c1 e2 10             	shl    $0x10,%edx
81001a4b:	09 d0                	or     %edx,%eax
81001a4d:	53                   	push   %ebx
81001a4e:	66 90                	xchg   %ax,%ax

81001a50 <L8>:
81001a50:	83 e9 04             	sub    $0x4,%ecx
81001a53:	72 1c                	jb     81001a71 <L9>
81001a55:	8b 17                	mov    (%edi),%edx
81001a57:	83 c7 04             	add    $0x4,%edi
81001a5a:	31 c2                	xor    %eax,%edx
81001a5c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81001a62:	f7 d2                	not    %edx
81001a64:	21 d3                	and    %edx,%ebx
81001a66:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
81001a6c:	74 e2                	je     81001a50 <L8>
81001a6e:	83 ef 04             	sub    $0x4,%edi

81001a71 <L9>:
81001a71:	5b                   	pop    %ebx
81001a72:	31 d2                	xor    %edx,%edx
81001a74:	83 c1 04             	add    $0x4,%ecx
81001a77:	74 14                	je     81001a8d <L20>
81001a79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81001a80 <L10>:
81001a80:	3a 07                	cmp    (%edi),%al
81001a82:	74 06                	je     81001a8a <L15>
81001a84:	47                   	inc    %edi
81001a85:	49                   	dec    %ecx
81001a86:	75 f8                	jne    81001a80 <L10>
81001a88:	31 ff                	xor    %edi,%edi

81001a8a <L15>:
81001a8a:	4a                   	dec    %edx
81001a8b:	21 fa                	and    %edi,%edx

81001a8d <L20>:
81001a8d:	89 d0                	mov    %edx,%eax
81001a8f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001a92:	5f                   	pop    %edi
81001a93:	c9                   	leave  
81001a94:	c3                   	ret    
81001a95:	66 90                	xchg   %ax,%ax
81001a97:	90                   	nop

81001a98 <memcpy>:
81001a98:	55                   	push   %ebp
81001a99:	89 e5                	mov    %esp,%ebp
81001a9b:	56                   	push   %esi
81001a9c:	57                   	push   %edi
81001a9d:	53                   	push   %ebx
81001a9e:	8b 7d 08             	mov    0x8(%ebp),%edi
81001aa1:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001aa4:	8b 75 0c             	mov    0xc(%ebp),%esi
81001aa7:	fc                   	cld    
81001aa8:	83 f9 08             	cmp    $0x8,%ecx
81001aab:	76 26                	jbe    81001ad3 <memcpy+0x3b>
81001aad:	89 fa                	mov    %edi,%edx
81001aaf:	89 cb                	mov    %ecx,%ebx
81001ab1:	83 e2 03             	and    $0x3,%edx
81001ab4:	74 10                	je     81001ac6 <memcpy+0x2e>
81001ab6:	b9 04 00 00 00       	mov    $0x4,%ecx
81001abb:	29 d1                	sub    %edx,%ecx
81001abd:	83 e1 03             	and    $0x3,%ecx
81001ac0:	29 cb                	sub    %ecx,%ebx
81001ac2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001ac4:	89 d9                	mov    %ebx,%ecx
81001ac6:	c1 e9 02             	shr    $0x2,%ecx
81001ac9:	8d 76 00             	lea    0x0(%esi),%esi
81001acc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001ace:	89 d9                	mov    %ebx,%ecx
81001ad0:	83 e1 03             	and    $0x3,%ecx
81001ad3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001ad5:	8b 45 08             	mov    0x8(%ebp),%eax
81001ad8:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001adb:	5b                   	pop    %ebx
81001adc:	5f                   	pop    %edi
81001add:	5e                   	pop    %esi
81001ade:	c9                   	leave  
81001adf:	c3                   	ret    

81001ae0 <memmove>:
81001ae0:	55                   	push   %ebp
81001ae1:	89 e5                	mov    %esp,%ebp
81001ae3:	56                   	push   %esi
81001ae4:	57                   	push   %edi
81001ae5:	53                   	push   %ebx
81001ae6:	8b 7d 08             	mov    0x8(%ebp),%edi
81001ae9:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001aec:	8b 75 0c             	mov    0xc(%ebp),%esi
81001aef:	fc                   	cld    
81001af0:	39 fe                	cmp    %edi,%esi
81001af2:	73 43                	jae    81001b37 <memmove+0x57>
81001af4:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81001af8:	39 df                	cmp    %ebx,%edi
81001afa:	77 3b                	ja     81001b37 <memmove+0x57>
81001afc:	01 ce                	add    %ecx,%esi
81001afe:	01 cf                	add    %ecx,%edi
81001b00:	fd                   	std    
81001b01:	83 f9 08             	cmp    $0x8,%ecx
81001b04:	76 2b                	jbe    81001b31 <memmove+0x51>
81001b06:	89 fa                	mov    %edi,%edx
81001b08:	89 cb                	mov    %ecx,%ebx
81001b0a:	83 e2 03             	and    $0x3,%edx
81001b0d:	74 0c                	je     81001b1b <memmove+0x3b>
81001b0f:	89 d1                	mov    %edx,%ecx
81001b11:	4e                   	dec    %esi
81001b12:	4f                   	dec    %edi
81001b13:	29 cb                	sub    %ecx,%ebx
81001b15:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b17:	89 d9                	mov    %ebx,%ecx
81001b19:	46                   	inc    %esi
81001b1a:	47                   	inc    %edi
81001b1b:	c1 e9 02             	shr    $0x2,%ecx
81001b1e:	83 ee 04             	sub    $0x4,%esi
81001b21:	83 ef 04             	sub    $0x4,%edi
81001b24:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001b26:	83 c6 04             	add    $0x4,%esi
81001b29:	83 c7 04             	add    $0x4,%edi
81001b2c:	89 d9                	mov    %ebx,%ecx
81001b2e:	83 e1 03             	and    $0x3,%ecx
81001b31:	4e                   	dec    %esi
81001b32:	4f                   	dec    %edi
81001b33:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b35:	eb 2a                	jmp    81001b61 <memmove+0x81>
81001b37:	83 f9 08             	cmp    $0x8,%ecx
81001b3a:	76 23                	jbe    81001b5f <memmove+0x7f>
81001b3c:	89 fa                	mov    %edi,%edx
81001b3e:	89 cb                	mov    %ecx,%ebx
81001b40:	83 e2 03             	and    $0x3,%edx
81001b43:	74 10                	je     81001b55 <memmove+0x75>
81001b45:	b9 04 00 00 00       	mov    $0x4,%ecx
81001b4a:	29 d1                	sub    %edx,%ecx
81001b4c:	83 e1 03             	and    $0x3,%ecx
81001b4f:	29 cb                	sub    %ecx,%ebx
81001b51:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b53:	89 d9                	mov    %ebx,%ecx
81001b55:	c1 e9 02             	shr    $0x2,%ecx
81001b58:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001b5a:	89 d9                	mov    %ebx,%ecx
81001b5c:	83 e1 03             	and    $0x3,%ecx
81001b5f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b61:	8b 45 08             	mov    0x8(%ebp),%eax
81001b64:	fc                   	cld    
81001b65:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001b68:	5b                   	pop    %ebx
81001b69:	5f                   	pop    %edi
81001b6a:	5e                   	pop    %esi
81001b6b:	c9                   	leave  
81001b6c:	c3                   	ret    

81001b6d <memset>:
81001b6d:	55                   	push   %ebp
81001b6e:	89 e5                	mov    %esp,%ebp
81001b70:	57                   	push   %edi
81001b71:	8b 7d 08             	mov    0x8(%ebp),%edi
81001b74:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001b78:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001b7b:	fc                   	cld    
81001b7c:	83 f9 10             	cmp    $0x10,%ecx
81001b7f:	76 69                	jbe    81001bea <memset+0x7d>
81001b81:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b87:	74 4c                	je     81001bd5 <memset+0x68>
81001b89:	88 07                	mov    %al,(%edi)
81001b8b:	47                   	inc    %edi
81001b8c:	49                   	dec    %ecx
81001b8d:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b93:	74 40                	je     81001bd5 <memset+0x68>
81001b95:	88 07                	mov    %al,(%edi)
81001b97:	47                   	inc    %edi
81001b98:	49                   	dec    %ecx
81001b99:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b9f:	74 34                	je     81001bd5 <memset+0x68>
81001ba1:	88 07                	mov    %al,(%edi)
81001ba3:	47                   	inc    %edi
81001ba4:	49                   	dec    %ecx
81001ba5:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001bab:	74 28                	je     81001bd5 <memset+0x68>
81001bad:	88 07                	mov    %al,(%edi)
81001baf:	47                   	inc    %edi
81001bb0:	49                   	dec    %ecx
81001bb1:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001bb7:	74 1c                	je     81001bd5 <memset+0x68>
81001bb9:	88 07                	mov    %al,(%edi)
81001bbb:	47                   	inc    %edi
81001bbc:	49                   	dec    %ecx
81001bbd:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001bc3:	74 10                	je     81001bd5 <memset+0x68>
81001bc5:	88 07                	mov    %al,(%edi)
81001bc7:	47                   	inc    %edi
81001bc8:	49                   	dec    %ecx
81001bc9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001bcf:	74 04                	je     81001bd5 <memset+0x68>
81001bd1:	88 07                	mov    %al,(%edi)
81001bd3:	47                   	inc    %edi
81001bd4:	49                   	dec    %ecx
81001bd5:	88 c4                	mov    %al,%ah
81001bd7:	89 c2                	mov    %eax,%edx
81001bd9:	c1 e2 10             	shl    $0x10,%edx
81001bdc:	09 d0                	or     %edx,%eax
81001bde:	89 ca                	mov    %ecx,%edx
81001be0:	c1 e9 02             	shr    $0x2,%ecx
81001be3:	83 e2 03             	and    $0x3,%edx
81001be6:	f3 ab                	rep stos %eax,%es:(%edi)
81001be8:	89 d1                	mov    %edx,%ecx
81001bea:	f3 aa                	rep stos %al,%es:(%edi)
81001bec:	8b 45 08             	mov    0x8(%ebp),%eax
81001bef:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001bf2:	5f                   	pop    %edi
81001bf3:	c9                   	leave  
81001bf4:	c3                   	ret    

81001bf5 <__malloc_lock>:
81001bf5:	55                   	push   %ebp
81001bf6:	89 e5                	mov    %esp,%ebp
81001bf8:	90                   	nop
81001bf9:	5d                   	pop    %ebp
81001bfa:	c3                   	ret    

81001bfb <__malloc_unlock>:
81001bfb:	55                   	push   %ebp
81001bfc:	89 e5                	mov    %esp,%ebp
81001bfe:	90                   	nop
81001bff:	5d                   	pop    %ebp
81001c00:	c3                   	ret    

81001c01 <__sprint_r>:
81001c01:	55                   	push   %ebp
81001c02:	89 e5                	mov    %esp,%ebp
81001c04:	56                   	push   %esi
81001c05:	53                   	push   %ebx
81001c06:	83 ec 10             	sub    $0x10,%esp
81001c09:	8b 5d 10             	mov    0x10(%ebp),%ebx
81001c0c:	be 00 00 00 00       	mov    $0x0,%esi
81001c11:	8b 43 08             	mov    0x8(%ebx),%eax
81001c14:	85 c0                	test   %eax,%eax
81001c16:	75 11                	jne    81001c29 <__sprint_r+0x28>
81001c18:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81001c1f:	b8 00 00 00 00       	mov    $0x0,%eax
81001c24:	e9 ad 00 00 00       	jmp    81001cd6 <__sprint_r+0xd5>
81001c29:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c2c:	8b 40 64             	mov    0x64(%eax),%eax
81001c2f:	25 00 20 00 00       	and    $0x2000,%eax
81001c34:	85 c0                	test   %eax,%eax
81001c36:	74 7a                	je     81001cb2 <__sprint_r+0xb1>
81001c38:	8b 03                	mov    (%ebx),%eax
81001c3a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001c3d:	eb 6a                	jmp    81001ca9 <__sprint_r+0xa8>
81001c3f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001c42:	8b 00                	mov    (%eax),%eax
81001c44:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001c47:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001c4a:	8b 40 04             	mov    0x4(%eax),%eax
81001c4d:	c1 e8 02             	shr    $0x2,%eax
81001c50:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001c53:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001c5a:	eb 33                	jmp    81001c8f <__sprint_r+0x8e>
81001c5c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001c5f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001c66:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001c69:	01 d0                	add    %edx,%eax
81001c6b:	8b 00                	mov    (%eax),%eax
81001c6d:	83 ec 04             	sub    $0x4,%esp
81001c70:	ff 75 0c             	push   0xc(%ebp)
81001c73:	50                   	push   %eax
81001c74:	ff 75 08             	push   0x8(%ebp)
81001c77:	e8 0b 1d 00 00       	call   81003987 <_fputwc_r>
81001c7c:	83 c4 10             	add    $0x10,%esp
81001c7f:	83 f8 ff             	cmp    $0xffffffff,%eax
81001c82:	75 07                	jne    81001c8b <__sprint_r+0x8a>
81001c84:	be ff ff ff ff       	mov    $0xffffffff,%esi
81001c89:	eb 3b                	jmp    81001cc6 <__sprint_r+0xc5>
81001c8b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001c8f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001c92:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81001c95:	7c c5                	jl     81001c5c <__sprint_r+0x5b>
81001c97:	8b 43 08             	mov    0x8(%ebx),%eax
81001c9a:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001c9d:	c1 e2 02             	shl    $0x2,%edx
81001ca0:	29 d0                	sub    %edx,%eax
81001ca2:	89 43 08             	mov    %eax,0x8(%ebx)
81001ca5:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
81001ca9:	8b 43 08             	mov    0x8(%ebx),%eax
81001cac:	85 c0                	test   %eax,%eax
81001cae:	75 8f                	jne    81001c3f <__sprint_r+0x3e>
81001cb0:	eb 14                	jmp    81001cc6 <__sprint_r+0xc5>
81001cb2:	83 ec 04             	sub    $0x4,%esp
81001cb5:	53                   	push   %ebx
81001cb6:	ff 75 0c             	push   0xc(%ebp)
81001cb9:	ff 75 08             	push   0x8(%ebp)
81001cbc:	e8 0a ed ff ff       	call   810009cb <__sfvwrite_r>
81001cc1:	83 c4 10             	add    $0x10,%esp
81001cc4:	89 c6                	mov    %eax,%esi
81001cc6:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81001ccd:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81001cd4:	89 f0                	mov    %esi,%eax
81001cd6:	8d 65 f8             	lea    -0x8(%ebp),%esp
81001cd9:	5b                   	pop    %ebx
81001cda:	5e                   	pop    %esi
81001cdb:	5d                   	pop    %ebp
81001cdc:	c3                   	ret    

81001cdd <__sfputc_r>:
81001cdd:	55                   	push   %ebp
81001cde:	89 e5                	mov    %esp,%ebp
81001ce0:	83 ec 08             	sub    $0x8,%esp
81001ce3:	8b 45 10             	mov    0x10(%ebp),%eax
81001ce6:	8b 40 08             	mov    0x8(%eax),%eax
81001ce9:	8d 50 ff             	lea    -0x1(%eax),%edx
81001cec:	8b 45 10             	mov    0x10(%ebp),%eax
81001cef:	89 50 08             	mov    %edx,0x8(%eax)
81001cf2:	8b 45 10             	mov    0x10(%ebp),%eax
81001cf5:	8b 40 08             	mov    0x8(%eax),%eax
81001cf8:	85 c0                	test   %eax,%eax
81001cfa:	79 17                	jns    81001d13 <__sfputc_r+0x36>
81001cfc:	8b 45 10             	mov    0x10(%ebp),%eax
81001cff:	8b 50 08             	mov    0x8(%eax),%edx
81001d02:	8b 45 10             	mov    0x10(%ebp),%eax
81001d05:	8b 40 18             	mov    0x18(%eax),%eax
81001d08:	39 c2                	cmp    %eax,%edx
81001d0a:	7c 21                	jl     81001d2d <__sfputc_r+0x50>
81001d0c:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d0f:	3c 0a                	cmp    $0xa,%al
81001d11:	74 1a                	je     81001d2d <__sfputc_r+0x50>
81001d13:	8b 45 10             	mov    0x10(%ebp),%eax
81001d16:	8b 00                	mov    (%eax),%eax
81001d18:	8d 48 01             	lea    0x1(%eax),%ecx
81001d1b:	8b 55 10             	mov    0x10(%ebp),%edx
81001d1e:	89 0a                	mov    %ecx,(%edx)
81001d20:	8b 55 0c             	mov    0xc(%ebp),%edx
81001d23:	88 10                	mov    %dl,(%eax)
81001d25:	0f b6 00             	movzbl (%eax),%eax
81001d28:	0f b6 c0             	movzbl %al,%eax
81001d2b:	eb 14                	jmp    81001d41 <__sfputc_r+0x64>
81001d2d:	83 ec 04             	sub    $0x4,%esp
81001d30:	ff 75 10             	push   0x10(%ebp)
81001d33:	ff 75 0c             	push   0xc(%ebp)
81001d36:	ff 75 08             	push   0x8(%ebp)
81001d39:	e8 44 14 00 00       	call   81003182 <__swbuf_r>
81001d3e:	83 c4 10             	add    $0x10,%esp
81001d41:	c9                   	leave  
81001d42:	c3                   	ret    

81001d43 <__sfputs_r>:
81001d43:	55                   	push   %ebp
81001d44:	89 e5                	mov    %esp,%ebp
81001d46:	53                   	push   %ebx
81001d47:	83 ec 14             	sub    $0x14,%esp
81001d4a:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d4d:	8b 40 64             	mov    0x64(%eax),%eax
81001d50:	25 00 20 00 00       	and    $0x2000,%eax
81001d55:	85 c0                	test   %eax,%eax
81001d57:	74 4c                	je     81001da5 <__sfputs_r+0x62>
81001d59:	8b 45 10             	mov    0x10(%ebp),%eax
81001d5c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001d5f:	bb 00 00 00 00       	mov    $0x0,%ebx
81001d64:	eb 31                	jmp    81001d97 <__sfputs_r+0x54>
81001d66:	89 d8                	mov    %ebx,%eax
81001d68:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d6f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d72:	01 d0                	add    %edx,%eax
81001d74:	8b 00                	mov    (%eax),%eax
81001d76:	83 ec 04             	sub    $0x4,%esp
81001d79:	ff 75 0c             	push   0xc(%ebp)
81001d7c:	50                   	push   %eax
81001d7d:	ff 75 08             	push   0x8(%ebp)
81001d80:	e8 02 1c 00 00       	call   81003987 <_fputwc_r>
81001d85:	83 c4 10             	add    $0x10,%esp
81001d88:	83 f8 ff             	cmp    $0xffffffff,%eax
81001d8b:	75 07                	jne    81001d94 <__sfputs_r+0x51>
81001d8d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001d92:	eb 52                	jmp    81001de6 <__sfputs_r+0xa3>
81001d94:	83 c3 01             	add    $0x1,%ebx
81001d97:	8b 45 14             	mov    0x14(%ebp),%eax
81001d9a:	c1 e8 02             	shr    $0x2,%eax
81001d9d:	89 da                	mov    %ebx,%edx
81001d9f:	39 d0                	cmp    %edx,%eax
81001da1:	77 c3                	ja     81001d66 <__sfputs_r+0x23>
81001da3:	eb 3c                	jmp    81001de1 <__sfputs_r+0x9e>
81001da5:	bb 00 00 00 00       	mov    $0x0,%ebx
81001daa:	eb 2e                	jmp    81001dda <__sfputs_r+0x97>
81001dac:	89 da                	mov    %ebx,%edx
81001dae:	8b 45 10             	mov    0x10(%ebp),%eax
81001db1:	01 d0                	add    %edx,%eax
81001db3:	0f b6 00             	movzbl (%eax),%eax
81001db6:	0f be c0             	movsbl %al,%eax
81001db9:	83 ec 04             	sub    $0x4,%esp
81001dbc:	ff 75 0c             	push   0xc(%ebp)
81001dbf:	50                   	push   %eax
81001dc0:	ff 75 08             	push   0x8(%ebp)
81001dc3:	e8 15 ff ff ff       	call   81001cdd <__sfputc_r>
81001dc8:	83 c4 10             	add    $0x10,%esp
81001dcb:	83 f8 ff             	cmp    $0xffffffff,%eax
81001dce:	75 07                	jne    81001dd7 <__sfputs_r+0x94>
81001dd0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001dd5:	eb 0f                	jmp    81001de6 <__sfputs_r+0xa3>
81001dd7:	83 c3 01             	add    $0x1,%ebx
81001dda:	89 d8                	mov    %ebx,%eax
81001ddc:	39 45 14             	cmp    %eax,0x14(%ebp)
81001ddf:	77 cb                	ja     81001dac <__sfputs_r+0x69>
81001de1:	b8 00 00 00 00       	mov    $0x0,%eax
81001de6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001de9:	c9                   	leave  
81001dea:	c3                   	ret    

81001deb <vfiprintf>:
81001deb:	55                   	push   %ebp
81001dec:	89 e5                	mov    %esp,%ebp
81001dee:	83 ec 18             	sub    $0x18,%esp
81001df1:	a1 24 4f 00 81       	mov    0x81004f24,%eax
81001df6:	ff 75 10             	push   0x10(%ebp)
81001df9:	ff 75 0c             	push   0xc(%ebp)
81001dfc:	ff 75 08             	push   0x8(%ebp)
81001dff:	50                   	push   %eax
81001e00:	e8 0b 00 00 00       	call   81001e10 <_vfiprintf_r>
81001e05:	83 c4 10             	add    $0x10,%esp
81001e08:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001e0b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e0e:	c9                   	leave  
81001e0f:	c3                   	ret    

81001e10 <_vfiprintf_r>:
81001e10:	55                   	push   %ebp
81001e11:	89 e5                	mov    %esp,%ebp
81001e13:	57                   	push   %edi
81001e14:	56                   	push   %esi
81001e15:	53                   	push   %ebx
81001e16:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
81001e1c:	c7 45 e4 43 1d 00 81 	movl   $0x81001d43,-0x1c(%ebp)
81001e23:	8b 45 08             	mov    0x8(%ebp),%eax
81001e26:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001e29:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81001e2d:	74 18                	je     81001e47 <_vfiprintf_r+0x37>
81001e2f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e32:	8b 40 38             	mov    0x38(%eax),%eax
81001e35:	85 c0                	test   %eax,%eax
81001e37:	75 0e                	jne    81001e47 <_vfiprintf_r+0x37>
81001e39:	83 ec 0c             	sub    $0xc,%esp
81001e3c:	ff 75 e0             	push   -0x20(%ebp)
81001e3f:	e8 7a ea ff ff       	call   810008be <__sinit>
81001e44:	83 c4 10             	add    $0x10,%esp
81001e47:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e4a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001e4e:	98                   	cwtl   
81001e4f:	83 e0 08             	and    $0x8,%eax
81001e52:	85 c0                	test   %eax,%eax
81001e54:	74 0a                	je     81001e60 <_vfiprintf_r+0x50>
81001e56:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e59:	8b 40 10             	mov    0x10(%eax),%eax
81001e5c:	85 c0                	test   %eax,%eax
81001e5e:	75 1f                	jne    81001e7f <_vfiprintf_r+0x6f>
81001e60:	83 ec 08             	sub    $0x8,%esp
81001e63:	ff 75 0c             	push   0xc(%ebp)
81001e66:	ff 75 08             	push   0x8(%ebp)
81001e69:	e8 8d 14 00 00       	call   810032fb <__swsetup_r>
81001e6e:	83 c4 10             	add    $0x10,%esp
81001e71:	85 c0                	test   %eax,%eax
81001e73:	74 0a                	je     81001e7f <_vfiprintf_r+0x6f>
81001e75:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001e7a:	e9 df 02 00 00       	jmp    8100215e <_vfiprintf_r+0x34e>
81001e7f:	8b 5d 10             	mov    0x10(%ebp),%ebx
81001e82:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
81001e89:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81001e8d:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81001e91:	8b 45 14             	mov    0x14(%ebp),%eax
81001e94:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81001e9a:	89 de                	mov    %ebx,%esi
81001e9c:	eb 03                	jmp    81001ea1 <_vfiprintf_r+0x91>
81001e9e:	83 c3 01             	add    $0x1,%ebx
81001ea1:	0f b6 03             	movzbl (%ebx),%eax
81001ea4:	84 c0                	test   %al,%al
81001ea6:	74 07                	je     81001eaf <_vfiprintf_r+0x9f>
81001ea8:	0f b6 03             	movzbl (%ebx),%eax
81001eab:	3c 25                	cmp    $0x25,%al
81001ead:	75 ef                	jne    81001e9e <_vfiprintf_r+0x8e>
81001eaf:	89 d8                	mov    %ebx,%eax
81001eb1:	29 f0                	sub    %esi,%eax
81001eb3:	85 c0                	test   %eax,%eax
81001eb5:	74 2b                	je     81001ee2 <_vfiprintf_r+0xd2>
81001eb7:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81001ebd:	50                   	push   %eax
81001ebe:	56                   	push   %esi
81001ebf:	ff 75 0c             	push   0xc(%ebp)
81001ec2:	ff 75 08             	push   0x8(%ebp)
81001ec5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001ec8:	ff d0                	call   *%eax
81001eca:	83 c4 10             	add    $0x10,%esp
81001ecd:	83 f8 ff             	cmp    $0xffffffff,%eax
81001ed0:	0f 84 68 02 00 00    	je     8100213e <_vfiprintf_r+0x32e>
81001ed6:	8b 45 94             	mov    -0x6c(%ebp),%eax
81001ed9:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81001edf:	89 45 94             	mov    %eax,-0x6c(%ebp)
81001ee2:	0f b6 03             	movzbl (%ebx),%eax
81001ee5:	84 c0                	test   %al,%al
81001ee7:	0f 84 54 02 00 00    	je     81002141 <_vfiprintf_r+0x331>
81001eed:	83 c3 01             	add    $0x1,%ebx
81001ef0:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
81001ef7:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81001efe:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81001f05:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
81001f0c:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81001f10:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81001f17:	c7 45 dc 98 47 00 81 	movl   $0x81004798,-0x24(%ebp)
81001f1e:	eb 1b                	jmp    81001f3b <_vfiprintf_r+0x12b>
81001f20:	8b 55 80             	mov    -0x80(%ebp),%edx
81001f23:	89 f0                	mov    %esi,%eax
81001f25:	2b 45 dc             	sub    -0x24(%ebp),%eax
81001f28:	be 01 00 00 00       	mov    $0x1,%esi
81001f2d:	89 c1                	mov    %eax,%ecx
81001f2f:	d3 e6                	shl    %cl,%esi
81001f31:	89 f0                	mov    %esi,%eax
81001f33:	09 d0                	or     %edx,%eax
81001f35:	89 45 80             	mov    %eax,-0x80(%ebp)
81001f38:	83 c3 01             	add    $0x1,%ebx
81001f3b:	0f b6 03             	movzbl (%ebx),%eax
81001f3e:	0f be c0             	movsbl %al,%eax
81001f41:	83 ec 04             	sub    $0x4,%esp
81001f44:	6a 05                	push   $0x5
81001f46:	50                   	push   %eax
81001f47:	ff 75 dc             	push   -0x24(%ebp)
81001f4a:	e8 b1 fa ff ff       	call   81001a00 <memchr>
81001f4f:	83 c4 10             	add    $0x10,%esp
81001f52:	89 c6                	mov    %eax,%esi
81001f54:	85 f6                	test   %esi,%esi
81001f56:	75 c8                	jne    81001f20 <_vfiprintf_r+0x110>
81001f58:	8b 45 80             	mov    -0x80(%ebp),%eax
81001f5b:	83 e0 10             	and    $0x10,%eax
81001f5e:	85 c0                	test   %eax,%eax
81001f60:	74 04                	je     81001f66 <_vfiprintf_r+0x156>
81001f62:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81001f66:	8b 45 80             	mov    -0x80(%ebp),%eax
81001f69:	83 e0 08             	and    $0x8,%eax
81001f6c:	85 c0                	test   %eax,%eax
81001f6e:	74 04                	je     81001f74 <_vfiprintf_r+0x164>
81001f70:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81001f74:	0f b6 03             	movzbl (%ebx),%eax
81001f77:	3c 2a                	cmp    $0x2a,%al
81001f79:	75 50                	jne    81001fcb <_vfiprintf_r+0x1bb>
81001f7b:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81001f81:	8d 50 04             	lea    0x4(%eax),%edx
81001f84:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
81001f8a:	8b 00                	mov    (%eax),%eax
81001f8c:	89 45 8c             	mov    %eax,-0x74(%ebp)
81001f8f:	8b 45 8c             	mov    -0x74(%ebp),%eax
81001f92:	85 c0                	test   %eax,%eax
81001f94:	79 11                	jns    81001fa7 <_vfiprintf_r+0x197>
81001f96:	8b 45 8c             	mov    -0x74(%ebp),%eax
81001f99:	f7 d8                	neg    %eax
81001f9b:	89 45 8c             	mov    %eax,-0x74(%ebp)
81001f9e:	8b 45 80             	mov    -0x80(%ebp),%eax
81001fa1:	83 c8 02             	or     $0x2,%eax
81001fa4:	89 45 80             	mov    %eax,-0x80(%ebp)
81001fa7:	83 c3 01             	add    $0x1,%ebx
81001faa:	eb 2d                	jmp    81001fd9 <_vfiprintf_r+0x1c9>
81001fac:	8b 55 8c             	mov    -0x74(%ebp),%edx
81001faf:	89 d0                	mov    %edx,%eax
81001fb1:	c1 e0 02             	shl    $0x2,%eax
81001fb4:	01 d0                	add    %edx,%eax
81001fb6:	01 c0                	add    %eax,%eax
81001fb8:	89 c2                	mov    %eax,%edx
81001fba:	0f b6 03             	movzbl (%ebx),%eax
81001fbd:	0f be c0             	movsbl %al,%eax
81001fc0:	83 e8 30             	sub    $0x30,%eax
81001fc3:	01 d0                	add    %edx,%eax
81001fc5:	89 45 8c             	mov    %eax,-0x74(%ebp)
81001fc8:	83 c3 01             	add    $0x1,%ebx
81001fcb:	0f b6 03             	movzbl (%ebx),%eax
81001fce:	0f be c0             	movsbl %al,%eax
81001fd1:	83 e8 30             	sub    $0x30,%eax
81001fd4:	83 f8 09             	cmp    $0x9,%eax
81001fd7:	76 d3                	jbe    81001fac <_vfiprintf_r+0x19c>
81001fd9:	0f b6 03             	movzbl (%ebx),%eax
81001fdc:	3c 2e                	cmp    $0x2e,%al
81001fde:	75 67                	jne    81002047 <_vfiprintf_r+0x237>
81001fe0:	83 c3 01             	add    $0x1,%ebx
81001fe3:	0f b6 03             	movzbl (%ebx),%eax
81001fe6:	3c 2a                	cmp    $0x2a,%al
81001fe8:	75 27                	jne    81002011 <_vfiprintf_r+0x201>
81001fea:	83 c3 01             	add    $0x1,%ebx
81001fed:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81001ff3:	8d 50 04             	lea    0x4(%eax),%edx
81001ff6:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
81001ffc:	8b 00                	mov    (%eax),%eax
81001ffe:	89 45 84             	mov    %eax,-0x7c(%ebp)
81002001:	8b 45 84             	mov    -0x7c(%ebp),%eax
81002004:	85 c0                	test   %eax,%eax
81002006:	79 3f                	jns    81002047 <_vfiprintf_r+0x237>
81002008:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
8100200f:	eb 36                	jmp    81002047 <_vfiprintf_r+0x237>
81002011:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
81002018:	eb 1f                	jmp    81002039 <_vfiprintf_r+0x229>
8100201a:	8b 55 84             	mov    -0x7c(%ebp),%edx
8100201d:	89 d0                	mov    %edx,%eax
8100201f:	c1 e0 02             	shl    $0x2,%eax
81002022:	01 d0                	add    %edx,%eax
81002024:	01 c0                	add    %eax,%eax
81002026:	89 c2                	mov    %eax,%edx
81002028:	0f b6 03             	movzbl (%ebx),%eax
8100202b:	0f be c0             	movsbl %al,%eax
8100202e:	83 e8 30             	sub    $0x30,%eax
81002031:	01 d0                	add    %edx,%eax
81002033:	89 45 84             	mov    %eax,-0x7c(%ebp)
81002036:	83 c3 01             	add    $0x1,%ebx
81002039:	0f b6 03             	movzbl (%ebx),%eax
8100203c:	0f be c0             	movsbl %al,%eax
8100203f:	83 e8 30             	sub    $0x30,%eax
81002042:	83 f8 09             	cmp    $0x9,%eax
81002045:	76 d3                	jbe    8100201a <_vfiprintf_r+0x20a>
81002047:	c7 45 dc 9e 47 00 81 	movl   $0x8100479e,-0x24(%ebp)
8100204e:	0f b6 03             	movzbl (%ebx),%eax
81002051:	0f be c0             	movsbl %al,%eax
81002054:	83 ec 04             	sub    $0x4,%esp
81002057:	6a 03                	push   $0x3
81002059:	50                   	push   %eax
8100205a:	ff 75 dc             	push   -0x24(%ebp)
8100205d:	e8 9e f9 ff ff       	call   81001a00 <memchr>
81002062:	83 c4 10             	add    $0x10,%esp
81002065:	89 c6                	mov    %eax,%esi
81002067:	85 f6                	test   %esi,%esi
81002069:	74 1b                	je     81002086 <_vfiprintf_r+0x276>
8100206b:	8b 55 80             	mov    -0x80(%ebp),%edx
8100206e:	89 f0                	mov    %esi,%eax
81002070:	2b 45 dc             	sub    -0x24(%ebp),%eax
81002073:	be 40 00 00 00       	mov    $0x40,%esi
81002078:	89 c1                	mov    %eax,%ecx
8100207a:	d3 e6                	shl    %cl,%esi
8100207c:	89 f0                	mov    %esi,%eax
8100207e:	09 d0                	or     %edx,%eax
81002080:	89 45 80             	mov    %eax,-0x80(%ebp)
81002083:	83 c3 01             	add    $0x1,%ebx
81002086:	89 d8                	mov    %ebx,%eax
81002088:	8d 58 01             	lea    0x1(%eax),%ebx
8100208b:	0f b6 00             	movzbl (%eax),%eax
8100208e:	88 45 98             	mov    %al,-0x68(%ebp)
81002091:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
81002095:	0f be c0             	movsbl %al,%eax
81002098:	83 ec 04             	sub    $0x4,%esp
8100209b:	6a 06                	push   $0x6
8100209d:	50                   	push   %eax
8100209e:	68 a2 47 00 81       	push   $0x810047a2
810020a3:	e8 58 f9 ff ff       	call   81001a00 <memchr>
810020a8:	83 c4 10             	add    $0x10,%esp
810020ab:	89 c6                	mov    %eax,%esi
810020ad:	85 f6                	test   %esi,%esi
810020af:	74 5a                	je     8100210b <_vfiprintf_r+0x2fb>
810020b1:	b8 00 00 00 00       	mov    $0x0,%eax
810020b6:	85 c0                	test   %eax,%eax
810020b8:	75 2e                	jne    810020e8 <_vfiprintf_r+0x2d8>
810020ba:	8b 45 80             	mov    -0x80(%ebp),%eax
810020bd:	25 00 01 00 00       	and    $0x100,%eax
810020c2:	85 c0                	test   %eax,%eax
810020c4:	74 11                	je     810020d7 <_vfiprintf_r+0x2c7>
810020c6:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810020cc:	83 c0 0c             	add    $0xc,%eax
810020cf:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810020d5:	eb 55                	jmp    8100212c <_vfiprintf_r+0x31c>
810020d7:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810020dd:	83 c0 08             	add    $0x8,%eax
810020e0:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810020e6:	eb 44                	jmp    8100212c <_vfiprintf_r+0x31c>
810020e8:	83 ec 0c             	sub    $0xc,%esp
810020eb:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
810020f1:	50                   	push   %eax
810020f2:	ff 75 e4             	push   -0x1c(%ebp)
810020f5:	ff 75 0c             	push   0xc(%ebp)
810020f8:	8d 45 80             	lea    -0x80(%ebp),%eax
810020fb:	50                   	push   %eax
810020fc:	ff 75 08             	push   0x8(%ebp)
810020ff:	e8 fc de ff 7e       	call   0 <main-0x81000000>
81002104:	83 c4 20             	add    $0x20,%esp
81002107:	89 c7                	mov    %eax,%edi
81002109:	eb 21                	jmp    8100212c <_vfiprintf_r+0x31c>
8100210b:	83 ec 0c             	sub    $0xc,%esp
8100210e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81002114:	50                   	push   %eax
81002115:	ff 75 e4             	push   -0x1c(%ebp)
81002118:	ff 75 0c             	push   0xc(%ebp)
8100211b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100211e:	50                   	push   %eax
8100211f:	ff 75 08             	push   0x8(%ebp)
81002122:	e8 da 01 00 00       	call   81002301 <_printf_i>
81002127:	83 c4 20             	add    $0x20,%esp
8100212a:	89 c7                	mov    %eax,%edi
8100212c:	83 ff ff             	cmp    $0xffffffff,%edi
8100212f:	74 13                	je     81002144 <_vfiprintf_r+0x334>
81002131:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002134:	01 f8                	add    %edi,%eax
81002136:	89 45 94             	mov    %eax,-0x6c(%ebp)
81002139:	e9 5c fd ff ff       	jmp    81001e9a <_vfiprintf_r+0x8a>
8100213e:	90                   	nop
8100213f:	eb 04                	jmp    81002145 <_vfiprintf_r+0x335>
81002141:	90                   	nop
81002142:	eb 01                	jmp    81002145 <_vfiprintf_r+0x335>
81002144:	90                   	nop
81002145:	8b 45 0c             	mov    0xc(%ebp),%eax
81002148:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100214c:	98                   	cwtl   
8100214d:	83 e0 40             	and    $0x40,%eax
81002150:	85 c0                	test   %eax,%eax
81002152:	75 05                	jne    81002159 <_vfiprintf_r+0x349>
81002154:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002157:	eb 05                	jmp    8100215e <_vfiprintf_r+0x34e>
81002159:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100215e:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002161:	5b                   	pop    %ebx
81002162:	5e                   	pop    %esi
81002163:	5f                   	pop    %edi
81002164:	5d                   	pop    %ebp
81002165:	c3                   	ret    

81002166 <_printf_common>:
81002166:	55                   	push   %ebp
81002167:	89 e5                	mov    %esp,%ebp
81002169:	83 ec 18             	sub    $0x18,%esp
8100216c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100216f:	8b 50 10             	mov    0x10(%eax),%edx
81002172:	8b 45 0c             	mov    0xc(%ebp),%eax
81002175:	8b 40 08             	mov    0x8(%eax),%eax
81002178:	39 c2                	cmp    %eax,%edx
8100217a:	0f 4c d0             	cmovl  %eax,%edx
8100217d:	8b 45 10             	mov    0x10(%ebp),%eax
81002180:	89 10                	mov    %edx,(%eax)
81002182:	8b 45 0c             	mov    0xc(%ebp),%eax
81002185:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81002189:	84 c0                	test   %al,%al
8100218b:	74 0d                	je     8100219a <_printf_common+0x34>
8100218d:	8b 45 10             	mov    0x10(%ebp),%eax
81002190:	8b 00                	mov    (%eax),%eax
81002192:	8d 50 01             	lea    0x1(%eax),%edx
81002195:	8b 45 10             	mov    0x10(%ebp),%eax
81002198:	89 10                	mov    %edx,(%eax)
8100219a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100219d:	8b 00                	mov    (%eax),%eax
8100219f:	83 e0 20             	and    $0x20,%eax
810021a2:	85 c0                	test   %eax,%eax
810021a4:	74 0d                	je     810021b3 <_printf_common+0x4d>
810021a6:	8b 45 10             	mov    0x10(%ebp),%eax
810021a9:	8b 00                	mov    (%eax),%eax
810021ab:	8d 50 02             	lea    0x2(%eax),%edx
810021ae:	8b 45 10             	mov    0x10(%ebp),%eax
810021b1:	89 10                	mov    %edx,(%eax)
810021b3:	8b 45 0c             	mov    0xc(%ebp),%eax
810021b6:	8b 00                	mov    (%eax),%eax
810021b8:	83 e0 06             	and    $0x6,%eax
810021bb:	85 c0                	test   %eax,%eax
810021bd:	75 41                	jne    81002200 <_printf_common+0x9a>
810021bf:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810021c6:	eb 24                	jmp    810021ec <_printf_common+0x86>
810021c8:	8b 45 0c             	mov    0xc(%ebp),%eax
810021cb:	83 c0 19             	add    $0x19,%eax
810021ce:	6a 01                	push   $0x1
810021d0:	50                   	push   %eax
810021d1:	ff 75 14             	push   0x14(%ebp)
810021d4:	ff 75 08             	push   0x8(%ebp)
810021d7:	8b 45 18             	mov    0x18(%ebp),%eax
810021da:	ff d0                	call   *%eax
810021dc:	83 c4 10             	add    $0x10,%esp
810021df:	83 f8 ff             	cmp    $0xffffffff,%eax
810021e2:	0f 84 0b 01 00 00    	je     810022f3 <_printf_common+0x18d>
810021e8:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810021ec:	8b 45 0c             	mov    0xc(%ebp),%eax
810021ef:	8b 50 0c             	mov    0xc(%eax),%edx
810021f2:	8b 45 10             	mov    0x10(%ebp),%eax
810021f5:	8b 08                	mov    (%eax),%ecx
810021f7:	89 d0                	mov    %edx,%eax
810021f9:	29 c8                	sub    %ecx,%eax
810021fb:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810021fe:	7c c8                	jl     810021c8 <_printf_common+0x62>
81002200:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81002207:	8b 45 0c             	mov    0xc(%ebp),%eax
8100220a:	0f b6 40 43          	movzbl 0x43(%eax),%eax
8100220e:	84 c0                	test   %al,%al
81002210:	74 04                	je     81002216 <_printf_common+0xb0>
81002212:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81002216:	8b 45 0c             	mov    0xc(%ebp),%eax
81002219:	8b 00                	mov    (%eax),%eax
8100221b:	83 e0 20             	and    $0x20,%eax
8100221e:	85 c0                	test   %eax,%eax
81002220:	74 28                	je     8100224a <_printf_common+0xe4>
81002222:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002225:	8d 50 01             	lea    0x1(%eax),%edx
81002228:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100222b:	8b 55 0c             	mov    0xc(%ebp),%edx
8100222e:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81002233:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002236:	8d 50 01             	lea    0x1(%eax),%edx
81002239:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100223c:	8b 55 0c             	mov    0xc(%ebp),%edx
8100223f:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81002243:	8b 55 0c             	mov    0xc(%ebp),%edx
81002246:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
8100224a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100224d:	8b 55 0c             	mov    0xc(%ebp),%edx
81002250:	83 c2 43             	add    $0x43,%edx
81002253:	50                   	push   %eax
81002254:	52                   	push   %edx
81002255:	ff 75 14             	push   0x14(%ebp)
81002258:	ff 75 08             	push   0x8(%ebp)
8100225b:	8b 45 18             	mov    0x18(%ebp),%eax
8100225e:	ff d0                	call   *%eax
81002260:	83 c4 10             	add    $0x10,%esp
81002263:	83 f8 ff             	cmp    $0xffffffff,%eax
81002266:	0f 84 8a 00 00 00    	je     810022f6 <_printf_common+0x190>
8100226c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100226f:	8b 50 0c             	mov    0xc(%eax),%edx
81002272:	8b 45 10             	mov    0x10(%ebp),%eax
81002275:	8b 08                	mov    (%eax),%ecx
81002277:	89 d0                	mov    %edx,%eax
81002279:	29 c8                	sub    %ecx,%eax
8100227b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100227e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002281:	8b 00                	mov    (%eax),%eax
81002283:	83 e0 06             	and    $0x6,%eax
81002286:	83 f8 04             	cmp    $0x4,%eax
81002289:	75 06                	jne    81002291 <_printf_common+0x12b>
8100228b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100228f:	79 07                	jns    81002298 <_printf_common+0x132>
81002291:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81002298:	8b 45 0c             	mov    0xc(%ebp),%eax
8100229b:	8b 50 08             	mov    0x8(%eax),%edx
8100229e:	8b 45 0c             	mov    0xc(%ebp),%eax
810022a1:	8b 40 10             	mov    0x10(%eax),%eax
810022a4:	39 c2                	cmp    %eax,%edx
810022a6:	7e 13                	jle    810022bb <_printf_common+0x155>
810022a8:	8b 45 0c             	mov    0xc(%ebp),%eax
810022ab:	8b 50 08             	mov    0x8(%eax),%edx
810022ae:	8b 45 0c             	mov    0xc(%ebp),%eax
810022b1:	8b 48 10             	mov    0x10(%eax),%ecx
810022b4:	89 d0                	mov    %edx,%eax
810022b6:	29 c8                	sub    %ecx,%eax
810022b8:	01 45 f4             	add    %eax,-0xc(%ebp)
810022bb:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810022c2:	eb 20                	jmp    810022e4 <_printf_common+0x17e>
810022c4:	8b 45 0c             	mov    0xc(%ebp),%eax
810022c7:	83 c0 1a             	add    $0x1a,%eax
810022ca:	6a 01                	push   $0x1
810022cc:	50                   	push   %eax
810022cd:	ff 75 14             	push   0x14(%ebp)
810022d0:	ff 75 08             	push   0x8(%ebp)
810022d3:	8b 45 18             	mov    0x18(%ebp),%eax
810022d6:	ff d0                	call   *%eax
810022d8:	83 c4 10             	add    $0x10,%esp
810022db:	83 f8 ff             	cmp    $0xffffffff,%eax
810022de:	74 19                	je     810022f9 <_printf_common+0x193>
810022e0:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
810022e4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810022e7:	3b 45 f4             	cmp    -0xc(%ebp),%eax
810022ea:	7c d8                	jl     810022c4 <_printf_common+0x15e>
810022ec:	b8 00 00 00 00       	mov    $0x0,%eax
810022f1:	eb 0c                	jmp    810022ff <_printf_common+0x199>
810022f3:	90                   	nop
810022f4:	eb 04                	jmp    810022fa <_printf_common+0x194>
810022f6:	90                   	nop
810022f7:	eb 01                	jmp    810022fa <_printf_common+0x194>
810022f9:	90                   	nop
810022fa:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810022ff:	c9                   	leave  
81002300:	c3                   	ret    

81002301 <_printf_i>:
81002301:	55                   	push   %ebp
81002302:	89 e5                	mov    %esp,%ebp
81002304:	53                   	push   %ebx
81002305:	83 ec 24             	sub    $0x24,%esp
81002308:	8b 45 0c             	mov    0xc(%ebp),%eax
8100230b:	83 c0 1b             	add    $0x1b,%eax
8100230e:	83 c0 28             	add    $0x28,%eax
81002311:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002314:	c7 45 e8 ac 47 00 81 	movl   $0x810047ac,-0x18(%ebp)
8100231b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100231e:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81002322:	0f be c0             	movsbl %al,%eax
81002325:	85 c0                	test   %eax,%eax
81002327:	0f 84 00 03 00 00    	je     8100262d <_printf_i+0x32c>
8100232d:	85 c0                	test   %eax,%eax
8100232f:	0f 88 52 03 00 00    	js     81002687 <_printf_i+0x386>
81002335:	83 f8 78             	cmp    $0x78,%eax
81002338:	0f 8f 49 03 00 00    	jg     81002687 <_printf_i+0x386>
8100233e:	83 f8 58             	cmp    $0x58,%eax
81002341:	0f 8c 40 03 00 00    	jl     81002687 <_printf_i+0x386>
81002347:	83 e8 58             	sub    $0x58,%eax
8100234a:	83 f8 20             	cmp    $0x20,%eax
8100234d:	0f 87 34 03 00 00    	ja     81002687 <_printf_i+0x386>
81002353:	8b 04 85 d0 47 00 81 	mov    -0x7effb830(,%eax,4),%eax
8100235a:	ff e0                	jmp    *%eax
8100235c:	8b 45 18             	mov    0x18(%ebp),%eax
8100235f:	8b 00                	mov    (%eax),%eax
81002361:	8d 48 04             	lea    0x4(%eax),%ecx
81002364:	8b 55 18             	mov    0x18(%ebp),%edx
81002367:	89 0a                	mov    %ecx,(%edx)
81002369:	8b 00                	mov    (%eax),%eax
8100236b:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8100236f:	89 c2                	mov    %eax,%edx
81002371:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002374:	88 10                	mov    %dl,(%eax)
81002376:	8b 45 0c             	mov    0xc(%ebp),%eax
81002379:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002380:	e9 1c 03 00 00       	jmp    810026a1 <_printf_i+0x3a0>
81002385:	8b 45 0c             	mov    0xc(%ebp),%eax
81002388:	8b 00                	mov    (%eax),%eax
8100238a:	25 80 00 00 00       	and    $0x80,%eax
8100238f:	85 c0                	test   %eax,%eax
81002391:	74 11                	je     810023a4 <_printf_i+0xa3>
81002393:	8b 45 18             	mov    0x18(%ebp),%eax
81002396:	8b 00                	mov    (%eax),%eax
81002398:	8d 48 04             	lea    0x4(%eax),%ecx
8100239b:	8b 55 18             	mov    0x18(%ebp),%edx
8100239e:	89 0a                	mov    %ecx,(%edx)
810023a0:	8b 00                	mov    (%eax),%eax
810023a2:	eb 2d                	jmp    810023d1 <_printf_i+0xd0>
810023a4:	8b 45 0c             	mov    0xc(%ebp),%eax
810023a7:	8b 00                	mov    (%eax),%eax
810023a9:	83 e0 40             	and    $0x40,%eax
810023ac:	85 c0                	test   %eax,%eax
810023ae:	74 12                	je     810023c2 <_printf_i+0xc1>
810023b0:	8b 45 18             	mov    0x18(%ebp),%eax
810023b3:	8b 00                	mov    (%eax),%eax
810023b5:	8d 48 04             	lea    0x4(%eax),%ecx
810023b8:	8b 55 18             	mov    0x18(%ebp),%edx
810023bb:	89 0a                	mov    %ecx,(%edx)
810023bd:	8b 00                	mov    (%eax),%eax
810023bf:	98                   	cwtl   
810023c0:	eb 0f                	jmp    810023d1 <_printf_i+0xd0>
810023c2:	8b 45 18             	mov    0x18(%ebp),%eax
810023c5:	8b 00                	mov    (%eax),%eax
810023c7:	8d 48 04             	lea    0x4(%eax),%ecx
810023ca:	8b 55 18             	mov    0x18(%ebp),%edx
810023cd:	89 0a                	mov    %ecx,(%edx)
810023cf:	8b 00                	mov    (%eax),%eax
810023d1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810023d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810023d7:	85 c0                	test   %eax,%eax
810023d9:	79 0a                	jns    810023e5 <_printf_i+0xe4>
810023db:	f7 5d f4             	negl   -0xc(%ebp)
810023de:	8b 45 0c             	mov    0xc(%ebp),%eax
810023e1:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
810023e5:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
810023ec:	e9 28 01 00 00       	jmp    81002519 <_printf_i+0x218>
810023f1:	8b 45 0c             	mov    0xc(%ebp),%eax
810023f4:	8b 00                	mov    (%eax),%eax
810023f6:	25 80 00 00 00       	and    $0x80,%eax
810023fb:	85 c0                	test   %eax,%eax
810023fd:	74 11                	je     81002410 <_printf_i+0x10f>
810023ff:	8b 45 18             	mov    0x18(%ebp),%eax
81002402:	8b 00                	mov    (%eax),%eax
81002404:	8d 48 04             	lea    0x4(%eax),%ecx
81002407:	8b 55 18             	mov    0x18(%ebp),%edx
8100240a:	89 0a                	mov    %ecx,(%edx)
8100240c:	8b 00                	mov    (%eax),%eax
8100240e:	eb 2f                	jmp    8100243f <_printf_i+0x13e>
81002410:	8b 45 0c             	mov    0xc(%ebp),%eax
81002413:	8b 00                	mov    (%eax),%eax
81002415:	83 e0 40             	and    $0x40,%eax
81002418:	85 c0                	test   %eax,%eax
8100241a:	74 14                	je     81002430 <_printf_i+0x12f>
8100241c:	8b 45 18             	mov    0x18(%ebp),%eax
8100241f:	8b 00                	mov    (%eax),%eax
81002421:	8d 48 04             	lea    0x4(%eax),%ecx
81002424:	8b 55 18             	mov    0x18(%ebp),%edx
81002427:	89 0a                	mov    %ecx,(%edx)
81002429:	8b 00                	mov    (%eax),%eax
8100242b:	0f b7 c0             	movzwl %ax,%eax
8100242e:	eb 0f                	jmp    8100243f <_printf_i+0x13e>
81002430:	8b 45 18             	mov    0x18(%ebp),%eax
81002433:	8b 00                	mov    (%eax),%eax
81002435:	8d 48 04             	lea    0x4(%eax),%ecx
81002438:	8b 55 18             	mov    0x18(%ebp),%edx
8100243b:	89 0a                	mov    %ecx,(%edx)
8100243d:	8b 00                	mov    (%eax),%eax
8100243f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002442:	8b 45 0c             	mov    0xc(%ebp),%eax
81002445:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81002449:	3c 6f                	cmp    $0x6f,%al
8100244b:	75 07                	jne    81002454 <_printf_i+0x153>
8100244d:	b8 08 00 00 00       	mov    $0x8,%eax
81002452:	eb 05                	jmp    81002459 <_printf_i+0x158>
81002454:	b8 0a 00 00 00       	mov    $0xa,%eax
81002459:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100245c:	e9 b1 00 00 00       	jmp    81002512 <_printf_i+0x211>
81002461:	8b 45 0c             	mov    0xc(%ebp),%eax
81002464:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81002468:	eb 1d                	jmp    81002487 <_printf_i+0x186>
8100246a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100246d:	8b 00                	mov    (%eax),%eax
8100246f:	83 c8 20             	or     $0x20,%eax
81002472:	89 c2                	mov    %eax,%edx
81002474:	8b 45 0c             	mov    0xc(%ebp),%eax
81002477:	89 10                	mov    %edx,(%eax)
81002479:	8b 45 0c             	mov    0xc(%ebp),%eax
8100247c:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81002480:	c7 45 e8 bd 47 00 81 	movl   $0x810047bd,-0x18(%ebp)
81002487:	8b 45 0c             	mov    0xc(%ebp),%eax
8100248a:	8b 00                	mov    (%eax),%eax
8100248c:	25 80 00 00 00       	and    $0x80,%eax
81002491:	85 c0                	test   %eax,%eax
81002493:	74 11                	je     810024a6 <_printf_i+0x1a5>
81002495:	8b 45 18             	mov    0x18(%ebp),%eax
81002498:	8b 00                	mov    (%eax),%eax
8100249a:	8d 48 04             	lea    0x4(%eax),%ecx
8100249d:	8b 55 18             	mov    0x18(%ebp),%edx
810024a0:	89 0a                	mov    %ecx,(%edx)
810024a2:	8b 00                	mov    (%eax),%eax
810024a4:	eb 2f                	jmp    810024d5 <_printf_i+0x1d4>
810024a6:	8b 45 0c             	mov    0xc(%ebp),%eax
810024a9:	8b 00                	mov    (%eax),%eax
810024ab:	83 e0 40             	and    $0x40,%eax
810024ae:	85 c0                	test   %eax,%eax
810024b0:	74 14                	je     810024c6 <_printf_i+0x1c5>
810024b2:	8b 45 18             	mov    0x18(%ebp),%eax
810024b5:	8b 00                	mov    (%eax),%eax
810024b7:	8d 48 04             	lea    0x4(%eax),%ecx
810024ba:	8b 55 18             	mov    0x18(%ebp),%edx
810024bd:	89 0a                	mov    %ecx,(%edx)
810024bf:	8b 00                	mov    (%eax),%eax
810024c1:	0f b7 c0             	movzwl %ax,%eax
810024c4:	eb 0f                	jmp    810024d5 <_printf_i+0x1d4>
810024c6:	8b 45 18             	mov    0x18(%ebp),%eax
810024c9:	8b 00                	mov    (%eax),%eax
810024cb:	8d 48 04             	lea    0x4(%eax),%ecx
810024ce:	8b 55 18             	mov    0x18(%ebp),%edx
810024d1:	89 0a                	mov    %ecx,(%edx)
810024d3:	8b 00                	mov    (%eax),%eax
810024d5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810024d8:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
810024df:	8b 45 0c             	mov    0xc(%ebp),%eax
810024e2:	8b 00                	mov    (%eax),%eax
810024e4:	83 e0 01             	and    $0x1,%eax
810024e7:	85 c0                	test   %eax,%eax
810024e9:	74 0f                	je     810024fa <_printf_i+0x1f9>
810024eb:	8b 45 0c             	mov    0xc(%ebp),%eax
810024ee:	8b 00                	mov    (%eax),%eax
810024f0:	83 c8 20             	or     $0x20,%eax
810024f3:	89 c2                	mov    %eax,%edx
810024f5:	8b 45 0c             	mov    0xc(%ebp),%eax
810024f8:	89 10                	mov    %edx,(%eax)
810024fa:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810024fe:	75 11                	jne    81002511 <_printf_i+0x210>
81002500:	8b 45 0c             	mov    0xc(%ebp),%eax
81002503:	8b 00                	mov    (%eax),%eax
81002505:	83 e0 df             	and    $0xffffffdf,%eax
81002508:	89 c2                	mov    %eax,%edx
8100250a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100250d:	89 10                	mov    %edx,(%eax)
8100250f:	eb 01                	jmp    81002512 <_printf_i+0x211>
81002511:	90                   	nop
81002512:	8b 45 0c             	mov    0xc(%ebp),%eax
81002515:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81002519:	8b 45 0c             	mov    0xc(%ebp),%eax
8100251c:	8b 50 04             	mov    0x4(%eax),%edx
8100251f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002522:	89 50 08             	mov    %edx,0x8(%eax)
81002525:	8b 45 0c             	mov    0xc(%ebp),%eax
81002528:	8b 40 08             	mov    0x8(%eax),%eax
8100252b:	85 c0                	test   %eax,%eax
8100252d:	78 0f                	js     8100253e <_printf_i+0x23d>
8100252f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002532:	8b 00                	mov    (%eax),%eax
81002534:	83 e0 fb             	and    $0xfffffffb,%eax
81002537:	89 c2                	mov    %eax,%edx
81002539:	8b 45 0c             	mov    0xc(%ebp),%eax
8100253c:	89 10                	mov    %edx,(%eax)
8100253e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002542:	75 0a                	jne    8100254e <_printf_i+0x24d>
81002544:	8b 45 0c             	mov    0xc(%ebp),%eax
81002547:	8b 40 04             	mov    0x4(%eax),%eax
8100254a:	85 c0                	test   %eax,%eax
8100254c:	74 34                	je     81002582 <_printf_i+0x281>
8100254e:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81002551:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002554:	ba 00 00 00 00       	mov    $0x0,%edx
81002559:	f7 f1                	div    %ecx
8100255b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100255e:	01 d0                	add    %edx,%eax
81002560:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81002564:	0f b6 10             	movzbl (%eax),%edx
81002567:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100256a:	88 10                	mov    %dl,(%eax)
8100256c:	8b 5d f0             	mov    -0x10(%ebp),%ebx
8100256f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002572:	ba 00 00 00 00       	mov    $0x0,%edx
81002577:	f7 f3                	div    %ebx
81002579:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100257c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002580:	75 cc                	jne    8100254e <_printf_i+0x24d>
81002582:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81002586:	75 26                	jne    810025ae <_printf_i+0x2ad>
81002588:	8b 45 0c             	mov    0xc(%ebp),%eax
8100258b:	8b 00                	mov    (%eax),%eax
8100258d:	83 e0 01             	and    $0x1,%eax
81002590:	85 c0                	test   %eax,%eax
81002592:	74 1a                	je     810025ae <_printf_i+0x2ad>
81002594:	8b 45 0c             	mov    0xc(%ebp),%eax
81002597:	8b 50 04             	mov    0x4(%eax),%edx
8100259a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100259d:	8b 40 10             	mov    0x10(%eax),%eax
810025a0:	39 c2                	cmp    %eax,%edx
810025a2:	7f 0a                	jg     810025ae <_printf_i+0x2ad>
810025a4:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810025a8:	8b 45 ec             	mov    -0x14(%ebp),%eax
810025ab:	c6 00 30             	movb   $0x30,(%eax)
810025ae:	8b 45 0c             	mov    0xc(%ebp),%eax
810025b1:	83 c0 1b             	add    $0x1b,%eax
810025b4:	83 c0 28             	add    $0x28,%eax
810025b7:	2b 45 ec             	sub    -0x14(%ebp),%eax
810025ba:	89 c2                	mov    %eax,%edx
810025bc:	8b 45 0c             	mov    0xc(%ebp),%eax
810025bf:	89 50 10             	mov    %edx,0x10(%eax)
810025c2:	e9 e2 00 00 00       	jmp    810026a9 <_printf_i+0x3a8>
810025c7:	8b 45 0c             	mov    0xc(%ebp),%eax
810025ca:	8b 00                	mov    (%eax),%eax
810025cc:	25 80 00 00 00       	and    $0x80,%eax
810025d1:	85 c0                	test   %eax,%eax
810025d3:	74 19                	je     810025ee <_printf_i+0x2ed>
810025d5:	8b 45 18             	mov    0x18(%ebp),%eax
810025d8:	8b 00                	mov    (%eax),%eax
810025da:	8d 48 04             	lea    0x4(%eax),%ecx
810025dd:	8b 55 18             	mov    0x18(%ebp),%edx
810025e0:	89 0a                	mov    %ecx,(%edx)
810025e2:	8b 00                	mov    (%eax),%eax
810025e4:	8b 55 0c             	mov    0xc(%ebp),%edx
810025e7:	8b 52 14             	mov    0x14(%edx),%edx
810025ea:	89 10                	mov    %edx,(%eax)
810025ec:	eb 3f                	jmp    8100262d <_printf_i+0x32c>
810025ee:	8b 45 0c             	mov    0xc(%ebp),%eax
810025f1:	8b 00                	mov    (%eax),%eax
810025f3:	83 e0 40             	and    $0x40,%eax
810025f6:	85 c0                	test   %eax,%eax
810025f8:	74 1c                	je     81002616 <_printf_i+0x315>
810025fa:	8b 45 0c             	mov    0xc(%ebp),%eax
810025fd:	8b 58 14             	mov    0x14(%eax),%ebx
81002600:	8b 45 18             	mov    0x18(%ebp),%eax
81002603:	8b 00                	mov    (%eax),%eax
81002605:	8d 48 04             	lea    0x4(%eax),%ecx
81002608:	8b 55 18             	mov    0x18(%ebp),%edx
8100260b:	89 0a                	mov    %ecx,(%edx)
8100260d:	8b 00                	mov    (%eax),%eax
8100260f:	89 da                	mov    %ebx,%edx
81002611:	66 89 10             	mov    %dx,(%eax)
81002614:	eb 17                	jmp    8100262d <_printf_i+0x32c>
81002616:	8b 45 18             	mov    0x18(%ebp),%eax
81002619:	8b 00                	mov    (%eax),%eax
8100261b:	8d 48 04             	lea    0x4(%eax),%ecx
8100261e:	8b 55 18             	mov    0x18(%ebp),%edx
81002621:	89 0a                	mov    %ecx,(%edx)
81002623:	8b 00                	mov    (%eax),%eax
81002625:	8b 55 0c             	mov    0xc(%ebp),%edx
81002628:	8b 52 14             	mov    0x14(%edx),%edx
8100262b:	89 10                	mov    %edx,(%eax)
8100262d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002630:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81002637:	eb 70                	jmp    810026a9 <_printf_i+0x3a8>
81002639:	8b 45 18             	mov    0x18(%ebp),%eax
8100263c:	8b 00                	mov    (%eax),%eax
8100263e:	8d 48 04             	lea    0x4(%eax),%ecx
81002641:	8b 55 18             	mov    0x18(%ebp),%edx
81002644:	89 0a                	mov    %ecx,(%edx)
81002646:	8b 00                	mov    (%eax),%eax
81002648:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100264b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100264e:	8b 40 04             	mov    0x4(%eax),%eax
81002651:	83 ec 04             	sub    $0x4,%esp
81002654:	50                   	push   %eax
81002655:	6a 00                	push   $0x0
81002657:	ff 75 ec             	push   -0x14(%ebp)
8100265a:	e8 a1 f3 ff ff       	call   81001a00 <memchr>
8100265f:	83 c4 10             	add    $0x10,%esp
81002662:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002665:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81002669:	74 0e                	je     81002679 <_printf_i+0x378>
8100266b:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100266e:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002671:	89 c2                	mov    %eax,%edx
81002673:	8b 45 0c             	mov    0xc(%ebp),%eax
81002676:	89 50 04             	mov    %edx,0x4(%eax)
81002679:	8b 45 0c             	mov    0xc(%ebp),%eax
8100267c:	8b 50 04             	mov    0x4(%eax),%edx
8100267f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002682:	89 50 10             	mov    %edx,0x10(%eax)
81002685:	eb 1a                	jmp    810026a1 <_printf_i+0x3a0>
81002687:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8100268b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100268e:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81002692:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002695:	88 10                	mov    %dl,(%eax)
81002697:	8b 45 0c             	mov    0xc(%ebp),%eax
8100269a:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810026a1:	8b 45 0c             	mov    0xc(%ebp),%eax
810026a4:	c6 40 43 00          	movb   $0x0,0x43(%eax)
810026a8:	90                   	nop
810026a9:	83 ec 0c             	sub    $0xc,%esp
810026ac:	ff 75 14             	push   0x14(%ebp)
810026af:	ff 75 10             	push   0x10(%ebp)
810026b2:	8d 45 d8             	lea    -0x28(%ebp),%eax
810026b5:	50                   	push   %eax
810026b6:	ff 75 0c             	push   0xc(%ebp)
810026b9:	ff 75 08             	push   0x8(%ebp)
810026bc:	e8 a5 fa ff ff       	call   81002166 <_printf_common>
810026c1:	83 c4 20             	add    $0x20,%esp
810026c4:	89 45 dc             	mov    %eax,-0x24(%ebp)
810026c7:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
810026cb:	74 72                	je     8100273f <_printf_i+0x43e>
810026cd:	8b 45 0c             	mov    0xc(%ebp),%eax
810026d0:	8b 40 10             	mov    0x10(%eax),%eax
810026d3:	50                   	push   %eax
810026d4:	ff 75 ec             	push   -0x14(%ebp)
810026d7:	ff 75 10             	push   0x10(%ebp)
810026da:	ff 75 08             	push   0x8(%ebp)
810026dd:	8b 45 14             	mov    0x14(%ebp),%eax
810026e0:	ff d0                	call   *%eax
810026e2:	83 c4 10             	add    $0x10,%esp
810026e5:	83 f8 ff             	cmp    $0xffffffff,%eax
810026e8:	74 58                	je     81002742 <_printf_i+0x441>
810026ea:	8b 45 0c             	mov    0xc(%ebp),%eax
810026ed:	8b 00                	mov    (%eax),%eax
810026ef:	83 e0 02             	and    $0x2,%eax
810026f2:	85 c0                	test   %eax,%eax
810026f4:	74 39                	je     8100272f <_printf_i+0x42e>
810026f6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810026fd:	eb 20                	jmp    8100271f <_printf_i+0x41e>
810026ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81002702:	83 c0 19             	add    $0x19,%eax
81002705:	6a 01                	push   $0x1
81002707:	50                   	push   %eax
81002708:	ff 75 10             	push   0x10(%ebp)
8100270b:	ff 75 08             	push   0x8(%ebp)
8100270e:	8b 45 14             	mov    0x14(%ebp),%eax
81002711:	ff d0                	call   *%eax
81002713:	83 c4 10             	add    $0x10,%esp
81002716:	83 f8 ff             	cmp    $0xffffffff,%eax
81002719:	74 2a                	je     81002745 <_printf_i+0x444>
8100271b:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100271f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002722:	8b 40 0c             	mov    0xc(%eax),%eax
81002725:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002728:	29 d0                	sub    %edx,%eax
8100272a:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
8100272d:	7c d0                	jl     810026ff <_printf_i+0x3fe>
8100272f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002732:	8b 50 0c             	mov    0xc(%eax),%edx
81002735:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002738:	39 c2                	cmp    %eax,%edx
8100273a:	0f 4d c2             	cmovge %edx,%eax
8100273d:	eb 0c                	jmp    8100274b <_printf_i+0x44a>
8100273f:	90                   	nop
81002740:	eb 04                	jmp    81002746 <_printf_i+0x445>
81002742:	90                   	nop
81002743:	eb 01                	jmp    81002746 <_printf_i+0x445>
81002745:	90                   	nop
81002746:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100274b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100274e:	c9                   	leave  
8100274f:	c3                   	ret    

81002750 <_realloc_r>:
81002750:	55                   	push   %ebp
81002751:	89 e5                	mov    %esp,%ebp
81002753:	83 ec 78             	sub    $0x78,%esp
81002756:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100275a:	75 16                	jne    81002772 <_realloc_r+0x22>
8100275c:	83 ec 08             	sub    $0x8,%esp
8100275f:	ff 75 10             	push   0x10(%ebp)
81002762:	ff 75 08             	push   0x8(%ebp)
81002765:	e8 65 ea ff ff       	call   810011cf <_malloc_r>
8100276a:	83 c4 10             	add    $0x10,%esp
8100276d:	e9 b6 08 00 00       	jmp    81003028 <_realloc_r+0x8d8>
81002772:	83 ec 0c             	sub    $0xc,%esp
81002775:	ff 75 08             	push   0x8(%ebp)
81002778:	e8 78 f4 ff ff       	call   81001bf5 <__malloc_lock>
8100277d:	83 c4 10             	add    $0x10,%esp
81002780:	8b 45 0c             	mov    0xc(%ebp),%eax
81002783:	83 e8 08             	sub    $0x8,%eax
81002786:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81002789:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100278c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100278f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002792:	8b 40 04             	mov    0x4(%eax),%eax
81002795:	83 e0 fc             	and    $0xfffffffc,%eax
81002798:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100279b:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100279e:	89 45 f0             	mov    %eax,-0x10(%ebp)
810027a1:	8b 45 10             	mov    0x10(%ebp),%eax
810027a4:	83 c0 0b             	add    $0xb,%eax
810027a7:	83 f8 16             	cmp    $0x16,%eax
810027aa:	76 0b                	jbe    810027b7 <_realloc_r+0x67>
810027ac:	8b 45 10             	mov    0x10(%ebp),%eax
810027af:	83 c0 0b             	add    $0xb,%eax
810027b2:	83 e0 f8             	and    $0xfffffff8,%eax
810027b5:	eb 05                	jmp    810027bc <_realloc_r+0x6c>
810027b7:	b8 10 00 00 00       	mov    $0x10,%eax
810027bc:	89 45 bc             	mov    %eax,-0x44(%ebp)
810027bf:	8b 45 bc             	mov    -0x44(%ebp),%eax
810027c2:	85 c0                	test   %eax,%eax
810027c4:	78 08                	js     810027ce <_realloc_r+0x7e>
810027c6:	8b 45 bc             	mov    -0x44(%ebp),%eax
810027c9:	3b 45 10             	cmp    0x10(%ebp),%eax
810027cc:	73 13                	jae    810027e1 <_realloc_r+0x91>
810027ce:	8b 45 08             	mov    0x8(%ebp),%eax
810027d1:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810027d7:	b8 00 00 00 00       	mov    $0x0,%eax
810027dc:	e9 47 08 00 00       	jmp    81003028 <_realloc_r+0x8d8>
810027e1:	8b 55 c0             	mov    -0x40(%ebp),%edx
810027e4:	8b 45 bc             	mov    -0x44(%ebp),%eax
810027e7:	39 c2                	cmp    %eax,%edx
810027e9:	0f 8d 8b 07 00 00    	jge    81002f7a <_realloc_r+0x82a>
810027ef:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810027f2:	8b 45 c0             	mov    -0x40(%ebp),%eax
810027f5:	01 d0                	add    %edx,%eax
810027f7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810027fa:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
810027ff:	8b 40 08             	mov    0x8(%eax),%eax
81002802:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002805:	74 1e                	je     81002825 <_realloc_r+0xd5>
81002807:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100280a:	8b 40 04             	mov    0x4(%eax),%eax
8100280d:	83 e0 fe             	and    $0xfffffffe,%eax
81002810:	89 c2                	mov    %eax,%edx
81002812:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002815:	01 d0                	add    %edx,%eax
81002817:	8b 40 04             	mov    0x4(%eax),%eax
8100281a:	83 e0 01             	and    $0x1,%eax
8100281d:	85 c0                	test   %eax,%eax
8100281f:	0f 85 ca 00 00 00    	jne    810028ef <_realloc_r+0x19f>
81002825:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002828:	8b 40 04             	mov    0x4(%eax),%eax
8100282b:	83 e0 fc             	and    $0xfffffffc,%eax
8100282e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002831:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
81002836:	8b 40 08             	mov    0x8(%eax),%eax
81002839:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100283c:	75 71                	jne    810028af <_realloc_r+0x15f>
8100283e:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002841:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002844:	01 d0                	add    %edx,%eax
81002846:	89 c2                	mov    %eax,%edx
81002848:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100284b:	83 c0 10             	add    $0x10,%eax
8100284e:	39 c2                	cmp    %eax,%edx
81002850:	0f 8c a9 00 00 00    	jl     810028ff <_realloc_r+0x1af>
81002856:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002859:	01 45 f0             	add    %eax,-0x10(%ebp)
8100285c:	ba 40 4f 00 81       	mov    $0x81004f40,%edx
81002861:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81002864:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002867:	01 c8                	add    %ecx,%eax
81002869:	89 42 08             	mov    %eax,0x8(%edx)
8100286c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100286f:	2b 45 bc             	sub    -0x44(%ebp),%eax
81002872:	89 c2                	mov    %eax,%edx
81002874:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
81002879:	8b 40 08             	mov    0x8(%eax),%eax
8100287c:	83 ca 01             	or     $0x1,%edx
8100287f:	89 50 04             	mov    %edx,0x4(%eax)
81002882:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002885:	8b 40 04             	mov    0x4(%eax),%eax
81002888:	83 e0 01             	and    $0x1,%eax
8100288b:	0b 45 bc             	or     -0x44(%ebp),%eax
8100288e:	89 c2                	mov    %eax,%edx
81002890:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002893:	89 50 04             	mov    %edx,0x4(%eax)
81002896:	83 ec 0c             	sub    $0xc,%esp
81002899:	ff 75 08             	push   0x8(%ebp)
8100289c:	e8 5a f3 ff ff       	call   81001bfb <__malloc_unlock>
810028a1:	83 c4 10             	add    $0x10,%esp
810028a4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810028a7:	83 c0 08             	add    $0x8,%eax
810028aa:	e9 79 07 00 00       	jmp    81003028 <_realloc_r+0x8d8>
810028af:	8b 55 e8             	mov    -0x18(%ebp),%edx
810028b2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810028b5:	01 d0                	add    %edx,%eax
810028b7:	89 c2                	mov    %eax,%edx
810028b9:	8b 45 bc             	mov    -0x44(%ebp),%eax
810028bc:	39 c2                	cmp    %eax,%edx
810028be:	7c 3f                	jl     810028ff <_realloc_r+0x1af>
810028c0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810028c3:	8b 40 0c             	mov    0xc(%eax),%eax
810028c6:	89 45 b8             	mov    %eax,-0x48(%ebp)
810028c9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810028cc:	8b 40 08             	mov    0x8(%eax),%eax
810028cf:	89 45 b4             	mov    %eax,-0x4c(%ebp)
810028d2:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810028d5:	8b 55 b8             	mov    -0x48(%ebp),%edx
810028d8:	89 50 0c             	mov    %edx,0xc(%eax)
810028db:	8b 45 b8             	mov    -0x48(%ebp),%eax
810028de:	8b 55 b4             	mov    -0x4c(%ebp),%edx
810028e1:	89 50 08             	mov    %edx,0x8(%eax)
810028e4:	8b 45 e8             	mov    -0x18(%ebp),%eax
810028e7:	01 45 f0             	add    %eax,-0x10(%ebp)
810028ea:	e9 8c 06 00 00       	jmp    81002f7b <_realloc_r+0x82b>
810028ef:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810028f6:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810028fd:	eb 01                	jmp    81002900 <_realloc_r+0x1b0>
810028ff:	90                   	nop
81002900:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002903:	8b 40 04             	mov    0x4(%eax),%eax
81002906:	83 e0 01             	and    $0x1,%eax
81002909:	85 c0                	test   %eax,%eax
8100290b:	0f 85 d6 04 00 00    	jne    81002de7 <_realloc_r+0x697>
81002911:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002914:	8b 00                	mov    (%eax),%eax
81002916:	f7 d8                	neg    %eax
81002918:	89 c2                	mov    %eax,%edx
8100291a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100291d:	01 d0                	add    %edx,%eax
8100291f:	89 45 b0             	mov    %eax,-0x50(%ebp)
81002922:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002925:	8b 40 04             	mov    0x4(%eax),%eax
81002928:	83 e0 fc             	and    $0xfffffffc,%eax
8100292b:	89 45 ac             	mov    %eax,-0x54(%ebp)
8100292e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81002932:	0f 84 4a 03 00 00    	je     81002c82 <_realloc_r+0x532>
81002938:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
8100293d:	8b 40 08             	mov    0x8(%eax),%eax
81002940:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002943:	0f 85 b0 01 00 00    	jne    81002af9 <_realloc_r+0x3a9>
81002949:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100294c:	8b 45 ac             	mov    -0x54(%ebp),%eax
8100294f:	01 c2                	add    %eax,%edx
81002951:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002954:	01 d0                	add    %edx,%eax
81002956:	89 c2                	mov    %eax,%edx
81002958:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100295b:	83 c0 10             	add    $0x10,%eax
8100295e:	39 c2                	cmp    %eax,%edx
81002960:	0f 8c 1c 03 00 00    	jl     81002c82 <_realloc_r+0x532>
81002966:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002969:	8b 40 0c             	mov    0xc(%eax),%eax
8100296c:	89 45 b8             	mov    %eax,-0x48(%ebp)
8100296f:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002972:	8b 40 08             	mov    0x8(%eax),%eax
81002975:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002978:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8100297b:	8b 55 b8             	mov    -0x48(%ebp),%edx
8100297e:	89 50 0c             	mov    %edx,0xc(%eax)
81002981:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002984:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002987:	89 50 08             	mov    %edx,0x8(%eax)
8100298a:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100298d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002990:	8b 55 ac             	mov    -0x54(%ebp),%edx
81002993:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002996:	01 d0                	add    %edx,%eax
81002998:	01 45 f0             	add    %eax,-0x10(%ebp)
8100299b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100299e:	83 c0 08             	add    $0x8,%eax
810029a1:	89 45 a8             	mov    %eax,-0x58(%ebp)
810029a4:	8b 45 c0             	mov    -0x40(%ebp),%eax
810029a7:	83 e8 04             	sub    $0x4,%eax
810029aa:	89 45 a0             	mov    %eax,-0x60(%ebp)
810029ad:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
810029b1:	0f 87 de 00 00 00    	ja     81002a95 <_realloc_r+0x345>
810029b7:	8b 45 0c             	mov    0xc(%ebp),%eax
810029ba:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810029bd:	8b 45 a8             	mov    -0x58(%ebp),%eax
810029c0:	89 45 e0             	mov    %eax,-0x20(%ebp)
810029c3:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
810029c7:	0f 86 90 00 00 00    	jbe    81002a5d <_realloc_r+0x30d>
810029cd:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810029d0:	8d 42 04             	lea    0x4(%edx),%eax
810029d3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810029d6:	8b 45 e0             	mov    -0x20(%ebp),%eax
810029d9:	8d 48 04             	lea    0x4(%eax),%ecx
810029dc:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810029df:	8b 12                	mov    (%edx),%edx
810029e1:	89 10                	mov    %edx,(%eax)
810029e3:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810029e6:	8d 42 04             	lea    0x4(%edx),%eax
810029e9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810029ec:	8b 45 e0             	mov    -0x20(%ebp),%eax
810029ef:	8d 48 04             	lea    0x4(%eax),%ecx
810029f2:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810029f5:	8b 12                	mov    (%edx),%edx
810029f7:	89 10                	mov    %edx,(%eax)
810029f9:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
810029fd:	76 5e                	jbe    81002a5d <_realloc_r+0x30d>
810029ff:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a02:	8d 42 04             	lea    0x4(%edx),%eax
81002a05:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a08:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a0b:	8d 48 04             	lea    0x4(%eax),%ecx
81002a0e:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a11:	8b 12                	mov    (%edx),%edx
81002a13:	89 10                	mov    %edx,(%eax)
81002a15:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a18:	8d 42 04             	lea    0x4(%edx),%eax
81002a1b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a1e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a21:	8d 48 04             	lea    0x4(%eax),%ecx
81002a24:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a27:	8b 12                	mov    (%edx),%edx
81002a29:	89 10                	mov    %edx,(%eax)
81002a2b:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81002a2f:	76 2c                	jbe    81002a5d <_realloc_r+0x30d>
81002a31:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a34:	8d 42 04             	lea    0x4(%edx),%eax
81002a37:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a3a:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a3d:	8d 48 04             	lea    0x4(%eax),%ecx
81002a40:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a43:	8b 12                	mov    (%edx),%edx
81002a45:	89 10                	mov    %edx,(%eax)
81002a47:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a4a:	8d 42 04             	lea    0x4(%edx),%eax
81002a4d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a50:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a53:	8d 48 04             	lea    0x4(%eax),%ecx
81002a56:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a59:	8b 12                	mov    (%edx),%edx
81002a5b:	89 10                	mov    %edx,(%eax)
81002a5d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a60:	8d 42 04             	lea    0x4(%edx),%eax
81002a63:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a66:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a69:	8d 48 04             	lea    0x4(%eax),%ecx
81002a6c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a6f:	8b 12                	mov    (%edx),%edx
81002a71:	89 10                	mov    %edx,(%eax)
81002a73:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a76:	8d 42 04             	lea    0x4(%edx),%eax
81002a79:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a7c:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a7f:	8d 48 04             	lea    0x4(%eax),%ecx
81002a82:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a85:	8b 12                	mov    (%edx),%edx
81002a87:	89 10                	mov    %edx,(%eax)
81002a89:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002a8c:	8b 10                	mov    (%eax),%edx
81002a8e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a91:	89 10                	mov    %edx,(%eax)
81002a93:	eb 14                	jmp    81002aa9 <_realloc_r+0x359>
81002a95:	83 ec 04             	sub    $0x4,%esp
81002a98:	ff 75 a0             	push   -0x60(%ebp)
81002a9b:	ff 75 0c             	push   0xc(%ebp)
81002a9e:	ff 75 a8             	push   -0x58(%ebp)
81002aa1:	e8 3a f0 ff ff       	call   81001ae0 <memmove>
81002aa6:	83 c4 10             	add    $0x10,%esp
81002aa9:	ba 40 4f 00 81       	mov    $0x81004f40,%edx
81002aae:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002ab1:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002ab4:	01 c8                	add    %ecx,%eax
81002ab6:	89 42 08             	mov    %eax,0x8(%edx)
81002ab9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002abc:	2b 45 bc             	sub    -0x44(%ebp),%eax
81002abf:	89 c2                	mov    %eax,%edx
81002ac1:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
81002ac6:	8b 40 08             	mov    0x8(%eax),%eax
81002ac9:	83 ca 01             	or     $0x1,%edx
81002acc:	89 50 04             	mov    %edx,0x4(%eax)
81002acf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ad2:	8b 40 04             	mov    0x4(%eax),%eax
81002ad5:	83 e0 01             	and    $0x1,%eax
81002ad8:	0b 45 bc             	or     -0x44(%ebp),%eax
81002adb:	89 c2                	mov    %eax,%edx
81002add:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ae0:	89 50 04             	mov    %edx,0x4(%eax)
81002ae3:	83 ec 0c             	sub    $0xc,%esp
81002ae6:	ff 75 08             	push   0x8(%ebp)
81002ae9:	e8 0d f1 ff ff       	call   81001bfb <__malloc_unlock>
81002aee:	83 c4 10             	add    $0x10,%esp
81002af1:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002af4:	e9 2f 05 00 00       	jmp    81003028 <_realloc_r+0x8d8>
81002af9:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002afc:	8b 45 ac             	mov    -0x54(%ebp),%eax
81002aff:	01 c2                	add    %eax,%edx
81002b01:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002b04:	01 d0                	add    %edx,%eax
81002b06:	89 c2                	mov    %eax,%edx
81002b08:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002b0b:	39 c2                	cmp    %eax,%edx
81002b0d:	0f 8c 6f 01 00 00    	jl     81002c82 <_realloc_r+0x532>
81002b13:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002b16:	8b 40 0c             	mov    0xc(%eax),%eax
81002b19:	89 45 b8             	mov    %eax,-0x48(%ebp)
81002b1c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002b1f:	8b 40 08             	mov    0x8(%eax),%eax
81002b22:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002b25:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002b28:	8b 55 b8             	mov    -0x48(%ebp),%edx
81002b2b:	89 50 0c             	mov    %edx,0xc(%eax)
81002b2e:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002b31:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002b34:	89 50 08             	mov    %edx,0x8(%eax)
81002b37:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002b3a:	8b 40 0c             	mov    0xc(%eax),%eax
81002b3d:	89 45 b8             	mov    %eax,-0x48(%ebp)
81002b40:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002b43:	8b 40 08             	mov    0x8(%eax),%eax
81002b46:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002b49:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002b4c:	8b 55 b8             	mov    -0x48(%ebp),%edx
81002b4f:	89 50 0c             	mov    %edx,0xc(%eax)
81002b52:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002b55:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002b58:	89 50 08             	mov    %edx,0x8(%eax)
81002b5b:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002b5e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002b61:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002b64:	8b 45 ac             	mov    -0x54(%ebp),%eax
81002b67:	01 d0                	add    %edx,%eax
81002b69:	01 45 f0             	add    %eax,-0x10(%ebp)
81002b6c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b6f:	83 c0 08             	add    $0x8,%eax
81002b72:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002b75:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002b78:	83 e8 04             	sub    $0x4,%eax
81002b7b:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81002b7e:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81002b82:	0f 87 e1 00 00 00    	ja     81002c69 <_realloc_r+0x519>
81002b88:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b8b:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002b8e:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002b91:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002b94:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81002b98:	0f 86 90 00 00 00    	jbe    81002c2e <_realloc_r+0x4de>
81002b9e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002ba1:	8d 42 04             	lea    0x4(%edx),%eax
81002ba4:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002ba7:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002baa:	8d 48 04             	lea    0x4(%eax),%ecx
81002bad:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002bb0:	8b 12                	mov    (%edx),%edx
81002bb2:	89 10                	mov    %edx,(%eax)
81002bb4:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002bb7:	8d 42 04             	lea    0x4(%edx),%eax
81002bba:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002bbd:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002bc0:	8d 48 04             	lea    0x4(%eax),%ecx
81002bc3:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002bc6:	8b 12                	mov    (%edx),%edx
81002bc8:	89 10                	mov    %edx,(%eax)
81002bca:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81002bce:	76 5e                	jbe    81002c2e <_realloc_r+0x4de>
81002bd0:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002bd3:	8d 42 04             	lea    0x4(%edx),%eax
81002bd6:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002bd9:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002bdc:	8d 48 04             	lea    0x4(%eax),%ecx
81002bdf:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002be2:	8b 12                	mov    (%edx),%edx
81002be4:	89 10                	mov    %edx,(%eax)
81002be6:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002be9:	8d 42 04             	lea    0x4(%edx),%eax
81002bec:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002bef:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002bf2:	8d 48 04             	lea    0x4(%eax),%ecx
81002bf5:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002bf8:	8b 12                	mov    (%edx),%edx
81002bfa:	89 10                	mov    %edx,(%eax)
81002bfc:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81002c00:	76 2c                	jbe    81002c2e <_realloc_r+0x4de>
81002c02:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c05:	8d 42 04             	lea    0x4(%edx),%eax
81002c08:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c0b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c0e:	8d 48 04             	lea    0x4(%eax),%ecx
81002c11:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c14:	8b 12                	mov    (%edx),%edx
81002c16:	89 10                	mov    %edx,(%eax)
81002c18:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c1b:	8d 42 04             	lea    0x4(%edx),%eax
81002c1e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c21:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c24:	8d 48 04             	lea    0x4(%eax),%ecx
81002c27:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c2a:	8b 12                	mov    (%edx),%edx
81002c2c:	89 10                	mov    %edx,(%eax)
81002c2e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c31:	8d 42 04             	lea    0x4(%edx),%eax
81002c34:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c37:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c3a:	8d 48 04             	lea    0x4(%eax),%ecx
81002c3d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c40:	8b 12                	mov    (%edx),%edx
81002c42:	89 10                	mov    %edx,(%eax)
81002c44:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c47:	8d 42 04             	lea    0x4(%edx),%eax
81002c4a:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c4d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c50:	8d 48 04             	lea    0x4(%eax),%ecx
81002c53:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c56:	8b 12                	mov    (%edx),%edx
81002c58:	89 10                	mov    %edx,(%eax)
81002c5a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002c5d:	8b 10                	mov    (%eax),%edx
81002c5f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c62:	89 10                	mov    %edx,(%eax)
81002c64:	e9 12 03 00 00       	jmp    81002f7b <_realloc_r+0x82b>
81002c69:	83 ec 04             	sub    $0x4,%esp
81002c6c:	ff 75 a4             	push   -0x5c(%ebp)
81002c6f:	ff 75 0c             	push   0xc(%ebp)
81002c72:	ff 75 a8             	push   -0x58(%ebp)
81002c75:	e8 66 ee ff ff       	call   81001ae0 <memmove>
81002c7a:	83 c4 10             	add    $0x10,%esp
81002c7d:	e9 f9 02 00 00       	jmp    81002f7b <_realloc_r+0x82b>
81002c82:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81002c86:	0f 84 5b 01 00 00    	je     81002de7 <_realloc_r+0x697>
81002c8c:	8b 55 ac             	mov    -0x54(%ebp),%edx
81002c8f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002c92:	01 d0                	add    %edx,%eax
81002c94:	89 c2                	mov    %eax,%edx
81002c96:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002c99:	39 c2                	cmp    %eax,%edx
81002c9b:	0f 8c 46 01 00 00    	jl     81002de7 <_realloc_r+0x697>
81002ca1:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002ca4:	8b 40 0c             	mov    0xc(%eax),%eax
81002ca7:	89 45 b8             	mov    %eax,-0x48(%ebp)
81002caa:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002cad:	8b 40 08             	mov    0x8(%eax),%eax
81002cb0:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002cb3:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002cb6:	8b 55 b8             	mov    -0x48(%ebp),%edx
81002cb9:	89 50 0c             	mov    %edx,0xc(%eax)
81002cbc:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002cbf:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002cc2:	89 50 08             	mov    %edx,0x8(%eax)
81002cc5:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002cc8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002ccb:	8b 45 ac             	mov    -0x54(%ebp),%eax
81002cce:	01 45 f0             	add    %eax,-0x10(%ebp)
81002cd1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002cd4:	83 c0 08             	add    $0x8,%eax
81002cd7:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002cda:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002cdd:	83 e8 04             	sub    $0x4,%eax
81002ce0:	89 45 9c             	mov    %eax,-0x64(%ebp)
81002ce3:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
81002ce7:	0f 87 e1 00 00 00    	ja     81002dce <_realloc_r+0x67e>
81002ced:	8b 45 0c             	mov    0xc(%ebp),%eax
81002cf0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002cf3:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002cf6:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002cf9:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81002cfd:	0f 86 90 00 00 00    	jbe    81002d93 <_realloc_r+0x643>
81002d03:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d06:	8d 42 04             	lea    0x4(%edx),%eax
81002d09:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d0c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d0f:	8d 48 04             	lea    0x4(%eax),%ecx
81002d12:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d15:	8b 12                	mov    (%edx),%edx
81002d17:	89 10                	mov    %edx,(%eax)
81002d19:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d1c:	8d 42 04             	lea    0x4(%edx),%eax
81002d1f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d22:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d25:	8d 48 04             	lea    0x4(%eax),%ecx
81002d28:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d2b:	8b 12                	mov    (%edx),%edx
81002d2d:	89 10                	mov    %edx,(%eax)
81002d2f:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
81002d33:	76 5e                	jbe    81002d93 <_realloc_r+0x643>
81002d35:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d38:	8d 42 04             	lea    0x4(%edx),%eax
81002d3b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d3e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d41:	8d 48 04             	lea    0x4(%eax),%ecx
81002d44:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d47:	8b 12                	mov    (%edx),%edx
81002d49:	89 10                	mov    %edx,(%eax)
81002d4b:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d4e:	8d 42 04             	lea    0x4(%edx),%eax
81002d51:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d54:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d57:	8d 48 04             	lea    0x4(%eax),%ecx
81002d5a:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d5d:	8b 12                	mov    (%edx),%edx
81002d5f:	89 10                	mov    %edx,(%eax)
81002d61:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81002d65:	76 2c                	jbe    81002d93 <_realloc_r+0x643>
81002d67:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d6a:	8d 42 04             	lea    0x4(%edx),%eax
81002d6d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d70:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d73:	8d 48 04             	lea    0x4(%eax),%ecx
81002d76:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d79:	8b 12                	mov    (%edx),%edx
81002d7b:	89 10                	mov    %edx,(%eax)
81002d7d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d80:	8d 42 04             	lea    0x4(%edx),%eax
81002d83:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d86:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d89:	8d 48 04             	lea    0x4(%eax),%ecx
81002d8c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d8f:	8b 12                	mov    (%edx),%edx
81002d91:	89 10                	mov    %edx,(%eax)
81002d93:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d96:	8d 42 04             	lea    0x4(%edx),%eax
81002d99:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d9c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d9f:	8d 48 04             	lea    0x4(%eax),%ecx
81002da2:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002da5:	8b 12                	mov    (%edx),%edx
81002da7:	89 10                	mov    %edx,(%eax)
81002da9:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002dac:	8d 42 04             	lea    0x4(%edx),%eax
81002daf:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002db2:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002db5:	8d 48 04             	lea    0x4(%eax),%ecx
81002db8:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002dbb:	8b 12                	mov    (%edx),%edx
81002dbd:	89 10                	mov    %edx,(%eax)
81002dbf:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002dc2:	8b 10                	mov    (%eax),%edx
81002dc4:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002dc7:	89 10                	mov    %edx,(%eax)
81002dc9:	e9 ad 01 00 00       	jmp    81002f7b <_realloc_r+0x82b>
81002dce:	83 ec 04             	sub    $0x4,%esp
81002dd1:	ff 75 9c             	push   -0x64(%ebp)
81002dd4:	ff 75 0c             	push   0xc(%ebp)
81002dd7:	ff 75 a8             	push   -0x58(%ebp)
81002dda:	e8 01 ed ff ff       	call   81001ae0 <memmove>
81002ddf:	83 c4 10             	add    $0x10,%esp
81002de2:	e9 94 01 00 00       	jmp    81002f7b <_realloc_r+0x82b>
81002de7:	83 ec 08             	sub    $0x8,%esp
81002dea:	ff 75 10             	push   0x10(%ebp)
81002ded:	ff 75 08             	push   0x8(%ebp)
81002df0:	e8 da e3 ff ff       	call   810011cf <_malloc_r>
81002df5:	83 c4 10             	add    $0x10,%esp
81002df8:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002dfb:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81002dff:	75 18                	jne    81002e19 <_realloc_r+0x6c9>
81002e01:	83 ec 0c             	sub    $0xc,%esp
81002e04:	ff 75 08             	push   0x8(%ebp)
81002e07:	e8 ef ed ff ff       	call   81001bfb <__malloc_unlock>
81002e0c:	83 c4 10             	add    $0x10,%esp
81002e0f:	b8 00 00 00 00       	mov    $0x0,%eax
81002e14:	e9 0f 02 00 00       	jmp    81003028 <_realloc_r+0x8d8>
81002e19:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002e1c:	83 e8 08             	sub    $0x8,%eax
81002e1f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002e22:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002e25:	8b 40 04             	mov    0x4(%eax),%eax
81002e28:	83 e0 fe             	and    $0xfffffffe,%eax
81002e2b:	89 c2                	mov    %eax,%edx
81002e2d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002e30:	01 d0                	add    %edx,%eax
81002e32:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81002e35:	75 17                	jne    81002e4e <_realloc_r+0x6fe>
81002e37:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e3a:	8b 40 04             	mov    0x4(%eax),%eax
81002e3d:	83 e0 fc             	and    $0xfffffffc,%eax
81002e40:	01 45 f0             	add    %eax,-0x10(%ebp)
81002e43:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002e46:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002e49:	e9 2d 01 00 00       	jmp    81002f7b <_realloc_r+0x82b>
81002e4e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002e51:	83 e8 04             	sub    $0x4,%eax
81002e54:	89 45 98             	mov    %eax,-0x68(%ebp)
81002e57:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81002e5b:	0f 87 de 00 00 00    	ja     81002f3f <_realloc_r+0x7ef>
81002e61:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e64:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002e67:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002e6a:	89 45 c8             	mov    %eax,-0x38(%ebp)
81002e6d:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81002e71:	0f 86 90 00 00 00    	jbe    81002f07 <_realloc_r+0x7b7>
81002e77:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002e7a:	8d 42 04             	lea    0x4(%edx),%eax
81002e7d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002e80:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002e83:	8d 48 04             	lea    0x4(%eax),%ecx
81002e86:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002e89:	8b 12                	mov    (%edx),%edx
81002e8b:	89 10                	mov    %edx,(%eax)
81002e8d:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002e90:	8d 42 04             	lea    0x4(%edx),%eax
81002e93:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002e96:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002e99:	8d 48 04             	lea    0x4(%eax),%ecx
81002e9c:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002e9f:	8b 12                	mov    (%edx),%edx
81002ea1:	89 10                	mov    %edx,(%eax)
81002ea3:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81002ea7:	76 5e                	jbe    81002f07 <_realloc_r+0x7b7>
81002ea9:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002eac:	8d 42 04             	lea    0x4(%edx),%eax
81002eaf:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002eb2:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002eb5:	8d 48 04             	lea    0x4(%eax),%ecx
81002eb8:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002ebb:	8b 12                	mov    (%edx),%edx
81002ebd:	89 10                	mov    %edx,(%eax)
81002ebf:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002ec2:	8d 42 04             	lea    0x4(%edx),%eax
81002ec5:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002ec8:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002ecb:	8d 48 04             	lea    0x4(%eax),%ecx
81002ece:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002ed1:	8b 12                	mov    (%edx),%edx
81002ed3:	89 10                	mov    %edx,(%eax)
81002ed5:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
81002ed9:	76 2c                	jbe    81002f07 <_realloc_r+0x7b7>
81002edb:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002ede:	8d 42 04             	lea    0x4(%edx),%eax
81002ee1:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002ee4:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002ee7:	8d 48 04             	lea    0x4(%eax),%ecx
81002eea:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002eed:	8b 12                	mov    (%edx),%edx
81002eef:	89 10                	mov    %edx,(%eax)
81002ef1:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002ef4:	8d 42 04             	lea    0x4(%edx),%eax
81002ef7:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002efa:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002efd:	8d 48 04             	lea    0x4(%eax),%ecx
81002f00:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002f03:	8b 12                	mov    (%edx),%edx
81002f05:	89 10                	mov    %edx,(%eax)
81002f07:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002f0a:	8d 42 04             	lea    0x4(%edx),%eax
81002f0d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002f10:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f13:	8d 48 04             	lea    0x4(%eax),%ecx
81002f16:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002f19:	8b 12                	mov    (%edx),%edx
81002f1b:	89 10                	mov    %edx,(%eax)
81002f1d:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002f20:	8d 42 04             	lea    0x4(%edx),%eax
81002f23:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002f26:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f29:	8d 48 04             	lea    0x4(%eax),%ecx
81002f2c:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002f2f:	8b 12                	mov    (%edx),%edx
81002f31:	89 10                	mov    %edx,(%eax)
81002f33:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002f36:	8b 10                	mov    (%eax),%edx
81002f38:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f3b:	89 10                	mov    %edx,(%eax)
81002f3d:	eb 14                	jmp    81002f53 <_realloc_r+0x803>
81002f3f:	83 ec 04             	sub    $0x4,%esp
81002f42:	ff 75 98             	push   -0x68(%ebp)
81002f45:	ff 75 0c             	push   0xc(%ebp)
81002f48:	ff 75 a8             	push   -0x58(%ebp)
81002f4b:	e8 90 eb ff ff       	call   81001ae0 <memmove>
81002f50:	83 c4 10             	add    $0x10,%esp
81002f53:	83 ec 08             	sub    $0x8,%esp
81002f56:	ff 75 0c             	push   0xc(%ebp)
81002f59:	ff 75 08             	push   0x8(%ebp)
81002f5c:	e8 c5 0a 00 00       	call   81003a26 <_free_r>
81002f61:	83 c4 10             	add    $0x10,%esp
81002f64:	83 ec 0c             	sub    $0xc,%esp
81002f67:	ff 75 08             	push   0x8(%ebp)
81002f6a:	e8 8c ec ff ff       	call   81001bfb <__malloc_unlock>
81002f6f:	83 c4 10             	add    $0x10,%esp
81002f72:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002f75:	e9 ae 00 00 00       	jmp    81003028 <_realloc_r+0x8d8>
81002f7a:	90                   	nop
81002f7b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f7e:	2b 45 bc             	sub    -0x44(%ebp),%eax
81002f81:	89 45 94             	mov    %eax,-0x6c(%ebp)
81002f84:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81002f88:	76 5d                	jbe    81002fe7 <_realloc_r+0x897>
81002f8a:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002f8d:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002f90:	01 d0                	add    %edx,%eax
81002f92:	89 45 90             	mov    %eax,-0x70(%ebp)
81002f95:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f98:	8b 40 04             	mov    0x4(%eax),%eax
81002f9b:	83 e0 01             	and    $0x1,%eax
81002f9e:	0b 45 bc             	or     -0x44(%ebp),%eax
81002fa1:	89 c2                	mov    %eax,%edx
81002fa3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fa6:	89 50 04             	mov    %edx,0x4(%eax)
81002fa9:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002fac:	83 c8 01             	or     $0x1,%eax
81002faf:	89 c2                	mov    %eax,%edx
81002fb1:	8b 45 90             	mov    -0x70(%ebp),%eax
81002fb4:	89 50 04             	mov    %edx,0x4(%eax)
81002fb7:	8b 55 90             	mov    -0x70(%ebp),%edx
81002fba:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002fbd:	01 d0                	add    %edx,%eax
81002fbf:	8b 50 04             	mov    0x4(%eax),%edx
81002fc2:	8b 4d 90             	mov    -0x70(%ebp),%ecx
81002fc5:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002fc8:	01 c8                	add    %ecx,%eax
81002fca:	83 ca 01             	or     $0x1,%edx
81002fcd:	89 50 04             	mov    %edx,0x4(%eax)
81002fd0:	8b 45 90             	mov    -0x70(%ebp),%eax
81002fd3:	83 c0 08             	add    $0x8,%eax
81002fd6:	83 ec 08             	sub    $0x8,%esp
81002fd9:	50                   	push   %eax
81002fda:	ff 75 08             	push   0x8(%ebp)
81002fdd:	e8 44 0a 00 00       	call   81003a26 <_free_r>
81002fe2:	83 c4 10             	add    $0x10,%esp
81002fe5:	eb 2d                	jmp    81003014 <_realloc_r+0x8c4>
81002fe7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fea:	8b 40 04             	mov    0x4(%eax),%eax
81002fed:	83 e0 01             	and    $0x1,%eax
81002ff0:	0b 45 f0             	or     -0x10(%ebp),%eax
81002ff3:	89 c2                	mov    %eax,%edx
81002ff5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ff8:	89 50 04             	mov    %edx,0x4(%eax)
81002ffb:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002ffe:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003001:	01 d0                	add    %edx,%eax
81003003:	8b 50 04             	mov    0x4(%eax),%edx
81003006:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003009:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100300c:	01 c8                	add    %ecx,%eax
8100300e:	83 ca 01             	or     $0x1,%edx
81003011:	89 50 04             	mov    %edx,0x4(%eax)
81003014:	83 ec 0c             	sub    $0xc,%esp
81003017:	ff 75 08             	push   0x8(%ebp)
8100301a:	e8 dc eb ff ff       	call   81001bfb <__malloc_unlock>
8100301f:	83 c4 10             	add    $0x10,%esp
81003022:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003025:	83 c0 08             	add    $0x8,%eax
81003028:	c9                   	leave  
81003029:	c3                   	ret    

8100302a <_sbrk_r>:
8100302a:	55                   	push   %ebp
8100302b:	89 e5                	mov    %esp,%ebp
8100302d:	83 ec 18             	sub    $0x18,%esp
81003030:	c7 05 50 55 00 81 00 	movl   $0x0,0x81005550
81003037:	00 00 00 
8100303a:	83 ec 0c             	sub    $0xc,%esp
8100303d:	ff 75 0c             	push   0xc(%ebp)
81003040:	e8 95 d3 ff ff       	call   810003da <sbrk>
81003045:	83 c4 10             	add    $0x10,%esp
81003048:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100304b:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100304f:	75 14                	jne    81003065 <_sbrk_r+0x3b>
81003051:	a1 50 55 00 81       	mov    0x81005550,%eax
81003056:	85 c0                	test   %eax,%eax
81003058:	74 0b                	je     81003065 <_sbrk_r+0x3b>
8100305a:	8b 15 50 55 00 81    	mov    0x81005550,%edx
81003060:	8b 45 08             	mov    0x8(%ebp),%eax
81003063:	89 10                	mov    %edx,(%eax)
81003065:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003068:	c9                   	leave  
81003069:	c3                   	ret    

8100306a <__sread>:
8100306a:	55                   	push   %ebp
8100306b:	89 e5                	mov    %esp,%ebp
8100306d:	56                   	push   %esi
8100306e:	53                   	push   %ebx
8100306f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003072:	8b 55 14             	mov    0x14(%ebp),%edx
81003075:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003079:	98                   	cwtl   
8100307a:	52                   	push   %edx
8100307b:	ff 75 10             	push   0x10(%ebp)
8100307e:	50                   	push   %eax
8100307f:	ff 75 08             	push   0x8(%ebp)
81003082:	e8 dd 11 00 00       	call   81004264 <_read_r>
81003087:	83 c4 10             	add    $0x10,%esp
8100308a:	89 c6                	mov    %eax,%esi
8100308c:	85 f6                	test   %esi,%esi
8100308e:	78 0a                	js     8100309a <__sread+0x30>
81003090:	8b 43 50             	mov    0x50(%ebx),%eax
81003093:	01 f0                	add    %esi,%eax
81003095:	89 43 50             	mov    %eax,0x50(%ebx)
81003098:	eb 0b                	jmp    810030a5 <__sread+0x3b>
8100309a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100309e:	80 e4 ef             	and    $0xef,%ah
810030a1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810030a5:	89 f0                	mov    %esi,%eax
810030a7:	8d 65 f8             	lea    -0x8(%ebp),%esp
810030aa:	5b                   	pop    %ebx
810030ab:	5e                   	pop    %esi
810030ac:	5d                   	pop    %ebp
810030ad:	c3                   	ret    

810030ae <__seofread>:
810030ae:	55                   	push   %ebp
810030af:	89 e5                	mov    %esp,%ebp
810030b1:	b8 00 00 00 00       	mov    $0x0,%eax
810030b6:	5d                   	pop    %ebp
810030b7:	c3                   	ret    

810030b8 <__swrite>:
810030b8:	55                   	push   %ebp
810030b9:	89 e5                	mov    %esp,%ebp
810030bb:	53                   	push   %ebx
810030bc:	83 ec 14             	sub    $0x14,%esp
810030bf:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810030c2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810030c6:	98                   	cwtl   
810030c7:	25 00 01 00 00       	and    $0x100,%eax
810030cc:	85 c0                	test   %eax,%eax
810030ce:	74 15                	je     810030e5 <__swrite+0x2d>
810030d0:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810030d4:	98                   	cwtl   
810030d5:	6a 02                	push   $0x2
810030d7:	6a 00                	push   $0x0
810030d9:	50                   	push   %eax
810030da:	ff 75 08             	push   0x8(%ebp)
810030dd:	e8 26 0f 00 00       	call   81004008 <_lseek_r>
810030e2:	83 c4 10             	add    $0x10,%esp
810030e5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810030e9:	80 e4 ef             	and    $0xef,%ah
810030ec:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810030f0:	8b 55 14             	mov    0x14(%ebp),%edx
810030f3:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810030f7:	98                   	cwtl   
810030f8:	52                   	push   %edx
810030f9:	ff 75 10             	push   0x10(%ebp)
810030fc:	50                   	push   %eax
810030fd:	ff 75 08             	push   0x8(%ebp)
81003100:	e8 b0 01 00 00       	call   810032b5 <_write_r>
81003105:	83 c4 10             	add    $0x10,%esp
81003108:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100310b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100310e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003111:	c9                   	leave  
81003112:	c3                   	ret    

81003113 <__sseek>:
81003113:	55                   	push   %ebp
81003114:	89 e5                	mov    %esp,%ebp
81003116:	56                   	push   %esi
81003117:	53                   	push   %ebx
81003118:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100311b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100311f:	98                   	cwtl   
81003120:	ff 75 14             	push   0x14(%ebp)
81003123:	ff 75 10             	push   0x10(%ebp)
81003126:	50                   	push   %eax
81003127:	ff 75 08             	push   0x8(%ebp)
8100312a:	e8 d9 0e 00 00       	call   81004008 <_lseek_r>
8100312f:	83 c4 10             	add    $0x10,%esp
81003132:	89 c6                	mov    %eax,%esi
81003134:	83 fe ff             	cmp    $0xffffffff,%esi
81003137:	75 0d                	jne    81003146 <__sseek+0x33>
81003139:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100313d:	80 e4 ef             	and    $0xef,%ah
81003140:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003144:	eb 0e                	jmp    81003154 <__sseek+0x41>
81003146:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100314a:	80 cc 10             	or     $0x10,%ah
8100314d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003151:	89 73 50             	mov    %esi,0x50(%ebx)
81003154:	89 f0                	mov    %esi,%eax
81003156:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003159:	5b                   	pop    %ebx
8100315a:	5e                   	pop    %esi
8100315b:	5d                   	pop    %ebp
8100315c:	c3                   	ret    

8100315d <__sclose>:
8100315d:	55                   	push   %ebp
8100315e:	89 e5                	mov    %esp,%ebp
81003160:	83 ec 18             	sub    $0x18,%esp
81003163:	8b 45 0c             	mov    0xc(%ebp),%eax
81003166:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003169:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100316c:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003170:	98                   	cwtl   
81003171:	83 ec 08             	sub    $0x8,%esp
81003174:	50                   	push   %eax
81003175:	ff 75 08             	push   0x8(%ebp)
81003178:	e8 d9 02 00 00       	call   81003456 <_close_r>
8100317d:	83 c4 10             	add    $0x10,%esp
81003180:	c9                   	leave  
81003181:	c3                   	ret    

81003182 <__swbuf_r>:
81003182:	55                   	push   %ebp
81003183:	89 e5                	mov    %esp,%ebp
81003185:	57                   	push   %edi
81003186:	56                   	push   %esi
81003187:	53                   	push   %ebx
81003188:	83 ec 1c             	sub    $0x1c,%esp
8100318b:	8b 7d 0c             	mov    0xc(%ebp),%edi
8100318e:	8b 5d 10             	mov    0x10(%ebp),%ebx
81003191:	8b 45 08             	mov    0x8(%ebp),%eax
81003194:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003197:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100319b:	74 18                	je     810031b5 <__swbuf_r+0x33>
8100319d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810031a0:	8b 40 38             	mov    0x38(%eax),%eax
810031a3:	85 c0                	test   %eax,%eax
810031a5:	75 0e                	jne    810031b5 <__swbuf_r+0x33>
810031a7:	83 ec 0c             	sub    $0xc,%esp
810031aa:	ff 75 e4             	push   -0x1c(%ebp)
810031ad:	e8 0c d7 ff ff       	call   810008be <__sinit>
810031b2:	83 c4 10             	add    $0x10,%esp
810031b5:	8b 43 18             	mov    0x18(%ebx),%eax
810031b8:	89 43 08             	mov    %eax,0x8(%ebx)
810031bb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810031bf:	98                   	cwtl   
810031c0:	83 e0 08             	and    $0x8,%eax
810031c3:	85 c0                	test   %eax,%eax
810031c5:	74 07                	je     810031ce <__swbuf_r+0x4c>
810031c7:	8b 43 10             	mov    0x10(%ebx),%eax
810031ca:	85 c0                	test   %eax,%eax
810031cc:	75 1d                	jne    810031eb <__swbuf_r+0x69>
810031ce:	83 ec 08             	sub    $0x8,%esp
810031d1:	53                   	push   %ebx
810031d2:	ff 75 08             	push   0x8(%ebp)
810031d5:	e8 21 01 00 00       	call   810032fb <__swsetup_r>
810031da:	83 c4 10             	add    $0x10,%esp
810031dd:	85 c0                	test   %eax,%eax
810031df:	74 0a                	je     810031eb <__swbuf_r+0x69>
810031e1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810031e6:	e9 a1 00 00 00       	jmp    8100328c <__swbuf_r+0x10a>
810031eb:	89 f8                	mov    %edi,%eax
810031ed:	0f b6 f8             	movzbl %al,%edi
810031f0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810031f4:	98                   	cwtl   
810031f5:	25 00 20 00 00       	and    $0x2000,%eax
810031fa:	85 c0                	test   %eax,%eax
810031fc:	75 14                	jne    81003212 <__swbuf_r+0x90>
810031fe:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003202:	80 cc 20             	or     $0x20,%ah
81003205:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003209:	8b 43 64             	mov    0x64(%ebx),%eax
8100320c:	80 e4 df             	and    $0xdf,%ah
8100320f:	89 43 64             	mov    %eax,0x64(%ebx)
81003212:	8b 03                	mov    (%ebx),%eax
81003214:	8b 53 10             	mov    0x10(%ebx),%edx
81003217:	29 d0                	sub    %edx,%eax
81003219:	89 c6                	mov    %eax,%esi
8100321b:	8b 43 14             	mov    0x14(%ebx),%eax
8100321e:	39 c6                	cmp    %eax,%esi
81003220:	7c 1f                	jl     81003241 <__swbuf_r+0xbf>
81003222:	83 ec 08             	sub    $0x8,%esp
81003225:	53                   	push   %ebx
81003226:	ff 75 08             	push   0x8(%ebp)
81003229:	e8 b2 05 00 00       	call   810037e0 <_fflush_r>
8100322e:	83 c4 10             	add    $0x10,%esp
81003231:	85 c0                	test   %eax,%eax
81003233:	74 07                	je     8100323c <__swbuf_r+0xba>
81003235:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100323a:	eb 50                	jmp    8100328c <__swbuf_r+0x10a>
8100323c:	be 00 00 00 00       	mov    $0x0,%esi
81003241:	8b 43 08             	mov    0x8(%ebx),%eax
81003244:	83 e8 01             	sub    $0x1,%eax
81003247:	89 43 08             	mov    %eax,0x8(%ebx)
8100324a:	8b 03                	mov    (%ebx),%eax
8100324c:	8d 50 01             	lea    0x1(%eax),%edx
8100324f:	89 13                	mov    %edx,(%ebx)
81003251:	89 fa                	mov    %edi,%edx
81003253:	88 10                	mov    %dl,(%eax)
81003255:	83 c6 01             	add    $0x1,%esi
81003258:	8b 43 14             	mov    0x14(%ebx),%eax
8100325b:	39 c6                	cmp    %eax,%esi
8100325d:	74 11                	je     81003270 <__swbuf_r+0xee>
8100325f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003263:	98                   	cwtl   
81003264:	83 e0 01             	and    $0x1,%eax
81003267:	85 c0                	test   %eax,%eax
81003269:	74 1f                	je     8100328a <__swbuf_r+0x108>
8100326b:	83 ff 0a             	cmp    $0xa,%edi
8100326e:	75 1a                	jne    8100328a <__swbuf_r+0x108>
81003270:	83 ec 08             	sub    $0x8,%esp
81003273:	53                   	push   %ebx
81003274:	ff 75 08             	push   0x8(%ebp)
81003277:	e8 64 05 00 00       	call   810037e0 <_fflush_r>
8100327c:	83 c4 10             	add    $0x10,%esp
8100327f:	85 c0                	test   %eax,%eax
81003281:	74 07                	je     8100328a <__swbuf_r+0x108>
81003283:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003288:	eb 02                	jmp    8100328c <__swbuf_r+0x10a>
8100328a:	89 f8                	mov    %edi,%eax
8100328c:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100328f:	5b                   	pop    %ebx
81003290:	5e                   	pop    %esi
81003291:	5f                   	pop    %edi
81003292:	5d                   	pop    %ebp
81003293:	c3                   	ret    

81003294 <__swbuf>:
81003294:	55                   	push   %ebp
81003295:	89 e5                	mov    %esp,%ebp
81003297:	83 ec 08             	sub    $0x8,%esp
8100329a:	8b 55 08             	mov    0x8(%ebp),%edx
8100329d:	8b 4d 0c             	mov    0xc(%ebp),%ecx
810032a0:	a1 24 4f 00 81       	mov    0x81004f24,%eax
810032a5:	83 ec 04             	sub    $0x4,%esp
810032a8:	51                   	push   %ecx
810032a9:	52                   	push   %edx
810032aa:	50                   	push   %eax
810032ab:	e8 d2 fe ff ff       	call   81003182 <__swbuf_r>
810032b0:	83 c4 10             	add    $0x10,%esp
810032b3:	c9                   	leave  
810032b4:	c3                   	ret    

810032b5 <_write_r>:
810032b5:	55                   	push   %ebp
810032b6:	89 e5                	mov    %esp,%ebp
810032b8:	83 ec 18             	sub    $0x18,%esp
810032bb:	c7 05 50 55 00 81 00 	movl   $0x0,0x81005550
810032c2:	00 00 00 
810032c5:	83 ec 04             	sub    $0x4,%esp
810032c8:	ff 75 14             	push   0x14(%ebp)
810032cb:	ff 75 10             	push   0x10(%ebp)
810032ce:	ff 75 0c             	push   0xc(%ebp)
810032d1:	e8 41 d0 ff ff       	call   81000317 <write>
810032d6:	83 c4 10             	add    $0x10,%esp
810032d9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810032dc:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810032e0:	75 14                	jne    810032f6 <_write_r+0x41>
810032e2:	a1 50 55 00 81       	mov    0x81005550,%eax
810032e7:	85 c0                	test   %eax,%eax
810032e9:	74 0b                	je     810032f6 <_write_r+0x41>
810032eb:	8b 15 50 55 00 81    	mov    0x81005550,%edx
810032f1:	8b 45 08             	mov    0x8(%ebp),%eax
810032f4:	89 10                	mov    %edx,(%eax)
810032f6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810032f9:	c9                   	leave  
810032fa:	c3                   	ret    

810032fb <__swsetup_r>:
810032fb:	55                   	push   %ebp
810032fc:	89 e5                	mov    %esp,%ebp
810032fe:	53                   	push   %ebx
810032ff:	83 ec 14             	sub    $0x14,%esp
81003302:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003305:	a1 24 4f 00 81       	mov    0x81004f24,%eax
8100330a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100330d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003311:	74 18                	je     8100332b <__swsetup_r+0x30>
81003313:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003316:	8b 40 38             	mov    0x38(%eax),%eax
81003319:	85 c0                	test   %eax,%eax
8100331b:	75 0e                	jne    8100332b <__swsetup_r+0x30>
8100331d:	83 ec 0c             	sub    $0xc,%esp
81003320:	ff 75 f4             	push   -0xc(%ebp)
81003323:	e8 96 d5 ff ff       	call   810008be <__sinit>
81003328:	83 c4 10             	add    $0x10,%esp
8100332b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100332f:	98                   	cwtl   
81003330:	83 e0 08             	and    $0x8,%eax
81003333:	85 c0                	test   %eax,%eax
81003335:	0f 85 82 00 00 00    	jne    810033bd <__swsetup_r+0xc2>
8100333b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100333f:	98                   	cwtl   
81003340:	83 e0 10             	and    $0x10,%eax
81003343:	85 c0                	test   %eax,%eax
81003345:	75 1e                	jne    81003365 <__swsetup_r+0x6a>
81003347:	8b 45 08             	mov    0x8(%ebp),%eax
8100334a:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81003350:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003354:	83 c8 40             	or     $0x40,%eax
81003357:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100335b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003360:	e9 ec 00 00 00       	jmp    81003451 <__swsetup_r+0x156>
81003365:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003369:	98                   	cwtl   
8100336a:	83 e0 04             	and    $0x4,%eax
8100336d:	85 c0                	test   %eax,%eax
8100336f:	74 41                	je     810033b2 <__swsetup_r+0xb7>
81003371:	8b 43 30             	mov    0x30(%ebx),%eax
81003374:	85 c0                	test   %eax,%eax
81003376:	74 23                	je     8100339b <__swsetup_r+0xa0>
81003378:	8b 53 30             	mov    0x30(%ebx),%edx
8100337b:	8d 43 40             	lea    0x40(%ebx),%eax
8100337e:	39 c2                	cmp    %eax,%edx
81003380:	74 12                	je     81003394 <__swsetup_r+0x99>
81003382:	8b 43 30             	mov    0x30(%ebx),%eax
81003385:	83 ec 08             	sub    $0x8,%esp
81003388:	50                   	push   %eax
81003389:	ff 75 08             	push   0x8(%ebp)
8100338c:	e8 95 06 00 00       	call   81003a26 <_free_r>
81003391:	83 c4 10             	add    $0x10,%esp
81003394:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100339b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100339f:	83 e0 db             	and    $0xffffffdb,%eax
810033a2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810033a6:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810033ad:	8b 43 10             	mov    0x10(%ebx),%eax
810033b0:	89 03                	mov    %eax,(%ebx)
810033b2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033b6:	83 c8 08             	or     $0x8,%eax
810033b9:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810033bd:	8b 43 10             	mov    0x10(%ebx),%eax
810033c0:	85 c0                	test   %eax,%eax
810033c2:	75 2b                	jne    810033ef <__swsetup_r+0xf4>
810033c4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033c8:	98                   	cwtl   
810033c9:	25 00 02 00 00       	and    $0x200,%eax
810033ce:	85 c0                	test   %eax,%eax
810033d0:	74 0e                	je     810033e0 <__swsetup_r+0xe5>
810033d2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033d6:	98                   	cwtl   
810033d7:	25 80 00 00 00       	and    $0x80,%eax
810033dc:	85 c0                	test   %eax,%eax
810033de:	74 0f                	je     810033ef <__swsetup_r+0xf4>
810033e0:	83 ec 08             	sub    $0x8,%esp
810033e3:	53                   	push   %ebx
810033e4:	ff 75 08             	push   0x8(%ebp)
810033e7:	e8 62 0c 00 00       	call   8100404e <__smakebuf_r>
810033ec:	83 c4 10             	add    $0x10,%esp
810033ef:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033f3:	98                   	cwtl   
810033f4:	83 e0 01             	and    $0x1,%eax
810033f7:	85 c0                	test   %eax,%eax
810033f9:	74 11                	je     8100340c <__swsetup_r+0x111>
810033fb:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81003402:	8b 43 14             	mov    0x14(%ebx),%eax
81003405:	f7 d8                	neg    %eax
81003407:	89 43 18             	mov    %eax,0x18(%ebx)
8100340a:	eb 19                	jmp    81003425 <__swsetup_r+0x12a>
8100340c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003410:	98                   	cwtl   
81003411:	83 e0 02             	and    $0x2,%eax
81003414:	85 c0                	test   %eax,%eax
81003416:	75 05                	jne    8100341d <__swsetup_r+0x122>
81003418:	8b 43 14             	mov    0x14(%ebx),%eax
8100341b:	eb 05                	jmp    81003422 <__swsetup_r+0x127>
8100341d:	b8 00 00 00 00       	mov    $0x0,%eax
81003422:	89 43 08             	mov    %eax,0x8(%ebx)
81003425:	8b 43 10             	mov    0x10(%ebx),%eax
81003428:	85 c0                	test   %eax,%eax
8100342a:	75 20                	jne    8100344c <__swsetup_r+0x151>
8100342c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003430:	98                   	cwtl   
81003431:	25 80 00 00 00       	and    $0x80,%eax
81003436:	85 c0                	test   %eax,%eax
81003438:	74 12                	je     8100344c <__swsetup_r+0x151>
8100343a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100343e:	83 c8 40             	or     $0x40,%eax
81003441:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003445:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100344a:	eb 05                	jmp    81003451 <__swsetup_r+0x156>
8100344c:	b8 00 00 00 00       	mov    $0x0,%eax
81003451:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003454:	c9                   	leave  
81003455:	c3                   	ret    

81003456 <_close_r>:
81003456:	55                   	push   %ebp
81003457:	89 e5                	mov    %esp,%ebp
81003459:	83 ec 18             	sub    $0x18,%esp
8100345c:	c7 05 50 55 00 81 00 	movl   $0x0,0x81005550
81003463:	00 00 00 
81003466:	83 ec 0c             	sub    $0xc,%esp
81003469:	ff 75 0c             	push   0xc(%ebp)
8100346c:	e8 d3 ce ff ff       	call   81000344 <close>
81003471:	83 c4 10             	add    $0x10,%esp
81003474:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003477:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100347b:	75 14                	jne    81003491 <_close_r+0x3b>
8100347d:	a1 50 55 00 81       	mov    0x81005550,%eax
81003482:	85 c0                	test   %eax,%eax
81003484:	74 0b                	je     81003491 <_close_r+0x3b>
81003486:	8b 15 50 55 00 81    	mov    0x81005550,%edx
8100348c:	8b 45 08             	mov    0x8(%ebp),%eax
8100348f:	89 10                	mov    %edx,(%eax)
81003491:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003494:	c9                   	leave  
81003495:	c3                   	ret    

81003496 <_fclose_r>:
81003496:	55                   	push   %ebp
81003497:	89 e5                	mov    %esp,%ebp
81003499:	53                   	push   %ebx
8100349a:	83 ec 14             	sub    $0x14,%esp
8100349d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810034a0:	85 db                	test   %ebx,%ebx
810034a2:	75 0a                	jne    810034ae <_fclose_r+0x18>
810034a4:	b8 00 00 00 00       	mov    $0x0,%eax
810034a9:	e9 ea 00 00 00       	jmp    81003598 <_fclose_r+0x102>
810034ae:	8b 45 08             	mov    0x8(%ebp),%eax
810034b1:	89 45 f0             	mov    %eax,-0x10(%ebp)
810034b4:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810034b8:	74 18                	je     810034d2 <_fclose_r+0x3c>
810034ba:	8b 45 f0             	mov    -0x10(%ebp),%eax
810034bd:	8b 40 38             	mov    0x38(%eax),%eax
810034c0:	85 c0                	test   %eax,%eax
810034c2:	75 0e                	jne    810034d2 <_fclose_r+0x3c>
810034c4:	83 ec 0c             	sub    $0xc,%esp
810034c7:	ff 75 f0             	push   -0x10(%ebp)
810034ca:	e8 ef d3 ff ff       	call   810008be <__sinit>
810034cf:	83 c4 10             	add    $0x10,%esp
810034d2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810034d6:	66 85 c0             	test   %ax,%ax
810034d9:	75 0a                	jne    810034e5 <_fclose_r+0x4f>
810034db:	b8 00 00 00 00       	mov    $0x0,%eax
810034e0:	e9 b3 00 00 00       	jmp    81003598 <_fclose_r+0x102>
810034e5:	83 ec 08             	sub    $0x8,%esp
810034e8:	53                   	push   %ebx
810034e9:	ff 75 08             	push   0x8(%ebp)
810034ec:	e8 c9 00 00 00       	call   810035ba <__sflush_r>
810034f1:	83 c4 10             	add    $0x10,%esp
810034f4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810034f7:	8b 43 2c             	mov    0x2c(%ebx),%eax
810034fa:	85 c0                	test   %eax,%eax
810034fc:	74 1d                	je     8100351b <_fclose_r+0x85>
810034fe:	8b 43 2c             	mov    0x2c(%ebx),%eax
81003501:	8b 53 1c             	mov    0x1c(%ebx),%edx
81003504:	83 ec 08             	sub    $0x8,%esp
81003507:	52                   	push   %edx
81003508:	ff 75 08             	push   0x8(%ebp)
8100350b:	ff d0                	call   *%eax
8100350d:	83 c4 10             	add    $0x10,%esp
81003510:	85 c0                	test   %eax,%eax
81003512:	79 07                	jns    8100351b <_fclose_r+0x85>
81003514:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
8100351b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100351f:	98                   	cwtl   
81003520:	25 80 00 00 00       	and    $0x80,%eax
81003525:	85 c0                	test   %eax,%eax
81003527:	74 12                	je     8100353b <_fclose_r+0xa5>
81003529:	8b 43 10             	mov    0x10(%ebx),%eax
8100352c:	83 ec 08             	sub    $0x8,%esp
8100352f:	50                   	push   %eax
81003530:	ff 75 08             	push   0x8(%ebp)
81003533:	e8 ee 04 00 00       	call   81003a26 <_free_r>
81003538:	83 c4 10             	add    $0x10,%esp
8100353b:	8b 43 30             	mov    0x30(%ebx),%eax
8100353e:	85 c0                	test   %eax,%eax
81003540:	74 23                	je     81003565 <_fclose_r+0xcf>
81003542:	8b 53 30             	mov    0x30(%ebx),%edx
81003545:	8d 43 40             	lea    0x40(%ebx),%eax
81003548:	39 c2                	cmp    %eax,%edx
8100354a:	74 12                	je     8100355e <_fclose_r+0xc8>
8100354c:	8b 43 30             	mov    0x30(%ebx),%eax
8100354f:	83 ec 08             	sub    $0x8,%esp
81003552:	50                   	push   %eax
81003553:	ff 75 08             	push   0x8(%ebp)
81003556:	e8 cb 04 00 00       	call   81003a26 <_free_r>
8100355b:	83 c4 10             	add    $0x10,%esp
8100355e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81003565:	8b 43 44             	mov    0x44(%ebx),%eax
81003568:	85 c0                	test   %eax,%eax
8100356a:	74 19                	je     81003585 <_fclose_r+0xef>
8100356c:	8b 43 44             	mov    0x44(%ebx),%eax
8100356f:	83 ec 08             	sub    $0x8,%esp
81003572:	50                   	push   %eax
81003573:	ff 75 08             	push   0x8(%ebp)
81003576:	e8 ab 04 00 00       	call   81003a26 <_free_r>
8100357b:	83 c4 10             	add    $0x10,%esp
8100357e:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81003585:	e8 cd d3 ff ff       	call   81000957 <__sfp_lock_acquire>
8100358a:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81003590:	e8 c8 d3 ff ff       	call   8100095d <__sfp_lock_release>
81003595:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003598:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100359b:	c9                   	leave  
8100359c:	c3                   	ret    

8100359d <fclose>:
8100359d:	55                   	push   %ebp
8100359e:	89 e5                	mov    %esp,%ebp
810035a0:	83 ec 08             	sub    $0x8,%esp
810035a3:	8b 55 08             	mov    0x8(%ebp),%edx
810035a6:	a1 24 4f 00 81       	mov    0x81004f24,%eax
810035ab:	83 ec 08             	sub    $0x8,%esp
810035ae:	52                   	push   %edx
810035af:	50                   	push   %eax
810035b0:	e8 e1 fe ff ff       	call   81003496 <_fclose_r>
810035b5:	83 c4 10             	add    $0x10,%esp
810035b8:	c9                   	leave  
810035b9:	c3                   	ret    

810035ba <__sflush_r>:
810035ba:	55                   	push   %ebp
810035bb:	89 e5                	mov    %esp,%ebp
810035bd:	57                   	push   %edi
810035be:	56                   	push   %esi
810035bf:	53                   	push   %ebx
810035c0:	83 ec 1c             	sub    $0x1c,%esp
810035c3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810035c6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810035ca:	66 89 45 de          	mov    %ax,-0x22(%ebp)
810035ce:	0f bf 45 de          	movswl -0x22(%ebp),%eax
810035d2:	83 e0 08             	and    $0x8,%eax
810035d5:	85 c0                	test   %eax,%eax
810035d7:	0f 85 93 01 00 00    	jne    81003770 <__sflush_r+0x1b6>
810035dd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810035e1:	80 cc 08             	or     $0x8,%ah
810035e4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810035e8:	8b 43 04             	mov    0x4(%ebx),%eax
810035eb:	85 c0                	test   %eax,%eax
810035ed:	7f 0b                	jg     810035fa <__sflush_r+0x40>
810035ef:	8b 43 3c             	mov    0x3c(%ebx),%eax
810035f2:	85 c0                	test   %eax,%eax
810035f4:	0f 8e 6f 01 00 00    	jle    81003769 <__sflush_r+0x1af>
810035fa:	8b 43 28             	mov    0x28(%ebx),%eax
810035fd:	85 c0                	test   %eax,%eax
810035ff:	0f 84 64 01 00 00    	je     81003769 <__sflush_r+0x1af>
81003605:	8b 45 08             	mov    0x8(%ebp),%eax
81003608:	8b 00                	mov    (%eax),%eax
8100360a:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100360d:	8b 45 08             	mov    0x8(%ebp),%eax
81003610:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003616:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100361a:	98                   	cwtl   
8100361b:	25 00 10 00 00       	and    $0x1000,%eax
81003620:	85 c0                	test   %eax,%eax
81003622:	74 08                	je     8100362c <__sflush_r+0x72>
81003624:	8b 43 50             	mov    0x50(%ebx),%eax
81003627:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100362a:	eb 64                	jmp    81003690 <__sflush_r+0xd6>
8100362c:	8b 43 28             	mov    0x28(%ebx),%eax
8100362f:	8b 53 1c             	mov    0x1c(%ebx),%edx
81003632:	6a 01                	push   $0x1
81003634:	6a 00                	push   $0x0
81003636:	52                   	push   %edx
81003637:	ff 75 08             	push   0x8(%ebp)
8100363a:	ff d0                	call   *%eax
8100363c:	83 c4 10             	add    $0x10,%esp
8100363f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003642:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81003646:	75 48                	jne    81003690 <__sflush_r+0xd6>
81003648:	8b 45 08             	mov    0x8(%ebp),%eax
8100364b:	8b 00                	mov    (%eax),%eax
8100364d:	85 c0                	test   %eax,%eax
8100364f:	74 3f                	je     81003690 <__sflush_r+0xd6>
81003651:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81003658:	8b 45 08             	mov    0x8(%ebp),%eax
8100365b:	8b 00                	mov    (%eax),%eax
8100365d:	83 f8 1d             	cmp    $0x1d,%eax
81003660:	74 0a                	je     8100366c <__sflush_r+0xb2>
81003662:	8b 45 08             	mov    0x8(%ebp),%eax
81003665:	8b 00                	mov    (%eax),%eax
81003667:	83 f8 16             	cmp    $0x16,%eax
8100366a:	75 11                	jne    8100367d <__sflush_r+0xc3>
8100366c:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81003673:	8b 45 08             	mov    0x8(%ebp),%eax
81003676:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003679:	89 10                	mov    %edx,(%eax)
8100367b:	eb 0b                	jmp    81003688 <__sflush_r+0xce>
8100367d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003681:	83 c8 40             	or     $0x40,%eax
81003684:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003688:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100368b:	e9 48 01 00 00       	jmp    810037d8 <__sflush_r+0x21e>
81003690:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003694:	98                   	cwtl   
81003695:	83 e0 04             	and    $0x4,%eax
81003698:	85 c0                	test   %eax,%eax
8100369a:	74 13                	je     810036af <__sflush_r+0xf5>
8100369c:	8b 43 04             	mov    0x4(%ebx),%eax
8100369f:	29 45 e4             	sub    %eax,-0x1c(%ebp)
810036a2:	8b 43 30             	mov    0x30(%ebx),%eax
810036a5:	85 c0                	test   %eax,%eax
810036a7:	74 06                	je     810036af <__sflush_r+0xf5>
810036a9:	8b 43 3c             	mov    0x3c(%ebx),%eax
810036ac:	29 45 e4             	sub    %eax,-0x1c(%ebp)
810036af:	8b 43 28             	mov    0x28(%ebx),%eax
810036b2:	8b 53 1c             	mov    0x1c(%ebx),%edx
810036b5:	6a 00                	push   $0x0
810036b7:	ff 75 e4             	push   -0x1c(%ebp)
810036ba:	52                   	push   %edx
810036bb:	ff 75 08             	push   0x8(%ebp)
810036be:	ff d0                	call   *%eax
810036c0:	83 c4 10             	add    $0x10,%esp
810036c3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810036c6:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810036ca:	75 1d                	jne    810036e9 <__sflush_r+0x12f>
810036cc:	8b 45 08             	mov    0x8(%ebp),%eax
810036cf:	8b 00                	mov    (%eax),%eax
810036d1:	85 c0                	test   %eax,%eax
810036d3:	74 14                	je     810036e9 <__sflush_r+0x12f>
810036d5:	8b 45 08             	mov    0x8(%ebp),%eax
810036d8:	8b 00                	mov    (%eax),%eax
810036da:	83 f8 1d             	cmp    $0x1d,%eax
810036dd:	74 0a                	je     810036e9 <__sflush_r+0x12f>
810036df:	8b 45 08             	mov    0x8(%ebp),%eax
810036e2:	8b 00                	mov    (%eax),%eax
810036e4:	83 f8 16             	cmp    $0x16,%eax
810036e7:	75 6e                	jne    81003757 <__sflush_r+0x19d>
810036e9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810036ed:	80 e4 f7             	and    $0xf7,%ah
810036f0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810036f4:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810036fb:	8b 43 10             	mov    0x10(%ebx),%eax
810036fe:	89 03                	mov    %eax,(%ebx)
81003700:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003704:	98                   	cwtl   
81003705:	25 00 10 00 00       	and    $0x1000,%eax
8100370a:	85 c0                	test   %eax,%eax
8100370c:	74 15                	je     81003723 <__sflush_r+0x169>
8100370e:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81003712:	75 09                	jne    8100371d <__sflush_r+0x163>
81003714:	8b 45 08             	mov    0x8(%ebp),%eax
81003717:	8b 00                	mov    (%eax),%eax
81003719:	85 c0                	test   %eax,%eax
8100371b:	75 06                	jne    81003723 <__sflush_r+0x169>
8100371d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003720:	89 43 50             	mov    %eax,0x50(%ebx)
81003723:	8b 45 08             	mov    0x8(%ebp),%eax
81003726:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003729:	89 10                	mov    %edx,(%eax)
8100372b:	8b 43 30             	mov    0x30(%ebx),%eax
8100372e:	85 c0                	test   %eax,%eax
81003730:	74 37                	je     81003769 <__sflush_r+0x1af>
81003732:	8b 53 30             	mov    0x30(%ebx),%edx
81003735:	8d 43 40             	lea    0x40(%ebx),%eax
81003738:	39 c2                	cmp    %eax,%edx
8100373a:	74 12                	je     8100374e <__sflush_r+0x194>
8100373c:	8b 43 30             	mov    0x30(%ebx),%eax
8100373f:	83 ec 08             	sub    $0x8,%esp
81003742:	50                   	push   %eax
81003743:	ff 75 08             	push   0x8(%ebp)
81003746:	e8 db 02 00 00       	call   81003a26 <_free_r>
8100374b:	83 c4 10             	add    $0x10,%esp
8100374e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81003755:	eb 12                	jmp    81003769 <__sflush_r+0x1af>
81003757:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100375b:	83 c8 40             	or     $0x40,%eax
8100375e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003762:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003767:	eb 6f                	jmp    810037d8 <__sflush_r+0x21e>
81003769:	b8 00 00 00 00       	mov    $0x0,%eax
8100376e:	eb 68                	jmp    810037d8 <__sflush_r+0x21e>
81003770:	8b 73 10             	mov    0x10(%ebx),%esi
81003773:	85 f6                	test   %esi,%esi
81003775:	75 07                	jne    8100377e <__sflush_r+0x1c4>
81003777:	b8 00 00 00 00       	mov    $0x0,%eax
8100377c:	eb 5a                	jmp    810037d8 <__sflush_r+0x21e>
8100377e:	8b 03                	mov    (%ebx),%eax
81003780:	29 f0                	sub    %esi,%eax
81003782:	89 c7                	mov    %eax,%edi
81003784:	89 33                	mov    %esi,(%ebx)
81003786:	0f bf 45 de          	movswl -0x22(%ebp),%eax
8100378a:	83 e0 03             	and    $0x3,%eax
8100378d:	85 c0                	test   %eax,%eax
8100378f:	75 05                	jne    81003796 <__sflush_r+0x1dc>
81003791:	8b 43 14             	mov    0x14(%ebx),%eax
81003794:	eb 05                	jmp    8100379b <__sflush_r+0x1e1>
81003796:	b8 00 00 00 00       	mov    $0x0,%eax
8100379b:	89 43 08             	mov    %eax,0x8(%ebx)
8100379e:	eb 2f                	jmp    810037cf <__sflush_r+0x215>
810037a0:	8b 43 24             	mov    0x24(%ebx),%eax
810037a3:	8b 53 1c             	mov    0x1c(%ebx),%edx
810037a6:	57                   	push   %edi
810037a7:	56                   	push   %esi
810037a8:	52                   	push   %edx
810037a9:	ff 75 08             	push   0x8(%ebp)
810037ac:	ff d0                	call   *%eax
810037ae:	83 c4 10             	add    $0x10,%esp
810037b1:	85 c0                	test   %eax,%eax
810037b3:	7f 12                	jg     810037c7 <__sflush_r+0x20d>
810037b5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810037b9:	83 c8 40             	or     $0x40,%eax
810037bc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810037c0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810037c5:	eb 11                	jmp    810037d8 <__sflush_r+0x21e>
810037c7:	89 c1                	mov    %eax,%ecx
810037c9:	89 c8                	mov    %ecx,%eax
810037cb:	01 c6                	add    %eax,%esi
810037cd:	29 cf                	sub    %ecx,%edi
810037cf:	85 ff                	test   %edi,%edi
810037d1:	7f cd                	jg     810037a0 <__sflush_r+0x1e6>
810037d3:	b8 00 00 00 00       	mov    $0x0,%eax
810037d8:	8d 65 f4             	lea    -0xc(%ebp),%esp
810037db:	5b                   	pop    %ebx
810037dc:	5e                   	pop    %esi
810037dd:	5f                   	pop    %edi
810037de:	5d                   	pop    %ebp
810037df:	c3                   	ret    

810037e0 <_fflush_r>:
810037e0:	55                   	push   %ebp
810037e1:	89 e5                	mov    %esp,%ebp
810037e3:	53                   	push   %ebx
810037e4:	83 ec 14             	sub    $0x14,%esp
810037e7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810037ea:	8b 45 08             	mov    0x8(%ebp),%eax
810037ed:	89 45 f4             	mov    %eax,-0xc(%ebp)
810037f0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810037f4:	74 18                	je     8100380e <_fflush_r+0x2e>
810037f6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810037f9:	8b 40 38             	mov    0x38(%eax),%eax
810037fc:	85 c0                	test   %eax,%eax
810037fe:	75 0e                	jne    8100380e <_fflush_r+0x2e>
81003800:	83 ec 0c             	sub    $0xc,%esp
81003803:	ff 75 f4             	push   -0xc(%ebp)
81003806:	e8 b3 d0 ff ff       	call   810008be <__sinit>
8100380b:	83 c4 10             	add    $0x10,%esp
8100380e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003812:	66 85 c0             	test   %ax,%ax
81003815:	75 07                	jne    8100381e <_fflush_r+0x3e>
81003817:	b8 00 00 00 00       	mov    $0x0,%eax
8100381c:	eb 15                	jmp    81003833 <_fflush_r+0x53>
8100381e:	83 ec 08             	sub    $0x8,%esp
81003821:	53                   	push   %ebx
81003822:	ff 75 08             	push   0x8(%ebp)
81003825:	e8 90 fd ff ff       	call   810035ba <__sflush_r>
8100382a:	83 c4 10             	add    $0x10,%esp
8100382d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003830:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003833:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003836:	c9                   	leave  
81003837:	c3                   	ret    

81003838 <fflush>:
81003838:	55                   	push   %ebp
81003839:	89 e5                	mov    %esp,%ebp
8100383b:	83 ec 08             	sub    $0x8,%esp
8100383e:	8b 55 08             	mov    0x8(%ebp),%edx
81003841:	85 d2                	test   %edx,%edx
81003843:	75 18                	jne    8100385d <fflush+0x25>
81003845:	a1 94 47 00 81       	mov    0x81004794,%eax
8100384a:	83 ec 08             	sub    $0x8,%esp
8100384d:	68 e0 37 00 81       	push   $0x810037e0
81003852:	50                   	push   %eax
81003853:	e8 79 d6 ff ff       	call   81000ed1 <_fwalk_reent>
81003858:	83 c4 10             	add    $0x10,%esp
8100385b:	eb 12                	jmp    8100386f <fflush+0x37>
8100385d:	a1 24 4f 00 81       	mov    0x81004f24,%eax
81003862:	83 ec 08             	sub    $0x8,%esp
81003865:	52                   	push   %edx
81003866:	50                   	push   %eax
81003867:	e8 74 ff ff ff       	call   810037e0 <_fflush_r>
8100386c:	83 c4 10             	add    $0x10,%esp
8100386f:	c9                   	leave  
81003870:	c3                   	ret    

81003871 <__sputc_r>:
81003871:	55                   	push   %ebp
81003872:	89 e5                	mov    %esp,%ebp
81003874:	83 ec 08             	sub    $0x8,%esp
81003877:	8b 45 10             	mov    0x10(%ebp),%eax
8100387a:	8b 40 08             	mov    0x8(%eax),%eax
8100387d:	8d 50 ff             	lea    -0x1(%eax),%edx
81003880:	8b 45 10             	mov    0x10(%ebp),%eax
81003883:	89 50 08             	mov    %edx,0x8(%eax)
81003886:	8b 45 10             	mov    0x10(%ebp),%eax
81003889:	8b 40 08             	mov    0x8(%eax),%eax
8100388c:	85 c0                	test   %eax,%eax
8100388e:	79 17                	jns    810038a7 <__sputc_r+0x36>
81003890:	8b 45 10             	mov    0x10(%ebp),%eax
81003893:	8b 50 08             	mov    0x8(%eax),%edx
81003896:	8b 45 10             	mov    0x10(%ebp),%eax
81003899:	8b 40 18             	mov    0x18(%eax),%eax
8100389c:	39 c2                	cmp    %eax,%edx
8100389e:	7c 21                	jl     810038c1 <__sputc_r+0x50>
810038a0:	8b 45 0c             	mov    0xc(%ebp),%eax
810038a3:	3c 0a                	cmp    $0xa,%al
810038a5:	74 1a                	je     810038c1 <__sputc_r+0x50>
810038a7:	8b 45 10             	mov    0x10(%ebp),%eax
810038aa:	8b 00                	mov    (%eax),%eax
810038ac:	8d 48 01             	lea    0x1(%eax),%ecx
810038af:	8b 55 10             	mov    0x10(%ebp),%edx
810038b2:	89 0a                	mov    %ecx,(%edx)
810038b4:	8b 55 0c             	mov    0xc(%ebp),%edx
810038b7:	88 10                	mov    %dl,(%eax)
810038b9:	0f b6 00             	movzbl (%eax),%eax
810038bc:	0f b6 c0             	movzbl %al,%eax
810038bf:	eb 14                	jmp    810038d5 <__sputc_r+0x64>
810038c1:	83 ec 04             	sub    $0x4,%esp
810038c4:	ff 75 10             	push   0x10(%ebp)
810038c7:	ff 75 0c             	push   0xc(%ebp)
810038ca:	ff 75 08             	push   0x8(%ebp)
810038cd:	e8 b0 f8 ff ff       	call   81003182 <__swbuf_r>
810038d2:	83 c4 10             	add    $0x10,%esp
810038d5:	c9                   	leave  
810038d6:	c3                   	ret    

810038d7 <__fputwc>:
810038d7:	55                   	push   %ebp
810038d8:	89 e5                	mov    %esp,%ebp
810038da:	83 ec 18             	sub    $0x18,%esp
810038dd:	e8 f3 06 00 00       	call   81003fd5 <__locale_mb_cur_max>
810038e2:	83 f8 01             	cmp    $0x1,%eax
810038e5:	75 1e                	jne    81003905 <__fputwc+0x2e>
810038e7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810038eb:	7e 18                	jle    81003905 <__fputwc+0x2e>
810038ed:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
810038f4:	7f 0f                	jg     81003905 <__fputwc+0x2e>
810038f6:	8b 45 0c             	mov    0xc(%ebp),%eax
810038f9:	88 45 ef             	mov    %al,-0x11(%ebp)
810038fc:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
81003903:	eb 3c                	jmp    81003941 <__fputwc+0x6a>
81003905:	8b 45 10             	mov    0x10(%ebp),%eax
81003908:	83 c0 5c             	add    $0x5c,%eax
8100390b:	50                   	push   %eax
8100390c:	ff 75 0c             	push   0xc(%ebp)
8100390f:	8d 45 ef             	lea    -0x11(%ebp),%eax
81003912:	50                   	push   %eax
81003913:	ff 75 08             	push   0x8(%ebp)
81003916:	e8 df 0b 00 00       	call   810044fa <_wcrtomb_r>
8100391b:	83 c4 10             	add    $0x10,%esp
8100391e:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003921:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81003925:	75 1a                	jne    81003941 <__fputwc+0x6a>
81003927:	8b 45 10             	mov    0x10(%ebp),%eax
8100392a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100392e:	83 c8 40             	or     $0x40,%eax
81003931:	89 c2                	mov    %eax,%edx
81003933:	8b 45 10             	mov    0x10(%ebp),%eax
81003936:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100393a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100393f:	eb 44                	jmp    81003985 <__fputwc+0xae>
81003941:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81003948:	eb 30                	jmp    8100397a <__fputwc+0xa3>
8100394a:	8d 55 ef             	lea    -0x11(%ebp),%edx
8100394d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003950:	01 d0                	add    %edx,%eax
81003952:	0f b6 00             	movzbl (%eax),%eax
81003955:	0f b6 c0             	movzbl %al,%eax
81003958:	83 ec 04             	sub    $0x4,%esp
8100395b:	ff 75 10             	push   0x10(%ebp)
8100395e:	50                   	push   %eax
8100395f:	ff 75 08             	push   0x8(%ebp)
81003962:	e8 0a ff ff ff       	call   81003871 <__sputc_r>
81003967:	83 c4 10             	add    $0x10,%esp
8100396a:	83 f8 ff             	cmp    $0xffffffff,%eax
8100396d:	75 07                	jne    81003976 <__fputwc+0x9f>
8100396f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003974:	eb 0f                	jmp    81003985 <__fputwc+0xae>
81003976:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8100397a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100397d:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81003980:	72 c8                	jb     8100394a <__fputwc+0x73>
81003982:	8b 45 0c             	mov    0xc(%ebp),%eax
81003985:	c9                   	leave  
81003986:	c3                   	ret    

81003987 <_fputwc_r>:
81003987:	55                   	push   %ebp
81003988:	89 e5                	mov    %esp,%ebp
8100398a:	83 ec 18             	sub    $0x18,%esp
8100398d:	8b 45 10             	mov    0x10(%ebp),%eax
81003990:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003994:	98                   	cwtl   
81003995:	25 00 20 00 00       	and    $0x2000,%eax
8100399a:	85 c0                	test   %eax,%eax
8100399c:	75 24                	jne    810039c2 <_fputwc_r+0x3b>
8100399e:	8b 45 10             	mov    0x10(%ebp),%eax
810039a1:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810039a5:	80 cc 20             	or     $0x20,%ah
810039a8:	89 c2                	mov    %eax,%edx
810039aa:	8b 45 10             	mov    0x10(%ebp),%eax
810039ad:	66 89 50 0c          	mov    %dx,0xc(%eax)
810039b1:	8b 45 10             	mov    0x10(%ebp),%eax
810039b4:	8b 40 64             	mov    0x64(%eax),%eax
810039b7:	80 cc 20             	or     $0x20,%ah
810039ba:	89 c2                	mov    %eax,%edx
810039bc:	8b 45 10             	mov    0x10(%ebp),%eax
810039bf:	89 50 64             	mov    %edx,0x64(%eax)
810039c2:	83 ec 04             	sub    $0x4,%esp
810039c5:	ff 75 10             	push   0x10(%ebp)
810039c8:	ff 75 0c             	push   0xc(%ebp)
810039cb:	ff 75 08             	push   0x8(%ebp)
810039ce:	e8 04 ff ff ff       	call   810038d7 <__fputwc>
810039d3:	83 c4 10             	add    $0x10,%esp
810039d6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810039d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039dc:	c9                   	leave  
810039dd:	c3                   	ret    

810039de <fputwc>:
810039de:	55                   	push   %ebp
810039df:	89 e5                	mov    %esp,%ebp
810039e1:	83 ec 18             	sub    $0x18,%esp
810039e4:	a1 24 4f 00 81       	mov    0x81004f24,%eax
810039e9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810039ec:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039ef:	89 45 f0             	mov    %eax,-0x10(%ebp)
810039f2:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810039f6:	74 18                	je     81003a10 <fputwc+0x32>
810039f8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810039fb:	8b 40 38             	mov    0x38(%eax),%eax
810039fe:	85 c0                	test   %eax,%eax
81003a00:	75 0e                	jne    81003a10 <fputwc+0x32>
81003a02:	83 ec 0c             	sub    $0xc,%esp
81003a05:	ff 75 f0             	push   -0x10(%ebp)
81003a08:	e8 b1 ce ff ff       	call   810008be <__sinit>
81003a0d:	83 c4 10             	add    $0x10,%esp
81003a10:	83 ec 04             	sub    $0x4,%esp
81003a13:	ff 75 0c             	push   0xc(%ebp)
81003a16:	ff 75 08             	push   0x8(%ebp)
81003a19:	ff 75 f4             	push   -0xc(%ebp)
81003a1c:	e8 66 ff ff ff       	call   81003987 <_fputwc_r>
81003a21:	83 c4 10             	add    $0x10,%esp
81003a24:	c9                   	leave  
81003a25:	c3                   	ret    

81003a26 <_free_r>:
81003a26:	55                   	push   %ebp
81003a27:	89 e5                	mov    %esp,%ebp
81003a29:	53                   	push   %ebx
81003a2a:	83 ec 34             	sub    $0x34,%esp
81003a2d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81003a31:	0f 84 c4 03 00 00    	je     81003dfb <_free_r+0x3d5>
81003a37:	83 ec 0c             	sub    $0xc,%esp
81003a3a:	ff 75 08             	push   0x8(%ebp)
81003a3d:	e8 b3 e1 ff ff       	call   81001bf5 <__malloc_lock>
81003a42:	83 c4 10             	add    $0x10,%esp
81003a45:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a48:	83 e8 08             	sub    $0x8,%eax
81003a4b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003a4e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a51:	8b 40 04             	mov    0x4(%eax),%eax
81003a54:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003a57:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003a5a:	83 e0 fe             	and    $0xfffffffe,%eax
81003a5d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003a60:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003a63:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003a66:	01 d0                	add    %edx,%eax
81003a68:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003a6b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a6e:	8b 40 04             	mov    0x4(%eax),%eax
81003a71:	83 e0 fc             	and    $0xfffffffc,%eax
81003a74:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003a77:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
81003a7c:	8b 40 08             	mov    0x8(%eax),%eax
81003a7f:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81003a82:	0f 85 94 00 00 00    	jne    81003b1c <_free_r+0xf6>
81003a88:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003a8b:	01 45 f0             	add    %eax,-0x10(%ebp)
81003a8e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003a91:	83 e0 01             	and    $0x1,%eax
81003a94:	85 c0                	test   %eax,%eax
81003a96:	75 3a                	jne    81003ad2 <_free_r+0xac>
81003a98:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a9b:	8b 00                	mov    (%eax),%eax
81003a9d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003aa0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003aa3:	f7 d8                	neg    %eax
81003aa5:	01 45 f4             	add    %eax,-0xc(%ebp)
81003aa8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003aab:	01 45 f0             	add    %eax,-0x10(%ebp)
81003aae:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ab1:	8b 40 0c             	mov    0xc(%eax),%eax
81003ab4:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003ab7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003aba:	8b 40 08             	mov    0x8(%eax),%eax
81003abd:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003ac0:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003ac3:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003ac6:	89 50 0c             	mov    %edx,0xc(%eax)
81003ac9:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003acc:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003acf:	89 50 08             	mov    %edx,0x8(%eax)
81003ad2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003ad5:	83 c8 01             	or     $0x1,%eax
81003ad8:	89 c2                	mov    %eax,%edx
81003ada:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003add:	89 50 04             	mov    %edx,0x4(%eax)
81003ae0:	ba 40 4f 00 81       	mov    $0x81004f40,%edx
81003ae5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ae8:	89 42 08             	mov    %eax,0x8(%edx)
81003aeb:	a1 48 53 00 81       	mov    0x81005348,%eax
81003af0:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81003af3:	72 14                	jb     81003b09 <_free_r+0xe3>
81003af5:	a1 00 55 00 81       	mov    0x81005500,%eax
81003afa:	83 ec 08             	sub    $0x8,%esp
81003afd:	50                   	push   %eax
81003afe:	ff 75 08             	push   0x8(%ebp)
81003b01:	e8 fb 02 00 00       	call   81003e01 <_malloc_trim_r>
81003b06:	83 c4 10             	add    $0x10,%esp
81003b09:	83 ec 0c             	sub    $0xc,%esp
81003b0c:	ff 75 08             	push   0x8(%ebp)
81003b0f:	e8 e7 e0 ff ff       	call   81001bfb <__malloc_unlock>
81003b14:	83 c4 10             	add    $0x10,%esp
81003b17:	e9 e0 02 00 00       	jmp    81003dfc <_free_r+0x3d6>
81003b1c:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b1f:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003b22:	89 50 04             	mov    %edx,0x4(%eax)
81003b25:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003b2c:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003b2f:	83 e0 01             	and    $0x1,%eax
81003b32:	85 c0                	test   %eax,%eax
81003b34:	75 52                	jne    81003b88 <_free_r+0x162>
81003b36:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b39:	8b 00                	mov    (%eax),%eax
81003b3b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003b3e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003b41:	f7 d8                	neg    %eax
81003b43:	01 45 f4             	add    %eax,-0xc(%ebp)
81003b46:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003b49:	01 45 f0             	add    %eax,-0x10(%ebp)
81003b4c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b4f:	8b 40 08             	mov    0x8(%eax),%eax
81003b52:	ba 48 4f 00 81       	mov    $0x81004f48,%edx
81003b57:	39 d0                	cmp    %edx,%eax
81003b59:	75 09                	jne    81003b64 <_free_r+0x13e>
81003b5b:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81003b62:	eb 24                	jmp    81003b88 <_free_r+0x162>
81003b64:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b67:	8b 40 0c             	mov    0xc(%eax),%eax
81003b6a:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003b6d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b70:	8b 40 08             	mov    0x8(%eax),%eax
81003b73:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003b76:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003b79:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003b7c:	89 50 0c             	mov    %edx,0xc(%eax)
81003b7f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003b82:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003b85:	89 50 08             	mov    %edx,0x8(%eax)
81003b88:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003b8b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b8e:	01 d0                	add    %edx,%eax
81003b90:	8b 40 04             	mov    0x4(%eax),%eax
81003b93:	83 e0 01             	and    $0x1,%eax
81003b96:	85 c0                	test   %eax,%eax
81003b98:	75 75                	jne    81003c0f <_free_r+0x1e9>
81003b9a:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b9d:	01 45 f0             	add    %eax,-0x10(%ebp)
81003ba0:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003ba4:	75 45                	jne    81003beb <_free_r+0x1c5>
81003ba6:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003ba9:	8b 40 08             	mov    0x8(%eax),%eax
81003bac:	ba 48 4f 00 81       	mov    $0x81004f48,%edx
81003bb1:	39 d0                	cmp    %edx,%eax
81003bb3:	75 36                	jne    81003beb <_free_r+0x1c5>
81003bb5:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81003bbc:	b8 48 4f 00 81       	mov    $0x81004f48,%eax
81003bc1:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003bc4:	89 50 0c             	mov    %edx,0xc(%eax)
81003bc7:	ba 48 4f 00 81       	mov    $0x81004f48,%edx
81003bcc:	8b 40 0c             	mov    0xc(%eax),%eax
81003bcf:	89 42 08             	mov    %eax,0x8(%edx)
81003bd2:	ba 48 4f 00 81       	mov    $0x81004f48,%edx
81003bd7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003bda:	89 50 0c             	mov    %edx,0xc(%eax)
81003bdd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003be0:	8b 50 0c             	mov    0xc(%eax),%edx
81003be3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003be6:	89 50 08             	mov    %edx,0x8(%eax)
81003be9:	eb 24                	jmp    81003c0f <_free_r+0x1e9>
81003beb:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003bee:	8b 40 0c             	mov    0xc(%eax),%eax
81003bf1:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003bf4:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003bf7:	8b 40 08             	mov    0x8(%eax),%eax
81003bfa:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003bfd:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003c00:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003c03:	89 50 0c             	mov    %edx,0xc(%eax)
81003c06:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003c09:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003c0c:	89 50 08             	mov    %edx,0x8(%eax)
81003c0f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c12:	83 c8 01             	or     $0x1,%eax
81003c15:	89 c2                	mov    %eax,%edx
81003c17:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c1a:	89 50 04             	mov    %edx,0x4(%eax)
81003c1d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003c20:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c23:	01 c2                	add    %eax,%edx
81003c25:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c28:	89 02                	mov    %eax,(%edx)
81003c2a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003c2e:	0f 85 b7 01 00 00    	jne    81003deb <_free_r+0x3c5>
81003c34:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81003c3b:	77 7f                	ja     81003cbc <_free_r+0x296>
81003c3d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c40:	c1 e8 03             	shr    $0x3,%eax
81003c43:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003c46:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
81003c4b:	8b 58 04             	mov    0x4(%eax),%ebx
81003c4e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c51:	8d 50 03             	lea    0x3(%eax),%edx
81003c54:	85 c0                	test   %eax,%eax
81003c56:	0f 48 c2             	cmovs  %edx,%eax
81003c59:	c1 f8 02             	sar    $0x2,%eax
81003c5c:	ba 01 00 00 00       	mov    $0x1,%edx
81003c61:	89 c1                	mov    %eax,%ecx
81003c63:	d3 e2                	shl    %cl,%edx
81003c65:	89 d0                	mov    %edx,%eax
81003c67:	ba 40 4f 00 81       	mov    $0x81004f40,%edx
81003c6c:	09 d8                	or     %ebx,%eax
81003c6e:	89 42 04             	mov    %eax,0x4(%edx)
81003c71:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c74:	83 c0 01             	add    $0x1,%eax
81003c77:	01 c0                	add    %eax,%eax
81003c79:	c1 e0 02             	shl    $0x2,%eax
81003c7c:	05 40 4f 00 81       	add    $0x81004f40,%eax
81003c81:	83 e8 08             	sub    $0x8,%eax
81003c84:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003c87:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003c8a:	8b 40 08             	mov    0x8(%eax),%eax
81003c8d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003c90:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c93:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003c96:	89 50 0c             	mov    %edx,0xc(%eax)
81003c99:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c9c:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003c9f:	89 50 08             	mov    %edx,0x8(%eax)
81003ca2:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003ca5:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003ca8:	89 50 08             	mov    %edx,0x8(%eax)
81003cab:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003cae:	8b 50 08             	mov    0x8(%eax),%edx
81003cb1:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003cb4:	89 50 0c             	mov    %edx,0xc(%eax)
81003cb7:	e9 2f 01 00 00       	jmp    81003deb <_free_r+0x3c5>
81003cbc:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003cbf:	c1 e8 09             	shr    $0x9,%eax
81003cc2:	85 c0                	test   %eax,%eax
81003cc4:	75 08                	jne    81003cce <_free_r+0x2a8>
81003cc6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003cc9:	c1 e8 03             	shr    $0x3,%eax
81003ccc:	eb 77                	jmp    81003d45 <_free_r+0x31f>
81003cce:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003cd1:	c1 e8 09             	shr    $0x9,%eax
81003cd4:	83 f8 04             	cmp    $0x4,%eax
81003cd7:	77 0b                	ja     81003ce4 <_free_r+0x2be>
81003cd9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003cdc:	c1 e8 06             	shr    $0x6,%eax
81003cdf:	83 c0 38             	add    $0x38,%eax
81003ce2:	eb 61                	jmp    81003d45 <_free_r+0x31f>
81003ce4:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003ce7:	c1 e8 09             	shr    $0x9,%eax
81003cea:	83 f8 14             	cmp    $0x14,%eax
81003ced:	77 0b                	ja     81003cfa <_free_r+0x2d4>
81003cef:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003cf2:	c1 e8 09             	shr    $0x9,%eax
81003cf5:	83 c0 5b             	add    $0x5b,%eax
81003cf8:	eb 4b                	jmp    81003d45 <_free_r+0x31f>
81003cfa:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003cfd:	c1 e8 09             	shr    $0x9,%eax
81003d00:	83 f8 54             	cmp    $0x54,%eax
81003d03:	77 0b                	ja     81003d10 <_free_r+0x2ea>
81003d05:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d08:	c1 e8 0c             	shr    $0xc,%eax
81003d0b:	83 c0 6e             	add    $0x6e,%eax
81003d0e:	eb 35                	jmp    81003d45 <_free_r+0x31f>
81003d10:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d13:	c1 e8 09             	shr    $0x9,%eax
81003d16:	3d 54 01 00 00       	cmp    $0x154,%eax
81003d1b:	77 0b                	ja     81003d28 <_free_r+0x302>
81003d1d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d20:	c1 e8 0f             	shr    $0xf,%eax
81003d23:	83 c0 77             	add    $0x77,%eax
81003d26:	eb 1d                	jmp    81003d45 <_free_r+0x31f>
81003d28:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d2b:	c1 e8 09             	shr    $0x9,%eax
81003d2e:	3d 54 05 00 00       	cmp    $0x554,%eax
81003d33:	77 0b                	ja     81003d40 <_free_r+0x31a>
81003d35:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d38:	c1 e8 12             	shr    $0x12,%eax
81003d3b:	83 c0 7c             	add    $0x7c,%eax
81003d3e:	eb 05                	jmp    81003d45 <_free_r+0x31f>
81003d40:	b8 7e 00 00 00       	mov    $0x7e,%eax
81003d45:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003d48:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d4b:	83 c0 01             	add    $0x1,%eax
81003d4e:	01 c0                	add    %eax,%eax
81003d50:	c1 e0 02             	shl    $0x2,%eax
81003d53:	05 40 4f 00 81       	add    $0x81004f40,%eax
81003d58:	83 e8 08             	sub    $0x8,%eax
81003d5b:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003d5e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003d61:	8b 40 08             	mov    0x8(%eax),%eax
81003d64:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003d67:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003d6a:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003d6d:	75 36                	jne    81003da5 <_free_r+0x37f>
81003d6f:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
81003d74:	8b 58 04             	mov    0x4(%eax),%ebx
81003d77:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d7a:	8d 50 03             	lea    0x3(%eax),%edx
81003d7d:	85 c0                	test   %eax,%eax
81003d7f:	0f 48 c2             	cmovs  %edx,%eax
81003d82:	c1 f8 02             	sar    $0x2,%eax
81003d85:	ba 01 00 00 00       	mov    $0x1,%edx
81003d8a:	89 c1                	mov    %eax,%ecx
81003d8c:	d3 e2                	shl    %cl,%edx
81003d8e:	89 d0                	mov    %edx,%eax
81003d90:	ba 40 4f 00 81       	mov    $0x81004f40,%edx
81003d95:	09 d8                	or     %ebx,%eax
81003d97:	89 42 04             	mov    %eax,0x4(%edx)
81003d9a:	eb 28                	jmp    81003dc4 <_free_r+0x39e>
81003d9c:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003d9f:	8b 40 08             	mov    0x8(%eax),%eax
81003da2:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003da5:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003da8:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003dab:	74 0e                	je     81003dbb <_free_r+0x395>
81003dad:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003db0:	8b 40 04             	mov    0x4(%eax),%eax
81003db3:	83 e0 fc             	and    $0xfffffffc,%eax
81003db6:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81003db9:	72 e1                	jb     81003d9c <_free_r+0x376>
81003dbb:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003dbe:	8b 40 0c             	mov    0xc(%eax),%eax
81003dc1:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003dc4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003dc7:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003dca:	89 50 0c             	mov    %edx,0xc(%eax)
81003dcd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003dd0:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003dd3:	89 50 08             	mov    %edx,0x8(%eax)
81003dd6:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003dd9:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003ddc:	89 50 08             	mov    %edx,0x8(%eax)
81003ddf:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003de2:	8b 50 08             	mov    0x8(%eax),%edx
81003de5:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003de8:	89 50 0c             	mov    %edx,0xc(%eax)
81003deb:	83 ec 0c             	sub    $0xc,%esp
81003dee:	ff 75 08             	push   0x8(%ebp)
81003df1:	e8 05 de ff ff       	call   81001bfb <__malloc_unlock>
81003df6:	83 c4 10             	add    $0x10,%esp
81003df9:	eb 01                	jmp    81003dfc <_free_r+0x3d6>
81003dfb:	90                   	nop
81003dfc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003dff:	c9                   	leave  
81003e00:	c3                   	ret    

81003e01 <_malloc_trim_r>:
81003e01:	55                   	push   %ebp
81003e02:	89 e5                	mov    %esp,%ebp
81003e04:	83 ec 28             	sub    $0x28,%esp
81003e07:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81003e0e:	83 ec 0c             	sub    $0xc,%esp
81003e11:	ff 75 08             	push   0x8(%ebp)
81003e14:	e8 dc dd ff ff       	call   81001bf5 <__malloc_lock>
81003e19:	83 c4 10             	add    $0x10,%esp
81003e1c:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
81003e21:	8b 40 08             	mov    0x8(%eax),%eax
81003e24:	8b 40 04             	mov    0x4(%eax),%eax
81003e27:	83 e0 fc             	and    $0xfffffffc,%eax
81003e2a:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003e2d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003e30:	2b 45 0c             	sub    0xc(%ebp),%eax
81003e33:	89 c2                	mov    %eax,%edx
81003e35:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e38:	01 d0                	add    %edx,%eax
81003e3a:	83 e8 11             	sub    $0x11,%eax
81003e3d:	ba 00 00 00 00       	mov    $0x0,%edx
81003e42:	f7 75 f4             	divl   -0xc(%ebp)
81003e45:	83 e8 01             	sub    $0x1,%eax
81003e48:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81003e4c:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003e4f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e52:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81003e55:	7d 18                	jge    81003e6f <_malloc_trim_r+0x6e>
81003e57:	83 ec 0c             	sub    $0xc,%esp
81003e5a:	ff 75 08             	push   0x8(%ebp)
81003e5d:	e8 99 dd ff ff       	call   81001bfb <__malloc_unlock>
81003e62:	83 c4 10             	add    $0x10,%esp
81003e65:	b8 00 00 00 00       	mov    $0x0,%eax
81003e6a:	e9 f1 00 00 00       	jmp    81003f60 <_malloc_trim_r+0x15f>
81003e6f:	83 ec 08             	sub    $0x8,%esp
81003e72:	6a 00                	push   $0x0
81003e74:	ff 75 08             	push   0x8(%ebp)
81003e77:	e8 ae f1 ff ff       	call   8100302a <_sbrk_r>
81003e7c:	83 c4 10             	add    $0x10,%esp
81003e7f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003e82:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
81003e87:	8b 50 08             	mov    0x8(%eax),%edx
81003e8a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003e8d:	01 d0                	add    %edx,%eax
81003e8f:	39 45 e8             	cmp    %eax,-0x18(%ebp)
81003e92:	74 18                	je     81003eac <_malloc_trim_r+0xab>
81003e94:	83 ec 0c             	sub    $0xc,%esp
81003e97:	ff 75 08             	push   0x8(%ebp)
81003e9a:	e8 5c dd ff ff       	call   81001bfb <__malloc_unlock>
81003e9f:	83 c4 10             	add    $0x10,%esp
81003ea2:	b8 00 00 00 00       	mov    $0x0,%eax
81003ea7:	e9 b4 00 00 00       	jmp    81003f60 <_malloc_trim_r+0x15f>
81003eac:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003eaf:	f7 d8                	neg    %eax
81003eb1:	83 ec 08             	sub    $0x8,%esp
81003eb4:	50                   	push   %eax
81003eb5:	ff 75 08             	push   0x8(%ebp)
81003eb8:	e8 6d f1 ff ff       	call   8100302a <_sbrk_r>
81003ebd:	83 c4 10             	add    $0x10,%esp
81003ec0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003ec3:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81003ec7:	75 61                	jne    81003f2a <_malloc_trim_r+0x129>
81003ec9:	83 ec 08             	sub    $0x8,%esp
81003ecc:	6a 00                	push   $0x0
81003ece:	ff 75 08             	push   0x8(%ebp)
81003ed1:	e8 54 f1 ff ff       	call   8100302a <_sbrk_r>
81003ed6:	83 c4 10             	add    $0x10,%esp
81003ed9:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003edc:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
81003ee1:	8b 50 08             	mov    0x8(%eax),%edx
81003ee4:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003ee7:	29 d0                	sub    %edx,%eax
81003ee9:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003eec:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81003ef0:	7e 23                	jle    81003f15 <_malloc_trim_r+0x114>
81003ef2:	8b 15 4c 53 00 81    	mov    0x8100534c,%edx
81003ef8:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003efb:	29 d0                	sub    %edx,%eax
81003efd:	a3 20 55 00 81       	mov    %eax,0x81005520
81003f02:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f05:	83 c8 01             	or     $0x1,%eax
81003f08:	89 c2                	mov    %eax,%edx
81003f0a:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
81003f0f:	8b 40 08             	mov    0x8(%eax),%eax
81003f12:	89 50 04             	mov    %edx,0x4(%eax)
81003f15:	83 ec 0c             	sub    $0xc,%esp
81003f18:	ff 75 08             	push   0x8(%ebp)
81003f1b:	e8 db dc ff ff       	call   81001bfb <__malloc_unlock>
81003f20:	83 c4 10             	add    $0x10,%esp
81003f23:	b8 00 00 00 00       	mov    $0x0,%eax
81003f28:	eb 36                	jmp    81003f60 <_malloc_trim_r+0x15f>
81003f2a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f2d:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003f30:	83 c8 01             	or     $0x1,%eax
81003f33:	89 c2                	mov    %eax,%edx
81003f35:	b8 40 4f 00 81       	mov    $0x81004f40,%eax
81003f3a:	8b 40 08             	mov    0x8(%eax),%eax
81003f3d:	89 50 04             	mov    %edx,0x4(%eax)
81003f40:	a1 20 55 00 81       	mov    0x81005520,%eax
81003f45:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003f48:	a3 20 55 00 81       	mov    %eax,0x81005520
81003f4d:	83 ec 0c             	sub    $0xc,%esp
81003f50:	ff 75 08             	push   0x8(%ebp)
81003f53:	e8 a3 dc ff ff       	call   81001bfb <__malloc_unlock>
81003f58:	83 c4 10             	add    $0x10,%esp
81003f5b:	b8 01 00 00 00       	mov    $0x1,%eax
81003f60:	c9                   	leave  
81003f61:	c3                   	ret    

81003f62 <__get_global_locale>:
81003f62:	55                   	push   %ebp
81003f63:	89 e5                	mov    %esp,%ebp
81003f65:	b8 60 53 00 81       	mov    $0x81005360,%eax
81003f6a:	5d                   	pop    %ebp
81003f6b:	c3                   	ret    

81003f6c <__get_current_locale>:
81003f6c:	55                   	push   %ebp
81003f6d:	89 e5                	mov    %esp,%ebp
81003f6f:	e8 ee ff ff ff       	call   81003f62 <__get_global_locale>
81003f74:	5d                   	pop    %ebp
81003f75:	c3                   	ret    

81003f76 <_setlocale_r>:
81003f76:	55                   	push   %ebp
81003f77:	89 e5                	mov    %esp,%ebp
81003f79:	83 ec 08             	sub    $0x8,%esp
81003f7c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003f80:	74 4c                	je     81003fce <_setlocale_r+0x58>
81003f82:	83 ec 08             	sub    $0x8,%esp
81003f85:	68 57 48 00 81       	push   $0x81004857
81003f8a:	ff 75 10             	push   0x10(%ebp)
81003f8d:	e8 af 04 00 00       	call   81004441 <strcmp>
81003f92:	83 c4 10             	add    $0x10,%esp
81003f95:	85 c0                	test   %eax,%eax
81003f97:	74 35                	je     81003fce <_setlocale_r+0x58>
81003f99:	83 ec 08             	sub    $0x8,%esp
81003f9c:	68 5d 48 00 81       	push   $0x8100485d
81003fa1:	ff 75 10             	push   0x10(%ebp)
81003fa4:	e8 98 04 00 00       	call   81004441 <strcmp>
81003fa9:	83 c4 10             	add    $0x10,%esp
81003fac:	85 c0                	test   %eax,%eax
81003fae:	74 1e                	je     81003fce <_setlocale_r+0x58>
81003fb0:	83 ec 08             	sub    $0x8,%esp
81003fb3:	68 56 48 00 81       	push   $0x81004856
81003fb8:	ff 75 10             	push   0x10(%ebp)
81003fbb:	e8 81 04 00 00       	call   81004441 <strcmp>
81003fc0:	83 c4 10             	add    $0x10,%esp
81003fc3:	85 c0                	test   %eax,%eax
81003fc5:	74 07                	je     81003fce <_setlocale_r+0x58>
81003fc7:	b8 00 00 00 00       	mov    $0x0,%eax
81003fcc:	eb 05                	jmp    81003fd3 <_setlocale_r+0x5d>
81003fce:	b8 5d 48 00 81       	mov    $0x8100485d,%eax
81003fd3:	c9                   	leave  
81003fd4:	c3                   	ret    

81003fd5 <__locale_mb_cur_max>:
81003fd5:	55                   	push   %ebp
81003fd6:	89 e5                	mov    %esp,%ebp
81003fd8:	e8 8f ff ff ff       	call   81003f6c <__get_current_locale>
81003fdd:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
81003fe4:	0f be c0             	movsbl %al,%eax
81003fe7:	5d                   	pop    %ebp
81003fe8:	c3                   	ret    

81003fe9 <setlocale>:
81003fe9:	55                   	push   %ebp
81003fea:	89 e5                	mov    %esp,%ebp
81003fec:	83 ec 08             	sub    $0x8,%esp
81003fef:	a1 24 4f 00 81       	mov    0x81004f24,%eax
81003ff4:	83 ec 04             	sub    $0x4,%esp
81003ff7:	ff 75 0c             	push   0xc(%ebp)
81003ffa:	ff 75 08             	push   0x8(%ebp)
81003ffd:	50                   	push   %eax
81003ffe:	e8 73 ff ff ff       	call   81003f76 <_setlocale_r>
81004003:	83 c4 10             	add    $0x10,%esp
81004006:	c9                   	leave  
81004007:	c3                   	ret    

81004008 <_lseek_r>:
81004008:	55                   	push   %ebp
81004009:	89 e5                	mov    %esp,%ebp
8100400b:	83 ec 18             	sub    $0x18,%esp
8100400e:	c7 05 50 55 00 81 00 	movl   $0x0,0x81005550
81004015:	00 00 00 
81004018:	83 ec 04             	sub    $0x4,%esp
8100401b:	ff 75 14             	push   0x14(%ebp)
8100401e:	ff 75 10             	push   0x10(%ebp)
81004021:	ff 75 0c             	push   0xc(%ebp)
81004024:	e8 3c c3 ff ff       	call   81000365 <lseek>
81004029:	83 c4 10             	add    $0x10,%esp
8100402c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100402f:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004033:	75 14                	jne    81004049 <_lseek_r+0x41>
81004035:	a1 50 55 00 81       	mov    0x81005550,%eax
8100403a:	85 c0                	test   %eax,%eax
8100403c:	74 0b                	je     81004049 <_lseek_r+0x41>
8100403e:	8b 15 50 55 00 81    	mov    0x81005550,%edx
81004044:	8b 45 08             	mov    0x8(%ebp),%eax
81004047:	89 10                	mov    %edx,(%eax)
81004049:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100404c:	c9                   	leave  
8100404d:	c3                   	ret    

8100404e <__smakebuf_r>:
8100404e:	55                   	push   %ebp
8100404f:	89 e5                	mov    %esp,%ebp
81004051:	56                   	push   %esi
81004052:	53                   	push   %ebx
81004053:	83 ec 10             	sub    $0x10,%esp
81004056:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004059:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100405d:	98                   	cwtl   
8100405e:	83 e0 02             	and    $0x2,%eax
81004061:	85 c0                	test   %eax,%eax
81004063:	74 16                	je     8100407b <__smakebuf_r+0x2d>
81004065:	8d 43 43             	lea    0x43(%ebx),%eax
81004068:	89 03                	mov    %eax,(%ebx)
8100406a:	8b 03                	mov    (%ebx),%eax
8100406c:	89 43 10             	mov    %eax,0x10(%ebx)
8100406f:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81004076:	e9 b9 00 00 00       	jmp    81004134 <__smakebuf_r+0xe6>
8100407b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100407e:	50                   	push   %eax
8100407f:	8d 45 f0             	lea    -0x10(%ebp),%eax
81004082:	50                   	push   %eax
81004083:	53                   	push   %ebx
81004084:	ff 75 08             	push   0x8(%ebp)
81004087:	e8 af 00 00 00       	call   8100413b <__swhatbuf_r>
8100408c:	83 c4 10             	add    $0x10,%esp
8100408f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004092:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004095:	83 ec 08             	sub    $0x8,%esp
81004098:	50                   	push   %eax
81004099:	ff 75 08             	push   0x8(%ebp)
8100409c:	e8 2e d1 ff ff       	call   810011cf <_malloc_r>
810040a1:	83 c4 10             	add    $0x10,%esp
810040a4:	89 c6                	mov    %eax,%esi
810040a6:	85 f6                	test   %esi,%esi
810040a8:	75 2f                	jne    810040d9 <__smakebuf_r+0x8b>
810040aa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810040ae:	98                   	cwtl   
810040af:	25 00 02 00 00       	and    $0x200,%eax
810040b4:	85 c0                	test   %eax,%eax
810040b6:	75 7c                	jne    81004134 <__smakebuf_r+0xe6>
810040b8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810040bc:	83 e0 fc             	and    $0xfffffffc,%eax
810040bf:	83 c8 02             	or     $0x2,%eax
810040c2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810040c6:	8d 43 43             	lea    0x43(%ebx),%eax
810040c9:	89 03                	mov    %eax,(%ebx)
810040cb:	8b 03                	mov    (%ebx),%eax
810040cd:	89 43 10             	mov    %eax,0x10(%ebx)
810040d0:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810040d7:	eb 5b                	jmp    81004134 <__smakebuf_r+0xe6>
810040d9:	8b 45 08             	mov    0x8(%ebp),%eax
810040dc:	c7 40 3c 83 08 00 81 	movl   $0x81000883,0x3c(%eax)
810040e3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810040e7:	0c 80                	or     $0x80,%al
810040e9:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810040ed:	89 33                	mov    %esi,(%ebx)
810040ef:	8b 03                	mov    (%ebx),%eax
810040f1:	89 43 10             	mov    %eax,0x10(%ebx)
810040f4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040f7:	89 43 14             	mov    %eax,0x14(%ebx)
810040fa:	8b 45 ec             	mov    -0x14(%ebp),%eax
810040fd:	85 c0                	test   %eax,%eax
810040ff:	74 26                	je     81004127 <__smakebuf_r+0xd9>
81004101:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81004105:	98                   	cwtl   
81004106:	83 ec 08             	sub    $0x8,%esp
81004109:	50                   	push   %eax
8100410a:	ff 75 08             	push   0x8(%ebp)
8100410d:	e8 9c 05 00 00       	call   810046ae <_isatty_r>
81004112:	83 c4 10             	add    $0x10,%esp
81004115:	85 c0                	test   %eax,%eax
81004117:	74 0e                	je     81004127 <__smakebuf_r+0xd9>
81004119:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100411d:	83 e0 fc             	and    $0xfffffffc,%eax
81004120:	83 c8 01             	or     $0x1,%eax
81004123:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004127:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
8100412b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100412e:	09 d0                	or     %edx,%eax
81004130:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004134:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004137:	5b                   	pop    %ebx
81004138:	5e                   	pop    %esi
81004139:	5d                   	pop    %ebp
8100413a:	c3                   	ret    

8100413b <__swhatbuf_r>:
8100413b:	55                   	push   %ebp
8100413c:	89 e5                	mov    %esp,%ebp
8100413e:	83 ec 58             	sub    $0x58,%esp
81004141:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81004148:	8b 45 0c             	mov    0xc(%ebp),%eax
8100414b:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100414f:	66 85 c0             	test   %ax,%ax
81004152:	78 1f                	js     81004173 <__swhatbuf_r+0x38>
81004154:	8b 45 0c             	mov    0xc(%ebp),%eax
81004157:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100415b:	98                   	cwtl   
8100415c:	83 ec 04             	sub    $0x4,%esp
8100415f:	8d 55 ac             	lea    -0x54(%ebp),%edx
81004162:	52                   	push   %edx
81004163:	50                   	push   %eax
81004164:	ff 75 08             	push   0x8(%ebp)
81004167:	e8 ff 04 00 00       	call   8100466b <_fstat_r>
8100416c:	83 c4 10             	add    $0x10,%esp
8100416f:	85 c0                	test   %eax,%eax
81004171:	79 35                	jns    810041a8 <__swhatbuf_r+0x6d>
81004173:	8b 45 14             	mov    0x14(%ebp),%eax
81004176:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100417c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100417f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004183:	98                   	cwtl   
81004184:	25 80 00 00 00       	and    $0x80,%eax
81004189:	85 c0                	test   %eax,%eax
8100418b:	74 0b                	je     81004198 <__swhatbuf_r+0x5d>
8100418d:	8b 45 10             	mov    0x10(%ebp),%eax
81004190:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81004196:	eb 09                	jmp    810041a1 <__swhatbuf_r+0x66>
81004198:	8b 45 10             	mov    0x10(%ebp),%eax
8100419b:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810041a1:	b8 00 00 00 00       	mov    $0x0,%eax
810041a6:	eb 24                	jmp    810041cc <__swhatbuf_r+0x91>
810041a8:	8b 45 b0             	mov    -0x50(%ebp),%eax
810041ab:	25 00 f0 00 00       	and    $0xf000,%eax
810041b0:	3d 00 20 00 00       	cmp    $0x2000,%eax
810041b5:	0f 94 c0             	sete   %al
810041b8:	0f b6 d0             	movzbl %al,%edx
810041bb:	8b 45 14             	mov    0x14(%ebp),%eax
810041be:	89 10                	mov    %edx,(%eax)
810041c0:	8b 45 10             	mov    0x10(%ebp),%eax
810041c3:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810041c9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041cc:	c9                   	leave  
810041cd:	c3                   	ret    

810041ce <__get_global_locale>:
810041ce:	55                   	push   %ebp
810041cf:	89 e5                	mov    %esp,%ebp
810041d1:	b8 60 53 00 81       	mov    $0x81005360,%eax
810041d6:	5d                   	pop    %ebp
810041d7:	c3                   	ret    

810041d8 <__get_current_locale>:
810041d8:	55                   	push   %ebp
810041d9:	89 e5                	mov    %esp,%ebp
810041db:	e8 ee ff ff ff       	call   810041ce <__get_global_locale>
810041e0:	5d                   	pop    %ebp
810041e1:	c3                   	ret    

810041e2 <_mbtowc_r>:
810041e2:	55                   	push   %ebp
810041e3:	89 e5                	mov    %esp,%ebp
810041e5:	83 ec 08             	sub    $0x8,%esp
810041e8:	e8 eb ff ff ff       	call   810041d8 <__get_current_locale>
810041ed:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
810041f3:	83 ec 0c             	sub    $0xc,%esp
810041f6:	ff 75 18             	push   0x18(%ebp)
810041f9:	ff 75 14             	push   0x14(%ebp)
810041fc:	ff 75 10             	push   0x10(%ebp)
810041ff:	ff 75 0c             	push   0xc(%ebp)
81004202:	ff 75 08             	push   0x8(%ebp)
81004205:	ff d0                	call   *%eax
81004207:	83 c4 20             	add    $0x20,%esp
8100420a:	c9                   	leave  
8100420b:	c3                   	ret    

8100420c <__ascii_mbtowc>:
8100420c:	55                   	push   %ebp
8100420d:	89 e5                	mov    %esp,%ebp
8100420f:	83 ec 10             	sub    $0x10,%esp
81004212:	8b 45 10             	mov    0x10(%ebp),%eax
81004215:	89 45 fc             	mov    %eax,-0x4(%ebp)
81004218:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100421c:	75 06                	jne    81004224 <__ascii_mbtowc+0x18>
8100421e:	8d 45 f8             	lea    -0x8(%ebp),%eax
81004221:	89 45 0c             	mov    %eax,0xc(%ebp)
81004224:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81004228:	75 07                	jne    81004231 <__ascii_mbtowc+0x25>
8100422a:	b8 00 00 00 00       	mov    $0x0,%eax
8100422f:	eb 31                	jmp    81004262 <__ascii_mbtowc+0x56>
81004231:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81004235:	75 07                	jne    8100423e <__ascii_mbtowc+0x32>
81004237:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
8100423c:	eb 24                	jmp    81004262 <__ascii_mbtowc+0x56>
8100423e:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004241:	0f b6 00             	movzbl (%eax),%eax
81004244:	0f b6 d0             	movzbl %al,%edx
81004247:	8b 45 0c             	mov    0xc(%ebp),%eax
8100424a:	89 10                	mov    %edx,(%eax)
8100424c:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100424f:	0f b6 00             	movzbl (%eax),%eax
81004252:	84 c0                	test   %al,%al
81004254:	75 07                	jne    8100425d <__ascii_mbtowc+0x51>
81004256:	b8 00 00 00 00       	mov    $0x0,%eax
8100425b:	eb 05                	jmp    81004262 <__ascii_mbtowc+0x56>
8100425d:	b8 01 00 00 00       	mov    $0x1,%eax
81004262:	c9                   	leave  
81004263:	c3                   	ret    

81004264 <_read_r>:
81004264:	55                   	push   %ebp
81004265:	89 e5                	mov    %esp,%ebp
81004267:	83 ec 18             	sub    $0x18,%esp
8100426a:	c7 05 50 55 00 81 00 	movl   $0x0,0x81005550
81004271:	00 00 00 
81004274:	83 ec 04             	sub    $0x4,%esp
81004277:	ff 75 14             	push   0x14(%ebp)
8100427a:	ff 75 10             	push   0x10(%ebp)
8100427d:	ff 75 0c             	push   0xc(%ebp)
81004280:	e8 65 c0 ff ff       	call   810002ea <read>
81004285:	83 c4 10             	add    $0x10,%esp
81004288:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100428b:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100428f:	75 14                	jne    810042a5 <_read_r+0x41>
81004291:	a1 50 55 00 81       	mov    0x81005550,%eax
81004296:	85 c0                	test   %eax,%eax
81004298:	74 0b                	je     810042a5 <_read_r+0x41>
8100429a:	8b 15 50 55 00 81    	mov    0x81005550,%edx
810042a0:	8b 45 08             	mov    0x8(%ebp),%eax
810042a3:	89 10                	mov    %edx,(%eax)
810042a5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810042a8:	c9                   	leave  
810042a9:	c3                   	ret    

810042aa <cleanup_glue>:
810042aa:	55                   	push   %ebp
810042ab:	89 e5                	mov    %esp,%ebp
810042ad:	83 ec 08             	sub    $0x8,%esp
810042b0:	8b 45 0c             	mov    0xc(%ebp),%eax
810042b3:	8b 00                	mov    (%eax),%eax
810042b5:	85 c0                	test   %eax,%eax
810042b7:	74 14                	je     810042cd <cleanup_glue+0x23>
810042b9:	8b 45 0c             	mov    0xc(%ebp),%eax
810042bc:	8b 00                	mov    (%eax),%eax
810042be:	83 ec 08             	sub    $0x8,%esp
810042c1:	50                   	push   %eax
810042c2:	ff 75 08             	push   0x8(%ebp)
810042c5:	e8 e0 ff ff ff       	call   810042aa <cleanup_glue>
810042ca:	83 c4 10             	add    $0x10,%esp
810042cd:	83 ec 08             	sub    $0x8,%esp
810042d0:	ff 75 0c             	push   0xc(%ebp)
810042d3:	ff 75 08             	push   0x8(%ebp)
810042d6:	e8 4b f7 ff ff       	call   81003a26 <_free_r>
810042db:	83 c4 10             	add    $0x10,%esp
810042de:	90                   	nop
810042df:	c9                   	leave  
810042e0:	c3                   	ret    

810042e1 <_reclaim_reent>:
810042e1:	55                   	push   %ebp
810042e2:	89 e5                	mov    %esp,%ebp
810042e4:	83 ec 28             	sub    $0x28,%esp
810042e7:	a1 24 4f 00 81       	mov    0x81004f24,%eax
810042ec:	39 45 08             	cmp    %eax,0x8(%ebp)
810042ef:	0f 84 49 01 00 00    	je     8100443e <_reclaim_reent+0x15d>
810042f5:	8b 45 08             	mov    0x8(%ebp),%eax
810042f8:	8b 40 4c             	mov    0x4c(%eax),%eax
810042fb:	85 c0                	test   %eax,%eax
810042fd:	74 64                	je     81004363 <_reclaim_reent+0x82>
810042ff:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004306:	eb 3e                	jmp    81004346 <_reclaim_reent+0x65>
81004308:	8b 45 08             	mov    0x8(%ebp),%eax
8100430b:	8b 50 4c             	mov    0x4c(%eax),%edx
8100430e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004311:	c1 e0 02             	shl    $0x2,%eax
81004314:	01 d0                	add    %edx,%eax
81004316:	8b 00                	mov    (%eax),%eax
81004318:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100431b:	eb 1f                	jmp    8100433c <_reclaim_reent+0x5b>
8100431d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004320:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004323:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004326:	8b 00                	mov    (%eax),%eax
81004328:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100432b:	83 ec 08             	sub    $0x8,%esp
8100432e:	ff 75 e8             	push   -0x18(%ebp)
81004331:	ff 75 08             	push   0x8(%ebp)
81004334:	e8 ed f6 ff ff       	call   81003a26 <_free_r>
81004339:	83 c4 10             	add    $0x10,%esp
8100433c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004340:	75 db                	jne    8100431d <_reclaim_reent+0x3c>
81004342:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81004346:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004349:	83 f8 1f             	cmp    $0x1f,%eax
8100434c:	76 ba                	jbe    81004308 <_reclaim_reent+0x27>
8100434e:	8b 45 08             	mov    0x8(%ebp),%eax
81004351:	8b 40 4c             	mov    0x4c(%eax),%eax
81004354:	83 ec 08             	sub    $0x8,%esp
81004357:	50                   	push   %eax
81004358:	ff 75 08             	push   0x8(%ebp)
8100435b:	e8 c6 f6 ff ff       	call   81003a26 <_free_r>
81004360:	83 c4 10             	add    $0x10,%esp
81004363:	8b 45 08             	mov    0x8(%ebp),%eax
81004366:	8b 40 40             	mov    0x40(%eax),%eax
81004369:	85 c0                	test   %eax,%eax
8100436b:	74 15                	je     81004382 <_reclaim_reent+0xa1>
8100436d:	8b 45 08             	mov    0x8(%ebp),%eax
81004370:	8b 40 40             	mov    0x40(%eax),%eax
81004373:	83 ec 08             	sub    $0x8,%esp
81004376:	50                   	push   %eax
81004377:	ff 75 08             	push   0x8(%ebp)
8100437a:	e8 a7 f6 ff ff       	call   81003a26 <_free_r>
8100437f:	83 c4 10             	add    $0x10,%esp
81004382:	8b 45 08             	mov    0x8(%ebp),%eax
81004385:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
8100438b:	85 c0                	test   %eax,%eax
8100438d:	74 50                	je     810043df <_reclaim_reent+0xfe>
8100438f:	8b 45 08             	mov    0x8(%ebp),%eax
81004392:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81004398:	8b 55 08             	mov    0x8(%ebp),%edx
8100439b:	81 c2 4c 01 00 00    	add    $0x14c,%edx
810043a1:	39 d0                	cmp    %edx,%eax
810043a3:	74 3a                	je     810043df <_reclaim_reent+0xfe>
810043a5:	8b 45 08             	mov    0x8(%ebp),%eax
810043a8:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810043ae:	89 45 ec             	mov    %eax,-0x14(%ebp)
810043b1:	eb 1f                	jmp    810043d2 <_reclaim_reent+0xf1>
810043b3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810043b6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810043b9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810043bc:	8b 00                	mov    (%eax),%eax
810043be:	89 45 ec             	mov    %eax,-0x14(%ebp)
810043c1:	83 ec 08             	sub    $0x8,%esp
810043c4:	ff 75 e4             	push   -0x1c(%ebp)
810043c7:	ff 75 08             	push   0x8(%ebp)
810043ca:	e8 57 f6 ff ff       	call   81003a26 <_free_r>
810043cf:	83 c4 10             	add    $0x10,%esp
810043d2:	8b 45 08             	mov    0x8(%ebp),%eax
810043d5:	05 4c 01 00 00       	add    $0x14c,%eax
810043da:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810043dd:	75 d4                	jne    810043b3 <_reclaim_reent+0xd2>
810043df:	8b 45 08             	mov    0x8(%ebp),%eax
810043e2:	8b 40 54             	mov    0x54(%eax),%eax
810043e5:	85 c0                	test   %eax,%eax
810043e7:	74 15                	je     810043fe <_reclaim_reent+0x11d>
810043e9:	8b 45 08             	mov    0x8(%ebp),%eax
810043ec:	8b 40 54             	mov    0x54(%eax),%eax
810043ef:	83 ec 08             	sub    $0x8,%esp
810043f2:	50                   	push   %eax
810043f3:	ff 75 08             	push   0x8(%ebp)
810043f6:	e8 2b f6 ff ff       	call   81003a26 <_free_r>
810043fb:	83 c4 10             	add    $0x10,%esp
810043fe:	8b 45 08             	mov    0x8(%ebp),%eax
81004401:	8b 40 38             	mov    0x38(%eax),%eax
81004404:	85 c0                	test   %eax,%eax
81004406:	74 36                	je     8100443e <_reclaim_reent+0x15d>
81004408:	8b 45 08             	mov    0x8(%ebp),%eax
8100440b:	8b 40 3c             	mov    0x3c(%eax),%eax
8100440e:	83 ec 0c             	sub    $0xc,%esp
81004411:	ff 75 08             	push   0x8(%ebp)
81004414:	ff d0                	call   *%eax
81004416:	83 c4 10             	add    $0x10,%esp
81004419:	8b 45 08             	mov    0x8(%ebp),%eax
8100441c:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81004422:	85 c0                	test   %eax,%eax
81004424:	74 18                	je     8100443e <_reclaim_reent+0x15d>
81004426:	8b 45 08             	mov    0x8(%ebp),%eax
81004429:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
8100442f:	83 ec 08             	sub    $0x8,%esp
81004432:	50                   	push   %eax
81004433:	ff 75 08             	push   0x8(%ebp)
81004436:	e8 6f fe ff ff       	call   810042aa <cleanup_glue>
8100443b:	83 c4 10             	add    $0x10,%esp
8100443e:	90                   	nop
8100443f:	c9                   	leave  
81004440:	c3                   	ret    

81004441 <strcmp>:
81004441:	55                   	push   %ebp
81004442:	89 e5                	mov    %esp,%ebp
81004444:	83 ec 10             	sub    $0x10,%esp
81004447:	8b 55 08             	mov    0x8(%ebp),%edx
8100444a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100444d:	09 d0                	or     %edx,%eax
8100444f:	83 e0 03             	and    $0x3,%eax
81004452:	85 c0                	test   %eax,%eax
81004454:	75 5e                	jne    810044b4 <strcmp+0x73>
81004456:	8b 45 08             	mov    0x8(%ebp),%eax
81004459:	89 45 fc             	mov    %eax,-0x4(%ebp)
8100445c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100445f:	89 45 f8             	mov    %eax,-0x8(%ebp)
81004462:	eb 2c                	jmp    81004490 <strcmp+0x4f>
81004464:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004467:	8b 00                	mov    (%eax),%eax
81004469:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
8100446f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004472:	8b 00                	mov    (%eax),%eax
81004474:	f7 d0                	not    %eax
81004476:	21 d0                	and    %edx,%eax
81004478:	25 80 80 80 80       	and    $0x80808080,%eax
8100447d:	85 c0                	test   %eax,%eax
8100447f:	74 07                	je     81004488 <strcmp+0x47>
81004481:	b8 00 00 00 00       	mov    $0x0,%eax
81004486:	eb 5c                	jmp    810044e4 <strcmp+0xa3>
81004488:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
8100448c:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81004490:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004493:	8b 10                	mov    (%eax),%edx
81004495:	8b 45 f8             	mov    -0x8(%ebp),%eax
81004498:	8b 00                	mov    (%eax),%eax
8100449a:	39 c2                	cmp    %eax,%edx
8100449c:	74 c6                	je     81004464 <strcmp+0x23>
8100449e:	8b 45 fc             	mov    -0x4(%ebp),%eax
810044a1:	89 45 08             	mov    %eax,0x8(%ebp)
810044a4:	8b 45 f8             	mov    -0x8(%ebp),%eax
810044a7:	89 45 0c             	mov    %eax,0xc(%ebp)
810044aa:	eb 08                	jmp    810044b4 <strcmp+0x73>
810044ac:	83 45 08 01          	addl   $0x1,0x8(%ebp)
810044b0:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
810044b4:	8b 45 08             	mov    0x8(%ebp),%eax
810044b7:	0f b6 00             	movzbl (%eax),%eax
810044ba:	84 c0                	test   %al,%al
810044bc:	74 10                	je     810044ce <strcmp+0x8d>
810044be:	8b 45 08             	mov    0x8(%ebp),%eax
810044c1:	0f b6 10             	movzbl (%eax),%edx
810044c4:	8b 45 0c             	mov    0xc(%ebp),%eax
810044c7:	0f b6 00             	movzbl (%eax),%eax
810044ca:	38 c2                	cmp    %al,%dl
810044cc:	74 de                	je     810044ac <strcmp+0x6b>
810044ce:	8b 45 08             	mov    0x8(%ebp),%eax
810044d1:	0f b6 00             	movzbl (%eax),%eax
810044d4:	0f b6 d0             	movzbl %al,%edx
810044d7:	8b 45 0c             	mov    0xc(%ebp),%eax
810044da:	0f b6 00             	movzbl (%eax),%eax
810044dd:	0f b6 c8             	movzbl %al,%ecx
810044e0:	89 d0                	mov    %edx,%eax
810044e2:	29 c8                	sub    %ecx,%eax
810044e4:	c9                   	leave  
810044e5:	c3                   	ret    

810044e6 <__get_global_locale>:
810044e6:	55                   	push   %ebp
810044e7:	89 e5                	mov    %esp,%ebp
810044e9:	b8 60 53 00 81       	mov    $0x81005360,%eax
810044ee:	5d                   	pop    %ebp
810044ef:	c3                   	ret    

810044f0 <__get_current_locale>:
810044f0:	55                   	push   %ebp
810044f1:	89 e5                	mov    %esp,%ebp
810044f3:	e8 ee ff ff ff       	call   810044e6 <__get_global_locale>
810044f8:	5d                   	pop    %ebp
810044f9:	c3                   	ret    

810044fa <_wcrtomb_r>:
810044fa:	55                   	push   %ebp
810044fb:	89 e5                	mov    %esp,%ebp
810044fd:	83 ec 18             	sub    $0x18,%esp
81004500:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004507:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100450b:	75 21                	jne    8100452e <_wcrtomb_r+0x34>
8100450d:	e8 de ff ff ff       	call   810044f0 <__get_current_locale>
81004512:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004518:	ff 75 14             	push   0x14(%ebp)
8100451b:	6a 00                	push   $0x0
8100451d:	8d 55 ea             	lea    -0x16(%ebp),%edx
81004520:	52                   	push   %edx
81004521:	ff 75 08             	push   0x8(%ebp)
81004524:	ff d0                	call   *%eax
81004526:	83 c4 10             	add    $0x10,%esp
81004529:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100452c:	eb 1f                	jmp    8100454d <_wcrtomb_r+0x53>
8100452e:	e8 bd ff ff ff       	call   810044f0 <__get_current_locale>
81004533:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004539:	ff 75 14             	push   0x14(%ebp)
8100453c:	ff 75 10             	push   0x10(%ebp)
8100453f:	ff 75 0c             	push   0xc(%ebp)
81004542:	ff 75 08             	push   0x8(%ebp)
81004545:	ff d0                	call   *%eax
81004547:	83 c4 10             	add    $0x10,%esp
8100454a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100454d:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004551:	75 19                	jne    8100456c <_wcrtomb_r+0x72>
81004553:	8b 45 14             	mov    0x14(%ebp),%eax
81004556:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100455c:	8b 45 08             	mov    0x8(%ebp),%eax
8100455f:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81004565:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100456a:	eb 03                	jmp    8100456f <_wcrtomb_r+0x75>
8100456c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100456f:	c9                   	leave  
81004570:	c3                   	ret    

81004571 <wcrtomb>:
81004571:	55                   	push   %ebp
81004572:	89 e5                	mov    %esp,%ebp
81004574:	83 ec 28             	sub    $0x28,%esp
81004577:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100457e:	a1 24 4f 00 81       	mov    0x81004f24,%eax
81004583:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004586:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100458a:	75 21                	jne    810045ad <wcrtomb+0x3c>
8100458c:	e8 5f ff ff ff       	call   810044f0 <__get_current_locale>
81004591:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004597:	ff 75 10             	push   0x10(%ebp)
8100459a:	6a 00                	push   $0x0
8100459c:	8d 55 e6             	lea    -0x1a(%ebp),%edx
8100459f:	52                   	push   %edx
810045a0:	ff 75 f0             	push   -0x10(%ebp)
810045a3:	ff d0                	call   *%eax
810045a5:	83 c4 10             	add    $0x10,%esp
810045a8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810045ab:	eb 1f                	jmp    810045cc <wcrtomb+0x5b>
810045ad:	e8 3e ff ff ff       	call   810044f0 <__get_current_locale>
810045b2:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810045b8:	ff 75 10             	push   0x10(%ebp)
810045bb:	ff 75 0c             	push   0xc(%ebp)
810045be:	ff 75 08             	push   0x8(%ebp)
810045c1:	ff 75 f0             	push   -0x10(%ebp)
810045c4:	ff d0                	call   *%eax
810045c6:	83 c4 10             	add    $0x10,%esp
810045c9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810045cc:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810045d0:	75 19                	jne    810045eb <wcrtomb+0x7a>
810045d2:	8b 45 10             	mov    0x10(%ebp),%eax
810045d5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810045db:	8b 45 f0             	mov    -0x10(%ebp),%eax
810045de:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810045e4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810045e9:	eb 03                	jmp    810045ee <wcrtomb+0x7d>
810045eb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810045ee:	c9                   	leave  
810045ef:	c3                   	ret    

810045f0 <__get_global_locale>:
810045f0:	55                   	push   %ebp
810045f1:	89 e5                	mov    %esp,%ebp
810045f3:	b8 60 53 00 81       	mov    $0x81005360,%eax
810045f8:	5d                   	pop    %ebp
810045f9:	c3                   	ret    

810045fa <__get_current_locale>:
810045fa:	55                   	push   %ebp
810045fb:	89 e5                	mov    %esp,%ebp
810045fd:	e8 ee ff ff ff       	call   810045f0 <__get_global_locale>
81004602:	5d                   	pop    %ebp
81004603:	c3                   	ret    

81004604 <_wctomb_r>:
81004604:	55                   	push   %ebp
81004605:	89 e5                	mov    %esp,%ebp
81004607:	83 ec 08             	sub    $0x8,%esp
8100460a:	e8 eb ff ff ff       	call   810045fa <__get_current_locale>
8100460f:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004615:	ff 75 14             	push   0x14(%ebp)
81004618:	ff 75 10             	push   0x10(%ebp)
8100461b:	ff 75 0c             	push   0xc(%ebp)
8100461e:	ff 75 08             	push   0x8(%ebp)
81004621:	ff d0                	call   *%eax
81004623:	83 c4 10             	add    $0x10,%esp
81004626:	c9                   	leave  
81004627:	c3                   	ret    

81004628 <__ascii_wctomb>:
81004628:	55                   	push   %ebp
81004629:	89 e5                	mov    %esp,%ebp
8100462b:	83 ec 10             	sub    $0x10,%esp
8100462e:	8b 45 10             	mov    0x10(%ebp),%eax
81004631:	89 45 fc             	mov    %eax,-0x4(%ebp)
81004634:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81004638:	75 07                	jne    81004641 <__ascii_wctomb+0x19>
8100463a:	b8 00 00 00 00       	mov    $0x0,%eax
8100463f:	eb 28                	jmp    81004669 <__ascii_wctomb+0x41>
81004641:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
81004648:	76 10                	jbe    8100465a <__ascii_wctomb+0x32>
8100464a:	8b 45 08             	mov    0x8(%ebp),%eax
8100464d:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81004653:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004658:	eb 0f                	jmp    81004669 <__ascii_wctomb+0x41>
8100465a:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100465d:	89 c2                	mov    %eax,%edx
8100465f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004662:	88 10                	mov    %dl,(%eax)
81004664:	b8 01 00 00 00       	mov    $0x1,%eax
81004669:	c9                   	leave  
8100466a:	c3                   	ret    

8100466b <_fstat_r>:
8100466b:	55                   	push   %ebp
8100466c:	89 e5                	mov    %esp,%ebp
8100466e:	83 ec 18             	sub    $0x18,%esp
81004671:	c7 05 50 55 00 81 00 	movl   $0x0,0x81005550
81004678:	00 00 00 
8100467b:	83 ec 08             	sub    $0x8,%esp
8100467e:	ff 75 10             	push   0x10(%ebp)
81004681:	ff 75 0c             	push   0xc(%ebp)
81004684:	e8 2a bd ff ff       	call   810003b3 <fstat>
81004689:	83 c4 10             	add    $0x10,%esp
8100468c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100468f:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004693:	75 14                	jne    810046a9 <_fstat_r+0x3e>
81004695:	a1 50 55 00 81       	mov    0x81005550,%eax
8100469a:	85 c0                	test   %eax,%eax
8100469c:	74 0b                	je     810046a9 <_fstat_r+0x3e>
8100469e:	8b 15 50 55 00 81    	mov    0x81005550,%edx
810046a4:	8b 45 08             	mov    0x8(%ebp),%eax
810046a7:	89 10                	mov    %edx,(%eax)
810046a9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810046ac:	c9                   	leave  
810046ad:	c3                   	ret    

810046ae <_isatty_r>:
810046ae:	55                   	push   %ebp
810046af:	89 e5                	mov    %esp,%ebp
810046b1:	83 ec 18             	sub    $0x18,%esp
810046b4:	c7 05 50 55 00 81 00 	movl   $0x0,0x81005550
810046bb:	00 00 00 
810046be:	83 ec 0c             	sub    $0xc,%esp
810046c1:	ff 75 0c             	push   0xc(%ebp)
810046c4:	e8 c9 bc ff ff       	call   81000392 <isatty>
810046c9:	83 c4 10             	add    $0x10,%esp
810046cc:	89 45 f4             	mov    %eax,-0xc(%ebp)
810046cf:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810046d3:	75 14                	jne    810046e9 <_isatty_r+0x3b>
810046d5:	a1 50 55 00 81       	mov    0x81005550,%eax
810046da:	85 c0                	test   %eax,%eax
810046dc:	74 0b                	je     810046e9 <_isatty_r+0x3b>
810046de:	8b 15 50 55 00 81    	mov    0x81005550,%edx
810046e4:	8b 45 08             	mov    0x8(%ebp),%eax
810046e7:	89 10                	mov    %edx,(%eax)
810046e9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810046ec:	c9                   	leave  
810046ed:	c3                   	ret    
