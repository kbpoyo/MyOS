
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x810001d5

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x000055cc memsz 0x00005654 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000476e  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00000461  81004780  81004780  00005780  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009cc  81004c00  81004c00  00005c00  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000074  810055e0  810055e0  000065cc  2**5
                  ALLOC
  4 .debug_info   0001594b  00000000  00000000  000065cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00004ca2  00000000  00000000  0001bf17  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 00000530  00000000  00000000  00020bc0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   000031af  00000000  00000000  000210f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    00001121  00000000  00000000  0002429f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line_str 00000efb  00000000  00000000  000253c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003f  00000000  00000000  000262bb  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00000fe8  00000000  00000000  000262fc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000004e  00000000  00000000  000272e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81000606 l       .text	00000000 L5
8100063e l       .text	00000000 L15
81000610 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 findfp.c
81000649 l     F .text	000000ad std
810006f6 l     F .text	0000001b stdin_init
81000711 l     F .text	0000001b stdout_init
8100072c l     F .text	0000001b stderr_init
810055e0 l     O .bss	00000004 __sfp_recursive_mutex
810055e4 l     O .bss	00000004 __sinit_recursive_mutex
810009ef l     F .text	0000000a __fp_lock
810009f9 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
81004c00 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 mallocr.c
81000fbc l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
81001b0d l       .text	00000000 L20
81001ac4 l       .text	00000000 L5
81001b0a l       .text	00000000 L15
81001ad0 l       .text	00000000 L8
81001af1 l       .text	00000000 L9
81001b00 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 mlock.c
81005648 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81001d5d l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fputwc.c
810038f1 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 locale.c
81003fe2 l     F .text	0000000a __get_global_locale
81003fec l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
8100424e l     F .text	0000000a __get_global_locale
81004258 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
81004566 l     F .text	0000000a __get_global_locale
81004570 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
81004670 l     F .text	0000000a __get_global_locale
8100467a l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
8100472e g     F .text	00000040 _isatty_r
8100432a g     F .text	00000037 cleanup_glue
810004d3 g     F .text	000000d6 _puts_r
81004088 g     F .text	00000046 _lseek_r
8100031e g     F .text	0000001b yield
8100049e g     F .text	00000035 printf
8100457a g     F .text	00000077 _wcrtomb_r
81003193 g     F .text	0000004a __sseek
8100093e g     F .text	00000099 __sinit
81003202 g     F .text	00000112 __swbuf_r
81003ff6 g     F .text	0000005f _setlocale_r
81000747 g     F .text	0000006f __sfmoreglue
81001c7b g     F .text	00000006 __malloc_unlock
81001b60 g       .text	00000000 memmove
81000924 g     F .text	0000001a _cleanup
810046eb g     F .text	00000043 _fstat_r
81005650 g     O .bss	00000004 errno
8100312e g     F .text	0000000a __seofread
810002f1 g     F .text	0000002d execve
81000293 g     F .text	0000001b getpid
81001b18 g       .text	00000000 memcpy
81000903 g     F .text	00000021 _cleanup_r
810005a9 g     F .text	0000001c puts
81000471 g     F .text	0000002d _printf_r
81000408 g     F .text	00000021 isatty
81005600 g     O .bss	00000004 __malloc_top_pad
810055e0 g       .bss	00000000 __bss_start__
81000a4b g     F .text	0000049e __sfvwrite_r
810030aa g     F .text	00000040 _sbrk_r
810042e4 g     F .text	00000046 _read_r
81003516 g     F .text	00000107 _fclose_r
810038b8 g     F .text	00000039 fflush
81005604 g     O .bss	00000004 __malloc_max_sbrked_mem
810003db g     F .text	0000002d lseek
8100488c g     O .rodata	00000004 _global_impure_ptr
810027d0 g     F .text	000008da _realloc_r
81003a07 g     F .text	00000057 _fputwc_r
81000a03 g     F .text	00000024 __fp_lock_all
81004361 g     F .text	00000160 _reclaim_reent
8100038d g     F .text	0000002d write
81000429 g     F .text	00000027 fstat
8100021d g     F .text	0000004c sys_call
81001dc3 g     F .text	000000a8 __sfputs_r
810009d7 g     F .text	00000006 __sfp_lock_acquire
81001a80 g       .text	00000000 memchr
81005654 g       .bss	00000000 __bss_end__
81003aa6 g     F .text	000003db _free_r
81004960 g     O .rodata	00000180 _ctype_b
81004055 g     F .text	00000014 __locale_mb_cur_max
8100544c g     O .data	00000004 __malloc_sbrk_base
810001d5 g       .text	00000000 _start
81000360 g     F .text	0000002d read
81005620 g     O .bss	00000028 __malloc_current_mallinfo
81000471 g     F .text	0000002d _iprintf_r
810034d6 g     F .text	00000040 _close_r
810002d6 g     F .text	0000001b fork
8100337b g     F .text	0000015b __swsetup_r
810007b6 g     F .text	0000014d __sfp
81005040 g     O .data	00000408 __malloc_av_
810009e9 g     F .text	00000006 __sinit_lock_release
810030ea g     F .text	00000044 __sread
81001c75 g     F .text	00000006 __malloc_lock
81000450 g     F .text	00000021 sbrk
81003860 g     F .text	00000058 _fflush_r
810001e5 g     F .text	00000038 cstart
81001bed g       .text	00000000 memset
81000000 g     F .text	000001d5 main
81005608 g     O .bss	00000004 __malloc_max_total_mem
81003314 g     F .text	00000021 __swbuf
810031dd g     F .text	00000025 __sclose
8100361d g     F .text	0000001d fclose
8100124f g     F .text	00000822 _malloc_r
810046a8 g     F .text	00000043 __ascii_wctomb
81000ee9 g     F .text	00000068 _fwalk
81004262 g     F .text	0000002a _mbtowc_r
81003e81 g     F .text	00000161 _malloc_trim_r
810044c1 g     F .text	000000a5 strcmp
81001e6b g     F .text	00000025 vfiprintf
8100049e g     F .text	00000035 iprintf
8100564c g     O .bss	00000004 _PathLocale
81003335 g     F .text	00000046 _write_r
81004069 g     F .text	0000001f setlocale
810021e6 g     F .text	0000019b _printf_common
81005024 g     O .data	00000004 _impure_ptr
8100363a g     F .text	00000226 __sflush_r
8100428c g     F .text	00000058 __ascii_mbtowc
81000a27 g     F .text	00000024 __fp_unlock_all
810002ae g     F .text	00000028 print_msg
810041bb g     F .text	00000093 __swhatbuf_r
81003957 g     F .text	000000b0 __fputwc
81003138 g     F .text	0000005b __swrite
81005448 g     O .data	00000004 __malloc_trim_threshold
81001e90 g     F .text	00000356 _vfiprintf_r
81000f51 g     F .text	0000006b _fwalk_reent
810009dd g     F .text	00000006 __sfp_lock_release
81004ae0 g     O .rodata	00000101 _ctype_
810040ce g     F .text	000000ed __smakebuf_r
810005d0 g       .text	00000000 strlen
81002381 g     F .text	0000044f _printf_i
81000339 g     F .text	00000027 open
81001c81 g     F .text	000000dc __sprint_r
81004684 g     F .text	00000024 _wctomb_r
81001e90 g     F .text	00000356 _vfprintf_r
81000269 g     F .text	0000002a msleep
810045f1 g     F .text	0000007f wcrtomb
810003ba g     F .text	00000021 close
81005460 g     O .data	0000016c __global_locale
81001e6b g     F .text	00000025 vfprintf
81003a5e g     F .text	00000048 fputwc
810009e3 g     F .text	00000006 __sinit_lock_acquire



Disassembly of section .text:

81000000 <main>:
 */

#include "lib_syscall.h"
#include <stdio.h>

int main(int argc, char** argv) {
81000000:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000004:	83 e4 f0             	and    $0xfffffff0,%esp
81000007:	ff 71 fc             	push   -0x4(%ecx)
8100000a:	55                   	push   %ebp
8100000b:	89 e5                	mov    %esp,%ebp
8100000d:	53                   	push   %ebx
8100000e:	51                   	push   %ecx
8100000f:	83 ec 10             	sub    $0x10,%esp
81000012:	89 cb                	mov    %ecx,%ebx
    sbrk(0);
81000014:	83 ec 0c             	sub    $0xc,%esp
81000017:	6a 00                	push   $0x0
81000019:	e8 32 04 00 00       	call   81000450 <sbrk>
8100001e:	83 c4 10             	add    $0x10,%esp
    sbrk(100);
81000021:	83 ec 0c             	sub    $0xc,%esp
81000024:	6a 64                	push   $0x64
81000026:	e8 25 04 00 00       	call   81000450 <sbrk>
8100002b:	83 c4 10             	add    $0x10,%esp
    sbrk(200);
8100002e:	83 ec 0c             	sub    $0xc,%esp
81000031:	68 c8 00 00 00       	push   $0xc8
81000036:	e8 15 04 00 00       	call   81000450 <sbrk>
8100003b:	83 c4 10             	add    $0x10,%esp
    sbrk(4096*2 + 200);
8100003e:	83 ec 0c             	sub    $0xc,%esp
81000041:	68 c8 20 00 00       	push   $0x20c8
81000046:	e8 05 04 00 00       	call   81000450 <sbrk>
8100004b:	83 c4 10             	add    $0x10,%esp
    sbrk(4096*5 + 1234);
8100004e:	83 ec 0c             	sub    $0xc,%esp
81000051:	68 d2 54 00 00       	push   $0x54d2
81000056:	e8 f5 03 00 00       	call   81000450 <sbrk>
8100005b:	83 c4 10             	add    $0x10,%esp

    printf("\0337Hello,word!\0338123\n");  // ESC 7,8 输出123lo,word!
8100005e:	83 ec 0c             	sub    $0xc,%esp
81000061:	68 80 47 00 81       	push   $0x81004780
81000066:	e8 3e 05 00 00       	call   810005a9 <puts>
8100006b:	83 c4 10             	add    $0x10,%esp
    printf("\033[31;42mHello,word!\033[39;49m123\n");  // ESC [pn m, Hello,world红色，>其余绿色
8100006e:	83 ec 0c             	sub    $0xc,%esp
81000071:	68 94 47 00 81       	push   $0x81004794
81000076:	e8 2e 05 00 00       	call   810005a9 <puts>
8100007b:	83 c4 10             	add    $0x10,%esp
    printf("123\033[2DHello,word!\n");  // 光标左移2，1Hello,word!
8100007e:	83 ec 0c             	sub    $0xc,%esp
81000081:	68 b3 47 00 81       	push   $0x810047b3
81000086:	e8 1e 05 00 00       	call   810005a9 <puts>
8100008b:	83 c4 10             	add    $0x10,%esp
    printf("123\033[2CHello,word!\n");  // 光标右移2，123  Hello,word!
8100008e:	83 ec 0c             	sub    $0xc,%esp
81000091:	68 c6 47 00 81       	push   $0x810047c6
81000096:	e8 0e 05 00 00       	call   810005a9 <puts>
8100009b:	83 c4 10             	add    $0x10,%esp

    printf("\033[31m");  // ESC [pn m, Hello,world红色，其余绿色
8100009e:	83 ec 0c             	sub    $0xc,%esp
810000a1:	68 d9 47 00 81       	push   $0x810047d9
810000a6:	e8 f3 03 00 00       	call   8100049e <iprintf>
810000ab:	83 c4 10             	add    $0x10,%esp
    printf("\033[10;10H test!\n");  // 定位到10, 10，test!
810000ae:	83 ec 0c             	sub    $0xc,%esp
810000b1:	68 df 47 00 81       	push   $0x810047df
810000b6:	e8 ee 04 00 00       	call   810005a9 <puts>
810000bb:	83 c4 10             	add    $0x10,%esp
    printf("\033[20;20H test!\n");  // 定位到20, 20，test!
810000be:	83 ec 0c             	sub    $0xc,%esp
810000c1:	68 ee 47 00 81       	push   $0x810047ee
810000c6:	e8 de 04 00 00       	call   810005a9 <puts>
810000cb:	83 c4 10             	add    $0x10,%esp
    printf("\033[32;25;39m123\n");  // 
810000ce:	83 ec 0c             	sub    $0xc,%esp
810000d1:	68 fd 47 00 81       	push   $0x810047fd
810000d6:	e8 ce 04 00 00       	call   810005a9 <puts>
810000db:	83 c4 10             	add    $0x10,%esp

    printf("\033[2J");//清空屏幕
810000de:	83 ec 0c             	sub    $0xc,%esp
810000e1:	68 0c 48 00 81       	push   $0x8100480c
810000e6:	e8 b3 03 00 00       	call   8100049e <iprintf>
810000eb:	83 c4 10             	add    $0x10,%esp

    printf("hello from shell\n");
810000ee:	83 ec 0c             	sub    $0xc,%esp
810000f1:	68 11 48 00 81       	push   $0x81004811
810000f6:	e8 ae 04 00 00       	call   810005a9 <puts>
810000fb:	83 c4 10             	add    $0x10,%esp
    printf("os version: %s\n", "1.0.0");
810000fe:	83 ec 08             	sub    $0x8,%esp
81000101:	68 22 48 00 81       	push   $0x81004822
81000106:	68 28 48 00 81       	push   $0x81004828
8100010b:	e8 8e 03 00 00       	call   8100049e <iprintf>
81000110:	83 c4 10             	add    $0x10,%esp
    printf("%05d, %-5d, %d\n", 1, 2, 3);
81000113:	6a 03                	push   $0x3
81000115:	6a 02                	push   $0x2
81000117:	6a 01                	push   $0x1
81000119:	68 38 48 00 81       	push   $0x81004838
8100011e:	e8 7b 03 00 00       	call   8100049e <iprintf>
81000123:	83 c4 10             	add    $0x10,%esp

    printf("main pid %d", getpid());
81000126:	e8 68 01 00 00       	call   81000293 <getpid>
8100012b:	83 ec 08             	sub    $0x8,%esp
8100012e:	50                   	push   %eax
8100012f:	68 48 48 00 81       	push   $0x81004848
81000134:	e8 65 03 00 00       	call   8100049e <iprintf>
81000139:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < argc; ++i) {
8100013c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81000143:	eb 26                	jmp    8100016b <main+0x16b>
        printf("arg: %s\n", argv[i]);
81000145:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000148:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100014f:	8b 43 04             	mov    0x4(%ebx),%eax
81000152:	01 d0                	add    %edx,%eax
81000154:	8b 00                	mov    (%eax),%eax
81000156:	83 ec 08             	sub    $0x8,%esp
81000159:	50                   	push   %eax
8100015a:	68 54 48 00 81       	push   $0x81004854
8100015f:	e8 3a 03 00 00       	call   8100049e <iprintf>
81000164:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < argc; ++i) {
81000167:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8100016b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100016e:	3b 03                	cmp    (%ebx),%eax
81000170:	7c d3                	jl     81000145 <main+0x145>
    }

    int pid = fork();
81000172:	e8 5f 01 00 00       	call   810002d6 <fork>
81000177:	89 45 f0             	mov    %eax,-0x10(%ebp)
    yield();
8100017a:	e8 9f 01 00 00       	call   8100031e <yield>
    if (pid > 0) printf("parent pid=%d\n", pid);
8100017f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000183:	7e 15                	jle    8100019a <main+0x19a>
81000185:	83 ec 08             	sub    $0x8,%esp
81000188:	ff 75 f0             	push   -0x10(%ebp)
8100018b:	68 5d 48 00 81       	push   $0x8100485d
81000190:	e8 09 03 00 00       	call   8100049e <iprintf>
81000195:	83 c4 10             	add    $0x10,%esp
81000198:	eb 13                	jmp    810001ad <main+0x1ad>
    else printf("chiled pid=%d\n", pid);
8100019a:	83 ec 08             	sub    $0x8,%esp
8100019d:	ff 75 f0             	push   -0x10(%ebp)
810001a0:	68 6c 48 00 81       	push   $0x8100486c
810001a5:	e8 f4 02 00 00       	call   8100049e <iprintf>
810001aa:	83 c4 10             	add    $0x10,%esp

    for (;;) {
        printf("shell pid=%d\n", getpid());
810001ad:	e8 e1 00 00 00       	call   81000293 <getpid>
810001b2:	83 ec 08             	sub    $0x8,%esp
810001b5:	50                   	push   %eax
810001b6:	68 7b 48 00 81       	push   $0x8100487b
810001bb:	e8 de 02 00 00       	call   8100049e <iprintf>
810001c0:	83 c4 10             	add    $0x10,%esp
        msleep(1000);
810001c3:	83 ec 0c             	sub    $0xc,%esp
810001c6:	68 e8 03 00 00       	push   $0x3e8
810001cb:	e8 99 00 00 00       	call   81000269 <msleep>
810001d0:	83 c4 10             	add    $0x10,%esp
        printf("shell pid=%d\n", getpid());
810001d3:	eb d8                	jmp    810001ad <main+0x1ad>

810001d5 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
810001d5:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
810001d8:	8e d8                	mov    %eax,%ds
	mov %ax, %es
810001da:	8e c0                	mov    %eax,%es
	mov %ax, %fs
810001dc:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
810001de:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
810001e0:	e9 00 00 00 00       	jmp    810001e5 <cstart>

810001e5 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
810001e5:	55                   	push   %ebp
810001e6:	89 e5                	mov    %esp,%ebp
810001e8:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
810001eb:	c7 45 f4 e0 55 00 81 	movl   $0x810055e0,-0xc(%ebp)
    while (start < __bss_end__) {
810001f2:	eb 0c                	jmp    81000200 <cstart+0x1b>
        *(start++) = 0;
810001f4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810001f7:	8d 50 01             	lea    0x1(%eax),%edx
810001fa:	89 55 f4             	mov    %edx,-0xc(%ebp)
810001fd:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
81000200:	81 7d f4 54 56 00 81 	cmpl   $0x81005654,-0xc(%ebp)
81000207:	72 eb                	jb     810001f4 <cstart+0xf>
    }
    
    main(argc, argv);
81000209:	83 ec 08             	sub    $0x8,%esp
8100020c:	ff 75 0c             	push   0xc(%ebp)
8100020f:	ff 75 08             	push   0x8(%ebp)
81000212:	e8 e9 fd ff ff       	call   81000000 <main>
81000217:	83 c4 10             	add    $0x10,%esp
}
8100021a:	90                   	nop
8100021b:	c9                   	leave  
8100021c:	c3                   	ret    

8100021d <sys_call>:
#include    "cpu/syscall.h"
#include    "os_cfg.h"
#include    "lib_syscall.h"


int sys_call(syscall_args_t *args) {
8100021d:	55                   	push   %ebp
8100021e:	89 e5                	mov    %esp,%ebp
81000220:	57                   	push   %edi
81000221:	56                   	push   %esi
81000222:	53                   	push   %ebx
81000223:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
81000226:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8100022d:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
81000234:	8b 45 08             	mov    0x8(%ebp),%eax
81000237:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
8100023a:	8b 55 08             	mov    0x8(%ebp),%edx
8100023d:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
81000240:	8b 4d 08             	mov    0x8(%ebp),%ecx
81000243:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
81000246:	8b 5d 08             	mov    0x8(%ebp),%ebx
81000249:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
8100024c:	8b 75 08             	mov    0x8(%ebp),%esi
8100024f:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
81000251:	8d 7d e8             	lea    -0x18(%ebp),%edi
81000254:	50                   	push   %eax
81000255:	52                   	push   %edx
81000256:	51                   	push   %ecx
81000257:	53                   	push   %ebx
81000258:	56                   	push   %esi
81000259:	ff 1f                	lcall  *(%edi)
8100025b:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
8100025e:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
81000261:	83 c4 10             	add    $0x10,%esp
81000264:	5b                   	pop    %ebx
81000265:	5e                   	pop    %esi
81000266:	5f                   	pop    %edi
81000267:	5d                   	pop    %ebp
81000268:	c3                   	ret    

81000269 <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
81000269:	55                   	push   %ebp
8100026a:	89 e5                	mov    %esp,%ebp
8100026c:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
8100026f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000273:	7e 1b                	jle    81000290 <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
81000275:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
8100027c:	8b 45 08             	mov    0x8(%ebp),%eax
8100027f:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
81000282:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000285:	50                   	push   %eax
81000286:	e8 92 ff ff ff       	call   8100021d <sys_call>
8100028b:	83 c4 04             	add    $0x4,%esp
8100028e:	eb 01                	jmp    81000291 <msleep+0x28>
    if (ms <= 0) return;
81000290:	90                   	nop

}
81000291:	c9                   	leave  
81000292:	c3                   	ret    

81000293 <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
81000293:	55                   	push   %ebp
81000294:	89 e5                	mov    %esp,%ebp
81000296:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000299:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
810002a0:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002a3:	50                   	push   %eax
810002a4:	e8 74 ff ff ff       	call   8100021d <sys_call>
810002a9:	83 c4 04             	add    $0x4,%esp
}
810002ac:	c9                   	leave  
810002ad:	c3                   	ret    

810002ae <print_msg>:

void print_msg(const char *fmt, int arg) {
810002ae:	55                   	push   %ebp
810002af:	89 e5                	mov    %esp,%ebp
810002b1:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
810002b4:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
810002bb:	8b 45 08             	mov    0x8(%ebp),%eax
810002be:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
810002c1:	8b 45 0c             	mov    0xc(%ebp),%eax
810002c4:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
810002c7:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002ca:	50                   	push   %eax
810002cb:	e8 4d ff ff ff       	call   8100021d <sys_call>
810002d0:	83 c4 04             	add    $0x4,%esp
}
810002d3:	90                   	nop
810002d4:	c9                   	leave  
810002d5:	c3                   	ret    

810002d6 <fork>:

int fork (void) {
810002d6:	55                   	push   %ebp
810002d7:	89 e5                	mov    %esp,%ebp
810002d9:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
810002dc:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
810002e3:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002e6:	50                   	push   %eax
810002e7:	e8 31 ff ff ff       	call   8100021d <sys_call>
810002ec:	83 c4 04             	add    $0x4,%esp
}
810002ef:	c9                   	leave  
810002f0:	c3                   	ret    

810002f1 <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
810002f1:	55                   	push   %ebp
810002f2:	89 e5                	mov    %esp,%ebp
810002f4:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
810002f7:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
810002fe:	8b 45 08             	mov    0x8(%ebp),%eax
81000301:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
81000304:	8b 45 0c             	mov    0xc(%ebp),%eax
81000307:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
8100030a:	8b 45 10             	mov    0x10(%ebp),%eax
8100030d:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
81000310:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000313:	50                   	push   %eax
81000314:	e8 04 ff ff ff       	call   8100021d <sys_call>
81000319:	83 c4 04             	add    $0x4,%esp
}
8100031c:	c9                   	leave  
8100031d:	c3                   	ret    

8100031e <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
8100031e:	55                   	push   %ebp
8100031f:	89 e5                	mov    %esp,%ebp
81000321:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
81000324:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
8100032b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100032e:	50                   	push   %eax
8100032f:	e8 e9 fe ff ff       	call   8100021d <sys_call>
81000334:	83 c4 04             	add    $0x4,%esp
}
81000337:	c9                   	leave  
81000338:	c3                   	ret    

81000339 <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
81000339:	55                   	push   %ebp
8100033a:	89 e5                	mov    %esp,%ebp
8100033c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
8100033f:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
81000346:	8b 45 08             	mov    0x8(%ebp),%eax
81000349:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
8100034c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100034f:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000352:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000355:	50                   	push   %eax
81000356:	e8 c2 fe ff ff       	call   8100021d <sys_call>
8100035b:	83 c4 04             	add    $0x4,%esp
}
8100035e:	c9                   	leave  
8100035f:	c3                   	ret    

81000360 <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
81000360:	55                   	push   %ebp
81000361:	89 e5                	mov    %esp,%ebp
81000363:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
81000366:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
8100036d:	8b 45 08             	mov    0x8(%ebp),%eax
81000370:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000373:	8b 45 0c             	mov    0xc(%ebp),%eax
81000376:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000379:	8b 45 10             	mov    0x10(%ebp),%eax
8100037c:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8100037f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000382:	50                   	push   %eax
81000383:	e8 95 fe ff ff       	call   8100021d <sys_call>
81000388:	83 c4 04             	add    $0x4,%esp
}
8100038b:	c9                   	leave  
8100038c:	c3                   	ret    

8100038d <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
8100038d:	55                   	push   %ebp
8100038e:	89 e5                	mov    %esp,%ebp
81000390:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
81000393:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
8100039a:	8b 45 08             	mov    0x8(%ebp),%eax
8100039d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
810003a0:	8b 45 0c             	mov    0xc(%ebp),%eax
810003a3:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
810003a6:	8b 45 10             	mov    0x10(%ebp),%eax
810003a9:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
810003ac:	8d 45 ec             	lea    -0x14(%ebp),%eax
810003af:	50                   	push   %eax
810003b0:	e8 68 fe ff ff       	call   8100021d <sys_call>
810003b5:	83 c4 04             	add    $0x4,%esp
}
810003b8:	c9                   	leave  
810003b9:	c3                   	ret    

810003ba <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
810003ba:	55                   	push   %ebp
810003bb:	89 e5                	mov    %esp,%ebp
810003bd:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
810003c0:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
810003c7:	8b 45 08             	mov    0x8(%ebp),%eax
810003ca:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
810003cd:	8d 45 ec             	lea    -0x14(%ebp),%eax
810003d0:	50                   	push   %eax
810003d1:	e8 47 fe ff ff       	call   8100021d <sys_call>
810003d6:	83 c4 04             	add    $0x4,%esp
}
810003d9:	c9                   	leave  
810003da:	c3                   	ret    

810003db <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
810003db:	55                   	push   %ebp
810003dc:	89 e5                	mov    %esp,%ebp
810003de:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
810003e1:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
810003e8:	8b 45 08             	mov    0x8(%ebp),%eax
810003eb:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
810003ee:	8b 45 0c             	mov    0xc(%ebp),%eax
810003f1:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
810003f4:	8b 45 10             	mov    0x10(%ebp),%eax
810003f7:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
810003fa:	8d 45 ec             	lea    -0x14(%ebp),%eax
810003fd:	50                   	push   %eax
810003fe:	e8 1a fe ff ff       	call   8100021d <sys_call>
81000403:	83 c4 04             	add    $0x4,%esp
}
81000406:	c9                   	leave  
81000407:	c3                   	ret    

81000408 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
81000408:	55                   	push   %ebp
81000409:	89 e5                	mov    %esp,%ebp
8100040b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
8100040e:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
81000415:	8b 45 08             	mov    0x8(%ebp),%eax
81000418:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8100041b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100041e:	50                   	push   %eax
8100041f:	e8 f9 fd ff ff       	call   8100021d <sys_call>
81000424:	83 c4 04             	add    $0x4,%esp
}
81000427:	c9                   	leave  
81000428:	c3                   	ret    

81000429 <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
81000429:	55                   	push   %ebp
8100042a:	89 e5                	mov    %esp,%ebp
8100042c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
8100042f:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
81000436:	8b 45 08             	mov    0x8(%ebp),%eax
81000439:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
8100043c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100043f:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000442:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000445:	50                   	push   %eax
81000446:	e8 d2 fd ff ff       	call   8100021d <sys_call>
8100044b:	83 c4 04             	add    $0x4,%esp
}
8100044e:	c9                   	leave  
8100044f:	c3                   	ret    

81000450 <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
81000450:	55                   	push   %ebp
81000451:	89 e5                	mov    %esp,%ebp
81000453:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
81000456:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)incr;
8100045d:	8b 45 08             	mov    0x8(%ebp),%eax
81000460:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
81000463:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000466:	50                   	push   %eax
81000467:	e8 b1 fd ff ff       	call   8100021d <sys_call>
8100046c:	83 c4 04             	add    $0x4,%esp
8100046f:	c9                   	leave  
81000470:	c3                   	ret    

81000471 <_iprintf_r>:
81000471:	55                   	push   %ebp
81000472:	89 e5                	mov    %esp,%ebp
81000474:	83 ec 18             	sub    $0x18,%esp
81000477:	8d 45 10             	lea    0x10(%ebp),%eax
8100047a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100047d:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000480:	8b 45 08             	mov    0x8(%ebp),%eax
81000483:	8b 40 08             	mov    0x8(%eax),%eax
81000486:	52                   	push   %edx
81000487:	ff 75 0c             	push   0xc(%ebp)
8100048a:	50                   	push   %eax
8100048b:	ff 75 08             	push   0x8(%ebp)
8100048e:	e8 fd 19 00 00       	call   81001e90 <_vfiprintf_r>
81000493:	83 c4 10             	add    $0x10,%esp
81000496:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000499:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100049c:	c9                   	leave  
8100049d:	c3                   	ret    

8100049e <iprintf>:
8100049e:	55                   	push   %ebp
8100049f:	89 e5                	mov    %esp,%ebp
810004a1:	83 ec 18             	sub    $0x18,%esp
810004a4:	a1 24 50 00 81       	mov    0x81005024,%eax
810004a9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810004ac:	8d 45 0c             	lea    0xc(%ebp),%eax
810004af:	89 45 ec             	mov    %eax,-0x14(%ebp)
810004b2:	8b 55 ec             	mov    -0x14(%ebp),%edx
810004b5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810004b8:	8b 40 08             	mov    0x8(%eax),%eax
810004bb:	52                   	push   %edx
810004bc:	ff 75 08             	push   0x8(%ebp)
810004bf:	50                   	push   %eax
810004c0:	ff 75 f4             	push   -0xc(%ebp)
810004c3:	e8 c8 19 00 00       	call   81001e90 <_vfiprintf_r>
810004c8:	83 c4 10             	add    $0x10,%esp
810004cb:	89 45 f0             	mov    %eax,-0x10(%ebp)
810004ce:	8b 45 f0             	mov    -0x10(%ebp),%eax
810004d1:	c9                   	leave  
810004d2:	c3                   	ret    

810004d3 <_puts_r>:
810004d3:	55                   	push   %ebp
810004d4:	89 e5                	mov    %esp,%ebp
810004d6:	83 ec 38             	sub    $0x38,%esp
810004d9:	83 ec 0c             	sub    $0xc,%esp
810004dc:	ff 75 0c             	push   0xc(%ebp)
810004df:	e8 ec 00 00 00       	call   810005d0 <strlen>
810004e4:	83 c4 10             	add    $0x10,%esp
810004e7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810004ea:	8b 45 0c             	mov    0xc(%ebp),%eax
810004ed:	89 45 cc             	mov    %eax,-0x34(%ebp)
810004f0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810004f3:	89 45 d0             	mov    %eax,-0x30(%ebp)
810004f6:	c7 45 d4 89 48 00 81 	movl   $0x81004889,-0x2c(%ebp)
810004fd:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81000504:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000507:	83 c0 01             	add    $0x1,%eax
8100050a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100050d:	8d 45 cc             	lea    -0x34(%ebp),%eax
81000510:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000513:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
8100051a:	8b 45 08             	mov    0x8(%ebp),%eax
8100051d:	8b 40 08             	mov    0x8(%eax),%eax
81000520:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000523:	8b 45 08             	mov    0x8(%ebp),%eax
81000526:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000529:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100052d:	74 18                	je     81000547 <_puts_r+0x74>
8100052f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000532:	8b 40 38             	mov    0x38(%eax),%eax
81000535:	85 c0                	test   %eax,%eax
81000537:	75 0e                	jne    81000547 <_puts_r+0x74>
81000539:	83 ec 0c             	sub    $0xc,%esp
8100053c:	ff 75 ec             	push   -0x14(%ebp)
8100053f:	e8 fa 03 00 00       	call   8100093e <__sinit>
81000544:	83 c4 10             	add    $0x10,%esp
81000547:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100054a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100054e:	98                   	cwtl   
8100054f:	25 00 20 00 00       	and    $0x2000,%eax
81000554:	85 c0                	test   %eax,%eax
81000556:	75 24                	jne    8100057c <_puts_r+0xa9>
81000558:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100055b:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100055f:	80 cc 20             	or     $0x20,%ah
81000562:	89 c2                	mov    %eax,%edx
81000564:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000567:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100056b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100056e:	8b 40 64             	mov    0x64(%eax),%eax
81000571:	80 e4 df             	and    $0xdf,%ah
81000574:	89 c2                	mov    %eax,%edx
81000576:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000579:	89 50 64             	mov    %edx,0x64(%eax)
8100057c:	83 ec 04             	sub    $0x4,%esp
8100057f:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000582:	50                   	push   %eax
81000583:	ff 75 f0             	push   -0x10(%ebp)
81000586:	ff 75 08             	push   0x8(%ebp)
81000589:	e8 bd 04 00 00       	call   81000a4b <__sfvwrite_r>
8100058e:	83 c4 10             	add    $0x10,%esp
81000591:	85 c0                	test   %eax,%eax
81000593:	74 07                	je     8100059c <_puts_r+0xc9>
81000595:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100059a:	eb 05                	jmp    810005a1 <_puts_r+0xce>
8100059c:	b8 0a 00 00 00       	mov    $0xa,%eax
810005a1:	89 45 e8             	mov    %eax,-0x18(%ebp)
810005a4:	8b 45 e8             	mov    -0x18(%ebp),%eax
810005a7:	c9                   	leave  
810005a8:	c3                   	ret    

810005a9 <puts>:
810005a9:	55                   	push   %ebp
810005aa:	89 e5                	mov    %esp,%ebp
810005ac:	83 ec 08             	sub    $0x8,%esp
810005af:	a1 24 50 00 81       	mov    0x81005024,%eax
810005b4:	83 ec 08             	sub    $0x8,%esp
810005b7:	ff 75 08             	push   0x8(%ebp)
810005ba:	50                   	push   %eax
810005bb:	e8 13 ff ff ff       	call   810004d3 <_puts_r>
810005c0:	83 c4 10             	add    $0x10,%esp
810005c3:	c9                   	leave  
810005c4:	c3                   	ret    
810005c5:	66 90                	xchg   %ax,%ax
810005c7:	66 90                	xchg   %ax,%ax
810005c9:	66 90                	xchg   %ax,%ax
810005cb:	66 90                	xchg   %ax,%ax
810005cd:	66 90                	xchg   %ax,%ax
810005cf:	90                   	nop

810005d0 <strlen>:
810005d0:	55                   	push   %ebp
810005d1:	89 e5                	mov    %esp,%ebp
810005d3:	57                   	push   %edi
810005d4:	8b 55 08             	mov    0x8(%ebp),%edx
810005d7:	89 d7                	mov    %edx,%edi
810005d9:	f7 c7 03 00 00 00    	test   $0x3,%edi
810005df:	74 25                	je     81000606 <L5>
810005e1:	8a 0f                	mov    (%edi),%cl
810005e3:	47                   	inc    %edi
810005e4:	84 c9                	test   %cl,%cl
810005e6:	74 56                	je     8100063e <L15>
810005e8:	f7 c7 03 00 00 00    	test   $0x3,%edi
810005ee:	74 16                	je     81000606 <L5>
810005f0:	8a 0f                	mov    (%edi),%cl
810005f2:	47                   	inc    %edi
810005f3:	84 c9                	test   %cl,%cl
810005f5:	74 47                	je     8100063e <L15>
810005f7:	f7 c7 03 00 00 00    	test   $0x3,%edi
810005fd:	74 07                	je     81000606 <L5>
810005ff:	8a 0f                	mov    (%edi),%cl
81000601:	47                   	inc    %edi
81000602:	84 c9                	test   %cl,%cl
81000604:	74 38                	je     8100063e <L15>

81000606 <L5>:
81000606:	83 ef 04             	sub    $0x4,%edi
81000609:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81000610 <L10>:
81000610:	83 c7 04             	add    $0x4,%edi
81000613:	8b 0f                	mov    (%edi),%ecx
81000615:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
8100061b:	f7 d1                	not    %ecx
8100061d:	21 c8                	and    %ecx,%eax
8100061f:	a9 80 80 80 80       	test   $0x80808080,%eax
81000624:	74 ea                	je     81000610 <L10>
81000626:	f7 d1                	not    %ecx
81000628:	47                   	inc    %edi
81000629:	84 c9                	test   %cl,%cl
8100062b:	74 11                	je     8100063e <L15>
8100062d:	47                   	inc    %edi
8100062e:	c1 e9 08             	shr    $0x8,%ecx
81000631:	84 c9                	test   %cl,%cl
81000633:	74 09                	je     8100063e <L15>
81000635:	47                   	inc    %edi
81000636:	c1 e9 08             	shr    $0x8,%ecx
81000639:	84 c9                	test   %cl,%cl
8100063b:	74 01                	je     8100063e <L15>
8100063d:	47                   	inc    %edi

8100063e <L15>:
8100063e:	29 d7                	sub    %edx,%edi
81000640:	8d 47 ff             	lea    -0x1(%edi),%eax
81000643:	8d 65 fc             	lea    -0x4(%ebp),%esp
81000646:	5f                   	pop    %edi
81000647:	c9                   	leave  
81000648:	c3                   	ret    

81000649 <std>:
81000649:	55                   	push   %ebp
8100064a:	89 e5                	mov    %esp,%ebp
8100064c:	83 ec 08             	sub    $0x8,%esp
8100064f:	8b 45 08             	mov    0x8(%ebp),%eax
81000652:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000658:	8b 45 08             	mov    0x8(%ebp),%eax
8100065b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000662:	8b 45 08             	mov    0x8(%ebp),%eax
81000665:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
8100066c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100066f:	89 c2                	mov    %eax,%edx
81000671:	8b 45 08             	mov    0x8(%ebp),%eax
81000674:	66 89 50 0c          	mov    %dx,0xc(%eax)
81000678:	8b 45 08             	mov    0x8(%ebp),%eax
8100067b:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000682:	8b 45 10             	mov    0x10(%ebp),%eax
81000685:	89 c2                	mov    %eax,%edx
81000687:	8b 45 08             	mov    0x8(%ebp),%eax
8100068a:	66 89 50 0e          	mov    %dx,0xe(%eax)
8100068e:	8b 45 08             	mov    0x8(%ebp),%eax
81000691:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000698:	8b 45 08             	mov    0x8(%ebp),%eax
8100069b:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810006a2:	8b 45 08             	mov    0x8(%ebp),%eax
810006a5:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810006ac:	8b 45 08             	mov    0x8(%ebp),%eax
810006af:	83 c0 5c             	add    $0x5c,%eax
810006b2:	83 ec 04             	sub    $0x4,%esp
810006b5:	6a 08                	push   $0x8
810006b7:	6a 00                	push   $0x0
810006b9:	50                   	push   %eax
810006ba:	e8 2e 15 00 00       	call   81001bed <memset>
810006bf:	83 c4 10             	add    $0x10,%esp
810006c2:	8b 45 08             	mov    0x8(%ebp),%eax
810006c5:	8b 55 08             	mov    0x8(%ebp),%edx
810006c8:	89 50 1c             	mov    %edx,0x1c(%eax)
810006cb:	8b 45 08             	mov    0x8(%ebp),%eax
810006ce:	c7 40 20 ea 30 00 81 	movl   $0x810030ea,0x20(%eax)
810006d5:	8b 45 08             	mov    0x8(%ebp),%eax
810006d8:	c7 40 24 38 31 00 81 	movl   $0x81003138,0x24(%eax)
810006df:	8b 45 08             	mov    0x8(%ebp),%eax
810006e2:	c7 40 28 93 31 00 81 	movl   $0x81003193,0x28(%eax)
810006e9:	8b 45 08             	mov    0x8(%ebp),%eax
810006ec:	c7 40 2c dd 31 00 81 	movl   $0x810031dd,0x2c(%eax)
810006f3:	90                   	nop
810006f4:	c9                   	leave  
810006f5:	c3                   	ret    

810006f6 <stdin_init>:
810006f6:	55                   	push   %ebp
810006f7:	89 e5                	mov    %esp,%ebp
810006f9:	83 ec 08             	sub    $0x8,%esp
810006fc:	83 ec 04             	sub    $0x4,%esp
810006ff:	6a 00                	push   $0x0
81000701:	6a 04                	push   $0x4
81000703:	ff 75 08             	push   0x8(%ebp)
81000706:	e8 3e ff ff ff       	call   81000649 <std>
8100070b:	83 c4 10             	add    $0x10,%esp
8100070e:	90                   	nop
8100070f:	c9                   	leave  
81000710:	c3                   	ret    

81000711 <stdout_init>:
81000711:	55                   	push   %ebp
81000712:	89 e5                	mov    %esp,%ebp
81000714:	83 ec 08             	sub    $0x8,%esp
81000717:	83 ec 04             	sub    $0x4,%esp
8100071a:	6a 01                	push   $0x1
8100071c:	6a 09                	push   $0x9
8100071e:	ff 75 08             	push   0x8(%ebp)
81000721:	e8 23 ff ff ff       	call   81000649 <std>
81000726:	83 c4 10             	add    $0x10,%esp
81000729:	90                   	nop
8100072a:	c9                   	leave  
8100072b:	c3                   	ret    

8100072c <stderr_init>:
8100072c:	55                   	push   %ebp
8100072d:	89 e5                	mov    %esp,%ebp
8100072f:	83 ec 08             	sub    $0x8,%esp
81000732:	83 ec 04             	sub    $0x4,%esp
81000735:	6a 02                	push   $0x2
81000737:	6a 12                	push   $0x12
81000739:	ff 75 08             	push   0x8(%ebp)
8100073c:	e8 08 ff ff ff       	call   81000649 <std>
81000741:	83 c4 10             	add    $0x10,%esp
81000744:	90                   	nop
81000745:	c9                   	leave  
81000746:	c3                   	ret    

81000747 <__sfmoreglue>:
81000747:	55                   	push   %ebp
81000748:	89 e5                	mov    %esp,%ebp
8100074a:	53                   	push   %ebx
8100074b:	83 ec 14             	sub    $0x14,%esp
8100074e:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000751:	8d 43 ff             	lea    -0x1(%ebx),%eax
81000754:	6b c0 68             	imul   $0x68,%eax,%eax
81000757:	83 c0 74             	add    $0x74,%eax
8100075a:	83 ec 08             	sub    $0x8,%esp
8100075d:	50                   	push   %eax
8100075e:	ff 75 08             	push   0x8(%ebp)
81000761:	e8 e9 0a 00 00       	call   8100124f <_malloc_r>
81000766:	83 c4 10             	add    $0x10,%esp
81000769:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100076c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000770:	75 07                	jne    81000779 <__sfmoreglue+0x32>
81000772:	b8 00 00 00 00       	mov    $0x0,%eax
81000777:	eb 38                	jmp    810007b1 <__sfmoreglue+0x6a>
81000779:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100077c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000782:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000785:	89 58 04             	mov    %ebx,0x4(%eax)
81000788:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100078b:	8d 50 0c             	lea    0xc(%eax),%edx
8100078e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000791:	89 50 08             	mov    %edx,0x8(%eax)
81000794:	89 d8                	mov    %ebx,%eax
81000796:	6b c0 68             	imul   $0x68,%eax,%eax
81000799:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100079c:	83 c2 0c             	add    $0xc,%edx
8100079f:	83 ec 04             	sub    $0x4,%esp
810007a2:	50                   	push   %eax
810007a3:	6a 00                	push   $0x0
810007a5:	52                   	push   %edx
810007a6:	e8 42 14 00 00       	call   81001bed <memset>
810007ab:	83 c4 10             	add    $0x10,%esp
810007ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007b1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810007b4:	c9                   	leave  
810007b5:	c3                   	ret    

810007b6 <__sfp>:
810007b6:	55                   	push   %ebp
810007b7:	89 e5                	mov    %esp,%ebp
810007b9:	83 ec 18             	sub    $0x18,%esp
810007bc:	e8 16 02 00 00       	call   810009d7 <__sfp_lock_acquire>
810007c1:	a1 8c 48 00 81       	mov    0x8100488c,%eax
810007c6:	8b 40 38             	mov    0x38(%eax),%eax
810007c9:	85 c0                	test   %eax,%eax
810007cb:	75 11                	jne    810007de <__sfp+0x28>
810007cd:	a1 8c 48 00 81       	mov    0x8100488c,%eax
810007d2:	83 ec 0c             	sub    $0xc,%esp
810007d5:	50                   	push   %eax
810007d6:	e8 63 01 00 00       	call   8100093e <__sinit>
810007db:	83 c4 10             	add    $0x10,%esp
810007de:	a1 8c 48 00 81       	mov    0x8100488c,%eax
810007e3:	05 e0 02 00 00       	add    $0x2e0,%eax
810007e8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810007eb:	8b 45 ec             	mov    -0x14(%ebp),%eax
810007ee:	8b 40 08             	mov    0x8(%eax),%eax
810007f1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810007f4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810007f7:	8b 40 04             	mov    0x4(%eax),%eax
810007fa:	89 45 f0             	mov    %eax,-0x10(%ebp)
810007fd:	eb 10                	jmp    8100080f <__sfp+0x59>
810007ff:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000802:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000806:	66 85 c0             	test   %ax,%ax
81000809:	74 58                	je     81000863 <__sfp+0xad>
8100080b:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
8100080f:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81000813:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000817:	79 e6                	jns    810007ff <__sfp+0x49>
81000819:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100081c:	8b 00                	mov    (%eax),%eax
8100081e:	85 c0                	test   %eax,%eax
81000820:	75 1e                	jne    81000840 <__sfp+0x8a>
81000822:	83 ec 08             	sub    $0x8,%esp
81000825:	6a 04                	push   $0x4
81000827:	ff 75 08             	push   0x8(%ebp)
8100082a:	e8 18 ff ff ff       	call   81000747 <__sfmoreglue>
8100082f:	83 c4 10             	add    $0x10,%esp
81000832:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000835:	89 02                	mov    %eax,(%edx)
81000837:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100083a:	8b 00                	mov    (%eax),%eax
8100083c:	85 c0                	test   %eax,%eax
8100083e:	74 0a                	je     8100084a <__sfp+0x94>
81000840:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000843:	8b 00                	mov    (%eax),%eax
81000845:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000848:	eb a1                	jmp    810007eb <__sfp+0x35>
8100084a:	90                   	nop
8100084b:	e8 8d 01 00 00       	call   810009dd <__sfp_lock_release>
81000850:	8b 45 08             	mov    0x8(%ebp),%eax
81000853:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000859:	b8 00 00 00 00       	mov    $0x0,%eax
8100085e:	e9 9e 00 00 00       	jmp    81000901 <__sfp+0x14b>
81000863:	90                   	nop
81000864:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000867:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
8100086d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000870:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
81000876:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000879:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000880:	e8 58 01 00 00       	call   810009dd <__sfp_lock_release>
81000885:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000888:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100088e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000891:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000898:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100089b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810008a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008a5:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
810008ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008af:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810008b6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008b9:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810008c0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008c3:	83 c0 5c             	add    $0x5c,%eax
810008c6:	83 ec 04             	sub    $0x4,%esp
810008c9:	6a 08                	push   $0x8
810008cb:	6a 00                	push   $0x0
810008cd:	50                   	push   %eax
810008ce:	e8 1a 13 00 00       	call   81001bed <memset>
810008d3:	83 c4 10             	add    $0x10,%esp
810008d6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008d9:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
810008e0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008e3:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
810008ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008ed:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
810008f4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008f7:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
810008fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000901:	c9                   	leave  
81000902:	c3                   	ret    

81000903 <_cleanup_r>:
81000903:	55                   	push   %ebp
81000904:	89 e5                	mov    %esp,%ebp
81000906:	83 ec 18             	sub    $0x18,%esp
81000909:	c7 45 f4 16 35 00 81 	movl   $0x81003516,-0xc(%ebp)
81000910:	83 ec 08             	sub    $0x8,%esp
81000913:	ff 75 f4             	push   -0xc(%ebp)
81000916:	ff 75 08             	push   0x8(%ebp)
81000919:	e8 33 06 00 00       	call   81000f51 <_fwalk_reent>
8100091e:	83 c4 10             	add    $0x10,%esp
81000921:	90                   	nop
81000922:	c9                   	leave  
81000923:	c3                   	ret    

81000924 <_cleanup>:
81000924:	55                   	push   %ebp
81000925:	89 e5                	mov    %esp,%ebp
81000927:	83 ec 08             	sub    $0x8,%esp
8100092a:	a1 8c 48 00 81       	mov    0x8100488c,%eax
8100092f:	83 ec 0c             	sub    $0xc,%esp
81000932:	50                   	push   %eax
81000933:	e8 cb ff ff ff       	call   81000903 <_cleanup_r>
81000938:	83 c4 10             	add    $0x10,%esp
8100093b:	90                   	nop
8100093c:	c9                   	leave  
8100093d:	c3                   	ret    

8100093e <__sinit>:
8100093e:	55                   	push   %ebp
8100093f:	89 e5                	mov    %esp,%ebp
81000941:	83 ec 08             	sub    $0x8,%esp
81000944:	e8 9a 00 00 00       	call   810009e3 <__sinit_lock_acquire>
81000949:	8b 45 08             	mov    0x8(%ebp),%eax
8100094c:	8b 40 38             	mov    0x38(%eax),%eax
8100094f:	85 c0                	test   %eax,%eax
81000951:	74 07                	je     8100095a <__sinit+0x1c>
81000953:	e8 91 00 00 00       	call   810009e9 <__sinit_lock_release>
81000958:	eb 7b                	jmp    810009d5 <__sinit+0x97>
8100095a:	8b 45 08             	mov    0x8(%ebp),%eax
8100095d:	c7 40 3c 03 09 00 81 	movl   $0x81000903,0x3c(%eax)
81000964:	8b 45 08             	mov    0x8(%ebp),%eax
81000967:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
8100096e:	00 00 00 
81000971:	8b 45 08             	mov    0x8(%ebp),%eax
81000974:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
8100097b:	00 00 00 
8100097e:	8b 45 08             	mov    0x8(%ebp),%eax
81000981:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
81000987:	8b 45 08             	mov    0x8(%ebp),%eax
8100098a:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81000990:	8b 45 08             	mov    0x8(%ebp),%eax
81000993:	8b 40 04             	mov    0x4(%eax),%eax
81000996:	83 ec 0c             	sub    $0xc,%esp
81000999:	50                   	push   %eax
8100099a:	e8 57 fd ff ff       	call   810006f6 <stdin_init>
8100099f:	83 c4 10             	add    $0x10,%esp
810009a2:	8b 45 08             	mov    0x8(%ebp),%eax
810009a5:	8b 40 08             	mov    0x8(%eax),%eax
810009a8:	83 ec 0c             	sub    $0xc,%esp
810009ab:	50                   	push   %eax
810009ac:	e8 60 fd ff ff       	call   81000711 <stdout_init>
810009b1:	83 c4 10             	add    $0x10,%esp
810009b4:	8b 45 08             	mov    0x8(%ebp),%eax
810009b7:	8b 40 0c             	mov    0xc(%eax),%eax
810009ba:	83 ec 0c             	sub    $0xc,%esp
810009bd:	50                   	push   %eax
810009be:	e8 69 fd ff ff       	call   8100072c <stderr_init>
810009c3:	83 c4 10             	add    $0x10,%esp
810009c6:	8b 45 08             	mov    0x8(%ebp),%eax
810009c9:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
810009d0:	e8 14 00 00 00       	call   810009e9 <__sinit_lock_release>
810009d5:	c9                   	leave  
810009d6:	c3                   	ret    

810009d7 <__sfp_lock_acquire>:
810009d7:	55                   	push   %ebp
810009d8:	89 e5                	mov    %esp,%ebp
810009da:	90                   	nop
810009db:	5d                   	pop    %ebp
810009dc:	c3                   	ret    

810009dd <__sfp_lock_release>:
810009dd:	55                   	push   %ebp
810009de:	89 e5                	mov    %esp,%ebp
810009e0:	90                   	nop
810009e1:	5d                   	pop    %ebp
810009e2:	c3                   	ret    

810009e3 <__sinit_lock_acquire>:
810009e3:	55                   	push   %ebp
810009e4:	89 e5                	mov    %esp,%ebp
810009e6:	90                   	nop
810009e7:	5d                   	pop    %ebp
810009e8:	c3                   	ret    

810009e9 <__sinit_lock_release>:
810009e9:	55                   	push   %ebp
810009ea:	89 e5                	mov    %esp,%ebp
810009ec:	90                   	nop
810009ed:	5d                   	pop    %ebp
810009ee:	c3                   	ret    

810009ef <__fp_lock>:
810009ef:	55                   	push   %ebp
810009f0:	89 e5                	mov    %esp,%ebp
810009f2:	b8 00 00 00 00       	mov    $0x0,%eax
810009f7:	5d                   	pop    %ebp
810009f8:	c3                   	ret    

810009f9 <__fp_unlock>:
810009f9:	55                   	push   %ebp
810009fa:	89 e5                	mov    %esp,%ebp
810009fc:	b8 00 00 00 00       	mov    $0x0,%eax
81000a01:	5d                   	pop    %ebp
81000a02:	c3                   	ret    

81000a03 <__fp_lock_all>:
81000a03:	55                   	push   %ebp
81000a04:	89 e5                	mov    %esp,%ebp
81000a06:	83 ec 08             	sub    $0x8,%esp
81000a09:	e8 c9 ff ff ff       	call   810009d7 <__sfp_lock_acquire>
81000a0e:	a1 24 50 00 81       	mov    0x81005024,%eax
81000a13:	83 ec 08             	sub    $0x8,%esp
81000a16:	68 ef 09 00 81       	push   $0x810009ef
81000a1b:	50                   	push   %eax
81000a1c:	e8 c8 04 00 00       	call   81000ee9 <_fwalk>
81000a21:	83 c4 10             	add    $0x10,%esp
81000a24:	90                   	nop
81000a25:	c9                   	leave  
81000a26:	c3                   	ret    

81000a27 <__fp_unlock_all>:
81000a27:	55                   	push   %ebp
81000a28:	89 e5                	mov    %esp,%ebp
81000a2a:	83 ec 08             	sub    $0x8,%esp
81000a2d:	a1 24 50 00 81       	mov    0x81005024,%eax
81000a32:	83 ec 08             	sub    $0x8,%esp
81000a35:	68 f9 09 00 81       	push   $0x810009f9
81000a3a:	50                   	push   %eax
81000a3b:	e8 a9 04 00 00       	call   81000ee9 <_fwalk>
81000a40:	83 c4 10             	add    $0x10,%esp
81000a43:	e8 95 ff ff ff       	call   810009dd <__sfp_lock_release>
81000a48:	90                   	nop
81000a49:	c9                   	leave  
81000a4a:	c3                   	ret    

81000a4b <__sfvwrite_r>:
81000a4b:	55                   	push   %ebp
81000a4c:	89 e5                	mov    %esp,%ebp
81000a4e:	57                   	push   %edi
81000a4f:	56                   	push   %esi
81000a50:	53                   	push   %ebx
81000a51:	83 ec 3c             	sub    $0x3c,%esp
81000a54:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000a57:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
81000a5e:	8b 45 10             	mov    0x10(%ebp),%eax
81000a61:	8b 78 08             	mov    0x8(%eax),%edi
81000a64:	85 ff                	test   %edi,%edi
81000a66:	75 0a                	jne    81000a72 <__sfvwrite_r+0x27>
81000a68:	b8 00 00 00 00       	mov    $0x0,%eax
81000a6d:	e9 6f 04 00 00       	jmp    81000ee1 <__sfvwrite_r+0x496>
81000a72:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a76:	98                   	cwtl   
81000a77:	83 e0 08             	and    $0x8,%eax
81000a7a:	85 c0                	test   %eax,%eax
81000a7c:	74 07                	je     81000a85 <__sfvwrite_r+0x3a>
81000a7e:	8b 43 10             	mov    0x10(%ebx),%eax
81000a81:	85 c0                	test   %eax,%eax
81000a83:	75 1d                	jne    81000aa2 <__sfvwrite_r+0x57>
81000a85:	83 ec 08             	sub    $0x8,%esp
81000a88:	53                   	push   %ebx
81000a89:	ff 75 08             	push   0x8(%ebp)
81000a8c:	e8 ea 28 00 00       	call   8100337b <__swsetup_r>
81000a91:	83 c4 10             	add    $0x10,%esp
81000a94:	85 c0                	test   %eax,%eax
81000a96:	74 0a                	je     81000aa2 <__sfvwrite_r+0x57>
81000a98:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000a9d:	e9 3f 04 00 00       	jmp    81000ee1 <__sfvwrite_r+0x496>
81000aa2:	8b 45 10             	mov    0x10(%ebp),%eax
81000aa5:	8b 00                	mov    (%eax),%eax
81000aa7:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000aaa:	bf 00 00 00 00       	mov    $0x0,%edi
81000aaf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ab3:	98                   	cwtl   
81000ab4:	83 e0 02             	and    $0x2,%eax
81000ab7:	85 c0                	test   %eax,%eax
81000ab9:	74 68                	je     81000b23 <__sfvwrite_r+0xd8>
81000abb:	eb 11                	jmp    81000ace <__sfvwrite_r+0x83>
81000abd:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000ac0:	8b 08                	mov    (%eax),%ecx
81000ac2:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000ac5:	8b 78 04             	mov    0x4(%eax),%edi
81000ac8:	83 c0 08             	add    $0x8,%eax
81000acb:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000ace:	85 ff                	test   %edi,%edi
81000ad0:	74 eb                	je     81000abd <__sfvwrite_r+0x72>
81000ad2:	8b 4b 24             	mov    0x24(%ebx),%ecx
81000ad5:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
81000ada:	39 c7                	cmp    %eax,%edi
81000adc:	0f 46 c7             	cmovbe %edi,%eax
81000adf:	89 c2                	mov    %eax,%edx
81000ae1:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000ae4:	52                   	push   %edx
81000ae5:	ff 75 c4             	push   -0x3c(%ebp)
81000ae8:	50                   	push   %eax
81000ae9:	ff 75 08             	push   0x8(%ebp)
81000aec:	ff d1                	call   *%ecx
81000aee:	83 c4 10             	add    $0x10,%esp
81000af1:	89 c6                	mov    %eax,%esi
81000af3:	85 f6                	test   %esi,%esi
81000af5:	0f 8e cf 03 00 00    	jle    81000eca <__sfvwrite_r+0x47f>
81000afb:	89 f0                	mov    %esi,%eax
81000afd:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000b00:	89 f0                	mov    %esi,%eax
81000b02:	29 c7                	sub    %eax,%edi
81000b04:	8b 45 10             	mov    0x10(%ebp),%eax
81000b07:	8b 40 08             	mov    0x8(%eax),%eax
81000b0a:	89 f2                	mov    %esi,%edx
81000b0c:	29 d0                	sub    %edx,%eax
81000b0e:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000b11:	89 41 08             	mov    %eax,0x8(%ecx)
81000b14:	8b 45 10             	mov    0x10(%ebp),%eax
81000b17:	8b 40 08             	mov    0x8(%eax),%eax
81000b1a:	85 c0                	test   %eax,%eax
81000b1c:	75 b0                	jne    81000ace <__sfvwrite_r+0x83>
81000b1e:	e9 a0 03 00 00       	jmp    81000ec3 <__sfvwrite_r+0x478>
81000b23:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b27:	98                   	cwtl   
81000b28:	83 e0 01             	and    $0x1,%eax
81000b2b:	85 c0                	test   %eax,%eax
81000b2d:	0f 85 44 02 00 00    	jne    81000d77 <__sfvwrite_r+0x32c>
81000b33:	eb 11                	jmp    81000b46 <__sfvwrite_r+0xfb>
81000b35:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000b38:	8b 08                	mov    (%eax),%ecx
81000b3a:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000b3d:	8b 78 04             	mov    0x4(%eax),%edi
81000b40:	83 c0 08             	add    $0x8,%eax
81000b43:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000b46:	85 ff                	test   %edi,%edi
81000b48:	74 eb                	je     81000b35 <__sfvwrite_r+0xea>
81000b4a:	8b 73 08             	mov    0x8(%ebx),%esi
81000b4d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b51:	98                   	cwtl   
81000b52:	25 00 02 00 00       	and    $0x200,%eax
81000b57:	85 c0                	test   %eax,%eax
81000b59:	0f 84 4f 01 00 00    	je     81000cae <__sfvwrite_r+0x263>
81000b5f:	89 f0                	mov    %esi,%eax
81000b61:	39 c7                	cmp    %eax,%edi
81000b63:	0f 82 12 01 00 00    	jb     81000c7b <__sfvwrite_r+0x230>
81000b69:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b6d:	98                   	cwtl   
81000b6e:	25 80 04 00 00       	and    $0x480,%eax
81000b73:	85 c0                	test   %eax,%eax
81000b75:	0f 84 00 01 00 00    	je     81000c7b <__sfvwrite_r+0x230>
81000b7b:	8b 03                	mov    (%ebx),%eax
81000b7d:	8b 53 10             	mov    0x10(%ebx),%edx
81000b80:	29 d0                	sub    %edx,%eax
81000b82:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000b85:	8b 53 14             	mov    0x14(%ebx),%edx
81000b88:	89 d0                	mov    %edx,%eax
81000b8a:	01 c0                	add    %eax,%eax
81000b8c:	01 d0                	add    %edx,%eax
81000b8e:	89 c2                	mov    %eax,%edx
81000b90:	c1 ea 1f             	shr    $0x1f,%edx
81000b93:	01 d0                	add    %edx,%eax
81000b95:	d1 f8                	sar    %eax
81000b97:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000b9a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000b9d:	01 f8                	add    %edi,%eax
81000b9f:	8d 50 01             	lea    0x1(%eax),%edx
81000ba2:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000ba5:	39 c2                	cmp    %eax,%edx
81000ba7:	76 0b                	jbe    81000bb4 <__sfvwrite_r+0x169>
81000ba9:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000bac:	01 f8                	add    %edi,%eax
81000bae:	83 c0 01             	add    $0x1,%eax
81000bb1:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000bb4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000bb8:	98                   	cwtl   
81000bb9:	25 00 04 00 00       	and    $0x400,%eax
81000bbe:	85 c0                	test   %eax,%eax
81000bc0:	74 4f                	je     81000c11 <__sfvwrite_r+0x1c6>
81000bc2:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000bc5:	83 ec 08             	sub    $0x8,%esp
81000bc8:	50                   	push   %eax
81000bc9:	ff 75 08             	push   0x8(%ebp)
81000bcc:	e8 7e 06 00 00       	call   8100124f <_malloc_r>
81000bd1:	83 c4 10             	add    $0x10,%esp
81000bd4:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000bd7:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000bdb:	75 0e                	jne    81000beb <__sfvwrite_r+0x1a0>
81000bdd:	8b 45 08             	mov    0x8(%ebp),%eax
81000be0:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000be6:	e9 e6 02 00 00       	jmp    81000ed1 <__sfvwrite_r+0x486>
81000beb:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000bee:	8b 43 10             	mov    0x10(%ebx),%eax
81000bf1:	83 ec 04             	sub    $0x4,%esp
81000bf4:	52                   	push   %edx
81000bf5:	50                   	push   %eax
81000bf6:	ff 75 dc             	push   -0x24(%ebp)
81000bf9:	e8 1a 0f 00 00       	call   81001b18 <memcpy>
81000bfe:	83 c4 10             	add    $0x10,%esp
81000c01:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000c05:	66 25 7f fb          	and    $0xfb7f,%ax
81000c09:	0c 80                	or     $0x80,%al
81000c0b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000c0f:	eb 49                	jmp    81000c5a <__sfvwrite_r+0x20f>
81000c11:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000c14:	8b 43 10             	mov    0x10(%ebx),%eax
81000c17:	83 ec 04             	sub    $0x4,%esp
81000c1a:	52                   	push   %edx
81000c1b:	50                   	push   %eax
81000c1c:	ff 75 08             	push   0x8(%ebp)
81000c1f:	e8 ac 1b 00 00       	call   810027d0 <_realloc_r>
81000c24:	83 c4 10             	add    $0x10,%esp
81000c27:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000c2a:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000c2e:	75 2a                	jne    81000c5a <__sfvwrite_r+0x20f>
81000c30:	8b 43 10             	mov    0x10(%ebx),%eax
81000c33:	83 ec 08             	sub    $0x8,%esp
81000c36:	50                   	push   %eax
81000c37:	ff 75 08             	push   0x8(%ebp)
81000c3a:	e8 67 2e 00 00       	call   81003aa6 <_free_r>
81000c3f:	83 c4 10             	add    $0x10,%esp
81000c42:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000c46:	24 7f                	and    $0x7f,%al
81000c48:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000c4c:	8b 45 08             	mov    0x8(%ebp),%eax
81000c4f:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000c55:	e9 77 02 00 00       	jmp    81000ed1 <__sfvwrite_r+0x486>
81000c5a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000c5d:	89 43 10             	mov    %eax,0x10(%ebx)
81000c60:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000c63:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000c66:	01 d0                	add    %edx,%eax
81000c68:	89 03                	mov    %eax,(%ebx)
81000c6a:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000c6d:	89 43 14             	mov    %eax,0x14(%ebx)
81000c70:	89 fe                	mov    %edi,%esi
81000c72:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000c75:	2b 45 d0             	sub    -0x30(%ebp),%eax
81000c78:	89 43 08             	mov    %eax,0x8(%ebx)
81000c7b:	89 f0                	mov    %esi,%eax
81000c7d:	39 c7                	cmp    %eax,%edi
81000c7f:	73 02                	jae    81000c83 <__sfvwrite_r+0x238>
81000c81:	89 fe                	mov    %edi,%esi
81000c83:	89 f2                	mov    %esi,%edx
81000c85:	8b 03                	mov    (%ebx),%eax
81000c87:	83 ec 04             	sub    $0x4,%esp
81000c8a:	52                   	push   %edx
81000c8b:	ff 75 c4             	push   -0x3c(%ebp)
81000c8e:	50                   	push   %eax
81000c8f:	e8 cc 0e 00 00       	call   81001b60 <memmove>
81000c94:	83 c4 10             	add    $0x10,%esp
81000c97:	8b 43 08             	mov    0x8(%ebx),%eax
81000c9a:	29 f0                	sub    %esi,%eax
81000c9c:	89 43 08             	mov    %eax,0x8(%ebx)
81000c9f:	8b 03                	mov    (%ebx),%eax
81000ca1:	89 f2                	mov    %esi,%edx
81000ca3:	01 d0                	add    %edx,%eax
81000ca5:	89 03                	mov    %eax,(%ebx)
81000ca7:	89 fe                	mov    %edi,%esi
81000ca9:	e9 9d 00 00 00       	jmp    81000d4b <__sfvwrite_r+0x300>
81000cae:	8b 13                	mov    (%ebx),%edx
81000cb0:	8b 43 10             	mov    0x10(%ebx),%eax
81000cb3:	39 c2                	cmp    %eax,%edx
81000cb5:	77 07                	ja     81000cbe <__sfvwrite_r+0x273>
81000cb7:	8b 43 14             	mov    0x14(%ebx),%eax
81000cba:	39 c7                	cmp    %eax,%edi
81000cbc:	73 4c                	jae    81000d0a <__sfvwrite_r+0x2bf>
81000cbe:	89 f0                	mov    %esi,%eax
81000cc0:	39 c7                	cmp    %eax,%edi
81000cc2:	0f 46 c7             	cmovbe %edi,%eax
81000cc5:	89 c6                	mov    %eax,%esi
81000cc7:	89 f2                	mov    %esi,%edx
81000cc9:	8b 03                	mov    (%ebx),%eax
81000ccb:	83 ec 04             	sub    $0x4,%esp
81000cce:	52                   	push   %edx
81000ccf:	ff 75 c4             	push   -0x3c(%ebp)
81000cd2:	50                   	push   %eax
81000cd3:	e8 88 0e 00 00       	call   81001b60 <memmove>
81000cd8:	83 c4 10             	add    $0x10,%esp
81000cdb:	8b 43 08             	mov    0x8(%ebx),%eax
81000cde:	29 f0                	sub    %esi,%eax
81000ce0:	89 43 08             	mov    %eax,0x8(%ebx)
81000ce3:	8b 03                	mov    (%ebx),%eax
81000ce5:	89 f2                	mov    %esi,%edx
81000ce7:	01 d0                	add    %edx,%eax
81000ce9:	89 03                	mov    %eax,(%ebx)
81000ceb:	8b 43 08             	mov    0x8(%ebx),%eax
81000cee:	85 c0                	test   %eax,%eax
81000cf0:	75 58                	jne    81000d4a <__sfvwrite_r+0x2ff>
81000cf2:	83 ec 08             	sub    $0x8,%esp
81000cf5:	53                   	push   %ebx
81000cf6:	ff 75 08             	push   0x8(%ebp)
81000cf9:	e8 62 2b 00 00       	call   81003860 <_fflush_r>
81000cfe:	83 c4 10             	add    $0x10,%esp
81000d01:	85 c0                	test   %eax,%eax
81000d03:	74 45                	je     81000d4a <__sfvwrite_r+0x2ff>
81000d05:	e9 c7 01 00 00       	jmp    81000ed1 <__sfvwrite_r+0x486>
81000d0a:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81000d10:	77 04                	ja     81000d16 <__sfvwrite_r+0x2cb>
81000d12:	89 f8                	mov    %edi,%eax
81000d14:	eb 05                	jmp    81000d1b <__sfvwrite_r+0x2d0>
81000d16:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81000d1b:	8b 4b 14             	mov    0x14(%ebx),%ecx
81000d1e:	99                   	cltd   
81000d1f:	f7 f9                	idiv   %ecx
81000d21:	89 c2                	mov    %eax,%edx
81000d23:	8b 43 14             	mov    0x14(%ebx),%eax
81000d26:	89 d6                	mov    %edx,%esi
81000d28:	0f af f0             	imul   %eax,%esi
81000d2b:	8b 53 24             	mov    0x24(%ebx),%edx
81000d2e:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000d31:	56                   	push   %esi
81000d32:	ff 75 c4             	push   -0x3c(%ebp)
81000d35:	50                   	push   %eax
81000d36:	ff 75 08             	push   0x8(%ebp)
81000d39:	ff d2                	call   *%edx
81000d3b:	83 c4 10             	add    $0x10,%esp
81000d3e:	89 c6                	mov    %eax,%esi
81000d40:	85 f6                	test   %esi,%esi
81000d42:	0f 8e 85 01 00 00    	jle    81000ecd <__sfvwrite_r+0x482>
81000d48:	eb 01                	jmp    81000d4b <__sfvwrite_r+0x300>
81000d4a:	90                   	nop
81000d4b:	89 f0                	mov    %esi,%eax
81000d4d:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000d50:	89 f0                	mov    %esi,%eax
81000d52:	29 c7                	sub    %eax,%edi
81000d54:	8b 45 10             	mov    0x10(%ebp),%eax
81000d57:	8b 40 08             	mov    0x8(%eax),%eax
81000d5a:	89 f2                	mov    %esi,%edx
81000d5c:	29 d0                	sub    %edx,%eax
81000d5e:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000d61:	89 41 08             	mov    %eax,0x8(%ecx)
81000d64:	8b 45 10             	mov    0x10(%ebp),%eax
81000d67:	8b 40 08             	mov    0x8(%eax),%eax
81000d6a:	85 c0                	test   %eax,%eax
81000d6c:	0f 85 d4 fd ff ff    	jne    81000b46 <__sfvwrite_r+0xfb>
81000d72:	e9 4c 01 00 00       	jmp    81000ec3 <__sfvwrite_r+0x478>
81000d77:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000d7e:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000d85:	eb 18                	jmp    81000d9f <__sfvwrite_r+0x354>
81000d87:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000d8e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000d91:	8b 08                	mov    (%eax),%ecx
81000d93:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000d96:	8b 78 04             	mov    0x4(%eax),%edi
81000d99:	83 c0 08             	add    $0x8,%eax
81000d9c:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000d9f:	85 ff                	test   %edi,%edi
81000da1:	74 e4                	je     81000d87 <__sfvwrite_r+0x33c>
81000da3:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000da7:	75 32                	jne    81000ddb <__sfvwrite_r+0x390>
81000da9:	83 ec 04             	sub    $0x4,%esp
81000dac:	57                   	push   %edi
81000dad:	6a 0a                	push   $0xa
81000daf:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81000db2:	56                   	push   %esi
81000db3:	e8 c8 0c 00 00       	call   81001a80 <memchr>
81000db8:	83 c4 10             	add    $0x10,%esp
81000dbb:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81000dbe:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81000dc2:	74 0a                	je     81000dce <__sfvwrite_r+0x383>
81000dc4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000dc7:	83 c0 01             	add    $0x1,%eax
81000dca:	29 f0                	sub    %esi,%eax
81000dcc:	eb 03                	jmp    81000dd1 <__sfvwrite_r+0x386>
81000dce:	8d 47 01             	lea    0x1(%edi),%eax
81000dd1:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000dd4:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81000ddb:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000dde:	39 c7                	cmp    %eax,%edi
81000de0:	0f 46 c7             	cmovbe %edi,%eax
81000de3:	89 c1                	mov    %eax,%ecx
81000de5:	8b 53 08             	mov    0x8(%ebx),%edx
81000de8:	8b 43 14             	mov    0x14(%ebx),%eax
81000deb:	8d 34 02             	lea    (%edx,%eax,1),%esi
81000dee:	8b 13                	mov    (%ebx),%edx
81000df0:	8b 43 10             	mov    0x10(%ebx),%eax
81000df3:	39 c2                	cmp    %eax,%edx
81000df5:	76 38                	jbe    81000e2f <__sfvwrite_r+0x3e4>
81000df7:	39 f1                	cmp    %esi,%ecx
81000df9:	7e 34                	jle    81000e2f <__sfvwrite_r+0x3e4>
81000dfb:	89 f2                	mov    %esi,%edx
81000dfd:	8b 03                	mov    (%ebx),%eax
81000dff:	83 ec 04             	sub    $0x4,%esp
81000e02:	52                   	push   %edx
81000e03:	ff 75 c4             	push   -0x3c(%ebp)
81000e06:	50                   	push   %eax
81000e07:	e8 54 0d 00 00       	call   81001b60 <memmove>
81000e0c:	83 c4 10             	add    $0x10,%esp
81000e0f:	8b 03                	mov    (%ebx),%eax
81000e11:	89 f2                	mov    %esi,%edx
81000e13:	01 d0                	add    %edx,%eax
81000e15:	89 03                	mov    %eax,(%ebx)
81000e17:	83 ec 08             	sub    $0x8,%esp
81000e1a:	53                   	push   %ebx
81000e1b:	ff 75 08             	push   0x8(%ebp)
81000e1e:	e8 3d 2a 00 00       	call   81003860 <_fflush_r>
81000e23:	83 c4 10             	add    $0x10,%esp
81000e26:	85 c0                	test   %eax,%eax
81000e28:	74 4f                	je     81000e79 <__sfvwrite_r+0x42e>
81000e2a:	e9 a2 00 00 00       	jmp    81000ed1 <__sfvwrite_r+0x486>
81000e2f:	8b 73 14             	mov    0x14(%ebx),%esi
81000e32:	89 c8                	mov    %ecx,%eax
81000e34:	39 c6                	cmp    %eax,%esi
81000e36:	7f 1b                	jg     81000e53 <__sfvwrite_r+0x408>
81000e38:	8b 53 24             	mov    0x24(%ebx),%edx
81000e3b:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000e3e:	56                   	push   %esi
81000e3f:	ff 75 c4             	push   -0x3c(%ebp)
81000e42:	50                   	push   %eax
81000e43:	ff 75 08             	push   0x8(%ebp)
81000e46:	ff d2                	call   *%edx
81000e48:	83 c4 10             	add    $0x10,%esp
81000e4b:	89 c6                	mov    %eax,%esi
81000e4d:	85 f6                	test   %esi,%esi
81000e4f:	7f 28                	jg     81000e79 <__sfvwrite_r+0x42e>
81000e51:	eb 7e                	jmp    81000ed1 <__sfvwrite_r+0x486>
81000e53:	89 ce                	mov    %ecx,%esi
81000e55:	89 f2                	mov    %esi,%edx
81000e57:	8b 03                	mov    (%ebx),%eax
81000e59:	83 ec 04             	sub    $0x4,%esp
81000e5c:	52                   	push   %edx
81000e5d:	ff 75 c4             	push   -0x3c(%ebp)
81000e60:	50                   	push   %eax
81000e61:	e8 fa 0c 00 00       	call   81001b60 <memmove>
81000e66:	83 c4 10             	add    $0x10,%esp
81000e69:	8b 43 08             	mov    0x8(%ebx),%eax
81000e6c:	29 f0                	sub    %esi,%eax
81000e6e:	89 43 08             	mov    %eax,0x8(%ebx)
81000e71:	8b 03                	mov    (%ebx),%eax
81000e73:	89 f2                	mov    %esi,%edx
81000e75:	01 d0                	add    %edx,%eax
81000e77:	89 03                	mov    %eax,(%ebx)
81000e79:	29 75 e0             	sub    %esi,-0x20(%ebp)
81000e7c:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000e80:	75 1a                	jne    81000e9c <__sfvwrite_r+0x451>
81000e82:	83 ec 08             	sub    $0x8,%esp
81000e85:	53                   	push   %ebx
81000e86:	ff 75 08             	push   0x8(%ebp)
81000e89:	e8 d2 29 00 00       	call   81003860 <_fflush_r>
81000e8e:	83 c4 10             	add    $0x10,%esp
81000e91:	85 c0                	test   %eax,%eax
81000e93:	75 3b                	jne    81000ed0 <__sfvwrite_r+0x485>
81000e95:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000e9c:	89 f0                	mov    %esi,%eax
81000e9e:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000ea1:	89 f0                	mov    %esi,%eax
81000ea3:	29 c7                	sub    %eax,%edi
81000ea5:	8b 45 10             	mov    0x10(%ebp),%eax
81000ea8:	8b 40 08             	mov    0x8(%eax),%eax
81000eab:	89 f2                	mov    %esi,%edx
81000ead:	29 d0                	sub    %edx,%eax
81000eaf:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000eb2:	89 41 08             	mov    %eax,0x8(%ecx)
81000eb5:	8b 45 10             	mov    0x10(%ebp),%eax
81000eb8:	8b 40 08             	mov    0x8(%eax),%eax
81000ebb:	85 c0                	test   %eax,%eax
81000ebd:	0f 85 dc fe ff ff    	jne    81000d9f <__sfvwrite_r+0x354>
81000ec3:	b8 00 00 00 00       	mov    $0x0,%eax
81000ec8:	eb 17                	jmp    81000ee1 <__sfvwrite_r+0x496>
81000eca:	90                   	nop
81000ecb:	eb 04                	jmp    81000ed1 <__sfvwrite_r+0x486>
81000ecd:	90                   	nop
81000ece:	eb 01                	jmp    81000ed1 <__sfvwrite_r+0x486>
81000ed0:	90                   	nop
81000ed1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ed5:	83 c8 40             	or     $0x40,%eax
81000ed8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000edc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000ee1:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000ee4:	5b                   	pop    %ebx
81000ee5:	5e                   	pop    %esi
81000ee6:	5f                   	pop    %edi
81000ee7:	5d                   	pop    %ebp
81000ee8:	c3                   	ret    

81000ee9 <_fwalk>:
81000ee9:	55                   	push   %ebp
81000eea:	89 e5                	mov    %esp,%ebp
81000eec:	57                   	push   %edi
81000eed:	56                   	push   %esi
81000eee:	53                   	push   %ebx
81000eef:	83 ec 1c             	sub    $0x1c,%esp
81000ef2:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000ef9:	8b 45 08             	mov    0x8(%ebp),%eax
81000efc:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000f02:	eb 3e                	jmp    81000f42 <_fwalk+0x59>
81000f04:	8b 5e 08             	mov    0x8(%esi),%ebx
81000f07:	8b 7e 04             	mov    0x4(%esi),%edi
81000f0a:	eb 2d                	jmp    81000f39 <_fwalk+0x50>
81000f0c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f10:	66 85 c0             	test   %ax,%ax
81000f13:	74 21                	je     81000f36 <_fwalk+0x4d>
81000f15:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f19:	66 83 f8 01          	cmp    $0x1,%ax
81000f1d:	74 17                	je     81000f36 <_fwalk+0x4d>
81000f1f:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000f23:	66 83 f8 ff          	cmp    $0xffff,%ax
81000f27:	74 0d                	je     81000f36 <_fwalk+0x4d>
81000f29:	83 ec 0c             	sub    $0xc,%esp
81000f2c:	53                   	push   %ebx
81000f2d:	ff 55 0c             	call   *0xc(%ebp)
81000f30:	83 c4 10             	add    $0x10,%esp
81000f33:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000f36:	83 c3 68             	add    $0x68,%ebx
81000f39:	83 ef 01             	sub    $0x1,%edi
81000f3c:	85 ff                	test   %edi,%edi
81000f3e:	79 cc                	jns    81000f0c <_fwalk+0x23>
81000f40:	8b 36                	mov    (%esi),%esi
81000f42:	85 f6                	test   %esi,%esi
81000f44:	75 be                	jne    81000f04 <_fwalk+0x1b>
81000f46:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000f49:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000f4c:	5b                   	pop    %ebx
81000f4d:	5e                   	pop    %esi
81000f4e:	5f                   	pop    %edi
81000f4f:	5d                   	pop    %ebp
81000f50:	c3                   	ret    

81000f51 <_fwalk_reent>:
81000f51:	55                   	push   %ebp
81000f52:	89 e5                	mov    %esp,%ebp
81000f54:	57                   	push   %edi
81000f55:	56                   	push   %esi
81000f56:	53                   	push   %ebx
81000f57:	83 ec 1c             	sub    $0x1c,%esp
81000f5a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000f61:	8b 45 08             	mov    0x8(%ebp),%eax
81000f64:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000f6a:	eb 41                	jmp    81000fad <_fwalk_reent+0x5c>
81000f6c:	8b 5e 08             	mov    0x8(%esi),%ebx
81000f6f:	8b 7e 04             	mov    0x4(%esi),%edi
81000f72:	eb 30                	jmp    81000fa4 <_fwalk_reent+0x53>
81000f74:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f78:	66 85 c0             	test   %ax,%ax
81000f7b:	74 24                	je     81000fa1 <_fwalk_reent+0x50>
81000f7d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f81:	66 83 f8 01          	cmp    $0x1,%ax
81000f85:	74 1a                	je     81000fa1 <_fwalk_reent+0x50>
81000f87:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000f8b:	66 83 f8 ff          	cmp    $0xffff,%ax
81000f8f:	74 10                	je     81000fa1 <_fwalk_reent+0x50>
81000f91:	83 ec 08             	sub    $0x8,%esp
81000f94:	53                   	push   %ebx
81000f95:	ff 75 08             	push   0x8(%ebp)
81000f98:	ff 55 0c             	call   *0xc(%ebp)
81000f9b:	83 c4 10             	add    $0x10,%esp
81000f9e:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000fa1:	83 c3 68             	add    $0x68,%ebx
81000fa4:	83 ef 01             	sub    $0x1,%edi
81000fa7:	85 ff                	test   %edi,%edi
81000fa9:	79 c9                	jns    81000f74 <_fwalk_reent+0x23>
81000fab:	8b 36                	mov    (%esi),%esi
81000fad:	85 f6                	test   %esi,%esi
81000faf:	75 bb                	jne    81000f6c <_fwalk_reent+0x1b>
81000fb1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000fb4:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000fb7:	5b                   	pop    %ebx
81000fb8:	5e                   	pop    %esi
81000fb9:	5f                   	pop    %edi
81000fba:	5d                   	pop    %ebp
81000fbb:	c3                   	ret    

81000fbc <malloc_extend_top>:
81000fbc:	55                   	push   %ebp
81000fbd:	89 e5                	mov    %esp,%ebp
81000fbf:	83 ec 38             	sub    $0x38,%esp
81000fc2:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000fc9:	b8 40 50 00 81       	mov    $0x81005040,%eax
81000fce:	8b 40 08             	mov    0x8(%eax),%eax
81000fd1:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000fd4:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000fd7:	8b 40 04             	mov    0x4(%eax),%eax
81000fda:	83 e0 fc             	and    $0xfffffffc,%eax
81000fdd:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000fe0:	8b 55 e0             	mov    -0x20(%ebp),%edx
81000fe3:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000fe6:	01 d0                	add    %edx,%eax
81000fe8:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000feb:	8b 15 00 56 00 81    	mov    0x81005600,%edx
81000ff1:	8b 45 0c             	mov    0xc(%ebp),%eax
81000ff4:	01 d0                	add    %edx,%eax
81000ff6:	83 c0 10             	add    $0x10,%eax
81000ff9:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000ffc:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81001003:	a1 4c 54 00 81       	mov    0x8100544c,%eax
81001008:	83 f8 ff             	cmp    $0xffffffff,%eax
8100100b:	74 15                	je     81001022 <malloc_extend_top+0x66>
8100100d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81001010:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001013:	01 d0                	add    %edx,%eax
81001015:	8d 50 ff             	lea    -0x1(%eax),%edx
81001018:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100101b:	f7 d8                	neg    %eax
8100101d:	21 d0                	and    %edx,%eax
8100101f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001022:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001025:	83 ec 08             	sub    $0x8,%esp
81001028:	50                   	push   %eax
81001029:	ff 75 08             	push   0x8(%ebp)
8100102c:	e8 79 20 00 00       	call   810030aa <_sbrk_r>
81001031:	83 c4 10             	add    $0x10,%esp
81001034:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001037:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100103b:	0f 84 0b 02 00 00    	je     8100124c <malloc_extend_top+0x290>
81001041:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001044:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81001047:	73 0e                	jae    81001057 <malloc_extend_top+0x9b>
81001049:	b8 40 50 00 81       	mov    $0x81005040,%eax
8100104e:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81001051:	0f 85 f5 01 00 00    	jne    8100124c <malloc_extend_top+0x290>
81001057:	a1 20 56 00 81       	mov    0x81005620,%eax
8100105c:	89 c2                	mov    %eax,%edx
8100105e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001061:	01 d0                	add    %edx,%eax
81001063:	a3 20 56 00 81       	mov    %eax,0x81005620
81001068:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100106b:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100106e:	75 30                	jne    810010a0 <malloc_extend_top+0xe4>
81001070:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001073:	8d 50 ff             	lea    -0x1(%eax),%edx
81001076:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001079:	21 d0                	and    %edx,%eax
8100107b:	85 c0                	test   %eax,%eax
8100107d:	75 21                	jne    810010a0 <malloc_extend_top+0xe4>
8100107f:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001082:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001085:	01 d0                	add    %edx,%eax
81001087:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100108a:	b8 40 50 00 81       	mov    $0x81005040,%eax
8100108f:	8b 40 08             	mov    0x8(%eax),%eax
81001092:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001095:	83 ca 01             	or     $0x1,%edx
81001098:	89 50 04             	mov    %edx,0x4(%eax)
8100109b:	e9 76 01 00 00       	jmp    81001216 <malloc_extend_top+0x25a>
810010a0:	a1 4c 54 00 81       	mov    0x8100544c,%eax
810010a5:	83 f8 ff             	cmp    $0xffffffff,%eax
810010a8:	75 0a                	jne    810010b4 <malloc_extend_top+0xf8>
810010aa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010ad:	a3 4c 54 00 81       	mov    %eax,0x8100544c
810010b2:	eb 13                	jmp    810010c7 <malloc_extend_top+0x10b>
810010b4:	8b 15 20 56 00 81    	mov    0x81005620,%edx
810010ba:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010bd:	2b 45 d8             	sub    -0x28(%ebp),%eax
810010c0:	01 d0                	add    %edx,%eax
810010c2:	a3 20 56 00 81       	mov    %eax,0x81005620
810010c7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010ca:	83 c0 08             	add    $0x8,%eax
810010cd:	83 e0 07             	and    $0x7,%eax
810010d0:	89 45 cc             	mov    %eax,-0x34(%ebp)
810010d3:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810010d7:	74 13                	je     810010ec <malloc_extend_top+0x130>
810010d9:	b8 08 00 00 00       	mov    $0x8,%eax
810010de:	2b 45 cc             	sub    -0x34(%ebp),%eax
810010e1:	89 45 f0             	mov    %eax,-0x10(%ebp)
810010e4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010e7:	01 45 f4             	add    %eax,-0xc(%ebp)
810010ea:	eb 07                	jmp    810010f3 <malloc_extend_top+0x137>
810010ec:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810010f3:	8b 55 f4             	mov    -0xc(%ebp),%edx
810010f6:	8b 45 e8             	mov    -0x18(%ebp),%eax
810010f9:	01 d0                	add    %edx,%eax
810010fb:	89 c2                	mov    %eax,%edx
810010fd:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001100:	83 e8 01             	sub    $0x1,%eax
81001103:	21 c2                	and    %eax,%edx
81001105:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001108:	29 d0                	sub    %edx,%eax
8100110a:	01 45 f0             	add    %eax,-0x10(%ebp)
8100110d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001110:	83 e8 01             	sub    $0x1,%eax
81001113:	21 45 f0             	and    %eax,-0x10(%ebp)
81001116:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001119:	83 ec 08             	sub    $0x8,%esp
8100111c:	50                   	push   %eax
8100111d:	ff 75 08             	push   0x8(%ebp)
81001120:	e8 85 1f 00 00       	call   810030aa <_sbrk_r>
81001125:	83 c4 10             	add    $0x10,%esp
81001128:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100112b:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
8100112f:	75 28                	jne    81001159 <malloc_extend_top+0x19d>
81001131:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001138:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100113f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001142:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001145:	01 d0                	add    %edx,%eax
81001147:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100114a:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
8100114e:	74 09                	je     81001159 <malloc_extend_top+0x19d>
81001150:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001153:	83 e8 08             	sub    $0x8,%eax
81001156:	01 45 ec             	add    %eax,-0x14(%ebp)
81001159:	a1 20 56 00 81       	mov    0x81005620,%eax
8100115e:	89 c2                	mov    %eax,%edx
81001160:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001163:	01 d0                	add    %edx,%eax
81001165:	a3 20 56 00 81       	mov    %eax,0x81005620
8100116a:	ba 40 50 00 81       	mov    $0x81005040,%edx
8100116f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001172:	89 42 08             	mov    %eax,0x8(%edx)
81001175:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001178:	2b 45 f4             	sub    -0xc(%ebp),%eax
8100117b:	89 c2                	mov    %eax,%edx
8100117d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001180:	01 d0                	add    %edx,%eax
81001182:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001185:	b8 40 50 00 81       	mov    $0x81005040,%eax
8100118a:	8b 40 08             	mov    0x8(%eax),%eax
8100118d:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001190:	83 ca 01             	or     $0x1,%edx
81001193:	89 50 04             	mov    %edx,0x4(%eax)
81001196:	b8 40 50 00 81       	mov    $0x81005040,%eax
8100119b:	39 45 e0             	cmp    %eax,-0x20(%ebp)
8100119e:	74 76                	je     81001216 <malloc_extend_top+0x25a>
810011a0:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
810011a4:	77 14                	ja     810011ba <malloc_extend_top+0x1fe>
810011a6:	b8 40 50 00 81       	mov    $0x81005040,%eax
810011ab:	8b 40 08             	mov    0x8(%eax),%eax
810011ae:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
810011b5:	e9 93 00 00 00       	jmp    8100124d <malloc_extend_top+0x291>
810011ba:	8b 45 dc             	mov    -0x24(%ebp),%eax
810011bd:	83 e8 0c             	sub    $0xc,%eax
810011c0:	83 e0 f8             	and    $0xfffffff8,%eax
810011c3:	89 45 dc             	mov    %eax,-0x24(%ebp)
810011c6:	8b 45 e0             	mov    -0x20(%ebp),%eax
810011c9:	8b 40 04             	mov    0x4(%eax),%eax
810011cc:	83 e0 01             	and    $0x1,%eax
810011cf:	0b 45 dc             	or     -0x24(%ebp),%eax
810011d2:	89 c2                	mov    %eax,%edx
810011d4:	8b 45 e0             	mov    -0x20(%ebp),%eax
810011d7:	89 50 04             	mov    %edx,0x4(%eax)
810011da:	8b 55 e0             	mov    -0x20(%ebp),%edx
810011dd:	8b 45 dc             	mov    -0x24(%ebp),%eax
810011e0:	01 d0                	add    %edx,%eax
810011e2:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
810011e9:	8b 45 dc             	mov    -0x24(%ebp),%eax
810011ec:	8d 50 04             	lea    0x4(%eax),%edx
810011ef:	8b 45 e0             	mov    -0x20(%ebp),%eax
810011f2:	01 d0                	add    %edx,%eax
810011f4:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
810011fb:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
810011ff:	76 15                	jbe    81001216 <malloc_extend_top+0x25a>
81001201:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001204:	83 c0 08             	add    $0x8,%eax
81001207:	83 ec 08             	sub    $0x8,%esp
8100120a:	50                   	push   %eax
8100120b:	ff 75 08             	push   0x8(%ebp)
8100120e:	e8 93 28 00 00       	call   81003aa6 <_free_r>
81001213:	83 c4 10             	add    $0x10,%esp
81001216:	a1 20 56 00 81       	mov    0x81005620,%eax
8100121b:	89 c2                	mov    %eax,%edx
8100121d:	a1 04 56 00 81       	mov    0x81005604,%eax
81001222:	39 c2                	cmp    %eax,%edx
81001224:	76 0a                	jbe    81001230 <malloc_extend_top+0x274>
81001226:	a1 20 56 00 81       	mov    0x81005620,%eax
8100122b:	a3 04 56 00 81       	mov    %eax,0x81005604
81001230:	a1 20 56 00 81       	mov    0x81005620,%eax
81001235:	89 c2                	mov    %eax,%edx
81001237:	a1 08 56 00 81       	mov    0x81005608,%eax
8100123c:	39 c2                	cmp    %eax,%edx
8100123e:	76 0d                	jbe    8100124d <malloc_extend_top+0x291>
81001240:	a1 20 56 00 81       	mov    0x81005620,%eax
81001245:	a3 08 56 00 81       	mov    %eax,0x81005608
8100124a:	eb 01                	jmp    8100124d <malloc_extend_top+0x291>
8100124c:	90                   	nop
8100124d:	c9                   	leave  
8100124e:	c3                   	ret    

8100124f <_malloc_r>:
8100124f:	55                   	push   %ebp
81001250:	89 e5                	mov    %esp,%ebp
81001252:	53                   	push   %ebx
81001253:	83 ec 44             	sub    $0x44,%esp
81001256:	8b 45 0c             	mov    0xc(%ebp),%eax
81001259:	83 c0 0b             	add    $0xb,%eax
8100125c:	83 f8 16             	cmp    $0x16,%eax
8100125f:	76 0b                	jbe    8100126c <_malloc_r+0x1d>
81001261:	8b 45 0c             	mov    0xc(%ebp),%eax
81001264:	83 c0 0b             	add    $0xb,%eax
81001267:	83 e0 f8             	and    $0xfffffff8,%eax
8100126a:	eb 05                	jmp    81001271 <_malloc_r+0x22>
8100126c:	b8 10 00 00 00       	mov    $0x10,%eax
81001271:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001274:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001277:	85 c0                	test   %eax,%eax
81001279:	78 08                	js     81001283 <_malloc_r+0x34>
8100127b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100127e:	3b 45 0c             	cmp    0xc(%ebp),%eax
81001281:	73 13                	jae    81001296 <_malloc_r+0x47>
81001283:	8b 45 08             	mov    0x8(%ebp),%eax
81001286:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100128c:	b8 00 00 00 00       	mov    $0x0,%eax
81001291:	e9 d6 07 00 00       	jmp    81001a6c <_malloc_r+0x81d>
81001296:	83 ec 0c             	sub    $0xc,%esp
81001299:	ff 75 08             	push   0x8(%ebp)
8100129c:	e8 d4 09 00 00       	call   81001c75 <__malloc_lock>
810012a1:	83 c4 10             	add    $0x10,%esp
810012a4:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
810012ab:	0f 87 b0 00 00 00    	ja     81001361 <_malloc_r+0x112>
810012b1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012b4:	c1 e8 03             	shr    $0x3,%eax
810012b7:	89 45 f0             	mov    %eax,-0x10(%ebp)
810012ba:	8b 45 f0             	mov    -0x10(%ebp),%eax
810012bd:	83 c0 01             	add    $0x1,%eax
810012c0:	01 c0                	add    %eax,%eax
810012c2:	c1 e0 02             	shl    $0x2,%eax
810012c5:	05 40 50 00 81       	add    $0x81005040,%eax
810012ca:	83 e8 08             	sub    $0x8,%eax
810012cd:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810012d0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810012d3:	8b 40 0c             	mov    0xc(%eax),%eax
810012d6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810012d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012dc:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
810012df:	75 0d                	jne    810012ee <_malloc_r+0x9f>
810012e1:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
810012e5:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810012e8:	8b 40 0c             	mov    0xc(%eax),%eax
810012eb:	89 45 f4             	mov    %eax,-0xc(%ebp)
810012ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012f1:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
810012f4:	74 62                	je     81001358 <_malloc_r+0x109>
810012f6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012f9:	8b 40 04             	mov    0x4(%eax),%eax
810012fc:	83 e0 fc             	and    $0xfffffffc,%eax
810012ff:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001302:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001305:	8b 40 0c             	mov    0xc(%eax),%eax
81001308:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100130b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100130e:	8b 40 08             	mov    0x8(%eax),%eax
81001311:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001314:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001317:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100131a:	89 50 0c             	mov    %edx,0xc(%eax)
8100131d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001320:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001323:	89 50 08             	mov    %edx,0x8(%eax)
81001326:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001329:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100132c:	01 d0                	add    %edx,%eax
8100132e:	8b 50 04             	mov    0x4(%eax),%edx
81001331:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001334:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001337:	01 c8                	add    %ecx,%eax
81001339:	83 ca 01             	or     $0x1,%edx
8100133c:	89 50 04             	mov    %edx,0x4(%eax)
8100133f:	83 ec 0c             	sub    $0xc,%esp
81001342:	ff 75 08             	push   0x8(%ebp)
81001345:	e8 31 09 00 00       	call   81001c7b <__malloc_unlock>
8100134a:	83 c4 10             	add    $0x10,%esp
8100134d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001350:	83 c0 08             	add    $0x8,%eax
81001353:	e9 14 07 00 00       	jmp    81001a6c <_malloc_r+0x81d>
81001358:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
8100135c:	e9 46 01 00 00       	jmp    810014a7 <_malloc_r+0x258>
81001361:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001364:	c1 e8 09             	shr    $0x9,%eax
81001367:	85 c0                	test   %eax,%eax
81001369:	75 08                	jne    81001373 <_malloc_r+0x124>
8100136b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100136e:	c1 e8 03             	shr    $0x3,%eax
81001371:	eb 77                	jmp    810013ea <_malloc_r+0x19b>
81001373:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001376:	c1 e8 09             	shr    $0x9,%eax
81001379:	83 f8 04             	cmp    $0x4,%eax
8100137c:	77 0b                	ja     81001389 <_malloc_r+0x13a>
8100137e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001381:	c1 e8 06             	shr    $0x6,%eax
81001384:	83 c0 38             	add    $0x38,%eax
81001387:	eb 61                	jmp    810013ea <_malloc_r+0x19b>
81001389:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100138c:	c1 e8 09             	shr    $0x9,%eax
8100138f:	83 f8 14             	cmp    $0x14,%eax
81001392:	77 0b                	ja     8100139f <_malloc_r+0x150>
81001394:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001397:	c1 e8 09             	shr    $0x9,%eax
8100139a:	83 c0 5b             	add    $0x5b,%eax
8100139d:	eb 4b                	jmp    810013ea <_malloc_r+0x19b>
8100139f:	8b 45 d0             	mov    -0x30(%ebp),%eax
810013a2:	c1 e8 09             	shr    $0x9,%eax
810013a5:	83 f8 54             	cmp    $0x54,%eax
810013a8:	77 0b                	ja     810013b5 <_malloc_r+0x166>
810013aa:	8b 45 d0             	mov    -0x30(%ebp),%eax
810013ad:	c1 e8 0c             	shr    $0xc,%eax
810013b0:	83 c0 6e             	add    $0x6e,%eax
810013b3:	eb 35                	jmp    810013ea <_malloc_r+0x19b>
810013b5:	8b 45 d0             	mov    -0x30(%ebp),%eax
810013b8:	c1 e8 09             	shr    $0x9,%eax
810013bb:	3d 54 01 00 00       	cmp    $0x154,%eax
810013c0:	77 0b                	ja     810013cd <_malloc_r+0x17e>
810013c2:	8b 45 d0             	mov    -0x30(%ebp),%eax
810013c5:	c1 e8 0f             	shr    $0xf,%eax
810013c8:	83 c0 77             	add    $0x77,%eax
810013cb:	eb 1d                	jmp    810013ea <_malloc_r+0x19b>
810013cd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810013d0:	c1 e8 09             	shr    $0x9,%eax
810013d3:	3d 54 05 00 00       	cmp    $0x554,%eax
810013d8:	77 0b                	ja     810013e5 <_malloc_r+0x196>
810013da:	8b 45 d0             	mov    -0x30(%ebp),%eax
810013dd:	c1 e8 12             	shr    $0x12,%eax
810013e0:	83 c0 7c             	add    $0x7c,%eax
810013e3:	eb 05                	jmp    810013ea <_malloc_r+0x19b>
810013e5:	b8 7e 00 00 00       	mov    $0x7e,%eax
810013ea:	89 45 f0             	mov    %eax,-0x10(%ebp)
810013ed:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013f0:	83 c0 01             	add    $0x1,%eax
810013f3:	01 c0                	add    %eax,%eax
810013f5:	c1 e0 02             	shl    $0x2,%eax
810013f8:	05 40 50 00 81       	add    $0x81005040,%eax
810013fd:	83 e8 08             	sub    $0x8,%eax
81001400:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001403:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001406:	8b 40 0c             	mov    0xc(%eax),%eax
81001409:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100140c:	e9 86 00 00 00       	jmp    81001497 <_malloc_r+0x248>
81001411:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001414:	8b 40 04             	mov    0x4(%eax),%eax
81001417:	83 e0 fc             	and    $0xfffffffc,%eax
8100141a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100141d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001420:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001423:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001426:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100142a:	7e 06                	jle    81001432 <_malloc_r+0x1e3>
8100142c:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81001430:	eb 71                	jmp    810014a3 <_malloc_r+0x254>
81001432:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001436:	78 56                	js     8100148e <_malloc_r+0x23f>
81001438:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100143b:	8b 40 0c             	mov    0xc(%eax),%eax
8100143e:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001441:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001444:	8b 40 08             	mov    0x8(%eax),%eax
81001447:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100144a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100144d:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001450:	89 50 0c             	mov    %edx,0xc(%eax)
81001453:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001456:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001459:	89 50 08             	mov    %edx,0x8(%eax)
8100145c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100145f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001462:	01 d0                	add    %edx,%eax
81001464:	8b 50 04             	mov    0x4(%eax),%edx
81001467:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100146a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100146d:	01 c8                	add    %ecx,%eax
8100146f:	83 ca 01             	or     $0x1,%edx
81001472:	89 50 04             	mov    %edx,0x4(%eax)
81001475:	83 ec 0c             	sub    $0xc,%esp
81001478:	ff 75 08             	push   0x8(%ebp)
8100147b:	e8 fb 07 00 00       	call   81001c7b <__malloc_unlock>
81001480:	83 c4 10             	add    $0x10,%esp
81001483:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001486:	83 c0 08             	add    $0x8,%eax
81001489:	e9 de 05 00 00       	jmp    81001a6c <_malloc_r+0x81d>
8100148e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001491:	8b 40 0c             	mov    0xc(%eax),%eax
81001494:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001497:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100149a:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100149d:	0f 85 6e ff ff ff    	jne    81001411 <_malloc_r+0x1c2>
810014a3:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810014a7:	b8 48 50 00 81       	mov    $0x81005048,%eax
810014ac:	8b 40 08             	mov    0x8(%eax),%eax
810014af:	89 45 f4             	mov    %eax,-0xc(%ebp)
810014b2:	b8 48 50 00 81       	mov    $0x81005048,%eax
810014b7:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810014ba:	0f 84 9c 02 00 00    	je     8100175c <_malloc_r+0x50d>
810014c0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014c3:	8b 40 04             	mov    0x4(%eax),%eax
810014c6:	83 e0 fc             	and    $0xfffffffc,%eax
810014c9:	89 45 cc             	mov    %eax,-0x34(%ebp)
810014cc:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014cf:	2b 45 d0             	sub    -0x30(%ebp),%eax
810014d2:	89 45 e8             	mov    %eax,-0x18(%ebp)
810014d5:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810014d9:	7e 7a                	jle    81001555 <_malloc_r+0x306>
810014db:	8b 55 f4             	mov    -0xc(%ebp),%edx
810014de:	8b 45 d0             	mov    -0x30(%ebp),%eax
810014e1:	01 d0                	add    %edx,%eax
810014e3:	89 45 c4             	mov    %eax,-0x3c(%ebp)
810014e6:	8b 45 d0             	mov    -0x30(%ebp),%eax
810014e9:	83 c8 01             	or     $0x1,%eax
810014ec:	89 c2                	mov    %eax,%edx
810014ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014f1:	89 50 04             	mov    %edx,0x4(%eax)
810014f4:	b8 48 50 00 81       	mov    $0x81005048,%eax
810014f9:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810014fc:	89 50 0c             	mov    %edx,0xc(%eax)
810014ff:	ba 48 50 00 81       	mov    $0x81005048,%edx
81001504:	8b 40 0c             	mov    0xc(%eax),%eax
81001507:	89 42 08             	mov    %eax,0x8(%edx)
8100150a:	ba 48 50 00 81       	mov    $0x81005048,%edx
8100150f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001512:	89 50 0c             	mov    %edx,0xc(%eax)
81001515:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001518:	8b 50 0c             	mov    0xc(%eax),%edx
8100151b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100151e:	89 50 08             	mov    %edx,0x8(%eax)
81001521:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001524:	83 c8 01             	or     $0x1,%eax
81001527:	89 c2                	mov    %eax,%edx
81001529:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100152c:	89 50 04             	mov    %edx,0x4(%eax)
8100152f:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001532:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001535:	01 c2                	add    %eax,%edx
81001537:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100153a:	89 02                	mov    %eax,(%edx)
8100153c:	83 ec 0c             	sub    $0xc,%esp
8100153f:	ff 75 08             	push   0x8(%ebp)
81001542:	e8 34 07 00 00       	call   81001c7b <__malloc_unlock>
81001547:	83 c4 10             	add    $0x10,%esp
8100154a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100154d:	83 c0 08             	add    $0x8,%eax
81001550:	e9 17 05 00 00       	jmp    81001a6c <_malloc_r+0x81d>
81001555:	b8 48 50 00 81       	mov    $0x81005048,%eax
8100155a:	ba 48 50 00 81       	mov    $0x81005048,%edx
8100155f:	89 50 0c             	mov    %edx,0xc(%eax)
81001562:	ba 48 50 00 81       	mov    $0x81005048,%edx
81001567:	8b 40 0c             	mov    0xc(%eax),%eax
8100156a:	89 42 08             	mov    %eax,0x8(%edx)
8100156d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001571:	78 32                	js     810015a5 <_malloc_r+0x356>
81001573:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001576:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001579:	01 d0                	add    %edx,%eax
8100157b:	8b 50 04             	mov    0x4(%eax),%edx
8100157e:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001581:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001584:	01 c8                	add    %ecx,%eax
81001586:	83 ca 01             	or     $0x1,%edx
81001589:	89 50 04             	mov    %edx,0x4(%eax)
8100158c:	83 ec 0c             	sub    $0xc,%esp
8100158f:	ff 75 08             	push   0x8(%ebp)
81001592:	e8 e4 06 00 00       	call   81001c7b <__malloc_unlock>
81001597:	83 c4 10             	add    $0x10,%esp
8100159a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100159d:	83 c0 08             	add    $0x8,%eax
810015a0:	e9 c7 04 00 00       	jmp    81001a6c <_malloc_r+0x81d>
810015a5:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
810015ac:	77 7f                	ja     8100162d <_malloc_r+0x3de>
810015ae:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015b1:	c1 e8 03             	shr    $0x3,%eax
810015b4:	89 45 c8             	mov    %eax,-0x38(%ebp)
810015b7:	b8 40 50 00 81       	mov    $0x81005040,%eax
810015bc:	8b 58 04             	mov    0x4(%eax),%ebx
810015bf:	8b 45 c8             	mov    -0x38(%ebp),%eax
810015c2:	8d 50 03             	lea    0x3(%eax),%edx
810015c5:	85 c0                	test   %eax,%eax
810015c7:	0f 48 c2             	cmovs  %edx,%eax
810015ca:	c1 f8 02             	sar    $0x2,%eax
810015cd:	ba 01 00 00 00       	mov    $0x1,%edx
810015d2:	89 c1                	mov    %eax,%ecx
810015d4:	d3 e2                	shl    %cl,%edx
810015d6:	89 d0                	mov    %edx,%eax
810015d8:	ba 40 50 00 81       	mov    $0x81005040,%edx
810015dd:	09 d8                	or     %ebx,%eax
810015df:	89 42 04             	mov    %eax,0x4(%edx)
810015e2:	8b 45 c8             	mov    -0x38(%ebp),%eax
810015e5:	83 c0 01             	add    $0x1,%eax
810015e8:	01 c0                	add    %eax,%eax
810015ea:	c1 e0 02             	shl    $0x2,%eax
810015ed:	05 40 50 00 81       	add    $0x81005040,%eax
810015f2:	83 e8 08             	sub    $0x8,%eax
810015f5:	89 45 d8             	mov    %eax,-0x28(%ebp)
810015f8:	8b 45 d8             	mov    -0x28(%ebp),%eax
810015fb:	8b 40 08             	mov    0x8(%eax),%eax
810015fe:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001601:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001604:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001607:	89 50 0c             	mov    %edx,0xc(%eax)
8100160a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100160d:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001610:	89 50 08             	mov    %edx,0x8(%eax)
81001613:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001616:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001619:	89 50 08             	mov    %edx,0x8(%eax)
8100161c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100161f:	8b 50 08             	mov    0x8(%eax),%edx
81001622:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001625:	89 50 0c             	mov    %edx,0xc(%eax)
81001628:	e9 2f 01 00 00       	jmp    8100175c <_malloc_r+0x50d>
8100162d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001630:	c1 e8 09             	shr    $0x9,%eax
81001633:	85 c0                	test   %eax,%eax
81001635:	75 08                	jne    8100163f <_malloc_r+0x3f0>
81001637:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100163a:	c1 e8 03             	shr    $0x3,%eax
8100163d:	eb 77                	jmp    810016b6 <_malloc_r+0x467>
8100163f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001642:	c1 e8 09             	shr    $0x9,%eax
81001645:	83 f8 04             	cmp    $0x4,%eax
81001648:	77 0b                	ja     81001655 <_malloc_r+0x406>
8100164a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100164d:	c1 e8 06             	shr    $0x6,%eax
81001650:	83 c0 38             	add    $0x38,%eax
81001653:	eb 61                	jmp    810016b6 <_malloc_r+0x467>
81001655:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001658:	c1 e8 09             	shr    $0x9,%eax
8100165b:	83 f8 14             	cmp    $0x14,%eax
8100165e:	77 0b                	ja     8100166b <_malloc_r+0x41c>
81001660:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001663:	c1 e8 09             	shr    $0x9,%eax
81001666:	83 c0 5b             	add    $0x5b,%eax
81001669:	eb 4b                	jmp    810016b6 <_malloc_r+0x467>
8100166b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100166e:	c1 e8 09             	shr    $0x9,%eax
81001671:	83 f8 54             	cmp    $0x54,%eax
81001674:	77 0b                	ja     81001681 <_malloc_r+0x432>
81001676:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001679:	c1 e8 0c             	shr    $0xc,%eax
8100167c:	83 c0 6e             	add    $0x6e,%eax
8100167f:	eb 35                	jmp    810016b6 <_malloc_r+0x467>
81001681:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001684:	c1 e8 09             	shr    $0x9,%eax
81001687:	3d 54 01 00 00       	cmp    $0x154,%eax
8100168c:	77 0b                	ja     81001699 <_malloc_r+0x44a>
8100168e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001691:	c1 e8 0f             	shr    $0xf,%eax
81001694:	83 c0 77             	add    $0x77,%eax
81001697:	eb 1d                	jmp    810016b6 <_malloc_r+0x467>
81001699:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100169c:	c1 e8 09             	shr    $0x9,%eax
8100169f:	3d 54 05 00 00       	cmp    $0x554,%eax
810016a4:	77 0b                	ja     810016b1 <_malloc_r+0x462>
810016a6:	8b 45 cc             	mov    -0x34(%ebp),%eax
810016a9:	c1 e8 12             	shr    $0x12,%eax
810016ac:	83 c0 7c             	add    $0x7c,%eax
810016af:	eb 05                	jmp    810016b6 <_malloc_r+0x467>
810016b1:	b8 7e 00 00 00       	mov    $0x7e,%eax
810016b6:	89 45 c8             	mov    %eax,-0x38(%ebp)
810016b9:	8b 45 c8             	mov    -0x38(%ebp),%eax
810016bc:	83 c0 01             	add    $0x1,%eax
810016bf:	01 c0                	add    %eax,%eax
810016c1:	c1 e0 02             	shl    $0x2,%eax
810016c4:	05 40 50 00 81       	add    $0x81005040,%eax
810016c9:	83 e8 08             	sub    $0x8,%eax
810016cc:	89 45 d8             	mov    %eax,-0x28(%ebp)
810016cf:	8b 45 d8             	mov    -0x28(%ebp),%eax
810016d2:	8b 40 08             	mov    0x8(%eax),%eax
810016d5:	89 45 dc             	mov    %eax,-0x24(%ebp)
810016d8:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016db:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810016de:	75 36                	jne    81001716 <_malloc_r+0x4c7>
810016e0:	b8 40 50 00 81       	mov    $0x81005040,%eax
810016e5:	8b 58 04             	mov    0x4(%eax),%ebx
810016e8:	8b 45 c8             	mov    -0x38(%ebp),%eax
810016eb:	8d 50 03             	lea    0x3(%eax),%edx
810016ee:	85 c0                	test   %eax,%eax
810016f0:	0f 48 c2             	cmovs  %edx,%eax
810016f3:	c1 f8 02             	sar    $0x2,%eax
810016f6:	ba 01 00 00 00       	mov    $0x1,%edx
810016fb:	89 c1                	mov    %eax,%ecx
810016fd:	d3 e2                	shl    %cl,%edx
810016ff:	89 d0                	mov    %edx,%eax
81001701:	ba 40 50 00 81       	mov    $0x81005040,%edx
81001706:	09 d8                	or     %ebx,%eax
81001708:	89 42 04             	mov    %eax,0x4(%edx)
8100170b:	eb 28                	jmp    81001735 <_malloc_r+0x4e6>
8100170d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001710:	8b 40 08             	mov    0x8(%eax),%eax
81001713:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001716:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001719:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100171c:	74 0e                	je     8100172c <_malloc_r+0x4dd>
8100171e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001721:	8b 40 04             	mov    0x4(%eax),%eax
81001724:	83 e0 fc             	and    $0xfffffffc,%eax
81001727:	39 45 cc             	cmp    %eax,-0x34(%ebp)
8100172a:	72 e1                	jb     8100170d <_malloc_r+0x4be>
8100172c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100172f:	8b 40 0c             	mov    0xc(%eax),%eax
81001732:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001735:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001738:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100173b:	89 50 0c             	mov    %edx,0xc(%eax)
8100173e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001741:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001744:	89 50 08             	mov    %edx,0x8(%eax)
81001747:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100174a:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100174d:	89 50 08             	mov    %edx,0x8(%eax)
81001750:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001753:	8b 50 08             	mov    0x8(%eax),%edx
81001756:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001759:	89 50 0c             	mov    %edx,0xc(%eax)
8100175c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100175f:	8d 50 03             	lea    0x3(%eax),%edx
81001762:	85 c0                	test   %eax,%eax
81001764:	0f 48 c2             	cmovs  %edx,%eax
81001767:	c1 f8 02             	sar    $0x2,%eax
8100176a:	ba 01 00 00 00       	mov    $0x1,%edx
8100176f:	89 c1                	mov    %eax,%ecx
81001771:	d3 e2                	shl    %cl,%edx
81001773:	89 d0                	mov    %edx,%eax
81001775:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001778:	b8 40 50 00 81       	mov    $0x81005040,%eax
8100177d:	8b 40 04             	mov    0x4(%eax),%eax
81001780:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81001783:	0f 87 13 02 00 00    	ja     8100199c <_malloc_r+0x74d>
81001789:	b8 40 50 00 81       	mov    $0x81005040,%eax
8100178e:	8b 40 04             	mov    0x4(%eax),%eax
81001791:	23 45 e4             	and    -0x1c(%ebp),%eax
81001794:	85 c0                	test   %eax,%eax
81001796:	75 27                	jne    810017bf <_malloc_r+0x570>
81001798:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100179b:	83 e0 fc             	and    $0xfffffffc,%eax
8100179e:	83 c0 04             	add    $0x4,%eax
810017a1:	89 45 f0             	mov    %eax,-0x10(%ebp)
810017a4:	d1 65 e4             	shll   -0x1c(%ebp)
810017a7:	eb 07                	jmp    810017b0 <_malloc_r+0x561>
810017a9:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
810017ad:	d1 65 e4             	shll   -0x1c(%ebp)
810017b0:	b8 40 50 00 81       	mov    $0x81005040,%eax
810017b5:	8b 40 04             	mov    0x4(%eax),%eax
810017b8:	23 45 e4             	and    -0x1c(%ebp),%eax
810017bb:	85 c0                	test   %eax,%eax
810017bd:	74 ea                	je     810017a9 <_malloc_r+0x55a>
810017bf:	8b 45 f0             	mov    -0x10(%ebp),%eax
810017c2:	89 45 e0             	mov    %eax,-0x20(%ebp)
810017c5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810017c8:	83 c0 01             	add    $0x1,%eax
810017cb:	01 c0                	add    %eax,%eax
810017cd:	c1 e0 02             	shl    $0x2,%eax
810017d0:	05 40 50 00 81       	add    $0x81005040,%eax
810017d5:	83 e8 08             	sub    $0x8,%eax
810017d8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810017db:	8b 45 ec             	mov    -0x14(%ebp),%eax
810017de:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810017e1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810017e4:	8b 40 0c             	mov    0xc(%eax),%eax
810017e7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810017ea:	e9 22 01 00 00       	jmp    81001911 <_malloc_r+0x6c2>
810017ef:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017f2:	8b 40 04             	mov    0x4(%eax),%eax
810017f5:	83 e0 fc             	and    $0xfffffffc,%eax
810017f8:	89 45 cc             	mov    %eax,-0x34(%ebp)
810017fb:	8b 45 cc             	mov    -0x34(%ebp),%eax
810017fe:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001801:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001804:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001808:	0f 8e 9e 00 00 00    	jle    810018ac <_malloc_r+0x65d>
8100180e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001811:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001814:	01 d0                	add    %edx,%eax
81001816:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001819:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100181c:	83 c8 01             	or     $0x1,%eax
8100181f:	89 c2                	mov    %eax,%edx
81001821:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001824:	89 50 04             	mov    %edx,0x4(%eax)
81001827:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100182a:	8b 40 0c             	mov    0xc(%eax),%eax
8100182d:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001830:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001833:	8b 40 08             	mov    0x8(%eax),%eax
81001836:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001839:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100183c:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100183f:	89 50 0c             	mov    %edx,0xc(%eax)
81001842:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001845:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001848:	89 50 08             	mov    %edx,0x8(%eax)
8100184b:	b8 48 50 00 81       	mov    $0x81005048,%eax
81001850:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81001853:	89 50 0c             	mov    %edx,0xc(%eax)
81001856:	ba 48 50 00 81       	mov    $0x81005048,%edx
8100185b:	8b 40 0c             	mov    0xc(%eax),%eax
8100185e:	89 42 08             	mov    %eax,0x8(%edx)
81001861:	ba 48 50 00 81       	mov    $0x81005048,%edx
81001866:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001869:	89 50 0c             	mov    %edx,0xc(%eax)
8100186c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100186f:	8b 50 0c             	mov    0xc(%eax),%edx
81001872:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001875:	89 50 08             	mov    %edx,0x8(%eax)
81001878:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100187b:	83 c8 01             	or     $0x1,%eax
8100187e:	89 c2                	mov    %eax,%edx
81001880:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001883:	89 50 04             	mov    %edx,0x4(%eax)
81001886:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001889:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100188c:	01 c2                	add    %eax,%edx
8100188e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001891:	89 02                	mov    %eax,(%edx)
81001893:	83 ec 0c             	sub    $0xc,%esp
81001896:	ff 75 08             	push   0x8(%ebp)
81001899:	e8 dd 03 00 00       	call   81001c7b <__malloc_unlock>
8100189e:	83 c4 10             	add    $0x10,%esp
810018a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018a4:	83 c0 08             	add    $0x8,%eax
810018a7:	e9 c0 01 00 00       	jmp    81001a6c <_malloc_r+0x81d>
810018ac:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810018b0:	78 56                	js     81001908 <_malloc_r+0x6b9>
810018b2:	8b 55 f4             	mov    -0xc(%ebp),%edx
810018b5:	8b 45 cc             	mov    -0x34(%ebp),%eax
810018b8:	01 d0                	add    %edx,%eax
810018ba:	8b 50 04             	mov    0x4(%eax),%edx
810018bd:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810018c0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810018c3:	01 c8                	add    %ecx,%eax
810018c5:	83 ca 01             	or     $0x1,%edx
810018c8:	89 50 04             	mov    %edx,0x4(%eax)
810018cb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018ce:	8b 40 0c             	mov    0xc(%eax),%eax
810018d1:	89 45 d8             	mov    %eax,-0x28(%ebp)
810018d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018d7:	8b 40 08             	mov    0x8(%eax),%eax
810018da:	89 45 dc             	mov    %eax,-0x24(%ebp)
810018dd:	8b 45 dc             	mov    -0x24(%ebp),%eax
810018e0:	8b 55 d8             	mov    -0x28(%ebp),%edx
810018e3:	89 50 0c             	mov    %edx,0xc(%eax)
810018e6:	8b 45 d8             	mov    -0x28(%ebp),%eax
810018e9:	8b 55 dc             	mov    -0x24(%ebp),%edx
810018ec:	89 50 08             	mov    %edx,0x8(%eax)
810018ef:	83 ec 0c             	sub    $0xc,%esp
810018f2:	ff 75 08             	push   0x8(%ebp)
810018f5:	e8 81 03 00 00       	call   81001c7b <__malloc_unlock>
810018fa:	83 c4 10             	add    $0x10,%esp
810018fd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001900:	83 c0 08             	add    $0x8,%eax
81001903:	e9 64 01 00 00       	jmp    81001a6c <_malloc_r+0x81d>
81001908:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100190b:	8b 40 0c             	mov    0xc(%eax),%eax
8100190e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001911:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001914:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001917:	0f 85 d2 fe ff ff    	jne    810017ef <_malloc_r+0x5a0>
8100191d:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81001921:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001925:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001928:	83 e0 03             	and    $0x3,%eax
8100192b:	85 c0                	test   %eax,%eax
8100192d:	0f 85 ae fe ff ff    	jne    810017e1 <_malloc_r+0x592>
81001933:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001936:	83 e0 03             	and    $0x3,%eax
81001939:	85 c0                	test   %eax,%eax
8100193b:	75 19                	jne    81001956 <_malloc_r+0x707>
8100193d:	b8 40 50 00 81       	mov    $0x81005040,%eax
81001942:	8b 48 04             	mov    0x4(%eax),%ecx
81001945:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001948:	f7 d0                	not    %eax
8100194a:	ba 40 50 00 81       	mov    $0x81005040,%edx
8100194f:	21 c8                	and    %ecx,%eax
81001951:	89 42 04             	mov    %eax,0x4(%edx)
81001954:	eb 13                	jmp    81001969 <_malloc_r+0x71a>
81001956:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
8100195a:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
8100195e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001961:	8b 40 08             	mov    0x8(%eax),%eax
81001964:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
81001967:	74 ca                	je     81001933 <_malloc_r+0x6e4>
81001969:	d1 65 e4             	shll   -0x1c(%ebp)
8100196c:	b8 40 50 00 81       	mov    $0x81005040,%eax
81001971:	8b 40 04             	mov    0x4(%eax),%eax
81001974:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81001977:	77 23                	ja     8100199c <_malloc_r+0x74d>
81001979:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100197d:	74 1d                	je     8100199c <_malloc_r+0x74d>
8100197f:	eb 07                	jmp    81001988 <_malloc_r+0x739>
81001981:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81001985:	d1 65 e4             	shll   -0x1c(%ebp)
81001988:	b8 40 50 00 81       	mov    $0x81005040,%eax
8100198d:	8b 40 04             	mov    0x4(%eax),%eax
81001990:	23 45 e4             	and    -0x1c(%ebp),%eax
81001993:	85 c0                	test   %eax,%eax
81001995:	74 ea                	je     81001981 <_malloc_r+0x732>
81001997:	e9 23 fe ff ff       	jmp    810017bf <_malloc_r+0x570>
8100199c:	b8 40 50 00 81       	mov    $0x81005040,%eax
810019a1:	8b 40 08             	mov    0x8(%eax),%eax
810019a4:	8b 40 04             	mov    0x4(%eax),%eax
810019a7:	83 e0 fc             	and    $0xfffffffc,%eax
810019aa:	2b 45 d0             	sub    -0x30(%ebp),%eax
810019ad:	89 45 e8             	mov    %eax,-0x18(%ebp)
810019b0:	b8 40 50 00 81       	mov    $0x81005040,%eax
810019b5:	8b 40 08             	mov    0x8(%eax),%eax
810019b8:	8b 40 04             	mov    0x4(%eax),%eax
810019bb:	83 e0 fc             	and    $0xfffffffc,%eax
810019be:	39 45 d0             	cmp    %eax,-0x30(%ebp)
810019c1:	77 06                	ja     810019c9 <_malloc_r+0x77a>
810019c3:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810019c7:	7f 53                	jg     81001a1c <_malloc_r+0x7cd>
810019c9:	83 ec 08             	sub    $0x8,%esp
810019cc:	ff 75 d0             	push   -0x30(%ebp)
810019cf:	ff 75 08             	push   0x8(%ebp)
810019d2:	e8 e5 f5 ff ff       	call   81000fbc <malloc_extend_top>
810019d7:	83 c4 10             	add    $0x10,%esp
810019da:	b8 40 50 00 81       	mov    $0x81005040,%eax
810019df:	8b 40 08             	mov    0x8(%eax),%eax
810019e2:	8b 40 04             	mov    0x4(%eax),%eax
810019e5:	83 e0 fc             	and    $0xfffffffc,%eax
810019e8:	2b 45 d0             	sub    -0x30(%ebp),%eax
810019eb:	89 45 e8             	mov    %eax,-0x18(%ebp)
810019ee:	b8 40 50 00 81       	mov    $0x81005040,%eax
810019f3:	8b 40 08             	mov    0x8(%eax),%eax
810019f6:	8b 40 04             	mov    0x4(%eax),%eax
810019f9:	83 e0 fc             	and    $0xfffffffc,%eax
810019fc:	39 45 d0             	cmp    %eax,-0x30(%ebp)
810019ff:	77 06                	ja     81001a07 <_malloc_r+0x7b8>
81001a01:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001a05:	7f 15                	jg     81001a1c <_malloc_r+0x7cd>
81001a07:	83 ec 0c             	sub    $0xc,%esp
81001a0a:	ff 75 08             	push   0x8(%ebp)
81001a0d:	e8 69 02 00 00       	call   81001c7b <__malloc_unlock>
81001a12:	83 c4 10             	add    $0x10,%esp
81001a15:	b8 00 00 00 00       	mov    $0x0,%eax
81001a1a:	eb 50                	jmp    81001a6c <_malloc_r+0x81d>
81001a1c:	b8 40 50 00 81       	mov    $0x81005040,%eax
81001a21:	8b 40 08             	mov    0x8(%eax),%eax
81001a24:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001a27:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001a2a:	83 c8 01             	or     $0x1,%eax
81001a2d:	89 c2                	mov    %eax,%edx
81001a2f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a32:	89 50 04             	mov    %edx,0x4(%eax)
81001a35:	ba 40 50 00 81       	mov    $0x81005040,%edx
81001a3a:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001a3d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001a40:	01 c8                	add    %ecx,%eax
81001a42:	89 42 08             	mov    %eax,0x8(%edx)
81001a45:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001a48:	83 c8 01             	or     $0x1,%eax
81001a4b:	89 c2                	mov    %eax,%edx
81001a4d:	b8 40 50 00 81       	mov    $0x81005040,%eax
81001a52:	8b 40 08             	mov    0x8(%eax),%eax
81001a55:	89 50 04             	mov    %edx,0x4(%eax)
81001a58:	83 ec 0c             	sub    $0xc,%esp
81001a5b:	ff 75 08             	push   0x8(%ebp)
81001a5e:	e8 18 02 00 00       	call   81001c7b <__malloc_unlock>
81001a63:	83 c4 10             	add    $0x10,%esp
81001a66:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a69:	83 c0 08             	add    $0x8,%eax
81001a6c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001a6f:	c9                   	leave  
81001a70:	c3                   	ret    
81001a71:	66 90                	xchg   %ax,%ax
81001a73:	66 90                	xchg   %ax,%ax
81001a75:	66 90                	xchg   %ax,%ax
81001a77:	66 90                	xchg   %ax,%ax
81001a79:	66 90                	xchg   %ax,%ax
81001a7b:	66 90                	xchg   %ax,%ax
81001a7d:	66 90                	xchg   %ax,%ax
81001a7f:	90                   	nop

81001a80 <memchr>:
81001a80:	55                   	push   %ebp
81001a81:	89 e5                	mov    %esp,%ebp
81001a83:	57                   	push   %edi
81001a84:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001a88:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001a8b:	8b 7d 08             	mov    0x8(%ebp),%edi
81001a8e:	31 d2                	xor    %edx,%edx
81001a90:	85 c9                	test   %ecx,%ecx
81001a92:	74 79                	je     81001b0d <L20>
81001a94:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001a9a:	74 28                	je     81001ac4 <L5>
81001a9c:	3a 07                	cmp    (%edi),%al
81001a9e:	74 6a                	je     81001b0a <L15>
81001aa0:	47                   	inc    %edi
81001aa1:	49                   	dec    %ecx
81001aa2:	74 69                	je     81001b0d <L20>
81001aa4:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001aaa:	74 18                	je     81001ac4 <L5>
81001aac:	3a 07                	cmp    (%edi),%al
81001aae:	74 5a                	je     81001b0a <L15>
81001ab0:	47                   	inc    %edi
81001ab1:	49                   	dec    %ecx
81001ab2:	74 59                	je     81001b0d <L20>
81001ab4:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001aba:	74 08                	je     81001ac4 <L5>
81001abc:	3a 07                	cmp    (%edi),%al
81001abe:	74 4a                	je     81001b0a <L15>
81001ac0:	47                   	inc    %edi
81001ac1:	49                   	dec    %ecx
81001ac2:	74 49                	je     81001b0d <L20>

81001ac4 <L5>:
81001ac4:	88 c4                	mov    %al,%ah
81001ac6:	89 c2                	mov    %eax,%edx
81001ac8:	c1 e2 10             	shl    $0x10,%edx
81001acb:	09 d0                	or     %edx,%eax
81001acd:	53                   	push   %ebx
81001ace:	66 90                	xchg   %ax,%ax

81001ad0 <L8>:
81001ad0:	83 e9 04             	sub    $0x4,%ecx
81001ad3:	72 1c                	jb     81001af1 <L9>
81001ad5:	8b 17                	mov    (%edi),%edx
81001ad7:	83 c7 04             	add    $0x4,%edi
81001ada:	31 c2                	xor    %eax,%edx
81001adc:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81001ae2:	f7 d2                	not    %edx
81001ae4:	21 d3                	and    %edx,%ebx
81001ae6:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
81001aec:	74 e2                	je     81001ad0 <L8>
81001aee:	83 ef 04             	sub    $0x4,%edi

81001af1 <L9>:
81001af1:	5b                   	pop    %ebx
81001af2:	31 d2                	xor    %edx,%edx
81001af4:	83 c1 04             	add    $0x4,%ecx
81001af7:	74 14                	je     81001b0d <L20>
81001af9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81001b00 <L10>:
81001b00:	3a 07                	cmp    (%edi),%al
81001b02:	74 06                	je     81001b0a <L15>
81001b04:	47                   	inc    %edi
81001b05:	49                   	dec    %ecx
81001b06:	75 f8                	jne    81001b00 <L10>
81001b08:	31 ff                	xor    %edi,%edi

81001b0a <L15>:
81001b0a:	4a                   	dec    %edx
81001b0b:	21 fa                	and    %edi,%edx

81001b0d <L20>:
81001b0d:	89 d0                	mov    %edx,%eax
81001b0f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001b12:	5f                   	pop    %edi
81001b13:	c9                   	leave  
81001b14:	c3                   	ret    
81001b15:	66 90                	xchg   %ax,%ax
81001b17:	90                   	nop

81001b18 <memcpy>:
81001b18:	55                   	push   %ebp
81001b19:	89 e5                	mov    %esp,%ebp
81001b1b:	56                   	push   %esi
81001b1c:	57                   	push   %edi
81001b1d:	53                   	push   %ebx
81001b1e:	8b 7d 08             	mov    0x8(%ebp),%edi
81001b21:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001b24:	8b 75 0c             	mov    0xc(%ebp),%esi
81001b27:	fc                   	cld    
81001b28:	83 f9 08             	cmp    $0x8,%ecx
81001b2b:	76 26                	jbe    81001b53 <memcpy+0x3b>
81001b2d:	89 fa                	mov    %edi,%edx
81001b2f:	89 cb                	mov    %ecx,%ebx
81001b31:	83 e2 03             	and    $0x3,%edx
81001b34:	74 10                	je     81001b46 <memcpy+0x2e>
81001b36:	b9 04 00 00 00       	mov    $0x4,%ecx
81001b3b:	29 d1                	sub    %edx,%ecx
81001b3d:	83 e1 03             	and    $0x3,%ecx
81001b40:	29 cb                	sub    %ecx,%ebx
81001b42:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b44:	89 d9                	mov    %ebx,%ecx
81001b46:	c1 e9 02             	shr    $0x2,%ecx
81001b49:	8d 76 00             	lea    0x0(%esi),%esi
81001b4c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001b4e:	89 d9                	mov    %ebx,%ecx
81001b50:	83 e1 03             	and    $0x3,%ecx
81001b53:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b55:	8b 45 08             	mov    0x8(%ebp),%eax
81001b58:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001b5b:	5b                   	pop    %ebx
81001b5c:	5f                   	pop    %edi
81001b5d:	5e                   	pop    %esi
81001b5e:	c9                   	leave  
81001b5f:	c3                   	ret    

81001b60 <memmove>:
81001b60:	55                   	push   %ebp
81001b61:	89 e5                	mov    %esp,%ebp
81001b63:	56                   	push   %esi
81001b64:	57                   	push   %edi
81001b65:	53                   	push   %ebx
81001b66:	8b 7d 08             	mov    0x8(%ebp),%edi
81001b69:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001b6c:	8b 75 0c             	mov    0xc(%ebp),%esi
81001b6f:	fc                   	cld    
81001b70:	39 fe                	cmp    %edi,%esi
81001b72:	73 43                	jae    81001bb7 <memmove+0x57>
81001b74:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81001b78:	39 df                	cmp    %ebx,%edi
81001b7a:	77 3b                	ja     81001bb7 <memmove+0x57>
81001b7c:	01 ce                	add    %ecx,%esi
81001b7e:	01 cf                	add    %ecx,%edi
81001b80:	fd                   	std    
81001b81:	83 f9 08             	cmp    $0x8,%ecx
81001b84:	76 2b                	jbe    81001bb1 <memmove+0x51>
81001b86:	89 fa                	mov    %edi,%edx
81001b88:	89 cb                	mov    %ecx,%ebx
81001b8a:	83 e2 03             	and    $0x3,%edx
81001b8d:	74 0c                	je     81001b9b <memmove+0x3b>
81001b8f:	89 d1                	mov    %edx,%ecx
81001b91:	4e                   	dec    %esi
81001b92:	4f                   	dec    %edi
81001b93:	29 cb                	sub    %ecx,%ebx
81001b95:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b97:	89 d9                	mov    %ebx,%ecx
81001b99:	46                   	inc    %esi
81001b9a:	47                   	inc    %edi
81001b9b:	c1 e9 02             	shr    $0x2,%ecx
81001b9e:	83 ee 04             	sub    $0x4,%esi
81001ba1:	83 ef 04             	sub    $0x4,%edi
81001ba4:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001ba6:	83 c6 04             	add    $0x4,%esi
81001ba9:	83 c7 04             	add    $0x4,%edi
81001bac:	89 d9                	mov    %ebx,%ecx
81001bae:	83 e1 03             	and    $0x3,%ecx
81001bb1:	4e                   	dec    %esi
81001bb2:	4f                   	dec    %edi
81001bb3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001bb5:	eb 2a                	jmp    81001be1 <memmove+0x81>
81001bb7:	83 f9 08             	cmp    $0x8,%ecx
81001bba:	76 23                	jbe    81001bdf <memmove+0x7f>
81001bbc:	89 fa                	mov    %edi,%edx
81001bbe:	89 cb                	mov    %ecx,%ebx
81001bc0:	83 e2 03             	and    $0x3,%edx
81001bc3:	74 10                	je     81001bd5 <memmove+0x75>
81001bc5:	b9 04 00 00 00       	mov    $0x4,%ecx
81001bca:	29 d1                	sub    %edx,%ecx
81001bcc:	83 e1 03             	and    $0x3,%ecx
81001bcf:	29 cb                	sub    %ecx,%ebx
81001bd1:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001bd3:	89 d9                	mov    %ebx,%ecx
81001bd5:	c1 e9 02             	shr    $0x2,%ecx
81001bd8:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001bda:	89 d9                	mov    %ebx,%ecx
81001bdc:	83 e1 03             	and    $0x3,%ecx
81001bdf:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001be1:	8b 45 08             	mov    0x8(%ebp),%eax
81001be4:	fc                   	cld    
81001be5:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001be8:	5b                   	pop    %ebx
81001be9:	5f                   	pop    %edi
81001bea:	5e                   	pop    %esi
81001beb:	c9                   	leave  
81001bec:	c3                   	ret    

81001bed <memset>:
81001bed:	55                   	push   %ebp
81001bee:	89 e5                	mov    %esp,%ebp
81001bf0:	57                   	push   %edi
81001bf1:	8b 7d 08             	mov    0x8(%ebp),%edi
81001bf4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001bf8:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001bfb:	fc                   	cld    
81001bfc:	83 f9 10             	cmp    $0x10,%ecx
81001bff:	76 69                	jbe    81001c6a <memset+0x7d>
81001c01:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001c07:	74 4c                	je     81001c55 <memset+0x68>
81001c09:	88 07                	mov    %al,(%edi)
81001c0b:	47                   	inc    %edi
81001c0c:	49                   	dec    %ecx
81001c0d:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001c13:	74 40                	je     81001c55 <memset+0x68>
81001c15:	88 07                	mov    %al,(%edi)
81001c17:	47                   	inc    %edi
81001c18:	49                   	dec    %ecx
81001c19:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001c1f:	74 34                	je     81001c55 <memset+0x68>
81001c21:	88 07                	mov    %al,(%edi)
81001c23:	47                   	inc    %edi
81001c24:	49                   	dec    %ecx
81001c25:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001c2b:	74 28                	je     81001c55 <memset+0x68>
81001c2d:	88 07                	mov    %al,(%edi)
81001c2f:	47                   	inc    %edi
81001c30:	49                   	dec    %ecx
81001c31:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001c37:	74 1c                	je     81001c55 <memset+0x68>
81001c39:	88 07                	mov    %al,(%edi)
81001c3b:	47                   	inc    %edi
81001c3c:	49                   	dec    %ecx
81001c3d:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001c43:	74 10                	je     81001c55 <memset+0x68>
81001c45:	88 07                	mov    %al,(%edi)
81001c47:	47                   	inc    %edi
81001c48:	49                   	dec    %ecx
81001c49:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001c4f:	74 04                	je     81001c55 <memset+0x68>
81001c51:	88 07                	mov    %al,(%edi)
81001c53:	47                   	inc    %edi
81001c54:	49                   	dec    %ecx
81001c55:	88 c4                	mov    %al,%ah
81001c57:	89 c2                	mov    %eax,%edx
81001c59:	c1 e2 10             	shl    $0x10,%edx
81001c5c:	09 d0                	or     %edx,%eax
81001c5e:	89 ca                	mov    %ecx,%edx
81001c60:	c1 e9 02             	shr    $0x2,%ecx
81001c63:	83 e2 03             	and    $0x3,%edx
81001c66:	f3 ab                	rep stos %eax,%es:(%edi)
81001c68:	89 d1                	mov    %edx,%ecx
81001c6a:	f3 aa                	rep stos %al,%es:(%edi)
81001c6c:	8b 45 08             	mov    0x8(%ebp),%eax
81001c6f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001c72:	5f                   	pop    %edi
81001c73:	c9                   	leave  
81001c74:	c3                   	ret    

81001c75 <__malloc_lock>:
81001c75:	55                   	push   %ebp
81001c76:	89 e5                	mov    %esp,%ebp
81001c78:	90                   	nop
81001c79:	5d                   	pop    %ebp
81001c7a:	c3                   	ret    

81001c7b <__malloc_unlock>:
81001c7b:	55                   	push   %ebp
81001c7c:	89 e5                	mov    %esp,%ebp
81001c7e:	90                   	nop
81001c7f:	5d                   	pop    %ebp
81001c80:	c3                   	ret    

81001c81 <__sprint_r>:
81001c81:	55                   	push   %ebp
81001c82:	89 e5                	mov    %esp,%ebp
81001c84:	56                   	push   %esi
81001c85:	53                   	push   %ebx
81001c86:	83 ec 10             	sub    $0x10,%esp
81001c89:	8b 5d 10             	mov    0x10(%ebp),%ebx
81001c8c:	be 00 00 00 00       	mov    $0x0,%esi
81001c91:	8b 43 08             	mov    0x8(%ebx),%eax
81001c94:	85 c0                	test   %eax,%eax
81001c96:	75 11                	jne    81001ca9 <__sprint_r+0x28>
81001c98:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81001c9f:	b8 00 00 00 00       	mov    $0x0,%eax
81001ca4:	e9 ad 00 00 00       	jmp    81001d56 <__sprint_r+0xd5>
81001ca9:	8b 45 0c             	mov    0xc(%ebp),%eax
81001cac:	8b 40 64             	mov    0x64(%eax),%eax
81001caf:	25 00 20 00 00       	and    $0x2000,%eax
81001cb4:	85 c0                	test   %eax,%eax
81001cb6:	74 7a                	je     81001d32 <__sprint_r+0xb1>
81001cb8:	8b 03                	mov    (%ebx),%eax
81001cba:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001cbd:	eb 6a                	jmp    81001d29 <__sprint_r+0xa8>
81001cbf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001cc2:	8b 00                	mov    (%eax),%eax
81001cc4:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001cc7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001cca:	8b 40 04             	mov    0x4(%eax),%eax
81001ccd:	c1 e8 02             	shr    $0x2,%eax
81001cd0:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001cd3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001cda:	eb 33                	jmp    81001d0f <__sprint_r+0x8e>
81001cdc:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001cdf:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001ce6:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001ce9:	01 d0                	add    %edx,%eax
81001ceb:	8b 00                	mov    (%eax),%eax
81001ced:	83 ec 04             	sub    $0x4,%esp
81001cf0:	ff 75 0c             	push   0xc(%ebp)
81001cf3:	50                   	push   %eax
81001cf4:	ff 75 08             	push   0x8(%ebp)
81001cf7:	e8 0b 1d 00 00       	call   81003a07 <_fputwc_r>
81001cfc:	83 c4 10             	add    $0x10,%esp
81001cff:	83 f8 ff             	cmp    $0xffffffff,%eax
81001d02:	75 07                	jne    81001d0b <__sprint_r+0x8a>
81001d04:	be ff ff ff ff       	mov    $0xffffffff,%esi
81001d09:	eb 3b                	jmp    81001d46 <__sprint_r+0xc5>
81001d0b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001d0f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001d12:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81001d15:	7c c5                	jl     81001cdc <__sprint_r+0x5b>
81001d17:	8b 43 08             	mov    0x8(%ebx),%eax
81001d1a:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001d1d:	c1 e2 02             	shl    $0x2,%edx
81001d20:	29 d0                	sub    %edx,%eax
81001d22:	89 43 08             	mov    %eax,0x8(%ebx)
81001d25:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
81001d29:	8b 43 08             	mov    0x8(%ebx),%eax
81001d2c:	85 c0                	test   %eax,%eax
81001d2e:	75 8f                	jne    81001cbf <__sprint_r+0x3e>
81001d30:	eb 14                	jmp    81001d46 <__sprint_r+0xc5>
81001d32:	83 ec 04             	sub    $0x4,%esp
81001d35:	53                   	push   %ebx
81001d36:	ff 75 0c             	push   0xc(%ebp)
81001d39:	ff 75 08             	push   0x8(%ebp)
81001d3c:	e8 0a ed ff ff       	call   81000a4b <__sfvwrite_r>
81001d41:	83 c4 10             	add    $0x10,%esp
81001d44:	89 c6                	mov    %eax,%esi
81001d46:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81001d4d:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81001d54:	89 f0                	mov    %esi,%eax
81001d56:	8d 65 f8             	lea    -0x8(%ebp),%esp
81001d59:	5b                   	pop    %ebx
81001d5a:	5e                   	pop    %esi
81001d5b:	5d                   	pop    %ebp
81001d5c:	c3                   	ret    

81001d5d <__sfputc_r>:
81001d5d:	55                   	push   %ebp
81001d5e:	89 e5                	mov    %esp,%ebp
81001d60:	83 ec 08             	sub    $0x8,%esp
81001d63:	8b 45 10             	mov    0x10(%ebp),%eax
81001d66:	8b 40 08             	mov    0x8(%eax),%eax
81001d69:	8d 50 ff             	lea    -0x1(%eax),%edx
81001d6c:	8b 45 10             	mov    0x10(%ebp),%eax
81001d6f:	89 50 08             	mov    %edx,0x8(%eax)
81001d72:	8b 45 10             	mov    0x10(%ebp),%eax
81001d75:	8b 40 08             	mov    0x8(%eax),%eax
81001d78:	85 c0                	test   %eax,%eax
81001d7a:	79 17                	jns    81001d93 <__sfputc_r+0x36>
81001d7c:	8b 45 10             	mov    0x10(%ebp),%eax
81001d7f:	8b 50 08             	mov    0x8(%eax),%edx
81001d82:	8b 45 10             	mov    0x10(%ebp),%eax
81001d85:	8b 40 18             	mov    0x18(%eax),%eax
81001d88:	39 c2                	cmp    %eax,%edx
81001d8a:	7c 21                	jl     81001dad <__sfputc_r+0x50>
81001d8c:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d8f:	3c 0a                	cmp    $0xa,%al
81001d91:	74 1a                	je     81001dad <__sfputc_r+0x50>
81001d93:	8b 45 10             	mov    0x10(%ebp),%eax
81001d96:	8b 00                	mov    (%eax),%eax
81001d98:	8d 48 01             	lea    0x1(%eax),%ecx
81001d9b:	8b 55 10             	mov    0x10(%ebp),%edx
81001d9e:	89 0a                	mov    %ecx,(%edx)
81001da0:	8b 55 0c             	mov    0xc(%ebp),%edx
81001da3:	88 10                	mov    %dl,(%eax)
81001da5:	0f b6 00             	movzbl (%eax),%eax
81001da8:	0f b6 c0             	movzbl %al,%eax
81001dab:	eb 14                	jmp    81001dc1 <__sfputc_r+0x64>
81001dad:	83 ec 04             	sub    $0x4,%esp
81001db0:	ff 75 10             	push   0x10(%ebp)
81001db3:	ff 75 0c             	push   0xc(%ebp)
81001db6:	ff 75 08             	push   0x8(%ebp)
81001db9:	e8 44 14 00 00       	call   81003202 <__swbuf_r>
81001dbe:	83 c4 10             	add    $0x10,%esp
81001dc1:	c9                   	leave  
81001dc2:	c3                   	ret    

81001dc3 <__sfputs_r>:
81001dc3:	55                   	push   %ebp
81001dc4:	89 e5                	mov    %esp,%ebp
81001dc6:	53                   	push   %ebx
81001dc7:	83 ec 14             	sub    $0x14,%esp
81001dca:	8b 45 0c             	mov    0xc(%ebp),%eax
81001dcd:	8b 40 64             	mov    0x64(%eax),%eax
81001dd0:	25 00 20 00 00       	and    $0x2000,%eax
81001dd5:	85 c0                	test   %eax,%eax
81001dd7:	74 4c                	je     81001e25 <__sfputs_r+0x62>
81001dd9:	8b 45 10             	mov    0x10(%ebp),%eax
81001ddc:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001ddf:	bb 00 00 00 00       	mov    $0x0,%ebx
81001de4:	eb 31                	jmp    81001e17 <__sfputs_r+0x54>
81001de6:	89 d8                	mov    %ebx,%eax
81001de8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001def:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001df2:	01 d0                	add    %edx,%eax
81001df4:	8b 00                	mov    (%eax),%eax
81001df6:	83 ec 04             	sub    $0x4,%esp
81001df9:	ff 75 0c             	push   0xc(%ebp)
81001dfc:	50                   	push   %eax
81001dfd:	ff 75 08             	push   0x8(%ebp)
81001e00:	e8 02 1c 00 00       	call   81003a07 <_fputwc_r>
81001e05:	83 c4 10             	add    $0x10,%esp
81001e08:	83 f8 ff             	cmp    $0xffffffff,%eax
81001e0b:	75 07                	jne    81001e14 <__sfputs_r+0x51>
81001e0d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001e12:	eb 52                	jmp    81001e66 <__sfputs_r+0xa3>
81001e14:	83 c3 01             	add    $0x1,%ebx
81001e17:	8b 45 14             	mov    0x14(%ebp),%eax
81001e1a:	c1 e8 02             	shr    $0x2,%eax
81001e1d:	89 da                	mov    %ebx,%edx
81001e1f:	39 d0                	cmp    %edx,%eax
81001e21:	77 c3                	ja     81001de6 <__sfputs_r+0x23>
81001e23:	eb 3c                	jmp    81001e61 <__sfputs_r+0x9e>
81001e25:	bb 00 00 00 00       	mov    $0x0,%ebx
81001e2a:	eb 2e                	jmp    81001e5a <__sfputs_r+0x97>
81001e2c:	89 da                	mov    %ebx,%edx
81001e2e:	8b 45 10             	mov    0x10(%ebp),%eax
81001e31:	01 d0                	add    %edx,%eax
81001e33:	0f b6 00             	movzbl (%eax),%eax
81001e36:	0f be c0             	movsbl %al,%eax
81001e39:	83 ec 04             	sub    $0x4,%esp
81001e3c:	ff 75 0c             	push   0xc(%ebp)
81001e3f:	50                   	push   %eax
81001e40:	ff 75 08             	push   0x8(%ebp)
81001e43:	e8 15 ff ff ff       	call   81001d5d <__sfputc_r>
81001e48:	83 c4 10             	add    $0x10,%esp
81001e4b:	83 f8 ff             	cmp    $0xffffffff,%eax
81001e4e:	75 07                	jne    81001e57 <__sfputs_r+0x94>
81001e50:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001e55:	eb 0f                	jmp    81001e66 <__sfputs_r+0xa3>
81001e57:	83 c3 01             	add    $0x1,%ebx
81001e5a:	89 d8                	mov    %ebx,%eax
81001e5c:	39 45 14             	cmp    %eax,0x14(%ebp)
81001e5f:	77 cb                	ja     81001e2c <__sfputs_r+0x69>
81001e61:	b8 00 00 00 00       	mov    $0x0,%eax
81001e66:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001e69:	c9                   	leave  
81001e6a:	c3                   	ret    

81001e6b <vfiprintf>:
81001e6b:	55                   	push   %ebp
81001e6c:	89 e5                	mov    %esp,%ebp
81001e6e:	83 ec 18             	sub    $0x18,%esp
81001e71:	a1 24 50 00 81       	mov    0x81005024,%eax
81001e76:	ff 75 10             	push   0x10(%ebp)
81001e79:	ff 75 0c             	push   0xc(%ebp)
81001e7c:	ff 75 08             	push   0x8(%ebp)
81001e7f:	50                   	push   %eax
81001e80:	e8 0b 00 00 00       	call   81001e90 <_vfiprintf_r>
81001e85:	83 c4 10             	add    $0x10,%esp
81001e88:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001e8b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e8e:	c9                   	leave  
81001e8f:	c3                   	ret    

81001e90 <_vfiprintf_r>:
81001e90:	55                   	push   %ebp
81001e91:	89 e5                	mov    %esp,%ebp
81001e93:	57                   	push   %edi
81001e94:	56                   	push   %esi
81001e95:	53                   	push   %ebx
81001e96:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
81001e9c:	c7 45 e4 c3 1d 00 81 	movl   $0x81001dc3,-0x1c(%ebp)
81001ea3:	8b 45 08             	mov    0x8(%ebp),%eax
81001ea6:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001ea9:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81001ead:	74 18                	je     81001ec7 <_vfiprintf_r+0x37>
81001eaf:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001eb2:	8b 40 38             	mov    0x38(%eax),%eax
81001eb5:	85 c0                	test   %eax,%eax
81001eb7:	75 0e                	jne    81001ec7 <_vfiprintf_r+0x37>
81001eb9:	83 ec 0c             	sub    $0xc,%esp
81001ebc:	ff 75 e0             	push   -0x20(%ebp)
81001ebf:	e8 7a ea ff ff       	call   8100093e <__sinit>
81001ec4:	83 c4 10             	add    $0x10,%esp
81001ec7:	8b 45 0c             	mov    0xc(%ebp),%eax
81001eca:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001ece:	98                   	cwtl   
81001ecf:	83 e0 08             	and    $0x8,%eax
81001ed2:	85 c0                	test   %eax,%eax
81001ed4:	74 0a                	je     81001ee0 <_vfiprintf_r+0x50>
81001ed6:	8b 45 0c             	mov    0xc(%ebp),%eax
81001ed9:	8b 40 10             	mov    0x10(%eax),%eax
81001edc:	85 c0                	test   %eax,%eax
81001ede:	75 1f                	jne    81001eff <_vfiprintf_r+0x6f>
81001ee0:	83 ec 08             	sub    $0x8,%esp
81001ee3:	ff 75 0c             	push   0xc(%ebp)
81001ee6:	ff 75 08             	push   0x8(%ebp)
81001ee9:	e8 8d 14 00 00       	call   8100337b <__swsetup_r>
81001eee:	83 c4 10             	add    $0x10,%esp
81001ef1:	85 c0                	test   %eax,%eax
81001ef3:	74 0a                	je     81001eff <_vfiprintf_r+0x6f>
81001ef5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001efa:	e9 df 02 00 00       	jmp    810021de <_vfiprintf_r+0x34e>
81001eff:	8b 5d 10             	mov    0x10(%ebp),%ebx
81001f02:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
81001f09:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81001f0d:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81001f11:	8b 45 14             	mov    0x14(%ebp),%eax
81001f14:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81001f1a:	89 de                	mov    %ebx,%esi
81001f1c:	eb 03                	jmp    81001f21 <_vfiprintf_r+0x91>
81001f1e:	83 c3 01             	add    $0x1,%ebx
81001f21:	0f b6 03             	movzbl (%ebx),%eax
81001f24:	84 c0                	test   %al,%al
81001f26:	74 07                	je     81001f2f <_vfiprintf_r+0x9f>
81001f28:	0f b6 03             	movzbl (%ebx),%eax
81001f2b:	3c 25                	cmp    $0x25,%al
81001f2d:	75 ef                	jne    81001f1e <_vfiprintf_r+0x8e>
81001f2f:	89 d8                	mov    %ebx,%eax
81001f31:	29 f0                	sub    %esi,%eax
81001f33:	85 c0                	test   %eax,%eax
81001f35:	74 2b                	je     81001f62 <_vfiprintf_r+0xd2>
81001f37:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81001f3d:	50                   	push   %eax
81001f3e:	56                   	push   %esi
81001f3f:	ff 75 0c             	push   0xc(%ebp)
81001f42:	ff 75 08             	push   0x8(%ebp)
81001f45:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001f48:	ff d0                	call   *%eax
81001f4a:	83 c4 10             	add    $0x10,%esp
81001f4d:	83 f8 ff             	cmp    $0xffffffff,%eax
81001f50:	0f 84 68 02 00 00    	je     810021be <_vfiprintf_r+0x32e>
81001f56:	8b 45 94             	mov    -0x6c(%ebp),%eax
81001f59:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81001f5f:	89 45 94             	mov    %eax,-0x6c(%ebp)
81001f62:	0f b6 03             	movzbl (%ebx),%eax
81001f65:	84 c0                	test   %al,%al
81001f67:	0f 84 54 02 00 00    	je     810021c1 <_vfiprintf_r+0x331>
81001f6d:	83 c3 01             	add    $0x1,%ebx
81001f70:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
81001f77:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81001f7e:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81001f85:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
81001f8c:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81001f90:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81001f97:	c7 45 dc 90 48 00 81 	movl   $0x81004890,-0x24(%ebp)
81001f9e:	eb 1b                	jmp    81001fbb <_vfiprintf_r+0x12b>
81001fa0:	8b 55 80             	mov    -0x80(%ebp),%edx
81001fa3:	89 f0                	mov    %esi,%eax
81001fa5:	2b 45 dc             	sub    -0x24(%ebp),%eax
81001fa8:	be 01 00 00 00       	mov    $0x1,%esi
81001fad:	89 c1                	mov    %eax,%ecx
81001faf:	d3 e6                	shl    %cl,%esi
81001fb1:	89 f0                	mov    %esi,%eax
81001fb3:	09 d0                	or     %edx,%eax
81001fb5:	89 45 80             	mov    %eax,-0x80(%ebp)
81001fb8:	83 c3 01             	add    $0x1,%ebx
81001fbb:	0f b6 03             	movzbl (%ebx),%eax
81001fbe:	0f be c0             	movsbl %al,%eax
81001fc1:	83 ec 04             	sub    $0x4,%esp
81001fc4:	6a 05                	push   $0x5
81001fc6:	50                   	push   %eax
81001fc7:	ff 75 dc             	push   -0x24(%ebp)
81001fca:	e8 b1 fa ff ff       	call   81001a80 <memchr>
81001fcf:	83 c4 10             	add    $0x10,%esp
81001fd2:	89 c6                	mov    %eax,%esi
81001fd4:	85 f6                	test   %esi,%esi
81001fd6:	75 c8                	jne    81001fa0 <_vfiprintf_r+0x110>
81001fd8:	8b 45 80             	mov    -0x80(%ebp),%eax
81001fdb:	83 e0 10             	and    $0x10,%eax
81001fde:	85 c0                	test   %eax,%eax
81001fe0:	74 04                	je     81001fe6 <_vfiprintf_r+0x156>
81001fe2:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81001fe6:	8b 45 80             	mov    -0x80(%ebp),%eax
81001fe9:	83 e0 08             	and    $0x8,%eax
81001fec:	85 c0                	test   %eax,%eax
81001fee:	74 04                	je     81001ff4 <_vfiprintf_r+0x164>
81001ff0:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81001ff4:	0f b6 03             	movzbl (%ebx),%eax
81001ff7:	3c 2a                	cmp    $0x2a,%al
81001ff9:	75 50                	jne    8100204b <_vfiprintf_r+0x1bb>
81001ffb:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81002001:	8d 50 04             	lea    0x4(%eax),%edx
81002004:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100200a:	8b 00                	mov    (%eax),%eax
8100200c:	89 45 8c             	mov    %eax,-0x74(%ebp)
8100200f:	8b 45 8c             	mov    -0x74(%ebp),%eax
81002012:	85 c0                	test   %eax,%eax
81002014:	79 11                	jns    81002027 <_vfiprintf_r+0x197>
81002016:	8b 45 8c             	mov    -0x74(%ebp),%eax
81002019:	f7 d8                	neg    %eax
8100201b:	89 45 8c             	mov    %eax,-0x74(%ebp)
8100201e:	8b 45 80             	mov    -0x80(%ebp),%eax
81002021:	83 c8 02             	or     $0x2,%eax
81002024:	89 45 80             	mov    %eax,-0x80(%ebp)
81002027:	83 c3 01             	add    $0x1,%ebx
8100202a:	eb 2d                	jmp    81002059 <_vfiprintf_r+0x1c9>
8100202c:	8b 55 8c             	mov    -0x74(%ebp),%edx
8100202f:	89 d0                	mov    %edx,%eax
81002031:	c1 e0 02             	shl    $0x2,%eax
81002034:	01 d0                	add    %edx,%eax
81002036:	01 c0                	add    %eax,%eax
81002038:	89 c2                	mov    %eax,%edx
8100203a:	0f b6 03             	movzbl (%ebx),%eax
8100203d:	0f be c0             	movsbl %al,%eax
81002040:	83 e8 30             	sub    $0x30,%eax
81002043:	01 d0                	add    %edx,%eax
81002045:	89 45 8c             	mov    %eax,-0x74(%ebp)
81002048:	83 c3 01             	add    $0x1,%ebx
8100204b:	0f b6 03             	movzbl (%ebx),%eax
8100204e:	0f be c0             	movsbl %al,%eax
81002051:	83 e8 30             	sub    $0x30,%eax
81002054:	83 f8 09             	cmp    $0x9,%eax
81002057:	76 d3                	jbe    8100202c <_vfiprintf_r+0x19c>
81002059:	0f b6 03             	movzbl (%ebx),%eax
8100205c:	3c 2e                	cmp    $0x2e,%al
8100205e:	75 67                	jne    810020c7 <_vfiprintf_r+0x237>
81002060:	83 c3 01             	add    $0x1,%ebx
81002063:	0f b6 03             	movzbl (%ebx),%eax
81002066:	3c 2a                	cmp    $0x2a,%al
81002068:	75 27                	jne    81002091 <_vfiprintf_r+0x201>
8100206a:	83 c3 01             	add    $0x1,%ebx
8100206d:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81002073:	8d 50 04             	lea    0x4(%eax),%edx
81002076:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100207c:	8b 00                	mov    (%eax),%eax
8100207e:	89 45 84             	mov    %eax,-0x7c(%ebp)
81002081:	8b 45 84             	mov    -0x7c(%ebp),%eax
81002084:	85 c0                	test   %eax,%eax
81002086:	79 3f                	jns    810020c7 <_vfiprintf_r+0x237>
81002088:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
8100208f:	eb 36                	jmp    810020c7 <_vfiprintf_r+0x237>
81002091:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
81002098:	eb 1f                	jmp    810020b9 <_vfiprintf_r+0x229>
8100209a:	8b 55 84             	mov    -0x7c(%ebp),%edx
8100209d:	89 d0                	mov    %edx,%eax
8100209f:	c1 e0 02             	shl    $0x2,%eax
810020a2:	01 d0                	add    %edx,%eax
810020a4:	01 c0                	add    %eax,%eax
810020a6:	89 c2                	mov    %eax,%edx
810020a8:	0f b6 03             	movzbl (%ebx),%eax
810020ab:	0f be c0             	movsbl %al,%eax
810020ae:	83 e8 30             	sub    $0x30,%eax
810020b1:	01 d0                	add    %edx,%eax
810020b3:	89 45 84             	mov    %eax,-0x7c(%ebp)
810020b6:	83 c3 01             	add    $0x1,%ebx
810020b9:	0f b6 03             	movzbl (%ebx),%eax
810020bc:	0f be c0             	movsbl %al,%eax
810020bf:	83 e8 30             	sub    $0x30,%eax
810020c2:	83 f8 09             	cmp    $0x9,%eax
810020c5:	76 d3                	jbe    8100209a <_vfiprintf_r+0x20a>
810020c7:	c7 45 dc 96 48 00 81 	movl   $0x81004896,-0x24(%ebp)
810020ce:	0f b6 03             	movzbl (%ebx),%eax
810020d1:	0f be c0             	movsbl %al,%eax
810020d4:	83 ec 04             	sub    $0x4,%esp
810020d7:	6a 03                	push   $0x3
810020d9:	50                   	push   %eax
810020da:	ff 75 dc             	push   -0x24(%ebp)
810020dd:	e8 9e f9 ff ff       	call   81001a80 <memchr>
810020e2:	83 c4 10             	add    $0x10,%esp
810020e5:	89 c6                	mov    %eax,%esi
810020e7:	85 f6                	test   %esi,%esi
810020e9:	74 1b                	je     81002106 <_vfiprintf_r+0x276>
810020eb:	8b 55 80             	mov    -0x80(%ebp),%edx
810020ee:	89 f0                	mov    %esi,%eax
810020f0:	2b 45 dc             	sub    -0x24(%ebp),%eax
810020f3:	be 40 00 00 00       	mov    $0x40,%esi
810020f8:	89 c1                	mov    %eax,%ecx
810020fa:	d3 e6                	shl    %cl,%esi
810020fc:	89 f0                	mov    %esi,%eax
810020fe:	09 d0                	or     %edx,%eax
81002100:	89 45 80             	mov    %eax,-0x80(%ebp)
81002103:	83 c3 01             	add    $0x1,%ebx
81002106:	89 d8                	mov    %ebx,%eax
81002108:	8d 58 01             	lea    0x1(%eax),%ebx
8100210b:	0f b6 00             	movzbl (%eax),%eax
8100210e:	88 45 98             	mov    %al,-0x68(%ebp)
81002111:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
81002115:	0f be c0             	movsbl %al,%eax
81002118:	83 ec 04             	sub    $0x4,%esp
8100211b:	6a 06                	push   $0x6
8100211d:	50                   	push   %eax
8100211e:	68 9a 48 00 81       	push   $0x8100489a
81002123:	e8 58 f9 ff ff       	call   81001a80 <memchr>
81002128:	83 c4 10             	add    $0x10,%esp
8100212b:	89 c6                	mov    %eax,%esi
8100212d:	85 f6                	test   %esi,%esi
8100212f:	74 5a                	je     8100218b <_vfiprintf_r+0x2fb>
81002131:	b8 00 00 00 00       	mov    $0x0,%eax
81002136:	85 c0                	test   %eax,%eax
81002138:	75 2e                	jne    81002168 <_vfiprintf_r+0x2d8>
8100213a:	8b 45 80             	mov    -0x80(%ebp),%eax
8100213d:	25 00 01 00 00       	and    $0x100,%eax
81002142:	85 c0                	test   %eax,%eax
81002144:	74 11                	je     81002157 <_vfiprintf_r+0x2c7>
81002146:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
8100214c:	83 c0 0c             	add    $0xc,%eax
8100214f:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81002155:	eb 55                	jmp    810021ac <_vfiprintf_r+0x31c>
81002157:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
8100215d:	83 c0 08             	add    $0x8,%eax
81002160:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81002166:	eb 44                	jmp    810021ac <_vfiprintf_r+0x31c>
81002168:	83 ec 0c             	sub    $0xc,%esp
8100216b:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81002171:	50                   	push   %eax
81002172:	ff 75 e4             	push   -0x1c(%ebp)
81002175:	ff 75 0c             	push   0xc(%ebp)
81002178:	8d 45 80             	lea    -0x80(%ebp),%eax
8100217b:	50                   	push   %eax
8100217c:	ff 75 08             	push   0x8(%ebp)
8100217f:	e8 7c de ff 7e       	call   0 <main-0x81000000>
81002184:	83 c4 20             	add    $0x20,%esp
81002187:	89 c7                	mov    %eax,%edi
81002189:	eb 21                	jmp    810021ac <_vfiprintf_r+0x31c>
8100218b:	83 ec 0c             	sub    $0xc,%esp
8100218e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81002194:	50                   	push   %eax
81002195:	ff 75 e4             	push   -0x1c(%ebp)
81002198:	ff 75 0c             	push   0xc(%ebp)
8100219b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100219e:	50                   	push   %eax
8100219f:	ff 75 08             	push   0x8(%ebp)
810021a2:	e8 da 01 00 00       	call   81002381 <_printf_i>
810021a7:	83 c4 20             	add    $0x20,%esp
810021aa:	89 c7                	mov    %eax,%edi
810021ac:	83 ff ff             	cmp    $0xffffffff,%edi
810021af:	74 13                	je     810021c4 <_vfiprintf_r+0x334>
810021b1:	8b 45 94             	mov    -0x6c(%ebp),%eax
810021b4:	01 f8                	add    %edi,%eax
810021b6:	89 45 94             	mov    %eax,-0x6c(%ebp)
810021b9:	e9 5c fd ff ff       	jmp    81001f1a <_vfiprintf_r+0x8a>
810021be:	90                   	nop
810021bf:	eb 04                	jmp    810021c5 <_vfiprintf_r+0x335>
810021c1:	90                   	nop
810021c2:	eb 01                	jmp    810021c5 <_vfiprintf_r+0x335>
810021c4:	90                   	nop
810021c5:	8b 45 0c             	mov    0xc(%ebp),%eax
810021c8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810021cc:	98                   	cwtl   
810021cd:	83 e0 40             	and    $0x40,%eax
810021d0:	85 c0                	test   %eax,%eax
810021d2:	75 05                	jne    810021d9 <_vfiprintf_r+0x349>
810021d4:	8b 45 94             	mov    -0x6c(%ebp),%eax
810021d7:	eb 05                	jmp    810021de <_vfiprintf_r+0x34e>
810021d9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810021de:	8d 65 f4             	lea    -0xc(%ebp),%esp
810021e1:	5b                   	pop    %ebx
810021e2:	5e                   	pop    %esi
810021e3:	5f                   	pop    %edi
810021e4:	5d                   	pop    %ebp
810021e5:	c3                   	ret    

810021e6 <_printf_common>:
810021e6:	55                   	push   %ebp
810021e7:	89 e5                	mov    %esp,%ebp
810021e9:	83 ec 18             	sub    $0x18,%esp
810021ec:	8b 45 0c             	mov    0xc(%ebp),%eax
810021ef:	8b 50 10             	mov    0x10(%eax),%edx
810021f2:	8b 45 0c             	mov    0xc(%ebp),%eax
810021f5:	8b 40 08             	mov    0x8(%eax),%eax
810021f8:	39 c2                	cmp    %eax,%edx
810021fa:	0f 4c d0             	cmovl  %eax,%edx
810021fd:	8b 45 10             	mov    0x10(%ebp),%eax
81002200:	89 10                	mov    %edx,(%eax)
81002202:	8b 45 0c             	mov    0xc(%ebp),%eax
81002205:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81002209:	84 c0                	test   %al,%al
8100220b:	74 0d                	je     8100221a <_printf_common+0x34>
8100220d:	8b 45 10             	mov    0x10(%ebp),%eax
81002210:	8b 00                	mov    (%eax),%eax
81002212:	8d 50 01             	lea    0x1(%eax),%edx
81002215:	8b 45 10             	mov    0x10(%ebp),%eax
81002218:	89 10                	mov    %edx,(%eax)
8100221a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100221d:	8b 00                	mov    (%eax),%eax
8100221f:	83 e0 20             	and    $0x20,%eax
81002222:	85 c0                	test   %eax,%eax
81002224:	74 0d                	je     81002233 <_printf_common+0x4d>
81002226:	8b 45 10             	mov    0x10(%ebp),%eax
81002229:	8b 00                	mov    (%eax),%eax
8100222b:	8d 50 02             	lea    0x2(%eax),%edx
8100222e:	8b 45 10             	mov    0x10(%ebp),%eax
81002231:	89 10                	mov    %edx,(%eax)
81002233:	8b 45 0c             	mov    0xc(%ebp),%eax
81002236:	8b 00                	mov    (%eax),%eax
81002238:	83 e0 06             	and    $0x6,%eax
8100223b:	85 c0                	test   %eax,%eax
8100223d:	75 41                	jne    81002280 <_printf_common+0x9a>
8100223f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002246:	eb 24                	jmp    8100226c <_printf_common+0x86>
81002248:	8b 45 0c             	mov    0xc(%ebp),%eax
8100224b:	83 c0 19             	add    $0x19,%eax
8100224e:	6a 01                	push   $0x1
81002250:	50                   	push   %eax
81002251:	ff 75 14             	push   0x14(%ebp)
81002254:	ff 75 08             	push   0x8(%ebp)
81002257:	8b 45 18             	mov    0x18(%ebp),%eax
8100225a:	ff d0                	call   *%eax
8100225c:	83 c4 10             	add    $0x10,%esp
8100225f:	83 f8 ff             	cmp    $0xffffffff,%eax
81002262:	0f 84 0b 01 00 00    	je     81002373 <_printf_common+0x18d>
81002268:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8100226c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100226f:	8b 50 0c             	mov    0xc(%eax),%edx
81002272:	8b 45 10             	mov    0x10(%ebp),%eax
81002275:	8b 08                	mov    (%eax),%ecx
81002277:	89 d0                	mov    %edx,%eax
81002279:	29 c8                	sub    %ecx,%eax
8100227b:	39 45 f0             	cmp    %eax,-0x10(%ebp)
8100227e:	7c c8                	jl     81002248 <_printf_common+0x62>
81002280:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81002287:	8b 45 0c             	mov    0xc(%ebp),%eax
8100228a:	0f b6 40 43          	movzbl 0x43(%eax),%eax
8100228e:	84 c0                	test   %al,%al
81002290:	74 04                	je     81002296 <_printf_common+0xb0>
81002292:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81002296:	8b 45 0c             	mov    0xc(%ebp),%eax
81002299:	8b 00                	mov    (%eax),%eax
8100229b:	83 e0 20             	and    $0x20,%eax
8100229e:	85 c0                	test   %eax,%eax
810022a0:	74 28                	je     810022ca <_printf_common+0xe4>
810022a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810022a5:	8d 50 01             	lea    0x1(%eax),%edx
810022a8:	89 55 f4             	mov    %edx,-0xc(%ebp)
810022ab:	8b 55 0c             	mov    0xc(%ebp),%edx
810022ae:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
810022b3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810022b6:	8d 50 01             	lea    0x1(%eax),%edx
810022b9:	89 55 f4             	mov    %edx,-0xc(%ebp)
810022bc:	8b 55 0c             	mov    0xc(%ebp),%edx
810022bf:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
810022c3:	8b 55 0c             	mov    0xc(%ebp),%edx
810022c6:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
810022ca:	8b 45 f4             	mov    -0xc(%ebp),%eax
810022cd:	8b 55 0c             	mov    0xc(%ebp),%edx
810022d0:	83 c2 43             	add    $0x43,%edx
810022d3:	50                   	push   %eax
810022d4:	52                   	push   %edx
810022d5:	ff 75 14             	push   0x14(%ebp)
810022d8:	ff 75 08             	push   0x8(%ebp)
810022db:	8b 45 18             	mov    0x18(%ebp),%eax
810022de:	ff d0                	call   *%eax
810022e0:	83 c4 10             	add    $0x10,%esp
810022e3:	83 f8 ff             	cmp    $0xffffffff,%eax
810022e6:	0f 84 8a 00 00 00    	je     81002376 <_printf_common+0x190>
810022ec:	8b 45 0c             	mov    0xc(%ebp),%eax
810022ef:	8b 50 0c             	mov    0xc(%eax),%edx
810022f2:	8b 45 10             	mov    0x10(%ebp),%eax
810022f5:	8b 08                	mov    (%eax),%ecx
810022f7:	89 d0                	mov    %edx,%eax
810022f9:	29 c8                	sub    %ecx,%eax
810022fb:	89 45 f4             	mov    %eax,-0xc(%ebp)
810022fe:	8b 45 0c             	mov    0xc(%ebp),%eax
81002301:	8b 00                	mov    (%eax),%eax
81002303:	83 e0 06             	and    $0x6,%eax
81002306:	83 f8 04             	cmp    $0x4,%eax
81002309:	75 06                	jne    81002311 <_printf_common+0x12b>
8100230b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100230f:	79 07                	jns    81002318 <_printf_common+0x132>
81002311:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81002318:	8b 45 0c             	mov    0xc(%ebp),%eax
8100231b:	8b 50 08             	mov    0x8(%eax),%edx
8100231e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002321:	8b 40 10             	mov    0x10(%eax),%eax
81002324:	39 c2                	cmp    %eax,%edx
81002326:	7e 13                	jle    8100233b <_printf_common+0x155>
81002328:	8b 45 0c             	mov    0xc(%ebp),%eax
8100232b:	8b 50 08             	mov    0x8(%eax),%edx
8100232e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002331:	8b 48 10             	mov    0x10(%eax),%ecx
81002334:	89 d0                	mov    %edx,%eax
81002336:	29 c8                	sub    %ecx,%eax
81002338:	01 45 f4             	add    %eax,-0xc(%ebp)
8100233b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81002342:	eb 20                	jmp    81002364 <_printf_common+0x17e>
81002344:	8b 45 0c             	mov    0xc(%ebp),%eax
81002347:	83 c0 1a             	add    $0x1a,%eax
8100234a:	6a 01                	push   $0x1
8100234c:	50                   	push   %eax
8100234d:	ff 75 14             	push   0x14(%ebp)
81002350:	ff 75 08             	push   0x8(%ebp)
81002353:	8b 45 18             	mov    0x18(%ebp),%eax
81002356:	ff d0                	call   *%eax
81002358:	83 c4 10             	add    $0x10,%esp
8100235b:	83 f8 ff             	cmp    $0xffffffff,%eax
8100235e:	74 19                	je     81002379 <_printf_common+0x193>
81002360:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
81002364:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002367:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100236a:	7c d8                	jl     81002344 <_printf_common+0x15e>
8100236c:	b8 00 00 00 00       	mov    $0x0,%eax
81002371:	eb 0c                	jmp    8100237f <_printf_common+0x199>
81002373:	90                   	nop
81002374:	eb 04                	jmp    8100237a <_printf_common+0x194>
81002376:	90                   	nop
81002377:	eb 01                	jmp    8100237a <_printf_common+0x194>
81002379:	90                   	nop
8100237a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100237f:	c9                   	leave  
81002380:	c3                   	ret    

81002381 <_printf_i>:
81002381:	55                   	push   %ebp
81002382:	89 e5                	mov    %esp,%ebp
81002384:	53                   	push   %ebx
81002385:	83 ec 24             	sub    $0x24,%esp
81002388:	8b 45 0c             	mov    0xc(%ebp),%eax
8100238b:	83 c0 1b             	add    $0x1b,%eax
8100238e:	83 c0 28             	add    $0x28,%eax
81002391:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002394:	c7 45 e8 a4 48 00 81 	movl   $0x810048a4,-0x18(%ebp)
8100239b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100239e:	0f b6 40 18          	movzbl 0x18(%eax),%eax
810023a2:	0f be c0             	movsbl %al,%eax
810023a5:	85 c0                	test   %eax,%eax
810023a7:	0f 84 00 03 00 00    	je     810026ad <_printf_i+0x32c>
810023ad:	85 c0                	test   %eax,%eax
810023af:	0f 88 52 03 00 00    	js     81002707 <_printf_i+0x386>
810023b5:	83 f8 78             	cmp    $0x78,%eax
810023b8:	0f 8f 49 03 00 00    	jg     81002707 <_printf_i+0x386>
810023be:	83 f8 58             	cmp    $0x58,%eax
810023c1:	0f 8c 40 03 00 00    	jl     81002707 <_printf_i+0x386>
810023c7:	83 e8 58             	sub    $0x58,%eax
810023ca:	83 f8 20             	cmp    $0x20,%eax
810023cd:	0f 87 34 03 00 00    	ja     81002707 <_printf_i+0x386>
810023d3:	8b 04 85 c8 48 00 81 	mov    -0x7effb738(,%eax,4),%eax
810023da:	ff e0                	jmp    *%eax
810023dc:	8b 45 18             	mov    0x18(%ebp),%eax
810023df:	8b 00                	mov    (%eax),%eax
810023e1:	8d 48 04             	lea    0x4(%eax),%ecx
810023e4:	8b 55 18             	mov    0x18(%ebp),%edx
810023e7:	89 0a                	mov    %ecx,(%edx)
810023e9:	8b 00                	mov    (%eax),%eax
810023eb:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810023ef:	89 c2                	mov    %eax,%edx
810023f1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810023f4:	88 10                	mov    %dl,(%eax)
810023f6:	8b 45 0c             	mov    0xc(%ebp),%eax
810023f9:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002400:	e9 1c 03 00 00       	jmp    81002721 <_printf_i+0x3a0>
81002405:	8b 45 0c             	mov    0xc(%ebp),%eax
81002408:	8b 00                	mov    (%eax),%eax
8100240a:	25 80 00 00 00       	and    $0x80,%eax
8100240f:	85 c0                	test   %eax,%eax
81002411:	74 11                	je     81002424 <_printf_i+0xa3>
81002413:	8b 45 18             	mov    0x18(%ebp),%eax
81002416:	8b 00                	mov    (%eax),%eax
81002418:	8d 48 04             	lea    0x4(%eax),%ecx
8100241b:	8b 55 18             	mov    0x18(%ebp),%edx
8100241e:	89 0a                	mov    %ecx,(%edx)
81002420:	8b 00                	mov    (%eax),%eax
81002422:	eb 2d                	jmp    81002451 <_printf_i+0xd0>
81002424:	8b 45 0c             	mov    0xc(%ebp),%eax
81002427:	8b 00                	mov    (%eax),%eax
81002429:	83 e0 40             	and    $0x40,%eax
8100242c:	85 c0                	test   %eax,%eax
8100242e:	74 12                	je     81002442 <_printf_i+0xc1>
81002430:	8b 45 18             	mov    0x18(%ebp),%eax
81002433:	8b 00                	mov    (%eax),%eax
81002435:	8d 48 04             	lea    0x4(%eax),%ecx
81002438:	8b 55 18             	mov    0x18(%ebp),%edx
8100243b:	89 0a                	mov    %ecx,(%edx)
8100243d:	8b 00                	mov    (%eax),%eax
8100243f:	98                   	cwtl   
81002440:	eb 0f                	jmp    81002451 <_printf_i+0xd0>
81002442:	8b 45 18             	mov    0x18(%ebp),%eax
81002445:	8b 00                	mov    (%eax),%eax
81002447:	8d 48 04             	lea    0x4(%eax),%ecx
8100244a:	8b 55 18             	mov    0x18(%ebp),%edx
8100244d:	89 0a                	mov    %ecx,(%edx)
8100244f:	8b 00                	mov    (%eax),%eax
81002451:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002454:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002457:	85 c0                	test   %eax,%eax
81002459:	79 0a                	jns    81002465 <_printf_i+0xe4>
8100245b:	f7 5d f4             	negl   -0xc(%ebp)
8100245e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002461:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81002465:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
8100246c:	e9 28 01 00 00       	jmp    81002599 <_printf_i+0x218>
81002471:	8b 45 0c             	mov    0xc(%ebp),%eax
81002474:	8b 00                	mov    (%eax),%eax
81002476:	25 80 00 00 00       	and    $0x80,%eax
8100247b:	85 c0                	test   %eax,%eax
8100247d:	74 11                	je     81002490 <_printf_i+0x10f>
8100247f:	8b 45 18             	mov    0x18(%ebp),%eax
81002482:	8b 00                	mov    (%eax),%eax
81002484:	8d 48 04             	lea    0x4(%eax),%ecx
81002487:	8b 55 18             	mov    0x18(%ebp),%edx
8100248a:	89 0a                	mov    %ecx,(%edx)
8100248c:	8b 00                	mov    (%eax),%eax
8100248e:	eb 2f                	jmp    810024bf <_printf_i+0x13e>
81002490:	8b 45 0c             	mov    0xc(%ebp),%eax
81002493:	8b 00                	mov    (%eax),%eax
81002495:	83 e0 40             	and    $0x40,%eax
81002498:	85 c0                	test   %eax,%eax
8100249a:	74 14                	je     810024b0 <_printf_i+0x12f>
8100249c:	8b 45 18             	mov    0x18(%ebp),%eax
8100249f:	8b 00                	mov    (%eax),%eax
810024a1:	8d 48 04             	lea    0x4(%eax),%ecx
810024a4:	8b 55 18             	mov    0x18(%ebp),%edx
810024a7:	89 0a                	mov    %ecx,(%edx)
810024a9:	8b 00                	mov    (%eax),%eax
810024ab:	0f b7 c0             	movzwl %ax,%eax
810024ae:	eb 0f                	jmp    810024bf <_printf_i+0x13e>
810024b0:	8b 45 18             	mov    0x18(%ebp),%eax
810024b3:	8b 00                	mov    (%eax),%eax
810024b5:	8d 48 04             	lea    0x4(%eax),%ecx
810024b8:	8b 55 18             	mov    0x18(%ebp),%edx
810024bb:	89 0a                	mov    %ecx,(%edx)
810024bd:	8b 00                	mov    (%eax),%eax
810024bf:	89 45 f4             	mov    %eax,-0xc(%ebp)
810024c2:	8b 45 0c             	mov    0xc(%ebp),%eax
810024c5:	0f b6 40 18          	movzbl 0x18(%eax),%eax
810024c9:	3c 6f                	cmp    $0x6f,%al
810024cb:	75 07                	jne    810024d4 <_printf_i+0x153>
810024cd:	b8 08 00 00 00       	mov    $0x8,%eax
810024d2:	eb 05                	jmp    810024d9 <_printf_i+0x158>
810024d4:	b8 0a 00 00 00       	mov    $0xa,%eax
810024d9:	89 45 f0             	mov    %eax,-0x10(%ebp)
810024dc:	e9 b1 00 00 00       	jmp    81002592 <_printf_i+0x211>
810024e1:	8b 45 0c             	mov    0xc(%ebp),%eax
810024e4:	c6 40 45 58          	movb   $0x58,0x45(%eax)
810024e8:	eb 1d                	jmp    81002507 <_printf_i+0x186>
810024ea:	8b 45 0c             	mov    0xc(%ebp),%eax
810024ed:	8b 00                	mov    (%eax),%eax
810024ef:	83 c8 20             	or     $0x20,%eax
810024f2:	89 c2                	mov    %eax,%edx
810024f4:	8b 45 0c             	mov    0xc(%ebp),%eax
810024f7:	89 10                	mov    %edx,(%eax)
810024f9:	8b 45 0c             	mov    0xc(%ebp),%eax
810024fc:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81002500:	c7 45 e8 b5 48 00 81 	movl   $0x810048b5,-0x18(%ebp)
81002507:	8b 45 0c             	mov    0xc(%ebp),%eax
8100250a:	8b 00                	mov    (%eax),%eax
8100250c:	25 80 00 00 00       	and    $0x80,%eax
81002511:	85 c0                	test   %eax,%eax
81002513:	74 11                	je     81002526 <_printf_i+0x1a5>
81002515:	8b 45 18             	mov    0x18(%ebp),%eax
81002518:	8b 00                	mov    (%eax),%eax
8100251a:	8d 48 04             	lea    0x4(%eax),%ecx
8100251d:	8b 55 18             	mov    0x18(%ebp),%edx
81002520:	89 0a                	mov    %ecx,(%edx)
81002522:	8b 00                	mov    (%eax),%eax
81002524:	eb 2f                	jmp    81002555 <_printf_i+0x1d4>
81002526:	8b 45 0c             	mov    0xc(%ebp),%eax
81002529:	8b 00                	mov    (%eax),%eax
8100252b:	83 e0 40             	and    $0x40,%eax
8100252e:	85 c0                	test   %eax,%eax
81002530:	74 14                	je     81002546 <_printf_i+0x1c5>
81002532:	8b 45 18             	mov    0x18(%ebp),%eax
81002535:	8b 00                	mov    (%eax),%eax
81002537:	8d 48 04             	lea    0x4(%eax),%ecx
8100253a:	8b 55 18             	mov    0x18(%ebp),%edx
8100253d:	89 0a                	mov    %ecx,(%edx)
8100253f:	8b 00                	mov    (%eax),%eax
81002541:	0f b7 c0             	movzwl %ax,%eax
81002544:	eb 0f                	jmp    81002555 <_printf_i+0x1d4>
81002546:	8b 45 18             	mov    0x18(%ebp),%eax
81002549:	8b 00                	mov    (%eax),%eax
8100254b:	8d 48 04             	lea    0x4(%eax),%ecx
8100254e:	8b 55 18             	mov    0x18(%ebp),%edx
81002551:	89 0a                	mov    %ecx,(%edx)
81002553:	8b 00                	mov    (%eax),%eax
81002555:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002558:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
8100255f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002562:	8b 00                	mov    (%eax),%eax
81002564:	83 e0 01             	and    $0x1,%eax
81002567:	85 c0                	test   %eax,%eax
81002569:	74 0f                	je     8100257a <_printf_i+0x1f9>
8100256b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100256e:	8b 00                	mov    (%eax),%eax
81002570:	83 c8 20             	or     $0x20,%eax
81002573:	89 c2                	mov    %eax,%edx
81002575:	8b 45 0c             	mov    0xc(%ebp),%eax
81002578:	89 10                	mov    %edx,(%eax)
8100257a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100257e:	75 11                	jne    81002591 <_printf_i+0x210>
81002580:	8b 45 0c             	mov    0xc(%ebp),%eax
81002583:	8b 00                	mov    (%eax),%eax
81002585:	83 e0 df             	and    $0xffffffdf,%eax
81002588:	89 c2                	mov    %eax,%edx
8100258a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100258d:	89 10                	mov    %edx,(%eax)
8100258f:	eb 01                	jmp    81002592 <_printf_i+0x211>
81002591:	90                   	nop
81002592:	8b 45 0c             	mov    0xc(%ebp),%eax
81002595:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81002599:	8b 45 0c             	mov    0xc(%ebp),%eax
8100259c:	8b 50 04             	mov    0x4(%eax),%edx
8100259f:	8b 45 0c             	mov    0xc(%ebp),%eax
810025a2:	89 50 08             	mov    %edx,0x8(%eax)
810025a5:	8b 45 0c             	mov    0xc(%ebp),%eax
810025a8:	8b 40 08             	mov    0x8(%eax),%eax
810025ab:	85 c0                	test   %eax,%eax
810025ad:	78 0f                	js     810025be <_printf_i+0x23d>
810025af:	8b 45 0c             	mov    0xc(%ebp),%eax
810025b2:	8b 00                	mov    (%eax),%eax
810025b4:	83 e0 fb             	and    $0xfffffffb,%eax
810025b7:	89 c2                	mov    %eax,%edx
810025b9:	8b 45 0c             	mov    0xc(%ebp),%eax
810025bc:	89 10                	mov    %edx,(%eax)
810025be:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810025c2:	75 0a                	jne    810025ce <_printf_i+0x24d>
810025c4:	8b 45 0c             	mov    0xc(%ebp),%eax
810025c7:	8b 40 04             	mov    0x4(%eax),%eax
810025ca:	85 c0                	test   %eax,%eax
810025cc:	74 34                	je     81002602 <_printf_i+0x281>
810025ce:	8b 4d f0             	mov    -0x10(%ebp),%ecx
810025d1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810025d4:	ba 00 00 00 00       	mov    $0x0,%edx
810025d9:	f7 f1                	div    %ecx
810025db:	8b 45 e8             	mov    -0x18(%ebp),%eax
810025de:	01 d0                	add    %edx,%eax
810025e0:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810025e4:	0f b6 10             	movzbl (%eax),%edx
810025e7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810025ea:	88 10                	mov    %dl,(%eax)
810025ec:	8b 5d f0             	mov    -0x10(%ebp),%ebx
810025ef:	8b 45 f4             	mov    -0xc(%ebp),%eax
810025f2:	ba 00 00 00 00       	mov    $0x0,%edx
810025f7:	f7 f3                	div    %ebx
810025f9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810025fc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002600:	75 cc                	jne    810025ce <_printf_i+0x24d>
81002602:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81002606:	75 26                	jne    8100262e <_printf_i+0x2ad>
81002608:	8b 45 0c             	mov    0xc(%ebp),%eax
8100260b:	8b 00                	mov    (%eax),%eax
8100260d:	83 e0 01             	and    $0x1,%eax
81002610:	85 c0                	test   %eax,%eax
81002612:	74 1a                	je     8100262e <_printf_i+0x2ad>
81002614:	8b 45 0c             	mov    0xc(%ebp),%eax
81002617:	8b 50 04             	mov    0x4(%eax),%edx
8100261a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100261d:	8b 40 10             	mov    0x10(%eax),%eax
81002620:	39 c2                	cmp    %eax,%edx
81002622:	7f 0a                	jg     8100262e <_printf_i+0x2ad>
81002624:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81002628:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100262b:	c6 00 30             	movb   $0x30,(%eax)
8100262e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002631:	83 c0 1b             	add    $0x1b,%eax
81002634:	83 c0 28             	add    $0x28,%eax
81002637:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100263a:	89 c2                	mov    %eax,%edx
8100263c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100263f:	89 50 10             	mov    %edx,0x10(%eax)
81002642:	e9 e2 00 00 00       	jmp    81002729 <_printf_i+0x3a8>
81002647:	8b 45 0c             	mov    0xc(%ebp),%eax
8100264a:	8b 00                	mov    (%eax),%eax
8100264c:	25 80 00 00 00       	and    $0x80,%eax
81002651:	85 c0                	test   %eax,%eax
81002653:	74 19                	je     8100266e <_printf_i+0x2ed>
81002655:	8b 45 18             	mov    0x18(%ebp),%eax
81002658:	8b 00                	mov    (%eax),%eax
8100265a:	8d 48 04             	lea    0x4(%eax),%ecx
8100265d:	8b 55 18             	mov    0x18(%ebp),%edx
81002660:	89 0a                	mov    %ecx,(%edx)
81002662:	8b 00                	mov    (%eax),%eax
81002664:	8b 55 0c             	mov    0xc(%ebp),%edx
81002667:	8b 52 14             	mov    0x14(%edx),%edx
8100266a:	89 10                	mov    %edx,(%eax)
8100266c:	eb 3f                	jmp    810026ad <_printf_i+0x32c>
8100266e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002671:	8b 00                	mov    (%eax),%eax
81002673:	83 e0 40             	and    $0x40,%eax
81002676:	85 c0                	test   %eax,%eax
81002678:	74 1c                	je     81002696 <_printf_i+0x315>
8100267a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100267d:	8b 58 14             	mov    0x14(%eax),%ebx
81002680:	8b 45 18             	mov    0x18(%ebp),%eax
81002683:	8b 00                	mov    (%eax),%eax
81002685:	8d 48 04             	lea    0x4(%eax),%ecx
81002688:	8b 55 18             	mov    0x18(%ebp),%edx
8100268b:	89 0a                	mov    %ecx,(%edx)
8100268d:	8b 00                	mov    (%eax),%eax
8100268f:	89 da                	mov    %ebx,%edx
81002691:	66 89 10             	mov    %dx,(%eax)
81002694:	eb 17                	jmp    810026ad <_printf_i+0x32c>
81002696:	8b 45 18             	mov    0x18(%ebp),%eax
81002699:	8b 00                	mov    (%eax),%eax
8100269b:	8d 48 04             	lea    0x4(%eax),%ecx
8100269e:	8b 55 18             	mov    0x18(%ebp),%edx
810026a1:	89 0a                	mov    %ecx,(%edx)
810026a3:	8b 00                	mov    (%eax),%eax
810026a5:	8b 55 0c             	mov    0xc(%ebp),%edx
810026a8:	8b 52 14             	mov    0x14(%edx),%edx
810026ab:	89 10                	mov    %edx,(%eax)
810026ad:	8b 45 0c             	mov    0xc(%ebp),%eax
810026b0:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
810026b7:	eb 70                	jmp    81002729 <_printf_i+0x3a8>
810026b9:	8b 45 18             	mov    0x18(%ebp),%eax
810026bc:	8b 00                	mov    (%eax),%eax
810026be:	8d 48 04             	lea    0x4(%eax),%ecx
810026c1:	8b 55 18             	mov    0x18(%ebp),%edx
810026c4:	89 0a                	mov    %ecx,(%edx)
810026c6:	8b 00                	mov    (%eax),%eax
810026c8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810026cb:	8b 45 0c             	mov    0xc(%ebp),%eax
810026ce:	8b 40 04             	mov    0x4(%eax),%eax
810026d1:	83 ec 04             	sub    $0x4,%esp
810026d4:	50                   	push   %eax
810026d5:	6a 00                	push   $0x0
810026d7:	ff 75 ec             	push   -0x14(%ebp)
810026da:	e8 a1 f3 ff ff       	call   81001a80 <memchr>
810026df:	83 c4 10             	add    $0x10,%esp
810026e2:	89 45 e0             	mov    %eax,-0x20(%ebp)
810026e5:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810026e9:	74 0e                	je     810026f9 <_printf_i+0x378>
810026eb:	8b 45 e0             	mov    -0x20(%ebp),%eax
810026ee:	2b 45 ec             	sub    -0x14(%ebp),%eax
810026f1:	89 c2                	mov    %eax,%edx
810026f3:	8b 45 0c             	mov    0xc(%ebp),%eax
810026f6:	89 50 04             	mov    %edx,0x4(%eax)
810026f9:	8b 45 0c             	mov    0xc(%ebp),%eax
810026fc:	8b 50 04             	mov    0x4(%eax),%edx
810026ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81002702:	89 50 10             	mov    %edx,0x10(%eax)
81002705:	eb 1a                	jmp    81002721 <_printf_i+0x3a0>
81002707:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8100270b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100270e:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81002712:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002715:	88 10                	mov    %dl,(%eax)
81002717:	8b 45 0c             	mov    0xc(%ebp),%eax
8100271a:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002721:	8b 45 0c             	mov    0xc(%ebp),%eax
81002724:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81002728:	90                   	nop
81002729:	83 ec 0c             	sub    $0xc,%esp
8100272c:	ff 75 14             	push   0x14(%ebp)
8100272f:	ff 75 10             	push   0x10(%ebp)
81002732:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002735:	50                   	push   %eax
81002736:	ff 75 0c             	push   0xc(%ebp)
81002739:	ff 75 08             	push   0x8(%ebp)
8100273c:	e8 a5 fa ff ff       	call   810021e6 <_printf_common>
81002741:	83 c4 20             	add    $0x20,%esp
81002744:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002747:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
8100274b:	74 72                	je     810027bf <_printf_i+0x43e>
8100274d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002750:	8b 40 10             	mov    0x10(%eax),%eax
81002753:	50                   	push   %eax
81002754:	ff 75 ec             	push   -0x14(%ebp)
81002757:	ff 75 10             	push   0x10(%ebp)
8100275a:	ff 75 08             	push   0x8(%ebp)
8100275d:	8b 45 14             	mov    0x14(%ebp),%eax
81002760:	ff d0                	call   *%eax
81002762:	83 c4 10             	add    $0x10,%esp
81002765:	83 f8 ff             	cmp    $0xffffffff,%eax
81002768:	74 58                	je     810027c2 <_printf_i+0x441>
8100276a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100276d:	8b 00                	mov    (%eax),%eax
8100276f:	83 e0 02             	and    $0x2,%eax
81002772:	85 c0                	test   %eax,%eax
81002774:	74 39                	je     810027af <_printf_i+0x42e>
81002776:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100277d:	eb 20                	jmp    8100279f <_printf_i+0x41e>
8100277f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002782:	83 c0 19             	add    $0x19,%eax
81002785:	6a 01                	push   $0x1
81002787:	50                   	push   %eax
81002788:	ff 75 10             	push   0x10(%ebp)
8100278b:	ff 75 08             	push   0x8(%ebp)
8100278e:	8b 45 14             	mov    0x14(%ebp),%eax
81002791:	ff d0                	call   *%eax
81002793:	83 c4 10             	add    $0x10,%esp
81002796:	83 f8 ff             	cmp    $0xffffffff,%eax
81002799:	74 2a                	je     810027c5 <_printf_i+0x444>
8100279b:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100279f:	8b 45 0c             	mov    0xc(%ebp),%eax
810027a2:	8b 40 0c             	mov    0xc(%eax),%eax
810027a5:	8b 55 d8             	mov    -0x28(%ebp),%edx
810027a8:	29 d0                	sub    %edx,%eax
810027aa:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810027ad:	7c d0                	jl     8100277f <_printf_i+0x3fe>
810027af:	8b 45 0c             	mov    0xc(%ebp),%eax
810027b2:	8b 50 0c             	mov    0xc(%eax),%edx
810027b5:	8b 45 d8             	mov    -0x28(%ebp),%eax
810027b8:	39 c2                	cmp    %eax,%edx
810027ba:	0f 4d c2             	cmovge %edx,%eax
810027bd:	eb 0c                	jmp    810027cb <_printf_i+0x44a>
810027bf:	90                   	nop
810027c0:	eb 04                	jmp    810027c6 <_printf_i+0x445>
810027c2:	90                   	nop
810027c3:	eb 01                	jmp    810027c6 <_printf_i+0x445>
810027c5:	90                   	nop
810027c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810027cb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810027ce:	c9                   	leave  
810027cf:	c3                   	ret    

810027d0 <_realloc_r>:
810027d0:	55                   	push   %ebp
810027d1:	89 e5                	mov    %esp,%ebp
810027d3:	83 ec 78             	sub    $0x78,%esp
810027d6:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810027da:	75 16                	jne    810027f2 <_realloc_r+0x22>
810027dc:	83 ec 08             	sub    $0x8,%esp
810027df:	ff 75 10             	push   0x10(%ebp)
810027e2:	ff 75 08             	push   0x8(%ebp)
810027e5:	e8 65 ea ff ff       	call   8100124f <_malloc_r>
810027ea:	83 c4 10             	add    $0x10,%esp
810027ed:	e9 b6 08 00 00       	jmp    810030a8 <_realloc_r+0x8d8>
810027f2:	83 ec 0c             	sub    $0xc,%esp
810027f5:	ff 75 08             	push   0x8(%ebp)
810027f8:	e8 78 f4 ff ff       	call   81001c75 <__malloc_lock>
810027fd:	83 c4 10             	add    $0x10,%esp
81002800:	8b 45 0c             	mov    0xc(%ebp),%eax
81002803:	83 e8 08             	sub    $0x8,%eax
81002806:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81002809:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100280c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100280f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002812:	8b 40 04             	mov    0x4(%eax),%eax
81002815:	83 e0 fc             	and    $0xfffffffc,%eax
81002818:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100281b:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100281e:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002821:	8b 45 10             	mov    0x10(%ebp),%eax
81002824:	83 c0 0b             	add    $0xb,%eax
81002827:	83 f8 16             	cmp    $0x16,%eax
8100282a:	76 0b                	jbe    81002837 <_realloc_r+0x67>
8100282c:	8b 45 10             	mov    0x10(%ebp),%eax
8100282f:	83 c0 0b             	add    $0xb,%eax
81002832:	83 e0 f8             	and    $0xfffffff8,%eax
81002835:	eb 05                	jmp    8100283c <_realloc_r+0x6c>
81002837:	b8 10 00 00 00       	mov    $0x10,%eax
8100283c:	89 45 bc             	mov    %eax,-0x44(%ebp)
8100283f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002842:	85 c0                	test   %eax,%eax
81002844:	78 08                	js     8100284e <_realloc_r+0x7e>
81002846:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002849:	3b 45 10             	cmp    0x10(%ebp),%eax
8100284c:	73 13                	jae    81002861 <_realloc_r+0x91>
8100284e:	8b 45 08             	mov    0x8(%ebp),%eax
81002851:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81002857:	b8 00 00 00 00       	mov    $0x0,%eax
8100285c:	e9 47 08 00 00       	jmp    810030a8 <_realloc_r+0x8d8>
81002861:	8b 55 c0             	mov    -0x40(%ebp),%edx
81002864:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002867:	39 c2                	cmp    %eax,%edx
81002869:	0f 8d 8b 07 00 00    	jge    81002ffa <_realloc_r+0x82a>
8100286f:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81002872:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002875:	01 d0                	add    %edx,%eax
81002877:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100287a:	b8 40 50 00 81       	mov    $0x81005040,%eax
8100287f:	8b 40 08             	mov    0x8(%eax),%eax
81002882:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002885:	74 1e                	je     810028a5 <_realloc_r+0xd5>
81002887:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100288a:	8b 40 04             	mov    0x4(%eax),%eax
8100288d:	83 e0 fe             	and    $0xfffffffe,%eax
81002890:	89 c2                	mov    %eax,%edx
81002892:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002895:	01 d0                	add    %edx,%eax
81002897:	8b 40 04             	mov    0x4(%eax),%eax
8100289a:	83 e0 01             	and    $0x1,%eax
8100289d:	85 c0                	test   %eax,%eax
8100289f:	0f 85 ca 00 00 00    	jne    8100296f <_realloc_r+0x19f>
810028a5:	8b 45 ec             	mov    -0x14(%ebp),%eax
810028a8:	8b 40 04             	mov    0x4(%eax),%eax
810028ab:	83 e0 fc             	and    $0xfffffffc,%eax
810028ae:	89 45 e8             	mov    %eax,-0x18(%ebp)
810028b1:	b8 40 50 00 81       	mov    $0x81005040,%eax
810028b6:	8b 40 08             	mov    0x8(%eax),%eax
810028b9:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810028bc:	75 71                	jne    8100292f <_realloc_r+0x15f>
810028be:	8b 55 e8             	mov    -0x18(%ebp),%edx
810028c1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810028c4:	01 d0                	add    %edx,%eax
810028c6:	89 c2                	mov    %eax,%edx
810028c8:	8b 45 bc             	mov    -0x44(%ebp),%eax
810028cb:	83 c0 10             	add    $0x10,%eax
810028ce:	39 c2                	cmp    %eax,%edx
810028d0:	0f 8c a9 00 00 00    	jl     8100297f <_realloc_r+0x1af>
810028d6:	8b 45 e8             	mov    -0x18(%ebp),%eax
810028d9:	01 45 f0             	add    %eax,-0x10(%ebp)
810028dc:	ba 40 50 00 81       	mov    $0x81005040,%edx
810028e1:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
810028e4:	8b 45 bc             	mov    -0x44(%ebp),%eax
810028e7:	01 c8                	add    %ecx,%eax
810028e9:	89 42 08             	mov    %eax,0x8(%edx)
810028ec:	8b 45 f0             	mov    -0x10(%ebp),%eax
810028ef:	2b 45 bc             	sub    -0x44(%ebp),%eax
810028f2:	89 c2                	mov    %eax,%edx
810028f4:	b8 40 50 00 81       	mov    $0x81005040,%eax
810028f9:	8b 40 08             	mov    0x8(%eax),%eax
810028fc:	83 ca 01             	or     $0x1,%edx
810028ff:	89 50 04             	mov    %edx,0x4(%eax)
81002902:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002905:	8b 40 04             	mov    0x4(%eax),%eax
81002908:	83 e0 01             	and    $0x1,%eax
8100290b:	0b 45 bc             	or     -0x44(%ebp),%eax
8100290e:	89 c2                	mov    %eax,%edx
81002910:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002913:	89 50 04             	mov    %edx,0x4(%eax)
81002916:	83 ec 0c             	sub    $0xc,%esp
81002919:	ff 75 08             	push   0x8(%ebp)
8100291c:	e8 5a f3 ff ff       	call   81001c7b <__malloc_unlock>
81002921:	83 c4 10             	add    $0x10,%esp
81002924:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002927:	83 c0 08             	add    $0x8,%eax
8100292a:	e9 79 07 00 00       	jmp    810030a8 <_realloc_r+0x8d8>
8100292f:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002932:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002935:	01 d0                	add    %edx,%eax
81002937:	89 c2                	mov    %eax,%edx
81002939:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100293c:	39 c2                	cmp    %eax,%edx
8100293e:	7c 3f                	jl     8100297f <_realloc_r+0x1af>
81002940:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002943:	8b 40 0c             	mov    0xc(%eax),%eax
81002946:	89 45 b8             	mov    %eax,-0x48(%ebp)
81002949:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100294c:	8b 40 08             	mov    0x8(%eax),%eax
8100294f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002952:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002955:	8b 55 b8             	mov    -0x48(%ebp),%edx
81002958:	89 50 0c             	mov    %edx,0xc(%eax)
8100295b:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100295e:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002961:	89 50 08             	mov    %edx,0x8(%eax)
81002964:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002967:	01 45 f0             	add    %eax,-0x10(%ebp)
8100296a:	e9 8c 06 00 00       	jmp    81002ffb <_realloc_r+0x82b>
8100296f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81002976:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8100297d:	eb 01                	jmp    81002980 <_realloc_r+0x1b0>
8100297f:	90                   	nop
81002980:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002983:	8b 40 04             	mov    0x4(%eax),%eax
81002986:	83 e0 01             	and    $0x1,%eax
81002989:	85 c0                	test   %eax,%eax
8100298b:	0f 85 d6 04 00 00    	jne    81002e67 <_realloc_r+0x697>
81002991:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002994:	8b 00                	mov    (%eax),%eax
81002996:	f7 d8                	neg    %eax
81002998:	89 c2                	mov    %eax,%edx
8100299a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100299d:	01 d0                	add    %edx,%eax
8100299f:	89 45 b0             	mov    %eax,-0x50(%ebp)
810029a2:	8b 45 b0             	mov    -0x50(%ebp),%eax
810029a5:	8b 40 04             	mov    0x4(%eax),%eax
810029a8:	83 e0 fc             	and    $0xfffffffc,%eax
810029ab:	89 45 ac             	mov    %eax,-0x54(%ebp)
810029ae:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810029b2:	0f 84 4a 03 00 00    	je     81002d02 <_realloc_r+0x532>
810029b8:	b8 40 50 00 81       	mov    $0x81005040,%eax
810029bd:	8b 40 08             	mov    0x8(%eax),%eax
810029c0:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810029c3:	0f 85 b0 01 00 00    	jne    81002b79 <_realloc_r+0x3a9>
810029c9:	8b 55 e8             	mov    -0x18(%ebp),%edx
810029cc:	8b 45 ac             	mov    -0x54(%ebp),%eax
810029cf:	01 c2                	add    %eax,%edx
810029d1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810029d4:	01 d0                	add    %edx,%eax
810029d6:	89 c2                	mov    %eax,%edx
810029d8:	8b 45 bc             	mov    -0x44(%ebp),%eax
810029db:	83 c0 10             	add    $0x10,%eax
810029de:	39 c2                	cmp    %eax,%edx
810029e0:	0f 8c 1c 03 00 00    	jl     81002d02 <_realloc_r+0x532>
810029e6:	8b 45 b0             	mov    -0x50(%ebp),%eax
810029e9:	8b 40 0c             	mov    0xc(%eax),%eax
810029ec:	89 45 b8             	mov    %eax,-0x48(%ebp)
810029ef:	8b 45 b0             	mov    -0x50(%ebp),%eax
810029f2:	8b 40 08             	mov    0x8(%eax),%eax
810029f5:	89 45 b4             	mov    %eax,-0x4c(%ebp)
810029f8:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810029fb:	8b 55 b8             	mov    -0x48(%ebp),%edx
810029fe:	89 50 0c             	mov    %edx,0xc(%eax)
81002a01:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002a04:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002a07:	89 50 08             	mov    %edx,0x8(%eax)
81002a0a:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002a0d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002a10:	8b 55 ac             	mov    -0x54(%ebp),%edx
81002a13:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002a16:	01 d0                	add    %edx,%eax
81002a18:	01 45 f0             	add    %eax,-0x10(%ebp)
81002a1b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a1e:	83 c0 08             	add    $0x8,%eax
81002a21:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002a24:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002a27:	83 e8 04             	sub    $0x4,%eax
81002a2a:	89 45 a0             	mov    %eax,-0x60(%ebp)
81002a2d:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81002a31:	0f 87 de 00 00 00    	ja     81002b15 <_realloc_r+0x345>
81002a37:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a3a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a3d:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002a40:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002a43:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81002a47:	0f 86 90 00 00 00    	jbe    81002add <_realloc_r+0x30d>
81002a4d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a50:	8d 42 04             	lea    0x4(%edx),%eax
81002a53:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a56:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a59:	8d 48 04             	lea    0x4(%eax),%ecx
81002a5c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a5f:	8b 12                	mov    (%edx),%edx
81002a61:	89 10                	mov    %edx,(%eax)
81002a63:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a66:	8d 42 04             	lea    0x4(%edx),%eax
81002a69:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a6c:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a6f:	8d 48 04             	lea    0x4(%eax),%ecx
81002a72:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a75:	8b 12                	mov    (%edx),%edx
81002a77:	89 10                	mov    %edx,(%eax)
81002a79:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81002a7d:	76 5e                	jbe    81002add <_realloc_r+0x30d>
81002a7f:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a82:	8d 42 04             	lea    0x4(%edx),%eax
81002a85:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a88:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a8b:	8d 48 04             	lea    0x4(%eax),%ecx
81002a8e:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a91:	8b 12                	mov    (%edx),%edx
81002a93:	89 10                	mov    %edx,(%eax)
81002a95:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a98:	8d 42 04             	lea    0x4(%edx),%eax
81002a9b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a9e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002aa1:	8d 48 04             	lea    0x4(%eax),%ecx
81002aa4:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002aa7:	8b 12                	mov    (%edx),%edx
81002aa9:	89 10                	mov    %edx,(%eax)
81002aab:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81002aaf:	76 2c                	jbe    81002add <_realloc_r+0x30d>
81002ab1:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002ab4:	8d 42 04             	lea    0x4(%edx),%eax
81002ab7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002aba:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002abd:	8d 48 04             	lea    0x4(%eax),%ecx
81002ac0:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002ac3:	8b 12                	mov    (%edx),%edx
81002ac5:	89 10                	mov    %edx,(%eax)
81002ac7:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002aca:	8d 42 04             	lea    0x4(%edx),%eax
81002acd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002ad0:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002ad3:	8d 48 04             	lea    0x4(%eax),%ecx
81002ad6:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002ad9:	8b 12                	mov    (%edx),%edx
81002adb:	89 10                	mov    %edx,(%eax)
81002add:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002ae0:	8d 42 04             	lea    0x4(%edx),%eax
81002ae3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002ae6:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002ae9:	8d 48 04             	lea    0x4(%eax),%ecx
81002aec:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002aef:	8b 12                	mov    (%edx),%edx
81002af1:	89 10                	mov    %edx,(%eax)
81002af3:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002af6:	8d 42 04             	lea    0x4(%edx),%eax
81002af9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002afc:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002aff:	8d 48 04             	lea    0x4(%eax),%ecx
81002b02:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002b05:	8b 12                	mov    (%edx),%edx
81002b07:	89 10                	mov    %edx,(%eax)
81002b09:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002b0c:	8b 10                	mov    (%eax),%edx
81002b0e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002b11:	89 10                	mov    %edx,(%eax)
81002b13:	eb 14                	jmp    81002b29 <_realloc_r+0x359>
81002b15:	83 ec 04             	sub    $0x4,%esp
81002b18:	ff 75 a0             	push   -0x60(%ebp)
81002b1b:	ff 75 0c             	push   0xc(%ebp)
81002b1e:	ff 75 a8             	push   -0x58(%ebp)
81002b21:	e8 3a f0 ff ff       	call   81001b60 <memmove>
81002b26:	83 c4 10             	add    $0x10,%esp
81002b29:	ba 40 50 00 81       	mov    $0x81005040,%edx
81002b2e:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002b31:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002b34:	01 c8                	add    %ecx,%eax
81002b36:	89 42 08             	mov    %eax,0x8(%edx)
81002b39:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002b3c:	2b 45 bc             	sub    -0x44(%ebp),%eax
81002b3f:	89 c2                	mov    %eax,%edx
81002b41:	b8 40 50 00 81       	mov    $0x81005040,%eax
81002b46:	8b 40 08             	mov    0x8(%eax),%eax
81002b49:	83 ca 01             	or     $0x1,%edx
81002b4c:	89 50 04             	mov    %edx,0x4(%eax)
81002b4f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b52:	8b 40 04             	mov    0x4(%eax),%eax
81002b55:	83 e0 01             	and    $0x1,%eax
81002b58:	0b 45 bc             	or     -0x44(%ebp),%eax
81002b5b:	89 c2                	mov    %eax,%edx
81002b5d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b60:	89 50 04             	mov    %edx,0x4(%eax)
81002b63:	83 ec 0c             	sub    $0xc,%esp
81002b66:	ff 75 08             	push   0x8(%ebp)
81002b69:	e8 0d f1 ff ff       	call   81001c7b <__malloc_unlock>
81002b6e:	83 c4 10             	add    $0x10,%esp
81002b71:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002b74:	e9 2f 05 00 00       	jmp    810030a8 <_realloc_r+0x8d8>
81002b79:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002b7c:	8b 45 ac             	mov    -0x54(%ebp),%eax
81002b7f:	01 c2                	add    %eax,%edx
81002b81:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002b84:	01 d0                	add    %edx,%eax
81002b86:	89 c2                	mov    %eax,%edx
81002b88:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002b8b:	39 c2                	cmp    %eax,%edx
81002b8d:	0f 8c 6f 01 00 00    	jl     81002d02 <_realloc_r+0x532>
81002b93:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002b96:	8b 40 0c             	mov    0xc(%eax),%eax
81002b99:	89 45 b8             	mov    %eax,-0x48(%ebp)
81002b9c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002b9f:	8b 40 08             	mov    0x8(%eax),%eax
81002ba2:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002ba5:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002ba8:	8b 55 b8             	mov    -0x48(%ebp),%edx
81002bab:	89 50 0c             	mov    %edx,0xc(%eax)
81002bae:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002bb1:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002bb4:	89 50 08             	mov    %edx,0x8(%eax)
81002bb7:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002bba:	8b 40 0c             	mov    0xc(%eax),%eax
81002bbd:	89 45 b8             	mov    %eax,-0x48(%ebp)
81002bc0:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002bc3:	8b 40 08             	mov    0x8(%eax),%eax
81002bc6:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002bc9:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002bcc:	8b 55 b8             	mov    -0x48(%ebp),%edx
81002bcf:	89 50 0c             	mov    %edx,0xc(%eax)
81002bd2:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002bd5:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002bd8:	89 50 08             	mov    %edx,0x8(%eax)
81002bdb:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002bde:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002be1:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002be4:	8b 45 ac             	mov    -0x54(%ebp),%eax
81002be7:	01 d0                	add    %edx,%eax
81002be9:	01 45 f0             	add    %eax,-0x10(%ebp)
81002bec:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002bef:	83 c0 08             	add    $0x8,%eax
81002bf2:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002bf5:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002bf8:	83 e8 04             	sub    $0x4,%eax
81002bfb:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81002bfe:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81002c02:	0f 87 e1 00 00 00    	ja     81002ce9 <_realloc_r+0x519>
81002c08:	8b 45 0c             	mov    0xc(%ebp),%eax
81002c0b:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c0e:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002c11:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002c14:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81002c18:	0f 86 90 00 00 00    	jbe    81002cae <_realloc_r+0x4de>
81002c1e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c21:	8d 42 04             	lea    0x4(%edx),%eax
81002c24:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c27:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c2a:	8d 48 04             	lea    0x4(%eax),%ecx
81002c2d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c30:	8b 12                	mov    (%edx),%edx
81002c32:	89 10                	mov    %edx,(%eax)
81002c34:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c37:	8d 42 04             	lea    0x4(%edx),%eax
81002c3a:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c3d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c40:	8d 48 04             	lea    0x4(%eax),%ecx
81002c43:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c46:	8b 12                	mov    (%edx),%edx
81002c48:	89 10                	mov    %edx,(%eax)
81002c4a:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81002c4e:	76 5e                	jbe    81002cae <_realloc_r+0x4de>
81002c50:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c53:	8d 42 04             	lea    0x4(%edx),%eax
81002c56:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c59:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c5c:	8d 48 04             	lea    0x4(%eax),%ecx
81002c5f:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c62:	8b 12                	mov    (%edx),%edx
81002c64:	89 10                	mov    %edx,(%eax)
81002c66:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c69:	8d 42 04             	lea    0x4(%edx),%eax
81002c6c:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c6f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c72:	8d 48 04             	lea    0x4(%eax),%ecx
81002c75:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c78:	8b 12                	mov    (%edx),%edx
81002c7a:	89 10                	mov    %edx,(%eax)
81002c7c:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81002c80:	76 2c                	jbe    81002cae <_realloc_r+0x4de>
81002c82:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c85:	8d 42 04             	lea    0x4(%edx),%eax
81002c88:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c8b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c8e:	8d 48 04             	lea    0x4(%eax),%ecx
81002c91:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c94:	8b 12                	mov    (%edx),%edx
81002c96:	89 10                	mov    %edx,(%eax)
81002c98:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c9b:	8d 42 04             	lea    0x4(%edx),%eax
81002c9e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002ca1:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002ca4:	8d 48 04             	lea    0x4(%eax),%ecx
81002ca7:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002caa:	8b 12                	mov    (%edx),%edx
81002cac:	89 10                	mov    %edx,(%eax)
81002cae:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002cb1:	8d 42 04             	lea    0x4(%edx),%eax
81002cb4:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002cb7:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002cba:	8d 48 04             	lea    0x4(%eax),%ecx
81002cbd:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002cc0:	8b 12                	mov    (%edx),%edx
81002cc2:	89 10                	mov    %edx,(%eax)
81002cc4:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002cc7:	8d 42 04             	lea    0x4(%edx),%eax
81002cca:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002ccd:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002cd0:	8d 48 04             	lea    0x4(%eax),%ecx
81002cd3:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002cd6:	8b 12                	mov    (%edx),%edx
81002cd8:	89 10                	mov    %edx,(%eax)
81002cda:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002cdd:	8b 10                	mov    (%eax),%edx
81002cdf:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002ce2:	89 10                	mov    %edx,(%eax)
81002ce4:	e9 12 03 00 00       	jmp    81002ffb <_realloc_r+0x82b>
81002ce9:	83 ec 04             	sub    $0x4,%esp
81002cec:	ff 75 a4             	push   -0x5c(%ebp)
81002cef:	ff 75 0c             	push   0xc(%ebp)
81002cf2:	ff 75 a8             	push   -0x58(%ebp)
81002cf5:	e8 66 ee ff ff       	call   81001b60 <memmove>
81002cfa:	83 c4 10             	add    $0x10,%esp
81002cfd:	e9 f9 02 00 00       	jmp    81002ffb <_realloc_r+0x82b>
81002d02:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81002d06:	0f 84 5b 01 00 00    	je     81002e67 <_realloc_r+0x697>
81002d0c:	8b 55 ac             	mov    -0x54(%ebp),%edx
81002d0f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002d12:	01 d0                	add    %edx,%eax
81002d14:	89 c2                	mov    %eax,%edx
81002d16:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002d19:	39 c2                	cmp    %eax,%edx
81002d1b:	0f 8c 46 01 00 00    	jl     81002e67 <_realloc_r+0x697>
81002d21:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002d24:	8b 40 0c             	mov    0xc(%eax),%eax
81002d27:	89 45 b8             	mov    %eax,-0x48(%ebp)
81002d2a:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002d2d:	8b 40 08             	mov    0x8(%eax),%eax
81002d30:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002d33:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002d36:	8b 55 b8             	mov    -0x48(%ebp),%edx
81002d39:	89 50 0c             	mov    %edx,0xc(%eax)
81002d3c:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002d3f:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002d42:	89 50 08             	mov    %edx,0x8(%eax)
81002d45:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002d48:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002d4b:	8b 45 ac             	mov    -0x54(%ebp),%eax
81002d4e:	01 45 f0             	add    %eax,-0x10(%ebp)
81002d51:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d54:	83 c0 08             	add    $0x8,%eax
81002d57:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002d5a:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002d5d:	83 e8 04             	sub    $0x4,%eax
81002d60:	89 45 9c             	mov    %eax,-0x64(%ebp)
81002d63:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
81002d67:	0f 87 e1 00 00 00    	ja     81002e4e <_realloc_r+0x67e>
81002d6d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d70:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d73:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002d76:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002d79:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81002d7d:	0f 86 90 00 00 00    	jbe    81002e13 <_realloc_r+0x643>
81002d83:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d86:	8d 42 04             	lea    0x4(%edx),%eax
81002d89:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d8c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d8f:	8d 48 04             	lea    0x4(%eax),%ecx
81002d92:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d95:	8b 12                	mov    (%edx),%edx
81002d97:	89 10                	mov    %edx,(%eax)
81002d99:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d9c:	8d 42 04             	lea    0x4(%edx),%eax
81002d9f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002da2:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002da5:	8d 48 04             	lea    0x4(%eax),%ecx
81002da8:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002dab:	8b 12                	mov    (%edx),%edx
81002dad:	89 10                	mov    %edx,(%eax)
81002daf:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
81002db3:	76 5e                	jbe    81002e13 <_realloc_r+0x643>
81002db5:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002db8:	8d 42 04             	lea    0x4(%edx),%eax
81002dbb:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002dbe:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002dc1:	8d 48 04             	lea    0x4(%eax),%ecx
81002dc4:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002dc7:	8b 12                	mov    (%edx),%edx
81002dc9:	89 10                	mov    %edx,(%eax)
81002dcb:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002dce:	8d 42 04             	lea    0x4(%edx),%eax
81002dd1:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002dd4:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002dd7:	8d 48 04             	lea    0x4(%eax),%ecx
81002dda:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002ddd:	8b 12                	mov    (%edx),%edx
81002ddf:	89 10                	mov    %edx,(%eax)
81002de1:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81002de5:	76 2c                	jbe    81002e13 <_realloc_r+0x643>
81002de7:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002dea:	8d 42 04             	lea    0x4(%edx),%eax
81002ded:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002df0:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002df3:	8d 48 04             	lea    0x4(%eax),%ecx
81002df6:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002df9:	8b 12                	mov    (%edx),%edx
81002dfb:	89 10                	mov    %edx,(%eax)
81002dfd:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002e00:	8d 42 04             	lea    0x4(%edx),%eax
81002e03:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002e06:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002e09:	8d 48 04             	lea    0x4(%eax),%ecx
81002e0c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002e0f:	8b 12                	mov    (%edx),%edx
81002e11:	89 10                	mov    %edx,(%eax)
81002e13:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002e16:	8d 42 04             	lea    0x4(%edx),%eax
81002e19:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002e1c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002e1f:	8d 48 04             	lea    0x4(%eax),%ecx
81002e22:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002e25:	8b 12                	mov    (%edx),%edx
81002e27:	89 10                	mov    %edx,(%eax)
81002e29:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002e2c:	8d 42 04             	lea    0x4(%edx),%eax
81002e2f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002e32:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002e35:	8d 48 04             	lea    0x4(%eax),%ecx
81002e38:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002e3b:	8b 12                	mov    (%edx),%edx
81002e3d:	89 10                	mov    %edx,(%eax)
81002e3f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002e42:	8b 10                	mov    (%eax),%edx
81002e44:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002e47:	89 10                	mov    %edx,(%eax)
81002e49:	e9 ad 01 00 00       	jmp    81002ffb <_realloc_r+0x82b>
81002e4e:	83 ec 04             	sub    $0x4,%esp
81002e51:	ff 75 9c             	push   -0x64(%ebp)
81002e54:	ff 75 0c             	push   0xc(%ebp)
81002e57:	ff 75 a8             	push   -0x58(%ebp)
81002e5a:	e8 01 ed ff ff       	call   81001b60 <memmove>
81002e5f:	83 c4 10             	add    $0x10,%esp
81002e62:	e9 94 01 00 00       	jmp    81002ffb <_realloc_r+0x82b>
81002e67:	83 ec 08             	sub    $0x8,%esp
81002e6a:	ff 75 10             	push   0x10(%ebp)
81002e6d:	ff 75 08             	push   0x8(%ebp)
81002e70:	e8 da e3 ff ff       	call   8100124f <_malloc_r>
81002e75:	83 c4 10             	add    $0x10,%esp
81002e78:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002e7b:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81002e7f:	75 18                	jne    81002e99 <_realloc_r+0x6c9>
81002e81:	83 ec 0c             	sub    $0xc,%esp
81002e84:	ff 75 08             	push   0x8(%ebp)
81002e87:	e8 ef ed ff ff       	call   81001c7b <__malloc_unlock>
81002e8c:	83 c4 10             	add    $0x10,%esp
81002e8f:	b8 00 00 00 00       	mov    $0x0,%eax
81002e94:	e9 0f 02 00 00       	jmp    810030a8 <_realloc_r+0x8d8>
81002e99:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002e9c:	83 e8 08             	sub    $0x8,%eax
81002e9f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002ea2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002ea5:	8b 40 04             	mov    0x4(%eax),%eax
81002ea8:	83 e0 fe             	and    $0xfffffffe,%eax
81002eab:	89 c2                	mov    %eax,%edx
81002ead:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002eb0:	01 d0                	add    %edx,%eax
81002eb2:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81002eb5:	75 17                	jne    81002ece <_realloc_r+0x6fe>
81002eb7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002eba:	8b 40 04             	mov    0x4(%eax),%eax
81002ebd:	83 e0 fc             	and    $0xfffffffc,%eax
81002ec0:	01 45 f0             	add    %eax,-0x10(%ebp)
81002ec3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002ec6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002ec9:	e9 2d 01 00 00       	jmp    81002ffb <_realloc_r+0x82b>
81002ece:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002ed1:	83 e8 04             	sub    $0x4,%eax
81002ed4:	89 45 98             	mov    %eax,-0x68(%ebp)
81002ed7:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81002edb:	0f 87 de 00 00 00    	ja     81002fbf <_realloc_r+0x7ef>
81002ee1:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ee4:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002ee7:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002eea:	89 45 c8             	mov    %eax,-0x38(%ebp)
81002eed:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81002ef1:	0f 86 90 00 00 00    	jbe    81002f87 <_realloc_r+0x7b7>
81002ef7:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002efa:	8d 42 04             	lea    0x4(%edx),%eax
81002efd:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002f00:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f03:	8d 48 04             	lea    0x4(%eax),%ecx
81002f06:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002f09:	8b 12                	mov    (%edx),%edx
81002f0b:	89 10                	mov    %edx,(%eax)
81002f0d:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002f10:	8d 42 04             	lea    0x4(%edx),%eax
81002f13:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002f16:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f19:	8d 48 04             	lea    0x4(%eax),%ecx
81002f1c:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002f1f:	8b 12                	mov    (%edx),%edx
81002f21:	89 10                	mov    %edx,(%eax)
81002f23:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81002f27:	76 5e                	jbe    81002f87 <_realloc_r+0x7b7>
81002f29:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002f2c:	8d 42 04             	lea    0x4(%edx),%eax
81002f2f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002f32:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f35:	8d 48 04             	lea    0x4(%eax),%ecx
81002f38:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002f3b:	8b 12                	mov    (%edx),%edx
81002f3d:	89 10                	mov    %edx,(%eax)
81002f3f:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002f42:	8d 42 04             	lea    0x4(%edx),%eax
81002f45:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002f48:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f4b:	8d 48 04             	lea    0x4(%eax),%ecx
81002f4e:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002f51:	8b 12                	mov    (%edx),%edx
81002f53:	89 10                	mov    %edx,(%eax)
81002f55:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
81002f59:	76 2c                	jbe    81002f87 <_realloc_r+0x7b7>
81002f5b:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002f5e:	8d 42 04             	lea    0x4(%edx),%eax
81002f61:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002f64:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f67:	8d 48 04             	lea    0x4(%eax),%ecx
81002f6a:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002f6d:	8b 12                	mov    (%edx),%edx
81002f6f:	89 10                	mov    %edx,(%eax)
81002f71:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002f74:	8d 42 04             	lea    0x4(%edx),%eax
81002f77:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002f7a:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f7d:	8d 48 04             	lea    0x4(%eax),%ecx
81002f80:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002f83:	8b 12                	mov    (%edx),%edx
81002f85:	89 10                	mov    %edx,(%eax)
81002f87:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002f8a:	8d 42 04             	lea    0x4(%edx),%eax
81002f8d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002f90:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f93:	8d 48 04             	lea    0x4(%eax),%ecx
81002f96:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002f99:	8b 12                	mov    (%edx),%edx
81002f9b:	89 10                	mov    %edx,(%eax)
81002f9d:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002fa0:	8d 42 04             	lea    0x4(%edx),%eax
81002fa3:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002fa6:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002fa9:	8d 48 04             	lea    0x4(%eax),%ecx
81002fac:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002faf:	8b 12                	mov    (%edx),%edx
81002fb1:	89 10                	mov    %edx,(%eax)
81002fb3:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002fb6:	8b 10                	mov    (%eax),%edx
81002fb8:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002fbb:	89 10                	mov    %edx,(%eax)
81002fbd:	eb 14                	jmp    81002fd3 <_realloc_r+0x803>
81002fbf:	83 ec 04             	sub    $0x4,%esp
81002fc2:	ff 75 98             	push   -0x68(%ebp)
81002fc5:	ff 75 0c             	push   0xc(%ebp)
81002fc8:	ff 75 a8             	push   -0x58(%ebp)
81002fcb:	e8 90 eb ff ff       	call   81001b60 <memmove>
81002fd0:	83 c4 10             	add    $0x10,%esp
81002fd3:	83 ec 08             	sub    $0x8,%esp
81002fd6:	ff 75 0c             	push   0xc(%ebp)
81002fd9:	ff 75 08             	push   0x8(%ebp)
81002fdc:	e8 c5 0a 00 00       	call   81003aa6 <_free_r>
81002fe1:	83 c4 10             	add    $0x10,%esp
81002fe4:	83 ec 0c             	sub    $0xc,%esp
81002fe7:	ff 75 08             	push   0x8(%ebp)
81002fea:	e8 8c ec ff ff       	call   81001c7b <__malloc_unlock>
81002fef:	83 c4 10             	add    $0x10,%esp
81002ff2:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002ff5:	e9 ae 00 00 00       	jmp    810030a8 <_realloc_r+0x8d8>
81002ffa:	90                   	nop
81002ffb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002ffe:	2b 45 bc             	sub    -0x44(%ebp),%eax
81003001:	89 45 94             	mov    %eax,-0x6c(%ebp)
81003004:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81003008:	76 5d                	jbe    81003067 <_realloc_r+0x897>
8100300a:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100300d:	8b 45 bc             	mov    -0x44(%ebp),%eax
81003010:	01 d0                	add    %edx,%eax
81003012:	89 45 90             	mov    %eax,-0x70(%ebp)
81003015:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003018:	8b 40 04             	mov    0x4(%eax),%eax
8100301b:	83 e0 01             	and    $0x1,%eax
8100301e:	0b 45 bc             	or     -0x44(%ebp),%eax
81003021:	89 c2                	mov    %eax,%edx
81003023:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003026:	89 50 04             	mov    %edx,0x4(%eax)
81003029:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100302c:	83 c8 01             	or     $0x1,%eax
8100302f:	89 c2                	mov    %eax,%edx
81003031:	8b 45 90             	mov    -0x70(%ebp),%eax
81003034:	89 50 04             	mov    %edx,0x4(%eax)
81003037:	8b 55 90             	mov    -0x70(%ebp),%edx
8100303a:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100303d:	01 d0                	add    %edx,%eax
8100303f:	8b 50 04             	mov    0x4(%eax),%edx
81003042:	8b 4d 90             	mov    -0x70(%ebp),%ecx
81003045:	8b 45 94             	mov    -0x6c(%ebp),%eax
81003048:	01 c8                	add    %ecx,%eax
8100304a:	83 ca 01             	or     $0x1,%edx
8100304d:	89 50 04             	mov    %edx,0x4(%eax)
81003050:	8b 45 90             	mov    -0x70(%ebp),%eax
81003053:	83 c0 08             	add    $0x8,%eax
81003056:	83 ec 08             	sub    $0x8,%esp
81003059:	50                   	push   %eax
8100305a:	ff 75 08             	push   0x8(%ebp)
8100305d:	e8 44 0a 00 00       	call   81003aa6 <_free_r>
81003062:	83 c4 10             	add    $0x10,%esp
81003065:	eb 2d                	jmp    81003094 <_realloc_r+0x8c4>
81003067:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100306a:	8b 40 04             	mov    0x4(%eax),%eax
8100306d:	83 e0 01             	and    $0x1,%eax
81003070:	0b 45 f0             	or     -0x10(%ebp),%eax
81003073:	89 c2                	mov    %eax,%edx
81003075:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003078:	89 50 04             	mov    %edx,0x4(%eax)
8100307b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100307e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003081:	01 d0                	add    %edx,%eax
81003083:	8b 50 04             	mov    0x4(%eax),%edx
81003086:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003089:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100308c:	01 c8                	add    %ecx,%eax
8100308e:	83 ca 01             	or     $0x1,%edx
81003091:	89 50 04             	mov    %edx,0x4(%eax)
81003094:	83 ec 0c             	sub    $0xc,%esp
81003097:	ff 75 08             	push   0x8(%ebp)
8100309a:	e8 dc eb ff ff       	call   81001c7b <__malloc_unlock>
8100309f:	83 c4 10             	add    $0x10,%esp
810030a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810030a5:	83 c0 08             	add    $0x8,%eax
810030a8:	c9                   	leave  
810030a9:	c3                   	ret    

810030aa <_sbrk_r>:
810030aa:	55                   	push   %ebp
810030ab:	89 e5                	mov    %esp,%ebp
810030ad:	83 ec 18             	sub    $0x18,%esp
810030b0:	c7 05 50 56 00 81 00 	movl   $0x0,0x81005650
810030b7:	00 00 00 
810030ba:	83 ec 0c             	sub    $0xc,%esp
810030bd:	ff 75 0c             	push   0xc(%ebp)
810030c0:	e8 8b d3 ff ff       	call   81000450 <sbrk>
810030c5:	83 c4 10             	add    $0x10,%esp
810030c8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810030cb:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810030cf:	75 14                	jne    810030e5 <_sbrk_r+0x3b>
810030d1:	a1 50 56 00 81       	mov    0x81005650,%eax
810030d6:	85 c0                	test   %eax,%eax
810030d8:	74 0b                	je     810030e5 <_sbrk_r+0x3b>
810030da:	8b 15 50 56 00 81    	mov    0x81005650,%edx
810030e0:	8b 45 08             	mov    0x8(%ebp),%eax
810030e3:	89 10                	mov    %edx,(%eax)
810030e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810030e8:	c9                   	leave  
810030e9:	c3                   	ret    

810030ea <__sread>:
810030ea:	55                   	push   %ebp
810030eb:	89 e5                	mov    %esp,%ebp
810030ed:	56                   	push   %esi
810030ee:	53                   	push   %ebx
810030ef:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810030f2:	8b 55 14             	mov    0x14(%ebp),%edx
810030f5:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810030f9:	98                   	cwtl   
810030fa:	52                   	push   %edx
810030fb:	ff 75 10             	push   0x10(%ebp)
810030fe:	50                   	push   %eax
810030ff:	ff 75 08             	push   0x8(%ebp)
81003102:	e8 dd 11 00 00       	call   810042e4 <_read_r>
81003107:	83 c4 10             	add    $0x10,%esp
8100310a:	89 c6                	mov    %eax,%esi
8100310c:	85 f6                	test   %esi,%esi
8100310e:	78 0a                	js     8100311a <__sread+0x30>
81003110:	8b 43 50             	mov    0x50(%ebx),%eax
81003113:	01 f0                	add    %esi,%eax
81003115:	89 43 50             	mov    %eax,0x50(%ebx)
81003118:	eb 0b                	jmp    81003125 <__sread+0x3b>
8100311a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100311e:	80 e4 ef             	and    $0xef,%ah
81003121:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003125:	89 f0                	mov    %esi,%eax
81003127:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100312a:	5b                   	pop    %ebx
8100312b:	5e                   	pop    %esi
8100312c:	5d                   	pop    %ebp
8100312d:	c3                   	ret    

8100312e <__seofread>:
8100312e:	55                   	push   %ebp
8100312f:	89 e5                	mov    %esp,%ebp
81003131:	b8 00 00 00 00       	mov    $0x0,%eax
81003136:	5d                   	pop    %ebp
81003137:	c3                   	ret    

81003138 <__swrite>:
81003138:	55                   	push   %ebp
81003139:	89 e5                	mov    %esp,%ebp
8100313b:	53                   	push   %ebx
8100313c:	83 ec 14             	sub    $0x14,%esp
8100313f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003142:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003146:	98                   	cwtl   
81003147:	25 00 01 00 00       	and    $0x100,%eax
8100314c:	85 c0                	test   %eax,%eax
8100314e:	74 15                	je     81003165 <__swrite+0x2d>
81003150:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003154:	98                   	cwtl   
81003155:	6a 02                	push   $0x2
81003157:	6a 00                	push   $0x0
81003159:	50                   	push   %eax
8100315a:	ff 75 08             	push   0x8(%ebp)
8100315d:	e8 26 0f 00 00       	call   81004088 <_lseek_r>
81003162:	83 c4 10             	add    $0x10,%esp
81003165:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003169:	80 e4 ef             	and    $0xef,%ah
8100316c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003170:	8b 55 14             	mov    0x14(%ebp),%edx
81003173:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003177:	98                   	cwtl   
81003178:	52                   	push   %edx
81003179:	ff 75 10             	push   0x10(%ebp)
8100317c:	50                   	push   %eax
8100317d:	ff 75 08             	push   0x8(%ebp)
81003180:	e8 b0 01 00 00       	call   81003335 <_write_r>
81003185:	83 c4 10             	add    $0x10,%esp
81003188:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100318b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100318e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003191:	c9                   	leave  
81003192:	c3                   	ret    

81003193 <__sseek>:
81003193:	55                   	push   %ebp
81003194:	89 e5                	mov    %esp,%ebp
81003196:	56                   	push   %esi
81003197:	53                   	push   %ebx
81003198:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100319b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100319f:	98                   	cwtl   
810031a0:	ff 75 14             	push   0x14(%ebp)
810031a3:	ff 75 10             	push   0x10(%ebp)
810031a6:	50                   	push   %eax
810031a7:	ff 75 08             	push   0x8(%ebp)
810031aa:	e8 d9 0e 00 00       	call   81004088 <_lseek_r>
810031af:	83 c4 10             	add    $0x10,%esp
810031b2:	89 c6                	mov    %eax,%esi
810031b4:	83 fe ff             	cmp    $0xffffffff,%esi
810031b7:	75 0d                	jne    810031c6 <__sseek+0x33>
810031b9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810031bd:	80 e4 ef             	and    $0xef,%ah
810031c0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810031c4:	eb 0e                	jmp    810031d4 <__sseek+0x41>
810031c6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810031ca:	80 cc 10             	or     $0x10,%ah
810031cd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810031d1:	89 73 50             	mov    %esi,0x50(%ebx)
810031d4:	89 f0                	mov    %esi,%eax
810031d6:	8d 65 f8             	lea    -0x8(%ebp),%esp
810031d9:	5b                   	pop    %ebx
810031da:	5e                   	pop    %esi
810031db:	5d                   	pop    %ebp
810031dc:	c3                   	ret    

810031dd <__sclose>:
810031dd:	55                   	push   %ebp
810031de:	89 e5                	mov    %esp,%ebp
810031e0:	83 ec 18             	sub    $0x18,%esp
810031e3:	8b 45 0c             	mov    0xc(%ebp),%eax
810031e6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810031e9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810031ec:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
810031f0:	98                   	cwtl   
810031f1:	83 ec 08             	sub    $0x8,%esp
810031f4:	50                   	push   %eax
810031f5:	ff 75 08             	push   0x8(%ebp)
810031f8:	e8 d9 02 00 00       	call   810034d6 <_close_r>
810031fd:	83 c4 10             	add    $0x10,%esp
81003200:	c9                   	leave  
81003201:	c3                   	ret    

81003202 <__swbuf_r>:
81003202:	55                   	push   %ebp
81003203:	89 e5                	mov    %esp,%ebp
81003205:	57                   	push   %edi
81003206:	56                   	push   %esi
81003207:	53                   	push   %ebx
81003208:	83 ec 1c             	sub    $0x1c,%esp
8100320b:	8b 7d 0c             	mov    0xc(%ebp),%edi
8100320e:	8b 5d 10             	mov    0x10(%ebp),%ebx
81003211:	8b 45 08             	mov    0x8(%ebp),%eax
81003214:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003217:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100321b:	74 18                	je     81003235 <__swbuf_r+0x33>
8100321d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003220:	8b 40 38             	mov    0x38(%eax),%eax
81003223:	85 c0                	test   %eax,%eax
81003225:	75 0e                	jne    81003235 <__swbuf_r+0x33>
81003227:	83 ec 0c             	sub    $0xc,%esp
8100322a:	ff 75 e4             	push   -0x1c(%ebp)
8100322d:	e8 0c d7 ff ff       	call   8100093e <__sinit>
81003232:	83 c4 10             	add    $0x10,%esp
81003235:	8b 43 18             	mov    0x18(%ebx),%eax
81003238:	89 43 08             	mov    %eax,0x8(%ebx)
8100323b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100323f:	98                   	cwtl   
81003240:	83 e0 08             	and    $0x8,%eax
81003243:	85 c0                	test   %eax,%eax
81003245:	74 07                	je     8100324e <__swbuf_r+0x4c>
81003247:	8b 43 10             	mov    0x10(%ebx),%eax
8100324a:	85 c0                	test   %eax,%eax
8100324c:	75 1d                	jne    8100326b <__swbuf_r+0x69>
8100324e:	83 ec 08             	sub    $0x8,%esp
81003251:	53                   	push   %ebx
81003252:	ff 75 08             	push   0x8(%ebp)
81003255:	e8 21 01 00 00       	call   8100337b <__swsetup_r>
8100325a:	83 c4 10             	add    $0x10,%esp
8100325d:	85 c0                	test   %eax,%eax
8100325f:	74 0a                	je     8100326b <__swbuf_r+0x69>
81003261:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003266:	e9 a1 00 00 00       	jmp    8100330c <__swbuf_r+0x10a>
8100326b:	89 f8                	mov    %edi,%eax
8100326d:	0f b6 f8             	movzbl %al,%edi
81003270:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003274:	98                   	cwtl   
81003275:	25 00 20 00 00       	and    $0x2000,%eax
8100327a:	85 c0                	test   %eax,%eax
8100327c:	75 14                	jne    81003292 <__swbuf_r+0x90>
8100327e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003282:	80 cc 20             	or     $0x20,%ah
81003285:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003289:	8b 43 64             	mov    0x64(%ebx),%eax
8100328c:	80 e4 df             	and    $0xdf,%ah
8100328f:	89 43 64             	mov    %eax,0x64(%ebx)
81003292:	8b 03                	mov    (%ebx),%eax
81003294:	8b 53 10             	mov    0x10(%ebx),%edx
81003297:	29 d0                	sub    %edx,%eax
81003299:	89 c6                	mov    %eax,%esi
8100329b:	8b 43 14             	mov    0x14(%ebx),%eax
8100329e:	39 c6                	cmp    %eax,%esi
810032a0:	7c 1f                	jl     810032c1 <__swbuf_r+0xbf>
810032a2:	83 ec 08             	sub    $0x8,%esp
810032a5:	53                   	push   %ebx
810032a6:	ff 75 08             	push   0x8(%ebp)
810032a9:	e8 b2 05 00 00       	call   81003860 <_fflush_r>
810032ae:	83 c4 10             	add    $0x10,%esp
810032b1:	85 c0                	test   %eax,%eax
810032b3:	74 07                	je     810032bc <__swbuf_r+0xba>
810032b5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810032ba:	eb 50                	jmp    8100330c <__swbuf_r+0x10a>
810032bc:	be 00 00 00 00       	mov    $0x0,%esi
810032c1:	8b 43 08             	mov    0x8(%ebx),%eax
810032c4:	83 e8 01             	sub    $0x1,%eax
810032c7:	89 43 08             	mov    %eax,0x8(%ebx)
810032ca:	8b 03                	mov    (%ebx),%eax
810032cc:	8d 50 01             	lea    0x1(%eax),%edx
810032cf:	89 13                	mov    %edx,(%ebx)
810032d1:	89 fa                	mov    %edi,%edx
810032d3:	88 10                	mov    %dl,(%eax)
810032d5:	83 c6 01             	add    $0x1,%esi
810032d8:	8b 43 14             	mov    0x14(%ebx),%eax
810032db:	39 c6                	cmp    %eax,%esi
810032dd:	74 11                	je     810032f0 <__swbuf_r+0xee>
810032df:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810032e3:	98                   	cwtl   
810032e4:	83 e0 01             	and    $0x1,%eax
810032e7:	85 c0                	test   %eax,%eax
810032e9:	74 1f                	je     8100330a <__swbuf_r+0x108>
810032eb:	83 ff 0a             	cmp    $0xa,%edi
810032ee:	75 1a                	jne    8100330a <__swbuf_r+0x108>
810032f0:	83 ec 08             	sub    $0x8,%esp
810032f3:	53                   	push   %ebx
810032f4:	ff 75 08             	push   0x8(%ebp)
810032f7:	e8 64 05 00 00       	call   81003860 <_fflush_r>
810032fc:	83 c4 10             	add    $0x10,%esp
810032ff:	85 c0                	test   %eax,%eax
81003301:	74 07                	je     8100330a <__swbuf_r+0x108>
81003303:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003308:	eb 02                	jmp    8100330c <__swbuf_r+0x10a>
8100330a:	89 f8                	mov    %edi,%eax
8100330c:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100330f:	5b                   	pop    %ebx
81003310:	5e                   	pop    %esi
81003311:	5f                   	pop    %edi
81003312:	5d                   	pop    %ebp
81003313:	c3                   	ret    

81003314 <__swbuf>:
81003314:	55                   	push   %ebp
81003315:	89 e5                	mov    %esp,%ebp
81003317:	83 ec 08             	sub    $0x8,%esp
8100331a:	8b 55 08             	mov    0x8(%ebp),%edx
8100331d:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81003320:	a1 24 50 00 81       	mov    0x81005024,%eax
81003325:	83 ec 04             	sub    $0x4,%esp
81003328:	51                   	push   %ecx
81003329:	52                   	push   %edx
8100332a:	50                   	push   %eax
8100332b:	e8 d2 fe ff ff       	call   81003202 <__swbuf_r>
81003330:	83 c4 10             	add    $0x10,%esp
81003333:	c9                   	leave  
81003334:	c3                   	ret    

81003335 <_write_r>:
81003335:	55                   	push   %ebp
81003336:	89 e5                	mov    %esp,%ebp
81003338:	83 ec 18             	sub    $0x18,%esp
8100333b:	c7 05 50 56 00 81 00 	movl   $0x0,0x81005650
81003342:	00 00 00 
81003345:	83 ec 04             	sub    $0x4,%esp
81003348:	ff 75 14             	push   0x14(%ebp)
8100334b:	ff 75 10             	push   0x10(%ebp)
8100334e:	ff 75 0c             	push   0xc(%ebp)
81003351:	e8 37 d0 ff ff       	call   8100038d <write>
81003356:	83 c4 10             	add    $0x10,%esp
81003359:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100335c:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003360:	75 14                	jne    81003376 <_write_r+0x41>
81003362:	a1 50 56 00 81       	mov    0x81005650,%eax
81003367:	85 c0                	test   %eax,%eax
81003369:	74 0b                	je     81003376 <_write_r+0x41>
8100336b:	8b 15 50 56 00 81    	mov    0x81005650,%edx
81003371:	8b 45 08             	mov    0x8(%ebp),%eax
81003374:	89 10                	mov    %edx,(%eax)
81003376:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003379:	c9                   	leave  
8100337a:	c3                   	ret    

8100337b <__swsetup_r>:
8100337b:	55                   	push   %ebp
8100337c:	89 e5                	mov    %esp,%ebp
8100337e:	53                   	push   %ebx
8100337f:	83 ec 14             	sub    $0x14,%esp
81003382:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003385:	a1 24 50 00 81       	mov    0x81005024,%eax
8100338a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100338d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003391:	74 18                	je     810033ab <__swsetup_r+0x30>
81003393:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003396:	8b 40 38             	mov    0x38(%eax),%eax
81003399:	85 c0                	test   %eax,%eax
8100339b:	75 0e                	jne    810033ab <__swsetup_r+0x30>
8100339d:	83 ec 0c             	sub    $0xc,%esp
810033a0:	ff 75 f4             	push   -0xc(%ebp)
810033a3:	e8 96 d5 ff ff       	call   8100093e <__sinit>
810033a8:	83 c4 10             	add    $0x10,%esp
810033ab:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033af:	98                   	cwtl   
810033b0:	83 e0 08             	and    $0x8,%eax
810033b3:	85 c0                	test   %eax,%eax
810033b5:	0f 85 82 00 00 00    	jne    8100343d <__swsetup_r+0xc2>
810033bb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033bf:	98                   	cwtl   
810033c0:	83 e0 10             	and    $0x10,%eax
810033c3:	85 c0                	test   %eax,%eax
810033c5:	75 1e                	jne    810033e5 <__swsetup_r+0x6a>
810033c7:	8b 45 08             	mov    0x8(%ebp),%eax
810033ca:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
810033d0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033d4:	83 c8 40             	or     $0x40,%eax
810033d7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810033db:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810033e0:	e9 ec 00 00 00       	jmp    810034d1 <__swsetup_r+0x156>
810033e5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033e9:	98                   	cwtl   
810033ea:	83 e0 04             	and    $0x4,%eax
810033ed:	85 c0                	test   %eax,%eax
810033ef:	74 41                	je     81003432 <__swsetup_r+0xb7>
810033f1:	8b 43 30             	mov    0x30(%ebx),%eax
810033f4:	85 c0                	test   %eax,%eax
810033f6:	74 23                	je     8100341b <__swsetup_r+0xa0>
810033f8:	8b 53 30             	mov    0x30(%ebx),%edx
810033fb:	8d 43 40             	lea    0x40(%ebx),%eax
810033fe:	39 c2                	cmp    %eax,%edx
81003400:	74 12                	je     81003414 <__swsetup_r+0x99>
81003402:	8b 43 30             	mov    0x30(%ebx),%eax
81003405:	83 ec 08             	sub    $0x8,%esp
81003408:	50                   	push   %eax
81003409:	ff 75 08             	push   0x8(%ebp)
8100340c:	e8 95 06 00 00       	call   81003aa6 <_free_r>
81003411:	83 c4 10             	add    $0x10,%esp
81003414:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100341b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100341f:	83 e0 db             	and    $0xffffffdb,%eax
81003422:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003426:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100342d:	8b 43 10             	mov    0x10(%ebx),%eax
81003430:	89 03                	mov    %eax,(%ebx)
81003432:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003436:	83 c8 08             	or     $0x8,%eax
81003439:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100343d:	8b 43 10             	mov    0x10(%ebx),%eax
81003440:	85 c0                	test   %eax,%eax
81003442:	75 2b                	jne    8100346f <__swsetup_r+0xf4>
81003444:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003448:	98                   	cwtl   
81003449:	25 00 02 00 00       	and    $0x200,%eax
8100344e:	85 c0                	test   %eax,%eax
81003450:	74 0e                	je     81003460 <__swsetup_r+0xe5>
81003452:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003456:	98                   	cwtl   
81003457:	25 80 00 00 00       	and    $0x80,%eax
8100345c:	85 c0                	test   %eax,%eax
8100345e:	74 0f                	je     8100346f <__swsetup_r+0xf4>
81003460:	83 ec 08             	sub    $0x8,%esp
81003463:	53                   	push   %ebx
81003464:	ff 75 08             	push   0x8(%ebp)
81003467:	e8 62 0c 00 00       	call   810040ce <__smakebuf_r>
8100346c:	83 c4 10             	add    $0x10,%esp
8100346f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003473:	98                   	cwtl   
81003474:	83 e0 01             	and    $0x1,%eax
81003477:	85 c0                	test   %eax,%eax
81003479:	74 11                	je     8100348c <__swsetup_r+0x111>
8100347b:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81003482:	8b 43 14             	mov    0x14(%ebx),%eax
81003485:	f7 d8                	neg    %eax
81003487:	89 43 18             	mov    %eax,0x18(%ebx)
8100348a:	eb 19                	jmp    810034a5 <__swsetup_r+0x12a>
8100348c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003490:	98                   	cwtl   
81003491:	83 e0 02             	and    $0x2,%eax
81003494:	85 c0                	test   %eax,%eax
81003496:	75 05                	jne    8100349d <__swsetup_r+0x122>
81003498:	8b 43 14             	mov    0x14(%ebx),%eax
8100349b:	eb 05                	jmp    810034a2 <__swsetup_r+0x127>
8100349d:	b8 00 00 00 00       	mov    $0x0,%eax
810034a2:	89 43 08             	mov    %eax,0x8(%ebx)
810034a5:	8b 43 10             	mov    0x10(%ebx),%eax
810034a8:	85 c0                	test   %eax,%eax
810034aa:	75 20                	jne    810034cc <__swsetup_r+0x151>
810034ac:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810034b0:	98                   	cwtl   
810034b1:	25 80 00 00 00       	and    $0x80,%eax
810034b6:	85 c0                	test   %eax,%eax
810034b8:	74 12                	je     810034cc <__swsetup_r+0x151>
810034ba:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810034be:	83 c8 40             	or     $0x40,%eax
810034c1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810034c5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810034ca:	eb 05                	jmp    810034d1 <__swsetup_r+0x156>
810034cc:	b8 00 00 00 00       	mov    $0x0,%eax
810034d1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810034d4:	c9                   	leave  
810034d5:	c3                   	ret    

810034d6 <_close_r>:
810034d6:	55                   	push   %ebp
810034d7:	89 e5                	mov    %esp,%ebp
810034d9:	83 ec 18             	sub    $0x18,%esp
810034dc:	c7 05 50 56 00 81 00 	movl   $0x0,0x81005650
810034e3:	00 00 00 
810034e6:	83 ec 0c             	sub    $0xc,%esp
810034e9:	ff 75 0c             	push   0xc(%ebp)
810034ec:	e8 c9 ce ff ff       	call   810003ba <close>
810034f1:	83 c4 10             	add    $0x10,%esp
810034f4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810034f7:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810034fb:	75 14                	jne    81003511 <_close_r+0x3b>
810034fd:	a1 50 56 00 81       	mov    0x81005650,%eax
81003502:	85 c0                	test   %eax,%eax
81003504:	74 0b                	je     81003511 <_close_r+0x3b>
81003506:	8b 15 50 56 00 81    	mov    0x81005650,%edx
8100350c:	8b 45 08             	mov    0x8(%ebp),%eax
8100350f:	89 10                	mov    %edx,(%eax)
81003511:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003514:	c9                   	leave  
81003515:	c3                   	ret    

81003516 <_fclose_r>:
81003516:	55                   	push   %ebp
81003517:	89 e5                	mov    %esp,%ebp
81003519:	53                   	push   %ebx
8100351a:	83 ec 14             	sub    $0x14,%esp
8100351d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003520:	85 db                	test   %ebx,%ebx
81003522:	75 0a                	jne    8100352e <_fclose_r+0x18>
81003524:	b8 00 00 00 00       	mov    $0x0,%eax
81003529:	e9 ea 00 00 00       	jmp    81003618 <_fclose_r+0x102>
8100352e:	8b 45 08             	mov    0x8(%ebp),%eax
81003531:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003534:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81003538:	74 18                	je     81003552 <_fclose_r+0x3c>
8100353a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100353d:	8b 40 38             	mov    0x38(%eax),%eax
81003540:	85 c0                	test   %eax,%eax
81003542:	75 0e                	jne    81003552 <_fclose_r+0x3c>
81003544:	83 ec 0c             	sub    $0xc,%esp
81003547:	ff 75 f0             	push   -0x10(%ebp)
8100354a:	e8 ef d3 ff ff       	call   8100093e <__sinit>
8100354f:	83 c4 10             	add    $0x10,%esp
81003552:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003556:	66 85 c0             	test   %ax,%ax
81003559:	75 0a                	jne    81003565 <_fclose_r+0x4f>
8100355b:	b8 00 00 00 00       	mov    $0x0,%eax
81003560:	e9 b3 00 00 00       	jmp    81003618 <_fclose_r+0x102>
81003565:	83 ec 08             	sub    $0x8,%esp
81003568:	53                   	push   %ebx
81003569:	ff 75 08             	push   0x8(%ebp)
8100356c:	e8 c9 00 00 00       	call   8100363a <__sflush_r>
81003571:	83 c4 10             	add    $0x10,%esp
81003574:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003577:	8b 43 2c             	mov    0x2c(%ebx),%eax
8100357a:	85 c0                	test   %eax,%eax
8100357c:	74 1d                	je     8100359b <_fclose_r+0x85>
8100357e:	8b 43 2c             	mov    0x2c(%ebx),%eax
81003581:	8b 53 1c             	mov    0x1c(%ebx),%edx
81003584:	83 ec 08             	sub    $0x8,%esp
81003587:	52                   	push   %edx
81003588:	ff 75 08             	push   0x8(%ebp)
8100358b:	ff d0                	call   *%eax
8100358d:	83 c4 10             	add    $0x10,%esp
81003590:	85 c0                	test   %eax,%eax
81003592:	79 07                	jns    8100359b <_fclose_r+0x85>
81003594:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
8100359b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100359f:	98                   	cwtl   
810035a0:	25 80 00 00 00       	and    $0x80,%eax
810035a5:	85 c0                	test   %eax,%eax
810035a7:	74 12                	je     810035bb <_fclose_r+0xa5>
810035a9:	8b 43 10             	mov    0x10(%ebx),%eax
810035ac:	83 ec 08             	sub    $0x8,%esp
810035af:	50                   	push   %eax
810035b0:	ff 75 08             	push   0x8(%ebp)
810035b3:	e8 ee 04 00 00       	call   81003aa6 <_free_r>
810035b8:	83 c4 10             	add    $0x10,%esp
810035bb:	8b 43 30             	mov    0x30(%ebx),%eax
810035be:	85 c0                	test   %eax,%eax
810035c0:	74 23                	je     810035e5 <_fclose_r+0xcf>
810035c2:	8b 53 30             	mov    0x30(%ebx),%edx
810035c5:	8d 43 40             	lea    0x40(%ebx),%eax
810035c8:	39 c2                	cmp    %eax,%edx
810035ca:	74 12                	je     810035de <_fclose_r+0xc8>
810035cc:	8b 43 30             	mov    0x30(%ebx),%eax
810035cf:	83 ec 08             	sub    $0x8,%esp
810035d2:	50                   	push   %eax
810035d3:	ff 75 08             	push   0x8(%ebp)
810035d6:	e8 cb 04 00 00       	call   81003aa6 <_free_r>
810035db:	83 c4 10             	add    $0x10,%esp
810035de:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810035e5:	8b 43 44             	mov    0x44(%ebx),%eax
810035e8:	85 c0                	test   %eax,%eax
810035ea:	74 19                	je     81003605 <_fclose_r+0xef>
810035ec:	8b 43 44             	mov    0x44(%ebx),%eax
810035ef:	83 ec 08             	sub    $0x8,%esp
810035f2:	50                   	push   %eax
810035f3:	ff 75 08             	push   0x8(%ebp)
810035f6:	e8 ab 04 00 00       	call   81003aa6 <_free_r>
810035fb:	83 c4 10             	add    $0x10,%esp
810035fe:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81003605:	e8 cd d3 ff ff       	call   810009d7 <__sfp_lock_acquire>
8100360a:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81003610:	e8 c8 d3 ff ff       	call   810009dd <__sfp_lock_release>
81003615:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003618:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100361b:	c9                   	leave  
8100361c:	c3                   	ret    

8100361d <fclose>:
8100361d:	55                   	push   %ebp
8100361e:	89 e5                	mov    %esp,%ebp
81003620:	83 ec 08             	sub    $0x8,%esp
81003623:	8b 55 08             	mov    0x8(%ebp),%edx
81003626:	a1 24 50 00 81       	mov    0x81005024,%eax
8100362b:	83 ec 08             	sub    $0x8,%esp
8100362e:	52                   	push   %edx
8100362f:	50                   	push   %eax
81003630:	e8 e1 fe ff ff       	call   81003516 <_fclose_r>
81003635:	83 c4 10             	add    $0x10,%esp
81003638:	c9                   	leave  
81003639:	c3                   	ret    

8100363a <__sflush_r>:
8100363a:	55                   	push   %ebp
8100363b:	89 e5                	mov    %esp,%ebp
8100363d:	57                   	push   %edi
8100363e:	56                   	push   %esi
8100363f:	53                   	push   %ebx
81003640:	83 ec 1c             	sub    $0x1c,%esp
81003643:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003646:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100364a:	66 89 45 de          	mov    %ax,-0x22(%ebp)
8100364e:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81003652:	83 e0 08             	and    $0x8,%eax
81003655:	85 c0                	test   %eax,%eax
81003657:	0f 85 93 01 00 00    	jne    810037f0 <__sflush_r+0x1b6>
8100365d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003661:	80 cc 08             	or     $0x8,%ah
81003664:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003668:	8b 43 04             	mov    0x4(%ebx),%eax
8100366b:	85 c0                	test   %eax,%eax
8100366d:	7f 0b                	jg     8100367a <__sflush_r+0x40>
8100366f:	8b 43 3c             	mov    0x3c(%ebx),%eax
81003672:	85 c0                	test   %eax,%eax
81003674:	0f 8e 6f 01 00 00    	jle    810037e9 <__sflush_r+0x1af>
8100367a:	8b 43 28             	mov    0x28(%ebx),%eax
8100367d:	85 c0                	test   %eax,%eax
8100367f:	0f 84 64 01 00 00    	je     810037e9 <__sflush_r+0x1af>
81003685:	8b 45 08             	mov    0x8(%ebp),%eax
81003688:	8b 00                	mov    (%eax),%eax
8100368a:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100368d:	8b 45 08             	mov    0x8(%ebp),%eax
81003690:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003696:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100369a:	98                   	cwtl   
8100369b:	25 00 10 00 00       	and    $0x1000,%eax
810036a0:	85 c0                	test   %eax,%eax
810036a2:	74 08                	je     810036ac <__sflush_r+0x72>
810036a4:	8b 43 50             	mov    0x50(%ebx),%eax
810036a7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810036aa:	eb 64                	jmp    81003710 <__sflush_r+0xd6>
810036ac:	8b 43 28             	mov    0x28(%ebx),%eax
810036af:	8b 53 1c             	mov    0x1c(%ebx),%edx
810036b2:	6a 01                	push   $0x1
810036b4:	6a 00                	push   $0x0
810036b6:	52                   	push   %edx
810036b7:	ff 75 08             	push   0x8(%ebp)
810036ba:	ff d0                	call   *%eax
810036bc:	83 c4 10             	add    $0x10,%esp
810036bf:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810036c2:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810036c6:	75 48                	jne    81003710 <__sflush_r+0xd6>
810036c8:	8b 45 08             	mov    0x8(%ebp),%eax
810036cb:	8b 00                	mov    (%eax),%eax
810036cd:	85 c0                	test   %eax,%eax
810036cf:	74 3f                	je     81003710 <__sflush_r+0xd6>
810036d1:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
810036d8:	8b 45 08             	mov    0x8(%ebp),%eax
810036db:	8b 00                	mov    (%eax),%eax
810036dd:	83 f8 1d             	cmp    $0x1d,%eax
810036e0:	74 0a                	je     810036ec <__sflush_r+0xb2>
810036e2:	8b 45 08             	mov    0x8(%ebp),%eax
810036e5:	8b 00                	mov    (%eax),%eax
810036e7:	83 f8 16             	cmp    $0x16,%eax
810036ea:	75 11                	jne    810036fd <__sflush_r+0xc3>
810036ec:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
810036f3:	8b 45 08             	mov    0x8(%ebp),%eax
810036f6:	8b 55 d8             	mov    -0x28(%ebp),%edx
810036f9:	89 10                	mov    %edx,(%eax)
810036fb:	eb 0b                	jmp    81003708 <__sflush_r+0xce>
810036fd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003701:	83 c8 40             	or     $0x40,%eax
81003704:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003708:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100370b:	e9 48 01 00 00       	jmp    81003858 <__sflush_r+0x21e>
81003710:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003714:	98                   	cwtl   
81003715:	83 e0 04             	and    $0x4,%eax
81003718:	85 c0                	test   %eax,%eax
8100371a:	74 13                	je     8100372f <__sflush_r+0xf5>
8100371c:	8b 43 04             	mov    0x4(%ebx),%eax
8100371f:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81003722:	8b 43 30             	mov    0x30(%ebx),%eax
81003725:	85 c0                	test   %eax,%eax
81003727:	74 06                	je     8100372f <__sflush_r+0xf5>
81003729:	8b 43 3c             	mov    0x3c(%ebx),%eax
8100372c:	29 45 e4             	sub    %eax,-0x1c(%ebp)
8100372f:	8b 43 28             	mov    0x28(%ebx),%eax
81003732:	8b 53 1c             	mov    0x1c(%ebx),%edx
81003735:	6a 00                	push   $0x0
81003737:	ff 75 e4             	push   -0x1c(%ebp)
8100373a:	52                   	push   %edx
8100373b:	ff 75 08             	push   0x8(%ebp)
8100373e:	ff d0                	call   *%eax
81003740:	83 c4 10             	add    $0x10,%esp
81003743:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003746:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8100374a:	75 1d                	jne    81003769 <__sflush_r+0x12f>
8100374c:	8b 45 08             	mov    0x8(%ebp),%eax
8100374f:	8b 00                	mov    (%eax),%eax
81003751:	85 c0                	test   %eax,%eax
81003753:	74 14                	je     81003769 <__sflush_r+0x12f>
81003755:	8b 45 08             	mov    0x8(%ebp),%eax
81003758:	8b 00                	mov    (%eax),%eax
8100375a:	83 f8 1d             	cmp    $0x1d,%eax
8100375d:	74 0a                	je     81003769 <__sflush_r+0x12f>
8100375f:	8b 45 08             	mov    0x8(%ebp),%eax
81003762:	8b 00                	mov    (%eax),%eax
81003764:	83 f8 16             	cmp    $0x16,%eax
81003767:	75 6e                	jne    810037d7 <__sflush_r+0x19d>
81003769:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100376d:	80 e4 f7             	and    $0xf7,%ah
81003770:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003774:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100377b:	8b 43 10             	mov    0x10(%ebx),%eax
8100377e:	89 03                	mov    %eax,(%ebx)
81003780:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003784:	98                   	cwtl   
81003785:	25 00 10 00 00       	and    $0x1000,%eax
8100378a:	85 c0                	test   %eax,%eax
8100378c:	74 15                	je     810037a3 <__sflush_r+0x169>
8100378e:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81003792:	75 09                	jne    8100379d <__sflush_r+0x163>
81003794:	8b 45 08             	mov    0x8(%ebp),%eax
81003797:	8b 00                	mov    (%eax),%eax
81003799:	85 c0                	test   %eax,%eax
8100379b:	75 06                	jne    810037a3 <__sflush_r+0x169>
8100379d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810037a0:	89 43 50             	mov    %eax,0x50(%ebx)
810037a3:	8b 45 08             	mov    0x8(%ebp),%eax
810037a6:	8b 55 d8             	mov    -0x28(%ebp),%edx
810037a9:	89 10                	mov    %edx,(%eax)
810037ab:	8b 43 30             	mov    0x30(%ebx),%eax
810037ae:	85 c0                	test   %eax,%eax
810037b0:	74 37                	je     810037e9 <__sflush_r+0x1af>
810037b2:	8b 53 30             	mov    0x30(%ebx),%edx
810037b5:	8d 43 40             	lea    0x40(%ebx),%eax
810037b8:	39 c2                	cmp    %eax,%edx
810037ba:	74 12                	je     810037ce <__sflush_r+0x194>
810037bc:	8b 43 30             	mov    0x30(%ebx),%eax
810037bf:	83 ec 08             	sub    $0x8,%esp
810037c2:	50                   	push   %eax
810037c3:	ff 75 08             	push   0x8(%ebp)
810037c6:	e8 db 02 00 00       	call   81003aa6 <_free_r>
810037cb:	83 c4 10             	add    $0x10,%esp
810037ce:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810037d5:	eb 12                	jmp    810037e9 <__sflush_r+0x1af>
810037d7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810037db:	83 c8 40             	or     $0x40,%eax
810037de:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810037e2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810037e7:	eb 6f                	jmp    81003858 <__sflush_r+0x21e>
810037e9:	b8 00 00 00 00       	mov    $0x0,%eax
810037ee:	eb 68                	jmp    81003858 <__sflush_r+0x21e>
810037f0:	8b 73 10             	mov    0x10(%ebx),%esi
810037f3:	85 f6                	test   %esi,%esi
810037f5:	75 07                	jne    810037fe <__sflush_r+0x1c4>
810037f7:	b8 00 00 00 00       	mov    $0x0,%eax
810037fc:	eb 5a                	jmp    81003858 <__sflush_r+0x21e>
810037fe:	8b 03                	mov    (%ebx),%eax
81003800:	29 f0                	sub    %esi,%eax
81003802:	89 c7                	mov    %eax,%edi
81003804:	89 33                	mov    %esi,(%ebx)
81003806:	0f bf 45 de          	movswl -0x22(%ebp),%eax
8100380a:	83 e0 03             	and    $0x3,%eax
8100380d:	85 c0                	test   %eax,%eax
8100380f:	75 05                	jne    81003816 <__sflush_r+0x1dc>
81003811:	8b 43 14             	mov    0x14(%ebx),%eax
81003814:	eb 05                	jmp    8100381b <__sflush_r+0x1e1>
81003816:	b8 00 00 00 00       	mov    $0x0,%eax
8100381b:	89 43 08             	mov    %eax,0x8(%ebx)
8100381e:	eb 2f                	jmp    8100384f <__sflush_r+0x215>
81003820:	8b 43 24             	mov    0x24(%ebx),%eax
81003823:	8b 53 1c             	mov    0x1c(%ebx),%edx
81003826:	57                   	push   %edi
81003827:	56                   	push   %esi
81003828:	52                   	push   %edx
81003829:	ff 75 08             	push   0x8(%ebp)
8100382c:	ff d0                	call   *%eax
8100382e:	83 c4 10             	add    $0x10,%esp
81003831:	85 c0                	test   %eax,%eax
81003833:	7f 12                	jg     81003847 <__sflush_r+0x20d>
81003835:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003839:	83 c8 40             	or     $0x40,%eax
8100383c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003840:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003845:	eb 11                	jmp    81003858 <__sflush_r+0x21e>
81003847:	89 c1                	mov    %eax,%ecx
81003849:	89 c8                	mov    %ecx,%eax
8100384b:	01 c6                	add    %eax,%esi
8100384d:	29 cf                	sub    %ecx,%edi
8100384f:	85 ff                	test   %edi,%edi
81003851:	7f cd                	jg     81003820 <__sflush_r+0x1e6>
81003853:	b8 00 00 00 00       	mov    $0x0,%eax
81003858:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100385b:	5b                   	pop    %ebx
8100385c:	5e                   	pop    %esi
8100385d:	5f                   	pop    %edi
8100385e:	5d                   	pop    %ebp
8100385f:	c3                   	ret    

81003860 <_fflush_r>:
81003860:	55                   	push   %ebp
81003861:	89 e5                	mov    %esp,%ebp
81003863:	53                   	push   %ebx
81003864:	83 ec 14             	sub    $0x14,%esp
81003867:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100386a:	8b 45 08             	mov    0x8(%ebp),%eax
8100386d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003870:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003874:	74 18                	je     8100388e <_fflush_r+0x2e>
81003876:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003879:	8b 40 38             	mov    0x38(%eax),%eax
8100387c:	85 c0                	test   %eax,%eax
8100387e:	75 0e                	jne    8100388e <_fflush_r+0x2e>
81003880:	83 ec 0c             	sub    $0xc,%esp
81003883:	ff 75 f4             	push   -0xc(%ebp)
81003886:	e8 b3 d0 ff ff       	call   8100093e <__sinit>
8100388b:	83 c4 10             	add    $0x10,%esp
8100388e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003892:	66 85 c0             	test   %ax,%ax
81003895:	75 07                	jne    8100389e <_fflush_r+0x3e>
81003897:	b8 00 00 00 00       	mov    $0x0,%eax
8100389c:	eb 15                	jmp    810038b3 <_fflush_r+0x53>
8100389e:	83 ec 08             	sub    $0x8,%esp
810038a1:	53                   	push   %ebx
810038a2:	ff 75 08             	push   0x8(%ebp)
810038a5:	e8 90 fd ff ff       	call   8100363a <__sflush_r>
810038aa:	83 c4 10             	add    $0x10,%esp
810038ad:	89 45 f0             	mov    %eax,-0x10(%ebp)
810038b0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810038b3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810038b6:	c9                   	leave  
810038b7:	c3                   	ret    

810038b8 <fflush>:
810038b8:	55                   	push   %ebp
810038b9:	89 e5                	mov    %esp,%ebp
810038bb:	83 ec 08             	sub    $0x8,%esp
810038be:	8b 55 08             	mov    0x8(%ebp),%edx
810038c1:	85 d2                	test   %edx,%edx
810038c3:	75 18                	jne    810038dd <fflush+0x25>
810038c5:	a1 8c 48 00 81       	mov    0x8100488c,%eax
810038ca:	83 ec 08             	sub    $0x8,%esp
810038cd:	68 60 38 00 81       	push   $0x81003860
810038d2:	50                   	push   %eax
810038d3:	e8 79 d6 ff ff       	call   81000f51 <_fwalk_reent>
810038d8:	83 c4 10             	add    $0x10,%esp
810038db:	eb 12                	jmp    810038ef <fflush+0x37>
810038dd:	a1 24 50 00 81       	mov    0x81005024,%eax
810038e2:	83 ec 08             	sub    $0x8,%esp
810038e5:	52                   	push   %edx
810038e6:	50                   	push   %eax
810038e7:	e8 74 ff ff ff       	call   81003860 <_fflush_r>
810038ec:	83 c4 10             	add    $0x10,%esp
810038ef:	c9                   	leave  
810038f0:	c3                   	ret    

810038f1 <__sputc_r>:
810038f1:	55                   	push   %ebp
810038f2:	89 e5                	mov    %esp,%ebp
810038f4:	83 ec 08             	sub    $0x8,%esp
810038f7:	8b 45 10             	mov    0x10(%ebp),%eax
810038fa:	8b 40 08             	mov    0x8(%eax),%eax
810038fd:	8d 50 ff             	lea    -0x1(%eax),%edx
81003900:	8b 45 10             	mov    0x10(%ebp),%eax
81003903:	89 50 08             	mov    %edx,0x8(%eax)
81003906:	8b 45 10             	mov    0x10(%ebp),%eax
81003909:	8b 40 08             	mov    0x8(%eax),%eax
8100390c:	85 c0                	test   %eax,%eax
8100390e:	79 17                	jns    81003927 <__sputc_r+0x36>
81003910:	8b 45 10             	mov    0x10(%ebp),%eax
81003913:	8b 50 08             	mov    0x8(%eax),%edx
81003916:	8b 45 10             	mov    0x10(%ebp),%eax
81003919:	8b 40 18             	mov    0x18(%eax),%eax
8100391c:	39 c2                	cmp    %eax,%edx
8100391e:	7c 21                	jl     81003941 <__sputc_r+0x50>
81003920:	8b 45 0c             	mov    0xc(%ebp),%eax
81003923:	3c 0a                	cmp    $0xa,%al
81003925:	74 1a                	je     81003941 <__sputc_r+0x50>
81003927:	8b 45 10             	mov    0x10(%ebp),%eax
8100392a:	8b 00                	mov    (%eax),%eax
8100392c:	8d 48 01             	lea    0x1(%eax),%ecx
8100392f:	8b 55 10             	mov    0x10(%ebp),%edx
81003932:	89 0a                	mov    %ecx,(%edx)
81003934:	8b 55 0c             	mov    0xc(%ebp),%edx
81003937:	88 10                	mov    %dl,(%eax)
81003939:	0f b6 00             	movzbl (%eax),%eax
8100393c:	0f b6 c0             	movzbl %al,%eax
8100393f:	eb 14                	jmp    81003955 <__sputc_r+0x64>
81003941:	83 ec 04             	sub    $0x4,%esp
81003944:	ff 75 10             	push   0x10(%ebp)
81003947:	ff 75 0c             	push   0xc(%ebp)
8100394a:	ff 75 08             	push   0x8(%ebp)
8100394d:	e8 b0 f8 ff ff       	call   81003202 <__swbuf_r>
81003952:	83 c4 10             	add    $0x10,%esp
81003955:	c9                   	leave  
81003956:	c3                   	ret    

81003957 <__fputwc>:
81003957:	55                   	push   %ebp
81003958:	89 e5                	mov    %esp,%ebp
8100395a:	83 ec 18             	sub    $0x18,%esp
8100395d:	e8 f3 06 00 00       	call   81004055 <__locale_mb_cur_max>
81003962:	83 f8 01             	cmp    $0x1,%eax
81003965:	75 1e                	jne    81003985 <__fputwc+0x2e>
81003967:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100396b:	7e 18                	jle    81003985 <__fputwc+0x2e>
8100396d:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
81003974:	7f 0f                	jg     81003985 <__fputwc+0x2e>
81003976:	8b 45 0c             	mov    0xc(%ebp),%eax
81003979:	88 45 ef             	mov    %al,-0x11(%ebp)
8100397c:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
81003983:	eb 3c                	jmp    810039c1 <__fputwc+0x6a>
81003985:	8b 45 10             	mov    0x10(%ebp),%eax
81003988:	83 c0 5c             	add    $0x5c,%eax
8100398b:	50                   	push   %eax
8100398c:	ff 75 0c             	push   0xc(%ebp)
8100398f:	8d 45 ef             	lea    -0x11(%ebp),%eax
81003992:	50                   	push   %eax
81003993:	ff 75 08             	push   0x8(%ebp)
81003996:	e8 df 0b 00 00       	call   8100457a <_wcrtomb_r>
8100399b:	83 c4 10             	add    $0x10,%esp
8100399e:	89 45 f0             	mov    %eax,-0x10(%ebp)
810039a1:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810039a5:	75 1a                	jne    810039c1 <__fputwc+0x6a>
810039a7:	8b 45 10             	mov    0x10(%ebp),%eax
810039aa:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810039ae:	83 c8 40             	or     $0x40,%eax
810039b1:	89 c2                	mov    %eax,%edx
810039b3:	8b 45 10             	mov    0x10(%ebp),%eax
810039b6:	66 89 50 0c          	mov    %dx,0xc(%eax)
810039ba:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810039bf:	eb 44                	jmp    81003a05 <__fputwc+0xae>
810039c1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810039c8:	eb 30                	jmp    810039fa <__fputwc+0xa3>
810039ca:	8d 55 ef             	lea    -0x11(%ebp),%edx
810039cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039d0:	01 d0                	add    %edx,%eax
810039d2:	0f b6 00             	movzbl (%eax),%eax
810039d5:	0f b6 c0             	movzbl %al,%eax
810039d8:	83 ec 04             	sub    $0x4,%esp
810039db:	ff 75 10             	push   0x10(%ebp)
810039de:	50                   	push   %eax
810039df:	ff 75 08             	push   0x8(%ebp)
810039e2:	e8 0a ff ff ff       	call   810038f1 <__sputc_r>
810039e7:	83 c4 10             	add    $0x10,%esp
810039ea:	83 f8 ff             	cmp    $0xffffffff,%eax
810039ed:	75 07                	jne    810039f6 <__fputwc+0x9f>
810039ef:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810039f4:	eb 0f                	jmp    81003a05 <__fputwc+0xae>
810039f6:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810039fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039fd:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81003a00:	72 c8                	jb     810039ca <__fputwc+0x73>
81003a02:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a05:	c9                   	leave  
81003a06:	c3                   	ret    

81003a07 <_fputwc_r>:
81003a07:	55                   	push   %ebp
81003a08:	89 e5                	mov    %esp,%ebp
81003a0a:	83 ec 18             	sub    $0x18,%esp
81003a0d:	8b 45 10             	mov    0x10(%ebp),%eax
81003a10:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003a14:	98                   	cwtl   
81003a15:	25 00 20 00 00       	and    $0x2000,%eax
81003a1a:	85 c0                	test   %eax,%eax
81003a1c:	75 24                	jne    81003a42 <_fputwc_r+0x3b>
81003a1e:	8b 45 10             	mov    0x10(%ebp),%eax
81003a21:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003a25:	80 cc 20             	or     $0x20,%ah
81003a28:	89 c2                	mov    %eax,%edx
81003a2a:	8b 45 10             	mov    0x10(%ebp),%eax
81003a2d:	66 89 50 0c          	mov    %dx,0xc(%eax)
81003a31:	8b 45 10             	mov    0x10(%ebp),%eax
81003a34:	8b 40 64             	mov    0x64(%eax),%eax
81003a37:	80 cc 20             	or     $0x20,%ah
81003a3a:	89 c2                	mov    %eax,%edx
81003a3c:	8b 45 10             	mov    0x10(%ebp),%eax
81003a3f:	89 50 64             	mov    %edx,0x64(%eax)
81003a42:	83 ec 04             	sub    $0x4,%esp
81003a45:	ff 75 10             	push   0x10(%ebp)
81003a48:	ff 75 0c             	push   0xc(%ebp)
81003a4b:	ff 75 08             	push   0x8(%ebp)
81003a4e:	e8 04 ff ff ff       	call   81003957 <__fputwc>
81003a53:	83 c4 10             	add    $0x10,%esp
81003a56:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003a59:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a5c:	c9                   	leave  
81003a5d:	c3                   	ret    

81003a5e <fputwc>:
81003a5e:	55                   	push   %ebp
81003a5f:	89 e5                	mov    %esp,%ebp
81003a61:	83 ec 18             	sub    $0x18,%esp
81003a64:	a1 24 50 00 81       	mov    0x81005024,%eax
81003a69:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003a6c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a6f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003a72:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81003a76:	74 18                	je     81003a90 <fputwc+0x32>
81003a78:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003a7b:	8b 40 38             	mov    0x38(%eax),%eax
81003a7e:	85 c0                	test   %eax,%eax
81003a80:	75 0e                	jne    81003a90 <fputwc+0x32>
81003a82:	83 ec 0c             	sub    $0xc,%esp
81003a85:	ff 75 f0             	push   -0x10(%ebp)
81003a88:	e8 b1 ce ff ff       	call   8100093e <__sinit>
81003a8d:	83 c4 10             	add    $0x10,%esp
81003a90:	83 ec 04             	sub    $0x4,%esp
81003a93:	ff 75 0c             	push   0xc(%ebp)
81003a96:	ff 75 08             	push   0x8(%ebp)
81003a99:	ff 75 f4             	push   -0xc(%ebp)
81003a9c:	e8 66 ff ff ff       	call   81003a07 <_fputwc_r>
81003aa1:	83 c4 10             	add    $0x10,%esp
81003aa4:	c9                   	leave  
81003aa5:	c3                   	ret    

81003aa6 <_free_r>:
81003aa6:	55                   	push   %ebp
81003aa7:	89 e5                	mov    %esp,%ebp
81003aa9:	53                   	push   %ebx
81003aaa:	83 ec 34             	sub    $0x34,%esp
81003aad:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81003ab1:	0f 84 c4 03 00 00    	je     81003e7b <_free_r+0x3d5>
81003ab7:	83 ec 0c             	sub    $0xc,%esp
81003aba:	ff 75 08             	push   0x8(%ebp)
81003abd:	e8 b3 e1 ff ff       	call   81001c75 <__malloc_lock>
81003ac2:	83 c4 10             	add    $0x10,%esp
81003ac5:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ac8:	83 e8 08             	sub    $0x8,%eax
81003acb:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003ace:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ad1:	8b 40 04             	mov    0x4(%eax),%eax
81003ad4:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003ad7:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003ada:	83 e0 fe             	and    $0xfffffffe,%eax
81003add:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003ae0:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003ae3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003ae6:	01 d0                	add    %edx,%eax
81003ae8:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003aeb:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003aee:	8b 40 04             	mov    0x4(%eax),%eax
81003af1:	83 e0 fc             	and    $0xfffffffc,%eax
81003af4:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003af7:	b8 40 50 00 81       	mov    $0x81005040,%eax
81003afc:	8b 40 08             	mov    0x8(%eax),%eax
81003aff:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81003b02:	0f 85 94 00 00 00    	jne    81003b9c <_free_r+0xf6>
81003b08:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b0b:	01 45 f0             	add    %eax,-0x10(%ebp)
81003b0e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003b11:	83 e0 01             	and    $0x1,%eax
81003b14:	85 c0                	test   %eax,%eax
81003b16:	75 3a                	jne    81003b52 <_free_r+0xac>
81003b18:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b1b:	8b 00                	mov    (%eax),%eax
81003b1d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003b20:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003b23:	f7 d8                	neg    %eax
81003b25:	01 45 f4             	add    %eax,-0xc(%ebp)
81003b28:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003b2b:	01 45 f0             	add    %eax,-0x10(%ebp)
81003b2e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b31:	8b 40 0c             	mov    0xc(%eax),%eax
81003b34:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003b37:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b3a:	8b 40 08             	mov    0x8(%eax),%eax
81003b3d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003b40:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003b43:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003b46:	89 50 0c             	mov    %edx,0xc(%eax)
81003b49:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003b4c:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003b4f:	89 50 08             	mov    %edx,0x8(%eax)
81003b52:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003b55:	83 c8 01             	or     $0x1,%eax
81003b58:	89 c2                	mov    %eax,%edx
81003b5a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b5d:	89 50 04             	mov    %edx,0x4(%eax)
81003b60:	ba 40 50 00 81       	mov    $0x81005040,%edx
81003b65:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b68:	89 42 08             	mov    %eax,0x8(%edx)
81003b6b:	a1 48 54 00 81       	mov    0x81005448,%eax
81003b70:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81003b73:	72 14                	jb     81003b89 <_free_r+0xe3>
81003b75:	a1 00 56 00 81       	mov    0x81005600,%eax
81003b7a:	83 ec 08             	sub    $0x8,%esp
81003b7d:	50                   	push   %eax
81003b7e:	ff 75 08             	push   0x8(%ebp)
81003b81:	e8 fb 02 00 00       	call   81003e81 <_malloc_trim_r>
81003b86:	83 c4 10             	add    $0x10,%esp
81003b89:	83 ec 0c             	sub    $0xc,%esp
81003b8c:	ff 75 08             	push   0x8(%ebp)
81003b8f:	e8 e7 e0 ff ff       	call   81001c7b <__malloc_unlock>
81003b94:	83 c4 10             	add    $0x10,%esp
81003b97:	e9 e0 02 00 00       	jmp    81003e7c <_free_r+0x3d6>
81003b9c:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b9f:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003ba2:	89 50 04             	mov    %edx,0x4(%eax)
81003ba5:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003bac:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003baf:	83 e0 01             	and    $0x1,%eax
81003bb2:	85 c0                	test   %eax,%eax
81003bb4:	75 52                	jne    81003c08 <_free_r+0x162>
81003bb6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003bb9:	8b 00                	mov    (%eax),%eax
81003bbb:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003bbe:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003bc1:	f7 d8                	neg    %eax
81003bc3:	01 45 f4             	add    %eax,-0xc(%ebp)
81003bc6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003bc9:	01 45 f0             	add    %eax,-0x10(%ebp)
81003bcc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003bcf:	8b 40 08             	mov    0x8(%eax),%eax
81003bd2:	ba 48 50 00 81       	mov    $0x81005048,%edx
81003bd7:	39 d0                	cmp    %edx,%eax
81003bd9:	75 09                	jne    81003be4 <_free_r+0x13e>
81003bdb:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81003be2:	eb 24                	jmp    81003c08 <_free_r+0x162>
81003be4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003be7:	8b 40 0c             	mov    0xc(%eax),%eax
81003bea:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003bed:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003bf0:	8b 40 08             	mov    0x8(%eax),%eax
81003bf3:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003bf6:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003bf9:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003bfc:	89 50 0c             	mov    %edx,0xc(%eax)
81003bff:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003c02:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003c05:	89 50 08             	mov    %edx,0x8(%eax)
81003c08:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003c0b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003c0e:	01 d0                	add    %edx,%eax
81003c10:	8b 40 04             	mov    0x4(%eax),%eax
81003c13:	83 e0 01             	and    $0x1,%eax
81003c16:	85 c0                	test   %eax,%eax
81003c18:	75 75                	jne    81003c8f <_free_r+0x1e9>
81003c1a:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003c1d:	01 45 f0             	add    %eax,-0x10(%ebp)
81003c20:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003c24:	75 45                	jne    81003c6b <_free_r+0x1c5>
81003c26:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003c29:	8b 40 08             	mov    0x8(%eax),%eax
81003c2c:	ba 48 50 00 81       	mov    $0x81005048,%edx
81003c31:	39 d0                	cmp    %edx,%eax
81003c33:	75 36                	jne    81003c6b <_free_r+0x1c5>
81003c35:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81003c3c:	b8 48 50 00 81       	mov    $0x81005048,%eax
81003c41:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003c44:	89 50 0c             	mov    %edx,0xc(%eax)
81003c47:	ba 48 50 00 81       	mov    $0x81005048,%edx
81003c4c:	8b 40 0c             	mov    0xc(%eax),%eax
81003c4f:	89 42 08             	mov    %eax,0x8(%edx)
81003c52:	ba 48 50 00 81       	mov    $0x81005048,%edx
81003c57:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c5a:	89 50 0c             	mov    %edx,0xc(%eax)
81003c5d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c60:	8b 50 0c             	mov    0xc(%eax),%edx
81003c63:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c66:	89 50 08             	mov    %edx,0x8(%eax)
81003c69:	eb 24                	jmp    81003c8f <_free_r+0x1e9>
81003c6b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003c6e:	8b 40 0c             	mov    0xc(%eax),%eax
81003c71:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003c74:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003c77:	8b 40 08             	mov    0x8(%eax),%eax
81003c7a:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003c7d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003c80:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003c83:	89 50 0c             	mov    %edx,0xc(%eax)
81003c86:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003c89:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003c8c:	89 50 08             	mov    %edx,0x8(%eax)
81003c8f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c92:	83 c8 01             	or     $0x1,%eax
81003c95:	89 c2                	mov    %eax,%edx
81003c97:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c9a:	89 50 04             	mov    %edx,0x4(%eax)
81003c9d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003ca0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003ca3:	01 c2                	add    %eax,%edx
81003ca5:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003ca8:	89 02                	mov    %eax,(%edx)
81003caa:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003cae:	0f 85 b7 01 00 00    	jne    81003e6b <_free_r+0x3c5>
81003cb4:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81003cbb:	77 7f                	ja     81003d3c <_free_r+0x296>
81003cbd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003cc0:	c1 e8 03             	shr    $0x3,%eax
81003cc3:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003cc6:	b8 40 50 00 81       	mov    $0x81005040,%eax
81003ccb:	8b 58 04             	mov    0x4(%eax),%ebx
81003cce:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003cd1:	8d 50 03             	lea    0x3(%eax),%edx
81003cd4:	85 c0                	test   %eax,%eax
81003cd6:	0f 48 c2             	cmovs  %edx,%eax
81003cd9:	c1 f8 02             	sar    $0x2,%eax
81003cdc:	ba 01 00 00 00       	mov    $0x1,%edx
81003ce1:	89 c1                	mov    %eax,%ecx
81003ce3:	d3 e2                	shl    %cl,%edx
81003ce5:	89 d0                	mov    %edx,%eax
81003ce7:	ba 40 50 00 81       	mov    $0x81005040,%edx
81003cec:	09 d8                	or     %ebx,%eax
81003cee:	89 42 04             	mov    %eax,0x4(%edx)
81003cf1:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003cf4:	83 c0 01             	add    $0x1,%eax
81003cf7:	01 c0                	add    %eax,%eax
81003cf9:	c1 e0 02             	shl    $0x2,%eax
81003cfc:	05 40 50 00 81       	add    $0x81005040,%eax
81003d01:	83 e8 08             	sub    $0x8,%eax
81003d04:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003d07:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003d0a:	8b 40 08             	mov    0x8(%eax),%eax
81003d0d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003d10:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d13:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003d16:	89 50 0c             	mov    %edx,0xc(%eax)
81003d19:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d1c:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003d1f:	89 50 08             	mov    %edx,0x8(%eax)
81003d22:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003d25:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003d28:	89 50 08             	mov    %edx,0x8(%eax)
81003d2b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003d2e:	8b 50 08             	mov    0x8(%eax),%edx
81003d31:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003d34:	89 50 0c             	mov    %edx,0xc(%eax)
81003d37:	e9 2f 01 00 00       	jmp    81003e6b <_free_r+0x3c5>
81003d3c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d3f:	c1 e8 09             	shr    $0x9,%eax
81003d42:	85 c0                	test   %eax,%eax
81003d44:	75 08                	jne    81003d4e <_free_r+0x2a8>
81003d46:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d49:	c1 e8 03             	shr    $0x3,%eax
81003d4c:	eb 77                	jmp    81003dc5 <_free_r+0x31f>
81003d4e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d51:	c1 e8 09             	shr    $0x9,%eax
81003d54:	83 f8 04             	cmp    $0x4,%eax
81003d57:	77 0b                	ja     81003d64 <_free_r+0x2be>
81003d59:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d5c:	c1 e8 06             	shr    $0x6,%eax
81003d5f:	83 c0 38             	add    $0x38,%eax
81003d62:	eb 61                	jmp    81003dc5 <_free_r+0x31f>
81003d64:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d67:	c1 e8 09             	shr    $0x9,%eax
81003d6a:	83 f8 14             	cmp    $0x14,%eax
81003d6d:	77 0b                	ja     81003d7a <_free_r+0x2d4>
81003d6f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d72:	c1 e8 09             	shr    $0x9,%eax
81003d75:	83 c0 5b             	add    $0x5b,%eax
81003d78:	eb 4b                	jmp    81003dc5 <_free_r+0x31f>
81003d7a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d7d:	c1 e8 09             	shr    $0x9,%eax
81003d80:	83 f8 54             	cmp    $0x54,%eax
81003d83:	77 0b                	ja     81003d90 <_free_r+0x2ea>
81003d85:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d88:	c1 e8 0c             	shr    $0xc,%eax
81003d8b:	83 c0 6e             	add    $0x6e,%eax
81003d8e:	eb 35                	jmp    81003dc5 <_free_r+0x31f>
81003d90:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d93:	c1 e8 09             	shr    $0x9,%eax
81003d96:	3d 54 01 00 00       	cmp    $0x154,%eax
81003d9b:	77 0b                	ja     81003da8 <_free_r+0x302>
81003d9d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003da0:	c1 e8 0f             	shr    $0xf,%eax
81003da3:	83 c0 77             	add    $0x77,%eax
81003da6:	eb 1d                	jmp    81003dc5 <_free_r+0x31f>
81003da8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003dab:	c1 e8 09             	shr    $0x9,%eax
81003dae:	3d 54 05 00 00       	cmp    $0x554,%eax
81003db3:	77 0b                	ja     81003dc0 <_free_r+0x31a>
81003db5:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003db8:	c1 e8 12             	shr    $0x12,%eax
81003dbb:	83 c0 7c             	add    $0x7c,%eax
81003dbe:	eb 05                	jmp    81003dc5 <_free_r+0x31f>
81003dc0:	b8 7e 00 00 00       	mov    $0x7e,%eax
81003dc5:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003dc8:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003dcb:	83 c0 01             	add    $0x1,%eax
81003dce:	01 c0                	add    %eax,%eax
81003dd0:	c1 e0 02             	shl    $0x2,%eax
81003dd3:	05 40 50 00 81       	add    $0x81005040,%eax
81003dd8:	83 e8 08             	sub    $0x8,%eax
81003ddb:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003dde:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003de1:	8b 40 08             	mov    0x8(%eax),%eax
81003de4:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003de7:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003dea:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003ded:	75 36                	jne    81003e25 <_free_r+0x37f>
81003def:	b8 40 50 00 81       	mov    $0x81005040,%eax
81003df4:	8b 58 04             	mov    0x4(%eax),%ebx
81003df7:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003dfa:	8d 50 03             	lea    0x3(%eax),%edx
81003dfd:	85 c0                	test   %eax,%eax
81003dff:	0f 48 c2             	cmovs  %edx,%eax
81003e02:	c1 f8 02             	sar    $0x2,%eax
81003e05:	ba 01 00 00 00       	mov    $0x1,%edx
81003e0a:	89 c1                	mov    %eax,%ecx
81003e0c:	d3 e2                	shl    %cl,%edx
81003e0e:	89 d0                	mov    %edx,%eax
81003e10:	ba 40 50 00 81       	mov    $0x81005040,%edx
81003e15:	09 d8                	or     %ebx,%eax
81003e17:	89 42 04             	mov    %eax,0x4(%edx)
81003e1a:	eb 28                	jmp    81003e44 <_free_r+0x39e>
81003e1c:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003e1f:	8b 40 08             	mov    0x8(%eax),%eax
81003e22:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003e25:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003e28:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003e2b:	74 0e                	je     81003e3b <_free_r+0x395>
81003e2d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003e30:	8b 40 04             	mov    0x4(%eax),%eax
81003e33:	83 e0 fc             	and    $0xfffffffc,%eax
81003e36:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81003e39:	72 e1                	jb     81003e1c <_free_r+0x376>
81003e3b:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003e3e:	8b 40 0c             	mov    0xc(%eax),%eax
81003e41:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003e44:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e47:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003e4a:	89 50 0c             	mov    %edx,0xc(%eax)
81003e4d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e50:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003e53:	89 50 08             	mov    %edx,0x8(%eax)
81003e56:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003e59:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003e5c:	89 50 08             	mov    %edx,0x8(%eax)
81003e5f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003e62:	8b 50 08             	mov    0x8(%eax),%edx
81003e65:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003e68:	89 50 0c             	mov    %edx,0xc(%eax)
81003e6b:	83 ec 0c             	sub    $0xc,%esp
81003e6e:	ff 75 08             	push   0x8(%ebp)
81003e71:	e8 05 de ff ff       	call   81001c7b <__malloc_unlock>
81003e76:	83 c4 10             	add    $0x10,%esp
81003e79:	eb 01                	jmp    81003e7c <_free_r+0x3d6>
81003e7b:	90                   	nop
81003e7c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003e7f:	c9                   	leave  
81003e80:	c3                   	ret    

81003e81 <_malloc_trim_r>:
81003e81:	55                   	push   %ebp
81003e82:	89 e5                	mov    %esp,%ebp
81003e84:	83 ec 28             	sub    $0x28,%esp
81003e87:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81003e8e:	83 ec 0c             	sub    $0xc,%esp
81003e91:	ff 75 08             	push   0x8(%ebp)
81003e94:	e8 dc dd ff ff       	call   81001c75 <__malloc_lock>
81003e99:	83 c4 10             	add    $0x10,%esp
81003e9c:	b8 40 50 00 81       	mov    $0x81005040,%eax
81003ea1:	8b 40 08             	mov    0x8(%eax),%eax
81003ea4:	8b 40 04             	mov    0x4(%eax),%eax
81003ea7:	83 e0 fc             	and    $0xfffffffc,%eax
81003eaa:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003ead:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003eb0:	2b 45 0c             	sub    0xc(%ebp),%eax
81003eb3:	89 c2                	mov    %eax,%edx
81003eb5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003eb8:	01 d0                	add    %edx,%eax
81003eba:	83 e8 11             	sub    $0x11,%eax
81003ebd:	ba 00 00 00 00       	mov    $0x0,%edx
81003ec2:	f7 75 f4             	divl   -0xc(%ebp)
81003ec5:	83 e8 01             	sub    $0x1,%eax
81003ec8:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81003ecc:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003ecf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ed2:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81003ed5:	7d 18                	jge    81003eef <_malloc_trim_r+0x6e>
81003ed7:	83 ec 0c             	sub    $0xc,%esp
81003eda:	ff 75 08             	push   0x8(%ebp)
81003edd:	e8 99 dd ff ff       	call   81001c7b <__malloc_unlock>
81003ee2:	83 c4 10             	add    $0x10,%esp
81003ee5:	b8 00 00 00 00       	mov    $0x0,%eax
81003eea:	e9 f1 00 00 00       	jmp    81003fe0 <_malloc_trim_r+0x15f>
81003eef:	83 ec 08             	sub    $0x8,%esp
81003ef2:	6a 00                	push   $0x0
81003ef4:	ff 75 08             	push   0x8(%ebp)
81003ef7:	e8 ae f1 ff ff       	call   810030aa <_sbrk_r>
81003efc:	83 c4 10             	add    $0x10,%esp
81003eff:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003f02:	b8 40 50 00 81       	mov    $0x81005040,%eax
81003f07:	8b 50 08             	mov    0x8(%eax),%edx
81003f0a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f0d:	01 d0                	add    %edx,%eax
81003f0f:	39 45 e8             	cmp    %eax,-0x18(%ebp)
81003f12:	74 18                	je     81003f2c <_malloc_trim_r+0xab>
81003f14:	83 ec 0c             	sub    $0xc,%esp
81003f17:	ff 75 08             	push   0x8(%ebp)
81003f1a:	e8 5c dd ff ff       	call   81001c7b <__malloc_unlock>
81003f1f:	83 c4 10             	add    $0x10,%esp
81003f22:	b8 00 00 00 00       	mov    $0x0,%eax
81003f27:	e9 b4 00 00 00       	jmp    81003fe0 <_malloc_trim_r+0x15f>
81003f2c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003f2f:	f7 d8                	neg    %eax
81003f31:	83 ec 08             	sub    $0x8,%esp
81003f34:	50                   	push   %eax
81003f35:	ff 75 08             	push   0x8(%ebp)
81003f38:	e8 6d f1 ff ff       	call   810030aa <_sbrk_r>
81003f3d:	83 c4 10             	add    $0x10,%esp
81003f40:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003f43:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81003f47:	75 61                	jne    81003faa <_malloc_trim_r+0x129>
81003f49:	83 ec 08             	sub    $0x8,%esp
81003f4c:	6a 00                	push   $0x0
81003f4e:	ff 75 08             	push   0x8(%ebp)
81003f51:	e8 54 f1 ff ff       	call   810030aa <_sbrk_r>
81003f56:	83 c4 10             	add    $0x10,%esp
81003f59:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003f5c:	b8 40 50 00 81       	mov    $0x81005040,%eax
81003f61:	8b 50 08             	mov    0x8(%eax),%edx
81003f64:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f67:	29 d0                	sub    %edx,%eax
81003f69:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003f6c:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81003f70:	7e 23                	jle    81003f95 <_malloc_trim_r+0x114>
81003f72:	8b 15 4c 54 00 81    	mov    0x8100544c,%edx
81003f78:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f7b:	29 d0                	sub    %edx,%eax
81003f7d:	a3 20 56 00 81       	mov    %eax,0x81005620
81003f82:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f85:	83 c8 01             	or     $0x1,%eax
81003f88:	89 c2                	mov    %eax,%edx
81003f8a:	b8 40 50 00 81       	mov    $0x81005040,%eax
81003f8f:	8b 40 08             	mov    0x8(%eax),%eax
81003f92:	89 50 04             	mov    %edx,0x4(%eax)
81003f95:	83 ec 0c             	sub    $0xc,%esp
81003f98:	ff 75 08             	push   0x8(%ebp)
81003f9b:	e8 db dc ff ff       	call   81001c7b <__malloc_unlock>
81003fa0:	83 c4 10             	add    $0x10,%esp
81003fa3:	b8 00 00 00 00       	mov    $0x0,%eax
81003fa8:	eb 36                	jmp    81003fe0 <_malloc_trim_r+0x15f>
81003faa:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003fad:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003fb0:	83 c8 01             	or     $0x1,%eax
81003fb3:	89 c2                	mov    %eax,%edx
81003fb5:	b8 40 50 00 81       	mov    $0x81005040,%eax
81003fba:	8b 40 08             	mov    0x8(%eax),%eax
81003fbd:	89 50 04             	mov    %edx,0x4(%eax)
81003fc0:	a1 20 56 00 81       	mov    0x81005620,%eax
81003fc5:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003fc8:	a3 20 56 00 81       	mov    %eax,0x81005620
81003fcd:	83 ec 0c             	sub    $0xc,%esp
81003fd0:	ff 75 08             	push   0x8(%ebp)
81003fd3:	e8 a3 dc ff ff       	call   81001c7b <__malloc_unlock>
81003fd8:	83 c4 10             	add    $0x10,%esp
81003fdb:	b8 01 00 00 00       	mov    $0x1,%eax
81003fe0:	c9                   	leave  
81003fe1:	c3                   	ret    

81003fe2 <__get_global_locale>:
81003fe2:	55                   	push   %ebp
81003fe3:	89 e5                	mov    %esp,%ebp
81003fe5:	b8 60 54 00 81       	mov    $0x81005460,%eax
81003fea:	5d                   	pop    %ebp
81003feb:	c3                   	ret    

81003fec <__get_current_locale>:
81003fec:	55                   	push   %ebp
81003fed:	89 e5                	mov    %esp,%ebp
81003fef:	e8 ee ff ff ff       	call   81003fe2 <__get_global_locale>
81003ff4:	5d                   	pop    %ebp
81003ff5:	c3                   	ret    

81003ff6 <_setlocale_r>:
81003ff6:	55                   	push   %ebp
81003ff7:	89 e5                	mov    %esp,%ebp
81003ff9:	83 ec 08             	sub    $0x8,%esp
81003ffc:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81004000:	74 4c                	je     8100404e <_setlocale_r+0x58>
81004002:	83 ec 08             	sub    $0x8,%esp
81004005:	68 4f 49 00 81       	push   $0x8100494f
8100400a:	ff 75 10             	push   0x10(%ebp)
8100400d:	e8 af 04 00 00       	call   810044c1 <strcmp>
81004012:	83 c4 10             	add    $0x10,%esp
81004015:	85 c0                	test   %eax,%eax
81004017:	74 35                	je     8100404e <_setlocale_r+0x58>
81004019:	83 ec 08             	sub    $0x8,%esp
8100401c:	68 55 49 00 81       	push   $0x81004955
81004021:	ff 75 10             	push   0x10(%ebp)
81004024:	e8 98 04 00 00       	call   810044c1 <strcmp>
81004029:	83 c4 10             	add    $0x10,%esp
8100402c:	85 c0                	test   %eax,%eax
8100402e:	74 1e                	je     8100404e <_setlocale_r+0x58>
81004030:	83 ec 08             	sub    $0x8,%esp
81004033:	68 4e 49 00 81       	push   $0x8100494e
81004038:	ff 75 10             	push   0x10(%ebp)
8100403b:	e8 81 04 00 00       	call   810044c1 <strcmp>
81004040:	83 c4 10             	add    $0x10,%esp
81004043:	85 c0                	test   %eax,%eax
81004045:	74 07                	je     8100404e <_setlocale_r+0x58>
81004047:	b8 00 00 00 00       	mov    $0x0,%eax
8100404c:	eb 05                	jmp    81004053 <_setlocale_r+0x5d>
8100404e:	b8 55 49 00 81       	mov    $0x81004955,%eax
81004053:	c9                   	leave  
81004054:	c3                   	ret    

81004055 <__locale_mb_cur_max>:
81004055:	55                   	push   %ebp
81004056:	89 e5                	mov    %esp,%ebp
81004058:	e8 8f ff ff ff       	call   81003fec <__get_current_locale>
8100405d:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
81004064:	0f be c0             	movsbl %al,%eax
81004067:	5d                   	pop    %ebp
81004068:	c3                   	ret    

81004069 <setlocale>:
81004069:	55                   	push   %ebp
8100406a:	89 e5                	mov    %esp,%ebp
8100406c:	83 ec 08             	sub    $0x8,%esp
8100406f:	a1 24 50 00 81       	mov    0x81005024,%eax
81004074:	83 ec 04             	sub    $0x4,%esp
81004077:	ff 75 0c             	push   0xc(%ebp)
8100407a:	ff 75 08             	push   0x8(%ebp)
8100407d:	50                   	push   %eax
8100407e:	e8 73 ff ff ff       	call   81003ff6 <_setlocale_r>
81004083:	83 c4 10             	add    $0x10,%esp
81004086:	c9                   	leave  
81004087:	c3                   	ret    

81004088 <_lseek_r>:
81004088:	55                   	push   %ebp
81004089:	89 e5                	mov    %esp,%ebp
8100408b:	83 ec 18             	sub    $0x18,%esp
8100408e:	c7 05 50 56 00 81 00 	movl   $0x0,0x81005650
81004095:	00 00 00 
81004098:	83 ec 04             	sub    $0x4,%esp
8100409b:	ff 75 14             	push   0x14(%ebp)
8100409e:	ff 75 10             	push   0x10(%ebp)
810040a1:	ff 75 0c             	push   0xc(%ebp)
810040a4:	e8 32 c3 ff ff       	call   810003db <lseek>
810040a9:	83 c4 10             	add    $0x10,%esp
810040ac:	89 45 f4             	mov    %eax,-0xc(%ebp)
810040af:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810040b3:	75 14                	jne    810040c9 <_lseek_r+0x41>
810040b5:	a1 50 56 00 81       	mov    0x81005650,%eax
810040ba:	85 c0                	test   %eax,%eax
810040bc:	74 0b                	je     810040c9 <_lseek_r+0x41>
810040be:	8b 15 50 56 00 81    	mov    0x81005650,%edx
810040c4:	8b 45 08             	mov    0x8(%ebp),%eax
810040c7:	89 10                	mov    %edx,(%eax)
810040c9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040cc:	c9                   	leave  
810040cd:	c3                   	ret    

810040ce <__smakebuf_r>:
810040ce:	55                   	push   %ebp
810040cf:	89 e5                	mov    %esp,%ebp
810040d1:	56                   	push   %esi
810040d2:	53                   	push   %ebx
810040d3:	83 ec 10             	sub    $0x10,%esp
810040d6:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810040d9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810040dd:	98                   	cwtl   
810040de:	83 e0 02             	and    $0x2,%eax
810040e1:	85 c0                	test   %eax,%eax
810040e3:	74 16                	je     810040fb <__smakebuf_r+0x2d>
810040e5:	8d 43 43             	lea    0x43(%ebx),%eax
810040e8:	89 03                	mov    %eax,(%ebx)
810040ea:	8b 03                	mov    (%ebx),%eax
810040ec:	89 43 10             	mov    %eax,0x10(%ebx)
810040ef:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810040f6:	e9 b9 00 00 00       	jmp    810041b4 <__smakebuf_r+0xe6>
810040fb:	8d 45 ec             	lea    -0x14(%ebp),%eax
810040fe:	50                   	push   %eax
810040ff:	8d 45 f0             	lea    -0x10(%ebp),%eax
81004102:	50                   	push   %eax
81004103:	53                   	push   %ebx
81004104:	ff 75 08             	push   0x8(%ebp)
81004107:	e8 af 00 00 00       	call   810041bb <__swhatbuf_r>
8100410c:	83 c4 10             	add    $0x10,%esp
8100410f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004112:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004115:	83 ec 08             	sub    $0x8,%esp
81004118:	50                   	push   %eax
81004119:	ff 75 08             	push   0x8(%ebp)
8100411c:	e8 2e d1 ff ff       	call   8100124f <_malloc_r>
81004121:	83 c4 10             	add    $0x10,%esp
81004124:	89 c6                	mov    %eax,%esi
81004126:	85 f6                	test   %esi,%esi
81004128:	75 2f                	jne    81004159 <__smakebuf_r+0x8b>
8100412a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100412e:	98                   	cwtl   
8100412f:	25 00 02 00 00       	and    $0x200,%eax
81004134:	85 c0                	test   %eax,%eax
81004136:	75 7c                	jne    810041b4 <__smakebuf_r+0xe6>
81004138:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100413c:	83 e0 fc             	and    $0xfffffffc,%eax
8100413f:	83 c8 02             	or     $0x2,%eax
81004142:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004146:	8d 43 43             	lea    0x43(%ebx),%eax
81004149:	89 03                	mov    %eax,(%ebx)
8100414b:	8b 03                	mov    (%ebx),%eax
8100414d:	89 43 10             	mov    %eax,0x10(%ebx)
81004150:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81004157:	eb 5b                	jmp    810041b4 <__smakebuf_r+0xe6>
81004159:	8b 45 08             	mov    0x8(%ebp),%eax
8100415c:	c7 40 3c 03 09 00 81 	movl   $0x81000903,0x3c(%eax)
81004163:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004167:	0c 80                	or     $0x80,%al
81004169:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100416d:	89 33                	mov    %esi,(%ebx)
8100416f:	8b 03                	mov    (%ebx),%eax
81004171:	89 43 10             	mov    %eax,0x10(%ebx)
81004174:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004177:	89 43 14             	mov    %eax,0x14(%ebx)
8100417a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100417d:	85 c0                	test   %eax,%eax
8100417f:	74 26                	je     810041a7 <__smakebuf_r+0xd9>
81004181:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81004185:	98                   	cwtl   
81004186:	83 ec 08             	sub    $0x8,%esp
81004189:	50                   	push   %eax
8100418a:	ff 75 08             	push   0x8(%ebp)
8100418d:	e8 9c 05 00 00       	call   8100472e <_isatty_r>
81004192:	83 c4 10             	add    $0x10,%esp
81004195:	85 c0                	test   %eax,%eax
81004197:	74 0e                	je     810041a7 <__smakebuf_r+0xd9>
81004199:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100419d:	83 e0 fc             	and    $0xfffffffc,%eax
810041a0:	83 c8 01             	or     $0x1,%eax
810041a3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810041a7:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
810041ab:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041ae:	09 d0                	or     %edx,%eax
810041b0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810041b4:	8d 65 f8             	lea    -0x8(%ebp),%esp
810041b7:	5b                   	pop    %ebx
810041b8:	5e                   	pop    %esi
810041b9:	5d                   	pop    %ebp
810041ba:	c3                   	ret    

810041bb <__swhatbuf_r>:
810041bb:	55                   	push   %ebp
810041bc:	89 e5                	mov    %esp,%ebp
810041be:	83 ec 58             	sub    $0x58,%esp
810041c1:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
810041c8:	8b 45 0c             	mov    0xc(%ebp),%eax
810041cb:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
810041cf:	66 85 c0             	test   %ax,%ax
810041d2:	78 1f                	js     810041f3 <__swhatbuf_r+0x38>
810041d4:	8b 45 0c             	mov    0xc(%ebp),%eax
810041d7:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
810041db:	98                   	cwtl   
810041dc:	83 ec 04             	sub    $0x4,%esp
810041df:	8d 55 ac             	lea    -0x54(%ebp),%edx
810041e2:	52                   	push   %edx
810041e3:	50                   	push   %eax
810041e4:	ff 75 08             	push   0x8(%ebp)
810041e7:	e8 ff 04 00 00       	call   810046eb <_fstat_r>
810041ec:	83 c4 10             	add    $0x10,%esp
810041ef:	85 c0                	test   %eax,%eax
810041f1:	79 35                	jns    81004228 <__swhatbuf_r+0x6d>
810041f3:	8b 45 14             	mov    0x14(%ebp),%eax
810041f6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810041fc:	8b 45 0c             	mov    0xc(%ebp),%eax
810041ff:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004203:	98                   	cwtl   
81004204:	25 80 00 00 00       	and    $0x80,%eax
81004209:	85 c0                	test   %eax,%eax
8100420b:	74 0b                	je     81004218 <__swhatbuf_r+0x5d>
8100420d:	8b 45 10             	mov    0x10(%ebp),%eax
81004210:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81004216:	eb 09                	jmp    81004221 <__swhatbuf_r+0x66>
81004218:	8b 45 10             	mov    0x10(%ebp),%eax
8100421b:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81004221:	b8 00 00 00 00       	mov    $0x0,%eax
81004226:	eb 24                	jmp    8100424c <__swhatbuf_r+0x91>
81004228:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100422b:	25 00 f0 00 00       	and    $0xf000,%eax
81004230:	3d 00 20 00 00       	cmp    $0x2000,%eax
81004235:	0f 94 c0             	sete   %al
81004238:	0f b6 d0             	movzbl %al,%edx
8100423b:	8b 45 14             	mov    0x14(%ebp),%eax
8100423e:	89 10                	mov    %edx,(%eax)
81004240:	8b 45 10             	mov    0x10(%ebp),%eax
81004243:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81004249:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100424c:	c9                   	leave  
8100424d:	c3                   	ret    

8100424e <__get_global_locale>:
8100424e:	55                   	push   %ebp
8100424f:	89 e5                	mov    %esp,%ebp
81004251:	b8 60 54 00 81       	mov    $0x81005460,%eax
81004256:	5d                   	pop    %ebp
81004257:	c3                   	ret    

81004258 <__get_current_locale>:
81004258:	55                   	push   %ebp
81004259:	89 e5                	mov    %esp,%ebp
8100425b:	e8 ee ff ff ff       	call   8100424e <__get_global_locale>
81004260:	5d                   	pop    %ebp
81004261:	c3                   	ret    

81004262 <_mbtowc_r>:
81004262:	55                   	push   %ebp
81004263:	89 e5                	mov    %esp,%ebp
81004265:	83 ec 08             	sub    $0x8,%esp
81004268:	e8 eb ff ff ff       	call   81004258 <__get_current_locale>
8100426d:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
81004273:	83 ec 0c             	sub    $0xc,%esp
81004276:	ff 75 18             	push   0x18(%ebp)
81004279:	ff 75 14             	push   0x14(%ebp)
8100427c:	ff 75 10             	push   0x10(%ebp)
8100427f:	ff 75 0c             	push   0xc(%ebp)
81004282:	ff 75 08             	push   0x8(%ebp)
81004285:	ff d0                	call   *%eax
81004287:	83 c4 20             	add    $0x20,%esp
8100428a:	c9                   	leave  
8100428b:	c3                   	ret    

8100428c <__ascii_mbtowc>:
8100428c:	55                   	push   %ebp
8100428d:	89 e5                	mov    %esp,%ebp
8100428f:	83 ec 10             	sub    $0x10,%esp
81004292:	8b 45 10             	mov    0x10(%ebp),%eax
81004295:	89 45 fc             	mov    %eax,-0x4(%ebp)
81004298:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100429c:	75 06                	jne    810042a4 <__ascii_mbtowc+0x18>
8100429e:	8d 45 f8             	lea    -0x8(%ebp),%eax
810042a1:	89 45 0c             	mov    %eax,0xc(%ebp)
810042a4:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810042a8:	75 07                	jne    810042b1 <__ascii_mbtowc+0x25>
810042aa:	b8 00 00 00 00       	mov    $0x0,%eax
810042af:	eb 31                	jmp    810042e2 <__ascii_mbtowc+0x56>
810042b1:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810042b5:	75 07                	jne    810042be <__ascii_mbtowc+0x32>
810042b7:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
810042bc:	eb 24                	jmp    810042e2 <__ascii_mbtowc+0x56>
810042be:	8b 45 fc             	mov    -0x4(%ebp),%eax
810042c1:	0f b6 00             	movzbl (%eax),%eax
810042c4:	0f b6 d0             	movzbl %al,%edx
810042c7:	8b 45 0c             	mov    0xc(%ebp),%eax
810042ca:	89 10                	mov    %edx,(%eax)
810042cc:	8b 45 fc             	mov    -0x4(%ebp),%eax
810042cf:	0f b6 00             	movzbl (%eax),%eax
810042d2:	84 c0                	test   %al,%al
810042d4:	75 07                	jne    810042dd <__ascii_mbtowc+0x51>
810042d6:	b8 00 00 00 00       	mov    $0x0,%eax
810042db:	eb 05                	jmp    810042e2 <__ascii_mbtowc+0x56>
810042dd:	b8 01 00 00 00       	mov    $0x1,%eax
810042e2:	c9                   	leave  
810042e3:	c3                   	ret    

810042e4 <_read_r>:
810042e4:	55                   	push   %ebp
810042e5:	89 e5                	mov    %esp,%ebp
810042e7:	83 ec 18             	sub    $0x18,%esp
810042ea:	c7 05 50 56 00 81 00 	movl   $0x0,0x81005650
810042f1:	00 00 00 
810042f4:	83 ec 04             	sub    $0x4,%esp
810042f7:	ff 75 14             	push   0x14(%ebp)
810042fa:	ff 75 10             	push   0x10(%ebp)
810042fd:	ff 75 0c             	push   0xc(%ebp)
81004300:	e8 5b c0 ff ff       	call   81000360 <read>
81004305:	83 c4 10             	add    $0x10,%esp
81004308:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100430b:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100430f:	75 14                	jne    81004325 <_read_r+0x41>
81004311:	a1 50 56 00 81       	mov    0x81005650,%eax
81004316:	85 c0                	test   %eax,%eax
81004318:	74 0b                	je     81004325 <_read_r+0x41>
8100431a:	8b 15 50 56 00 81    	mov    0x81005650,%edx
81004320:	8b 45 08             	mov    0x8(%ebp),%eax
81004323:	89 10                	mov    %edx,(%eax)
81004325:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004328:	c9                   	leave  
81004329:	c3                   	ret    

8100432a <cleanup_glue>:
8100432a:	55                   	push   %ebp
8100432b:	89 e5                	mov    %esp,%ebp
8100432d:	83 ec 08             	sub    $0x8,%esp
81004330:	8b 45 0c             	mov    0xc(%ebp),%eax
81004333:	8b 00                	mov    (%eax),%eax
81004335:	85 c0                	test   %eax,%eax
81004337:	74 14                	je     8100434d <cleanup_glue+0x23>
81004339:	8b 45 0c             	mov    0xc(%ebp),%eax
8100433c:	8b 00                	mov    (%eax),%eax
8100433e:	83 ec 08             	sub    $0x8,%esp
81004341:	50                   	push   %eax
81004342:	ff 75 08             	push   0x8(%ebp)
81004345:	e8 e0 ff ff ff       	call   8100432a <cleanup_glue>
8100434a:	83 c4 10             	add    $0x10,%esp
8100434d:	83 ec 08             	sub    $0x8,%esp
81004350:	ff 75 0c             	push   0xc(%ebp)
81004353:	ff 75 08             	push   0x8(%ebp)
81004356:	e8 4b f7 ff ff       	call   81003aa6 <_free_r>
8100435b:	83 c4 10             	add    $0x10,%esp
8100435e:	90                   	nop
8100435f:	c9                   	leave  
81004360:	c3                   	ret    

81004361 <_reclaim_reent>:
81004361:	55                   	push   %ebp
81004362:	89 e5                	mov    %esp,%ebp
81004364:	83 ec 28             	sub    $0x28,%esp
81004367:	a1 24 50 00 81       	mov    0x81005024,%eax
8100436c:	39 45 08             	cmp    %eax,0x8(%ebp)
8100436f:	0f 84 49 01 00 00    	je     810044be <_reclaim_reent+0x15d>
81004375:	8b 45 08             	mov    0x8(%ebp),%eax
81004378:	8b 40 4c             	mov    0x4c(%eax),%eax
8100437b:	85 c0                	test   %eax,%eax
8100437d:	74 64                	je     810043e3 <_reclaim_reent+0x82>
8100437f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004386:	eb 3e                	jmp    810043c6 <_reclaim_reent+0x65>
81004388:	8b 45 08             	mov    0x8(%ebp),%eax
8100438b:	8b 50 4c             	mov    0x4c(%eax),%edx
8100438e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004391:	c1 e0 02             	shl    $0x2,%eax
81004394:	01 d0                	add    %edx,%eax
81004396:	8b 00                	mov    (%eax),%eax
81004398:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100439b:	eb 1f                	jmp    810043bc <_reclaim_reent+0x5b>
8100439d:	8b 45 f0             	mov    -0x10(%ebp),%eax
810043a0:	89 45 e8             	mov    %eax,-0x18(%ebp)
810043a3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810043a6:	8b 00                	mov    (%eax),%eax
810043a8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810043ab:	83 ec 08             	sub    $0x8,%esp
810043ae:	ff 75 e8             	push   -0x18(%ebp)
810043b1:	ff 75 08             	push   0x8(%ebp)
810043b4:	e8 ed f6 ff ff       	call   81003aa6 <_free_r>
810043b9:	83 c4 10             	add    $0x10,%esp
810043bc:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810043c0:	75 db                	jne    8100439d <_reclaim_reent+0x3c>
810043c2:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810043c6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810043c9:	83 f8 1f             	cmp    $0x1f,%eax
810043cc:	76 ba                	jbe    81004388 <_reclaim_reent+0x27>
810043ce:	8b 45 08             	mov    0x8(%ebp),%eax
810043d1:	8b 40 4c             	mov    0x4c(%eax),%eax
810043d4:	83 ec 08             	sub    $0x8,%esp
810043d7:	50                   	push   %eax
810043d8:	ff 75 08             	push   0x8(%ebp)
810043db:	e8 c6 f6 ff ff       	call   81003aa6 <_free_r>
810043e0:	83 c4 10             	add    $0x10,%esp
810043e3:	8b 45 08             	mov    0x8(%ebp),%eax
810043e6:	8b 40 40             	mov    0x40(%eax),%eax
810043e9:	85 c0                	test   %eax,%eax
810043eb:	74 15                	je     81004402 <_reclaim_reent+0xa1>
810043ed:	8b 45 08             	mov    0x8(%ebp),%eax
810043f0:	8b 40 40             	mov    0x40(%eax),%eax
810043f3:	83 ec 08             	sub    $0x8,%esp
810043f6:	50                   	push   %eax
810043f7:	ff 75 08             	push   0x8(%ebp)
810043fa:	e8 a7 f6 ff ff       	call   81003aa6 <_free_r>
810043ff:	83 c4 10             	add    $0x10,%esp
81004402:	8b 45 08             	mov    0x8(%ebp),%eax
81004405:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
8100440b:	85 c0                	test   %eax,%eax
8100440d:	74 50                	je     8100445f <_reclaim_reent+0xfe>
8100440f:	8b 45 08             	mov    0x8(%ebp),%eax
81004412:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81004418:	8b 55 08             	mov    0x8(%ebp),%edx
8100441b:	81 c2 4c 01 00 00    	add    $0x14c,%edx
81004421:	39 d0                	cmp    %edx,%eax
81004423:	74 3a                	je     8100445f <_reclaim_reent+0xfe>
81004425:	8b 45 08             	mov    0x8(%ebp),%eax
81004428:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
8100442e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004431:	eb 1f                	jmp    81004452 <_reclaim_reent+0xf1>
81004433:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004436:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004439:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100443c:	8b 00                	mov    (%eax),%eax
8100443e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004441:	83 ec 08             	sub    $0x8,%esp
81004444:	ff 75 e4             	push   -0x1c(%ebp)
81004447:	ff 75 08             	push   0x8(%ebp)
8100444a:	e8 57 f6 ff ff       	call   81003aa6 <_free_r>
8100444f:	83 c4 10             	add    $0x10,%esp
81004452:	8b 45 08             	mov    0x8(%ebp),%eax
81004455:	05 4c 01 00 00       	add    $0x14c,%eax
8100445a:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100445d:	75 d4                	jne    81004433 <_reclaim_reent+0xd2>
8100445f:	8b 45 08             	mov    0x8(%ebp),%eax
81004462:	8b 40 54             	mov    0x54(%eax),%eax
81004465:	85 c0                	test   %eax,%eax
81004467:	74 15                	je     8100447e <_reclaim_reent+0x11d>
81004469:	8b 45 08             	mov    0x8(%ebp),%eax
8100446c:	8b 40 54             	mov    0x54(%eax),%eax
8100446f:	83 ec 08             	sub    $0x8,%esp
81004472:	50                   	push   %eax
81004473:	ff 75 08             	push   0x8(%ebp)
81004476:	e8 2b f6 ff ff       	call   81003aa6 <_free_r>
8100447b:	83 c4 10             	add    $0x10,%esp
8100447e:	8b 45 08             	mov    0x8(%ebp),%eax
81004481:	8b 40 38             	mov    0x38(%eax),%eax
81004484:	85 c0                	test   %eax,%eax
81004486:	74 36                	je     810044be <_reclaim_reent+0x15d>
81004488:	8b 45 08             	mov    0x8(%ebp),%eax
8100448b:	8b 40 3c             	mov    0x3c(%eax),%eax
8100448e:	83 ec 0c             	sub    $0xc,%esp
81004491:	ff 75 08             	push   0x8(%ebp)
81004494:	ff d0                	call   *%eax
81004496:	83 c4 10             	add    $0x10,%esp
81004499:	8b 45 08             	mov    0x8(%ebp),%eax
8100449c:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810044a2:	85 c0                	test   %eax,%eax
810044a4:	74 18                	je     810044be <_reclaim_reent+0x15d>
810044a6:	8b 45 08             	mov    0x8(%ebp),%eax
810044a9:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810044af:	83 ec 08             	sub    $0x8,%esp
810044b2:	50                   	push   %eax
810044b3:	ff 75 08             	push   0x8(%ebp)
810044b6:	e8 6f fe ff ff       	call   8100432a <cleanup_glue>
810044bb:	83 c4 10             	add    $0x10,%esp
810044be:	90                   	nop
810044bf:	c9                   	leave  
810044c0:	c3                   	ret    

810044c1 <strcmp>:
810044c1:	55                   	push   %ebp
810044c2:	89 e5                	mov    %esp,%ebp
810044c4:	83 ec 10             	sub    $0x10,%esp
810044c7:	8b 55 08             	mov    0x8(%ebp),%edx
810044ca:	8b 45 0c             	mov    0xc(%ebp),%eax
810044cd:	09 d0                	or     %edx,%eax
810044cf:	83 e0 03             	and    $0x3,%eax
810044d2:	85 c0                	test   %eax,%eax
810044d4:	75 5e                	jne    81004534 <strcmp+0x73>
810044d6:	8b 45 08             	mov    0x8(%ebp),%eax
810044d9:	89 45 fc             	mov    %eax,-0x4(%ebp)
810044dc:	8b 45 0c             	mov    0xc(%ebp),%eax
810044df:	89 45 f8             	mov    %eax,-0x8(%ebp)
810044e2:	eb 2c                	jmp    81004510 <strcmp+0x4f>
810044e4:	8b 45 fc             	mov    -0x4(%ebp),%eax
810044e7:	8b 00                	mov    (%eax),%eax
810044e9:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
810044ef:	8b 45 fc             	mov    -0x4(%ebp),%eax
810044f2:	8b 00                	mov    (%eax),%eax
810044f4:	f7 d0                	not    %eax
810044f6:	21 d0                	and    %edx,%eax
810044f8:	25 80 80 80 80       	and    $0x80808080,%eax
810044fd:	85 c0                	test   %eax,%eax
810044ff:	74 07                	je     81004508 <strcmp+0x47>
81004501:	b8 00 00 00 00       	mov    $0x0,%eax
81004506:	eb 5c                	jmp    81004564 <strcmp+0xa3>
81004508:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
8100450c:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81004510:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004513:	8b 10                	mov    (%eax),%edx
81004515:	8b 45 f8             	mov    -0x8(%ebp),%eax
81004518:	8b 00                	mov    (%eax),%eax
8100451a:	39 c2                	cmp    %eax,%edx
8100451c:	74 c6                	je     810044e4 <strcmp+0x23>
8100451e:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004521:	89 45 08             	mov    %eax,0x8(%ebp)
81004524:	8b 45 f8             	mov    -0x8(%ebp),%eax
81004527:	89 45 0c             	mov    %eax,0xc(%ebp)
8100452a:	eb 08                	jmp    81004534 <strcmp+0x73>
8100452c:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81004530:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81004534:	8b 45 08             	mov    0x8(%ebp),%eax
81004537:	0f b6 00             	movzbl (%eax),%eax
8100453a:	84 c0                	test   %al,%al
8100453c:	74 10                	je     8100454e <strcmp+0x8d>
8100453e:	8b 45 08             	mov    0x8(%ebp),%eax
81004541:	0f b6 10             	movzbl (%eax),%edx
81004544:	8b 45 0c             	mov    0xc(%ebp),%eax
81004547:	0f b6 00             	movzbl (%eax),%eax
8100454a:	38 c2                	cmp    %al,%dl
8100454c:	74 de                	je     8100452c <strcmp+0x6b>
8100454e:	8b 45 08             	mov    0x8(%ebp),%eax
81004551:	0f b6 00             	movzbl (%eax),%eax
81004554:	0f b6 d0             	movzbl %al,%edx
81004557:	8b 45 0c             	mov    0xc(%ebp),%eax
8100455a:	0f b6 00             	movzbl (%eax),%eax
8100455d:	0f b6 c8             	movzbl %al,%ecx
81004560:	89 d0                	mov    %edx,%eax
81004562:	29 c8                	sub    %ecx,%eax
81004564:	c9                   	leave  
81004565:	c3                   	ret    

81004566 <__get_global_locale>:
81004566:	55                   	push   %ebp
81004567:	89 e5                	mov    %esp,%ebp
81004569:	b8 60 54 00 81       	mov    $0x81005460,%eax
8100456e:	5d                   	pop    %ebp
8100456f:	c3                   	ret    

81004570 <__get_current_locale>:
81004570:	55                   	push   %ebp
81004571:	89 e5                	mov    %esp,%ebp
81004573:	e8 ee ff ff ff       	call   81004566 <__get_global_locale>
81004578:	5d                   	pop    %ebp
81004579:	c3                   	ret    

8100457a <_wcrtomb_r>:
8100457a:	55                   	push   %ebp
8100457b:	89 e5                	mov    %esp,%ebp
8100457d:	83 ec 18             	sub    $0x18,%esp
81004580:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004587:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100458b:	75 21                	jne    810045ae <_wcrtomb_r+0x34>
8100458d:	e8 de ff ff ff       	call   81004570 <__get_current_locale>
81004592:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004598:	ff 75 14             	push   0x14(%ebp)
8100459b:	6a 00                	push   $0x0
8100459d:	8d 55 ea             	lea    -0x16(%ebp),%edx
810045a0:	52                   	push   %edx
810045a1:	ff 75 08             	push   0x8(%ebp)
810045a4:	ff d0                	call   *%eax
810045a6:	83 c4 10             	add    $0x10,%esp
810045a9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810045ac:	eb 1f                	jmp    810045cd <_wcrtomb_r+0x53>
810045ae:	e8 bd ff ff ff       	call   81004570 <__get_current_locale>
810045b3:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810045b9:	ff 75 14             	push   0x14(%ebp)
810045bc:	ff 75 10             	push   0x10(%ebp)
810045bf:	ff 75 0c             	push   0xc(%ebp)
810045c2:	ff 75 08             	push   0x8(%ebp)
810045c5:	ff d0                	call   *%eax
810045c7:	83 c4 10             	add    $0x10,%esp
810045ca:	89 45 f4             	mov    %eax,-0xc(%ebp)
810045cd:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810045d1:	75 19                	jne    810045ec <_wcrtomb_r+0x72>
810045d3:	8b 45 14             	mov    0x14(%ebp),%eax
810045d6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810045dc:	8b 45 08             	mov    0x8(%ebp),%eax
810045df:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810045e5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810045ea:	eb 03                	jmp    810045ef <_wcrtomb_r+0x75>
810045ec:	8b 45 f4             	mov    -0xc(%ebp),%eax
810045ef:	c9                   	leave  
810045f0:	c3                   	ret    

810045f1 <wcrtomb>:
810045f1:	55                   	push   %ebp
810045f2:	89 e5                	mov    %esp,%ebp
810045f4:	83 ec 28             	sub    $0x28,%esp
810045f7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810045fe:	a1 24 50 00 81       	mov    0x81005024,%eax
81004603:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004606:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100460a:	75 21                	jne    8100462d <wcrtomb+0x3c>
8100460c:	e8 5f ff ff ff       	call   81004570 <__get_current_locale>
81004611:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004617:	ff 75 10             	push   0x10(%ebp)
8100461a:	6a 00                	push   $0x0
8100461c:	8d 55 e6             	lea    -0x1a(%ebp),%edx
8100461f:	52                   	push   %edx
81004620:	ff 75 f0             	push   -0x10(%ebp)
81004623:	ff d0                	call   *%eax
81004625:	83 c4 10             	add    $0x10,%esp
81004628:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100462b:	eb 1f                	jmp    8100464c <wcrtomb+0x5b>
8100462d:	e8 3e ff ff ff       	call   81004570 <__get_current_locale>
81004632:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004638:	ff 75 10             	push   0x10(%ebp)
8100463b:	ff 75 0c             	push   0xc(%ebp)
8100463e:	ff 75 08             	push   0x8(%ebp)
81004641:	ff 75 f0             	push   -0x10(%ebp)
81004644:	ff d0                	call   *%eax
81004646:	83 c4 10             	add    $0x10,%esp
81004649:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100464c:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004650:	75 19                	jne    8100466b <wcrtomb+0x7a>
81004652:	8b 45 10             	mov    0x10(%ebp),%eax
81004655:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100465b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100465e:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81004664:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004669:	eb 03                	jmp    8100466e <wcrtomb+0x7d>
8100466b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100466e:	c9                   	leave  
8100466f:	c3                   	ret    

81004670 <__get_global_locale>:
81004670:	55                   	push   %ebp
81004671:	89 e5                	mov    %esp,%ebp
81004673:	b8 60 54 00 81       	mov    $0x81005460,%eax
81004678:	5d                   	pop    %ebp
81004679:	c3                   	ret    

8100467a <__get_current_locale>:
8100467a:	55                   	push   %ebp
8100467b:	89 e5                	mov    %esp,%ebp
8100467d:	e8 ee ff ff ff       	call   81004670 <__get_global_locale>
81004682:	5d                   	pop    %ebp
81004683:	c3                   	ret    

81004684 <_wctomb_r>:
81004684:	55                   	push   %ebp
81004685:	89 e5                	mov    %esp,%ebp
81004687:	83 ec 08             	sub    $0x8,%esp
8100468a:	e8 eb ff ff ff       	call   8100467a <__get_current_locale>
8100468f:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004695:	ff 75 14             	push   0x14(%ebp)
81004698:	ff 75 10             	push   0x10(%ebp)
8100469b:	ff 75 0c             	push   0xc(%ebp)
8100469e:	ff 75 08             	push   0x8(%ebp)
810046a1:	ff d0                	call   *%eax
810046a3:	83 c4 10             	add    $0x10,%esp
810046a6:	c9                   	leave  
810046a7:	c3                   	ret    

810046a8 <__ascii_wctomb>:
810046a8:	55                   	push   %ebp
810046a9:	89 e5                	mov    %esp,%ebp
810046ab:	83 ec 10             	sub    $0x10,%esp
810046ae:	8b 45 10             	mov    0x10(%ebp),%eax
810046b1:	89 45 fc             	mov    %eax,-0x4(%ebp)
810046b4:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810046b8:	75 07                	jne    810046c1 <__ascii_wctomb+0x19>
810046ba:	b8 00 00 00 00       	mov    $0x0,%eax
810046bf:	eb 28                	jmp    810046e9 <__ascii_wctomb+0x41>
810046c1:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
810046c8:	76 10                	jbe    810046da <__ascii_wctomb+0x32>
810046ca:	8b 45 08             	mov    0x8(%ebp),%eax
810046cd:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810046d3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810046d8:	eb 0f                	jmp    810046e9 <__ascii_wctomb+0x41>
810046da:	8b 45 fc             	mov    -0x4(%ebp),%eax
810046dd:	89 c2                	mov    %eax,%edx
810046df:	8b 45 0c             	mov    0xc(%ebp),%eax
810046e2:	88 10                	mov    %dl,(%eax)
810046e4:	b8 01 00 00 00       	mov    $0x1,%eax
810046e9:	c9                   	leave  
810046ea:	c3                   	ret    

810046eb <_fstat_r>:
810046eb:	55                   	push   %ebp
810046ec:	89 e5                	mov    %esp,%ebp
810046ee:	83 ec 18             	sub    $0x18,%esp
810046f1:	c7 05 50 56 00 81 00 	movl   $0x0,0x81005650
810046f8:	00 00 00 
810046fb:	83 ec 08             	sub    $0x8,%esp
810046fe:	ff 75 10             	push   0x10(%ebp)
81004701:	ff 75 0c             	push   0xc(%ebp)
81004704:	e8 20 bd ff ff       	call   81000429 <fstat>
81004709:	83 c4 10             	add    $0x10,%esp
8100470c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100470f:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004713:	75 14                	jne    81004729 <_fstat_r+0x3e>
81004715:	a1 50 56 00 81       	mov    0x81005650,%eax
8100471a:	85 c0                	test   %eax,%eax
8100471c:	74 0b                	je     81004729 <_fstat_r+0x3e>
8100471e:	8b 15 50 56 00 81    	mov    0x81005650,%edx
81004724:	8b 45 08             	mov    0x8(%ebp),%eax
81004727:	89 10                	mov    %edx,(%eax)
81004729:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100472c:	c9                   	leave  
8100472d:	c3                   	ret    

8100472e <_isatty_r>:
8100472e:	55                   	push   %ebp
8100472f:	89 e5                	mov    %esp,%ebp
81004731:	83 ec 18             	sub    $0x18,%esp
81004734:	c7 05 50 56 00 81 00 	movl   $0x0,0x81005650
8100473b:	00 00 00 
8100473e:	83 ec 0c             	sub    $0xc,%esp
81004741:	ff 75 0c             	push   0xc(%ebp)
81004744:	e8 bf bc ff ff       	call   81000408 <isatty>
81004749:	83 c4 10             	add    $0x10,%esp
8100474c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100474f:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004753:	75 14                	jne    81004769 <_isatty_r+0x3b>
81004755:	a1 50 56 00 81       	mov    0x81005650,%eax
8100475a:	85 c0                	test   %eax,%eax
8100475c:	74 0b                	je     81004769 <_isatty_r+0x3b>
8100475e:	8b 15 50 56 00 81    	mov    0x81005650,%edx
81004764:	8b 45 08             	mov    0x8(%ebp),%eax
81004767:	89 10                	mov    %edx,(%eax)
81004769:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100476c:	c9                   	leave  
8100476d:	c3                   	ret    
