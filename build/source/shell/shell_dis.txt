
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x81000aec

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x000096f0 memsz 0x00009ea0 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00008538  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       000007bd  81008540  81008540  00009540  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  81008d00  81008d00  00009d00  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000007a0  81009700  81009700  0000a6f0  2**5
                  ALLOC
  4 .debug_info   0002ac6e  00000000  00000000  0000a6f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00009a8a  00000000  00000000  0003535e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 000009a8  00000000  00000000  0003ede8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_rnglists 00000070  00000000  00000000  0003f790  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   00005e9a  00000000  00000000  0003f800  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_str    0000177c  00000000  00000000  0004569a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_line_str 00001736  00000000  00000000  00046e16  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .comment      0000003d  00000000  00000000  0004854c  2**0
                  CONTENTS, READONLY
 12 .debug_frame  00001f10  00000000  00000000  0004858c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
81009700 l     O .bss	00000200 cmd_buf
81008d00 l     O .data	00000004 prompt
81009900 l     O .bss	0000040c cli
81000000 l     F .text	00000042 do_help
81000042 l     F .text	00000037 do_clear
81000079 l     F .text	000001c2 do_echo
8100023b l     F .text	00000010 do_exit
8100024b l     F .text	00000095 do_ls
810002e0 l     F .text	0000026f do_less
8100054f l     F .text	00000115 do_cp
81000664 l     F .text	00000075 do_rm
810087e0 l     O .rodata	00000060 cmd_list
810006d9 l     F .text	0000003e cli_init
81000717 l     F .text	00000033 show_prompt
8100074a l     F .text	00000043 find_builtin
8100078d l     F .text	00000049 run_builtin
810007d6 l     F .text	000000e5 run_exec_file
810008bb l     F .text	00000081 find_exec_path
81009d20 l     O .bss	000000ff path.0
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
810014ff l     F .text	000000ad std
810015ac l     F .text	0000001b stdin_init
810015c7 l     F .text	0000001b stdout_init
810015e2 l     F .text	0000001b stderr_init
81009e20 l     O .bss	00000004 __sfp_recursive_mutex
81009e24 l     O .bss	00000004 __sinit_recursive_mutex
810018a5 l     F .text	0000000a __fp_lock
810018af l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getchar.c
00000000 l    df *ABS*	00000000 getopt.c
81009e30 l     O .bss	00000004 optwhere
81009e34 l     O .bss	00000004 permute_from
81009e38 l     O .bss	00000004 num_nonopts
81002963 l     F .text	0000007b reverse_argv_elements
810029de l     F .text	00000036 permute
81002a14 l     F .text	00000031 is_option
81002a45 l     F .text	00000059 read_globals
81002a9e l     F .text	00000052 write_globals
81002af0 l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 impure.c
81008d20 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
81003914 l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
8100445d l       .text	00000000 L20
81004414 l       .text	00000000 L5
8100445a l       .text	00000000 L15
81004420 l       .text	00000000 L8
81004441 l       .text	00000000 L9
81004450 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
810044af l       .text	00000000 L4
810044a1 l       .text	00000000 BYTECMP
8100449c l       .text	00000000 L5
810044a3 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
81009e88 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81004670 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 refill.c
81005414 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
81005b0b l       .text	00000000 L25
81005ab2 l       .text	00000000 L5
81005afe l       .text	00000000 L14
81005b04 l       .text	00000000 L19
81005ac3 l       .text	00000000 L10
81005af0 l       .text	00000000 L9
81005af3 l       .text	00000000 L15
81005b3e l       .text	00000000 L26
81005b41 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81005c46 l       .text	00000000 L5
81005c7e l       .text	00000000 L15
81005c50 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
81005d8c l     F .text	0000000a __locale_ctype_ptr_l
81005d96 l     F .text	0000000a __get_global_locale
81005da0 l     F .text	0000000a __get_current_locale
81005daa l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
81009e90 l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 fputwc.c
81006635 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
81009570 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
81006ee8 l     F .text	0000000a __get_global_locale
81006ef2 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
81006fd4 l     F .text	0000000a __get_global_locale
81006fde l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 putc.c
81007820 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
810083a7 l     F .text	0000000a __get_global_locale
810083b1 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
810084b1 l     F .text	0000000a __get_global_locale
810084bb l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
81009e98 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
81009e9c l     O .bss	00000004 __env_recursive_mutex
81006ea8 g     F .text	00000040 _isatty_r
8100527d g     F .text	00000037 cleanup_glue
8100518b g     F .text	000000d6 _puts_r
81006f8e g     F .text	00000046 _lseek_r
81000c3b g     F .text	0000001b yield
8100588e g     F .text	00000055 _siprintf_r
81006422 g     F .text	000000ba __sflags
81000ecf g     F .text	00000039 ioctl
81005d72 g     F .text	0000001a strtok_r
81005156 g     F .text	00000035 printf
810083bb g     F .text	00000077 _wcrtomb_r
810059e4 g     F .text	0000004a __sseek
810017f4 g     F .text	00000099 __sinit
81005fef g     F .text	00000112 __swbuf_r
81006efc g     F .text	0000005f _setlocale_r
810015fd g     F .text	0000006f __sfmoreglue
8100458e g     F .text	00000006 __malloc_unlock
81007070 g       .text	00000000 memmove
8100364c g     F .text	00000049 getopt_long
810017da g     F .text	0000001a _cleanup
81005cb2 g     F .text	000000c0 __strtok_r
81006418 g     F .text	0000000a __errno
81006d7e g     F .text	00000020 getenv
8100272e g     F .text	00000043 _fstat_r
81009e8c g     O .bss	00000004 errno
810082a7 g     F .text	0000001d __srget
8100597f g     F .text	0000000a __seofread
81000c0e g     F .text	0000002d execve
81000bb0 g     F .text	0000001b getpid
810014e0 g     F .text	0000001f fgets
81006c88 g     F .text	00000067 _getc_r
81006cef g     F .text	0000006f getc
810044b8 g       .text	00000000 memcpy
81005682 g     F .text	0000020c setvbuf
810017b9 g     F .text	00000021 _cleanup_r
810074e6 g     F .text	0000033a _svfprintf_r
81005261 g     F .text	0000001c puts
810038db g     F .text	0000001c malloc
81005129 g     F .text	0000002d _printf_r
81000d25 g     F .text	00000021 isatty
81003751 g     F .text	0000000a __getreent
81009e28 g     O .bss	00000004 optarg
81009e40 g     O .bss	00000004 __malloc_top_pad
81009700 g       .bss	00000000 __bss_start__
810067ea g     F .text	0000049e __sfvwrite_r
81005642 g     F .text	00000040 _sbrk_r
81008d04 g     O .data	00000004 opterr
81000e5a g     F .text	00000040 readdir
81007924 g     F .text	00000046 _read_r
81000fa7 g     F .text	00000107 _fclose_r
81001349 g     F .text	00000039 fflush
81009e44 g     O .bss	00000004 __malloc_max_sbrked_mem
81000cf8 g     F .text	0000002d lseek
81008990 g     O .rodata	00000004 _global_impure_ptr
8100796a g     F .text	000008da _realloc_r
81005fa1 g     F .text	00000025 strtol_l
8100674b g     F .text	00000057 _fputwc_r
810018b9 g     F .text	00000024 __fp_lock_all
81005fc6 g     F .text	00000029 strtol
8100225d g     F .text	000004b1 _fseeko_r
810052b4 g     F .text	00000160 _reclaim_reent
810064dc g     F .text	00000046 _fputc_r
81000caa g     F .text	0000002d write
81007886 g     F .text	0000004b _putc_r
810096ec g     O .data	00000004 environ
81000d46 g     F .text	00000027 fstat
81001a1e g     F .text	0000002c fprintf
8100372a g     F .text	00000027 __getopt_long_only_r
8100270e g     F .text	00000020 fseeko
81000f49 g     F .text	0000001a _atoi_r
810070fd g     F .text	000001b7 __ssputs_r
8100223d g     F .text	00000020 fseek
81000b3a g     F .text	0000004c sys_call
810046d6 g     F .text	000000a8 __sfputs_r
81009e2c g     O .bss	00000004 optind
8100188d g     F .text	00000006 __sfp_lock_acquire
810043d0 g       .text	00000000 memchr
8100588e g     F .text	00000055 _sprintf_r
81009ea0 g       .bss	00000000 __bss_end__
81001ce4 g     F .text	000003db _free_r
81000dd1 g     F .text	00000021 wait
81008a60 g     O .rodata	00000180 _ctype_b
81006f5b g     F .text	00000014 __locale_mb_cur_max
81008244 g     F .text	00000063 __srget_r
810062c3 g     F .text	00000115 __call_exitprocs
8100956c g     O .data	00000004 __malloc_sbrk_base
81000aec g       .text	00000000 _start
81000c7d g     F .text	0000002d read
810072b4 g     F .text	00000232 __ssprint_r
810050e3 g     F .text	00000046 _open_r
810082c4 g     F .text	000000e3 strncmp
81003703 g     F .text	00000027 __getopt_long_r
81009e60 g     O .bss	00000028 __malloc_current_mallinfo
81000f08 g     F .text	00000027 unlink
81005129 g     F .text	0000002d _iprintf_r
810063d8 g     F .text	00000040 _close_r
81005c89 g     F .text	00000029 strtok
81004465 g       .text	00000000 memcmp
81002844 g     F .text	000000b8 _fwrite_r
81000bf3 g     F .text	0000001b fork
81006168 g     F .text	0000015b __swsetup_r
8100166c g     F .text	0000014d __sfp
81009160 g     O .data	00000408 __malloc_av_
8100189f g     F .text	00000006 __sinit_lock_release
8100593b g     F .text	00000044 __sread
81001cbf g     F .text	00000025 fread
81004588 g     F .text	00000006 __malloc_lock
810019f5 g     F .text	00000029 _fprintf_r
81000d6d g     F .text	00000021 sbrk
810012f1 g     F .text	00000058 _fflush_r
81000afc g     F .text	0000003e cstart
810019d6 g     F .text	0000001f fopen
81003605 g     F .text	00000047 getopt
81004500 g       .text	00000000 memset
8100093c g     F .text	000001b0 main
81009e48 g     O .bss	00000004 __malloc_max_total_mem
81006101 g     F .text	00000021 __swbuf
81001a4a g     F .text	00000275 _fread_r
81005a2e g     F .text	00000025 __sclose
810010ae g     F .text	0000001d fclose
81005f7c g     F .text	00000025 _strtol_r
8100293e g     F .text	00000025 getchar
81006d9e g     F .text	000000ed _findenv_r
81003ba7 g     F .text	00000822 _malloc_r
810084e9 g     F .text	00000043 __ascii_wctomb
81000df2 g     F .text	00000068 opendir
810019f5 g     F .text	00000029 _fiprintf_r
81008532 g     F .text	00000006 __env_unlock
81006d5e g     F .text	00000020 _findenv
81002771 g     F .text	00000068 _fwalk
81001382 g     F .text	0000015e _fgets_r
81006fe8 g     F .text	0000002a _mbtowc_r
810078d1 g     F .text	00000053 putc
81003695 g     F .text	00000049 getopt_long_only
810020bf g     F .text	00000161 _malloc_trim_r
81005b5c g     F .text	000000a5 strcmp
8100477e g     F .text	00000025 vfiprintf
81000d8e g     F .text	00000021 dup
81005156 g     F .text	00000035 iprintf
810058e3 g     F .text	00000058 sprintf
81009e94 g     O .bss	00000004 _PathLocale
81006122 g     F .text	00000046 _write_r
81006f6f g     F .text	0000001f setlocale
81004af9 g     F .text	0000019b _printf_common
81009144 g     O .data	00000004 _impure_ptr
810010cb g     F .text	00000226 __sflush_r
81002220 g     F .text	0000001d _fseek_r
810074e6 g     F .text	0000033a _svfiprintf_r
81005441 g     F .text	00000201 __srefill_r
81007012 g     F .text	00000058 __ascii_mbtowc
810018dd g     F .text	00000024 __fp_unlock_all
81006522 g     F .text	0000004e fputc
81000bcb g     F .text	00000028 print_msg
81008d08 g     O .data	00000004 optopt
81003848 g     F .text	00000093 __swhatbuf_r
810028fc g     F .text	00000025 fwrite
81002921 g     F .text	0000001d _getchar_r
8100669b g     F .text	000000b0 __fputwc
81006570 g     F .text	000000a6 _fputs_r
81005989 g     F .text	0000005b __swrite
81009568 g     O .data	00000004 __malloc_trim_threshold
81000f63 g     F .text	00000044 exit
81001a1e g     F .text	0000002c fiprintf
810047a3 g     F .text	00000356 _vfiprintf_r
810027d9 g     F .text	0000006b _fwalk_reent
81001893 g     F .text	00000006 __sfp_lock_release
810058e3 g     F .text	00000058 siprintf
81000f2f g     F .text	0000001a atoi
81008be0 g     O .rodata	00000101 _ctype_
810036de g     F .text	00000025 __getopt_r
81001901 g     F .text	000000d5 _fopen_r
81000daf g     F .text	00000022 _exit
8100375b g     F .text	000000ed __smakebuf_r
81005c10 g       .text	00000000 strlen
81004c94 g     F .text	0000044f _printf_i
81000c56 g     F .text	00000027 open
81004594 g     F .text	000000dc __sprint_r
81005a60 g       .text	00000000 strchr
81006616 g     F .text	0000001f fputs
81000e9a g     F .text	00000035 closedir
810084c5 g     F .text	00000024 _wctomb_r
8100852c g     F .text	00000006 __env_lock
810047a3 g     F .text	00000356 _vfprintf_r
81000b86 g     F .text	0000002a msleep
81008432 g     F .text	0000007f wcrtomb
81000cd7 g     F .text	00000021 close
81009580 g     O .data	0000016c __global_locale
8100477e g     F .text	00000025 vfprintf
810067a2 g     F .text	00000048 fputwc
810038f7 g     F .text	0000001d free
81001899 g     F .text	00000006 __sinit_lock_acquire
81006e8b g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <do_help>:
 *
 * @param argc
 * @param arg
 * @return int
 */
static int do_help(int argc, const char **argv) {
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 18             	sub    $0x18,%esp
  const cli_cmd_t *start = cli.cmd_start;
81000006:	a1 00 9d 00 81       	mov    0x81009d00,%eax
8100000b:	89 45 f4             	mov    %eax,-0xc(%ebp)
  while (start < cli.cmd_end) {
8100000e:	eb 21                	jmp    81000031 <do_help+0x31>
    printf("%s\t--> %s\n", start->name, start->usage);
81000010:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000013:	8b 50 04             	mov    0x4(%eax),%edx
81000016:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000019:	8b 00                	mov    (%eax),%eax
8100001b:	83 ec 04             	sub    $0x4,%esp
8100001e:	52                   	push   %edx
8100001f:	50                   	push   %eax
81000020:	68 46 85 00 81       	push   $0x81008546
81000025:	e8 2c 51 00 00       	call   81005156 <iprintf>
8100002a:	83 c4 10             	add    $0x10,%esp
    start++;
8100002d:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
  while (start < cli.cmd_end) {
81000031:	a1 04 9d 00 81       	mov    0x81009d04,%eax
81000036:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000039:	72 d5                	jb     81000010 <do_help+0x10>
  }

  return 0;
8100003b:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000040:	c9                   	leave  
81000041:	c3                   	ret    

81000042 <do_clear>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_clear(int argc, const char **argv) {
81000042:	55                   	push   %ebp
81000043:	89 e5                	mov    %esp,%ebp
81000045:	83 ec 08             	sub    $0x8,%esp
  printf("%s", ESC_CLEAR_SCREEN);
81000048:	83 ec 08             	sub    $0x8,%esp
8100004b:	68 51 85 00 81       	push   $0x81008551
81000050:	68 56 85 00 81       	push   $0x81008556
81000055:	e8 fc 50 00 00       	call   81005156 <iprintf>
8100005a:	83 c4 10             	add    $0x10,%esp
  printf("%s", ESC_MOVE_CURSOR(0, 0));
8100005d:	83 ec 08             	sub    $0x8,%esp
81000060:	68 59 85 00 81       	push   $0x81008559
81000065:	68 56 85 00 81       	push   $0x81008556
8100006a:	e8 e7 50 00 00       	call   81005156 <iprintf>
8100006f:	83 c4 10             	add    $0x10,%esp
  return 0;
81000072:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000077:	c9                   	leave  
81000078:	c3                   	ret    

81000079 <do_echo>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_echo(int argc, const char **argv) {
81000079:	55                   	push   %ebp
8100007a:	89 e5                	mov    %esp,%ebp
8100007c:	53                   	push   %ebx
8100007d:	81 ec 94 00 00 00    	sub    $0x94,%esp
  if (argc ==
81000083:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
81000087:	75 40                	jne    810000c9 <do_echo+0x50>
      1) {  // 没有指定任何参数只输入了 echo，则等待用户输入信息以进行回显
    char msg_buf[128];
    fgets(msg_buf, sizeof(msg_buf), stdin);
81000089:	e8 c3 36 00 00       	call   81003751 <__getreent>
8100008e:	8b 40 04             	mov    0x4(%eax),%eax
81000091:	83 ec 04             	sub    $0x4,%esp
81000094:	50                   	push   %eax
81000095:	68 80 00 00 00       	push   $0x80
8100009a:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000a0:	50                   	push   %eax
810000a1:	e8 3a 14 00 00       	call   810014e0 <fgets>
810000a6:	83 c4 10             	add    $0x10,%esp
    msg_buf[sizeof(msg_buf) - 1] = '\0';
810000a9:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
    puts(msg_buf);
810000ad:	83 ec 0c             	sub    $0xc,%esp
810000b0:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000b6:	50                   	push   %eax
810000b7:	e8 a5 51 00 00       	call   81005261 <puts>
810000bc:	83 c4 10             	add    $0x10,%esp
    return 0;
810000bf:	b8 00 00 00 00       	mov    $0x0,%eax
810000c4:	e9 6d 01 00 00       	jmp    81000236 <do_echo+0x1bd>
  }

  optind = 0;  // getopt每次查找都从optind处开始
810000c9:	c7 05 2c 9e 00 81 00 	movl   $0x0,0x81009e2c
810000d0:	00 00 00 
  int count = 1;
810000d3:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
  int ch;
  // getopt函数解析参数列表，n:表示查找-n选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
810000da:	e9 a4 00 00 00       	jmp    81000183 <do_echo+0x10a>
    switch (ch) {
810000df:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e3:	74 54                	je     81000139 <do_echo+0xc0>
810000e5:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e9:	0f 8f 93 00 00 00    	jg     81000182 <do_echo+0x109>
810000ef:	83 7d ec 3f          	cmpl   $0x3f,-0x14(%ebp)
810000f3:	74 5a                	je     8100014f <do_echo+0xd6>
810000f5:	83 7d ec 68          	cmpl   $0x68,-0x14(%ebp)
810000f9:	0f 85 83 00 00 00    	jne    81000182 <do_echo+0x109>
      case 'h':
        puts("help:");
810000ff:	83 ec 0c             	sub    $0xc,%esp
81000102:	68 60 85 00 81       	push   $0x81008560
81000107:	e8 55 51 00 00       	call   81005261 <puts>
8100010c:	83 c4 10             	add    $0x10,%esp
        puts("\techo any message");
8100010f:	83 ec 0c             	sub    $0xc,%esp
81000112:	68 66 85 00 81       	push   $0x81008566
81000117:	e8 45 51 00 00       	call   81005261 <puts>
8100011c:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: echo [-n count] message");
8100011f:	83 ec 0c             	sub    $0xc,%esp
81000122:	68 78 85 00 81       	push   $0x81008578
81000127:	e8 35 51 00 00       	call   81005261 <puts>
8100012c:	83 c4 10             	add    $0x10,%esp
        return 0;
8100012f:	b8 00 00 00 00       	mov    $0x0,%eax
81000134:	e9 fd 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      case 'n':
        count = atoi(optarg);  // optarg为newlib库自己声明的
81000139:	a1 28 9e 00 81       	mov    0x81009e28,%eax
8100013e:	83 ec 0c             	sub    $0xc,%esp
81000141:	50                   	push   %eax
81000142:	e8 e8 0d 00 00       	call   81000f2f <atoi>
81000147:	83 c4 10             	add    $0x10,%esp
8100014a:	89 45 f4             	mov    %eax,-0xc(%ebp)
        break;
8100014d:	eb 34                	jmp    81000183 <do_echo+0x10a>
      case '?':  // 找到未指定选项
        if (optarg) {
8100014f:	a1 28 9e 00 81       	mov    0x81009e28,%eax
81000154:	85 c0                	test   %eax,%eax
81000156:	74 20                	je     81000178 <do_echo+0xff>
          fprintf(stderr,
81000158:	8b 1d 28 9e 00 81    	mov    0x81009e28,%ebx
8100015e:	e8 ee 35 00 00       	call   81003751 <__getreent>
81000163:	8b 40 0c             	mov    0xc(%eax),%eax
81000166:	83 ec 04             	sub    $0x4,%esp
81000169:	53                   	push   %ebx
8100016a:	68 98 85 00 81       	push   $0x81008598
8100016f:	50                   	push   %eax
81000170:	e8 a9 18 00 00       	call   81001a1e <fiprintf>
81000175:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000178:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100017d:	e9 b4 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      default:
        break;
81000182:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
81000183:	83 ec 04             	sub    $0x4,%esp
81000186:	68 b7 85 00 81       	push   $0x810085b7
8100018b:	ff 75 0c             	push   0xc(%ebp)
8100018e:	ff 75 08             	push   0x8(%ebp)
81000191:	e8 6f 34 00 00       	call   81003605 <getopt>
81000196:	83 c4 10             	add    $0x10,%esp
81000199:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100019c:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810001a0:	0f 85 39 ff ff ff    	jne    810000df <do_echo+0x66>
    }
  }

  if (count == 0) {
810001a6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810001aa:	75 21                	jne    810001cd <do_echo+0x154>
    fprintf(stderr, ESC_COLOR_ERROR
810001ac:	e8 a0 35 00 00       	call   81003751 <__getreent>
810001b1:	8b 40 0c             	mov    0xc(%eax),%eax
810001b4:	50                   	push   %eax
810001b5:	6a 32                	push   $0x32
810001b7:	6a 01                	push   $0x1
810001b9:	68 bc 85 00 81       	push   $0x810085bc
810001be:	e8 39 27 00 00       	call   810028fc <fwrite>
810001c3:	83 c4 10             	add    $0x10,%esp
            "echo: argument required for option '-n'\n" ESC_COLOR_DEFAULT);
    return -1;
810001c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001cb:	eb 69                	jmp    81000236 <do_echo+0x1bd>
  }
  if (optind >
810001cd:	a1 2c 9e 00 81       	mov    0x81009e2c,%eax
810001d2:	39 45 08             	cmp    %eax,0x8(%ebp)
810001d5:	7f 21                	jg     810001f8 <do_echo+0x17f>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "message is empty\n" ESC_COLOR_DEFAULT);
810001d7:	e8 75 35 00 00       	call   81003751 <__getreent>
810001dc:	8b 40 0c             	mov    0xc(%eax),%eax
810001df:	50                   	push   %eax
810001e0:	6a 1b                	push   $0x1b
810001e2:	6a 01                	push   $0x1
810001e4:	68 ef 85 00 81       	push   $0x810085ef
810001e9:	e8 0e 27 00 00       	call   810028fc <fwrite>
810001ee:	83 c4 10             	add    $0x10,%esp
    return -1;
810001f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001f6:	eb 3e                	jmp    81000236 <do_echo+0x1bd>
  }

  const char *msg = argv[optind];
810001f8:	a1 2c 9e 00 81       	mov    0x81009e2c,%eax
810001fd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000204:	8b 45 0c             	mov    0xc(%ebp),%eax
81000207:	01 d0                	add    %edx,%eax
81000209:	8b 00                	mov    (%eax),%eax
8100020b:	89 45 e8             	mov    %eax,-0x18(%ebp)
  for (int i = 0; i < count; ++i) {
8100020e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81000215:	eb 12                	jmp    81000229 <do_echo+0x1b0>
    puts(msg);
81000217:	83 ec 0c             	sub    $0xc,%esp
8100021a:	ff 75 e8             	push   -0x18(%ebp)
8100021d:	e8 3f 50 00 00       	call   81005261 <puts>
81000222:	83 c4 10             	add    $0x10,%esp
  for (int i = 0; i < count; ++i) {
81000225:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81000229:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100022c:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100022f:	7c e6                	jl     81000217 <do_echo+0x19e>
  }
  return 0;
81000231:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000236:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000239:	c9                   	leave  
8100023a:	c3                   	ret    

8100023b <do_exit>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_exit(int argc, const char **argv) {
8100023b:	55                   	push   %ebp
8100023c:	89 e5                	mov    %esp,%ebp
8100023e:	83 ec 08             	sub    $0x8,%esp
  exit(0);
81000241:	83 ec 0c             	sub    $0xc,%esp
81000244:	6a 00                	push   $0x0
81000246:	e8 18 0d 00 00       	call   81000f63 <exit>

8100024b <do_ls>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_ls(int argc, const char **argv) {
8100024b:	55                   	push   %ebp
8100024c:	89 e5                	mov    %esp,%ebp
8100024e:	83 ec 18             	sub    $0x18,%esp
  DIR *p_dir = opendir("temp");
81000251:	83 ec 0c             	sub    $0xc,%esp
81000254:	68 0b 86 00 81       	push   $0x8100860b
81000259:	e8 94 0b 00 00       	call   81000df2 <opendir>
8100025e:	83 c4 10             	add    $0x10,%esp
81000261:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (p_dir == NULL) {
81000264:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000268:	75 4a                	jne    810002b4 <do_ls+0x69>
    printf("open dir failed.\n");
8100026a:	83 ec 0c             	sub    $0xc,%esp
8100026d:	68 10 86 00 81       	push   $0x81008610
81000272:	e8 ea 4f 00 00       	call   81005261 <puts>
81000277:	83 c4 10             	add    $0x10,%esp
    return -1;
8100027a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100027f:	eb 5d                	jmp    810002de <do_ls+0x93>
  }

  struct dirent *entry;
  while ((entry = readdir(p_dir)) != NULL) {
    printf("%c %s %d\n", entry->type == FILE_DIR ? 'd' : 'f', entry->name,
81000281:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000284:	8b 40 18             	mov    0x18(%eax),%eax
81000287:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100028a:	8d 4a 08             	lea    0x8(%edx),%ecx
8100028d:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000290:	8b 52 04             	mov    0x4(%edx),%edx
81000293:	83 fa 02             	cmp    $0x2,%edx
81000296:	75 07                	jne    8100029f <do_ls+0x54>
81000298:	ba 64 00 00 00       	mov    $0x64,%edx
8100029d:	eb 05                	jmp    810002a4 <do_ls+0x59>
8100029f:	ba 66 00 00 00       	mov    $0x66,%edx
810002a4:	50                   	push   %eax
810002a5:	51                   	push   %ecx
810002a6:	52                   	push   %edx
810002a7:	68 21 86 00 81       	push   $0x81008621
810002ac:	e8 a5 4e 00 00       	call   81005156 <iprintf>
810002b1:	83 c4 10             	add    $0x10,%esp
  while ((entry = readdir(p_dir)) != NULL) {
810002b4:	83 ec 0c             	sub    $0xc,%esp
810002b7:	ff 75 f4             	push   -0xc(%ebp)
810002ba:	e8 9b 0b 00 00       	call   81000e5a <readdir>
810002bf:	83 c4 10             	add    $0x10,%esp
810002c2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810002c5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810002c9:	75 b6                	jne    81000281 <do_ls+0x36>
           entry->size);
  }
  closedir(p_dir);
810002cb:	83 ec 0c             	sub    $0xc,%esp
810002ce:	ff 75 f4             	push   -0xc(%ebp)
810002d1:	e8 c4 0b 00 00       	call   81000e9a <closedir>
810002d6:	83 c4 10             	add    $0x10,%esp
  return 0;
810002d9:	b8 00 00 00 00       	mov    $0x0,%eax
}
810002de:	c9                   	leave  
810002df:	c3                   	ret    

810002e0 <do_less>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_less(int argc, const char **argv) {
810002e0:	55                   	push   %ebp
810002e1:	89 e5                	mov    %esp,%ebp
810002e3:	53                   	push   %ebx
810002e4:	83 ec 24             	sub    $0x24,%esp
  optind = 0;
810002e7:	c7 05 2c 9e 00 81 00 	movl   $0x0,0x81009e2c
810002ee:	00 00 00 
  int line_mode = 0;  //是否开启逐行读取
810002f1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  int ch;
  // getopt函数解析参数列表，l:表示查找-l选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "lh")) != -1) {
810002f8:	e9 93 00 00 00       	jmp    81000390 <do_less+0xb0>
    switch (ch) {
810002fd:	83 7d f0 6c          	cmpl   $0x6c,-0x10(%ebp)
81000301:	74 50                	je     81000353 <do_less+0x73>
81000303:	83 7d f0 6c          	cmpl   $0x6c,-0x10(%ebp)
81000307:	0f 8f 82 00 00 00    	jg     8100038f <do_less+0xaf>
8100030d:	83 7d f0 3f          	cmpl   $0x3f,-0x10(%ebp)
81000311:	74 49                	je     8100035c <do_less+0x7c>
81000313:	83 7d f0 68          	cmpl   $0x68,-0x10(%ebp)
81000317:	75 76                	jne    8100038f <do_less+0xaf>
      case 'h':
        puts("help:");
81000319:	83 ec 0c             	sub    $0xc,%esp
8100031c:	68 60 85 00 81       	push   $0x81008560
81000321:	e8 3b 4f 00 00       	call   81005261 <puts>
81000326:	83 c4 10             	add    $0x10,%esp
        puts("\tshow file content");
81000329:	83 ec 0c             	sub    $0xc,%esp
8100032c:	68 2b 86 00 81       	push   $0x8100862b
81000331:	e8 2b 4f 00 00       	call   81005261 <puts>
81000336:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: less [-l] file");
81000339:	83 ec 0c             	sub    $0xc,%esp
8100033c:	68 3e 86 00 81       	push   $0x8100863e
81000341:	e8 1b 4f 00 00       	call   81005261 <puts>
81000346:	83 c4 10             	add    $0x10,%esp
        return 0;
81000349:	b8 00 00 00 00       	mov    $0x0,%eax
8100034e:	e9 f7 01 00 00       	jmp    8100054a <do_less+0x26a>
      case 'l':
        line_mode = 1;
81000353:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
        break;
8100035a:	eb 34                	jmp    81000390 <do_less+0xb0>
      case '?':  // 找到未指定选项
        if (optarg) {
8100035c:	a1 28 9e 00 81       	mov    0x81009e28,%eax
81000361:	85 c0                	test   %eax,%eax
81000363:	74 20                	je     81000385 <do_less+0xa5>
          fprintf(stderr,
81000365:	8b 1d 28 9e 00 81    	mov    0x81009e28,%ebx
8100036b:	e8 e1 33 00 00       	call   81003751 <__getreent>
81000370:	8b 40 0c             	mov    0xc(%eax),%eax
81000373:	83 ec 04             	sub    $0x4,%esp
81000376:	53                   	push   %ebx
81000377:	68 98 85 00 81       	push   $0x81008598
8100037c:	50                   	push   %eax
8100037d:	e8 9c 16 00 00       	call   81001a1e <fiprintf>
81000382:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000385:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100038a:	e9 bb 01 00 00       	jmp    8100054a <do_less+0x26a>
      default:
        break;
8100038f:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "lh")) != -1) {
81000390:	83 ec 04             	sub    $0x4,%esp
81000393:	68 55 86 00 81       	push   $0x81008655
81000398:	ff 75 0c             	push   0xc(%ebp)
8100039b:	ff 75 08             	push   0x8(%ebp)
8100039e:	e8 62 32 00 00       	call   81003605 <getopt>
810003a3:	83 c4 10             	add    $0x10,%esp
810003a6:	89 45 f0             	mov    %eax,-0x10(%ebp)
810003a9:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810003ad:	0f 85 4a ff ff ff    	jne    810002fd <do_less+0x1d>
    }
  }



  if (optind >
810003b3:	a1 2c 9e 00 81       	mov    0x81009e2c,%eax
810003b8:	39 45 08             	cmp    %eax,0x8(%ebp)
810003bb:	7f 24                	jg     810003e1 <do_less+0x101>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "no file input\n"ESC_COLOR_DEFAULT);
810003bd:	e8 8f 33 00 00       	call   81003751 <__getreent>
810003c2:	8b 40 0c             	mov    0xc(%eax),%eax
810003c5:	50                   	push   %eax
810003c6:	6a 18                	push   $0x18
810003c8:	6a 01                	push   $0x1
810003ca:	68 58 86 00 81       	push   $0x81008658
810003cf:	e8 28 25 00 00       	call   810028fc <fwrite>
810003d4:	83 c4 10             	add    $0x10,%esp
    return -1;
810003d7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810003dc:	e9 69 01 00 00       	jmp    8100054a <do_less+0x26a>
  }

  //打开文件
  FILE *file = fopen(argv[optind], "r");
810003e1:	a1 2c 9e 00 81       	mov    0x81009e2c,%eax
810003e6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810003ed:	8b 45 0c             	mov    0xc(%ebp),%eax
810003f0:	01 d0                	add    %edx,%eax
810003f2:	8b 00                	mov    (%eax),%eax
810003f4:	83 ec 08             	sub    $0x8,%esp
810003f7:	68 71 86 00 81       	push   $0x81008671
810003fc:	50                   	push   %eax
810003fd:	e8 d4 15 00 00       	call   810019d6 <fopen>
81000402:	83 c4 10             	add    $0x10,%esp
81000405:	89 45 ec             	mov    %eax,-0x14(%ebp)
  if (file == NULL) {
81000408:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100040c:	75 37                	jne    81000445 <do_less+0x165>
    fprintf(stderr, ESC_COLOR_ERROR"open file failed. %s"ESC_COLOR_DEFAULT, argv[optind]);
8100040e:	a1 2c 9e 00 81       	mov    0x81009e2c,%eax
81000413:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100041a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100041d:	01 d0                	add    %edx,%eax
8100041f:	8b 18                	mov    (%eax),%ebx
81000421:	e8 2b 33 00 00       	call   81003751 <__getreent>
81000426:	8b 40 0c             	mov    0xc(%eax),%eax
81000429:	83 ec 04             	sub    $0x4,%esp
8100042c:	53                   	push   %ebx
8100042d:	68 74 86 00 81       	push   $0x81008674
81000432:	50                   	push   %eax
81000433:	e8 e6 15 00 00       	call   81001a1e <fiprintf>
81000438:	83 c4 10             	add    $0x10,%esp
    return -1;
8100043b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000440:	e9 05 01 00 00       	jmp    8100054a <do_less+0x26a>
  }
  
  int buf_len = 255;
81000445:	c7 45 e8 ff 00 00 00 	movl   $0xff,-0x18(%ebp)
  char *buf = (char *)malloc(buf_len);
8100044c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100044f:	83 ec 0c             	sub    $0xc,%esp
81000452:	50                   	push   %eax
81000453:	e8 83 34 00 00       	call   810038db <malloc>
81000458:	83 c4 10             	add    $0x10,%esp
8100045b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
  if (line_mode == 0) {
8100045e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000462:	75 2d                	jne    81000491 <do_less+0x1b1>
    //一次性读取完文件
    while (fgets(buf, buf_len, file) != NULL) {
81000464:	eb 0e                	jmp    81000474 <do_less+0x194>
      puts(buf);
81000466:	83 ec 0c             	sub    $0xc,%esp
81000469:	ff 75 e4             	push   -0x1c(%ebp)
8100046c:	e8 f0 4d 00 00       	call   81005261 <puts>
81000471:	83 c4 10             	add    $0x10,%esp
    while (fgets(buf, buf_len, file) != NULL) {
81000474:	83 ec 04             	sub    $0x4,%esp
81000477:	ff 75 ec             	push   -0x14(%ebp)
8100047a:	ff 75 e8             	push   -0x18(%ebp)
8100047d:	ff 75 e4             	push   -0x1c(%ebp)
81000480:	e8 5b 10 00 00       	call   810014e0 <fgets>
81000485:	83 c4 10             	add    $0x10,%esp
81000488:	85 c0                	test   %eax,%eax
8100048a:	75 da                	jne    81000466 <do_less+0x186>
8100048c:	e9 98 00 00 00       	jmp    81000529 <do_less+0x249>
    }
  } else {
    //取消输入行缓存，使输入及时写入key中
    setvbuf(stdin, NULL, _IONBF, 0);
81000491:	e8 bb 32 00 00       	call   81003751 <__getreent>
81000496:	8b 40 04             	mov    0x4(%eax),%eax
81000499:	6a 00                	push   $0x0
8100049b:	6a 02                	push   $0x2
8100049d:	6a 00                	push   $0x0
8100049f:	50                   	push   %eax
810004a0:	e8 dd 51 00 00       	call   81005682 <setvbuf>
810004a5:	83 c4 10             	add    $0x10,%esp
    //关闭TTY设备回显
    ioctl(0, TTY_CMD_ECHO, 0, 0);
810004a8:	6a 00                	push   $0x0
810004aa:	6a 00                	push   $0x0
810004ac:	6a 01                	push   $0x1
810004ae:	6a 00                	push   $0x0
810004b0:	e8 1a 0a 00 00       	call   81000ecf <ioctl>
810004b5:	83 c4 10             	add    $0x10,%esp
    while (1) {
      char *b = fgets(buf, buf_len, file);
810004b8:	83 ec 04             	sub    $0x4,%esp
810004bb:	ff 75 ec             	push   -0x14(%ebp)
810004be:	ff 75 e8             	push   -0x18(%ebp)
810004c1:	ff 75 e4             	push   -0x1c(%ebp)
810004c4:	e8 17 10 00 00       	call   810014e0 <fgets>
810004c9:	83 c4 10             	add    $0x10,%esp
810004cc:	89 45 e0             	mov    %eax,-0x20(%ebp)
      if (b == NULL) {
810004cf:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810004d3:	74 26                	je     810004fb <do_less+0x21b>
        break;
      }

      puts(buf);
810004d5:	83 ec 0c             	sub    $0xc,%esp
810004d8:	ff 75 e4             	push   -0x1c(%ebp)
810004db:	e8 81 4d 00 00       	call   81005261 <puts>
810004e0:	83 c4 10             	add    $0x10,%esp
      //用按键的方式进行下一行的读取
      char key;
      while ((key = getchar()) != 'n') {
810004e3:	eb 06                	jmp    810004eb <do_less+0x20b>
        if (key == 'q') {
810004e5:	80 7d df 71          	cmpb   $0x71,-0x21(%ebp)
810004e9:	74 13                	je     810004fe <do_less+0x21e>
      while ((key = getchar()) != 'n') {
810004eb:	e8 4e 24 00 00       	call   8100293e <getchar>
810004f0:	88 45 df             	mov    %al,-0x21(%ebp)
810004f3:	80 7d df 6e          	cmpb   $0x6e,-0x21(%ebp)
810004f7:	75 ec                	jne    810004e5 <do_less+0x205>
    while (1) {
810004f9:	eb bd                	jmp    810004b8 <do_less+0x1d8>
        break;
810004fb:	90                   	nop
810004fc:	eb 01                	jmp    810004ff <do_less+0x21f>
          goto less_quit;
810004fe:	90                   	nop
      }
      
    }
less_quit:
    //恢复输入行缓存
    setvbuf(stdin, NULL, _IOLBF, BUFSIZ);
810004ff:	e8 4d 32 00 00       	call   81003751 <__getreent>
81000504:	8b 40 04             	mov    0x4(%eax),%eax
81000507:	68 00 04 00 00       	push   $0x400
8100050c:	6a 01                	push   $0x1
8100050e:	6a 00                	push   $0x0
81000510:	50                   	push   %eax
81000511:	e8 6c 51 00 00       	call   81005682 <setvbuf>
81000516:	83 c4 10             	add    $0x10,%esp
    //打开TTY设备回显
    ioctl(0, TTY_CMD_ECHO, 1, 0);
81000519:	6a 00                	push   $0x0
8100051b:	6a 01                	push   $0x1
8100051d:	6a 01                	push   $0x1
8100051f:	6a 00                	push   $0x0
81000521:	e8 a9 09 00 00       	call   81000ecf <ioctl>
81000526:	83 c4 10             	add    $0x10,%esp
  }


  

  free(buf);
81000529:	83 ec 0c             	sub    $0xc,%esp
8100052c:	ff 75 e4             	push   -0x1c(%ebp)
8100052f:	e8 c3 33 00 00       	call   810038f7 <free>
81000534:	83 c4 10             	add    $0x10,%esp
  fclose(file);
81000537:	83 ec 0c             	sub    $0xc,%esp
8100053a:	ff 75 ec             	push   -0x14(%ebp)
8100053d:	e8 6c 0b 00 00       	call   810010ae <fclose>
81000542:	83 c4 10             	add    $0x10,%esp
  return 0;
81000545:	b8 00 00 00 00       	mov    $0x0,%eax
}
8100054a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100054d:	c9                   	leave  
8100054e:	c3                   	ret    

8100054f <do_cp>:
 * 
 * @param argc 
 * @param argv 
 * @return int 
 */
static int do_cp(int argc, const char **argv) {
8100054f:	55                   	push   %ebp
81000550:	89 e5                	mov    %esp,%ebp
81000552:	83 ec 18             	sub    $0x18,%esp
  if (argc < 3) {
81000555:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)
81000559:	7f 24                	jg     8100057f <do_cp+0x30>
    fprintf(stderr, "no [from] or no [to]\n");
8100055b:	e8 f1 31 00 00       	call   81003751 <__getreent>
81000560:	8b 40 0c             	mov    0xc(%eax),%eax
81000563:	50                   	push   %eax
81000564:	6a 15                	push   $0x15
81000566:	6a 01                	push   $0x1
81000568:	68 93 86 00 81       	push   $0x81008693
8100056d:	e8 8a 23 00 00       	call   810028fc <fwrite>
81000572:	83 c4 10             	add    $0x10,%esp
    return -1;
81000575:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100057a:	e9 e3 00 00 00       	jmp    81000662 <do_cp+0x113>
  }

  FILE *from, *to;
  from = fopen(argv[1], "rb");
8100057f:	8b 45 0c             	mov    0xc(%ebp),%eax
81000582:	83 c0 04             	add    $0x4,%eax
81000585:	8b 00                	mov    (%eax),%eax
81000587:	83 ec 08             	sub    $0x8,%esp
8100058a:	68 a9 86 00 81       	push   $0x810086a9
8100058f:	50                   	push   %eax
81000590:	e8 41 14 00 00       	call   810019d6 <fopen>
81000595:	83 c4 10             	add    $0x10,%esp
81000598:	89 45 f4             	mov    %eax,-0xc(%ebp)
  to = fopen(argv[2], "wb");
8100059b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100059e:	83 c0 08             	add    $0x8,%eax
810005a1:	8b 00                	mov    (%eax),%eax
810005a3:	83 ec 08             	sub    $0x8,%esp
810005a6:	68 ac 86 00 81       	push   $0x810086ac
810005ab:	50                   	push   %eax
810005ac:	e8 25 14 00 00       	call   810019d6 <fopen>
810005b1:	83 c4 10             	add    $0x10,%esp
810005b4:	89 45 f0             	mov    %eax,-0x10(%ebp)
  if (!from || !to) {
810005b7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810005bb:	74 06                	je     810005c3 <do_cp+0x74>
810005bd:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810005c1:	75 1c                	jne    810005df <do_cp+0x90>
    fprintf(stderr, "open file failed\n");
810005c3:	e8 89 31 00 00       	call   81003751 <__getreent>
810005c8:	8b 40 0c             	mov    0xc(%eax),%eax
810005cb:	50                   	push   %eax
810005cc:	6a 11                	push   $0x11
810005ce:	6a 01                	push   $0x1
810005d0:	68 af 86 00 81       	push   $0x810086af
810005d5:	e8 22 23 00 00       	call   810028fc <fwrite>
810005da:	83 c4 10             	add    $0x10,%esp
    goto  cp_failed;
810005dd:	eb 56                	jmp    81000635 <do_cp+0xe6>
  }

  char *buf = (char *)malloc(255);
810005df:	83 ec 0c             	sub    $0xc,%esp
810005e2:	68 ff 00 00 00       	push   $0xff
810005e7:	e8 ef 32 00 00       	call   810038db <malloc>
810005ec:	83 c4 10             	add    $0x10,%esp
810005ef:	89 45 ec             	mov    %eax,-0x14(%ebp)
  int size;
  while ((size = fread(buf, 1, 255, from)) > 0) {
810005f2:	eb 15                	jmp    81000609 <do_cp+0xba>
    fwrite(buf, 1, 255, to);
810005f4:	ff 75 f0             	push   -0x10(%ebp)
810005f7:	68 ff 00 00 00       	push   $0xff
810005fc:	6a 01                	push   $0x1
810005fe:	ff 75 ec             	push   -0x14(%ebp)
81000601:	e8 f6 22 00 00       	call   810028fc <fwrite>
81000606:	83 c4 10             	add    $0x10,%esp
  while ((size = fread(buf, 1, 255, from)) > 0) {
81000609:	ff 75 f4             	push   -0xc(%ebp)
8100060c:	68 ff 00 00 00       	push   $0xff
81000611:	6a 01                	push   $0x1
81000613:	ff 75 ec             	push   -0x14(%ebp)
81000616:	e8 a4 16 00 00       	call   81001cbf <fread>
8100061b:	83 c4 10             	add    $0x10,%esp
8100061e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000621:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81000625:	7f cd                	jg     810005f4 <do_cp+0xa5>
  }
  free(buf);
81000627:	83 ec 0c             	sub    $0xc,%esp
8100062a:	ff 75 ec             	push   -0x14(%ebp)
8100062d:	e8 c5 32 00 00       	call   810038f7 <free>
81000632:	83 c4 10             	add    $0x10,%esp

cp_failed:
  if (from) {
81000635:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000639:	74 0e                	je     81000649 <do_cp+0xfa>
    fclose(from);
8100063b:	83 ec 0c             	sub    $0xc,%esp
8100063e:	ff 75 f4             	push   -0xc(%ebp)
81000641:	e8 68 0a 00 00       	call   810010ae <fclose>
81000646:	83 c4 10             	add    $0x10,%esp
  }

  if (to) {
81000649:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100064d:	74 0e                	je     8100065d <do_cp+0x10e>
    fclose(to);
8100064f:	83 ec 0c             	sub    $0xc,%esp
81000652:	ff 75 f0             	push   -0x10(%ebp)
81000655:	e8 54 0a 00 00       	call   810010ae <fclose>
8100065a:	83 c4 10             	add    $0x10,%esp
  }

  return 0;
8100065d:	b8 00 00 00 00       	mov    $0x0,%eax

}
81000662:	c9                   	leave  
81000663:	c3                   	ret    

81000664 <do_rm>:
 * 
 * @param argc 
 * @param argv 
 * @return int 
 */
static int do_rm(int argc, const char **argv) {
81000664:	55                   	push   %ebp
81000665:	89 e5                	mov    %esp,%ebp
81000667:	53                   	push   %ebx
81000668:	83 ec 14             	sub    $0x14,%esp
  if (argc < 2) {
8100066b:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
8100066f:	7f 21                	jg     81000692 <do_rm+0x2e>
    fprintf(stderr, "no file input\n");
81000671:	e8 db 30 00 00       	call   81003751 <__getreent>
81000676:	8b 40 0c             	mov    0xc(%eax),%eax
81000679:	50                   	push   %eax
8100067a:	6a 0e                	push   $0xe
8100067c:	6a 01                	push   $0x1
8100067e:	68 c1 86 00 81       	push   $0x810086c1
81000683:	e8 74 22 00 00       	call   810028fc <fwrite>
81000688:	83 c4 10             	add    $0x10,%esp
    return -1;
8100068b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000690:	eb 42                	jmp    810006d4 <do_rm+0x70>
  }

  int err = unlink(argv[1]);
81000692:	8b 45 0c             	mov    0xc(%ebp),%eax
81000695:	83 c0 04             	add    $0x4,%eax
81000698:	8b 00                	mov    (%eax),%eax
8100069a:	83 ec 0c             	sub    $0xc,%esp
8100069d:	50                   	push   %eax
8100069e:	e8 65 08 00 00       	call   81000f08 <unlink>
810006a3:	83 c4 10             	add    $0x10,%esp
810006a6:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (err < 0) {
810006a9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810006ad:	79 22                	jns    810006d1 <do_rm+0x6d>
    fprintf(stderr, "rm file failed: %s\n", argv[1]);
810006af:	8b 45 0c             	mov    0xc(%ebp),%eax
810006b2:	83 c0 04             	add    $0x4,%eax
810006b5:	8b 18                	mov    (%eax),%ebx
810006b7:	e8 95 30 00 00       	call   81003751 <__getreent>
810006bc:	8b 40 0c             	mov    0xc(%eax),%eax
810006bf:	83 ec 04             	sub    $0x4,%esp
810006c2:	53                   	push   %ebx
810006c3:	68 d0 86 00 81       	push   $0x810086d0
810006c8:	50                   	push   %eax
810006c9:	e8 50 13 00 00       	call   81001a1e <fiprintf>
810006ce:	83 c4 10             	add    $0x10,%esp
  }

  return err;
810006d1:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
810006d4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810006d7:	c9                   	leave  
810006d8:	c3                   	ret    

810006d9 <cli_init>:

/**
 * @brief 初始化终端结构
 *
 */
static void cli_init() {
810006d9:	55                   	push   %ebp
810006da:	89 e5                	mov    %esp,%ebp
810006dc:	83 ec 08             	sub    $0x8,%esp
  cli.prompt = prompt;
810006df:	a1 00 8d 00 81       	mov    0x81008d00,%eax
810006e4:	a3 08 9d 00 81       	mov    %eax,0x81009d08
  memset(cli.curr_input, 0, CLI_INPUT_SIZE);
810006e9:	83 ec 04             	sub    $0x4,%esp
810006ec:	68 00 04 00 00       	push   $0x400
810006f1:	6a 00                	push   $0x0
810006f3:	68 00 99 00 81       	push   $0x81009900
810006f8:	e8 03 3e 00 00       	call   81004500 <memset>
810006fd:	83 c4 10             	add    $0x10,%esp
  cli.cmd_start = cmd_list;
81000700:	c7 05 00 9d 00 81 e0 	movl   $0x810087e0,0x81009d00
81000707:	87 00 81 
  cli.cmd_end = cmd_list + sizeof(cmd_list) / sizeof(cmd_list[0]);
8100070a:	b8 40 88 00 81       	mov    $0x81008840,%eax
8100070f:	a3 04 9d 00 81       	mov    %eax,0x81009d04
}
81000714:	90                   	nop
81000715:	c9                   	leave  
81000716:	c3                   	ret    

81000717 <show_prompt>:

/**
 * @brief 打印终端每行固定的提示符
 *
 */
static void show_prompt(void) {
81000717:	55                   	push   %ebp
81000718:	89 e5                	mov    %esp,%ebp
8100071a:	83 ec 08             	sub    $0x8,%esp
  printf("%s", cli.prompt);
8100071d:	a1 08 9d 00 81       	mov    0x81009d08,%eax
81000722:	83 ec 08             	sub    $0x8,%esp
81000725:	50                   	push   %eax
81000726:	68 56 85 00 81       	push   $0x81008556
8100072b:	e8 26 4a 00 00       	call   81005156 <iprintf>
81000730:	83 c4 10             	add    $0x10,%esp
  fflush(stdout);
81000733:	e8 19 30 00 00       	call   81003751 <__getreent>
81000738:	8b 40 08             	mov    0x8(%eax),%eax
8100073b:	83 ec 0c             	sub    $0xc,%esp
8100073e:	50                   	push   %eax
8100073f:	e8 05 0c 00 00       	call   81001349 <fflush>
81000744:	83 c4 10             	add    $0x10,%esp
}
81000747:	90                   	nop
81000748:	c9                   	leave  
81000749:	c3                   	ret    

8100074a <find_builtin>:
 * @brief 根据命令程序名称查找并返回对应的命令结构
 *
 * @param name
 * @return const cli_cmd_t*
 */
static const cli_cmd_t *find_builtin(const char *name) {
8100074a:	55                   	push   %ebp
8100074b:	89 e5                	mov    %esp,%ebp
8100074d:	83 ec 18             	sub    $0x18,%esp
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
81000750:	a1 00 9d 00 81       	mov    0x81009d00,%eax
81000755:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000758:	eb 22                	jmp    8100077c <find_builtin+0x32>
    if (strcmp(cmd->name, name) != 0) {
8100075a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100075d:	8b 00                	mov    (%eax),%eax
8100075f:	83 ec 08             	sub    $0x8,%esp
81000762:	ff 75 08             	push   0x8(%ebp)
81000765:	50                   	push   %eax
81000766:	e8 f1 53 00 00       	call   81005b5c <strcmp>
8100076b:	83 c4 10             	add    $0x10,%esp
8100076e:	85 c0                	test   %eax,%eax
81000770:	75 05                	jne    81000777 <find_builtin+0x2d>
      continue;
    }
    return cmd;
81000772:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000775:	eb 14                	jmp    8100078b <find_builtin+0x41>
      continue;
81000777:	90                   	nop
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
81000778:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
8100077c:	a1 04 9d 00 81       	mov    0x81009d04,%eax
81000781:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000784:	72 d4                	jb     8100075a <find_builtin+0x10>
  }

  return (const cli_cmd_t *)0;
81000786:	b8 00 00 00 00       	mov    $0x0,%eax
}
8100078b:	c9                   	leave  
8100078c:	c3                   	ret    

8100078d <run_builtin>:
 *
 * @param cmd
 * @param argc
 * @param argv
 */
static void run_builtin(const cli_cmd_t *cmd, int argc, const char **argv) {
8100078d:	55                   	push   %ebp
8100078e:	89 e5                	mov    %esp,%ebp
81000790:	53                   	push   %ebx
81000791:	83 ec 14             	sub    $0x14,%esp
  int ret = cmd->do_func(argc, argv);
81000794:	8b 45 08             	mov    0x8(%ebp),%eax
81000797:	8b 40 08             	mov    0x8(%eax),%eax
8100079a:	83 ec 08             	sub    $0x8,%esp
8100079d:	ff 75 10             	push   0x10(%ebp)
810007a0:	ff 75 0c             	push   0xc(%ebp)
810007a3:	ff d0                	call   *%eax
810007a5:	83 c4 10             	add    $0x10,%esp
810007a8:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (ret < 0) {
810007ab:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810007af:	79 1f                	jns    810007d0 <run_builtin+0x43>
    fprintf(stderr, ESC_COLOR_ERROR "%s error: %d\n" ESC_COLOR_DEFAULT,
            cmd->name, ret);
810007b1:	8b 45 08             	mov    0x8(%ebp),%eax
810007b4:	8b 18                	mov    (%eax),%ebx
    fprintf(stderr, ESC_COLOR_ERROR "%s error: %d\n" ESC_COLOR_DEFAULT,
810007b6:	e8 96 2f 00 00       	call   81003751 <__getreent>
810007bb:	8b 40 0c             	mov    0xc(%eax),%eax
810007be:	ff 75 f4             	push   -0xc(%ebp)
810007c1:	53                   	push   %ebx
810007c2:	68 40 88 00 81       	push   $0x81008840
810007c7:	50                   	push   %eax
810007c8:	e8 51 12 00 00       	call   81001a1e <fiprintf>
810007cd:	83 c4 10             	add    $0x10,%esp
  }
}
810007d0:	90                   	nop
810007d1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810007d4:	c9                   	leave  
810007d5:	c3                   	ret    

810007d6 <run_exec_file>:
 *
 * @param path 程序路径
 * @param argc 参数个数
 * @param argv 参数列表
 */
static void run_exec_file(const char *path, int argc, const char **argv) {
810007d6:	55                   	push   %ebp
810007d7:	89 e5                	mov    %esp,%ebp
810007d9:	53                   	push   %ebx
810007da:	83 ec 14             	sub    $0x14,%esp
  // 1.创建子进程
  int pid = fork();
810007dd:	e8 11 04 00 00       	call   81000bf3 <fork>
810007e2:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (pid < 0) {
810007e5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810007e9:	79 21                	jns    8100080c <run_exec_file+0x36>
    fprintf(stderr, ESC_COLOR_ERROR "fork failed: %s" ESC_COLOR_DEFAULT, path);
810007eb:	e8 61 2f 00 00       	call   81003751 <__getreent>
810007f0:	8b 40 0c             	mov    0xc(%eax),%eax
810007f3:	83 ec 04             	sub    $0x4,%esp
810007f6:	ff 75 08             	push   0x8(%ebp)
810007f9:	68 58 88 00 81       	push   $0x81008858
810007fe:	50                   	push   %eax
810007ff:	e8 1a 12 00 00       	call   81001a1e <fiprintf>
81000804:	83 c4 10             	add    $0x10,%esp
      fprintf(stderr, ESC_COLOR_ERROR"process %s exception result: %d, pid=%d\n"ESC_COLOR_DEFAULT, path, status, pid);
    } else {
      fprintf(stderr, "process %s exit result: %d, pid=%d\n", path, status, pid);
    }
  }
}
81000807:	e9 a9 00 00 00       	jmp    810008b5 <run_exec_file+0xdf>
  } else if (pid == 0) {
8100080c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000810:	75 42                	jne    81000854 <run_exec_file+0x7e>
    int err = execve(path, (char * const *)argv, (char *const *) 0);
81000812:	83 ec 04             	sub    $0x4,%esp
81000815:	6a 00                	push   $0x0
81000817:	ff 75 10             	push   0x10(%ebp)
8100081a:	ff 75 08             	push   0x8(%ebp)
8100081d:	e8 ec 03 00 00       	call   81000c0e <execve>
81000822:	83 c4 10             	add    $0x10,%esp
81000825:	89 45 ec             	mov    %eax,-0x14(%ebp)
    if (err < 0) {
81000828:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100082c:	79 1c                	jns    8100084a <run_exec_file+0x74>
      fprintf(stderr, "exec failed: %s\n", path);
8100082e:	e8 1e 2f 00 00       	call   81003751 <__getreent>
81000833:	8b 40 0c             	mov    0xc(%eax),%eax
81000836:	83 ec 04             	sub    $0x4,%esp
81000839:	ff 75 08             	push   0x8(%ebp)
8100083c:	68 72 88 00 81       	push   $0x81008872
81000841:	50                   	push   %eax
81000842:	e8 d7 11 00 00       	call   81001a1e <fiprintf>
81000847:	83 c4 10             	add    $0x10,%esp
    exit(-1);
8100084a:	83 ec 0c             	sub    $0xc,%esp
8100084d:	6a ff                	push   $0xffffffff
8100084f:	e8 0f 07 00 00       	call   81000f63 <exit>
    int cpid = wait(&status);
81000854:	83 ec 0c             	sub    $0xc,%esp
81000857:	8d 45 e8             	lea    -0x18(%ebp),%eax
8100085a:	50                   	push   %eax
8100085b:	e8 71 05 00 00       	call   81000dd1 <wait>
81000860:	83 c4 10             	add    $0x10,%esp
81000863:	89 45 f0             	mov    %eax,-0x10(%ebp)
    if (status != 0) {
81000866:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000869:	85 c0                	test   %eax,%eax
8100086b:	74 25                	je     81000892 <run_exec_file+0xbc>
      fprintf(stderr, ESC_COLOR_ERROR"process %s exception result: %d, pid=%d\n"ESC_COLOR_DEFAULT, path, status, pid);
8100086d:	8b 5d e8             	mov    -0x18(%ebp),%ebx
81000870:	e8 dc 2e 00 00       	call   81003751 <__getreent>
81000875:	8b 40 0c             	mov    0xc(%eax),%eax
81000878:	83 ec 0c             	sub    $0xc,%esp
8100087b:	ff 75 f4             	push   -0xc(%ebp)
8100087e:	53                   	push   %ebx
8100087f:	ff 75 08             	push   0x8(%ebp)
81000882:	68 84 88 00 81       	push   $0x81008884
81000887:	50                   	push   %eax
81000888:	e8 91 11 00 00       	call   81001a1e <fiprintf>
8100088d:	83 c4 20             	add    $0x20,%esp
}
81000890:	eb 23                	jmp    810008b5 <run_exec_file+0xdf>
      fprintf(stderr, "process %s exit result: %d, pid=%d\n", path, status, pid);
81000892:	8b 5d e8             	mov    -0x18(%ebp),%ebx
81000895:	e8 b7 2e 00 00       	call   81003751 <__getreent>
8100089a:	8b 40 0c             	mov    0xc(%eax),%eax
8100089d:	83 ec 0c             	sub    $0xc,%esp
810008a0:	ff 75 f4             	push   -0xc(%ebp)
810008a3:	53                   	push   %ebx
810008a4:	ff 75 08             	push   0x8(%ebp)
810008a7:	68 b8 88 00 81       	push   $0x810088b8
810008ac:	50                   	push   %eax
810008ad:	e8 6c 11 00 00       	call   81001a1e <fiprintf>
810008b2:	83 c4 20             	add    $0x20,%esp
}
810008b5:	90                   	nop
810008b6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810008b9:	c9                   	leave  
810008ba:	c3                   	ret    

810008bb <find_exec_path>:
 * @brief 根据文件名判断文件是否存在
 * 
 * @param file_name 
 * @return const char* 
 */
static const char* find_exec_path(const char *file_name) {
810008bb:	55                   	push   %ebp
810008bc:	89 e5                	mov    %esp,%ebp
810008be:	83 ec 18             	sub    $0x18,%esp
    static char path[255];

    int fd = open(file_name, 0);
810008c1:	83 ec 08             	sub    $0x8,%esp
810008c4:	6a 00                	push   $0x0
810008c6:	ff 75 08             	push   0x8(%ebp)
810008c9:	e8 88 03 00 00       	call   81000c56 <open>
810008ce:	83 c4 10             	add    $0x10,%esp
810008d1:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (fd < 0) {
810008d4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810008d8:	79 4f                	jns    81000929 <find_exec_path+0x6e>
        sprintf(path, "%s.elf", file_name);
810008da:	83 ec 04             	sub    $0x4,%esp
810008dd:	ff 75 08             	push   0x8(%ebp)
810008e0:	68 dc 88 00 81       	push   $0x810088dc
810008e5:	68 20 9d 00 81       	push   $0x81009d20
810008ea:	e8 f4 4f 00 00       	call   810058e3 <siprintf>
810008ef:	83 c4 10             	add    $0x10,%esp
        fd = open(path, 0);
810008f2:	83 ec 08             	sub    $0x8,%esp
810008f5:	6a 00                	push   $0x0
810008f7:	68 20 9d 00 81       	push   $0x81009d20
810008fc:	e8 55 03 00 00       	call   81000c56 <open>
81000901:	83 c4 10             	add    $0x10,%esp
81000904:	89 45 f4             	mov    %eax,-0xc(%ebp)
        if (fd < 0) {
81000907:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100090b:	79 07                	jns    81000914 <find_exec_path+0x59>
            return (const char * )0;
8100090d:	b8 00 00 00 00       	mov    $0x0,%eax
81000912:	eb 26                	jmp    8100093a <find_exec_path+0x7f>
        }
        close(fd);
81000914:	83 ec 0c             	sub    $0xc,%esp
81000917:	ff 75 f4             	push   -0xc(%ebp)
8100091a:	e8 b8 03 00 00       	call   81000cd7 <close>
8100091f:	83 c4 10             	add    $0x10,%esp
        return path;
81000922:	b8 20 9d 00 81       	mov    $0x81009d20,%eax
81000927:	eb 11                	jmp    8100093a <find_exec_path+0x7f>
    } else {
        close(fd);
81000929:	83 ec 0c             	sub    $0xc,%esp
8100092c:	ff 75 f4             	push   -0xc(%ebp)
8100092f:	e8 a3 03 00 00       	call   81000cd7 <close>
81000934:	83 c4 10             	add    $0x10,%esp
        return file_name;
81000937:	8b 45 08             	mov    0x8(%ebp),%eax
    }
}
8100093a:	c9                   	leave  
8100093b:	c3                   	ret    

8100093c <main>:

int main(int argc, char **argv) {
8100093c:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000940:	83 e4 f0             	and    $0xfffffff0,%esp
81000943:	ff 71 fc             	push   -0x4(%ecx)
81000946:	55                   	push   %ebp
81000947:	89 e5                	mov    %esp,%ebp
81000949:	51                   	push   %ecx
8100094a:	83 ec 54             	sub    $0x54,%esp
8100094d:	89 c8                	mov    %ecx,%eax
  // 1.打开shell对应的tty设备绑定为stdin
  open(argv[0], O_RDWR);
8100094f:	8b 40 04             	mov    0x4(%eax),%eax
81000952:	8b 00                	mov    (%eax),%eax
81000954:	83 ec 08             	sub    $0x8,%esp
81000957:	6a 02                	push   $0x2
81000959:	50                   	push   %eax
8100095a:	e8 f7 02 00 00       	call   81000c56 <open>
8100095f:	83 c4 10             	add    $0x10,%esp
  // 2.复用该0号描述符的文件，打开shell的stdout和stderr
  dup(0);
81000962:	83 ec 0c             	sub    $0xc,%esp
81000965:	6a 00                	push   $0x0
81000967:	e8 22 04 00 00       	call   81000d8e <dup>
8100096c:	83 c4 10             	add    $0x10,%esp
  dup(0);
8100096f:	83 ec 0c             	sub    $0xc,%esp
81000972:	6a 00                	push   $0x0
81000974:	e8 15 04 00 00       	call   81000d8e <dup>
81000979:	83 c4 10             	add    $0x10,%esp

  // 3.初始化终端结构
  cli_init();
8100097c:	e8 58 fd ff ff       	call   810006d9 <cli_init>

  // 4.循环读取命令行输入并执行指令
  for (;;) {
    show_prompt();
81000981:	e8 91 fd ff ff       	call   81000717 <show_prompt>
    // 4.1获取命令行输入并清空末尾的"\r\n"
    char *str = fgets(cli.curr_input, CLI_INPUT_SIZE, stdin);
81000986:	e8 c6 2d 00 00       	call   81003751 <__getreent>
8100098b:	8b 40 04             	mov    0x4(%eax),%eax
8100098e:	83 ec 04             	sub    $0x4,%esp
81000991:	50                   	push   %eax
81000992:	68 00 04 00 00       	push   $0x400
81000997:	68 00 99 00 81       	push   $0x81009900
8100099c:	e8 3f 0b 00 00       	call   810014e0 <fgets>
810009a1:	83 c4 10             	add    $0x10,%esp
810009a4:	89 45 ec             	mov    %eax,-0x14(%ebp)
    if (!str) {
810009a7:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810009ab:	0f 84 2f 01 00 00    	je     81000ae0 <main+0x1a4>
      continue;
    }
    char *cr = strchr(cli.curr_input, '\n');
810009b1:	83 ec 08             	sub    $0x8,%esp
810009b4:	6a 0a                	push   $0xa
810009b6:	68 00 99 00 81       	push   $0x81009900
810009bb:	e8 a0 50 00 00       	call   81005a60 <strchr>
810009c0:	83 c4 10             	add    $0x10,%esp
810009c3:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
810009c6:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810009ca:	74 06                	je     810009d2 <main+0x96>
      *cr = '\0';
810009cc:	8b 45 e8             	mov    -0x18(%ebp),%eax
810009cf:	c6 00 00             	movb   $0x0,(%eax)
    }
    cr = strchr(cli.curr_input, '\r');
810009d2:	83 ec 08             	sub    $0x8,%esp
810009d5:	6a 0d                	push   $0xd
810009d7:	68 00 99 00 81       	push   $0x81009900
810009dc:	e8 7f 50 00 00       	call   81005a60 <strchr>
810009e1:	83 c4 10             	add    $0x10,%esp
810009e4:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
810009e7:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810009eb:	74 06                	je     810009f3 <main+0xb7>
      *cr = '\0';
810009ed:	8b 45 e8             	mov    -0x18(%ebp),%eax
810009f0:	c6 00 00             	movb   $0x0,(%eax)
    }

    // 4.2解析命令行输入的程序和参数
    int argc = 0;
810009f3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    const char *argv[CLI_MAX_ARG_COUNT];
    memset(argv, 0, sizeof(argv));
810009fa:	83 ec 04             	sub    $0x4,%esp
810009fd:	6a 28                	push   $0x28
810009ff:	6a 00                	push   $0x0
81000a01:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000a04:	50                   	push   %eax
81000a05:	e8 f6 3a 00 00       	call   81004500 <memset>
81000a0a:	83 c4 10             	add    $0x10,%esp
    const char *split = " ";
81000a0d:	c7 45 e4 e3 88 00 81 	movl   $0x810088e3,-0x1c(%ebp)
    char *token =
        strtok(cli.curr_input,
81000a14:	83 ec 08             	sub    $0x8,%esp
81000a17:	ff 75 e4             	push   -0x1c(%ebp)
81000a1a:	68 00 99 00 81       	push   $0x81009900
81000a1f:	e8 65 52 00 00       	call   81005c89 <strtok>
81000a24:	83 c4 10             	add    $0x10,%esp
81000a27:	89 45 f0             	mov    %eax,-0x10(%ebp)
               split);  // 将字符串中的第一个split字符换成'\0'并放回起始索引
    while (token) {
81000a2a:	eb 23                	jmp    81000a4f <main+0x113>
      argv[argc++] = token;
81000a2c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000a2f:	8d 50 01             	lea    0x1(%eax),%edx
81000a32:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000a35:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000a38:	89 54 85 b4          	mov    %edx,-0x4c(%ebp,%eax,4)
      token = strtok(NULL, split);  // 填空默认从之前找到的位置的下一个位置开始
81000a3c:	83 ec 08             	sub    $0x8,%esp
81000a3f:	ff 75 e4             	push   -0x1c(%ebp)
81000a42:	6a 00                	push   $0x0
81000a44:	e8 40 52 00 00       	call   81005c89 <strtok>
81000a49:	83 c4 10             	add    $0x10,%esp
81000a4c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    while (token) {
81000a4f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000a53:	75 d7                	jne    81000a2c <main+0xf0>
    }

    if (argc == 0) {
81000a55:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000a59:	0f 84 87 00 00 00    	je     81000ae6 <main+0x1aa>
      continue;
    }

    // 4.3 获取可执行的命令结构，并执行
    const cli_cmd_t *cmd = find_builtin(argv[0]);
81000a5f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81000a62:	83 ec 0c             	sub    $0xc,%esp
81000a65:	50                   	push   %eax
81000a66:	e8 df fc ff ff       	call   8100074a <find_builtin>
81000a6b:	83 c4 10             	add    $0x10,%esp
81000a6e:	89 45 e0             	mov    %eax,-0x20(%ebp)
    if (cmd) {
81000a71:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000a75:	74 17                	je     81000a8e <main+0x152>
      run_builtin(cmd, argc, argv);
81000a77:	83 ec 04             	sub    $0x4,%esp
81000a7a:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000a7d:	50                   	push   %eax
81000a7e:	ff 75 f4             	push   -0xc(%ebp)
81000a81:	ff 75 e0             	push   -0x20(%ebp)
81000a84:	e8 04 fd ff ff       	call   8100078d <run_builtin>
81000a89:	83 c4 10             	add    $0x10,%esp
      continue;
81000a8c:	eb 59                	jmp    81000ae7 <main+0x1ab>
    }



    // 5.获取到的为磁盘上的可执行程序，需要进行加载运行
    const char *path = find_exec_path(argv[0]);
81000a8e:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81000a91:	83 ec 0c             	sub    $0xc,%esp
81000a94:	50                   	push   %eax
81000a95:	e8 21 fe ff ff       	call   810008bb <find_exec_path>
81000a9a:	83 c4 10             	add    $0x10,%esp
81000a9d:	89 45 dc             	mov    %eax,-0x24(%ebp)
    if (path) {
81000aa0:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000aa4:	74 17                	je     81000abd <main+0x181>
      run_exec_file(path, argc, argv);
81000aa6:	83 ec 04             	sub    $0x4,%esp
81000aa9:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000aac:	50                   	push   %eax
81000aad:	ff 75 f4             	push   -0xc(%ebp)
81000ab0:	ff 75 dc             	push   -0x24(%ebp)
81000ab3:	e8 1e fd ff ff       	call   810007d6 <run_exec_file>
81000ab8:	83 c4 10             	add    $0x10,%esp
      continue;
81000abb:	eb 2a                	jmp    81000ae7 <main+0x1ab>
    } else {

      fprintf(stderr, ESC_COLOR_ERROR "Unknown command: %s\n" ESC_COLOR_DEFAULT,
81000abd:	e8 8f 2c 00 00       	call   81003751 <__getreent>
81000ac2:	8b 40 0c             	mov    0xc(%eax),%eax
81000ac5:	83 ec 04             	sub    $0x4,%esp
81000ac8:	68 00 99 00 81       	push   $0x81009900
81000acd:	68 e8 88 00 81       	push   $0x810088e8
81000ad2:	50                   	push   %eax
81000ad3:	e8 46 0f 00 00       	call   81001a1e <fiprintf>
81000ad8:	83 c4 10             	add    $0x10,%esp
81000adb:	e9 a1 fe ff ff       	jmp    81000981 <main+0x45>
      continue;
81000ae0:	90                   	nop
81000ae1:	e9 9b fe ff ff       	jmp    81000981 <main+0x45>
      continue;
81000ae6:	90                   	nop
  for (;;) {
81000ae7:	e9 95 fe ff ff       	jmp    81000981 <main+0x45>

81000aec <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
81000aec:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
81000aef:	8e d8                	mov    %eax,%ds
	mov %ax, %es
81000af1:	8e c0                	mov    %eax,%es
	mov %ax, %fs
81000af3:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
81000af5:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
81000af7:	e9 00 00 00 00       	jmp    81000afc <cstart>

81000afc <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
81000afc:	55                   	push   %ebp
81000afd:	89 e5                	mov    %esp,%ebp
81000aff:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
81000b02:	c7 45 f4 00 97 00 81 	movl   $0x81009700,-0xc(%ebp)
    while (start < __bss_end__) {
81000b09:	eb 0c                	jmp    81000b17 <cstart+0x1b>
        *(start++) = 0;
81000b0b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000b0e:	8d 50 01             	lea    0x1(%eax),%edx
81000b11:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000b14:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
81000b17:	81 7d f4 a0 9e 00 81 	cmpl   $0x81009ea0,-0xc(%ebp)
81000b1e:	72 eb                	jb     81000b0b <cstart+0xf>
    }
    
    exit(main(argc, argv));
81000b20:	83 ec 08             	sub    $0x8,%esp
81000b23:	ff 75 0c             	push   0xc(%ebp)
81000b26:	ff 75 08             	push   0x8(%ebp)
81000b29:	e8 0e fe ff ff       	call   8100093c <main>
81000b2e:	83 c4 10             	add    $0x10,%esp
81000b31:	83 ec 0c             	sub    $0xc,%esp
81000b34:	50                   	push   %eax
81000b35:	e8 29 04 00 00       	call   81000f63 <exit>

81000b3a <sys_call>:
#include    "os_cfg.h"
#include    "lib_syscall.h"
#include    <stdlib.h>


int sys_call(syscall_args_t *args) {
81000b3a:	55                   	push   %ebp
81000b3b:	89 e5                	mov    %esp,%ebp
81000b3d:	57                   	push   %edi
81000b3e:	56                   	push   %esi
81000b3f:	53                   	push   %ebx
81000b40:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
81000b43:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81000b4a:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
81000b51:	8b 45 08             	mov    0x8(%ebp),%eax
81000b54:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
81000b57:	8b 55 08             	mov    0x8(%ebp),%edx
81000b5a:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
81000b5d:	8b 4d 08             	mov    0x8(%ebp),%ecx
81000b60:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
81000b63:	8b 5d 08             	mov    0x8(%ebp),%ebx
81000b66:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
81000b69:	8b 75 08             	mov    0x8(%ebp),%esi
81000b6c:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
81000b6e:	8d 7d e8             	lea    -0x18(%ebp),%edi
81000b71:	50                   	push   %eax
81000b72:	52                   	push   %edx
81000b73:	51                   	push   %ecx
81000b74:	53                   	push   %ebx
81000b75:	56                   	push   %esi
81000b76:	ff 1f                	lcall  *(%edi)
81000b78:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
81000b7b:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
81000b7e:	83 c4 10             	add    $0x10,%esp
81000b81:	5b                   	pop    %ebx
81000b82:	5e                   	pop    %esi
81000b83:	5f                   	pop    %edi
81000b84:	5d                   	pop    %ebp
81000b85:	c3                   	ret    

81000b86 <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
81000b86:	55                   	push   %ebp
81000b87:	89 e5                	mov    %esp,%ebp
81000b89:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
81000b8c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000b90:	7e 1b                	jle    81000bad <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
81000b92:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
81000b99:	8b 45 08             	mov    0x8(%ebp),%eax
81000b9c:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
81000b9f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000ba2:	50                   	push   %eax
81000ba3:	e8 92 ff ff ff       	call   81000b3a <sys_call>
81000ba8:	83 c4 04             	add    $0x4,%esp
81000bab:	eb 01                	jmp    81000bae <msleep+0x28>
    if (ms <= 0) return;
81000bad:	90                   	nop

}
81000bae:	c9                   	leave  
81000baf:	c3                   	ret    

81000bb0 <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
81000bb0:	55                   	push   %ebp
81000bb1:	89 e5                	mov    %esp,%ebp
81000bb3:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000bb6:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
81000bbd:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000bc0:	50                   	push   %eax
81000bc1:	e8 74 ff ff ff       	call   81000b3a <sys_call>
81000bc6:	83 c4 04             	add    $0x4,%esp
}
81000bc9:	c9                   	leave  
81000bca:	c3                   	ret    

81000bcb <print_msg>:

void print_msg(const char *fmt, int arg) {
81000bcb:	55                   	push   %ebp
81000bcc:	89 e5                	mov    %esp,%ebp
81000bce:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
81000bd1:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
81000bd8:	8b 45 08             	mov    0x8(%ebp),%eax
81000bdb:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
81000bde:	8b 45 0c             	mov    0xc(%ebp),%eax
81000be1:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
81000be4:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000be7:	50                   	push   %eax
81000be8:	e8 4d ff ff ff       	call   81000b3a <sys_call>
81000bed:	83 c4 04             	add    $0x4,%esp
}
81000bf0:	90                   	nop
81000bf1:	c9                   	leave  
81000bf2:	c3                   	ret    

81000bf3 <fork>:

int fork (void) {
81000bf3:	55                   	push   %ebp
81000bf4:	89 e5                	mov    %esp,%ebp
81000bf6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
81000bf9:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
81000c00:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c03:	50                   	push   %eax
81000c04:	e8 31 ff ff ff       	call   81000b3a <sys_call>
81000c09:	83 c4 04             	add    $0x4,%esp
}
81000c0c:	c9                   	leave  
81000c0d:	c3                   	ret    

81000c0e <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
81000c0e:	55                   	push   %ebp
81000c0f:	89 e5                	mov    %esp,%ebp
81000c11:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
81000c14:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
81000c1b:	8b 45 08             	mov    0x8(%ebp),%eax
81000c1e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
81000c21:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c24:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
81000c27:	8b 45 10             	mov    0x10(%ebp),%eax
81000c2a:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
81000c2d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c30:	50                   	push   %eax
81000c31:	e8 04 ff ff ff       	call   81000b3a <sys_call>
81000c36:	83 c4 04             	add    $0x4,%esp
}
81000c39:	c9                   	leave  
81000c3a:	c3                   	ret    

81000c3b <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
81000c3b:	55                   	push   %ebp
81000c3c:	89 e5                	mov    %esp,%ebp
81000c3e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
81000c41:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
81000c48:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c4b:	50                   	push   %eax
81000c4c:	e8 e9 fe ff ff       	call   81000b3a <sys_call>
81000c51:	83 c4 04             	add    $0x4,%esp
}
81000c54:	c9                   	leave  
81000c55:	c3                   	ret    

81000c56 <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
81000c56:	55                   	push   %ebp
81000c57:	89 e5                	mov    %esp,%ebp
81000c59:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
81000c5c:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
81000c63:	8b 45 08             	mov    0x8(%ebp),%eax
81000c66:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
81000c69:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c6c:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000c6f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c72:	50                   	push   %eax
81000c73:	e8 c2 fe ff ff       	call   81000b3a <sys_call>
81000c78:	83 c4 04             	add    $0x4,%esp
}
81000c7b:	c9                   	leave  
81000c7c:	c3                   	ret    

81000c7d <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
81000c7d:	55                   	push   %ebp
81000c7e:	89 e5                	mov    %esp,%ebp
81000c80:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
81000c83:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
81000c8a:	8b 45 08             	mov    0x8(%ebp),%eax
81000c8d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000c90:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c93:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000c96:	8b 45 10             	mov    0x10(%ebp),%eax
81000c99:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000c9c:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c9f:	50                   	push   %eax
81000ca0:	e8 95 fe ff ff       	call   81000b3a <sys_call>
81000ca5:	83 c4 04             	add    $0x4,%esp
}
81000ca8:	c9                   	leave  
81000ca9:	c3                   	ret    

81000caa <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
81000caa:	55                   	push   %ebp
81000cab:	89 e5                	mov    %esp,%ebp
81000cad:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
81000cb0:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
81000cb7:	8b 45 08             	mov    0x8(%ebp),%eax
81000cba:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000cbd:	8b 45 0c             	mov    0xc(%ebp),%eax
81000cc0:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000cc3:	8b 45 10             	mov    0x10(%ebp),%eax
81000cc6:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000cc9:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000ccc:	50                   	push   %eax
81000ccd:	e8 68 fe ff ff       	call   81000b3a <sys_call>
81000cd2:	83 c4 04             	add    $0x4,%esp
}
81000cd5:	c9                   	leave  
81000cd6:	c3                   	ret    

81000cd7 <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
81000cd7:	55                   	push   %ebp
81000cd8:	89 e5                	mov    %esp,%ebp
81000cda:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
81000cdd:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
81000ce4:	8b 45 08             	mov    0x8(%ebp),%eax
81000ce7:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000cea:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000ced:	50                   	push   %eax
81000cee:	e8 47 fe ff ff       	call   81000b3a <sys_call>
81000cf3:	83 c4 04             	add    $0x4,%esp
}
81000cf6:	c9                   	leave  
81000cf7:	c3                   	ret    

81000cf8 <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
81000cf8:	55                   	push   %ebp
81000cf9:	89 e5                	mov    %esp,%ebp
81000cfb:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
81000cfe:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
81000d05:	8b 45 08             	mov    0x8(%ebp),%eax
81000d08:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
81000d0b:	8b 45 0c             	mov    0xc(%ebp),%eax
81000d0e:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
81000d11:	8b 45 10             	mov    0x10(%ebp),%eax
81000d14:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000d17:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d1a:	50                   	push   %eax
81000d1b:	e8 1a fe ff ff       	call   81000b3a <sys_call>
81000d20:	83 c4 04             	add    $0x4,%esp
}
81000d23:	c9                   	leave  
81000d24:	c3                   	ret    

81000d25 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
81000d25:	55                   	push   %ebp
81000d26:	89 e5                	mov    %esp,%ebp
81000d28:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
81000d2b:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
81000d32:	8b 45 08             	mov    0x8(%ebp),%eax
81000d35:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000d38:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d3b:	50                   	push   %eax
81000d3c:	e8 f9 fd ff ff       	call   81000b3a <sys_call>
81000d41:	83 c4 04             	add    $0x4,%esp
}
81000d44:	c9                   	leave  
81000d45:	c3                   	ret    

81000d46 <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
81000d46:	55                   	push   %ebp
81000d47:	89 e5                	mov    %esp,%ebp
81000d49:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
81000d4c:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
81000d53:	8b 45 08             	mov    0x8(%ebp),%eax
81000d56:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
81000d59:	8b 45 0c             	mov    0xc(%ebp),%eax
81000d5c:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000d5f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d62:	50                   	push   %eax
81000d63:	e8 d2 fd ff ff       	call   81000b3a <sys_call>
81000d68:	83 c4 04             	add    $0x4,%esp
}
81000d6b:	c9                   	leave  
81000d6c:	c3                   	ret    

81000d6d <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
81000d6d:	55                   	push   %ebp
81000d6e:	89 e5                	mov    %esp,%ebp
81000d70:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
81000d73:	c7 45 ec 3f 00 00 00 	movl   $0x3f,-0x14(%ebp)
    args.arg0 = (int)incr;
81000d7a:	8b 45 08             	mov    0x8(%ebp),%eax
81000d7d:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
81000d80:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d83:	50                   	push   %eax
81000d84:	e8 b1 fd ff ff       	call   81000b3a <sys_call>
81000d89:	83 c4 04             	add    $0x4,%esp
}
81000d8c:	c9                   	leave  
81000d8d:	c3                   	ret    

81000d8e <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
81000d8e:	55                   	push   %ebp
81000d8f:	89 e5                	mov    %esp,%ebp
81000d91:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
81000d94:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = file;
81000d9b:	8b 45 08             	mov    0x8(%ebp),%eax
81000d9e:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000da1:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000da4:	50                   	push   %eax
81000da5:	e8 90 fd ff ff       	call   81000b3a <sys_call>
81000daa:	83 c4 04             	add    $0x4,%esp
}
81000dad:	c9                   	leave  
81000dae:	c3                   	ret    

81000daf <_exit>:
/**
 * @brief 进程退出的系统调用
 * 
 * @param status 
 */
void _exit(int status) {
81000daf:	55                   	push   %ebp
81000db0:	89 e5                	mov    %esp,%ebp
81000db2:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
81000db5:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = status;
81000dbc:	8b 45 08             	mov    0x8(%ebp),%eax
81000dbf:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    sys_call(&args);
81000dc2:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000dc5:	50                   	push   %eax
81000dc6:	e8 6f fd ff ff       	call   81000b3a <sys_call>
81000dcb:	83 c4 04             	add    $0x4,%esp
}
81000dce:	90                   	nop
81000dcf:	c9                   	leave  
81000dd0:	c3                   	ret    

81000dd1 <wait>:
 * @brief 回收进程资源
 * 
 * @param status 
 * @return int 
 */
int wait(int *status) {
81000dd1:	55                   	push   %ebp
81000dd2:	89 e5                	mov    %esp,%ebp
81000dd4:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
81000dd7:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
81000dde:	8b 45 08             	mov    0x8(%ebp),%eax
81000de1:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    return sys_call(&args);
81000de4:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000de7:	50                   	push   %eax
81000de8:	e8 4d fd ff ff       	call   81000b3a <sys_call>
81000ded:	83 c4 04             	add    $0x4,%esp
}
81000df0:	c9                   	leave  
81000df1:	c3                   	ret    

81000df2 <opendir>:
 * @brief 打开一个目录
 * 
 * @param path 
 * @return DIR* 
 */
DIR *opendir(const char *path) {
81000df2:	55                   	push   %ebp
81000df3:	89 e5                	mov    %esp,%ebp
81000df5:	83 ec 28             	sub    $0x28,%esp
    DIR *dir = (DIR*)malloc(sizeof(DIR));
81000df8:	83 ec 0c             	sub    $0xc,%esp
81000dfb:	6a 20                	push   $0x20
81000dfd:	e8 d9 2a 00 00       	call   810038db <malloc>
81000e02:	83 c4 10             	add    $0x10,%esp
81000e05:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR*)0) {
81000e08:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000e0c:	75 07                	jne    81000e15 <opendir+0x23>
        return (DIR*)0;
81000e0e:	b8 00 00 00 00       	mov    $0x0,%eax
81000e13:	eb 43                	jmp    81000e58 <opendir+0x66>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
81000e15:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)path;
81000e1c:	8b 45 08             	mov    0x8(%ebp),%eax
81000e1f:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
81000e22:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e25:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
81000e28:	83 ec 0c             	sub    $0xc,%esp
81000e2b:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000e2e:	50                   	push   %eax
81000e2f:	e8 06 fd ff ff       	call   81000b3a <sys_call>
81000e34:	83 c4 10             	add    $0x10,%esp
81000e37:	89 45 f0             	mov    %eax,-0x10(%ebp)

    if (err < 0) {
81000e3a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000e3e:	79 15                	jns    81000e55 <opendir+0x63>
        free(dir);
81000e40:	83 ec 0c             	sub    $0xc,%esp
81000e43:	ff 75 f4             	push   -0xc(%ebp)
81000e46:	e8 ac 2a 00 00       	call   810038f7 <free>
81000e4b:	83 c4 10             	add    $0x10,%esp
        return (DIR*)0;
81000e4e:	b8 00 00 00 00       	mov    $0x0,%eax
81000e53:	eb 03                	jmp    81000e58 <opendir+0x66>
    }

    return dir;    
81000e55:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000e58:	c9                   	leave  
81000e59:	c3                   	ret    

81000e5a <readdir>:
 * @brief 读取目录信息得到目录项表
 * 
 * @param dir 
 * @return struct dirent* 
 */
struct dirent *readdir(DIR *dir) {
81000e5a:	55                   	push   %ebp
81000e5b:	89 e5                	mov    %esp,%ebp
81000e5d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_readdir;
81000e60:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
81000e67:	8b 45 08             	mov    0x8(%ebp),%eax
81000e6a:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&(dir->dirent);
81000e6d:	8b 45 08             	mov    0x8(%ebp),%eax
81000e70:	83 c0 04             	add    $0x4,%eax
81000e73:	89 45 f0             	mov    %eax,-0x10(%ebp)

    int err = sys_call(&args);
81000e76:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000e79:	50                   	push   %eax
81000e7a:	e8 bb fc ff ff       	call   81000b3a <sys_call>
81000e7f:	83 c4 04             	add    $0x4,%esp
81000e82:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0) {
81000e85:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
81000e89:	79 07                	jns    81000e92 <readdir+0x38>
        return (struct dirent*)0;
81000e8b:	b8 00 00 00 00       	mov    $0x0,%eax
81000e90:	eb 06                	jmp    81000e98 <readdir+0x3e>
    }

    return &dir->dirent;   
81000e92:	8b 45 08             	mov    0x8(%ebp),%eax
81000e95:	83 c0 04             	add    $0x4,%eax
}
81000e98:	c9                   	leave  
81000e99:	c3                   	ret    

81000e9a <closedir>:
 * @brief 关闭目录
 * 
 * @param dir 
 * @return int 
 */
int closedir(DIR *dir) {
81000e9a:	55                   	push   %ebp
81000e9b:	89 e5                	mov    %esp,%ebp
81000e9d:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
81000ea0:	c7 45 e0 3e 00 00 00 	movl   $0x3e,-0x20(%ebp)
    args.arg0 = (int)dir;
81000ea7:	8b 45 08             	mov    0x8(%ebp),%eax
81000eaa:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
81000ead:	8d 45 e0             	lea    -0x20(%ebp),%eax
81000eb0:	50                   	push   %eax
81000eb1:	e8 84 fc ff ff       	call   81000b3a <sys_call>
81000eb6:	83 c4 04             	add    $0x4,%esp
81000eb9:	89 45 f4             	mov    %eax,-0xc(%ebp)
    free(dir);
81000ebc:	83 ec 0c             	sub    $0xc,%esp
81000ebf:	ff 75 08             	push   0x8(%ebp)
81000ec2:	e8 30 2a 00 00       	call   810038f7 <free>
81000ec7:	83 c4 10             	add    $0x10,%esp

    return err;   
81000eca:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000ecd:	c9                   	leave  
81000ece:	c3                   	ret    

81000ecf <ioctl>:
 * @param cmd 
 * @param arg0 
 * @param arg1 
 * @return int 
 */
int ioctl(int file, int cmd, int arg0, int arg1) {
81000ecf:	55                   	push   %ebp
81000ed0:	89 e5                	mov    %esp,%ebp
81000ed2:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_ioctl;
81000ed5:	c7 45 e8 3a 00 00 00 	movl   $0x3a,-0x18(%ebp)
    args.arg0 = file;
81000edc:	8b 45 08             	mov    0x8(%ebp),%eax
81000edf:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = cmd;
81000ee2:	8b 45 0c             	mov    0xc(%ebp),%eax
81000ee5:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg2 = arg0;
81000ee8:	8b 45 10             	mov    0x10(%ebp),%eax
81000eeb:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg3 = arg1;
81000eee:	8b 45 14             	mov    0x14(%ebp),%eax
81000ef1:	89 45 f8             	mov    %eax,-0x8(%ebp)

    int err = sys_call(&args);
81000ef4:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000ef7:	50                   	push   %eax
81000ef8:	e8 3d fc ff ff       	call   81000b3a <sys_call>
81000efd:	83 c4 04             	add    $0x4,%esp
81000f00:	89 45 fc             	mov    %eax,-0x4(%ebp)

    return err;   
81000f03:	8b 45 fc             	mov    -0x4(%ebp),%eax
}
81000f06:	c9                   	leave  
81000f07:	c3                   	ret    

81000f08 <unlink>:
 * @brief 删除一个文件
 * 
 * @param path 
 * @return int 
 */
int unlink(const char *path) {
81000f08:	55                   	push   %ebp
81000f09:	89 e5                	mov    %esp,%ebp
81000f0b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_unlink;
81000f0e:	c7 45 e8 3b 00 00 00 	movl   $0x3b,-0x18(%ebp)
    args.arg0 = (path);
81000f15:	8b 45 08             	mov    0x8(%ebp),%eax
81000f18:	89 45 ec             	mov    %eax,-0x14(%ebp)

    int err = sys_call(&args);
81000f1b:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000f1e:	50                   	push   %eax
81000f1f:	e8 16 fc ff ff       	call   81000b3a <sys_call>
81000f24:	83 c4 04             	add    $0x4,%esp
81000f27:	89 45 fc             	mov    %eax,-0x4(%ebp)

    return err;   
81000f2a:	8b 45 fc             	mov    -0x4(%ebp),%eax
81000f2d:	c9                   	leave  
81000f2e:	c3                   	ret    

81000f2f <atoi>:
81000f2f:	55                   	push   %ebp
81000f30:	89 e5                	mov    %esp,%ebp
81000f32:	83 ec 08             	sub    $0x8,%esp
81000f35:	83 ec 04             	sub    $0x4,%esp
81000f38:	6a 0a                	push   $0xa
81000f3a:	6a 00                	push   $0x0
81000f3c:	ff 75 08             	push   0x8(%ebp)
81000f3f:	e8 82 50 00 00       	call   81005fc6 <strtol>
81000f44:	83 c4 10             	add    $0x10,%esp
81000f47:	c9                   	leave  
81000f48:	c3                   	ret    

81000f49 <_atoi_r>:
81000f49:	55                   	push   %ebp
81000f4a:	89 e5                	mov    %esp,%ebp
81000f4c:	83 ec 08             	sub    $0x8,%esp
81000f4f:	6a 0a                	push   $0xa
81000f51:	6a 00                	push   $0x0
81000f53:	ff 75 0c             	push   0xc(%ebp)
81000f56:	ff 75 08             	push   0x8(%ebp)
81000f59:	e8 1e 50 00 00       	call   81005f7c <_strtol_r>
81000f5e:	83 c4 10             	add    $0x10,%esp
81000f61:	c9                   	leave  
81000f62:	c3                   	ret    

81000f63 <exit>:
81000f63:	55                   	push   %ebp
81000f64:	89 e5                	mov    %esp,%ebp
81000f66:	83 ec 08             	sub    $0x8,%esp
81000f69:	83 ec 08             	sub    $0x8,%esp
81000f6c:	6a 00                	push   $0x0
81000f6e:	ff 75 08             	push   0x8(%ebp)
81000f71:	e8 4d 53 00 00       	call   810062c3 <__call_exitprocs>
81000f76:	83 c4 10             	add    $0x10,%esp
81000f79:	a1 90 89 00 81       	mov    0x81008990,%eax
81000f7e:	8b 40 3c             	mov    0x3c(%eax),%eax
81000f81:	85 c0                	test   %eax,%eax
81000f83:	74 17                	je     81000f9c <exit+0x39>
81000f85:	a1 90 89 00 81       	mov    0x81008990,%eax
81000f8a:	8b 40 3c             	mov    0x3c(%eax),%eax
81000f8d:	8b 15 90 89 00 81    	mov    0x81008990,%edx
81000f93:	83 ec 0c             	sub    $0xc,%esp
81000f96:	52                   	push   %edx
81000f97:	ff d0                	call   *%eax
81000f99:	83 c4 10             	add    $0x10,%esp
81000f9c:	83 ec 0c             	sub    $0xc,%esp
81000f9f:	ff 75 08             	push   0x8(%ebp)
81000fa2:	e8 08 fe ff ff       	call   81000daf <_exit>

81000fa7 <_fclose_r>:
81000fa7:	55                   	push   %ebp
81000fa8:	89 e5                	mov    %esp,%ebp
81000faa:	53                   	push   %ebx
81000fab:	83 ec 14             	sub    $0x14,%esp
81000fae:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000fb1:	85 db                	test   %ebx,%ebx
81000fb3:	75 0a                	jne    81000fbf <_fclose_r+0x18>
81000fb5:	b8 00 00 00 00       	mov    $0x0,%eax
81000fba:	e9 ea 00 00 00       	jmp    810010a9 <_fclose_r+0x102>
81000fbf:	8b 45 08             	mov    0x8(%ebp),%eax
81000fc2:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000fc5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000fc9:	74 18                	je     81000fe3 <_fclose_r+0x3c>
81000fcb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000fce:	8b 40 38             	mov    0x38(%eax),%eax
81000fd1:	85 c0                	test   %eax,%eax
81000fd3:	75 0e                	jne    81000fe3 <_fclose_r+0x3c>
81000fd5:	83 ec 0c             	sub    $0xc,%esp
81000fd8:	ff 75 f0             	push   -0x10(%ebp)
81000fdb:	e8 14 08 00 00       	call   810017f4 <__sinit>
81000fe0:	83 c4 10             	add    $0x10,%esp
81000fe3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000fe7:	66 85 c0             	test   %ax,%ax
81000fea:	75 0a                	jne    81000ff6 <_fclose_r+0x4f>
81000fec:	b8 00 00 00 00       	mov    $0x0,%eax
81000ff1:	e9 b3 00 00 00       	jmp    810010a9 <_fclose_r+0x102>
81000ff6:	83 ec 08             	sub    $0x8,%esp
81000ff9:	53                   	push   %ebx
81000ffa:	ff 75 08             	push   0x8(%ebp)
81000ffd:	e8 c9 00 00 00       	call   810010cb <__sflush_r>
81001002:	83 c4 10             	add    $0x10,%esp
81001005:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001008:	8b 43 2c             	mov    0x2c(%ebx),%eax
8100100b:	85 c0                	test   %eax,%eax
8100100d:	74 1d                	je     8100102c <_fclose_r+0x85>
8100100f:	8b 43 2c             	mov    0x2c(%ebx),%eax
81001012:	8b 53 1c             	mov    0x1c(%ebx),%edx
81001015:	83 ec 08             	sub    $0x8,%esp
81001018:	52                   	push   %edx
81001019:	ff 75 08             	push   0x8(%ebp)
8100101c:	ff d0                	call   *%eax
8100101e:	83 c4 10             	add    $0x10,%esp
81001021:	85 c0                	test   %eax,%eax
81001023:	79 07                	jns    8100102c <_fclose_r+0x85>
81001025:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
8100102c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001030:	98                   	cwtl   
81001031:	25 80 00 00 00       	and    $0x80,%eax
81001036:	85 c0                	test   %eax,%eax
81001038:	74 12                	je     8100104c <_fclose_r+0xa5>
8100103a:	8b 43 10             	mov    0x10(%ebx),%eax
8100103d:	83 ec 08             	sub    $0x8,%esp
81001040:	50                   	push   %eax
81001041:	ff 75 08             	push   0x8(%ebp)
81001044:	e8 9b 0c 00 00       	call   81001ce4 <_free_r>
81001049:	83 c4 10             	add    $0x10,%esp
8100104c:	8b 43 30             	mov    0x30(%ebx),%eax
8100104f:	85 c0                	test   %eax,%eax
81001051:	74 23                	je     81001076 <_fclose_r+0xcf>
81001053:	8b 53 30             	mov    0x30(%ebx),%edx
81001056:	8d 43 40             	lea    0x40(%ebx),%eax
81001059:	39 c2                	cmp    %eax,%edx
8100105b:	74 12                	je     8100106f <_fclose_r+0xc8>
8100105d:	8b 43 30             	mov    0x30(%ebx),%eax
81001060:	83 ec 08             	sub    $0x8,%esp
81001063:	50                   	push   %eax
81001064:	ff 75 08             	push   0x8(%ebp)
81001067:	e8 78 0c 00 00       	call   81001ce4 <_free_r>
8100106c:	83 c4 10             	add    $0x10,%esp
8100106f:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81001076:	8b 43 44             	mov    0x44(%ebx),%eax
81001079:	85 c0                	test   %eax,%eax
8100107b:	74 19                	je     81001096 <_fclose_r+0xef>
8100107d:	8b 43 44             	mov    0x44(%ebx),%eax
81001080:	83 ec 08             	sub    $0x8,%esp
81001083:	50                   	push   %eax
81001084:	ff 75 08             	push   0x8(%ebp)
81001087:	e8 58 0c 00 00       	call   81001ce4 <_free_r>
8100108c:	83 c4 10             	add    $0x10,%esp
8100108f:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81001096:	e8 f2 07 00 00       	call   8100188d <__sfp_lock_acquire>
8100109b:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
810010a1:	e8 ed 07 00 00       	call   81001893 <__sfp_lock_release>
810010a6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010a9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810010ac:	c9                   	leave  
810010ad:	c3                   	ret    

810010ae <fclose>:
810010ae:	55                   	push   %ebp
810010af:	89 e5                	mov    %esp,%ebp
810010b1:	83 ec 08             	sub    $0x8,%esp
810010b4:	8b 55 08             	mov    0x8(%ebp),%edx
810010b7:	a1 44 91 00 81       	mov    0x81009144,%eax
810010bc:	83 ec 08             	sub    $0x8,%esp
810010bf:	52                   	push   %edx
810010c0:	50                   	push   %eax
810010c1:	e8 e1 fe ff ff       	call   81000fa7 <_fclose_r>
810010c6:	83 c4 10             	add    $0x10,%esp
810010c9:	c9                   	leave  
810010ca:	c3                   	ret    

810010cb <__sflush_r>:
810010cb:	55                   	push   %ebp
810010cc:	89 e5                	mov    %esp,%ebp
810010ce:	57                   	push   %edi
810010cf:	56                   	push   %esi
810010d0:	53                   	push   %ebx
810010d1:	83 ec 1c             	sub    $0x1c,%esp
810010d4:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810010d7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810010db:	66 89 45 de          	mov    %ax,-0x22(%ebp)
810010df:	0f bf 45 de          	movswl -0x22(%ebp),%eax
810010e3:	83 e0 08             	and    $0x8,%eax
810010e6:	85 c0                	test   %eax,%eax
810010e8:	0f 85 93 01 00 00    	jne    81001281 <__sflush_r+0x1b6>
810010ee:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810010f2:	80 cc 08             	or     $0x8,%ah
810010f5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810010f9:	8b 43 04             	mov    0x4(%ebx),%eax
810010fc:	85 c0                	test   %eax,%eax
810010fe:	7f 0b                	jg     8100110b <__sflush_r+0x40>
81001100:	8b 43 3c             	mov    0x3c(%ebx),%eax
81001103:	85 c0                	test   %eax,%eax
81001105:	0f 8e 6f 01 00 00    	jle    8100127a <__sflush_r+0x1af>
8100110b:	8b 43 28             	mov    0x28(%ebx),%eax
8100110e:	85 c0                	test   %eax,%eax
81001110:	0f 84 64 01 00 00    	je     8100127a <__sflush_r+0x1af>
81001116:	8b 45 08             	mov    0x8(%ebp),%eax
81001119:	8b 00                	mov    (%eax),%eax
8100111b:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100111e:	8b 45 08             	mov    0x8(%ebp),%eax
81001121:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001127:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100112b:	98                   	cwtl   
8100112c:	25 00 10 00 00       	and    $0x1000,%eax
81001131:	85 c0                	test   %eax,%eax
81001133:	74 08                	je     8100113d <__sflush_r+0x72>
81001135:	8b 43 50             	mov    0x50(%ebx),%eax
81001138:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100113b:	eb 64                	jmp    810011a1 <__sflush_r+0xd6>
8100113d:	8b 43 28             	mov    0x28(%ebx),%eax
81001140:	8b 53 1c             	mov    0x1c(%ebx),%edx
81001143:	6a 01                	push   $0x1
81001145:	6a 00                	push   $0x0
81001147:	52                   	push   %edx
81001148:	ff 75 08             	push   0x8(%ebp)
8100114b:	ff d0                	call   *%eax
8100114d:	83 c4 10             	add    $0x10,%esp
81001150:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001153:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81001157:	75 48                	jne    810011a1 <__sflush_r+0xd6>
81001159:	8b 45 08             	mov    0x8(%ebp),%eax
8100115c:	8b 00                	mov    (%eax),%eax
8100115e:	85 c0                	test   %eax,%eax
81001160:	74 3f                	je     810011a1 <__sflush_r+0xd6>
81001162:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81001169:	8b 45 08             	mov    0x8(%ebp),%eax
8100116c:	8b 00                	mov    (%eax),%eax
8100116e:	83 f8 1d             	cmp    $0x1d,%eax
81001171:	74 0a                	je     8100117d <__sflush_r+0xb2>
81001173:	8b 45 08             	mov    0x8(%ebp),%eax
81001176:	8b 00                	mov    (%eax),%eax
81001178:	83 f8 16             	cmp    $0x16,%eax
8100117b:	75 11                	jne    8100118e <__sflush_r+0xc3>
8100117d:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81001184:	8b 45 08             	mov    0x8(%ebp),%eax
81001187:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100118a:	89 10                	mov    %edx,(%eax)
8100118c:	eb 0b                	jmp    81001199 <__sflush_r+0xce>
8100118e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001192:	83 c8 40             	or     $0x40,%eax
81001195:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001199:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100119c:	e9 48 01 00 00       	jmp    810012e9 <__sflush_r+0x21e>
810011a1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810011a5:	98                   	cwtl   
810011a6:	83 e0 04             	and    $0x4,%eax
810011a9:	85 c0                	test   %eax,%eax
810011ab:	74 13                	je     810011c0 <__sflush_r+0xf5>
810011ad:	8b 43 04             	mov    0x4(%ebx),%eax
810011b0:	29 45 e4             	sub    %eax,-0x1c(%ebp)
810011b3:	8b 43 30             	mov    0x30(%ebx),%eax
810011b6:	85 c0                	test   %eax,%eax
810011b8:	74 06                	je     810011c0 <__sflush_r+0xf5>
810011ba:	8b 43 3c             	mov    0x3c(%ebx),%eax
810011bd:	29 45 e4             	sub    %eax,-0x1c(%ebp)
810011c0:	8b 43 28             	mov    0x28(%ebx),%eax
810011c3:	8b 53 1c             	mov    0x1c(%ebx),%edx
810011c6:	6a 00                	push   $0x0
810011c8:	ff 75 e4             	push   -0x1c(%ebp)
810011cb:	52                   	push   %edx
810011cc:	ff 75 08             	push   0x8(%ebp)
810011cf:	ff d0                	call   *%eax
810011d1:	83 c4 10             	add    $0x10,%esp
810011d4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810011d7:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810011db:	75 1d                	jne    810011fa <__sflush_r+0x12f>
810011dd:	8b 45 08             	mov    0x8(%ebp),%eax
810011e0:	8b 00                	mov    (%eax),%eax
810011e2:	85 c0                	test   %eax,%eax
810011e4:	74 14                	je     810011fa <__sflush_r+0x12f>
810011e6:	8b 45 08             	mov    0x8(%ebp),%eax
810011e9:	8b 00                	mov    (%eax),%eax
810011eb:	83 f8 1d             	cmp    $0x1d,%eax
810011ee:	74 0a                	je     810011fa <__sflush_r+0x12f>
810011f0:	8b 45 08             	mov    0x8(%ebp),%eax
810011f3:	8b 00                	mov    (%eax),%eax
810011f5:	83 f8 16             	cmp    $0x16,%eax
810011f8:	75 6e                	jne    81001268 <__sflush_r+0x19d>
810011fa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810011fe:	80 e4 f7             	and    $0xf7,%ah
81001201:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001205:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100120c:	8b 43 10             	mov    0x10(%ebx),%eax
8100120f:	89 03                	mov    %eax,(%ebx)
81001211:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001215:	98                   	cwtl   
81001216:	25 00 10 00 00       	and    $0x1000,%eax
8100121b:	85 c0                	test   %eax,%eax
8100121d:	74 15                	je     81001234 <__sflush_r+0x169>
8100121f:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81001223:	75 09                	jne    8100122e <__sflush_r+0x163>
81001225:	8b 45 08             	mov    0x8(%ebp),%eax
81001228:	8b 00                	mov    (%eax),%eax
8100122a:	85 c0                	test   %eax,%eax
8100122c:	75 06                	jne    81001234 <__sflush_r+0x169>
8100122e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001231:	89 43 50             	mov    %eax,0x50(%ebx)
81001234:	8b 45 08             	mov    0x8(%ebp),%eax
81001237:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100123a:	89 10                	mov    %edx,(%eax)
8100123c:	8b 43 30             	mov    0x30(%ebx),%eax
8100123f:	85 c0                	test   %eax,%eax
81001241:	74 37                	je     8100127a <__sflush_r+0x1af>
81001243:	8b 53 30             	mov    0x30(%ebx),%edx
81001246:	8d 43 40             	lea    0x40(%ebx),%eax
81001249:	39 c2                	cmp    %eax,%edx
8100124b:	74 12                	je     8100125f <__sflush_r+0x194>
8100124d:	8b 43 30             	mov    0x30(%ebx),%eax
81001250:	83 ec 08             	sub    $0x8,%esp
81001253:	50                   	push   %eax
81001254:	ff 75 08             	push   0x8(%ebp)
81001257:	e8 88 0a 00 00       	call   81001ce4 <_free_r>
8100125c:	83 c4 10             	add    $0x10,%esp
8100125f:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81001266:	eb 12                	jmp    8100127a <__sflush_r+0x1af>
81001268:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100126c:	83 c8 40             	or     $0x40,%eax
8100126f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001273:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001278:	eb 6f                	jmp    810012e9 <__sflush_r+0x21e>
8100127a:	b8 00 00 00 00       	mov    $0x0,%eax
8100127f:	eb 68                	jmp    810012e9 <__sflush_r+0x21e>
81001281:	8b 73 10             	mov    0x10(%ebx),%esi
81001284:	85 f6                	test   %esi,%esi
81001286:	75 07                	jne    8100128f <__sflush_r+0x1c4>
81001288:	b8 00 00 00 00       	mov    $0x0,%eax
8100128d:	eb 5a                	jmp    810012e9 <__sflush_r+0x21e>
8100128f:	8b 03                	mov    (%ebx),%eax
81001291:	29 f0                	sub    %esi,%eax
81001293:	89 c7                	mov    %eax,%edi
81001295:	89 33                	mov    %esi,(%ebx)
81001297:	0f bf 45 de          	movswl -0x22(%ebp),%eax
8100129b:	83 e0 03             	and    $0x3,%eax
8100129e:	85 c0                	test   %eax,%eax
810012a0:	75 05                	jne    810012a7 <__sflush_r+0x1dc>
810012a2:	8b 43 14             	mov    0x14(%ebx),%eax
810012a5:	eb 05                	jmp    810012ac <__sflush_r+0x1e1>
810012a7:	b8 00 00 00 00       	mov    $0x0,%eax
810012ac:	89 43 08             	mov    %eax,0x8(%ebx)
810012af:	eb 2f                	jmp    810012e0 <__sflush_r+0x215>
810012b1:	8b 43 24             	mov    0x24(%ebx),%eax
810012b4:	8b 53 1c             	mov    0x1c(%ebx),%edx
810012b7:	57                   	push   %edi
810012b8:	56                   	push   %esi
810012b9:	52                   	push   %edx
810012ba:	ff 75 08             	push   0x8(%ebp)
810012bd:	ff d0                	call   *%eax
810012bf:	83 c4 10             	add    $0x10,%esp
810012c2:	85 c0                	test   %eax,%eax
810012c4:	7f 12                	jg     810012d8 <__sflush_r+0x20d>
810012c6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810012ca:	83 c8 40             	or     $0x40,%eax
810012cd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810012d1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810012d6:	eb 11                	jmp    810012e9 <__sflush_r+0x21e>
810012d8:	89 c1                	mov    %eax,%ecx
810012da:	89 c8                	mov    %ecx,%eax
810012dc:	01 c6                	add    %eax,%esi
810012de:	29 cf                	sub    %ecx,%edi
810012e0:	85 ff                	test   %edi,%edi
810012e2:	7f cd                	jg     810012b1 <__sflush_r+0x1e6>
810012e4:	b8 00 00 00 00       	mov    $0x0,%eax
810012e9:	8d 65 f4             	lea    -0xc(%ebp),%esp
810012ec:	5b                   	pop    %ebx
810012ed:	5e                   	pop    %esi
810012ee:	5f                   	pop    %edi
810012ef:	5d                   	pop    %ebp
810012f0:	c3                   	ret    

810012f1 <_fflush_r>:
810012f1:	55                   	push   %ebp
810012f2:	89 e5                	mov    %esp,%ebp
810012f4:	53                   	push   %ebx
810012f5:	83 ec 14             	sub    $0x14,%esp
810012f8:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810012fb:	8b 45 08             	mov    0x8(%ebp),%eax
810012fe:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001301:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001305:	74 18                	je     8100131f <_fflush_r+0x2e>
81001307:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100130a:	8b 40 38             	mov    0x38(%eax),%eax
8100130d:	85 c0                	test   %eax,%eax
8100130f:	75 0e                	jne    8100131f <_fflush_r+0x2e>
81001311:	83 ec 0c             	sub    $0xc,%esp
81001314:	ff 75 f4             	push   -0xc(%ebp)
81001317:	e8 d8 04 00 00       	call   810017f4 <__sinit>
8100131c:	83 c4 10             	add    $0x10,%esp
8100131f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001323:	66 85 c0             	test   %ax,%ax
81001326:	75 07                	jne    8100132f <_fflush_r+0x3e>
81001328:	b8 00 00 00 00       	mov    $0x0,%eax
8100132d:	eb 15                	jmp    81001344 <_fflush_r+0x53>
8100132f:	83 ec 08             	sub    $0x8,%esp
81001332:	53                   	push   %ebx
81001333:	ff 75 08             	push   0x8(%ebp)
81001336:	e8 90 fd ff ff       	call   810010cb <__sflush_r>
8100133b:	83 c4 10             	add    $0x10,%esp
8100133e:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001341:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001344:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001347:	c9                   	leave  
81001348:	c3                   	ret    

81001349 <fflush>:
81001349:	55                   	push   %ebp
8100134a:	89 e5                	mov    %esp,%ebp
8100134c:	83 ec 08             	sub    $0x8,%esp
8100134f:	8b 55 08             	mov    0x8(%ebp),%edx
81001352:	85 d2                	test   %edx,%edx
81001354:	75 18                	jne    8100136e <fflush+0x25>
81001356:	a1 90 89 00 81       	mov    0x81008990,%eax
8100135b:	83 ec 08             	sub    $0x8,%esp
8100135e:	68 f1 12 00 81       	push   $0x810012f1
81001363:	50                   	push   %eax
81001364:	e8 70 14 00 00       	call   810027d9 <_fwalk_reent>
81001369:	83 c4 10             	add    $0x10,%esp
8100136c:	eb 12                	jmp    81001380 <fflush+0x37>
8100136e:	a1 44 91 00 81       	mov    0x81009144,%eax
81001373:	83 ec 08             	sub    $0x8,%esp
81001376:	52                   	push   %edx
81001377:	50                   	push   %eax
81001378:	e8 74 ff ff ff       	call   810012f1 <_fflush_r>
8100137d:	83 c4 10             	add    $0x10,%esp
81001380:	c9                   	leave  
81001381:	c3                   	ret    

81001382 <_fgets_r>:
81001382:	55                   	push   %ebp
81001383:	89 e5                	mov    %esp,%ebp
81001385:	83 ec 28             	sub    $0x28,%esp
81001388:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
8100138c:	7f 0a                	jg     81001398 <_fgets_r+0x16>
8100138e:	b8 00 00 00 00       	mov    $0x0,%eax
81001393:	e9 46 01 00 00       	jmp    810014de <_fgets_r+0x15c>
81001398:	8b 45 0c             	mov    0xc(%ebp),%eax
8100139b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100139e:	8b 45 08             	mov    0x8(%ebp),%eax
810013a1:	89 45 ec             	mov    %eax,-0x14(%ebp)
810013a4:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810013a8:	74 18                	je     810013c2 <_fgets_r+0x40>
810013aa:	8b 45 ec             	mov    -0x14(%ebp),%eax
810013ad:	8b 40 38             	mov    0x38(%eax),%eax
810013b0:	85 c0                	test   %eax,%eax
810013b2:	75 0e                	jne    810013c2 <_fgets_r+0x40>
810013b4:	83 ec 0c             	sub    $0xc,%esp
810013b7:	ff 75 ec             	push   -0x14(%ebp)
810013ba:	e8 35 04 00 00       	call   810017f4 <__sinit>
810013bf:	83 c4 10             	add    $0x10,%esp
810013c2:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
810013c6:	8b 45 14             	mov    0x14(%ebp),%eax
810013c9:	8b 40 04             	mov    0x4(%eax),%eax
810013cc:	89 45 f4             	mov    %eax,-0xc(%ebp)
810013cf:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810013d3:	75 34                	jne    81001409 <_fgets_r+0x87>
810013d5:	83 ec 08             	sub    $0x8,%esp
810013d8:	ff 75 14             	push   0x14(%ebp)
810013db:	ff 75 08             	push   0x8(%ebp)
810013de:	e8 5e 40 00 00       	call   81005441 <__srefill_r>
810013e3:	83 c4 10             	add    $0x10,%esp
810013e6:	85 c0                	test   %eax,%eax
810013e8:	74 16                	je     81001400 <_fgets_r+0x7e>
810013ea:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013ed:	3b 45 0c             	cmp    0xc(%ebp),%eax
810013f0:	0f 85 de 00 00 00    	jne    810014d4 <_fgets_r+0x152>
810013f6:	b8 00 00 00 00       	mov    $0x0,%eax
810013fb:	e9 de 00 00 00       	jmp    810014de <_fgets_r+0x15c>
81001400:	8b 45 14             	mov    0x14(%ebp),%eax
81001403:	8b 40 04             	mov    0x4(%eax),%eax
81001406:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001409:	8b 45 14             	mov    0x14(%ebp),%eax
8100140c:	8b 00                	mov    (%eax),%eax
8100140e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001411:	8b 45 10             	mov    0x10(%ebp),%eax
81001414:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81001417:	76 06                	jbe    8100141f <_fgets_r+0x9d>
81001419:	8b 45 10             	mov    0x10(%ebp),%eax
8100141c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100141f:	83 ec 04             	sub    $0x4,%esp
81001422:	ff 75 f4             	push   -0xc(%ebp)
81001425:	6a 0a                	push   $0xa
81001427:	ff 75 e8             	push   -0x18(%ebp)
8100142a:	e8 a1 2f 00 00       	call   810043d0 <memchr>
8100142f:	83 c4 10             	add    $0x10,%esp
81001432:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001435:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001439:	74 4a                	je     81001485 <_fgets_r+0x103>
8100143b:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100143f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001442:	2b 45 e8             	sub    -0x18(%ebp),%eax
81001445:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001448:	8b 45 14             	mov    0x14(%ebp),%eax
8100144b:	8b 40 04             	mov    0x4(%eax),%eax
8100144e:	2b 45 f4             	sub    -0xc(%ebp),%eax
81001451:	89 c2                	mov    %eax,%edx
81001453:	8b 45 14             	mov    0x14(%ebp),%eax
81001456:	89 50 04             	mov    %edx,0x4(%eax)
81001459:	8b 45 14             	mov    0x14(%ebp),%eax
8100145c:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100145f:	89 10                	mov    %edx,(%eax)
81001461:	83 ec 04             	sub    $0x4,%esp
81001464:	ff 75 f4             	push   -0xc(%ebp)
81001467:	ff 75 e8             	push   -0x18(%ebp)
8100146a:	ff 75 f0             	push   -0x10(%ebp)
8100146d:	e8 46 30 00 00       	call   810044b8 <memcpy>
81001472:	83 c4 10             	add    $0x10,%esp
81001475:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001478:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100147b:	01 d0                	add    %edx,%eax
8100147d:	c6 00 00             	movb   $0x0,(%eax)
81001480:	8b 45 0c             	mov    0xc(%ebp),%eax
81001483:	eb 59                	jmp    810014de <_fgets_r+0x15c>
81001485:	8b 45 14             	mov    0x14(%ebp),%eax
81001488:	8b 40 04             	mov    0x4(%eax),%eax
8100148b:	2b 45 f4             	sub    -0xc(%ebp),%eax
8100148e:	89 c2                	mov    %eax,%edx
81001490:	8b 45 14             	mov    0x14(%ebp),%eax
81001493:	89 50 04             	mov    %edx,0x4(%eax)
81001496:	8b 45 14             	mov    0x14(%ebp),%eax
81001499:	8b 10                	mov    (%eax),%edx
8100149b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100149e:	01 c2                	add    %eax,%edx
810014a0:	8b 45 14             	mov    0x14(%ebp),%eax
810014a3:	89 10                	mov    %edx,(%eax)
810014a5:	83 ec 04             	sub    $0x4,%esp
810014a8:	ff 75 f4             	push   -0xc(%ebp)
810014ab:	ff 75 e8             	push   -0x18(%ebp)
810014ae:	ff 75 f0             	push   -0x10(%ebp)
810014b1:	e8 02 30 00 00       	call   810044b8 <memcpy>
810014b6:	83 c4 10             	add    $0x10,%esp
810014b9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014bc:	01 45 f0             	add    %eax,-0x10(%ebp)
810014bf:	8b 45 10             	mov    0x10(%ebp),%eax
810014c2:	2b 45 f4             	sub    -0xc(%ebp),%eax
810014c5:	89 45 10             	mov    %eax,0x10(%ebp)
810014c8:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810014cc:	0f 85 f4 fe ff ff    	jne    810013c6 <_fgets_r+0x44>
810014d2:	eb 01                	jmp    810014d5 <_fgets_r+0x153>
810014d4:	90                   	nop
810014d5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810014d8:	c6 00 00             	movb   $0x0,(%eax)
810014db:	8b 45 0c             	mov    0xc(%ebp),%eax
810014de:	c9                   	leave  
810014df:	c3                   	ret    

810014e0 <fgets>:
810014e0:	55                   	push   %ebp
810014e1:	89 e5                	mov    %esp,%ebp
810014e3:	83 ec 08             	sub    $0x8,%esp
810014e6:	a1 44 91 00 81       	mov    0x81009144,%eax
810014eb:	ff 75 10             	push   0x10(%ebp)
810014ee:	ff 75 0c             	push   0xc(%ebp)
810014f1:	ff 75 08             	push   0x8(%ebp)
810014f4:	50                   	push   %eax
810014f5:	e8 88 fe ff ff       	call   81001382 <_fgets_r>
810014fa:	83 c4 10             	add    $0x10,%esp
810014fd:	c9                   	leave  
810014fe:	c3                   	ret    

810014ff <std>:
810014ff:	55                   	push   %ebp
81001500:	89 e5                	mov    %esp,%ebp
81001502:	83 ec 08             	sub    $0x8,%esp
81001505:	8b 45 08             	mov    0x8(%ebp),%eax
81001508:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100150e:	8b 45 08             	mov    0x8(%ebp),%eax
81001511:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001518:	8b 45 08             	mov    0x8(%ebp),%eax
8100151b:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81001522:	8b 45 0c             	mov    0xc(%ebp),%eax
81001525:	89 c2                	mov    %eax,%edx
81001527:	8b 45 08             	mov    0x8(%ebp),%eax
8100152a:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100152e:	8b 45 08             	mov    0x8(%ebp),%eax
81001531:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81001538:	8b 45 10             	mov    0x10(%ebp),%eax
8100153b:	89 c2                	mov    %eax,%edx
8100153d:	8b 45 08             	mov    0x8(%ebp),%eax
81001540:	66 89 50 0e          	mov    %dx,0xe(%eax)
81001544:	8b 45 08             	mov    0x8(%ebp),%eax
81001547:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100154e:	8b 45 08             	mov    0x8(%ebp),%eax
81001551:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81001558:	8b 45 08             	mov    0x8(%ebp),%eax
8100155b:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001562:	8b 45 08             	mov    0x8(%ebp),%eax
81001565:	83 c0 5c             	add    $0x5c,%eax
81001568:	83 ec 04             	sub    $0x4,%esp
8100156b:	6a 08                	push   $0x8
8100156d:	6a 00                	push   $0x0
8100156f:	50                   	push   %eax
81001570:	e8 8b 2f 00 00       	call   81004500 <memset>
81001575:	83 c4 10             	add    $0x10,%esp
81001578:	8b 45 08             	mov    0x8(%ebp),%eax
8100157b:	8b 55 08             	mov    0x8(%ebp),%edx
8100157e:	89 50 1c             	mov    %edx,0x1c(%eax)
81001581:	8b 45 08             	mov    0x8(%ebp),%eax
81001584:	c7 40 20 3b 59 00 81 	movl   $0x8100593b,0x20(%eax)
8100158b:	8b 45 08             	mov    0x8(%ebp),%eax
8100158e:	c7 40 24 89 59 00 81 	movl   $0x81005989,0x24(%eax)
81001595:	8b 45 08             	mov    0x8(%ebp),%eax
81001598:	c7 40 28 e4 59 00 81 	movl   $0x810059e4,0x28(%eax)
8100159f:	8b 45 08             	mov    0x8(%ebp),%eax
810015a2:	c7 40 2c 2e 5a 00 81 	movl   $0x81005a2e,0x2c(%eax)
810015a9:	90                   	nop
810015aa:	c9                   	leave  
810015ab:	c3                   	ret    

810015ac <stdin_init>:
810015ac:	55                   	push   %ebp
810015ad:	89 e5                	mov    %esp,%ebp
810015af:	83 ec 08             	sub    $0x8,%esp
810015b2:	83 ec 04             	sub    $0x4,%esp
810015b5:	6a 00                	push   $0x0
810015b7:	6a 04                	push   $0x4
810015b9:	ff 75 08             	push   0x8(%ebp)
810015bc:	e8 3e ff ff ff       	call   810014ff <std>
810015c1:	83 c4 10             	add    $0x10,%esp
810015c4:	90                   	nop
810015c5:	c9                   	leave  
810015c6:	c3                   	ret    

810015c7 <stdout_init>:
810015c7:	55                   	push   %ebp
810015c8:	89 e5                	mov    %esp,%ebp
810015ca:	83 ec 08             	sub    $0x8,%esp
810015cd:	83 ec 04             	sub    $0x4,%esp
810015d0:	6a 01                	push   $0x1
810015d2:	6a 09                	push   $0x9
810015d4:	ff 75 08             	push   0x8(%ebp)
810015d7:	e8 23 ff ff ff       	call   810014ff <std>
810015dc:	83 c4 10             	add    $0x10,%esp
810015df:	90                   	nop
810015e0:	c9                   	leave  
810015e1:	c3                   	ret    

810015e2 <stderr_init>:
810015e2:	55                   	push   %ebp
810015e3:	89 e5                	mov    %esp,%ebp
810015e5:	83 ec 08             	sub    $0x8,%esp
810015e8:	83 ec 04             	sub    $0x4,%esp
810015eb:	6a 02                	push   $0x2
810015ed:	6a 12                	push   $0x12
810015ef:	ff 75 08             	push   0x8(%ebp)
810015f2:	e8 08 ff ff ff       	call   810014ff <std>
810015f7:	83 c4 10             	add    $0x10,%esp
810015fa:	90                   	nop
810015fb:	c9                   	leave  
810015fc:	c3                   	ret    

810015fd <__sfmoreglue>:
810015fd:	55                   	push   %ebp
810015fe:	89 e5                	mov    %esp,%ebp
81001600:	53                   	push   %ebx
81001601:	83 ec 14             	sub    $0x14,%esp
81001604:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81001607:	8d 43 ff             	lea    -0x1(%ebx),%eax
8100160a:	6b c0 68             	imul   $0x68,%eax,%eax
8100160d:	83 c0 74             	add    $0x74,%eax
81001610:	83 ec 08             	sub    $0x8,%esp
81001613:	50                   	push   %eax
81001614:	ff 75 08             	push   0x8(%ebp)
81001617:	e8 8b 25 00 00       	call   81003ba7 <_malloc_r>
8100161c:	83 c4 10             	add    $0x10,%esp
8100161f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001622:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001626:	75 07                	jne    8100162f <__sfmoreglue+0x32>
81001628:	b8 00 00 00 00       	mov    $0x0,%eax
8100162d:	eb 38                	jmp    81001667 <__sfmoreglue+0x6a>
8100162f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001632:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001638:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100163b:	89 58 04             	mov    %ebx,0x4(%eax)
8100163e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001641:	8d 50 0c             	lea    0xc(%eax),%edx
81001644:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001647:	89 50 08             	mov    %edx,0x8(%eax)
8100164a:	89 d8                	mov    %ebx,%eax
8100164c:	6b c0 68             	imul   $0x68,%eax,%eax
8100164f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001652:	83 c2 0c             	add    $0xc,%edx
81001655:	83 ec 04             	sub    $0x4,%esp
81001658:	50                   	push   %eax
81001659:	6a 00                	push   $0x0
8100165b:	52                   	push   %edx
8100165c:	e8 9f 2e 00 00       	call   81004500 <memset>
81001661:	83 c4 10             	add    $0x10,%esp
81001664:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001667:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100166a:	c9                   	leave  
8100166b:	c3                   	ret    

8100166c <__sfp>:
8100166c:	55                   	push   %ebp
8100166d:	89 e5                	mov    %esp,%ebp
8100166f:	83 ec 18             	sub    $0x18,%esp
81001672:	e8 16 02 00 00       	call   8100188d <__sfp_lock_acquire>
81001677:	a1 90 89 00 81       	mov    0x81008990,%eax
8100167c:	8b 40 38             	mov    0x38(%eax),%eax
8100167f:	85 c0                	test   %eax,%eax
81001681:	75 11                	jne    81001694 <__sfp+0x28>
81001683:	a1 90 89 00 81       	mov    0x81008990,%eax
81001688:	83 ec 0c             	sub    $0xc,%esp
8100168b:	50                   	push   %eax
8100168c:	e8 63 01 00 00       	call   810017f4 <__sinit>
81001691:	83 c4 10             	add    $0x10,%esp
81001694:	a1 90 89 00 81       	mov    0x81008990,%eax
81001699:	05 e0 02 00 00       	add    $0x2e0,%eax
8100169e:	89 45 ec             	mov    %eax,-0x14(%ebp)
810016a1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810016a4:	8b 40 08             	mov    0x8(%eax),%eax
810016a7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810016aa:	8b 45 ec             	mov    -0x14(%ebp),%eax
810016ad:	8b 40 04             	mov    0x4(%eax),%eax
810016b0:	89 45 f0             	mov    %eax,-0x10(%ebp)
810016b3:	eb 10                	jmp    810016c5 <__sfp+0x59>
810016b5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016b8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810016bc:	66 85 c0             	test   %ax,%ax
810016bf:	74 58                	je     81001719 <__sfp+0xad>
810016c1:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
810016c5:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
810016c9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810016cd:	79 e6                	jns    810016b5 <__sfp+0x49>
810016cf:	8b 45 ec             	mov    -0x14(%ebp),%eax
810016d2:	8b 00                	mov    (%eax),%eax
810016d4:	85 c0                	test   %eax,%eax
810016d6:	75 1e                	jne    810016f6 <__sfp+0x8a>
810016d8:	83 ec 08             	sub    $0x8,%esp
810016db:	6a 04                	push   $0x4
810016dd:	ff 75 08             	push   0x8(%ebp)
810016e0:	e8 18 ff ff ff       	call   810015fd <__sfmoreglue>
810016e5:	83 c4 10             	add    $0x10,%esp
810016e8:	8b 55 ec             	mov    -0x14(%ebp),%edx
810016eb:	89 02                	mov    %eax,(%edx)
810016ed:	8b 45 ec             	mov    -0x14(%ebp),%eax
810016f0:	8b 00                	mov    (%eax),%eax
810016f2:	85 c0                	test   %eax,%eax
810016f4:	74 0a                	je     81001700 <__sfp+0x94>
810016f6:	8b 45 ec             	mov    -0x14(%ebp),%eax
810016f9:	8b 00                	mov    (%eax),%eax
810016fb:	89 45 ec             	mov    %eax,-0x14(%ebp)
810016fe:	eb a1                	jmp    810016a1 <__sfp+0x35>
81001700:	90                   	nop
81001701:	e8 8d 01 00 00       	call   81001893 <__sfp_lock_release>
81001706:	8b 45 08             	mov    0x8(%ebp),%eax
81001709:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100170f:	b8 00 00 00 00       	mov    $0x0,%eax
81001714:	e9 9e 00 00 00       	jmp    810017b7 <__sfp+0x14b>
81001719:	90                   	nop
8100171a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100171d:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
81001723:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001726:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
8100172c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100172f:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81001736:	e8 58 01 00 00       	call   81001893 <__sfp_lock_release>
8100173b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100173e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001744:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001747:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
8100174e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001751:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001758:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100175b:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81001762:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001765:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
8100176c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100176f:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001776:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001779:	83 c0 5c             	add    $0x5c,%eax
8100177c:	83 ec 04             	sub    $0x4,%esp
8100177f:	6a 08                	push   $0x8
81001781:	6a 00                	push   $0x0
81001783:	50                   	push   %eax
81001784:	e8 77 2d 00 00       	call   81004500 <memset>
81001789:	83 c4 10             	add    $0x10,%esp
8100178c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100178f:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81001796:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001799:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
810017a0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017a3:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
810017aa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017ad:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
810017b4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017b7:	c9                   	leave  
810017b8:	c3                   	ret    

810017b9 <_cleanup_r>:
810017b9:	55                   	push   %ebp
810017ba:	89 e5                	mov    %esp,%ebp
810017bc:	83 ec 18             	sub    $0x18,%esp
810017bf:	c7 45 f4 a7 0f 00 81 	movl   $0x81000fa7,-0xc(%ebp)
810017c6:	83 ec 08             	sub    $0x8,%esp
810017c9:	ff 75 f4             	push   -0xc(%ebp)
810017cc:	ff 75 08             	push   0x8(%ebp)
810017cf:	e8 05 10 00 00       	call   810027d9 <_fwalk_reent>
810017d4:	83 c4 10             	add    $0x10,%esp
810017d7:	90                   	nop
810017d8:	c9                   	leave  
810017d9:	c3                   	ret    

810017da <_cleanup>:
810017da:	55                   	push   %ebp
810017db:	89 e5                	mov    %esp,%ebp
810017dd:	83 ec 08             	sub    $0x8,%esp
810017e0:	a1 90 89 00 81       	mov    0x81008990,%eax
810017e5:	83 ec 0c             	sub    $0xc,%esp
810017e8:	50                   	push   %eax
810017e9:	e8 cb ff ff ff       	call   810017b9 <_cleanup_r>
810017ee:	83 c4 10             	add    $0x10,%esp
810017f1:	90                   	nop
810017f2:	c9                   	leave  
810017f3:	c3                   	ret    

810017f4 <__sinit>:
810017f4:	55                   	push   %ebp
810017f5:	89 e5                	mov    %esp,%ebp
810017f7:	83 ec 08             	sub    $0x8,%esp
810017fa:	e8 9a 00 00 00       	call   81001899 <__sinit_lock_acquire>
810017ff:	8b 45 08             	mov    0x8(%ebp),%eax
81001802:	8b 40 38             	mov    0x38(%eax),%eax
81001805:	85 c0                	test   %eax,%eax
81001807:	74 07                	je     81001810 <__sinit+0x1c>
81001809:	e8 91 00 00 00       	call   8100189f <__sinit_lock_release>
8100180e:	eb 7b                	jmp    8100188b <__sinit+0x97>
81001810:	8b 45 08             	mov    0x8(%ebp),%eax
81001813:	c7 40 3c b9 17 00 81 	movl   $0x810017b9,0x3c(%eax)
8100181a:	8b 45 08             	mov    0x8(%ebp),%eax
8100181d:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
81001824:	00 00 00 
81001827:	8b 45 08             	mov    0x8(%ebp),%eax
8100182a:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
81001831:	00 00 00 
81001834:	8b 45 08             	mov    0x8(%ebp),%eax
81001837:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
8100183d:	8b 45 08             	mov    0x8(%ebp),%eax
81001840:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81001846:	8b 45 08             	mov    0x8(%ebp),%eax
81001849:	8b 40 04             	mov    0x4(%eax),%eax
8100184c:	83 ec 0c             	sub    $0xc,%esp
8100184f:	50                   	push   %eax
81001850:	e8 57 fd ff ff       	call   810015ac <stdin_init>
81001855:	83 c4 10             	add    $0x10,%esp
81001858:	8b 45 08             	mov    0x8(%ebp),%eax
8100185b:	8b 40 08             	mov    0x8(%eax),%eax
8100185e:	83 ec 0c             	sub    $0xc,%esp
81001861:	50                   	push   %eax
81001862:	e8 60 fd ff ff       	call   810015c7 <stdout_init>
81001867:	83 c4 10             	add    $0x10,%esp
8100186a:	8b 45 08             	mov    0x8(%ebp),%eax
8100186d:	8b 40 0c             	mov    0xc(%eax),%eax
81001870:	83 ec 0c             	sub    $0xc,%esp
81001873:	50                   	push   %eax
81001874:	e8 69 fd ff ff       	call   810015e2 <stderr_init>
81001879:	83 c4 10             	add    $0x10,%esp
8100187c:	8b 45 08             	mov    0x8(%ebp),%eax
8100187f:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81001886:	e8 14 00 00 00       	call   8100189f <__sinit_lock_release>
8100188b:	c9                   	leave  
8100188c:	c3                   	ret    

8100188d <__sfp_lock_acquire>:
8100188d:	55                   	push   %ebp
8100188e:	89 e5                	mov    %esp,%ebp
81001890:	90                   	nop
81001891:	5d                   	pop    %ebp
81001892:	c3                   	ret    

81001893 <__sfp_lock_release>:
81001893:	55                   	push   %ebp
81001894:	89 e5                	mov    %esp,%ebp
81001896:	90                   	nop
81001897:	5d                   	pop    %ebp
81001898:	c3                   	ret    

81001899 <__sinit_lock_acquire>:
81001899:	55                   	push   %ebp
8100189a:	89 e5                	mov    %esp,%ebp
8100189c:	90                   	nop
8100189d:	5d                   	pop    %ebp
8100189e:	c3                   	ret    

8100189f <__sinit_lock_release>:
8100189f:	55                   	push   %ebp
810018a0:	89 e5                	mov    %esp,%ebp
810018a2:	90                   	nop
810018a3:	5d                   	pop    %ebp
810018a4:	c3                   	ret    

810018a5 <__fp_lock>:
810018a5:	55                   	push   %ebp
810018a6:	89 e5                	mov    %esp,%ebp
810018a8:	b8 00 00 00 00       	mov    $0x0,%eax
810018ad:	5d                   	pop    %ebp
810018ae:	c3                   	ret    

810018af <__fp_unlock>:
810018af:	55                   	push   %ebp
810018b0:	89 e5                	mov    %esp,%ebp
810018b2:	b8 00 00 00 00       	mov    $0x0,%eax
810018b7:	5d                   	pop    %ebp
810018b8:	c3                   	ret    

810018b9 <__fp_lock_all>:
810018b9:	55                   	push   %ebp
810018ba:	89 e5                	mov    %esp,%ebp
810018bc:	83 ec 08             	sub    $0x8,%esp
810018bf:	e8 c9 ff ff ff       	call   8100188d <__sfp_lock_acquire>
810018c4:	a1 44 91 00 81       	mov    0x81009144,%eax
810018c9:	83 ec 08             	sub    $0x8,%esp
810018cc:	68 a5 18 00 81       	push   $0x810018a5
810018d1:	50                   	push   %eax
810018d2:	e8 9a 0e 00 00       	call   81002771 <_fwalk>
810018d7:	83 c4 10             	add    $0x10,%esp
810018da:	90                   	nop
810018db:	c9                   	leave  
810018dc:	c3                   	ret    

810018dd <__fp_unlock_all>:
810018dd:	55                   	push   %ebp
810018de:	89 e5                	mov    %esp,%ebp
810018e0:	83 ec 08             	sub    $0x8,%esp
810018e3:	a1 44 91 00 81       	mov    0x81009144,%eax
810018e8:	83 ec 08             	sub    $0x8,%esp
810018eb:	68 af 18 00 81       	push   $0x810018af
810018f0:	50                   	push   %eax
810018f1:	e8 7b 0e 00 00       	call   81002771 <_fwalk>
810018f6:	83 c4 10             	add    $0x10,%esp
810018f9:	e8 95 ff ff ff       	call   81001893 <__sfp_lock_release>
810018fe:	90                   	nop
810018ff:	c9                   	leave  
81001900:	c3                   	ret    

81001901 <_fopen_r>:
81001901:	55                   	push   %ebp
81001902:	89 e5                	mov    %esp,%ebp
81001904:	56                   	push   %esi
81001905:	53                   	push   %ebx
81001906:	83 ec 10             	sub    $0x10,%esp
81001909:	83 ec 04             	sub    $0x4,%esp
8100190c:	8d 45 f0             	lea    -0x10(%ebp),%eax
8100190f:	50                   	push   %eax
81001910:	ff 75 10             	push   0x10(%ebp)
81001913:	ff 75 08             	push   0x8(%ebp)
81001916:	e8 07 4b 00 00       	call   81006422 <__sflags>
8100191b:	83 c4 10             	add    $0x10,%esp
8100191e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001921:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001925:	75 0a                	jne    81001931 <_fopen_r+0x30>
81001927:	b8 00 00 00 00       	mov    $0x0,%eax
8100192c:	e9 9e 00 00 00       	jmp    810019cf <_fopen_r+0xce>
81001931:	83 ec 0c             	sub    $0xc,%esp
81001934:	ff 75 08             	push   0x8(%ebp)
81001937:	e8 30 fd ff ff       	call   8100166c <__sfp>
8100193c:	83 c4 10             	add    $0x10,%esp
8100193f:	89 c3                	mov    %eax,%ebx
81001941:	85 db                	test   %ebx,%ebx
81001943:	75 0a                	jne    8100194f <_fopen_r+0x4e>
81001945:	b8 00 00 00 00       	mov    $0x0,%eax
8100194a:	e9 80 00 00 00       	jmp    810019cf <_fopen_r+0xce>
8100194f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001952:	68 b6 01 00 00       	push   $0x1b6
81001957:	50                   	push   %eax
81001958:	ff 75 0c             	push   0xc(%ebp)
8100195b:	ff 75 08             	push   0x8(%ebp)
8100195e:	e8 80 37 00 00       	call   810050e3 <_open_r>
81001963:	83 c4 10             	add    $0x10,%esp
81001966:	89 c6                	mov    %eax,%esi
81001968:	85 f6                	test   %esi,%esi
8100196a:	79 17                	jns    81001983 <_fopen_r+0x82>
8100196c:	e8 1c ff ff ff       	call   8100188d <__sfp_lock_acquire>
81001971:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81001977:	e8 17 ff ff ff       	call   81001893 <__sfp_lock_release>
8100197c:	b8 00 00 00 00       	mov    $0x0,%eax
81001981:	eb 4c                	jmp    810019cf <_fopen_r+0xce>
81001983:	89 f0                	mov    %esi,%eax
81001985:	66 89 43 0e          	mov    %ax,0xe(%ebx)
81001989:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100198c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001990:	89 5b 1c             	mov    %ebx,0x1c(%ebx)
81001993:	c7 43 20 3b 59 00 81 	movl   $0x8100593b,0x20(%ebx)
8100199a:	c7 43 24 89 59 00 81 	movl   $0x81005989,0x24(%ebx)
810019a1:	c7 43 28 e4 59 00 81 	movl   $0x810059e4,0x28(%ebx)
810019a8:	c7 43 2c 2e 5a 00 81 	movl   $0x81005a2e,0x2c(%ebx)
810019af:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810019b3:	98                   	cwtl   
810019b4:	25 00 01 00 00       	and    $0x100,%eax
810019b9:	85 c0                	test   %eax,%eax
810019bb:	74 10                	je     810019cd <_fopen_r+0xcc>
810019bd:	6a 02                	push   $0x2
810019bf:	6a 00                	push   $0x0
810019c1:	53                   	push   %ebx
810019c2:	ff 75 08             	push   0x8(%ebp)
810019c5:	e8 56 08 00 00       	call   81002220 <_fseek_r>
810019ca:	83 c4 10             	add    $0x10,%esp
810019cd:	89 d8                	mov    %ebx,%eax
810019cf:	8d 65 f8             	lea    -0x8(%ebp),%esp
810019d2:	5b                   	pop    %ebx
810019d3:	5e                   	pop    %esi
810019d4:	5d                   	pop    %ebp
810019d5:	c3                   	ret    

810019d6 <fopen>:
810019d6:	55                   	push   %ebp
810019d7:	89 e5                	mov    %esp,%ebp
810019d9:	83 ec 08             	sub    $0x8,%esp
810019dc:	a1 44 91 00 81       	mov    0x81009144,%eax
810019e1:	83 ec 04             	sub    $0x4,%esp
810019e4:	ff 75 0c             	push   0xc(%ebp)
810019e7:	ff 75 08             	push   0x8(%ebp)
810019ea:	50                   	push   %eax
810019eb:	e8 11 ff ff ff       	call   81001901 <_fopen_r>
810019f0:	83 c4 10             	add    $0x10,%esp
810019f3:	c9                   	leave  
810019f4:	c3                   	ret    

810019f5 <_fiprintf_r>:
810019f5:	55                   	push   %ebp
810019f6:	89 e5                	mov    %esp,%ebp
810019f8:	83 ec 18             	sub    $0x18,%esp
810019fb:	8d 45 14             	lea    0x14(%ebp),%eax
810019fe:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001a01:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a04:	50                   	push   %eax
81001a05:	ff 75 10             	push   0x10(%ebp)
81001a08:	ff 75 0c             	push   0xc(%ebp)
81001a0b:	ff 75 08             	push   0x8(%ebp)
81001a0e:	e8 90 2d 00 00       	call   810047a3 <_vfiprintf_r>
81001a13:	83 c4 10             	add    $0x10,%esp
81001a16:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001a19:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a1c:	c9                   	leave  
81001a1d:	c3                   	ret    

81001a1e <fiprintf>:
81001a1e:	55                   	push   %ebp
81001a1f:	89 e5                	mov    %esp,%ebp
81001a21:	83 ec 18             	sub    $0x18,%esp
81001a24:	8d 45 10             	lea    0x10(%ebp),%eax
81001a27:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001a2a:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001a2d:	a1 44 91 00 81       	mov    0x81009144,%eax
81001a32:	52                   	push   %edx
81001a33:	ff 75 0c             	push   0xc(%ebp)
81001a36:	ff 75 08             	push   0x8(%ebp)
81001a39:	50                   	push   %eax
81001a3a:	e8 64 2d 00 00       	call   810047a3 <_vfiprintf_r>
81001a3f:	83 c4 10             	add    $0x10,%esp
81001a42:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001a45:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a48:	c9                   	leave  
81001a49:	c3                   	ret    

81001a4a <_fread_r>:
81001a4a:	55                   	push   %ebp
81001a4b:	89 e5                	mov    %esp,%ebp
81001a4d:	57                   	push   %edi
81001a4e:	56                   	push   %esi
81001a4f:	53                   	push   %ebx
81001a50:	83 ec 2c             	sub    $0x2c,%esp
81001a53:	8b 45 14             	mov    0x14(%ebp),%eax
81001a56:	0f af 45 10          	imul   0x10(%ebp),%eax
81001a5a:	89 c3                	mov    %eax,%ebx
81001a5c:	85 db                	test   %ebx,%ebx
81001a5e:	75 0a                	jne    81001a6a <_fread_r+0x20>
81001a60:	b8 00 00 00 00       	mov    $0x0,%eax
81001a65:	e9 4d 02 00 00       	jmp    81001cb7 <_fread_r+0x26d>
81001a6a:	8b 45 08             	mov    0x8(%ebp),%eax
81001a6d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001a70:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001a74:	74 18                	je     81001a8e <_fread_r+0x44>
81001a76:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001a79:	8b 40 38             	mov    0x38(%eax),%eax
81001a7c:	85 c0                	test   %eax,%eax
81001a7e:	75 0e                	jne    81001a8e <_fread_r+0x44>
81001a80:	83 ec 0c             	sub    $0xc,%esp
81001a83:	ff 75 e4             	push   -0x1c(%ebp)
81001a86:	e8 69 fd ff ff       	call   810017f4 <__sinit>
81001a8b:	83 c4 10             	add    $0x10,%esp
81001a8e:	8b 45 18             	mov    0x18(%ebp),%eax
81001a91:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001a95:	98                   	cwtl   
81001a96:	25 00 20 00 00       	and    $0x2000,%eax
81001a9b:	85 c0                	test   %eax,%eax
81001a9d:	75 24                	jne    81001ac3 <_fread_r+0x79>
81001a9f:	8b 45 18             	mov    0x18(%ebp),%eax
81001aa2:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001aa6:	80 cc 20             	or     $0x20,%ah
81001aa9:	89 c2                	mov    %eax,%edx
81001aab:	8b 45 18             	mov    0x18(%ebp),%eax
81001aae:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001ab2:	8b 45 18             	mov    0x18(%ebp),%eax
81001ab5:	8b 40 64             	mov    0x64(%eax),%eax
81001ab8:	80 e4 df             	and    $0xdf,%ah
81001abb:	89 c2                	mov    %eax,%edx
81001abd:	8b 45 18             	mov    0x18(%ebp),%eax
81001ac0:	89 50 64             	mov    %edx,0x64(%eax)
81001ac3:	8b 45 18             	mov    0x18(%ebp),%eax
81001ac6:	8b 40 04             	mov    0x4(%eax),%eax
81001ac9:	85 c0                	test   %eax,%eax
81001acb:	79 0a                	jns    81001ad7 <_fread_r+0x8d>
81001acd:	8b 45 18             	mov    0x18(%ebp),%eax
81001ad0:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001ad7:	89 5d e0             	mov    %ebx,-0x20(%ebp)
81001ada:	8b 75 0c             	mov    0xc(%ebp),%esi
81001add:	8b 45 18             	mov    0x18(%ebp),%eax
81001ae0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001ae4:	98                   	cwtl   
81001ae5:	83 e0 02             	and    $0x2,%eax
81001ae8:	85 c0                	test   %eax,%eax
81001aea:	0f 84 88 01 00 00    	je     81001c78 <_fread_r+0x22e>
81001af0:	8b 45 18             	mov    0x18(%ebp),%eax
81001af3:	8b 40 04             	mov    0x4(%eax),%eax
81001af6:	39 c3                	cmp    %eax,%ebx
81001af8:	0f 46 c3             	cmovbe %ebx,%eax
81001afb:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001afe:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001b01:	8b 45 18             	mov    0x18(%ebp),%eax
81001b04:	8b 00                	mov    (%eax),%eax
81001b06:	83 ec 04             	sub    $0x4,%esp
81001b09:	52                   	push   %edx
81001b0a:	50                   	push   %eax
81001b0b:	56                   	push   %esi
81001b0c:	e8 a7 29 00 00       	call   810044b8 <memcpy>
81001b11:	83 c4 10             	add    $0x10,%esp
81001b14:	8b 45 18             	mov    0x18(%ebp),%eax
81001b17:	8b 10                	mov    (%eax),%edx
81001b19:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001b1c:	01 c2                	add    %eax,%edx
81001b1e:	8b 45 18             	mov    0x18(%ebp),%eax
81001b21:	89 10                	mov    %edx,(%eax)
81001b23:	8b 45 18             	mov    0x18(%ebp),%eax
81001b26:	8b 40 04             	mov    0x4(%eax),%eax
81001b29:	2b 45 dc             	sub    -0x24(%ebp),%eax
81001b2c:	89 c2                	mov    %eax,%edx
81001b2e:	8b 45 18             	mov    0x18(%ebp),%eax
81001b31:	89 50 04             	mov    %edx,0x4(%eax)
81001b34:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001b37:	01 c6                	add    %eax,%esi
81001b39:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001b3c:	29 c3                	sub    %eax,%ebx
81001b3e:	8b 45 18             	mov    0x18(%ebp),%eax
81001b41:	8b 40 30             	mov    0x30(%eax),%eax
81001b44:	85 c0                	test   %eax,%eax
81001b46:	0f 84 d0 00 00 00    	je     81001c1c <_fread_r+0x1d2>
81001b4c:	85 db                	test   %ebx,%ebx
81001b4e:	0f 84 c8 00 00 00    	je     81001c1c <_fread_r+0x1d2>
81001b54:	8b 45 18             	mov    0x18(%ebp),%eax
81001b57:	8b 40 30             	mov    0x30(%eax),%eax
81001b5a:	8b 55 18             	mov    0x18(%ebp),%edx
81001b5d:	83 c2 40             	add    $0x40,%edx
81001b60:	39 d0                	cmp    %edx,%eax
81001b62:	74 15                	je     81001b79 <_fread_r+0x12f>
81001b64:	8b 45 18             	mov    0x18(%ebp),%eax
81001b67:	8b 40 30             	mov    0x30(%eax),%eax
81001b6a:	83 ec 08             	sub    $0x8,%esp
81001b6d:	50                   	push   %eax
81001b6e:	ff 75 08             	push   0x8(%ebp)
81001b71:	e8 6e 01 00 00       	call   81001ce4 <_free_r>
81001b76:	83 c4 10             	add    $0x10,%esp
81001b79:	8b 45 18             	mov    0x18(%ebp),%eax
81001b7c:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81001b83:	e9 94 00 00 00       	jmp    81001c1c <_fread_r+0x1d2>
81001b88:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81001b8f:	8b 45 18             	mov    0x18(%ebp),%eax
81001b92:	8b 40 10             	mov    0x10(%eax),%eax
81001b95:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001b98:	8b 45 18             	mov    0x18(%ebp),%eax
81001b9b:	8b 00                	mov    (%eax),%eax
81001b9d:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001ba0:	8b 45 18             	mov    0x18(%ebp),%eax
81001ba3:	8b 40 14             	mov    0x14(%eax),%eax
81001ba6:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001ba9:	8b 45 18             	mov    0x18(%ebp),%eax
81001bac:	89 70 10             	mov    %esi,0x10(%eax)
81001baf:	89 da                	mov    %ebx,%edx
81001bb1:	8b 45 18             	mov    0x18(%ebp),%eax
81001bb4:	89 50 14             	mov    %edx,0x14(%eax)
81001bb7:	8b 45 18             	mov    0x18(%ebp),%eax
81001bba:	89 30                	mov    %esi,(%eax)
81001bbc:	83 ec 08             	sub    $0x8,%esp
81001bbf:	ff 75 18             	push   0x18(%ebp)
81001bc2:	ff 75 08             	push   0x8(%ebp)
81001bc5:	e8 77 38 00 00       	call   81005441 <__srefill_r>
81001bca:	83 c4 10             	add    $0x10,%esp
81001bcd:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001bd0:	8b 45 18             	mov    0x18(%ebp),%eax
81001bd3:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81001bd6:	89 50 10             	mov    %edx,0x10(%eax)
81001bd9:	8b 45 18             	mov    0x18(%ebp),%eax
81001bdc:	8b 55 cc             	mov    -0x34(%ebp),%edx
81001bdf:	89 50 14             	mov    %edx,0x14(%eax)
81001be2:	8b 45 18             	mov    0x18(%ebp),%eax
81001be5:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001be8:	89 10                	mov    %edx,(%eax)
81001bea:	8b 45 18             	mov    0x18(%ebp),%eax
81001bed:	8b 40 04             	mov    0x4(%eax),%eax
81001bf0:	29 c3                	sub    %eax,%ebx
81001bf2:	8b 45 18             	mov    0x18(%ebp),%eax
81001bf5:	8b 40 04             	mov    0x4(%eax),%eax
81001bf8:	01 c6                	add    %eax,%esi
81001bfa:	8b 45 18             	mov    0x18(%ebp),%eax
81001bfd:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001c04:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
81001c08:	74 12                	je     81001c1c <_fread_r+0x1d2>
81001c0a:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001c0d:	29 d8                	sub    %ebx,%eax
81001c0f:	ba 00 00 00 00       	mov    $0x0,%edx
81001c14:	f7 75 10             	divl   0x10(%ebp)
81001c17:	e9 9b 00 00 00       	jmp    81001cb7 <_fread_r+0x26d>
81001c1c:	85 db                	test   %ebx,%ebx
81001c1e:	0f 85 64 ff ff ff    	jne    81001b88 <_fread_r+0x13e>
81001c24:	e9 8b 00 00 00       	jmp    81001cb4 <_fread_r+0x26a>
81001c29:	89 fa                	mov    %edi,%edx
81001c2b:	8b 45 18             	mov    0x18(%ebp),%eax
81001c2e:	8b 00                	mov    (%eax),%eax
81001c30:	83 ec 04             	sub    $0x4,%esp
81001c33:	52                   	push   %edx
81001c34:	50                   	push   %eax
81001c35:	56                   	push   %esi
81001c36:	e8 7d 28 00 00       	call   810044b8 <memcpy>
81001c3b:	83 c4 10             	add    $0x10,%esp
81001c3e:	8b 45 18             	mov    0x18(%ebp),%eax
81001c41:	8b 00                	mov    (%eax),%eax
81001c43:	89 fa                	mov    %edi,%edx
81001c45:	01 c2                	add    %eax,%edx
81001c47:	8b 45 18             	mov    0x18(%ebp),%eax
81001c4a:	89 10                	mov    %edx,(%eax)
81001c4c:	89 f8                	mov    %edi,%eax
81001c4e:	01 c6                	add    %eax,%esi
81001c50:	89 f8                	mov    %edi,%eax
81001c52:	29 c3                	sub    %eax,%ebx
81001c54:	83 ec 08             	sub    $0x8,%esp
81001c57:	ff 75 18             	push   0x18(%ebp)
81001c5a:	ff 75 08             	push   0x8(%ebp)
81001c5d:	e8 df 37 00 00       	call   81005441 <__srefill_r>
81001c62:	83 c4 10             	add    $0x10,%esp
81001c65:	85 c0                	test   %eax,%eax
81001c67:	74 0f                	je     81001c78 <_fread_r+0x22e>
81001c69:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001c6c:	29 d8                	sub    %ebx,%eax
81001c6e:	ba 00 00 00 00       	mov    $0x0,%edx
81001c73:	f7 75 10             	divl   0x10(%ebp)
81001c76:	eb 3f                	jmp    81001cb7 <_fread_r+0x26d>
81001c78:	8b 45 18             	mov    0x18(%ebp),%eax
81001c7b:	8b 78 04             	mov    0x4(%eax),%edi
81001c7e:	89 f8                	mov    %edi,%eax
81001c80:	39 c3                	cmp    %eax,%ebx
81001c82:	77 a5                	ja     81001c29 <_fread_r+0x1df>
81001c84:	8b 45 18             	mov    0x18(%ebp),%eax
81001c87:	8b 00                	mov    (%eax),%eax
81001c89:	83 ec 04             	sub    $0x4,%esp
81001c8c:	53                   	push   %ebx
81001c8d:	50                   	push   %eax
81001c8e:	56                   	push   %esi
81001c8f:	e8 24 28 00 00       	call   810044b8 <memcpy>
81001c94:	83 c4 10             	add    $0x10,%esp
81001c97:	8b 45 18             	mov    0x18(%ebp),%eax
81001c9a:	8b 40 04             	mov    0x4(%eax),%eax
81001c9d:	29 d8                	sub    %ebx,%eax
81001c9f:	89 c2                	mov    %eax,%edx
81001ca1:	8b 45 18             	mov    0x18(%ebp),%eax
81001ca4:	89 50 04             	mov    %edx,0x4(%eax)
81001ca7:	8b 45 18             	mov    0x18(%ebp),%eax
81001caa:	8b 00                	mov    (%eax),%eax
81001cac:	8d 14 18             	lea    (%eax,%ebx,1),%edx
81001caf:	8b 45 18             	mov    0x18(%ebp),%eax
81001cb2:	89 10                	mov    %edx,(%eax)
81001cb4:	8b 45 14             	mov    0x14(%ebp),%eax
81001cb7:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001cba:	5b                   	pop    %ebx
81001cbb:	5e                   	pop    %esi
81001cbc:	5f                   	pop    %edi
81001cbd:	5d                   	pop    %ebp
81001cbe:	c3                   	ret    

81001cbf <fread>:
81001cbf:	55                   	push   %ebp
81001cc0:	89 e5                	mov    %esp,%ebp
81001cc2:	83 ec 08             	sub    $0x8,%esp
81001cc5:	a1 44 91 00 81       	mov    0x81009144,%eax
81001cca:	83 ec 0c             	sub    $0xc,%esp
81001ccd:	ff 75 14             	push   0x14(%ebp)
81001cd0:	ff 75 10             	push   0x10(%ebp)
81001cd3:	ff 75 0c             	push   0xc(%ebp)
81001cd6:	ff 75 08             	push   0x8(%ebp)
81001cd9:	50                   	push   %eax
81001cda:	e8 6b fd ff ff       	call   81001a4a <_fread_r>
81001cdf:	83 c4 20             	add    $0x20,%esp
81001ce2:	c9                   	leave  
81001ce3:	c3                   	ret    

81001ce4 <_free_r>:
81001ce4:	55                   	push   %ebp
81001ce5:	89 e5                	mov    %esp,%ebp
81001ce7:	53                   	push   %ebx
81001ce8:	83 ec 34             	sub    $0x34,%esp
81001ceb:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001cef:	0f 84 c4 03 00 00    	je     810020b9 <_free_r+0x3d5>
81001cf5:	83 ec 0c             	sub    $0xc,%esp
81001cf8:	ff 75 08             	push   0x8(%ebp)
81001cfb:	e8 88 28 00 00       	call   81004588 <__malloc_lock>
81001d00:	83 c4 10             	add    $0x10,%esp
81001d03:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d06:	83 e8 08             	sub    $0x8,%eax
81001d09:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001d0c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d0f:	8b 40 04             	mov    0x4(%eax),%eax
81001d12:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001d15:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001d18:	83 e0 fe             	and    $0xfffffffe,%eax
81001d1b:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001d1e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001d21:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001d24:	01 d0                	add    %edx,%eax
81001d26:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001d29:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001d2c:	8b 40 04             	mov    0x4(%eax),%eax
81001d2f:	83 e0 fc             	and    $0xfffffffc,%eax
81001d32:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001d35:	b8 60 91 00 81       	mov    $0x81009160,%eax
81001d3a:	8b 40 08             	mov    0x8(%eax),%eax
81001d3d:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81001d40:	0f 85 94 00 00 00    	jne    81001dda <_free_r+0xf6>
81001d46:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001d49:	01 45 f0             	add    %eax,-0x10(%ebp)
81001d4c:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001d4f:	83 e0 01             	and    $0x1,%eax
81001d52:	85 c0                	test   %eax,%eax
81001d54:	75 3a                	jne    81001d90 <_free_r+0xac>
81001d56:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d59:	8b 00                	mov    (%eax),%eax
81001d5b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001d5e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001d61:	f7 d8                	neg    %eax
81001d63:	01 45 f4             	add    %eax,-0xc(%ebp)
81001d66:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001d69:	01 45 f0             	add    %eax,-0x10(%ebp)
81001d6c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d6f:	8b 40 0c             	mov    0xc(%eax),%eax
81001d72:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001d75:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d78:	8b 40 08             	mov    0x8(%eax),%eax
81001d7b:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001d7e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001d81:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001d84:	89 50 0c             	mov    %edx,0xc(%eax)
81001d87:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001d8a:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001d8d:	89 50 08             	mov    %edx,0x8(%eax)
81001d90:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001d93:	83 c8 01             	or     $0x1,%eax
81001d96:	89 c2                	mov    %eax,%edx
81001d98:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d9b:	89 50 04             	mov    %edx,0x4(%eax)
81001d9e:	ba 60 91 00 81       	mov    $0x81009160,%edx
81001da3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001da6:	89 42 08             	mov    %eax,0x8(%edx)
81001da9:	a1 68 95 00 81       	mov    0x81009568,%eax
81001dae:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001db1:	72 14                	jb     81001dc7 <_free_r+0xe3>
81001db3:	a1 40 9e 00 81       	mov    0x81009e40,%eax
81001db8:	83 ec 08             	sub    $0x8,%esp
81001dbb:	50                   	push   %eax
81001dbc:	ff 75 08             	push   0x8(%ebp)
81001dbf:	e8 fb 02 00 00       	call   810020bf <_malloc_trim_r>
81001dc4:	83 c4 10             	add    $0x10,%esp
81001dc7:	83 ec 0c             	sub    $0xc,%esp
81001dca:	ff 75 08             	push   0x8(%ebp)
81001dcd:	e8 bc 27 00 00       	call   8100458e <__malloc_unlock>
81001dd2:	83 c4 10             	add    $0x10,%esp
81001dd5:	e9 e0 02 00 00       	jmp    810020ba <_free_r+0x3d6>
81001dda:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001ddd:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001de0:	89 50 04             	mov    %edx,0x4(%eax)
81001de3:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81001dea:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001ded:	83 e0 01             	and    $0x1,%eax
81001df0:	85 c0                	test   %eax,%eax
81001df2:	75 52                	jne    81001e46 <_free_r+0x162>
81001df4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001df7:	8b 00                	mov    (%eax),%eax
81001df9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001dfc:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001dff:	f7 d8                	neg    %eax
81001e01:	01 45 f4             	add    %eax,-0xc(%ebp)
81001e04:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001e07:	01 45 f0             	add    %eax,-0x10(%ebp)
81001e0a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e0d:	8b 40 08             	mov    0x8(%eax),%eax
81001e10:	ba 68 91 00 81       	mov    $0x81009168,%edx
81001e15:	39 d0                	cmp    %edx,%eax
81001e17:	75 09                	jne    81001e22 <_free_r+0x13e>
81001e19:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001e20:	eb 24                	jmp    81001e46 <_free_r+0x162>
81001e22:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e25:	8b 40 0c             	mov    0xc(%eax),%eax
81001e28:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001e2b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e2e:	8b 40 08             	mov    0x8(%eax),%eax
81001e31:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001e34:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001e37:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001e3a:	89 50 0c             	mov    %edx,0xc(%eax)
81001e3d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001e40:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001e43:	89 50 08             	mov    %edx,0x8(%eax)
81001e46:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001e49:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001e4c:	01 d0                	add    %edx,%eax
81001e4e:	8b 40 04             	mov    0x4(%eax),%eax
81001e51:	83 e0 01             	and    $0x1,%eax
81001e54:	85 c0                	test   %eax,%eax
81001e56:	75 75                	jne    81001ecd <_free_r+0x1e9>
81001e58:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001e5b:	01 45 f0             	add    %eax,-0x10(%ebp)
81001e5e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001e62:	75 45                	jne    81001ea9 <_free_r+0x1c5>
81001e64:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001e67:	8b 40 08             	mov    0x8(%eax),%eax
81001e6a:	ba 68 91 00 81       	mov    $0x81009168,%edx
81001e6f:	39 d0                	cmp    %edx,%eax
81001e71:	75 36                	jne    81001ea9 <_free_r+0x1c5>
81001e73:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001e7a:	b8 68 91 00 81       	mov    $0x81009168,%eax
81001e7f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001e82:	89 50 0c             	mov    %edx,0xc(%eax)
81001e85:	ba 68 91 00 81       	mov    $0x81009168,%edx
81001e8a:	8b 40 0c             	mov    0xc(%eax),%eax
81001e8d:	89 42 08             	mov    %eax,0x8(%edx)
81001e90:	ba 68 91 00 81       	mov    $0x81009168,%edx
81001e95:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e98:	89 50 0c             	mov    %edx,0xc(%eax)
81001e9b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e9e:	8b 50 0c             	mov    0xc(%eax),%edx
81001ea1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ea4:	89 50 08             	mov    %edx,0x8(%eax)
81001ea7:	eb 24                	jmp    81001ecd <_free_r+0x1e9>
81001ea9:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001eac:	8b 40 0c             	mov    0xc(%eax),%eax
81001eaf:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001eb2:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001eb5:	8b 40 08             	mov    0x8(%eax),%eax
81001eb8:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001ebb:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001ebe:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001ec1:	89 50 0c             	mov    %edx,0xc(%eax)
81001ec4:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001ec7:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001eca:	89 50 08             	mov    %edx,0x8(%eax)
81001ecd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ed0:	83 c8 01             	or     $0x1,%eax
81001ed3:	89 c2                	mov    %eax,%edx
81001ed5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ed8:	89 50 04             	mov    %edx,0x4(%eax)
81001edb:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001ede:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ee1:	01 c2                	add    %eax,%edx
81001ee3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ee6:	89 02                	mov    %eax,(%edx)
81001ee8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001eec:	0f 85 b7 01 00 00    	jne    810020a9 <_free_r+0x3c5>
81001ef2:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81001ef9:	77 7f                	ja     81001f7a <_free_r+0x296>
81001efb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001efe:	c1 e8 03             	shr    $0x3,%eax
81001f01:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001f04:	b8 60 91 00 81       	mov    $0x81009160,%eax
81001f09:	8b 58 04             	mov    0x4(%eax),%ebx
81001f0c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001f0f:	8d 50 03             	lea    0x3(%eax),%edx
81001f12:	85 c0                	test   %eax,%eax
81001f14:	0f 48 c2             	cmovs  %edx,%eax
81001f17:	c1 f8 02             	sar    $0x2,%eax
81001f1a:	ba 01 00 00 00       	mov    $0x1,%edx
81001f1f:	89 c1                	mov    %eax,%ecx
81001f21:	d3 e2                	shl    %cl,%edx
81001f23:	89 d0                	mov    %edx,%eax
81001f25:	ba 60 91 00 81       	mov    $0x81009160,%edx
81001f2a:	09 d8                	or     %ebx,%eax
81001f2c:	89 42 04             	mov    %eax,0x4(%edx)
81001f2f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001f32:	83 c0 01             	add    $0x1,%eax
81001f35:	01 c0                	add    %eax,%eax
81001f37:	c1 e0 02             	shl    $0x2,%eax
81001f3a:	05 60 91 00 81       	add    $0x81009160,%eax
81001f3f:	83 e8 08             	sub    $0x8,%eax
81001f42:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001f45:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001f48:	8b 40 08             	mov    0x8(%eax),%eax
81001f4b:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001f4e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f51:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001f54:	89 50 0c             	mov    %edx,0xc(%eax)
81001f57:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f5a:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001f5d:	89 50 08             	mov    %edx,0x8(%eax)
81001f60:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001f63:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001f66:	89 50 08             	mov    %edx,0x8(%eax)
81001f69:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001f6c:	8b 50 08             	mov    0x8(%eax),%edx
81001f6f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001f72:	89 50 0c             	mov    %edx,0xc(%eax)
81001f75:	e9 2f 01 00 00       	jmp    810020a9 <_free_r+0x3c5>
81001f7a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f7d:	c1 e8 09             	shr    $0x9,%eax
81001f80:	85 c0                	test   %eax,%eax
81001f82:	75 08                	jne    81001f8c <_free_r+0x2a8>
81001f84:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f87:	c1 e8 03             	shr    $0x3,%eax
81001f8a:	eb 77                	jmp    81002003 <_free_r+0x31f>
81001f8c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f8f:	c1 e8 09             	shr    $0x9,%eax
81001f92:	83 f8 04             	cmp    $0x4,%eax
81001f95:	77 0b                	ja     81001fa2 <_free_r+0x2be>
81001f97:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f9a:	c1 e8 06             	shr    $0x6,%eax
81001f9d:	83 c0 38             	add    $0x38,%eax
81001fa0:	eb 61                	jmp    81002003 <_free_r+0x31f>
81001fa2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fa5:	c1 e8 09             	shr    $0x9,%eax
81001fa8:	83 f8 14             	cmp    $0x14,%eax
81001fab:	77 0b                	ja     81001fb8 <_free_r+0x2d4>
81001fad:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fb0:	c1 e8 09             	shr    $0x9,%eax
81001fb3:	83 c0 5b             	add    $0x5b,%eax
81001fb6:	eb 4b                	jmp    81002003 <_free_r+0x31f>
81001fb8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fbb:	c1 e8 09             	shr    $0x9,%eax
81001fbe:	83 f8 54             	cmp    $0x54,%eax
81001fc1:	77 0b                	ja     81001fce <_free_r+0x2ea>
81001fc3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fc6:	c1 e8 0c             	shr    $0xc,%eax
81001fc9:	83 c0 6e             	add    $0x6e,%eax
81001fcc:	eb 35                	jmp    81002003 <_free_r+0x31f>
81001fce:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fd1:	c1 e8 09             	shr    $0x9,%eax
81001fd4:	3d 54 01 00 00       	cmp    $0x154,%eax
81001fd9:	77 0b                	ja     81001fe6 <_free_r+0x302>
81001fdb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fde:	c1 e8 0f             	shr    $0xf,%eax
81001fe1:	83 c0 77             	add    $0x77,%eax
81001fe4:	eb 1d                	jmp    81002003 <_free_r+0x31f>
81001fe6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fe9:	c1 e8 09             	shr    $0x9,%eax
81001fec:	3d 54 05 00 00       	cmp    $0x554,%eax
81001ff1:	77 0b                	ja     81001ffe <_free_r+0x31a>
81001ff3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ff6:	c1 e8 12             	shr    $0x12,%eax
81001ff9:	83 c0 7c             	add    $0x7c,%eax
81001ffc:	eb 05                	jmp    81002003 <_free_r+0x31f>
81001ffe:	b8 7e 00 00 00       	mov    $0x7e,%eax
81002003:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002006:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002009:	83 c0 01             	add    $0x1,%eax
8100200c:	01 c0                	add    %eax,%eax
8100200e:	c1 e0 02             	shl    $0x2,%eax
81002011:	05 60 91 00 81       	add    $0x81009160,%eax
81002016:	83 e8 08             	sub    $0x8,%eax
81002019:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100201c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100201f:	8b 40 08             	mov    0x8(%eax),%eax
81002022:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002025:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002028:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100202b:	75 36                	jne    81002063 <_free_r+0x37f>
8100202d:	b8 60 91 00 81       	mov    $0x81009160,%eax
81002032:	8b 58 04             	mov    0x4(%eax),%ebx
81002035:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002038:	8d 50 03             	lea    0x3(%eax),%edx
8100203b:	85 c0                	test   %eax,%eax
8100203d:	0f 48 c2             	cmovs  %edx,%eax
81002040:	c1 f8 02             	sar    $0x2,%eax
81002043:	ba 01 00 00 00       	mov    $0x1,%edx
81002048:	89 c1                	mov    %eax,%ecx
8100204a:	d3 e2                	shl    %cl,%edx
8100204c:	89 d0                	mov    %edx,%eax
8100204e:	ba 60 91 00 81       	mov    $0x81009160,%edx
81002053:	09 d8                	or     %ebx,%eax
81002055:	89 42 04             	mov    %eax,0x4(%edx)
81002058:	eb 28                	jmp    81002082 <_free_r+0x39e>
8100205a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100205d:	8b 40 08             	mov    0x8(%eax),%eax
81002060:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002063:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002066:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81002069:	74 0e                	je     81002079 <_free_r+0x395>
8100206b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100206e:	8b 40 04             	mov    0x4(%eax),%eax
81002071:	83 e0 fc             	and    $0xfffffffc,%eax
81002074:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81002077:	72 e1                	jb     8100205a <_free_r+0x376>
81002079:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100207c:	8b 40 0c             	mov    0xc(%eax),%eax
8100207f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002082:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002085:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002088:	89 50 0c             	mov    %edx,0xc(%eax)
8100208b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100208e:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002091:	89 50 08             	mov    %edx,0x8(%eax)
81002094:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002097:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100209a:	89 50 08             	mov    %edx,0x8(%eax)
8100209d:	8b 45 ec             	mov    -0x14(%ebp),%eax
810020a0:	8b 50 08             	mov    0x8(%eax),%edx
810020a3:	8b 45 e8             	mov    -0x18(%ebp),%eax
810020a6:	89 50 0c             	mov    %edx,0xc(%eax)
810020a9:	83 ec 0c             	sub    $0xc,%esp
810020ac:	ff 75 08             	push   0x8(%ebp)
810020af:	e8 da 24 00 00       	call   8100458e <__malloc_unlock>
810020b4:	83 c4 10             	add    $0x10,%esp
810020b7:	eb 01                	jmp    810020ba <_free_r+0x3d6>
810020b9:	90                   	nop
810020ba:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810020bd:	c9                   	leave  
810020be:	c3                   	ret    

810020bf <_malloc_trim_r>:
810020bf:	55                   	push   %ebp
810020c0:	89 e5                	mov    %esp,%ebp
810020c2:	83 ec 28             	sub    $0x28,%esp
810020c5:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
810020cc:	83 ec 0c             	sub    $0xc,%esp
810020cf:	ff 75 08             	push   0x8(%ebp)
810020d2:	e8 b1 24 00 00       	call   81004588 <__malloc_lock>
810020d7:	83 c4 10             	add    $0x10,%esp
810020da:	b8 60 91 00 81       	mov    $0x81009160,%eax
810020df:	8b 40 08             	mov    0x8(%eax),%eax
810020e2:	8b 40 04             	mov    0x4(%eax),%eax
810020e5:	83 e0 fc             	and    $0xfffffffc,%eax
810020e8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810020eb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810020ee:	2b 45 0c             	sub    0xc(%ebp),%eax
810020f1:	89 c2                	mov    %eax,%edx
810020f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810020f6:	01 d0                	add    %edx,%eax
810020f8:	83 e8 11             	sub    $0x11,%eax
810020fb:	ba 00 00 00 00       	mov    $0x0,%edx
81002100:	f7 75 f4             	divl   -0xc(%ebp)
81002103:	83 e8 01             	sub    $0x1,%eax
81002106:	0f af 45 f4          	imul   -0xc(%ebp),%eax
8100210a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100210d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002110:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002113:	7d 18                	jge    8100212d <_malloc_trim_r+0x6e>
81002115:	83 ec 0c             	sub    $0xc,%esp
81002118:	ff 75 08             	push   0x8(%ebp)
8100211b:	e8 6e 24 00 00       	call   8100458e <__malloc_unlock>
81002120:	83 c4 10             	add    $0x10,%esp
81002123:	b8 00 00 00 00       	mov    $0x0,%eax
81002128:	e9 f1 00 00 00       	jmp    8100221e <_malloc_trim_r+0x15f>
8100212d:	83 ec 08             	sub    $0x8,%esp
81002130:	6a 00                	push   $0x0
81002132:	ff 75 08             	push   0x8(%ebp)
81002135:	e8 08 35 00 00       	call   81005642 <_sbrk_r>
8100213a:	83 c4 10             	add    $0x10,%esp
8100213d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002140:	b8 60 91 00 81       	mov    $0x81009160,%eax
81002145:	8b 50 08             	mov    0x8(%eax),%edx
81002148:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100214b:	01 d0                	add    %edx,%eax
8100214d:	39 45 e8             	cmp    %eax,-0x18(%ebp)
81002150:	74 18                	je     8100216a <_malloc_trim_r+0xab>
81002152:	83 ec 0c             	sub    $0xc,%esp
81002155:	ff 75 08             	push   0x8(%ebp)
81002158:	e8 31 24 00 00       	call   8100458e <__malloc_unlock>
8100215d:	83 c4 10             	add    $0x10,%esp
81002160:	b8 00 00 00 00       	mov    $0x0,%eax
81002165:	e9 b4 00 00 00       	jmp    8100221e <_malloc_trim_r+0x15f>
8100216a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100216d:	f7 d8                	neg    %eax
8100216f:	83 ec 08             	sub    $0x8,%esp
81002172:	50                   	push   %eax
81002173:	ff 75 08             	push   0x8(%ebp)
81002176:	e8 c7 34 00 00       	call   81005642 <_sbrk_r>
8100217b:	83 c4 10             	add    $0x10,%esp
8100217e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002181:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002185:	75 61                	jne    810021e8 <_malloc_trim_r+0x129>
81002187:	83 ec 08             	sub    $0x8,%esp
8100218a:	6a 00                	push   $0x0
8100218c:	ff 75 08             	push   0x8(%ebp)
8100218f:	e8 ae 34 00 00       	call   81005642 <_sbrk_r>
81002194:	83 c4 10             	add    $0x10,%esp
81002197:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100219a:	b8 60 91 00 81       	mov    $0x81009160,%eax
8100219f:	8b 50 08             	mov    0x8(%eax),%edx
810021a2:	8b 45 e8             	mov    -0x18(%ebp),%eax
810021a5:	29 d0                	sub    %edx,%eax
810021a7:	89 45 f0             	mov    %eax,-0x10(%ebp)
810021aa:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
810021ae:	7e 23                	jle    810021d3 <_malloc_trim_r+0x114>
810021b0:	8b 15 6c 95 00 81    	mov    0x8100956c,%edx
810021b6:	8b 45 e8             	mov    -0x18(%ebp),%eax
810021b9:	29 d0                	sub    %edx,%eax
810021bb:	a3 60 9e 00 81       	mov    %eax,0x81009e60
810021c0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810021c3:	83 c8 01             	or     $0x1,%eax
810021c6:	89 c2                	mov    %eax,%edx
810021c8:	b8 60 91 00 81       	mov    $0x81009160,%eax
810021cd:	8b 40 08             	mov    0x8(%eax),%eax
810021d0:	89 50 04             	mov    %edx,0x4(%eax)
810021d3:	83 ec 0c             	sub    $0xc,%esp
810021d6:	ff 75 08             	push   0x8(%ebp)
810021d9:	e8 b0 23 00 00       	call   8100458e <__malloc_unlock>
810021de:	83 c4 10             	add    $0x10,%esp
810021e1:	b8 00 00 00 00       	mov    $0x0,%eax
810021e6:	eb 36                	jmp    8100221e <_malloc_trim_r+0x15f>
810021e8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810021eb:	2b 45 ec             	sub    -0x14(%ebp),%eax
810021ee:	83 c8 01             	or     $0x1,%eax
810021f1:	89 c2                	mov    %eax,%edx
810021f3:	b8 60 91 00 81       	mov    $0x81009160,%eax
810021f8:	8b 40 08             	mov    0x8(%eax),%eax
810021fb:	89 50 04             	mov    %edx,0x4(%eax)
810021fe:	a1 60 9e 00 81       	mov    0x81009e60,%eax
81002203:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002206:	a3 60 9e 00 81       	mov    %eax,0x81009e60
8100220b:	83 ec 0c             	sub    $0xc,%esp
8100220e:	ff 75 08             	push   0x8(%ebp)
81002211:	e8 78 23 00 00       	call   8100458e <__malloc_unlock>
81002216:	83 c4 10             	add    $0x10,%esp
81002219:	b8 01 00 00 00       	mov    $0x1,%eax
8100221e:	c9                   	leave  
8100221f:	c3                   	ret    

81002220 <_fseek_r>:
81002220:	55                   	push   %ebp
81002221:	89 e5                	mov    %esp,%ebp
81002223:	83 ec 08             	sub    $0x8,%esp
81002226:	8b 45 0c             	mov    0xc(%ebp),%eax
81002229:	ff 75 14             	push   0x14(%ebp)
8100222c:	ff 75 10             	push   0x10(%ebp)
8100222f:	50                   	push   %eax
81002230:	ff 75 08             	push   0x8(%ebp)
81002233:	e8 25 00 00 00       	call   8100225d <_fseeko_r>
81002238:	83 c4 10             	add    $0x10,%esp
8100223b:	c9                   	leave  
8100223c:	c3                   	ret    

8100223d <fseek>:
8100223d:	55                   	push   %ebp
8100223e:	89 e5                	mov    %esp,%ebp
81002240:	83 ec 08             	sub    $0x8,%esp
81002243:	8b 55 08             	mov    0x8(%ebp),%edx
81002246:	a1 44 91 00 81       	mov    0x81009144,%eax
8100224b:	ff 75 10             	push   0x10(%ebp)
8100224e:	ff 75 0c             	push   0xc(%ebp)
81002251:	52                   	push   %edx
81002252:	50                   	push   %eax
81002253:	e8 c8 ff ff ff       	call   81002220 <_fseek_r>
81002258:	83 c4 10             	add    $0x10,%esp
8100225b:	c9                   	leave  
8100225c:	c3                   	ret    

8100225d <_fseeko_r>:
8100225d:	55                   	push   %ebp
8100225e:	89 e5                	mov    %esp,%ebp
81002260:	56                   	push   %esi
81002261:	53                   	push   %ebx
81002262:	83 ec 60             	sub    $0x60,%esp
81002265:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002268:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100226f:	8b 45 08             	mov    0x8(%ebp),%eax
81002272:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002275:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002279:	74 18                	je     81002293 <_fseeko_r+0x36>
8100227b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100227e:	8b 40 38             	mov    0x38(%eax),%eax
81002281:	85 c0                	test   %eax,%eax
81002283:	75 0e                	jne    81002293 <_fseeko_r+0x36>
81002285:	83 ec 0c             	sub    $0xc,%esp
81002288:	ff 75 e4             	push   -0x1c(%ebp)
8100228b:	e8 64 f5 ff ff       	call   810017f4 <__sinit>
81002290:	83 c4 10             	add    $0x10,%esp
81002293:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002297:	98                   	cwtl   
81002298:	25 00 01 00 00       	and    $0x100,%eax
8100229d:	85 c0                	test   %eax,%eax
8100229f:	74 1b                	je     810022bc <_fseeko_r+0x5f>
810022a1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810022a5:	98                   	cwtl   
810022a6:	83 e0 08             	and    $0x8,%eax
810022a9:	85 c0                	test   %eax,%eax
810022ab:	74 0f                	je     810022bc <_fseeko_r+0x5f>
810022ad:	83 ec 08             	sub    $0x8,%esp
810022b0:	53                   	push   %ebx
810022b1:	ff 75 08             	push   0x8(%ebp)
810022b4:	e8 38 f0 ff ff       	call   810012f1 <_fflush_r>
810022b9:	83 c4 10             	add    $0x10,%esp
810022bc:	8b 43 28             	mov    0x28(%ebx),%eax
810022bf:	89 45 e0             	mov    %eax,-0x20(%ebp)
810022c2:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810022c6:	75 13                	jne    810022db <_fseeko_r+0x7e>
810022c8:	8b 45 08             	mov    0x8(%ebp),%eax
810022cb:	c7 00 1d 00 00 00    	movl   $0x1d,(%eax)
810022d1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810022d6:	e9 2c 04 00 00       	jmp    81002707 <_fseeko_r+0x4aa>
810022db:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
810022df:	0f 84 bc 00 00 00    	je     810023a1 <_fseeko_r+0x144>
810022e5:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
810022e9:	0f 8f bb 00 00 00    	jg     810023aa <_fseeko_r+0x14d>
810022ef:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810022f3:	0f 84 a8 00 00 00    	je     810023a1 <_fseeko_r+0x144>
810022f9:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
810022fd:	0f 85 a7 00 00 00    	jne    810023aa <_fseeko_r+0x14d>
81002303:	83 ec 08             	sub    $0x8,%esp
81002306:	53                   	push   %ebx
81002307:	ff 75 08             	push   0x8(%ebp)
8100230a:	e8 e2 ef ff ff       	call   810012f1 <_fflush_r>
8100230f:	83 c4 10             	add    $0x10,%esp
81002312:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002316:	98                   	cwtl   
81002317:	25 00 10 00 00       	and    $0x1000,%eax
8100231c:	85 c0                	test   %eax,%eax
8100231e:	74 08                	je     81002328 <_fseeko_r+0xcb>
81002320:	8b 43 50             	mov    0x50(%ebx),%eax
81002323:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002326:	eb 26                	jmp    8100234e <_fseeko_r+0xf1>
81002328:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100232b:	6a 01                	push   $0x1
8100232d:	6a 00                	push   $0x0
8100232f:	50                   	push   %eax
81002330:	ff 75 08             	push   0x8(%ebp)
81002333:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002336:	ff d0                	call   *%eax
81002338:	83 c4 10             	add    $0x10,%esp
8100233b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100233e:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81002342:	75 0a                	jne    8100234e <_fseeko_r+0xf1>
81002344:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002349:	e9 b9 03 00 00       	jmp    81002707 <_fseeko_r+0x4aa>
8100234e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002352:	98                   	cwtl   
81002353:	83 e0 04             	and    $0x4,%eax
81002356:	85 c0                	test   %eax,%eax
81002358:	74 15                	je     8100236f <_fseeko_r+0x112>
8100235a:	8b 43 04             	mov    0x4(%ebx),%eax
8100235d:	29 45 f0             	sub    %eax,-0x10(%ebp)
81002360:	8b 43 30             	mov    0x30(%ebx),%eax
81002363:	85 c0                	test   %eax,%eax
81002365:	74 24                	je     8100238b <_fseeko_r+0x12e>
81002367:	8b 43 3c             	mov    0x3c(%ebx),%eax
8100236a:	29 45 f0             	sub    %eax,-0x10(%ebp)
8100236d:	eb 1c                	jmp    8100238b <_fseeko_r+0x12e>
8100236f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002373:	98                   	cwtl   
81002374:	83 e0 08             	and    $0x8,%eax
81002377:	85 c0                	test   %eax,%eax
81002379:	74 10                	je     8100238b <_fseeko_r+0x12e>
8100237b:	8b 03                	mov    (%ebx),%eax
8100237d:	85 c0                	test   %eax,%eax
8100237f:	74 0a                	je     8100238b <_fseeko_r+0x12e>
81002381:	8b 03                	mov    (%ebx),%eax
81002383:	8b 53 10             	mov    0x10(%ebx),%edx
81002386:	29 d0                	sub    %edx,%eax
81002388:	01 45 f0             	add    %eax,-0x10(%ebp)
8100238b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100238e:	01 45 10             	add    %eax,0x10(%ebp)
81002391:	c7 45 14 00 00 00 00 	movl   $0x0,0x14(%ebp)
81002398:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
8100239f:	eb 1c                	jmp    810023bd <_fseeko_r+0x160>
810023a1:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810023a8:	eb 13                	jmp    810023bd <_fseeko_r+0x160>
810023aa:	8b 45 08             	mov    0x8(%ebp),%eax
810023ad:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
810023b3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810023b8:	e9 4a 03 00 00       	jmp    81002707 <_fseeko_r+0x4aa>
810023bd:	8b 43 10             	mov    0x10(%ebx),%eax
810023c0:	85 c0                	test   %eax,%eax
810023c2:	75 0f                	jne    810023d3 <_fseeko_r+0x176>
810023c4:	83 ec 08             	sub    $0x8,%esp
810023c7:	53                   	push   %ebx
810023c8:	ff 75 08             	push   0x8(%ebp)
810023cb:	e8 8b 13 00 00       	call   8100375b <__smakebuf_r>
810023d0:	83 c4 10             	add    $0x10,%esp
810023d3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810023d7:	98                   	cwtl   
810023d8:	25 1a 08 00 00       	and    $0x81a,%eax
810023dd:	85 c0                	test   %eax,%eax
810023df:	0f 85 7d 02 00 00    	jne    81002662 <_fseeko_r+0x405>
810023e5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810023e9:	98                   	cwtl   
810023ea:	25 00 04 00 00       	and    $0x400,%eax
810023ef:	85 c0                	test   %eax,%eax
810023f1:	75 5f                	jne    81002452 <_fseeko_r+0x1f5>
810023f3:	81 7d e0 e4 59 00 81 	cmpl   $0x810059e4,-0x20(%ebp)
810023fa:	75 34                	jne    81002430 <_fseeko_r+0x1d3>
810023fc:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002400:	66 85 c0             	test   %ax,%ax
81002403:	78 2b                	js     81002430 <_fseeko_r+0x1d3>
81002405:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002409:	98                   	cwtl   
8100240a:	83 ec 04             	sub    $0x4,%esp
8100240d:	8d 55 98             	lea    -0x68(%ebp),%edx
81002410:	52                   	push   %edx
81002411:	50                   	push   %eax
81002412:	ff 75 08             	push   0x8(%ebp)
81002415:	e8 14 03 00 00       	call   8100272e <_fstat_r>
8100241a:	83 c4 10             	add    $0x10,%esp
8100241d:	85 c0                	test   %eax,%eax
8100241f:	75 0f                	jne    81002430 <_fseeko_r+0x1d3>
81002421:	8b 45 9c             	mov    -0x64(%ebp),%eax
81002424:	25 00 f0 00 00       	and    $0xf000,%eax
81002429:	3d 00 80 00 00       	cmp    $0x8000,%eax
8100242e:	74 10                	je     81002440 <_fseeko_r+0x1e3>
81002430:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002434:	80 cc 08             	or     $0x8,%ah
81002437:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100243b:	e9 2f 02 00 00       	jmp    8100266f <_fseeko_r+0x412>
81002440:	c7 43 4c 00 04 00 00 	movl   $0x400,0x4c(%ebx)
81002447:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100244b:	80 cc 04             	or     $0x4,%ah
8100244e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002452:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81002456:	75 08                	jne    81002460 <_fseeko_r+0x203>
81002458:	8b 45 10             	mov    0x10(%ebp),%eax
8100245b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100245e:	eb 2b                	jmp    8100248b <_fseeko_r+0x22e>
81002460:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002464:	98                   	cwtl   
81002465:	83 ec 04             	sub    $0x4,%esp
81002468:	8d 55 98             	lea    -0x68(%ebp),%edx
8100246b:	52                   	push   %edx
8100246c:	50                   	push   %eax
8100246d:	ff 75 08             	push   0x8(%ebp)
81002470:	e8 b9 02 00 00       	call   8100272e <_fstat_r>
81002475:	83 c4 10             	add    $0x10,%esp
81002478:	85 c0                	test   %eax,%eax
8100247a:	0f 85 e5 01 00 00    	jne    81002665 <_fseeko_r+0x408>
81002480:	8b 55 a8             	mov    -0x58(%ebp),%edx
81002483:	8b 45 10             	mov    0x10(%ebp),%eax
81002486:	01 d0                	add    %edx,%eax
81002488:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100248b:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8100248f:	75 49                	jne    810024da <_fseeko_r+0x27d>
81002491:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002495:	98                   	cwtl   
81002496:	25 00 10 00 00       	and    $0x1000,%eax
8100249b:	85 c0                	test   %eax,%eax
8100249d:	74 08                	je     810024a7 <_fseeko_r+0x24a>
8100249f:	8b 43 50             	mov    0x50(%ebx),%eax
810024a2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810024a5:	eb 20                	jmp    810024c7 <_fseeko_r+0x26a>
810024a7:	8b 43 1c             	mov    0x1c(%ebx),%eax
810024aa:	6a 01                	push   $0x1
810024ac:	6a 00                	push   $0x0
810024ae:	50                   	push   %eax
810024af:	ff 75 08             	push   0x8(%ebp)
810024b2:	8b 45 e0             	mov    -0x20(%ebp),%eax
810024b5:	ff d0                	call   *%eax
810024b7:	83 c4 10             	add    $0x10,%esp
810024ba:	89 45 f0             	mov    %eax,-0x10(%ebp)
810024bd:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810024c1:	0f 84 a1 01 00 00    	je     81002668 <_fseeko_r+0x40b>
810024c7:	8b 43 04             	mov    0x4(%ebx),%eax
810024ca:	29 45 f0             	sub    %eax,-0x10(%ebp)
810024cd:	8b 43 30             	mov    0x30(%ebx),%eax
810024d0:	85 c0                	test   %eax,%eax
810024d2:	74 06                	je     810024da <_fseeko_r+0x27d>
810024d4:	8b 43 3c             	mov    0x3c(%ebx),%eax
810024d7:	29 45 f0             	sub    %eax,-0x10(%ebp)
810024da:	8b 43 30             	mov    0x30(%ebx),%eax
810024dd:	85 c0                	test   %eax,%eax
810024df:	74 22                	je     81002503 <_fseeko_r+0x2a6>
810024e1:	8b 43 04             	mov    0x4(%ebx),%eax
810024e4:	01 45 f0             	add    %eax,-0x10(%ebp)
810024e7:	8b 43 38             	mov    0x38(%ebx),%eax
810024ea:	8b 53 10             	mov    0x10(%ebx),%edx
810024ed:	29 d0                	sub    %edx,%eax
810024ef:	89 45 ec             	mov    %eax,-0x14(%ebp)
810024f2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810024f5:	2b 45 ec             	sub    -0x14(%ebp),%eax
810024f8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810024fb:	8b 43 3c             	mov    0x3c(%ebx),%eax
810024fe:	01 45 ec             	add    %eax,-0x14(%ebp)
81002501:	eb 19                	jmp    8100251c <_fseeko_r+0x2bf>
81002503:	8b 03                	mov    (%ebx),%eax
81002505:	8b 53 10             	mov    0x10(%ebx),%edx
81002508:	29 d0                	sub    %edx,%eax
8100250a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100250d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002510:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002513:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002516:	8b 43 04             	mov    0x4(%ebx),%eax
81002519:	01 45 ec             	add    %eax,-0x14(%ebp)
8100251c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100251f:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81002522:	7c 7c                	jl     810025a0 <_fseeko_r+0x343>
81002524:	8b 55 f0             	mov    -0x10(%ebp),%edx
81002527:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100252a:	01 c2                	add    %eax,%edx
8100252c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100252f:	39 c2                	cmp    %eax,%edx
81002531:	76 6d                	jbe    810025a0 <_fseeko_r+0x343>
81002533:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002536:	2b 45 f0             	sub    -0x10(%ebp),%eax
81002539:	89 c6                	mov    %eax,%esi
8100253b:	8b 43 10             	mov    0x10(%ebx),%eax
8100253e:	89 f2                	mov    %esi,%edx
81002540:	01 d0                	add    %edx,%eax
81002542:	89 03                	mov    %eax,(%ebx)
81002544:	89 f2                	mov    %esi,%edx
81002546:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002549:	29 d0                	sub    %edx,%eax
8100254b:	89 43 04             	mov    %eax,0x4(%ebx)
8100254e:	8b 43 30             	mov    0x30(%ebx),%eax
81002551:	85 c0                	test   %eax,%eax
81002553:	74 23                	je     81002578 <_fseeko_r+0x31b>
81002555:	8b 53 30             	mov    0x30(%ebx),%edx
81002558:	8d 43 40             	lea    0x40(%ebx),%eax
8100255b:	39 c2                	cmp    %eax,%edx
8100255d:	74 12                	je     81002571 <_fseeko_r+0x314>
8100255f:	8b 43 30             	mov    0x30(%ebx),%eax
81002562:	83 ec 08             	sub    $0x8,%esp
81002565:	50                   	push   %eax
81002566:	ff 75 08             	push   0x8(%ebp)
81002569:	e8 76 f7 ff ff       	call   81001ce4 <_free_r>
8100256e:	83 c4 10             	add    $0x10,%esp
81002571:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002578:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100257c:	83 e0 df             	and    $0xffffffdf,%eax
8100257f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002583:	8d 43 5c             	lea    0x5c(%ebx),%eax
81002586:	83 ec 04             	sub    $0x4,%esp
81002589:	6a 08                	push   $0x8
8100258b:	6a 00                	push   $0x0
8100258d:	50                   	push   %eax
8100258e:	e8 6d 1f 00 00       	call   81004500 <memset>
81002593:	83 c4 10             	add    $0x10,%esp
81002596:	b8 00 00 00 00       	mov    $0x0,%eax
8100259b:	e9 67 01 00 00       	jmp    81002707 <_fseeko_r+0x4aa>
810025a0:	8b 43 4c             	mov    0x4c(%ebx),%eax
810025a3:	f7 d8                	neg    %eax
810025a5:	23 45 f4             	and    -0xc(%ebp),%eax
810025a8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810025ab:	8b 43 1c             	mov    0x1c(%ebx),%eax
810025ae:	6a 00                	push   $0x0
810025b0:	ff 75 f0             	push   -0x10(%ebp)
810025b3:	50                   	push   %eax
810025b4:	ff 75 08             	push   0x8(%ebp)
810025b7:	8b 45 e0             	mov    -0x20(%ebp),%eax
810025ba:	ff d0                	call   *%eax
810025bc:	83 c4 10             	add    $0x10,%esp
810025bf:	83 f8 ff             	cmp    $0xffffffff,%eax
810025c2:	0f 84 a3 00 00 00    	je     8100266b <_fseeko_r+0x40e>
810025c8:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810025cf:	8b 43 10             	mov    0x10(%ebx),%eax
810025d2:	89 03                	mov    %eax,(%ebx)
810025d4:	8b 43 30             	mov    0x30(%ebx),%eax
810025d7:	85 c0                	test   %eax,%eax
810025d9:	74 23                	je     810025fe <_fseeko_r+0x3a1>
810025db:	8b 53 30             	mov    0x30(%ebx),%edx
810025de:	8d 43 40             	lea    0x40(%ebx),%eax
810025e1:	39 c2                	cmp    %eax,%edx
810025e3:	74 12                	je     810025f7 <_fseeko_r+0x39a>
810025e5:	8b 43 30             	mov    0x30(%ebx),%eax
810025e8:	83 ec 08             	sub    $0x8,%esp
810025eb:	50                   	push   %eax
810025ec:	ff 75 08             	push   0x8(%ebp)
810025ef:	e8 f0 f6 ff ff       	call   81001ce4 <_free_r>
810025f4:	83 c4 10             	add    $0x10,%esp
810025f7:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810025fe:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002602:	83 e0 df             	and    $0xffffffdf,%eax
81002605:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002609:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100260c:	2b 45 f0             	sub    -0x10(%ebp),%eax
8100260f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002612:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81002616:	74 2d                	je     81002645 <_fseeko_r+0x3e8>
81002618:	83 ec 08             	sub    $0x8,%esp
8100261b:	53                   	push   %ebx
8100261c:	ff 75 08             	push   0x8(%ebp)
8100261f:	e8 1d 2e 00 00       	call   81005441 <__srefill_r>
81002624:	83 c4 10             	add    $0x10,%esp
81002627:	85 c0                	test   %eax,%eax
81002629:	75 43                	jne    8100266e <_fseeko_r+0x411>
8100262b:	8b 43 04             	mov    0x4(%ebx),%eax
8100262e:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002631:	77 3b                	ja     8100266e <_fseeko_r+0x411>
81002633:	8b 13                	mov    (%ebx),%edx
81002635:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002638:	01 d0                	add    %edx,%eax
8100263a:	89 03                	mov    %eax,(%ebx)
8100263c:	8b 43 04             	mov    0x4(%ebx),%eax
8100263f:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002642:	89 43 04             	mov    %eax,0x4(%ebx)
81002645:	8d 43 5c             	lea    0x5c(%ebx),%eax
81002648:	83 ec 04             	sub    $0x4,%esp
8100264b:	6a 08                	push   $0x8
8100264d:	6a 00                	push   $0x0
8100264f:	50                   	push   %eax
81002650:	e8 ab 1e 00 00       	call   81004500 <memset>
81002655:	83 c4 10             	add    $0x10,%esp
81002658:	b8 00 00 00 00       	mov    $0x0,%eax
8100265d:	e9 a5 00 00 00       	jmp    81002707 <_fseeko_r+0x4aa>
81002662:	90                   	nop
81002663:	eb 0a                	jmp    8100266f <_fseeko_r+0x412>
81002665:	90                   	nop
81002666:	eb 07                	jmp    8100266f <_fseeko_r+0x412>
81002668:	90                   	nop
81002669:	eb 04                	jmp    8100266f <_fseeko_r+0x412>
8100266b:	90                   	nop
8100266c:	eb 01                	jmp    8100266f <_fseeko_r+0x412>
8100266e:	90                   	nop
8100266f:	83 ec 08             	sub    $0x8,%esp
81002672:	53                   	push   %ebx
81002673:	ff 75 08             	push   0x8(%ebp)
81002676:	e8 76 ec ff ff       	call   810012f1 <_fflush_r>
8100267b:	83 c4 10             	add    $0x10,%esp
8100267e:	85 c0                	test   %eax,%eax
81002680:	75 1a                	jne    8100269c <_fseeko_r+0x43f>
81002682:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002685:	ff 75 14             	push   0x14(%ebp)
81002688:	ff 75 10             	push   0x10(%ebp)
8100268b:	50                   	push   %eax
8100268c:	ff 75 08             	push   0x8(%ebp)
8100268f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002692:	ff d0                	call   *%eax
81002694:	83 c4 10             	add    $0x10,%esp
81002697:	83 f8 ff             	cmp    $0xffffffff,%eax
8100269a:	75 07                	jne    810026a3 <_fseeko_r+0x446>
8100269c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810026a1:	eb 64                	jmp    81002707 <_fseeko_r+0x4aa>
810026a3:	8b 43 30             	mov    0x30(%ebx),%eax
810026a6:	85 c0                	test   %eax,%eax
810026a8:	74 23                	je     810026cd <_fseeko_r+0x470>
810026aa:	8b 53 30             	mov    0x30(%ebx),%edx
810026ad:	8d 43 40             	lea    0x40(%ebx),%eax
810026b0:	39 c2                	cmp    %eax,%edx
810026b2:	74 12                	je     810026c6 <_fseeko_r+0x469>
810026b4:	8b 43 30             	mov    0x30(%ebx),%eax
810026b7:	83 ec 08             	sub    $0x8,%esp
810026ba:	50                   	push   %eax
810026bb:	ff 75 08             	push   0x8(%ebp)
810026be:	e8 21 f6 ff ff       	call   81001ce4 <_free_r>
810026c3:	83 c4 10             	add    $0x10,%esp
810026c6:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810026cd:	8b 43 10             	mov    0x10(%ebx),%eax
810026d0:	89 03                	mov    %eax,(%ebx)
810026d2:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810026d9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026dd:	83 e0 df             	and    $0xffffffdf,%eax
810026e0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810026e4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026e8:	80 e4 f7             	and    $0xf7,%ah
810026eb:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810026ef:	8d 43 5c             	lea    0x5c(%ebx),%eax
810026f2:	83 ec 04             	sub    $0x4,%esp
810026f5:	6a 08                	push   $0x8
810026f7:	6a 00                	push   $0x0
810026f9:	50                   	push   %eax
810026fa:	e8 01 1e 00 00       	call   81004500 <memset>
810026ff:	83 c4 10             	add    $0x10,%esp
81002702:	b8 00 00 00 00       	mov    $0x0,%eax
81002707:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100270a:	5b                   	pop    %ebx
8100270b:	5e                   	pop    %esi
8100270c:	5d                   	pop    %ebp
8100270d:	c3                   	ret    

8100270e <fseeko>:
8100270e:	55                   	push   %ebp
8100270f:	89 e5                	mov    %esp,%ebp
81002711:	83 ec 08             	sub    $0x8,%esp
81002714:	8b 55 08             	mov    0x8(%ebp),%edx
81002717:	a1 44 91 00 81       	mov    0x81009144,%eax
8100271c:	ff 75 10             	push   0x10(%ebp)
8100271f:	ff 75 0c             	push   0xc(%ebp)
81002722:	52                   	push   %edx
81002723:	50                   	push   %eax
81002724:	e8 34 fb ff ff       	call   8100225d <_fseeko_r>
81002729:	83 c4 10             	add    $0x10,%esp
8100272c:	c9                   	leave  
8100272d:	c3                   	ret    

8100272e <_fstat_r>:
8100272e:	55                   	push   %ebp
8100272f:	89 e5                	mov    %esp,%ebp
81002731:	83 ec 18             	sub    $0x18,%esp
81002734:	c7 05 8c 9e 00 81 00 	movl   $0x0,0x81009e8c
8100273b:	00 00 00 
8100273e:	83 ec 08             	sub    $0x8,%esp
81002741:	ff 75 10             	push   0x10(%ebp)
81002744:	ff 75 0c             	push   0xc(%ebp)
81002747:	e8 fa e5 ff ff       	call   81000d46 <fstat>
8100274c:	83 c4 10             	add    $0x10,%esp
8100274f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002752:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81002756:	75 14                	jne    8100276c <_fstat_r+0x3e>
81002758:	a1 8c 9e 00 81       	mov    0x81009e8c,%eax
8100275d:	85 c0                	test   %eax,%eax
8100275f:	74 0b                	je     8100276c <_fstat_r+0x3e>
81002761:	8b 15 8c 9e 00 81    	mov    0x81009e8c,%edx
81002767:	8b 45 08             	mov    0x8(%ebp),%eax
8100276a:	89 10                	mov    %edx,(%eax)
8100276c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100276f:	c9                   	leave  
81002770:	c3                   	ret    

81002771 <_fwalk>:
81002771:	55                   	push   %ebp
81002772:	89 e5                	mov    %esp,%ebp
81002774:	57                   	push   %edi
81002775:	56                   	push   %esi
81002776:	53                   	push   %ebx
81002777:	83 ec 1c             	sub    $0x1c,%esp
8100277a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002781:	8b 45 08             	mov    0x8(%ebp),%eax
81002784:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
8100278a:	eb 3e                	jmp    810027ca <_fwalk+0x59>
8100278c:	8b 5e 08             	mov    0x8(%esi),%ebx
8100278f:	8b 7e 04             	mov    0x4(%esi),%edi
81002792:	eb 2d                	jmp    810027c1 <_fwalk+0x50>
81002794:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002798:	66 85 c0             	test   %ax,%ax
8100279b:	74 21                	je     810027be <_fwalk+0x4d>
8100279d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810027a1:	66 83 f8 01          	cmp    $0x1,%ax
810027a5:	74 17                	je     810027be <_fwalk+0x4d>
810027a7:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810027ab:	66 83 f8 ff          	cmp    $0xffff,%ax
810027af:	74 0d                	je     810027be <_fwalk+0x4d>
810027b1:	83 ec 0c             	sub    $0xc,%esp
810027b4:	53                   	push   %ebx
810027b5:	ff 55 0c             	call   *0xc(%ebp)
810027b8:	83 c4 10             	add    $0x10,%esp
810027bb:	09 45 e4             	or     %eax,-0x1c(%ebp)
810027be:	83 c3 68             	add    $0x68,%ebx
810027c1:	83 ef 01             	sub    $0x1,%edi
810027c4:	85 ff                	test   %edi,%edi
810027c6:	79 cc                	jns    81002794 <_fwalk+0x23>
810027c8:	8b 36                	mov    (%esi),%esi
810027ca:	85 f6                	test   %esi,%esi
810027cc:	75 be                	jne    8100278c <_fwalk+0x1b>
810027ce:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810027d1:	8d 65 f4             	lea    -0xc(%ebp),%esp
810027d4:	5b                   	pop    %ebx
810027d5:	5e                   	pop    %esi
810027d6:	5f                   	pop    %edi
810027d7:	5d                   	pop    %ebp
810027d8:	c3                   	ret    

810027d9 <_fwalk_reent>:
810027d9:	55                   	push   %ebp
810027da:	89 e5                	mov    %esp,%ebp
810027dc:	57                   	push   %edi
810027dd:	56                   	push   %esi
810027de:	53                   	push   %ebx
810027df:	83 ec 1c             	sub    $0x1c,%esp
810027e2:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810027e9:	8b 45 08             	mov    0x8(%ebp),%eax
810027ec:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
810027f2:	eb 41                	jmp    81002835 <_fwalk_reent+0x5c>
810027f4:	8b 5e 08             	mov    0x8(%esi),%ebx
810027f7:	8b 7e 04             	mov    0x4(%esi),%edi
810027fa:	eb 30                	jmp    8100282c <_fwalk_reent+0x53>
810027fc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002800:	66 85 c0             	test   %ax,%ax
81002803:	74 24                	je     81002829 <_fwalk_reent+0x50>
81002805:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002809:	66 83 f8 01          	cmp    $0x1,%ax
8100280d:	74 1a                	je     81002829 <_fwalk_reent+0x50>
8100280f:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002813:	66 83 f8 ff          	cmp    $0xffff,%ax
81002817:	74 10                	je     81002829 <_fwalk_reent+0x50>
81002819:	83 ec 08             	sub    $0x8,%esp
8100281c:	53                   	push   %ebx
8100281d:	ff 75 08             	push   0x8(%ebp)
81002820:	ff 55 0c             	call   *0xc(%ebp)
81002823:	83 c4 10             	add    $0x10,%esp
81002826:	09 45 e4             	or     %eax,-0x1c(%ebp)
81002829:	83 c3 68             	add    $0x68,%ebx
8100282c:	83 ef 01             	sub    $0x1,%edi
8100282f:	85 ff                	test   %edi,%edi
81002831:	79 c9                	jns    810027fc <_fwalk_reent+0x23>
81002833:	8b 36                	mov    (%esi),%esi
81002835:	85 f6                	test   %esi,%esi
81002837:	75 bb                	jne    810027f4 <_fwalk_reent+0x1b>
81002839:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100283c:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100283f:	5b                   	pop    %ebx
81002840:	5e                   	pop    %esi
81002841:	5f                   	pop    %edi
81002842:	5d                   	pop    %ebp
81002843:	c3                   	ret    

81002844 <_fwrite_r>:
81002844:	55                   	push   %ebp
81002845:	89 e5                	mov    %esp,%ebp
81002847:	83 ec 28             	sub    $0x28,%esp
8100284a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100284d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002850:	8b 45 14             	mov    0x14(%ebp),%eax
81002853:	0f af 45 10          	imul   0x10(%ebp),%eax
81002857:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100285a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100285d:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002860:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002863:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002866:	8d 45 dc             	lea    -0x24(%ebp),%eax
81002869:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100286c:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81002873:	8b 45 08             	mov    0x8(%ebp),%eax
81002876:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002879:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100287d:	74 18                	je     81002897 <_fwrite_r+0x53>
8100287f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002882:	8b 40 38             	mov    0x38(%eax),%eax
81002885:	85 c0                	test   %eax,%eax
81002887:	75 0e                	jne    81002897 <_fwrite_r+0x53>
81002889:	83 ec 0c             	sub    $0xc,%esp
8100288c:	ff 75 f0             	push   -0x10(%ebp)
8100288f:	e8 60 ef ff ff       	call   810017f4 <__sinit>
81002894:	83 c4 10             	add    $0x10,%esp
81002897:	8b 45 18             	mov    0x18(%ebp),%eax
8100289a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100289e:	98                   	cwtl   
8100289f:	25 00 20 00 00       	and    $0x2000,%eax
810028a4:	85 c0                	test   %eax,%eax
810028a6:	75 24                	jne    810028cc <_fwrite_r+0x88>
810028a8:	8b 45 18             	mov    0x18(%ebp),%eax
810028ab:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810028af:	80 cc 20             	or     $0x20,%ah
810028b2:	89 c2                	mov    %eax,%edx
810028b4:	8b 45 18             	mov    0x18(%ebp),%eax
810028b7:	66 89 50 0c          	mov    %dx,0xc(%eax)
810028bb:	8b 45 18             	mov    0x18(%ebp),%eax
810028be:	8b 40 64             	mov    0x64(%eax),%eax
810028c1:	80 e4 df             	and    $0xdf,%ah
810028c4:	89 c2                	mov    %eax,%edx
810028c6:	8b 45 18             	mov    0x18(%ebp),%eax
810028c9:	89 50 64             	mov    %edx,0x64(%eax)
810028cc:	83 ec 04             	sub    $0x4,%esp
810028cf:	8d 45 e4             	lea    -0x1c(%ebp),%eax
810028d2:	50                   	push   %eax
810028d3:	ff 75 18             	push   0x18(%ebp)
810028d6:	ff 75 08             	push   0x8(%ebp)
810028d9:	e8 0c 3f 00 00       	call   810067ea <__sfvwrite_r>
810028de:	83 c4 10             	add    $0x10,%esp
810028e1:	85 c0                	test   %eax,%eax
810028e3:	75 05                	jne    810028ea <_fwrite_r+0xa6>
810028e5:	8b 45 14             	mov    0x14(%ebp),%eax
810028e8:	eb 10                	jmp    810028fa <_fwrite_r+0xb6>
810028ea:	8b 55 ec             	mov    -0x14(%ebp),%edx
810028ed:	8b 45 f4             	mov    -0xc(%ebp),%eax
810028f0:	29 d0                	sub    %edx,%eax
810028f2:	ba 00 00 00 00       	mov    $0x0,%edx
810028f7:	f7 75 10             	divl   0x10(%ebp)
810028fa:	c9                   	leave  
810028fb:	c3                   	ret    

810028fc <fwrite>:
810028fc:	55                   	push   %ebp
810028fd:	89 e5                	mov    %esp,%ebp
810028ff:	83 ec 08             	sub    $0x8,%esp
81002902:	a1 44 91 00 81       	mov    0x81009144,%eax
81002907:	83 ec 0c             	sub    $0xc,%esp
8100290a:	ff 75 14             	push   0x14(%ebp)
8100290d:	ff 75 10             	push   0x10(%ebp)
81002910:	ff 75 0c             	push   0xc(%ebp)
81002913:	ff 75 08             	push   0x8(%ebp)
81002916:	50                   	push   %eax
81002917:	e8 28 ff ff ff       	call   81002844 <_fwrite_r>
8100291c:	83 c4 20             	add    $0x20,%esp
8100291f:	c9                   	leave  
81002920:	c3                   	ret    

81002921 <_getchar_r>:
81002921:	55                   	push   %ebp
81002922:	89 e5                	mov    %esp,%ebp
81002924:	83 ec 08             	sub    $0x8,%esp
81002927:	8b 45 08             	mov    0x8(%ebp),%eax
8100292a:	8b 40 04             	mov    0x4(%eax),%eax
8100292d:	83 ec 08             	sub    $0x8,%esp
81002930:	50                   	push   %eax
81002931:	ff 75 08             	push   0x8(%ebp)
81002934:	e8 4f 43 00 00       	call   81006c88 <_getc_r>
81002939:	83 c4 10             	add    $0x10,%esp
8100293c:	c9                   	leave  
8100293d:	c3                   	ret    

8100293e <getchar>:
8100293e:	55                   	push   %ebp
8100293f:	89 e5                	mov    %esp,%ebp
81002941:	83 ec 18             	sub    $0x18,%esp
81002944:	a1 44 91 00 81       	mov    0x81009144,%eax
81002949:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100294c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100294f:	8b 40 04             	mov    0x4(%eax),%eax
81002952:	83 ec 08             	sub    $0x8,%esp
81002955:	50                   	push   %eax
81002956:	ff 75 f4             	push   -0xc(%ebp)
81002959:	e8 2a 43 00 00       	call   81006c88 <_getc_r>
8100295e:	83 c4 10             	add    $0x10,%esp
81002961:	c9                   	leave  
81002962:	c3                   	ret    

81002963 <reverse_argv_elements>:
81002963:	55                   	push   %ebp
81002964:	89 e5                	mov    %esp,%ebp
81002966:	83 ec 10             	sub    $0x10,%esp
81002969:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
81002970:	eb 5e                	jmp    810029d0 <reverse_argv_elements+0x6d>
81002972:	8b 45 fc             	mov    -0x4(%ebp),%eax
81002975:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100297c:	8b 45 08             	mov    0x8(%ebp),%eax
8100297f:	01 d0                	add    %edx,%eax
81002981:	8b 00                	mov    (%eax),%eax
81002983:	89 45 f8             	mov    %eax,-0x8(%ebp)
81002986:	8b 45 0c             	mov    0xc(%ebp),%eax
81002989:	2b 45 fc             	sub    -0x4(%ebp),%eax
8100298c:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81002991:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002998:	8b 45 08             	mov    0x8(%ebp),%eax
8100299b:	01 d0                	add    %edx,%eax
8100299d:	8b 55 fc             	mov    -0x4(%ebp),%edx
810029a0:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
810029a7:	8b 55 08             	mov    0x8(%ebp),%edx
810029aa:	01 ca                	add    %ecx,%edx
810029ac:	8b 00                	mov    (%eax),%eax
810029ae:	89 02                	mov    %eax,(%edx)
810029b0:	8b 45 0c             	mov    0xc(%ebp),%eax
810029b3:	2b 45 fc             	sub    -0x4(%ebp),%eax
810029b6:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
810029bb:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810029c2:	8b 45 08             	mov    0x8(%ebp),%eax
810029c5:	01 c2                	add    %eax,%edx
810029c7:	8b 45 f8             	mov    -0x8(%ebp),%eax
810029ca:	89 02                	mov    %eax,(%edx)
810029cc:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
810029d0:	8b 45 0c             	mov    0xc(%ebp),%eax
810029d3:	d1 f8                	sar    %eax
810029d5:	39 45 fc             	cmp    %eax,-0x4(%ebp)
810029d8:	7c 98                	jl     81002972 <reverse_argv_elements+0xf>
810029da:	90                   	nop
810029db:	90                   	nop
810029dc:	c9                   	leave  
810029dd:	c3                   	ret    

810029de <permute>:
810029de:	55                   	push   %ebp
810029df:	89 e5                	mov    %esp,%ebp
810029e1:	ff 75 0c             	push   0xc(%ebp)
810029e4:	ff 75 08             	push   0x8(%ebp)
810029e7:	e8 77 ff ff ff       	call   81002963 <reverse_argv_elements>
810029ec:	83 c4 08             	add    $0x8,%esp
810029ef:	8b 55 0c             	mov    0xc(%ebp),%edx
810029f2:	8b 45 10             	mov    0x10(%ebp),%eax
810029f5:	01 d0                	add    %edx,%eax
810029f7:	50                   	push   %eax
810029f8:	ff 75 08             	push   0x8(%ebp)
810029fb:	e8 63 ff ff ff       	call   81002963 <reverse_argv_elements>
81002a00:	83 c4 08             	add    $0x8,%esp
81002a03:	ff 75 10             	push   0x10(%ebp)
81002a06:	ff 75 08             	push   0x8(%ebp)
81002a09:	e8 55 ff ff ff       	call   81002963 <reverse_argv_elements>
81002a0e:	83 c4 08             	add    $0x8,%esp
81002a11:	90                   	nop
81002a12:	c9                   	leave  
81002a13:	c3                   	ret    

81002a14 <is_option>:
81002a14:	55                   	push   %ebp
81002a15:	89 e5                	mov    %esp,%ebp
81002a17:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81002a1b:	74 1a                	je     81002a37 <is_option+0x23>
81002a1d:	8b 45 08             	mov    0x8(%ebp),%eax
81002a20:	0f b6 00             	movzbl (%eax),%eax
81002a23:	3c 2d                	cmp    $0x2d,%al
81002a25:	74 10                	je     81002a37 <is_option+0x23>
81002a27:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81002a2b:	74 11                	je     81002a3e <is_option+0x2a>
81002a2d:	8b 45 08             	mov    0x8(%ebp),%eax
81002a30:	0f b6 00             	movzbl (%eax),%eax
81002a33:	3c 2b                	cmp    $0x2b,%al
81002a35:	75 07                	jne    81002a3e <is_option+0x2a>
81002a37:	b8 01 00 00 00       	mov    $0x1,%eax
81002a3c:	eb 05                	jmp    81002a43 <is_option+0x2f>
81002a3e:	b8 00 00 00 00       	mov    $0x0,%eax
81002a43:	5d                   	pop    %ebp
81002a44:	c3                   	ret    

81002a45 <read_globals>:
81002a45:	55                   	push   %ebp
81002a46:	89 e5                	mov    %esp,%ebp
81002a48:	8b 15 28 9e 00 81    	mov    0x81009e28,%edx
81002a4e:	8b 45 08             	mov    0x8(%ebp),%eax
81002a51:	89 10                	mov    %edx,(%eax)
81002a53:	8b 15 2c 9e 00 81    	mov    0x81009e2c,%edx
81002a59:	8b 45 08             	mov    0x8(%ebp),%eax
81002a5c:	89 50 04             	mov    %edx,0x4(%eax)
81002a5f:	8b 15 04 8d 00 81    	mov    0x81008d04,%edx
81002a65:	8b 45 08             	mov    0x8(%ebp),%eax
81002a68:	89 50 08             	mov    %edx,0x8(%eax)
81002a6b:	8b 15 08 8d 00 81    	mov    0x81008d08,%edx
81002a71:	8b 45 08             	mov    0x8(%ebp),%eax
81002a74:	89 50 0c             	mov    %edx,0xc(%eax)
81002a77:	8b 15 30 9e 00 81    	mov    0x81009e30,%edx
81002a7d:	8b 45 08             	mov    0x8(%ebp),%eax
81002a80:	89 50 10             	mov    %edx,0x10(%eax)
81002a83:	8b 15 34 9e 00 81    	mov    0x81009e34,%edx
81002a89:	8b 45 08             	mov    0x8(%ebp),%eax
81002a8c:	89 50 14             	mov    %edx,0x14(%eax)
81002a8f:	8b 15 38 9e 00 81    	mov    0x81009e38,%edx
81002a95:	8b 45 08             	mov    0x8(%ebp),%eax
81002a98:	89 50 18             	mov    %edx,0x18(%eax)
81002a9b:	90                   	nop
81002a9c:	5d                   	pop    %ebp
81002a9d:	c3                   	ret    

81002a9e <write_globals>:
81002a9e:	55                   	push   %ebp
81002a9f:	89 e5                	mov    %esp,%ebp
81002aa1:	8b 45 08             	mov    0x8(%ebp),%eax
81002aa4:	8b 00                	mov    (%eax),%eax
81002aa6:	a3 28 9e 00 81       	mov    %eax,0x81009e28
81002aab:	8b 45 08             	mov    0x8(%ebp),%eax
81002aae:	8b 40 04             	mov    0x4(%eax),%eax
81002ab1:	a3 2c 9e 00 81       	mov    %eax,0x81009e2c
81002ab6:	8b 45 08             	mov    0x8(%ebp),%eax
81002ab9:	8b 40 08             	mov    0x8(%eax),%eax
81002abc:	a3 04 8d 00 81       	mov    %eax,0x81008d04
81002ac1:	8b 45 08             	mov    0x8(%ebp),%eax
81002ac4:	8b 40 0c             	mov    0xc(%eax),%eax
81002ac7:	a3 08 8d 00 81       	mov    %eax,0x81008d08
81002acc:	8b 45 08             	mov    0x8(%ebp),%eax
81002acf:	8b 40 10             	mov    0x10(%eax),%eax
81002ad2:	a3 30 9e 00 81       	mov    %eax,0x81009e30
81002ad7:	8b 45 08             	mov    0x8(%ebp),%eax
81002ada:	8b 40 14             	mov    0x14(%eax),%eax
81002add:	a3 34 9e 00 81       	mov    %eax,0x81009e34
81002ae2:	8b 45 08             	mov    0x8(%ebp),%eax
81002ae5:	8b 40 18             	mov    0x18(%eax),%eax
81002ae8:	a3 38 9e 00 81       	mov    %eax,0x81009e38
81002aed:	90                   	nop
81002aee:	5d                   	pop    %ebp
81002aef:	c3                   	ret    

81002af0 <getopt_internal>:
81002af0:	55                   	push   %ebp
81002af1:	89 e5                	mov    %esp,%ebp
81002af3:	53                   	push   %ebx
81002af4:	83 ec 34             	sub    $0x34,%esp
81002af7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81002afe:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002b05:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81002b0c:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81002b13:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81002b1a:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81002b21:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
81002b28:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81002b2f:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81002b36:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81002b3a:	74 35                	je     81002b71 <getopt_internal+0x81>
81002b3c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81002b40:	74 2f                	je     81002b71 <getopt_internal+0x81>
81002b42:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002b46:	75 06                	jne    81002b4e <getopt_internal+0x5e>
81002b48:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81002b4c:	74 23                	je     81002b71 <getopt_internal+0x81>
81002b4e:	8b 45 20             	mov    0x20(%ebp),%eax
81002b51:	8b 40 04             	mov    0x4(%eax),%eax
81002b54:	39 45 08             	cmp    %eax,0x8(%ebp)
81002b57:	7e 18                	jle    81002b71 <getopt_internal+0x81>
81002b59:	8b 45 20             	mov    0x20(%ebp),%eax
81002b5c:	8b 40 04             	mov    0x4(%eax),%eax
81002b5f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002b66:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b69:	01 d0                	add    %edx,%eax
81002b6b:	8b 00                	mov    (%eax),%eax
81002b6d:	85 c0                	test   %eax,%eax
81002b6f:	75 0a                	jne    81002b7b <getopt_internal+0x8b>
81002b71:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002b76:	e9 85 0a 00 00       	jmp    81003600 <getopt_internal+0xb10>
81002b7b:	8b 45 20             	mov    0x20(%ebp),%eax
81002b7e:	8b 40 04             	mov    0x4(%eax),%eax
81002b81:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002b88:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b8b:	01 d0                	add    %edx,%eax
81002b8d:	8b 00                	mov    (%eax),%eax
81002b8f:	83 ec 08             	sub    $0x8,%esp
81002b92:	68 08 89 00 81       	push   $0x81008908
81002b97:	50                   	push   %eax
81002b98:	e8 bf 2f 00 00       	call   81005b5c <strcmp>
81002b9d:	83 c4 10             	add    $0x10,%esp
81002ba0:	85 c0                	test   %eax,%eax
81002ba2:	75 19                	jne    81002bbd <getopt_internal+0xcd>
81002ba4:	8b 45 20             	mov    0x20(%ebp),%eax
81002ba7:	8b 40 04             	mov    0x4(%eax),%eax
81002baa:	8d 50 01             	lea    0x1(%eax),%edx
81002bad:	8b 45 20             	mov    0x20(%ebp),%eax
81002bb0:	89 50 04             	mov    %edx,0x4(%eax)
81002bb3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002bb8:	e9 43 0a 00 00       	jmp    81003600 <getopt_internal+0xb10>
81002bbd:	8b 45 20             	mov    0x20(%ebp),%eax
81002bc0:	8b 40 04             	mov    0x4(%eax),%eax
81002bc3:	85 c0                	test   %eax,%eax
81002bc5:	75 28                	jne    81002bef <getopt_internal+0xff>
81002bc7:	8b 45 20             	mov    0x20(%ebp),%eax
81002bca:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81002bd1:	8b 45 20             	mov    0x20(%ebp),%eax
81002bd4:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002bdb:	8b 45 20             	mov    0x20(%ebp),%eax
81002bde:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81002be5:	8b 45 20             	mov    0x20(%ebp),%eax
81002be8:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81002bef:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002bf3:	74 33                	je     81002c28 <getopt_internal+0x138>
81002bf5:	8b 45 10             	mov    0x10(%ebp),%eax
81002bf8:	0f b6 00             	movzbl (%eax),%eax
81002bfb:	3c 2d                	cmp    $0x2d,%al
81002bfd:	74 0a                	je     81002c09 <getopt_internal+0x119>
81002bff:	8b 45 10             	mov    0x10(%ebp),%eax
81002c02:	0f b6 00             	movzbl (%eax),%eax
81002c05:	3c 2b                	cmp    $0x2b,%al
81002c07:	75 1f                	jne    81002c28 <getopt_internal+0x138>
81002c09:	8b 45 10             	mov    0x10(%ebp),%eax
81002c0c:	0f b6 00             	movzbl (%eax),%eax
81002c0f:	3c 2d                	cmp    $0x2d,%al
81002c11:	75 07                	jne    81002c1a <getopt_internal+0x12a>
81002c13:	b8 01 00 00 00       	mov    $0x1,%eax
81002c18:	eb 05                	jmp    81002c1f <getopt_internal+0x12f>
81002c1a:	b8 02 00 00 00       	mov    $0x2,%eax
81002c1f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002c22:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81002c26:	eb 23                	jmp    81002c4b <getopt_internal+0x15b>
81002c28:	83 ec 0c             	sub    $0xc,%esp
81002c2b:	68 0b 89 00 81       	push   $0x8100890b
81002c30:	e8 49 41 00 00       	call   81006d7e <getenv>
81002c35:	83 c4 10             	add    $0x10,%esp
81002c38:	85 c0                	test   %eax,%eax
81002c3a:	74 07                	je     81002c43 <getopt_internal+0x153>
81002c3c:	b8 02 00 00 00       	mov    $0x2,%eax
81002c41:	eb 05                	jmp    81002c48 <getopt_internal+0x158>
81002c43:	b8 00 00 00 00       	mov    $0x0,%eax
81002c48:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002c4b:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002c4f:	74 15                	je     81002c66 <getopt_internal+0x176>
81002c51:	8b 45 10             	mov    0x10(%ebp),%eax
81002c54:	0f b6 00             	movzbl (%eax),%eax
81002c57:	3c 3a                	cmp    $0x3a,%al
81002c59:	75 0b                	jne    81002c66 <getopt_internal+0x176>
81002c5b:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81002c5f:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
81002c66:	8b 45 20             	mov    0x20(%ebp),%eax
81002c69:	8b 40 10             	mov    0x10(%eax),%eax
81002c6c:	83 f8 01             	cmp    $0x1,%eax
81002c6f:	0f 85 a2 01 00 00    	jne    81002e17 <getopt_internal+0x327>
81002c75:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
81002c79:	0f 84 02 01 00 00    	je     81002d81 <getopt_internal+0x291>
81002c7f:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
81002c83:	0f 84 56 01 00 00    	je     81002ddf <getopt_internal+0x2ef>
81002c89:	8b 45 20             	mov    0x20(%ebp),%eax
81002c8c:	8b 50 04             	mov    0x4(%eax),%edx
81002c8f:	8b 45 20             	mov    0x20(%ebp),%eax
81002c92:	89 50 14             	mov    %edx,0x14(%eax)
81002c95:	8b 45 20             	mov    0x20(%ebp),%eax
81002c98:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81002c9f:	eb 1e                	jmp    81002cbf <getopt_internal+0x1cf>
81002ca1:	8b 45 20             	mov    0x20(%ebp),%eax
81002ca4:	8b 40 04             	mov    0x4(%eax),%eax
81002ca7:	8d 50 01             	lea    0x1(%eax),%edx
81002caa:	8b 45 20             	mov    0x20(%ebp),%eax
81002cad:	89 50 04             	mov    %edx,0x4(%eax)
81002cb0:	8b 45 20             	mov    0x20(%ebp),%eax
81002cb3:	8b 40 18             	mov    0x18(%eax),%eax
81002cb6:	8d 50 01             	lea    0x1(%eax),%edx
81002cb9:	8b 45 20             	mov    0x20(%ebp),%eax
81002cbc:	89 50 18             	mov    %edx,0x18(%eax)
81002cbf:	8b 45 20             	mov    0x20(%ebp),%eax
81002cc2:	8b 40 04             	mov    0x4(%eax),%eax
81002cc5:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002ccc:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ccf:	01 d0                	add    %edx,%eax
81002cd1:	8b 00                	mov    (%eax),%eax
81002cd3:	83 ec 08             	sub    $0x8,%esp
81002cd6:	ff 75 1c             	push   0x1c(%ebp)
81002cd9:	50                   	push   %eax
81002cda:	e8 35 fd ff ff       	call   81002a14 <is_option>
81002cdf:	83 c4 10             	add    $0x10,%esp
81002ce2:	85 c0                	test   %eax,%eax
81002ce4:	74 bb                	je     81002ca1 <getopt_internal+0x1b1>
81002ce6:	8b 45 20             	mov    0x20(%ebp),%eax
81002ce9:	8b 40 04             	mov    0x4(%eax),%eax
81002cec:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002cf3:	8b 45 0c             	mov    0xc(%ebp),%eax
81002cf6:	01 d0                	add    %edx,%eax
81002cf8:	8b 00                	mov    (%eax),%eax
81002cfa:	85 c0                	test   %eax,%eax
81002cfc:	75 16                	jne    81002d14 <getopt_internal+0x224>
81002cfe:	8b 45 20             	mov    0x20(%ebp),%eax
81002d01:	8b 50 14             	mov    0x14(%eax),%edx
81002d04:	8b 45 20             	mov    0x20(%ebp),%eax
81002d07:	89 50 04             	mov    %edx,0x4(%eax)
81002d0a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002d0f:	e9 ec 08 00 00       	jmp    81003600 <getopt_internal+0xb10>
81002d14:	8b 45 20             	mov    0x20(%ebp),%eax
81002d17:	8b 40 04             	mov    0x4(%eax),%eax
81002d1a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002d21:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d24:	01 d0                	add    %edx,%eax
81002d26:	8b 00                	mov    (%eax),%eax
81002d28:	83 ec 08             	sub    $0x8,%esp
81002d2b:	68 08 89 00 81       	push   $0x81008908
81002d30:	50                   	push   %eax
81002d31:	e8 26 2e 00 00       	call   81005b5c <strcmp>
81002d36:	83 c4 10             	add    $0x10,%esp
81002d39:	85 c0                	test   %eax,%eax
81002d3b:	0f 85 cf 00 00 00    	jne    81002e10 <getopt_internal+0x320>
81002d41:	8b 45 20             	mov    0x20(%ebp),%eax
81002d44:	8b 40 18             	mov    0x18(%eax),%eax
81002d47:	8b 55 20             	mov    0x20(%ebp),%edx
81002d4a:	8b 52 14             	mov    0x14(%edx),%edx
81002d4d:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002d54:	8b 55 0c             	mov    0xc(%ebp),%edx
81002d57:	01 ca                	add    %ecx,%edx
81002d59:	83 ec 04             	sub    $0x4,%esp
81002d5c:	6a 01                	push   $0x1
81002d5e:	50                   	push   %eax
81002d5f:	52                   	push   %edx
81002d60:	e8 79 fc ff ff       	call   810029de <permute>
81002d65:	83 c4 10             	add    $0x10,%esp
81002d68:	8b 45 20             	mov    0x20(%ebp),%eax
81002d6b:	8b 40 14             	mov    0x14(%eax),%eax
81002d6e:	8d 50 01             	lea    0x1(%eax),%edx
81002d71:	8b 45 20             	mov    0x20(%ebp),%eax
81002d74:	89 50 04             	mov    %edx,0x4(%eax)
81002d77:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002d7c:	e9 7f 08 00 00       	jmp    81003600 <getopt_internal+0xb10>
81002d81:	8b 45 20             	mov    0x20(%ebp),%eax
81002d84:	8b 40 04             	mov    0x4(%eax),%eax
81002d87:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002d8e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d91:	01 d0                	add    %edx,%eax
81002d93:	8b 00                	mov    (%eax),%eax
81002d95:	83 ec 08             	sub    $0x8,%esp
81002d98:	ff 75 1c             	push   0x1c(%ebp)
81002d9b:	50                   	push   %eax
81002d9c:	e8 73 fc ff ff       	call   81002a14 <is_option>
81002da1:	83 c4 10             	add    $0x10,%esp
81002da4:	85 c0                	test   %eax,%eax
81002da6:	75 6b                	jne    81002e13 <getopt_internal+0x323>
81002da8:	8b 45 20             	mov    0x20(%ebp),%eax
81002dab:	8b 40 04             	mov    0x4(%eax),%eax
81002dae:	8d 48 01             	lea    0x1(%eax),%ecx
81002db1:	8b 55 20             	mov    0x20(%ebp),%edx
81002db4:	89 4a 04             	mov    %ecx,0x4(%edx)
81002db7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002dbe:	8b 45 0c             	mov    0xc(%ebp),%eax
81002dc1:	01 d0                	add    %edx,%eax
81002dc3:	8b 10                	mov    (%eax),%edx
81002dc5:	8b 45 20             	mov    0x20(%ebp),%eax
81002dc8:	89 10                	mov    %edx,(%eax)
81002dca:	8b 45 20             	mov    0x20(%ebp),%eax
81002dcd:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
81002dd4:	8b 45 20             	mov    0x20(%ebp),%eax
81002dd7:	8b 40 0c             	mov    0xc(%eax),%eax
81002dda:	e9 21 08 00 00       	jmp    81003600 <getopt_internal+0xb10>
81002ddf:	8b 45 20             	mov    0x20(%ebp),%eax
81002de2:	8b 40 04             	mov    0x4(%eax),%eax
81002de5:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002dec:	8b 45 0c             	mov    0xc(%ebp),%eax
81002def:	01 d0                	add    %edx,%eax
81002df1:	8b 00                	mov    (%eax),%eax
81002df3:	83 ec 08             	sub    $0x8,%esp
81002df6:	ff 75 1c             	push   0x1c(%ebp)
81002df9:	50                   	push   %eax
81002dfa:	e8 15 fc ff ff       	call   81002a14 <is_option>
81002dff:	83 c4 10             	add    $0x10,%esp
81002e02:	85 c0                	test   %eax,%eax
81002e04:	75 10                	jne    81002e16 <getopt_internal+0x326>
81002e06:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002e0b:	e9 f0 07 00 00       	jmp    81003600 <getopt_internal+0xb10>
81002e10:	90                   	nop
81002e11:	eb 04                	jmp    81002e17 <getopt_internal+0x327>
81002e13:	90                   	nop
81002e14:	eb 01                	jmp    81002e17 <getopt_internal+0x327>
81002e16:	90                   	nop
81002e17:	8b 45 20             	mov    0x20(%ebp),%eax
81002e1a:	8b 40 04             	mov    0x4(%eax),%eax
81002e1d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002e24:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e27:	01 d0                	add    %edx,%eax
81002e29:	8b 00                	mov    (%eax),%eax
81002e2b:	85 c0                	test   %eax,%eax
81002e2d:	75 0a                	jne    81002e39 <getopt_internal+0x349>
81002e2f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002e34:	e9 c7 07 00 00       	jmp    81003600 <getopt_internal+0xb10>
81002e39:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81002e3d:	0f 84 15 03 00 00    	je     81003158 <getopt_internal+0x668>
81002e43:	8b 45 20             	mov    0x20(%ebp),%eax
81002e46:	8b 40 04             	mov    0x4(%eax),%eax
81002e49:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002e50:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e53:	01 d0                	add    %edx,%eax
81002e55:	8b 00                	mov    (%eax),%eax
81002e57:	83 ec 04             	sub    $0x4,%esp
81002e5a:	6a 02                	push   $0x2
81002e5c:	68 08 89 00 81       	push   $0x81008908
81002e61:	50                   	push   %eax
81002e62:	e8 fe 15 00 00       	call   81004465 <memcmp>
81002e67:	83 c4 10             	add    $0x10,%esp
81002e6a:	85 c0                	test   %eax,%eax
81002e6c:	74 29                	je     81002e97 <getopt_internal+0x3a7>
81002e6e:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
81002e72:	0f 84 e0 02 00 00    	je     81003158 <getopt_internal+0x668>
81002e78:	8b 45 20             	mov    0x20(%ebp),%eax
81002e7b:	8b 40 04             	mov    0x4(%eax),%eax
81002e7e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002e85:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e88:	01 d0                	add    %edx,%eax
81002e8a:	8b 00                	mov    (%eax),%eax
81002e8c:	0f b6 00             	movzbl (%eax),%eax
81002e8f:	3c 2b                	cmp    $0x2b,%al
81002e91:	0f 85 c1 02 00 00    	jne    81003158 <getopt_internal+0x668>
81002e97:	8b 45 20             	mov    0x20(%ebp),%eax
81002e9a:	8b 40 10             	mov    0x10(%eax),%eax
81002e9d:	83 f8 01             	cmp    $0x1,%eax
81002ea0:	0f 85 b2 02 00 00    	jne    81003158 <getopt_internal+0x668>
81002ea6:	8b 45 20             	mov    0x20(%ebp),%eax
81002ea9:	8b 40 04             	mov    0x4(%eax),%eax
81002eac:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002eb3:	8b 45 0c             	mov    0xc(%ebp),%eax
81002eb6:	01 d0                	add    %edx,%eax
81002eb8:	8b 00                	mov    (%eax),%eax
81002eba:	83 ec 04             	sub    $0x4,%esp
81002ebd:	6a 02                	push   $0x2
81002ebf:	68 08 89 00 81       	push   $0x81008908
81002ec4:	50                   	push   %eax
81002ec5:	e8 9b 15 00 00       	call   81004465 <memcmp>
81002eca:	83 c4 10             	add    $0x10,%esp
81002ecd:	85 c0                	test   %eax,%eax
81002ecf:	75 0a                	jne    81002edb <getopt_internal+0x3eb>
81002ed1:	8b 45 20             	mov    0x20(%ebp),%eax
81002ed4:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
81002edb:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81002ee2:	8b 45 20             	mov    0x20(%ebp),%eax
81002ee5:	8b 40 04             	mov    0x4(%eax),%eax
81002ee8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002eef:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ef2:	01 d0                	add    %edx,%eax
81002ef4:	8b 10                	mov    (%eax),%edx
81002ef6:	8b 45 20             	mov    0x20(%ebp),%eax
81002ef9:	8b 40 10             	mov    0x10(%eax),%eax
81002efc:	01 d0                	add    %edx,%eax
81002efe:	83 ec 08             	sub    $0x8,%esp
81002f01:	6a 3d                	push   $0x3d
81002f03:	50                   	push   %eax
81002f04:	e8 57 2b 00 00       	call   81005a60 <strchr>
81002f09:	83 c4 10             	add    $0x10,%esp
81002f0c:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002f0f:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002f13:	75 4a                	jne    81002f5f <getopt_internal+0x46f>
81002f15:	8b 45 20             	mov    0x20(%ebp),%eax
81002f18:	8b 40 04             	mov    0x4(%eax),%eax
81002f1b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002f22:	8b 45 0c             	mov    0xc(%ebp),%eax
81002f25:	01 d0                	add    %edx,%eax
81002f27:	8b 00                	mov    (%eax),%eax
81002f29:	83 ec 0c             	sub    $0xc,%esp
81002f2c:	50                   	push   %eax
81002f2d:	e8 de 2c 00 00       	call   81005c10 <strlen>
81002f32:	83 c4 10             	add    $0x10,%esp
81002f35:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002f38:	8b 45 20             	mov    0x20(%ebp),%eax
81002f3b:	8b 40 04             	mov    0x4(%eax),%eax
81002f3e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002f45:	8b 45 0c             	mov    0xc(%ebp),%eax
81002f48:	01 d0                	add    %edx,%eax
81002f4a:	8b 10                	mov    (%eax),%edx
81002f4c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002f4f:	01 d0                	add    %edx,%eax
81002f51:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002f54:	8b 45 20             	mov    0x20(%ebp),%eax
81002f57:	8b 40 10             	mov    0x10(%eax),%eax
81002f5a:	29 45 ec             	sub    %eax,-0x14(%ebp)
81002f5d:	eb 28                	jmp    81002f87 <getopt_internal+0x497>
81002f5f:	8b 45 20             	mov    0x20(%ebp),%eax
81002f62:	8b 40 04             	mov    0x4(%eax),%eax
81002f65:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002f6c:	8b 45 0c             	mov    0xc(%ebp),%eax
81002f6f:	01 d0                	add    %edx,%eax
81002f71:	8b 08                	mov    (%eax),%ecx
81002f73:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002f76:	29 c8                	sub    %ecx,%eax
81002f78:	89 c2                	mov    %eax,%edx
81002f7a:	8b 45 20             	mov    0x20(%ebp),%eax
81002f7d:	8b 48 10             	mov    0x10(%eax),%ecx
81002f80:	89 d0                	mov    %edx,%eax
81002f82:	29 c8                	sub    %ecx,%eax
81002f84:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002f87:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002f8e:	e9 95 01 00 00       	jmp    81003128 <getopt_internal+0x638>
81002f93:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f96:	c1 e0 04             	shl    $0x4,%eax
81002f99:	89 c2                	mov    %eax,%edx
81002f9b:	8b 45 14             	mov    0x14(%ebp),%eax
81002f9e:	01 d0                	add    %edx,%eax
81002fa0:	8b 00                	mov    (%eax),%eax
81002fa2:	8b 55 20             	mov    0x20(%ebp),%edx
81002fa5:	8b 52 04             	mov    0x4(%edx),%edx
81002fa8:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002faf:	8b 55 0c             	mov    0xc(%ebp),%edx
81002fb2:	01 ca                	add    %ecx,%edx
81002fb4:	8b 0a                	mov    (%edx),%ecx
81002fb6:	8b 55 20             	mov    0x20(%ebp),%edx
81002fb9:	8b 52 10             	mov    0x10(%edx),%edx
81002fbc:	01 ca                	add    %ecx,%edx
81002fbe:	83 ec 04             	sub    $0x4,%esp
81002fc1:	ff 75 ec             	push   -0x14(%ebp)
81002fc4:	50                   	push   %eax
81002fc5:	52                   	push   %edx
81002fc6:	e8 9a 14 00 00       	call   81004465 <memcmp>
81002fcb:	83 c4 10             	add    $0x10,%esp
81002fce:	85 c0                	test   %eax,%eax
81002fd0:	0f 85 4e 01 00 00    	jne    81003124 <getopt_internal+0x634>
81002fd6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002fd9:	c1 e0 04             	shl    $0x4,%eax
81002fdc:	89 c2                	mov    %eax,%edx
81002fde:	8b 45 14             	mov    0x14(%ebp),%eax
81002fe1:	01 d0                	add    %edx,%eax
81002fe3:	8b 00                	mov    (%eax),%eax
81002fe5:	83 ec 0c             	sub    $0xc,%esp
81002fe8:	50                   	push   %eax
81002fe9:	e8 22 2c 00 00       	call   81005c10 <strlen>
81002fee:	83 c4 10             	add    $0x10,%esp
81002ff1:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002ff4:	75 0b                	jne    81003001 <getopt_internal+0x511>
81002ff6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002ff9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002ffc:	e9 3e 01 00 00       	jmp    8100313f <getopt_internal+0x64f>
81003001:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003005:	79 0b                	jns    81003012 <getopt_internal+0x522>
81003007:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100300a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100300d:	e9 12 01 00 00       	jmp    81003124 <getopt_internal+0x634>
81003012:	8b 45 20             	mov    0x20(%ebp),%eax
81003015:	8b 40 08             	mov    0x8(%eax),%eax
81003018:	85 c0                	test   %eax,%eax
8100301a:	0f 84 ef 00 00 00    	je     8100310f <getopt_internal+0x61f>
81003020:	a1 44 91 00 81       	mov    0x81009144,%eax
81003025:	8b 50 0c             	mov    0xc(%eax),%edx
81003028:	8b 45 0c             	mov    0xc(%ebp),%eax
8100302b:	8b 00                	mov    (%eax),%eax
8100302d:	83 ec 08             	sub    $0x8,%esp
81003030:	52                   	push   %edx
81003031:	50                   	push   %eax
81003032:	e8 df 35 00 00       	call   81006616 <fputs>
81003037:	83 c4 10             	add    $0x10,%esp
8100303a:	a1 44 91 00 81       	mov    0x81009144,%eax
8100303f:	8b 40 0c             	mov    0xc(%eax),%eax
81003042:	83 ec 08             	sub    $0x8,%esp
81003045:	50                   	push   %eax
81003046:	68 1b 89 00 81       	push   $0x8100891b
8100304b:	e8 c6 35 00 00       	call   81006616 <fputs>
81003050:	83 c4 10             	add    $0x10,%esp
81003053:	a1 44 91 00 81       	mov    0x81009144,%eax
81003058:	8b 50 0c             	mov    0xc(%eax),%edx
8100305b:	8b 45 20             	mov    0x20(%ebp),%eax
8100305e:	8b 40 04             	mov    0x4(%eax),%eax
81003061:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81003068:	8b 45 0c             	mov    0xc(%ebp),%eax
8100306b:	01 c8                	add    %ecx,%eax
8100306d:	8b 00                	mov    (%eax),%eax
8100306f:	83 ec 08             	sub    $0x8,%esp
81003072:	52                   	push   %edx
81003073:	50                   	push   %eax
81003074:	e8 9d 35 00 00       	call   81006616 <fputs>
81003079:	83 c4 10             	add    $0x10,%esp
8100307c:	a1 44 91 00 81       	mov    0x81009144,%eax
81003081:	8b 40 0c             	mov    0xc(%eax),%eax
81003084:	83 ec 08             	sub    $0x8,%esp
81003087:	50                   	push   %eax
81003088:	68 26 89 00 81       	push   $0x81008926
8100308d:	e8 84 35 00 00       	call   81006616 <fputs>
81003092:	83 c4 10             	add    $0x10,%esp
81003095:	a1 44 91 00 81       	mov    0x81009144,%eax
8100309a:	8b 50 0c             	mov    0xc(%eax),%edx
8100309d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810030a0:	c1 e0 04             	shl    $0x4,%eax
810030a3:	89 c1                	mov    %eax,%ecx
810030a5:	8b 45 14             	mov    0x14(%ebp),%eax
810030a8:	01 c8                	add    %ecx,%eax
810030aa:	8b 00                	mov    (%eax),%eax
810030ac:	83 ec 08             	sub    $0x8,%esp
810030af:	52                   	push   %edx
810030b0:	50                   	push   %eax
810030b1:	e8 60 35 00 00       	call   81006616 <fputs>
810030b6:	83 c4 10             	add    $0x10,%esp
810030b9:	a1 44 91 00 81       	mov    0x81009144,%eax
810030be:	8b 40 0c             	mov    0xc(%eax),%eax
810030c1:	83 ec 08             	sub    $0x8,%esp
810030c4:	50                   	push   %eax
810030c5:	68 43 89 00 81       	push   $0x81008943
810030ca:	e8 47 35 00 00       	call   81006616 <fputs>
810030cf:	83 c4 10             	add    $0x10,%esp
810030d2:	a1 44 91 00 81       	mov    0x81009144,%eax
810030d7:	8b 50 0c             	mov    0xc(%eax),%edx
810030da:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030dd:	c1 e0 04             	shl    $0x4,%eax
810030e0:	89 c1                	mov    %eax,%ecx
810030e2:	8b 45 14             	mov    0x14(%ebp),%eax
810030e5:	01 c8                	add    %ecx,%eax
810030e7:	8b 00                	mov    (%eax),%eax
810030e9:	83 ec 08             	sub    $0x8,%esp
810030ec:	52                   	push   %edx
810030ed:	50                   	push   %eax
810030ee:	e8 23 35 00 00       	call   81006616 <fputs>
810030f3:	83 c4 10             	add    $0x10,%esp
810030f6:	a1 44 91 00 81       	mov    0x81009144,%eax
810030fb:	8b 40 0c             	mov    0xc(%eax),%eax
810030fe:	83 ec 08             	sub    $0x8,%esp
81003101:	50                   	push   %eax
81003102:	68 4c 89 00 81       	push   $0x8100894c
81003107:	e8 0a 35 00 00       	call   81006616 <fputs>
8100310c:	83 c4 10             	add    $0x10,%esp
8100310f:	8b 45 20             	mov    0x20(%ebp),%eax
81003112:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81003119:	8b 45 20             	mov    0x20(%ebp),%eax
8100311c:	8b 40 0c             	mov    0xc(%eax),%eax
8100311f:	e9 dc 04 00 00       	jmp    81003600 <getopt_internal+0xb10>
81003124:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003128:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100312b:	c1 e0 04             	shl    $0x4,%eax
8100312e:	89 c2                	mov    %eax,%edx
81003130:	8b 45 14             	mov    0x14(%ebp),%eax
81003133:	01 d0                	add    %edx,%eax
81003135:	8b 00                	mov    (%eax),%eax
81003137:	85 c0                	test   %eax,%eax
81003139:	0f 85 54 fe ff ff    	jne    81002f93 <getopt_internal+0x4a3>
8100313f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003143:	78 13                	js     81003158 <getopt_internal+0x668>
81003145:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003148:	c1 e0 04             	shl    $0x4,%eax
8100314b:	89 c2                	mov    %eax,%edx
8100314d:	8b 45 14             	mov    0x14(%ebp),%eax
81003150:	01 d0                	add    %edx,%eax
81003152:	8b 40 04             	mov    0x4(%eax),%eax
81003155:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003158:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100315c:	0f 89 9a 01 00 00    	jns    810032fc <getopt_internal+0x80c>
81003162:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003166:	0f 84 90 01 00 00    	je     810032fc <getopt_internal+0x80c>
8100316c:	8b 45 20             	mov    0x20(%ebp),%eax
8100316f:	8b 40 04             	mov    0x4(%eax),%eax
81003172:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003179:	8b 45 0c             	mov    0xc(%ebp),%eax
8100317c:	01 d0                	add    %edx,%eax
8100317e:	8b 10                	mov    (%eax),%edx
81003180:	8b 45 20             	mov    0x20(%ebp),%eax
81003183:	8b 40 10             	mov    0x10(%eax),%eax
81003186:	01 d0                	add    %edx,%eax
81003188:	0f b6 00             	movzbl (%eax),%eax
8100318b:	0f be c0             	movsbl %al,%eax
8100318e:	83 ec 08             	sub    $0x8,%esp
81003191:	50                   	push   %eax
81003192:	ff 75 10             	push   0x10(%ebp)
81003195:	e8 c6 28 00 00       	call   81005a60 <strchr>
8100319a:	83 c4 10             	add    $0x10,%esp
8100319d:	89 45 dc             	mov    %eax,-0x24(%ebp)
810031a0:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810031a4:	0f 85 f1 00 00 00    	jne    8100329b <getopt_internal+0x7ab>
810031aa:	8b 45 20             	mov    0x20(%ebp),%eax
810031ad:	8b 40 08             	mov    0x8(%eax),%eax
810031b0:	85 c0                	test   %eax,%eax
810031b2:	0f 84 83 00 00 00    	je     8100323b <getopt_internal+0x74b>
810031b8:	a1 44 91 00 81       	mov    0x81009144,%eax
810031bd:	8b 50 0c             	mov    0xc(%eax),%edx
810031c0:	8b 45 0c             	mov    0xc(%ebp),%eax
810031c3:	8b 00                	mov    (%eax),%eax
810031c5:	83 ec 08             	sub    $0x8,%esp
810031c8:	52                   	push   %edx
810031c9:	50                   	push   %eax
810031ca:	e8 47 34 00 00       	call   81006616 <fputs>
810031cf:	83 c4 10             	add    $0x10,%esp
810031d2:	a1 44 91 00 81       	mov    0x81009144,%eax
810031d7:	8b 40 0c             	mov    0xc(%eax),%eax
810031da:	83 ec 08             	sub    $0x8,%esp
810031dd:	50                   	push   %eax
810031de:	68 50 89 00 81       	push   $0x81008950
810031e3:	e8 2e 34 00 00       	call   81006616 <fputs>
810031e8:	83 c4 10             	add    $0x10,%esp
810031eb:	a1 44 91 00 81       	mov    0x81009144,%eax
810031f0:	8b 50 0c             	mov    0xc(%eax),%edx
810031f3:	8b 45 20             	mov    0x20(%ebp),%eax
810031f6:	8b 40 04             	mov    0x4(%eax),%eax
810031f9:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81003200:	8b 45 0c             	mov    0xc(%ebp),%eax
81003203:	01 c8                	add    %ecx,%eax
81003205:	8b 08                	mov    (%eax),%ecx
81003207:	8b 45 20             	mov    0x20(%ebp),%eax
8100320a:	8b 40 10             	mov    0x10(%eax),%eax
8100320d:	01 c8                	add    %ecx,%eax
8100320f:	0f b6 00             	movzbl (%eax),%eax
81003212:	0f be c0             	movsbl %al,%eax
81003215:	83 ec 08             	sub    $0x8,%esp
81003218:	52                   	push   %edx
81003219:	50                   	push   %eax
8100321a:	e8 03 33 00 00       	call   81006522 <fputc>
8100321f:	83 c4 10             	add    $0x10,%esp
81003222:	a1 44 91 00 81       	mov    0x81009144,%eax
81003227:	8b 40 0c             	mov    0xc(%eax),%eax
8100322a:	83 ec 08             	sub    $0x8,%esp
8100322d:	50                   	push   %eax
8100322e:	68 67 89 00 81       	push   $0x81008967
81003233:	e8 de 33 00 00       	call   81006616 <fputs>
81003238:	83 c4 10             	add    $0x10,%esp
8100323b:	8b 45 20             	mov    0x20(%ebp),%eax
8100323e:	8b 40 10             	mov    0x10(%eax),%eax
81003241:	8d 50 01             	lea    0x1(%eax),%edx
81003244:	8b 45 20             	mov    0x20(%ebp),%eax
81003247:	89 50 10             	mov    %edx,0x10(%eax)
8100324a:	8b 45 20             	mov    0x20(%ebp),%eax
8100324d:	8b 40 04             	mov    0x4(%eax),%eax
81003250:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003257:	8b 45 0c             	mov    0xc(%ebp),%eax
8100325a:	01 d0                	add    %edx,%eax
8100325c:	8b 10                	mov    (%eax),%edx
8100325e:	8b 45 20             	mov    0x20(%ebp),%eax
81003261:	8b 40 10             	mov    0x10(%eax),%eax
81003264:	01 d0                	add    %edx,%eax
81003266:	0f b6 00             	movzbl (%eax),%eax
81003269:	84 c0                	test   %al,%al
8100326b:	75 19                	jne    81003286 <getopt_internal+0x796>
8100326d:	8b 45 20             	mov    0x20(%ebp),%eax
81003270:	8b 40 04             	mov    0x4(%eax),%eax
81003273:	8d 50 01             	lea    0x1(%eax),%edx
81003276:	8b 45 20             	mov    0x20(%ebp),%eax
81003279:	89 50 04             	mov    %edx,0x4(%eax)
8100327c:	8b 45 20             	mov    0x20(%ebp),%eax
8100327f:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003286:	8b 45 20             	mov    0x20(%ebp),%eax
81003289:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81003290:	8b 45 20             	mov    0x20(%ebp),%eax
81003293:	8b 40 0c             	mov    0xc(%eax),%eax
81003296:	e9 65 03 00 00       	jmp    81003600 <getopt_internal+0xb10>
8100329b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100329e:	83 c0 01             	add    $0x1,%eax
810032a1:	0f b6 00             	movzbl (%eax),%eax
810032a4:	3c 3a                	cmp    $0x3a,%al
810032a6:	75 1b                	jne    810032c3 <getopt_internal+0x7d3>
810032a8:	8b 45 dc             	mov    -0x24(%ebp),%eax
810032ab:	83 c0 02             	add    $0x2,%eax
810032ae:	0f b6 00             	movzbl (%eax),%eax
810032b1:	3c 3a                	cmp    $0x3a,%al
810032b3:	75 07                	jne    810032bc <getopt_internal+0x7cc>
810032b5:	b8 02 00 00 00       	mov    $0x2,%eax
810032ba:	eb 0c                	jmp    810032c8 <getopt_internal+0x7d8>
810032bc:	b8 01 00 00 00       	mov    $0x1,%eax
810032c1:	eb 05                	jmp    810032c8 <getopt_internal+0x7d8>
810032c3:	b8 00 00 00 00       	mov    $0x0,%eax
810032c8:	89 45 e0             	mov    %eax,-0x20(%ebp)
810032cb:	8b 45 20             	mov    0x20(%ebp),%eax
810032ce:	8b 40 04             	mov    0x4(%eax),%eax
810032d1:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810032d8:	8b 45 0c             	mov    0xc(%ebp),%eax
810032db:	01 d0                	add    %edx,%eax
810032dd:	8b 10                	mov    (%eax),%edx
810032df:	8b 45 20             	mov    0x20(%ebp),%eax
810032e2:	8b 40 10             	mov    0x10(%eax),%eax
810032e5:	83 c0 01             	add    $0x1,%eax
810032e8:	01 d0                	add    %edx,%eax
810032ea:	89 45 e8             	mov    %eax,-0x18(%ebp)
810032ed:	8b 45 dc             	mov    -0x24(%ebp),%eax
810032f0:	0f b6 00             	movzbl (%eax),%eax
810032f3:	0f be d0             	movsbl %al,%edx
810032f6:	8b 45 20             	mov    0x20(%ebp),%eax
810032f9:	89 50 0c             	mov    %edx,0xc(%eax)
810032fc:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81003303:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
81003307:	74 40                	je     81003349 <getopt_internal+0x859>
81003309:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
8100330d:	0f 85 b0 01 00 00    	jne    810034c3 <getopt_internal+0x9d3>
81003313:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003316:	0f b6 00             	movzbl (%eax),%eax
81003319:	3c 3d                	cmp    $0x3d,%al
8100331b:	75 04                	jne    81003321 <getopt_internal+0x831>
8100331d:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81003321:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003324:	0f b6 00             	movzbl (%eax),%eax
81003327:	84 c0                	test   %al,%al
81003329:	74 05                	je     81003330 <getopt_internal+0x840>
8100332b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100332e:	eb 05                	jmp    81003335 <getopt_internal+0x845>
81003330:	b8 00 00 00 00       	mov    $0x0,%eax
81003335:	8b 55 20             	mov    0x20(%ebp),%edx
81003338:	89 02                	mov    %eax,(%edx)
8100333a:	8b 45 20             	mov    0x20(%ebp),%eax
8100333d:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003344:	e9 d2 01 00 00       	jmp    8100351b <getopt_internal+0xa2b>
81003349:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100334c:	0f b6 00             	movzbl (%eax),%eax
8100334f:	3c 3d                	cmp    $0x3d,%al
81003351:	75 04                	jne    81003357 <getopt_internal+0x867>
81003353:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81003357:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100335a:	0f b6 00             	movzbl (%eax),%eax
8100335d:	84 c0                	test   %al,%al
8100335f:	74 17                	je     81003378 <getopt_internal+0x888>
81003361:	8b 45 20             	mov    0x20(%ebp),%eax
81003364:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003367:	89 10                	mov    %edx,(%eax)
81003369:	8b 45 20             	mov    0x20(%ebp),%eax
8100336c:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003373:	e9 a3 01 00 00       	jmp    8100351b <getopt_internal+0xa2b>
81003378:	8b 45 20             	mov    0x20(%ebp),%eax
8100337b:	8b 40 04             	mov    0x4(%eax),%eax
8100337e:	83 c0 01             	add    $0x1,%eax
81003381:	39 45 08             	cmp    %eax,0x8(%ebp)
81003384:	0f 8f 0a 01 00 00    	jg     81003494 <getopt_internal+0x9a4>
8100338a:	8b 45 20             	mov    0x20(%ebp),%eax
8100338d:	8b 40 08             	mov    0x8(%eax),%eax
81003390:	85 c0                	test   %eax,%eax
81003392:	0f 84 d3 00 00 00    	je     8100346b <getopt_internal+0x97b>
81003398:	a1 44 91 00 81       	mov    0x81009144,%eax
8100339d:	8b 50 0c             	mov    0xc(%eax),%edx
810033a0:	8b 45 0c             	mov    0xc(%ebp),%eax
810033a3:	8b 00                	mov    (%eax),%eax
810033a5:	83 ec 08             	sub    $0x8,%esp
810033a8:	52                   	push   %edx
810033a9:	50                   	push   %eax
810033aa:	e8 67 32 00 00       	call   81006616 <fputs>
810033af:	83 c4 10             	add    $0x10,%esp
810033b2:	a1 44 91 00 81       	mov    0x81009144,%eax
810033b7:	8b 40 0c             	mov    0xc(%eax),%eax
810033ba:	83 ec 08             	sub    $0x8,%esp
810033bd:	50                   	push   %eax
810033be:	68 6c 89 00 81       	push   $0x8100896c
810033c3:	e8 4e 32 00 00       	call   81006616 <fputs>
810033c8:	83 c4 10             	add    $0x10,%esp
810033cb:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810033cf:	78 54                	js     81003425 <getopt_internal+0x935>
810033d1:	a1 44 91 00 81       	mov    0x81009144,%eax
810033d6:	8b 40 0c             	mov    0xc(%eax),%eax
810033d9:	83 ec 08             	sub    $0x8,%esp
810033dc:	50                   	push   %eax
810033dd:	6a 2d                	push   $0x2d
810033df:	e8 3e 31 00 00       	call   81006522 <fputc>
810033e4:	83 c4 10             	add    $0x10,%esp
810033e7:	a1 44 91 00 81       	mov    0x81009144,%eax
810033ec:	8b 50 0c             	mov    0xc(%eax),%edx
810033ef:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810033f2:	c1 e0 04             	shl    $0x4,%eax
810033f5:	89 c1                	mov    %eax,%ecx
810033f7:	8b 45 14             	mov    0x14(%ebp),%eax
810033fa:	01 c8                	add    %ecx,%eax
810033fc:	8b 00                	mov    (%eax),%eax
810033fe:	83 ec 08             	sub    $0x8,%esp
81003401:	52                   	push   %edx
81003402:	50                   	push   %eax
81003403:	e8 0e 32 00 00       	call   81006616 <fputs>
81003408:	83 c4 10             	add    $0x10,%esp
8100340b:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
8100340f:	74 07                	je     81003418 <getopt_internal+0x928>
81003411:	ba 3a 00 00 00       	mov    $0x3a,%edx
81003416:	eb 05                	jmp    8100341d <getopt_internal+0x92d>
81003418:	ba 3f 00 00 00       	mov    $0x3f,%edx
8100341d:	8b 45 20             	mov    0x20(%ebp),%eax
81003420:	89 50 0c             	mov    %edx,0xc(%eax)
81003423:	eb 2d                	jmp    81003452 <getopt_internal+0x962>
81003425:	a1 44 91 00 81       	mov    0x81009144,%eax
8100342a:	8b 50 0c             	mov    0xc(%eax),%edx
8100342d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003430:	0f b6 00             	movzbl (%eax),%eax
81003433:	0f be c0             	movsbl %al,%eax
81003436:	83 ec 08             	sub    $0x8,%esp
81003439:	52                   	push   %edx
8100343a:	50                   	push   %eax
8100343b:	e8 e2 30 00 00       	call   81006522 <fputc>
81003440:	83 c4 10             	add    $0x10,%esp
81003443:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003446:	0f b6 00             	movzbl (%eax),%eax
81003449:	0f be d0             	movsbl %al,%edx
8100344c:	8b 45 20             	mov    0x20(%ebp),%eax
8100344f:	89 50 0c             	mov    %edx,0xc(%eax)
81003452:	a1 44 91 00 81       	mov    0x81009144,%eax
81003457:	8b 40 0c             	mov    0xc(%eax),%eax
8100345a:	83 ec 08             	sub    $0x8,%esp
8100345d:	50                   	push   %eax
8100345e:	68 67 89 00 81       	push   $0x81008967
81003463:	e8 ae 31 00 00       	call   81006616 <fputs>
81003468:	83 c4 10             	add    $0x10,%esp
8100346b:	8b 45 20             	mov    0x20(%ebp),%eax
8100346e:	8b 40 04             	mov    0x4(%eax),%eax
81003471:	8d 50 01             	lea    0x1(%eax),%edx
81003474:	8b 45 20             	mov    0x20(%ebp),%eax
81003477:	89 50 04             	mov    %edx,0x4(%eax)
8100347a:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
8100347e:	74 0a                	je     8100348a <getopt_internal+0x99a>
81003480:	b8 3a 00 00 00       	mov    $0x3a,%eax
81003485:	e9 76 01 00 00       	jmp    81003600 <getopt_internal+0xb10>
8100348a:	b8 3f 00 00 00       	mov    $0x3f,%eax
8100348f:	e9 6c 01 00 00       	jmp    81003600 <getopt_internal+0xb10>
81003494:	8b 45 20             	mov    0x20(%ebp),%eax
81003497:	8b 40 04             	mov    0x4(%eax),%eax
8100349a:	83 c0 01             	add    $0x1,%eax
8100349d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810034a4:	8b 45 0c             	mov    0xc(%ebp),%eax
810034a7:	01 d0                	add    %edx,%eax
810034a9:	8b 10                	mov    (%eax),%edx
810034ab:	8b 45 20             	mov    0x20(%ebp),%eax
810034ae:	89 10                	mov    %edx,(%eax)
810034b0:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
810034b7:	8b 45 20             	mov    0x20(%ebp),%eax
810034ba:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810034c1:	eb 58                	jmp    8100351b <getopt_internal+0xa2b>
810034c3:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810034c7:	79 3e                	jns    81003507 <getopt_internal+0xa17>
810034c9:	8b 45 20             	mov    0x20(%ebp),%eax
810034cc:	8b 40 10             	mov    0x10(%eax),%eax
810034cf:	8d 50 01             	lea    0x1(%eax),%edx
810034d2:	8b 45 20             	mov    0x20(%ebp),%eax
810034d5:	89 50 10             	mov    %edx,0x10(%eax)
810034d8:	8b 45 20             	mov    0x20(%ebp),%eax
810034db:	8b 40 04             	mov    0x4(%eax),%eax
810034de:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810034e5:	8b 45 0c             	mov    0xc(%ebp),%eax
810034e8:	01 d0                	add    %edx,%eax
810034ea:	8b 10                	mov    (%eax),%edx
810034ec:	8b 45 20             	mov    0x20(%ebp),%eax
810034ef:	8b 40 10             	mov    0x10(%eax),%eax
810034f2:	01 d0                	add    %edx,%eax
810034f4:	0f b6 00             	movzbl (%eax),%eax
810034f7:	84 c0                	test   %al,%al
810034f9:	75 16                	jne    81003511 <getopt_internal+0xa21>
810034fb:	8b 45 20             	mov    0x20(%ebp),%eax
810034fe:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003505:	eb 0a                	jmp    81003511 <getopt_internal+0xa21>
81003507:	8b 45 20             	mov    0x20(%ebp),%eax
8100350a:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003511:	8b 45 20             	mov    0x20(%ebp),%eax
81003514:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100351a:	90                   	nop
8100351b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100351f:	75 57                	jne    81003578 <getopt_internal+0xa88>
81003521:	8b 45 20             	mov    0x20(%ebp),%eax
81003524:	8b 40 10             	mov    0x10(%eax),%eax
81003527:	83 f8 01             	cmp    $0x1,%eax
8100352a:	75 4c                	jne    81003578 <getopt_internal+0xa88>
8100352c:	8b 45 20             	mov    0x20(%ebp),%eax
8100352f:	8b 40 18             	mov    0x18(%eax),%eax
81003532:	85 c0                	test   %eax,%eax
81003534:	74 42                	je     81003578 <getopt_internal+0xa88>
81003536:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003539:	8d 48 01             	lea    0x1(%eax),%ecx
8100353c:	8b 45 20             	mov    0x20(%ebp),%eax
8100353f:	8b 40 18             	mov    0x18(%eax),%eax
81003542:	8b 55 20             	mov    0x20(%ebp),%edx
81003545:	8b 52 14             	mov    0x14(%edx),%edx
81003548:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
8100354f:	8b 55 0c             	mov    0xc(%ebp),%edx
81003552:	01 da                	add    %ebx,%edx
81003554:	83 ec 04             	sub    $0x4,%esp
81003557:	51                   	push   %ecx
81003558:	50                   	push   %eax
81003559:	52                   	push   %edx
8100355a:	e8 7f f4 ff ff       	call   810029de <permute>
8100355f:	83 c4 10             	add    $0x10,%esp
81003562:	8b 45 20             	mov    0x20(%ebp),%eax
81003565:	8b 40 14             	mov    0x14(%eax),%eax
81003568:	8d 50 01             	lea    0x1(%eax),%edx
8100356b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100356e:	01 c2                	add    %eax,%edx
81003570:	8b 45 20             	mov    0x20(%ebp),%eax
81003573:	89 50 04             	mov    %edx,0x4(%eax)
81003576:	eb 1f                	jmp    81003597 <getopt_internal+0xaa7>
81003578:	8b 45 20             	mov    0x20(%ebp),%eax
8100357b:	8b 40 10             	mov    0x10(%eax),%eax
8100357e:	83 f8 01             	cmp    $0x1,%eax
81003581:	75 14                	jne    81003597 <getopt_internal+0xaa7>
81003583:	8b 45 20             	mov    0x20(%ebp),%eax
81003586:	8b 40 04             	mov    0x4(%eax),%eax
81003589:	8d 50 01             	lea    0x1(%eax),%edx
8100358c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100358f:	01 c2                	add    %eax,%edx
81003591:	8b 45 20             	mov    0x20(%ebp),%eax
81003594:	89 50 04             	mov    %edx,0x4(%eax)
81003597:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100359b:	78 5d                	js     810035fa <getopt_internal+0xb0a>
8100359d:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
810035a1:	74 08                	je     810035ab <getopt_internal+0xabb>
810035a3:	8b 45 18             	mov    0x18(%ebp),%eax
810035a6:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810035a9:	89 10                	mov    %edx,(%eax)
810035ab:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810035ae:	c1 e0 04             	shl    $0x4,%eax
810035b1:	89 c2                	mov    %eax,%edx
810035b3:	8b 45 14             	mov    0x14(%ebp),%eax
810035b6:	01 d0                	add    %edx,%eax
810035b8:	8b 40 08             	mov    0x8(%eax),%eax
810035bb:	85 c0                	test   %eax,%eax
810035bd:	74 29                	je     810035e8 <getopt_internal+0xaf8>
810035bf:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810035c2:	c1 e0 04             	shl    $0x4,%eax
810035c5:	89 c2                	mov    %eax,%edx
810035c7:	8b 45 14             	mov    0x14(%ebp),%eax
810035ca:	01 c2                	add    %eax,%edx
810035cc:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810035cf:	c1 e0 04             	shl    $0x4,%eax
810035d2:	89 c1                	mov    %eax,%ecx
810035d4:	8b 45 14             	mov    0x14(%ebp),%eax
810035d7:	01 c8                	add    %ecx,%eax
810035d9:	8b 40 08             	mov    0x8(%eax),%eax
810035dc:	8b 52 0c             	mov    0xc(%edx),%edx
810035df:	89 10                	mov    %edx,(%eax)
810035e1:	b8 00 00 00 00       	mov    $0x0,%eax
810035e6:	eb 18                	jmp    81003600 <getopt_internal+0xb10>
810035e8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810035eb:	c1 e0 04             	shl    $0x4,%eax
810035ee:	89 c2                	mov    %eax,%edx
810035f0:	8b 45 14             	mov    0x14(%ebp),%eax
810035f3:	01 d0                	add    %edx,%eax
810035f5:	8b 40 0c             	mov    0xc(%eax),%eax
810035f8:	eb 06                	jmp    81003600 <getopt_internal+0xb10>
810035fa:	8b 45 20             	mov    0x20(%ebp),%eax
810035fd:	8b 40 0c             	mov    0xc(%eax),%eax
81003600:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003603:	c9                   	leave  
81003604:	c3                   	ret    

81003605 <getopt>:
81003605:	55                   	push   %ebp
81003606:	89 e5                	mov    %esp,%ebp
81003608:	83 ec 28             	sub    $0x28,%esp
8100360b:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100360e:	50                   	push   %eax
8100360f:	e8 31 f4 ff ff       	call   81002a45 <read_globals>
81003614:	83 c4 04             	add    $0x4,%esp
81003617:	83 ec 04             	sub    $0x4,%esp
8100361a:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100361d:	50                   	push   %eax
8100361e:	6a 00                	push   $0x0
81003620:	6a 00                	push   $0x0
81003622:	6a 00                	push   $0x0
81003624:	ff 75 10             	push   0x10(%ebp)
81003627:	ff 75 0c             	push   0xc(%ebp)
8100362a:	ff 75 08             	push   0x8(%ebp)
8100362d:	e8 be f4 ff ff       	call   81002af0 <getopt_internal>
81003632:	83 c4 20             	add    $0x20,%esp
81003635:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003638:	83 ec 0c             	sub    $0xc,%esp
8100363b:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100363e:	50                   	push   %eax
8100363f:	e8 5a f4 ff ff       	call   81002a9e <write_globals>
81003644:	83 c4 10             	add    $0x10,%esp
81003647:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100364a:	c9                   	leave  
8100364b:	c3                   	ret    

8100364c <getopt_long>:
8100364c:	55                   	push   %ebp
8100364d:	89 e5                	mov    %esp,%ebp
8100364f:	83 ec 28             	sub    $0x28,%esp
81003652:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003655:	50                   	push   %eax
81003656:	e8 ea f3 ff ff       	call   81002a45 <read_globals>
8100365b:	83 c4 04             	add    $0x4,%esp
8100365e:	83 ec 04             	sub    $0x4,%esp
81003661:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003664:	50                   	push   %eax
81003665:	6a 00                	push   $0x0
81003667:	ff 75 18             	push   0x18(%ebp)
8100366a:	ff 75 14             	push   0x14(%ebp)
8100366d:	ff 75 10             	push   0x10(%ebp)
81003670:	ff 75 0c             	push   0xc(%ebp)
81003673:	ff 75 08             	push   0x8(%ebp)
81003676:	e8 75 f4 ff ff       	call   81002af0 <getopt_internal>
8100367b:	83 c4 20             	add    $0x20,%esp
8100367e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003681:	83 ec 0c             	sub    $0xc,%esp
81003684:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003687:	50                   	push   %eax
81003688:	e8 11 f4 ff ff       	call   81002a9e <write_globals>
8100368d:	83 c4 10             	add    $0x10,%esp
81003690:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003693:	c9                   	leave  
81003694:	c3                   	ret    

81003695 <getopt_long_only>:
81003695:	55                   	push   %ebp
81003696:	89 e5                	mov    %esp,%ebp
81003698:	83 ec 28             	sub    $0x28,%esp
8100369b:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100369e:	50                   	push   %eax
8100369f:	e8 a1 f3 ff ff       	call   81002a45 <read_globals>
810036a4:	83 c4 04             	add    $0x4,%esp
810036a7:	83 ec 04             	sub    $0x4,%esp
810036aa:	8d 45 d8             	lea    -0x28(%ebp),%eax
810036ad:	50                   	push   %eax
810036ae:	6a 01                	push   $0x1
810036b0:	ff 75 18             	push   0x18(%ebp)
810036b3:	ff 75 14             	push   0x14(%ebp)
810036b6:	ff 75 10             	push   0x10(%ebp)
810036b9:	ff 75 0c             	push   0xc(%ebp)
810036bc:	ff 75 08             	push   0x8(%ebp)
810036bf:	e8 2c f4 ff ff       	call   81002af0 <getopt_internal>
810036c4:	83 c4 20             	add    $0x20,%esp
810036c7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810036ca:	83 ec 0c             	sub    $0xc,%esp
810036cd:	8d 45 d8             	lea    -0x28(%ebp),%eax
810036d0:	50                   	push   %eax
810036d1:	e8 c8 f3 ff ff       	call   81002a9e <write_globals>
810036d6:	83 c4 10             	add    $0x10,%esp
810036d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810036dc:	c9                   	leave  
810036dd:	c3                   	ret    

810036de <__getopt_r>:
810036de:	55                   	push   %ebp
810036df:	89 e5                	mov    %esp,%ebp
810036e1:	83 ec 08             	sub    $0x8,%esp
810036e4:	83 ec 04             	sub    $0x4,%esp
810036e7:	ff 75 14             	push   0x14(%ebp)
810036ea:	6a 00                	push   $0x0
810036ec:	6a 00                	push   $0x0
810036ee:	6a 00                	push   $0x0
810036f0:	ff 75 10             	push   0x10(%ebp)
810036f3:	ff 75 0c             	push   0xc(%ebp)
810036f6:	ff 75 08             	push   0x8(%ebp)
810036f9:	e8 f2 f3 ff ff       	call   81002af0 <getopt_internal>
810036fe:	83 c4 20             	add    $0x20,%esp
81003701:	c9                   	leave  
81003702:	c3                   	ret    

81003703 <__getopt_long_r>:
81003703:	55                   	push   %ebp
81003704:	89 e5                	mov    %esp,%ebp
81003706:	83 ec 08             	sub    $0x8,%esp
81003709:	83 ec 04             	sub    $0x4,%esp
8100370c:	ff 75 1c             	push   0x1c(%ebp)
8100370f:	6a 00                	push   $0x0
81003711:	ff 75 18             	push   0x18(%ebp)
81003714:	ff 75 14             	push   0x14(%ebp)
81003717:	ff 75 10             	push   0x10(%ebp)
8100371a:	ff 75 0c             	push   0xc(%ebp)
8100371d:	ff 75 08             	push   0x8(%ebp)
81003720:	e8 cb f3 ff ff       	call   81002af0 <getopt_internal>
81003725:	83 c4 20             	add    $0x20,%esp
81003728:	c9                   	leave  
81003729:	c3                   	ret    

8100372a <__getopt_long_only_r>:
8100372a:	55                   	push   %ebp
8100372b:	89 e5                	mov    %esp,%ebp
8100372d:	83 ec 08             	sub    $0x8,%esp
81003730:	83 ec 04             	sub    $0x4,%esp
81003733:	ff 75 1c             	push   0x1c(%ebp)
81003736:	6a 01                	push   $0x1
81003738:	ff 75 18             	push   0x18(%ebp)
8100373b:	ff 75 14             	push   0x14(%ebp)
8100373e:	ff 75 10             	push   0x10(%ebp)
81003741:	ff 75 0c             	push   0xc(%ebp)
81003744:	ff 75 08             	push   0x8(%ebp)
81003747:	e8 a4 f3 ff ff       	call   81002af0 <getopt_internal>
8100374c:	83 c4 20             	add    $0x20,%esp
8100374f:	c9                   	leave  
81003750:	c3                   	ret    

81003751 <__getreent>:
81003751:	55                   	push   %ebp
81003752:	89 e5                	mov    %esp,%ebp
81003754:	a1 44 91 00 81       	mov    0x81009144,%eax
81003759:	5d                   	pop    %ebp
8100375a:	c3                   	ret    

8100375b <__smakebuf_r>:
8100375b:	55                   	push   %ebp
8100375c:	89 e5                	mov    %esp,%ebp
8100375e:	56                   	push   %esi
8100375f:	53                   	push   %ebx
81003760:	83 ec 10             	sub    $0x10,%esp
81003763:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003766:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100376a:	98                   	cwtl   
8100376b:	83 e0 02             	and    $0x2,%eax
8100376e:	85 c0                	test   %eax,%eax
81003770:	74 16                	je     81003788 <__smakebuf_r+0x2d>
81003772:	8d 43 43             	lea    0x43(%ebx),%eax
81003775:	89 03                	mov    %eax,(%ebx)
81003777:	8b 03                	mov    (%ebx),%eax
81003779:	89 43 10             	mov    %eax,0x10(%ebx)
8100377c:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003783:	e9 b9 00 00 00       	jmp    81003841 <__smakebuf_r+0xe6>
81003788:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100378b:	50                   	push   %eax
8100378c:	8d 45 f0             	lea    -0x10(%ebp),%eax
8100378f:	50                   	push   %eax
81003790:	53                   	push   %ebx
81003791:	ff 75 08             	push   0x8(%ebp)
81003794:	e8 af 00 00 00       	call   81003848 <__swhatbuf_r>
81003799:	83 c4 10             	add    $0x10,%esp
8100379c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100379f:	8b 45 f0             	mov    -0x10(%ebp),%eax
810037a2:	83 ec 08             	sub    $0x8,%esp
810037a5:	50                   	push   %eax
810037a6:	ff 75 08             	push   0x8(%ebp)
810037a9:	e8 f9 03 00 00       	call   81003ba7 <_malloc_r>
810037ae:	83 c4 10             	add    $0x10,%esp
810037b1:	89 c6                	mov    %eax,%esi
810037b3:	85 f6                	test   %esi,%esi
810037b5:	75 2f                	jne    810037e6 <__smakebuf_r+0x8b>
810037b7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810037bb:	98                   	cwtl   
810037bc:	25 00 02 00 00       	and    $0x200,%eax
810037c1:	85 c0                	test   %eax,%eax
810037c3:	75 7c                	jne    81003841 <__smakebuf_r+0xe6>
810037c5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810037c9:	83 e0 fc             	and    $0xfffffffc,%eax
810037cc:	83 c8 02             	or     $0x2,%eax
810037cf:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810037d3:	8d 43 43             	lea    0x43(%ebx),%eax
810037d6:	89 03                	mov    %eax,(%ebx)
810037d8:	8b 03                	mov    (%ebx),%eax
810037da:	89 43 10             	mov    %eax,0x10(%ebx)
810037dd:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810037e4:	eb 5b                	jmp    81003841 <__smakebuf_r+0xe6>
810037e6:	8b 45 08             	mov    0x8(%ebp),%eax
810037e9:	c7 40 3c b9 17 00 81 	movl   $0x810017b9,0x3c(%eax)
810037f0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810037f4:	0c 80                	or     $0x80,%al
810037f6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810037fa:	89 33                	mov    %esi,(%ebx)
810037fc:	8b 03                	mov    (%ebx),%eax
810037fe:	89 43 10             	mov    %eax,0x10(%ebx)
81003801:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003804:	89 43 14             	mov    %eax,0x14(%ebx)
81003807:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100380a:	85 c0                	test   %eax,%eax
8100380c:	74 26                	je     81003834 <__smakebuf_r+0xd9>
8100380e:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003812:	98                   	cwtl   
81003813:	83 ec 08             	sub    $0x8,%esp
81003816:	50                   	push   %eax
81003817:	ff 75 08             	push   0x8(%ebp)
8100381a:	e8 89 36 00 00       	call   81006ea8 <_isatty_r>
8100381f:	83 c4 10             	add    $0x10,%esp
81003822:	85 c0                	test   %eax,%eax
81003824:	74 0e                	je     81003834 <__smakebuf_r+0xd9>
81003826:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100382a:	83 e0 fc             	and    $0xfffffffc,%eax
8100382d:	83 c8 01             	or     $0x1,%eax
81003830:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003834:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81003838:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100383b:	09 d0                	or     %edx,%eax
8100383d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003841:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003844:	5b                   	pop    %ebx
81003845:	5e                   	pop    %esi
81003846:	5d                   	pop    %ebp
81003847:	c3                   	ret    

81003848 <__swhatbuf_r>:
81003848:	55                   	push   %ebp
81003849:	89 e5                	mov    %esp,%ebp
8100384b:	83 ec 58             	sub    $0x58,%esp
8100384e:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81003855:	8b 45 0c             	mov    0xc(%ebp),%eax
81003858:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100385c:	66 85 c0             	test   %ax,%ax
8100385f:	78 1f                	js     81003880 <__swhatbuf_r+0x38>
81003861:	8b 45 0c             	mov    0xc(%ebp),%eax
81003864:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003868:	98                   	cwtl   
81003869:	83 ec 04             	sub    $0x4,%esp
8100386c:	8d 55 ac             	lea    -0x54(%ebp),%edx
8100386f:	52                   	push   %edx
81003870:	50                   	push   %eax
81003871:	ff 75 08             	push   0x8(%ebp)
81003874:	e8 b5 ee ff ff       	call   8100272e <_fstat_r>
81003879:	83 c4 10             	add    $0x10,%esp
8100387c:	85 c0                	test   %eax,%eax
8100387e:	79 35                	jns    810038b5 <__swhatbuf_r+0x6d>
81003880:	8b 45 14             	mov    0x14(%ebp),%eax
81003883:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003889:	8b 45 0c             	mov    0xc(%ebp),%eax
8100388c:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003890:	98                   	cwtl   
81003891:	25 80 00 00 00       	and    $0x80,%eax
81003896:	85 c0                	test   %eax,%eax
81003898:	74 0b                	je     810038a5 <__swhatbuf_r+0x5d>
8100389a:	8b 45 10             	mov    0x10(%ebp),%eax
8100389d:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
810038a3:	eb 09                	jmp    810038ae <__swhatbuf_r+0x66>
810038a5:	8b 45 10             	mov    0x10(%ebp),%eax
810038a8:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810038ae:	b8 00 00 00 00       	mov    $0x0,%eax
810038b3:	eb 24                	jmp    810038d9 <__swhatbuf_r+0x91>
810038b5:	8b 45 b0             	mov    -0x50(%ebp),%eax
810038b8:	25 00 f0 00 00       	and    $0xf000,%eax
810038bd:	3d 00 20 00 00       	cmp    $0x2000,%eax
810038c2:	0f 94 c0             	sete   %al
810038c5:	0f b6 d0             	movzbl %al,%edx
810038c8:	8b 45 14             	mov    0x14(%ebp),%eax
810038cb:	89 10                	mov    %edx,(%eax)
810038cd:	8b 45 10             	mov    0x10(%ebp),%eax
810038d0:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810038d6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810038d9:	c9                   	leave  
810038da:	c3                   	ret    

810038db <malloc>:
810038db:	55                   	push   %ebp
810038dc:	89 e5                	mov    %esp,%ebp
810038de:	83 ec 08             	sub    $0x8,%esp
810038e1:	a1 44 91 00 81       	mov    0x81009144,%eax
810038e6:	83 ec 08             	sub    $0x8,%esp
810038e9:	ff 75 08             	push   0x8(%ebp)
810038ec:	50                   	push   %eax
810038ed:	e8 b5 02 00 00       	call   81003ba7 <_malloc_r>
810038f2:	83 c4 10             	add    $0x10,%esp
810038f5:	c9                   	leave  
810038f6:	c3                   	ret    

810038f7 <free>:
810038f7:	55                   	push   %ebp
810038f8:	89 e5                	mov    %esp,%ebp
810038fa:	83 ec 08             	sub    $0x8,%esp
810038fd:	a1 44 91 00 81       	mov    0x81009144,%eax
81003902:	83 ec 08             	sub    $0x8,%esp
81003905:	ff 75 08             	push   0x8(%ebp)
81003908:	50                   	push   %eax
81003909:	e8 d6 e3 ff ff       	call   81001ce4 <_free_r>
8100390e:	83 c4 10             	add    $0x10,%esp
81003911:	90                   	nop
81003912:	c9                   	leave  
81003913:	c3                   	ret    

81003914 <malloc_extend_top>:
81003914:	55                   	push   %ebp
81003915:	89 e5                	mov    %esp,%ebp
81003917:	83 ec 38             	sub    $0x38,%esp
8100391a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003921:	b8 60 91 00 81       	mov    $0x81009160,%eax
81003926:	8b 40 08             	mov    0x8(%eax),%eax
81003929:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100392c:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100392f:	8b 40 04             	mov    0x4(%eax),%eax
81003932:	83 e0 fc             	and    $0xfffffffc,%eax
81003935:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003938:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100393b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100393e:	01 d0                	add    %edx,%eax
81003940:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003943:	8b 15 40 9e 00 81    	mov    0x81009e40,%edx
81003949:	8b 45 0c             	mov    0xc(%ebp),%eax
8100394c:	01 d0                	add    %edx,%eax
8100394e:	83 c0 10             	add    $0x10,%eax
81003951:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003954:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
8100395b:	a1 6c 95 00 81       	mov    0x8100956c,%eax
81003960:	83 f8 ff             	cmp    $0xffffffff,%eax
81003963:	74 15                	je     8100397a <malloc_extend_top+0x66>
81003965:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81003968:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100396b:	01 d0                	add    %edx,%eax
8100396d:	8d 50 ff             	lea    -0x1(%eax),%edx
81003970:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003973:	f7 d8                	neg    %eax
81003975:	21 d0                	and    %edx,%eax
81003977:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100397a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100397d:	83 ec 08             	sub    $0x8,%esp
81003980:	50                   	push   %eax
81003981:	ff 75 08             	push   0x8(%ebp)
81003984:	e8 b9 1c 00 00       	call   81005642 <_sbrk_r>
81003989:	83 c4 10             	add    $0x10,%esp
8100398c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100398f:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003993:	0f 84 0b 02 00 00    	je     81003ba4 <malloc_extend_top+0x290>
81003999:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100399c:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100399f:	73 0e                	jae    810039af <malloc_extend_top+0x9b>
810039a1:	b8 60 91 00 81       	mov    $0x81009160,%eax
810039a6:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810039a9:	0f 85 f5 01 00 00    	jne    81003ba4 <malloc_extend_top+0x290>
810039af:	a1 60 9e 00 81       	mov    0x81009e60,%eax
810039b4:	89 c2                	mov    %eax,%edx
810039b6:	8b 45 e8             	mov    -0x18(%ebp),%eax
810039b9:	01 d0                	add    %edx,%eax
810039bb:	a3 60 9e 00 81       	mov    %eax,0x81009e60
810039c0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039c3:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810039c6:	75 30                	jne    810039f8 <malloc_extend_top+0xe4>
810039c8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810039cb:	8d 50 ff             	lea    -0x1(%eax),%edx
810039ce:	8b 45 d8             	mov    -0x28(%ebp),%eax
810039d1:	21 d0                	and    %edx,%eax
810039d3:	85 c0                	test   %eax,%eax
810039d5:	75 21                	jne    810039f8 <malloc_extend_top+0xe4>
810039d7:	8b 55 e8             	mov    -0x18(%ebp),%edx
810039da:	8b 45 dc             	mov    -0x24(%ebp),%eax
810039dd:	01 d0                	add    %edx,%eax
810039df:	89 45 d0             	mov    %eax,-0x30(%ebp)
810039e2:	b8 60 91 00 81       	mov    $0x81009160,%eax
810039e7:	8b 40 08             	mov    0x8(%eax),%eax
810039ea:	8b 55 d0             	mov    -0x30(%ebp),%edx
810039ed:	83 ca 01             	or     $0x1,%edx
810039f0:	89 50 04             	mov    %edx,0x4(%eax)
810039f3:	e9 76 01 00 00       	jmp    81003b6e <malloc_extend_top+0x25a>
810039f8:	a1 6c 95 00 81       	mov    0x8100956c,%eax
810039fd:	83 f8 ff             	cmp    $0xffffffff,%eax
81003a00:	75 0a                	jne    81003a0c <malloc_extend_top+0xf8>
81003a02:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a05:	a3 6c 95 00 81       	mov    %eax,0x8100956c
81003a0a:	eb 13                	jmp    81003a1f <malloc_extend_top+0x10b>
81003a0c:	8b 15 60 9e 00 81    	mov    0x81009e60,%edx
81003a12:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a15:	2b 45 d8             	sub    -0x28(%ebp),%eax
81003a18:	01 d0                	add    %edx,%eax
81003a1a:	a3 60 9e 00 81       	mov    %eax,0x81009e60
81003a1f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a22:	83 c0 08             	add    $0x8,%eax
81003a25:	83 e0 07             	and    $0x7,%eax
81003a28:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003a2b:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81003a2f:	74 13                	je     81003a44 <malloc_extend_top+0x130>
81003a31:	b8 08 00 00 00       	mov    $0x8,%eax
81003a36:	2b 45 cc             	sub    -0x34(%ebp),%eax
81003a39:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003a3c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003a3f:	01 45 f4             	add    %eax,-0xc(%ebp)
81003a42:	eb 07                	jmp    81003a4b <malloc_extend_top+0x137>
81003a44:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003a4b:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003a4e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003a51:	01 d0                	add    %edx,%eax
81003a53:	89 c2                	mov    %eax,%edx
81003a55:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003a58:	83 e8 01             	sub    $0x1,%eax
81003a5b:	21 c2                	and    %eax,%edx
81003a5d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003a60:	29 d0                	sub    %edx,%eax
81003a62:	01 45 f0             	add    %eax,-0x10(%ebp)
81003a65:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003a68:	83 e8 01             	sub    $0x1,%eax
81003a6b:	21 45 f0             	and    %eax,-0x10(%ebp)
81003a6e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003a71:	83 ec 08             	sub    $0x8,%esp
81003a74:	50                   	push   %eax
81003a75:	ff 75 08             	push   0x8(%ebp)
81003a78:	e8 c5 1b 00 00       	call   81005642 <_sbrk_r>
81003a7d:	83 c4 10             	add    $0x10,%esp
81003a80:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003a83:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
81003a87:	75 28                	jne    81003ab1 <malloc_extend_top+0x19d>
81003a89:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003a90:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81003a97:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003a9a:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003a9d:	01 d0                	add    %edx,%eax
81003a9f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003aa2:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81003aa6:	74 09                	je     81003ab1 <malloc_extend_top+0x19d>
81003aa8:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003aab:	83 e8 08             	sub    $0x8,%eax
81003aae:	01 45 ec             	add    %eax,-0x14(%ebp)
81003ab1:	a1 60 9e 00 81       	mov    0x81009e60,%eax
81003ab6:	89 c2                	mov    %eax,%edx
81003ab8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003abb:	01 d0                	add    %edx,%eax
81003abd:	a3 60 9e 00 81       	mov    %eax,0x81009e60
81003ac2:	ba 60 91 00 81       	mov    $0x81009160,%edx
81003ac7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003aca:	89 42 08             	mov    %eax,0x8(%edx)
81003acd:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003ad0:	2b 45 f4             	sub    -0xc(%ebp),%eax
81003ad3:	89 c2                	mov    %eax,%edx
81003ad5:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003ad8:	01 d0                	add    %edx,%eax
81003ada:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003add:	b8 60 91 00 81       	mov    $0x81009160,%eax
81003ae2:	8b 40 08             	mov    0x8(%eax),%eax
81003ae5:	8b 55 d0             	mov    -0x30(%ebp),%edx
81003ae8:	83 ca 01             	or     $0x1,%edx
81003aeb:	89 50 04             	mov    %edx,0x4(%eax)
81003aee:	b8 60 91 00 81       	mov    $0x81009160,%eax
81003af3:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81003af6:	74 76                	je     81003b6e <malloc_extend_top+0x25a>
81003af8:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81003afc:	77 14                	ja     81003b12 <malloc_extend_top+0x1fe>
81003afe:	b8 60 91 00 81       	mov    $0x81009160,%eax
81003b03:	8b 40 08             	mov    0x8(%eax),%eax
81003b06:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81003b0d:	e9 93 00 00 00       	jmp    81003ba5 <malloc_extend_top+0x291>
81003b12:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b15:	83 e8 0c             	sub    $0xc,%eax
81003b18:	83 e0 f8             	and    $0xfffffff8,%eax
81003b1b:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003b1e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003b21:	8b 40 04             	mov    0x4(%eax),%eax
81003b24:	83 e0 01             	and    $0x1,%eax
81003b27:	0b 45 dc             	or     -0x24(%ebp),%eax
81003b2a:	89 c2                	mov    %eax,%edx
81003b2c:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003b2f:	89 50 04             	mov    %edx,0x4(%eax)
81003b32:	8b 55 e0             	mov    -0x20(%ebp),%edx
81003b35:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b38:	01 d0                	add    %edx,%eax
81003b3a:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81003b41:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b44:	8d 50 04             	lea    0x4(%eax),%edx
81003b47:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003b4a:	01 d0                	add    %edx,%eax
81003b4c:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81003b53:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81003b57:	76 15                	jbe    81003b6e <malloc_extend_top+0x25a>
81003b59:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003b5c:	83 c0 08             	add    $0x8,%eax
81003b5f:	83 ec 08             	sub    $0x8,%esp
81003b62:	50                   	push   %eax
81003b63:	ff 75 08             	push   0x8(%ebp)
81003b66:	e8 79 e1 ff ff       	call   81001ce4 <_free_r>
81003b6b:	83 c4 10             	add    $0x10,%esp
81003b6e:	a1 60 9e 00 81       	mov    0x81009e60,%eax
81003b73:	89 c2                	mov    %eax,%edx
81003b75:	a1 44 9e 00 81       	mov    0x81009e44,%eax
81003b7a:	39 c2                	cmp    %eax,%edx
81003b7c:	76 0a                	jbe    81003b88 <malloc_extend_top+0x274>
81003b7e:	a1 60 9e 00 81       	mov    0x81009e60,%eax
81003b83:	a3 44 9e 00 81       	mov    %eax,0x81009e44
81003b88:	a1 60 9e 00 81       	mov    0x81009e60,%eax
81003b8d:	89 c2                	mov    %eax,%edx
81003b8f:	a1 48 9e 00 81       	mov    0x81009e48,%eax
81003b94:	39 c2                	cmp    %eax,%edx
81003b96:	76 0d                	jbe    81003ba5 <malloc_extend_top+0x291>
81003b98:	a1 60 9e 00 81       	mov    0x81009e60,%eax
81003b9d:	a3 48 9e 00 81       	mov    %eax,0x81009e48
81003ba2:	eb 01                	jmp    81003ba5 <malloc_extend_top+0x291>
81003ba4:	90                   	nop
81003ba5:	c9                   	leave  
81003ba6:	c3                   	ret    

81003ba7 <_malloc_r>:
81003ba7:	55                   	push   %ebp
81003ba8:	89 e5                	mov    %esp,%ebp
81003baa:	53                   	push   %ebx
81003bab:	83 ec 44             	sub    $0x44,%esp
81003bae:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bb1:	83 c0 0b             	add    $0xb,%eax
81003bb4:	83 f8 16             	cmp    $0x16,%eax
81003bb7:	76 0b                	jbe    81003bc4 <_malloc_r+0x1d>
81003bb9:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bbc:	83 c0 0b             	add    $0xb,%eax
81003bbf:	83 e0 f8             	and    $0xfffffff8,%eax
81003bc2:	eb 05                	jmp    81003bc9 <_malloc_r+0x22>
81003bc4:	b8 10 00 00 00       	mov    $0x10,%eax
81003bc9:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003bcc:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003bcf:	85 c0                	test   %eax,%eax
81003bd1:	78 08                	js     81003bdb <_malloc_r+0x34>
81003bd3:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003bd6:	3b 45 0c             	cmp    0xc(%ebp),%eax
81003bd9:	73 13                	jae    81003bee <_malloc_r+0x47>
81003bdb:	8b 45 08             	mov    0x8(%ebp),%eax
81003bde:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81003be4:	b8 00 00 00 00       	mov    $0x0,%eax
81003be9:	e9 d6 07 00 00       	jmp    810043c4 <_malloc_r+0x81d>
81003bee:	83 ec 0c             	sub    $0xc,%esp
81003bf1:	ff 75 08             	push   0x8(%ebp)
81003bf4:	e8 8f 09 00 00       	call   81004588 <__malloc_lock>
81003bf9:	83 c4 10             	add    $0x10,%esp
81003bfc:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
81003c03:	0f 87 b0 00 00 00    	ja     81003cb9 <_malloc_r+0x112>
81003c09:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c0c:	c1 e8 03             	shr    $0x3,%eax
81003c0f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003c12:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c15:	83 c0 01             	add    $0x1,%eax
81003c18:	01 c0                	add    %eax,%eax
81003c1a:	c1 e0 02             	shl    $0x2,%eax
81003c1d:	05 60 91 00 81       	add    $0x81009160,%eax
81003c22:	83 e8 08             	sub    $0x8,%eax
81003c25:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003c28:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003c2b:	8b 40 0c             	mov    0xc(%eax),%eax
81003c2e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c31:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c34:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81003c37:	75 0d                	jne    81003c46 <_malloc_r+0x9f>
81003c39:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81003c3d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003c40:	8b 40 0c             	mov    0xc(%eax),%eax
81003c43:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c46:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c49:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81003c4c:	74 62                	je     81003cb0 <_malloc_r+0x109>
81003c4e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c51:	8b 40 04             	mov    0x4(%eax),%eax
81003c54:	83 e0 fc             	and    $0xfffffffc,%eax
81003c57:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003c5a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c5d:	8b 40 0c             	mov    0xc(%eax),%eax
81003c60:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003c63:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c66:	8b 40 08             	mov    0x8(%eax),%eax
81003c69:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003c6c:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003c6f:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003c72:	89 50 0c             	mov    %edx,0xc(%eax)
81003c75:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003c78:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003c7b:	89 50 08             	mov    %edx,0x8(%eax)
81003c7e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003c81:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003c84:	01 d0                	add    %edx,%eax
81003c86:	8b 50 04             	mov    0x4(%eax),%edx
81003c89:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003c8c:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003c8f:	01 c8                	add    %ecx,%eax
81003c91:	83 ca 01             	or     $0x1,%edx
81003c94:	89 50 04             	mov    %edx,0x4(%eax)
81003c97:	83 ec 0c             	sub    $0xc,%esp
81003c9a:	ff 75 08             	push   0x8(%ebp)
81003c9d:	e8 ec 08 00 00       	call   8100458e <__malloc_unlock>
81003ca2:	83 c4 10             	add    $0x10,%esp
81003ca5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ca8:	83 c0 08             	add    $0x8,%eax
81003cab:	e9 14 07 00 00       	jmp    810043c4 <_malloc_r+0x81d>
81003cb0:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
81003cb4:	e9 46 01 00 00       	jmp    81003dff <_malloc_r+0x258>
81003cb9:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003cbc:	c1 e8 09             	shr    $0x9,%eax
81003cbf:	85 c0                	test   %eax,%eax
81003cc1:	75 08                	jne    81003ccb <_malloc_r+0x124>
81003cc3:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003cc6:	c1 e8 03             	shr    $0x3,%eax
81003cc9:	eb 77                	jmp    81003d42 <_malloc_r+0x19b>
81003ccb:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003cce:	c1 e8 09             	shr    $0x9,%eax
81003cd1:	83 f8 04             	cmp    $0x4,%eax
81003cd4:	77 0b                	ja     81003ce1 <_malloc_r+0x13a>
81003cd6:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003cd9:	c1 e8 06             	shr    $0x6,%eax
81003cdc:	83 c0 38             	add    $0x38,%eax
81003cdf:	eb 61                	jmp    81003d42 <_malloc_r+0x19b>
81003ce1:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003ce4:	c1 e8 09             	shr    $0x9,%eax
81003ce7:	83 f8 14             	cmp    $0x14,%eax
81003cea:	77 0b                	ja     81003cf7 <_malloc_r+0x150>
81003cec:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003cef:	c1 e8 09             	shr    $0x9,%eax
81003cf2:	83 c0 5b             	add    $0x5b,%eax
81003cf5:	eb 4b                	jmp    81003d42 <_malloc_r+0x19b>
81003cf7:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003cfa:	c1 e8 09             	shr    $0x9,%eax
81003cfd:	83 f8 54             	cmp    $0x54,%eax
81003d00:	77 0b                	ja     81003d0d <_malloc_r+0x166>
81003d02:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d05:	c1 e8 0c             	shr    $0xc,%eax
81003d08:	83 c0 6e             	add    $0x6e,%eax
81003d0b:	eb 35                	jmp    81003d42 <_malloc_r+0x19b>
81003d0d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d10:	c1 e8 09             	shr    $0x9,%eax
81003d13:	3d 54 01 00 00       	cmp    $0x154,%eax
81003d18:	77 0b                	ja     81003d25 <_malloc_r+0x17e>
81003d1a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d1d:	c1 e8 0f             	shr    $0xf,%eax
81003d20:	83 c0 77             	add    $0x77,%eax
81003d23:	eb 1d                	jmp    81003d42 <_malloc_r+0x19b>
81003d25:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d28:	c1 e8 09             	shr    $0x9,%eax
81003d2b:	3d 54 05 00 00       	cmp    $0x554,%eax
81003d30:	77 0b                	ja     81003d3d <_malloc_r+0x196>
81003d32:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d35:	c1 e8 12             	shr    $0x12,%eax
81003d38:	83 c0 7c             	add    $0x7c,%eax
81003d3b:	eb 05                	jmp    81003d42 <_malloc_r+0x19b>
81003d3d:	b8 7e 00 00 00       	mov    $0x7e,%eax
81003d42:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003d45:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d48:	83 c0 01             	add    $0x1,%eax
81003d4b:	01 c0                	add    %eax,%eax
81003d4d:	c1 e0 02             	shl    $0x2,%eax
81003d50:	05 60 91 00 81       	add    $0x81009160,%eax
81003d55:	83 e8 08             	sub    $0x8,%eax
81003d58:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003d5b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003d5e:	8b 40 0c             	mov    0xc(%eax),%eax
81003d61:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d64:	e9 86 00 00 00       	jmp    81003def <_malloc_r+0x248>
81003d69:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d6c:	8b 40 04             	mov    0x4(%eax),%eax
81003d6f:	83 e0 fc             	and    $0xfffffffc,%eax
81003d72:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003d75:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003d78:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003d7b:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003d7e:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003d82:	7e 06                	jle    81003d8a <_malloc_r+0x1e3>
81003d84:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81003d88:	eb 71                	jmp    81003dfb <_malloc_r+0x254>
81003d8a:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003d8e:	78 56                	js     81003de6 <_malloc_r+0x23f>
81003d90:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d93:	8b 40 0c             	mov    0xc(%eax),%eax
81003d96:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003d99:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d9c:	8b 40 08             	mov    0x8(%eax),%eax
81003d9f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003da2:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003da5:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003da8:	89 50 0c             	mov    %edx,0xc(%eax)
81003dab:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003dae:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003db1:	89 50 08             	mov    %edx,0x8(%eax)
81003db4:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003db7:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003dba:	01 d0                	add    %edx,%eax
81003dbc:	8b 50 04             	mov    0x4(%eax),%edx
81003dbf:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003dc2:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003dc5:	01 c8                	add    %ecx,%eax
81003dc7:	83 ca 01             	or     $0x1,%edx
81003dca:	89 50 04             	mov    %edx,0x4(%eax)
81003dcd:	83 ec 0c             	sub    $0xc,%esp
81003dd0:	ff 75 08             	push   0x8(%ebp)
81003dd3:	e8 b6 07 00 00       	call   8100458e <__malloc_unlock>
81003dd8:	83 c4 10             	add    $0x10,%esp
81003ddb:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003dde:	83 c0 08             	add    $0x8,%eax
81003de1:	e9 de 05 00 00       	jmp    810043c4 <_malloc_r+0x81d>
81003de6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003de9:	8b 40 0c             	mov    0xc(%eax),%eax
81003dec:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003def:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003df2:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003df5:	0f 85 6e ff ff ff    	jne    81003d69 <_malloc_r+0x1c2>
81003dfb:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003dff:	b8 68 91 00 81       	mov    $0x81009168,%eax
81003e04:	8b 40 08             	mov    0x8(%eax),%eax
81003e07:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003e0a:	b8 68 91 00 81       	mov    $0x81009168,%eax
81003e0f:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81003e12:	0f 84 9c 02 00 00    	je     810040b4 <_malloc_r+0x50d>
81003e18:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e1b:	8b 40 04             	mov    0x4(%eax),%eax
81003e1e:	83 e0 fc             	and    $0xfffffffc,%eax
81003e21:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003e24:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003e27:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003e2a:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003e2d:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003e31:	7e 7a                	jle    81003ead <_malloc_r+0x306>
81003e33:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003e36:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003e39:	01 d0                	add    %edx,%eax
81003e3b:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81003e3e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003e41:	83 c8 01             	or     $0x1,%eax
81003e44:	89 c2                	mov    %eax,%edx
81003e46:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e49:	89 50 04             	mov    %edx,0x4(%eax)
81003e4c:	b8 68 91 00 81       	mov    $0x81009168,%eax
81003e51:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81003e54:	89 50 0c             	mov    %edx,0xc(%eax)
81003e57:	ba 68 91 00 81       	mov    $0x81009168,%edx
81003e5c:	8b 40 0c             	mov    0xc(%eax),%eax
81003e5f:	89 42 08             	mov    %eax,0x8(%edx)
81003e62:	ba 68 91 00 81       	mov    $0x81009168,%edx
81003e67:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003e6a:	89 50 0c             	mov    %edx,0xc(%eax)
81003e6d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003e70:	8b 50 0c             	mov    0xc(%eax),%edx
81003e73:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003e76:	89 50 08             	mov    %edx,0x8(%eax)
81003e79:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003e7c:	83 c8 01             	or     $0x1,%eax
81003e7f:	89 c2                	mov    %eax,%edx
81003e81:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003e84:	89 50 04             	mov    %edx,0x4(%eax)
81003e87:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003e8a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003e8d:	01 c2                	add    %eax,%edx
81003e8f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003e92:	89 02                	mov    %eax,(%edx)
81003e94:	83 ec 0c             	sub    $0xc,%esp
81003e97:	ff 75 08             	push   0x8(%ebp)
81003e9a:	e8 ef 06 00 00       	call   8100458e <__malloc_unlock>
81003e9f:	83 c4 10             	add    $0x10,%esp
81003ea2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ea5:	83 c0 08             	add    $0x8,%eax
81003ea8:	e9 17 05 00 00       	jmp    810043c4 <_malloc_r+0x81d>
81003ead:	b8 68 91 00 81       	mov    $0x81009168,%eax
81003eb2:	ba 68 91 00 81       	mov    $0x81009168,%edx
81003eb7:	89 50 0c             	mov    %edx,0xc(%eax)
81003eba:	ba 68 91 00 81       	mov    $0x81009168,%edx
81003ebf:	8b 40 0c             	mov    0xc(%eax),%eax
81003ec2:	89 42 08             	mov    %eax,0x8(%edx)
81003ec5:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003ec9:	78 32                	js     81003efd <_malloc_r+0x356>
81003ecb:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003ece:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ed1:	01 d0                	add    %edx,%eax
81003ed3:	8b 50 04             	mov    0x4(%eax),%edx
81003ed6:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003ed9:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003edc:	01 c8                	add    %ecx,%eax
81003ede:	83 ca 01             	or     $0x1,%edx
81003ee1:	89 50 04             	mov    %edx,0x4(%eax)
81003ee4:	83 ec 0c             	sub    $0xc,%esp
81003ee7:	ff 75 08             	push   0x8(%ebp)
81003eea:	e8 9f 06 00 00       	call   8100458e <__malloc_unlock>
81003eef:	83 c4 10             	add    $0x10,%esp
81003ef2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ef5:	83 c0 08             	add    $0x8,%eax
81003ef8:	e9 c7 04 00 00       	jmp    810043c4 <_malloc_r+0x81d>
81003efd:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
81003f04:	77 7f                	ja     81003f85 <_malloc_r+0x3de>
81003f06:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f09:	c1 e8 03             	shr    $0x3,%eax
81003f0c:	89 45 c8             	mov    %eax,-0x38(%ebp)
81003f0f:	b8 60 91 00 81       	mov    $0x81009160,%eax
81003f14:	8b 58 04             	mov    0x4(%eax),%ebx
81003f17:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003f1a:	8d 50 03             	lea    0x3(%eax),%edx
81003f1d:	85 c0                	test   %eax,%eax
81003f1f:	0f 48 c2             	cmovs  %edx,%eax
81003f22:	c1 f8 02             	sar    $0x2,%eax
81003f25:	ba 01 00 00 00       	mov    $0x1,%edx
81003f2a:	89 c1                	mov    %eax,%ecx
81003f2c:	d3 e2                	shl    %cl,%edx
81003f2e:	89 d0                	mov    %edx,%eax
81003f30:	ba 60 91 00 81       	mov    $0x81009160,%edx
81003f35:	09 d8                	or     %ebx,%eax
81003f37:	89 42 04             	mov    %eax,0x4(%edx)
81003f3a:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003f3d:	83 c0 01             	add    $0x1,%eax
81003f40:	01 c0                	add    %eax,%eax
81003f42:	c1 e0 02             	shl    $0x2,%eax
81003f45:	05 60 91 00 81       	add    $0x81009160,%eax
81003f4a:	83 e8 08             	sub    $0x8,%eax
81003f4d:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003f50:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003f53:	8b 40 08             	mov    0x8(%eax),%eax
81003f56:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003f59:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003f5c:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003f5f:	89 50 0c             	mov    %edx,0xc(%eax)
81003f62:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003f65:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003f68:	89 50 08             	mov    %edx,0x8(%eax)
81003f6b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003f6e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003f71:	89 50 08             	mov    %edx,0x8(%eax)
81003f74:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003f77:	8b 50 08             	mov    0x8(%eax),%edx
81003f7a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003f7d:	89 50 0c             	mov    %edx,0xc(%eax)
81003f80:	e9 2f 01 00 00       	jmp    810040b4 <_malloc_r+0x50d>
81003f85:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f88:	c1 e8 09             	shr    $0x9,%eax
81003f8b:	85 c0                	test   %eax,%eax
81003f8d:	75 08                	jne    81003f97 <_malloc_r+0x3f0>
81003f8f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f92:	c1 e8 03             	shr    $0x3,%eax
81003f95:	eb 77                	jmp    8100400e <_malloc_r+0x467>
81003f97:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f9a:	c1 e8 09             	shr    $0x9,%eax
81003f9d:	83 f8 04             	cmp    $0x4,%eax
81003fa0:	77 0b                	ja     81003fad <_malloc_r+0x406>
81003fa2:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003fa5:	c1 e8 06             	shr    $0x6,%eax
81003fa8:	83 c0 38             	add    $0x38,%eax
81003fab:	eb 61                	jmp    8100400e <_malloc_r+0x467>
81003fad:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003fb0:	c1 e8 09             	shr    $0x9,%eax
81003fb3:	83 f8 14             	cmp    $0x14,%eax
81003fb6:	77 0b                	ja     81003fc3 <_malloc_r+0x41c>
81003fb8:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003fbb:	c1 e8 09             	shr    $0x9,%eax
81003fbe:	83 c0 5b             	add    $0x5b,%eax
81003fc1:	eb 4b                	jmp    8100400e <_malloc_r+0x467>
81003fc3:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003fc6:	c1 e8 09             	shr    $0x9,%eax
81003fc9:	83 f8 54             	cmp    $0x54,%eax
81003fcc:	77 0b                	ja     81003fd9 <_malloc_r+0x432>
81003fce:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003fd1:	c1 e8 0c             	shr    $0xc,%eax
81003fd4:	83 c0 6e             	add    $0x6e,%eax
81003fd7:	eb 35                	jmp    8100400e <_malloc_r+0x467>
81003fd9:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003fdc:	c1 e8 09             	shr    $0x9,%eax
81003fdf:	3d 54 01 00 00       	cmp    $0x154,%eax
81003fe4:	77 0b                	ja     81003ff1 <_malloc_r+0x44a>
81003fe6:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003fe9:	c1 e8 0f             	shr    $0xf,%eax
81003fec:	83 c0 77             	add    $0x77,%eax
81003fef:	eb 1d                	jmp    8100400e <_malloc_r+0x467>
81003ff1:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ff4:	c1 e8 09             	shr    $0x9,%eax
81003ff7:	3d 54 05 00 00       	cmp    $0x554,%eax
81003ffc:	77 0b                	ja     81004009 <_malloc_r+0x462>
81003ffe:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004001:	c1 e8 12             	shr    $0x12,%eax
81004004:	83 c0 7c             	add    $0x7c,%eax
81004007:	eb 05                	jmp    8100400e <_malloc_r+0x467>
81004009:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100400e:	89 45 c8             	mov    %eax,-0x38(%ebp)
81004011:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004014:	83 c0 01             	add    $0x1,%eax
81004017:	01 c0                	add    %eax,%eax
81004019:	c1 e0 02             	shl    $0x2,%eax
8100401c:	05 60 91 00 81       	add    $0x81009160,%eax
81004021:	83 e8 08             	sub    $0x8,%eax
81004024:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004027:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100402a:	8b 40 08             	mov    0x8(%eax),%eax
8100402d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004030:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004033:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81004036:	75 36                	jne    8100406e <_malloc_r+0x4c7>
81004038:	b8 60 91 00 81       	mov    $0x81009160,%eax
8100403d:	8b 58 04             	mov    0x4(%eax),%ebx
81004040:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004043:	8d 50 03             	lea    0x3(%eax),%edx
81004046:	85 c0                	test   %eax,%eax
81004048:	0f 48 c2             	cmovs  %edx,%eax
8100404b:	c1 f8 02             	sar    $0x2,%eax
8100404e:	ba 01 00 00 00       	mov    $0x1,%edx
81004053:	89 c1                	mov    %eax,%ecx
81004055:	d3 e2                	shl    %cl,%edx
81004057:	89 d0                	mov    %edx,%eax
81004059:	ba 60 91 00 81       	mov    $0x81009160,%edx
8100405e:	09 d8                	or     %ebx,%eax
81004060:	89 42 04             	mov    %eax,0x4(%edx)
81004063:	eb 28                	jmp    8100408d <_malloc_r+0x4e6>
81004065:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004068:	8b 40 08             	mov    0x8(%eax),%eax
8100406b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100406e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004071:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81004074:	74 0e                	je     81004084 <_malloc_r+0x4dd>
81004076:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004079:	8b 40 04             	mov    0x4(%eax),%eax
8100407c:	83 e0 fc             	and    $0xfffffffc,%eax
8100407f:	39 45 cc             	cmp    %eax,-0x34(%ebp)
81004082:	72 e1                	jb     81004065 <_malloc_r+0x4be>
81004084:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004087:	8b 40 0c             	mov    0xc(%eax),%eax
8100408a:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100408d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004090:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004093:	89 50 0c             	mov    %edx,0xc(%eax)
81004096:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004099:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100409c:	89 50 08             	mov    %edx,0x8(%eax)
8100409f:	8b 45 d8             	mov    -0x28(%ebp),%eax
810040a2:	8b 55 f4             	mov    -0xc(%ebp),%edx
810040a5:	89 50 08             	mov    %edx,0x8(%eax)
810040a8:	8b 45 d8             	mov    -0x28(%ebp),%eax
810040ab:	8b 50 08             	mov    0x8(%eax),%edx
810040ae:	8b 45 dc             	mov    -0x24(%ebp),%eax
810040b1:	89 50 0c             	mov    %edx,0xc(%eax)
810040b4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040b7:	8d 50 03             	lea    0x3(%eax),%edx
810040ba:	85 c0                	test   %eax,%eax
810040bc:	0f 48 c2             	cmovs  %edx,%eax
810040bf:	c1 f8 02             	sar    $0x2,%eax
810040c2:	ba 01 00 00 00       	mov    $0x1,%edx
810040c7:	89 c1                	mov    %eax,%ecx
810040c9:	d3 e2                	shl    %cl,%edx
810040cb:	89 d0                	mov    %edx,%eax
810040cd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810040d0:	b8 60 91 00 81       	mov    $0x81009160,%eax
810040d5:	8b 40 04             	mov    0x4(%eax),%eax
810040d8:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810040db:	0f 87 13 02 00 00    	ja     810042f4 <_malloc_r+0x74d>
810040e1:	b8 60 91 00 81       	mov    $0x81009160,%eax
810040e6:	8b 40 04             	mov    0x4(%eax),%eax
810040e9:	23 45 e4             	and    -0x1c(%ebp),%eax
810040ec:	85 c0                	test   %eax,%eax
810040ee:	75 27                	jne    81004117 <_malloc_r+0x570>
810040f0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040f3:	83 e0 fc             	and    $0xfffffffc,%eax
810040f6:	83 c0 04             	add    $0x4,%eax
810040f9:	89 45 f0             	mov    %eax,-0x10(%ebp)
810040fc:	d1 65 e4             	shll   -0x1c(%ebp)
810040ff:	eb 07                	jmp    81004108 <_malloc_r+0x561>
81004101:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81004105:	d1 65 e4             	shll   -0x1c(%ebp)
81004108:	b8 60 91 00 81       	mov    $0x81009160,%eax
8100410d:	8b 40 04             	mov    0x4(%eax),%eax
81004110:	23 45 e4             	and    -0x1c(%ebp),%eax
81004113:	85 c0                	test   %eax,%eax
81004115:	74 ea                	je     81004101 <_malloc_r+0x55a>
81004117:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100411a:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100411d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004120:	83 c0 01             	add    $0x1,%eax
81004123:	01 c0                	add    %eax,%eax
81004125:	c1 e0 02             	shl    $0x2,%eax
81004128:	05 60 91 00 81       	add    $0x81009160,%eax
8100412d:	83 e8 08             	sub    $0x8,%eax
81004130:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004133:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004136:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81004139:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100413c:	8b 40 0c             	mov    0xc(%eax),%eax
8100413f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004142:	e9 22 01 00 00       	jmp    81004269 <_malloc_r+0x6c2>
81004147:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100414a:	8b 40 04             	mov    0x4(%eax),%eax
8100414d:	83 e0 fc             	and    $0xfffffffc,%eax
81004150:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004153:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004156:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004159:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100415c:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004160:	0f 8e 9e 00 00 00    	jle    81004204 <_malloc_r+0x65d>
81004166:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004169:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100416c:	01 d0                	add    %edx,%eax
8100416e:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81004171:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004174:	83 c8 01             	or     $0x1,%eax
81004177:	89 c2                	mov    %eax,%edx
81004179:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100417c:	89 50 04             	mov    %edx,0x4(%eax)
8100417f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004182:	8b 40 0c             	mov    0xc(%eax),%eax
81004185:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004188:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100418b:	8b 40 08             	mov    0x8(%eax),%eax
8100418e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004191:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004194:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004197:	89 50 0c             	mov    %edx,0xc(%eax)
8100419a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100419d:	8b 55 dc             	mov    -0x24(%ebp),%edx
810041a0:	89 50 08             	mov    %edx,0x8(%eax)
810041a3:	b8 68 91 00 81       	mov    $0x81009168,%eax
810041a8:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810041ab:	89 50 0c             	mov    %edx,0xc(%eax)
810041ae:	ba 68 91 00 81       	mov    $0x81009168,%edx
810041b3:	8b 40 0c             	mov    0xc(%eax),%eax
810041b6:	89 42 08             	mov    %eax,0x8(%edx)
810041b9:	ba 68 91 00 81       	mov    $0x81009168,%edx
810041be:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810041c1:	89 50 0c             	mov    %edx,0xc(%eax)
810041c4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810041c7:	8b 50 0c             	mov    0xc(%eax),%edx
810041ca:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810041cd:	89 50 08             	mov    %edx,0x8(%eax)
810041d0:	8b 45 e8             	mov    -0x18(%ebp),%eax
810041d3:	83 c8 01             	or     $0x1,%eax
810041d6:	89 c2                	mov    %eax,%edx
810041d8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810041db:	89 50 04             	mov    %edx,0x4(%eax)
810041de:	8b 55 e8             	mov    -0x18(%ebp),%edx
810041e1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810041e4:	01 c2                	add    %eax,%edx
810041e6:	8b 45 e8             	mov    -0x18(%ebp),%eax
810041e9:	89 02                	mov    %eax,(%edx)
810041eb:	83 ec 0c             	sub    $0xc,%esp
810041ee:	ff 75 08             	push   0x8(%ebp)
810041f1:	e8 98 03 00 00       	call   8100458e <__malloc_unlock>
810041f6:	83 c4 10             	add    $0x10,%esp
810041f9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041fc:	83 c0 08             	add    $0x8,%eax
810041ff:	e9 c0 01 00 00       	jmp    810043c4 <_malloc_r+0x81d>
81004204:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81004208:	78 56                	js     81004260 <_malloc_r+0x6b9>
8100420a:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100420d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004210:	01 d0                	add    %edx,%eax
81004212:	8b 50 04             	mov    0x4(%eax),%edx
81004215:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81004218:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100421b:	01 c8                	add    %ecx,%eax
8100421d:	83 ca 01             	or     $0x1,%edx
81004220:	89 50 04             	mov    %edx,0x4(%eax)
81004223:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004226:	8b 40 0c             	mov    0xc(%eax),%eax
81004229:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100422c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100422f:	8b 40 08             	mov    0x8(%eax),%eax
81004232:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004235:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004238:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100423b:	89 50 0c             	mov    %edx,0xc(%eax)
8100423e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004241:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004244:	89 50 08             	mov    %edx,0x8(%eax)
81004247:	83 ec 0c             	sub    $0xc,%esp
8100424a:	ff 75 08             	push   0x8(%ebp)
8100424d:	e8 3c 03 00 00       	call   8100458e <__malloc_unlock>
81004252:	83 c4 10             	add    $0x10,%esp
81004255:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004258:	83 c0 08             	add    $0x8,%eax
8100425b:	e9 64 01 00 00       	jmp    810043c4 <_malloc_r+0x81d>
81004260:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004263:	8b 40 0c             	mov    0xc(%eax),%eax
81004266:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004269:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100426c:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100426f:	0f 85 d2 fe ff ff    	jne    81004147 <_malloc_r+0x5a0>
81004275:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81004279:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8100427d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004280:	83 e0 03             	and    $0x3,%eax
81004283:	85 c0                	test   %eax,%eax
81004285:	0f 85 ae fe ff ff    	jne    81004139 <_malloc_r+0x592>
8100428b:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100428e:	83 e0 03             	and    $0x3,%eax
81004291:	85 c0                	test   %eax,%eax
81004293:	75 19                	jne    810042ae <_malloc_r+0x707>
81004295:	b8 60 91 00 81       	mov    $0x81009160,%eax
8100429a:	8b 48 04             	mov    0x4(%eax),%ecx
8100429d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810042a0:	f7 d0                	not    %eax
810042a2:	ba 60 91 00 81       	mov    $0x81009160,%edx
810042a7:	21 c8                	and    %ecx,%eax
810042a9:	89 42 04             	mov    %eax,0x4(%edx)
810042ac:	eb 13                	jmp    810042c1 <_malloc_r+0x71a>
810042ae:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
810042b2:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
810042b6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810042b9:	8b 40 08             	mov    0x8(%eax),%eax
810042bc:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
810042bf:	74 ca                	je     8100428b <_malloc_r+0x6e4>
810042c1:	d1 65 e4             	shll   -0x1c(%ebp)
810042c4:	b8 60 91 00 81       	mov    $0x81009160,%eax
810042c9:	8b 40 04             	mov    0x4(%eax),%eax
810042cc:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810042cf:	77 23                	ja     810042f4 <_malloc_r+0x74d>
810042d1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810042d5:	74 1d                	je     810042f4 <_malloc_r+0x74d>
810042d7:	eb 07                	jmp    810042e0 <_malloc_r+0x739>
810042d9:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
810042dd:	d1 65 e4             	shll   -0x1c(%ebp)
810042e0:	b8 60 91 00 81       	mov    $0x81009160,%eax
810042e5:	8b 40 04             	mov    0x4(%eax),%eax
810042e8:	23 45 e4             	and    -0x1c(%ebp),%eax
810042eb:	85 c0                	test   %eax,%eax
810042ed:	74 ea                	je     810042d9 <_malloc_r+0x732>
810042ef:	e9 23 fe ff ff       	jmp    81004117 <_malloc_r+0x570>
810042f4:	b8 60 91 00 81       	mov    $0x81009160,%eax
810042f9:	8b 40 08             	mov    0x8(%eax),%eax
810042fc:	8b 40 04             	mov    0x4(%eax),%eax
810042ff:	83 e0 fc             	and    $0xfffffffc,%eax
81004302:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004305:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004308:	b8 60 91 00 81       	mov    $0x81009160,%eax
8100430d:	8b 40 08             	mov    0x8(%eax),%eax
81004310:	8b 40 04             	mov    0x4(%eax),%eax
81004313:	83 e0 fc             	and    $0xfffffffc,%eax
81004316:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81004319:	77 06                	ja     81004321 <_malloc_r+0x77a>
8100431b:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100431f:	7f 53                	jg     81004374 <_malloc_r+0x7cd>
81004321:	83 ec 08             	sub    $0x8,%esp
81004324:	ff 75 d0             	push   -0x30(%ebp)
81004327:	ff 75 08             	push   0x8(%ebp)
8100432a:	e8 e5 f5 ff ff       	call   81003914 <malloc_extend_top>
8100432f:	83 c4 10             	add    $0x10,%esp
81004332:	b8 60 91 00 81       	mov    $0x81009160,%eax
81004337:	8b 40 08             	mov    0x8(%eax),%eax
8100433a:	8b 40 04             	mov    0x4(%eax),%eax
8100433d:	83 e0 fc             	and    $0xfffffffc,%eax
81004340:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004343:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004346:	b8 60 91 00 81       	mov    $0x81009160,%eax
8100434b:	8b 40 08             	mov    0x8(%eax),%eax
8100434e:	8b 40 04             	mov    0x4(%eax),%eax
81004351:	83 e0 fc             	and    $0xfffffffc,%eax
81004354:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81004357:	77 06                	ja     8100435f <_malloc_r+0x7b8>
81004359:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100435d:	7f 15                	jg     81004374 <_malloc_r+0x7cd>
8100435f:	83 ec 0c             	sub    $0xc,%esp
81004362:	ff 75 08             	push   0x8(%ebp)
81004365:	e8 24 02 00 00       	call   8100458e <__malloc_unlock>
8100436a:	83 c4 10             	add    $0x10,%esp
8100436d:	b8 00 00 00 00       	mov    $0x0,%eax
81004372:	eb 50                	jmp    810043c4 <_malloc_r+0x81d>
81004374:	b8 60 91 00 81       	mov    $0x81009160,%eax
81004379:	8b 40 08             	mov    0x8(%eax),%eax
8100437c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100437f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004382:	83 c8 01             	or     $0x1,%eax
81004385:	89 c2                	mov    %eax,%edx
81004387:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100438a:	89 50 04             	mov    %edx,0x4(%eax)
8100438d:	ba 60 91 00 81       	mov    $0x81009160,%edx
81004392:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81004395:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004398:	01 c8                	add    %ecx,%eax
8100439a:	89 42 08             	mov    %eax,0x8(%edx)
8100439d:	8b 45 e8             	mov    -0x18(%ebp),%eax
810043a0:	83 c8 01             	or     $0x1,%eax
810043a3:	89 c2                	mov    %eax,%edx
810043a5:	b8 60 91 00 81       	mov    $0x81009160,%eax
810043aa:	8b 40 08             	mov    0x8(%eax),%eax
810043ad:	89 50 04             	mov    %edx,0x4(%eax)
810043b0:	83 ec 0c             	sub    $0xc,%esp
810043b3:	ff 75 08             	push   0x8(%ebp)
810043b6:	e8 d3 01 00 00       	call   8100458e <__malloc_unlock>
810043bb:	83 c4 10             	add    $0x10,%esp
810043be:	8b 45 f4             	mov    -0xc(%ebp),%eax
810043c1:	83 c0 08             	add    $0x8,%eax
810043c4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810043c7:	c9                   	leave  
810043c8:	c3                   	ret    
810043c9:	66 90                	xchg   %ax,%ax
810043cb:	66 90                	xchg   %ax,%ax
810043cd:	66 90                	xchg   %ax,%ax
810043cf:	90                   	nop

810043d0 <memchr>:
810043d0:	55                   	push   %ebp
810043d1:	89 e5                	mov    %esp,%ebp
810043d3:	57                   	push   %edi
810043d4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
810043d8:	8b 4d 10             	mov    0x10(%ebp),%ecx
810043db:	8b 7d 08             	mov    0x8(%ebp),%edi
810043de:	31 d2                	xor    %edx,%edx
810043e0:	85 c9                	test   %ecx,%ecx
810043e2:	74 79                	je     8100445d <L20>
810043e4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810043ea:	74 28                	je     81004414 <L5>
810043ec:	3a 07                	cmp    (%edi),%al
810043ee:	74 6a                	je     8100445a <L15>
810043f0:	47                   	inc    %edi
810043f1:	49                   	dec    %ecx
810043f2:	74 69                	je     8100445d <L20>
810043f4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810043fa:	74 18                	je     81004414 <L5>
810043fc:	3a 07                	cmp    (%edi),%al
810043fe:	74 5a                	je     8100445a <L15>
81004400:	47                   	inc    %edi
81004401:	49                   	dec    %ecx
81004402:	74 59                	je     8100445d <L20>
81004404:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100440a:	74 08                	je     81004414 <L5>
8100440c:	3a 07                	cmp    (%edi),%al
8100440e:	74 4a                	je     8100445a <L15>
81004410:	47                   	inc    %edi
81004411:	49                   	dec    %ecx
81004412:	74 49                	je     8100445d <L20>

81004414 <L5>:
81004414:	88 c4                	mov    %al,%ah
81004416:	89 c2                	mov    %eax,%edx
81004418:	c1 e2 10             	shl    $0x10,%edx
8100441b:	09 d0                	or     %edx,%eax
8100441d:	53                   	push   %ebx
8100441e:	66 90                	xchg   %ax,%ax

81004420 <L8>:
81004420:	83 e9 04             	sub    $0x4,%ecx
81004423:	72 1c                	jb     81004441 <L9>
81004425:	8b 17                	mov    (%edi),%edx
81004427:	83 c7 04             	add    $0x4,%edi
8100442a:	31 c2                	xor    %eax,%edx
8100442c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81004432:	f7 d2                	not    %edx
81004434:	21 d3                	and    %edx,%ebx
81004436:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
8100443c:	74 e2                	je     81004420 <L8>
8100443e:	83 ef 04             	sub    $0x4,%edi

81004441 <L9>:
81004441:	5b                   	pop    %ebx
81004442:	31 d2                	xor    %edx,%edx
81004444:	83 c1 04             	add    $0x4,%ecx
81004447:	74 14                	je     8100445d <L20>
81004449:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81004450 <L10>:
81004450:	3a 07                	cmp    (%edi),%al
81004452:	74 06                	je     8100445a <L15>
81004454:	47                   	inc    %edi
81004455:	49                   	dec    %ecx
81004456:	75 f8                	jne    81004450 <L10>
81004458:	31 ff                	xor    %edi,%edi

8100445a <L15>:
8100445a:	4a                   	dec    %edx
8100445b:	21 fa                	and    %edi,%edx

8100445d <L20>:
8100445d:	89 d0                	mov    %edx,%eax
8100445f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004462:	5f                   	pop    %edi
81004463:	c9                   	leave  
81004464:	c3                   	ret    

81004465 <memcmp>:
81004465:	55                   	push   %ebp
81004466:	89 e5                	mov    %esp,%ebp
81004468:	83 ec 10             	sub    $0x10,%esp
8100446b:	53                   	push   %ebx
8100446c:	57                   	push   %edi
8100446d:	56                   	push   %esi
8100446e:	8b 7d 08             	mov    0x8(%ebp),%edi
81004471:	8b 75 0c             	mov    0xc(%ebp),%esi
81004474:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004477:	fc                   	cld    
81004478:	31 c0                	xor    %eax,%eax
8100447a:	85 c9                	test   %ecx,%ecx
8100447c:	74 31                	je     810044af <L4>
8100447e:	89 f8                	mov    %edi,%eax
81004480:	09 f0                	or     %esi,%eax
81004482:	a8 03                	test   $0x3,%al
81004484:	75 1b                	jne    810044a1 <BYTECMP>
81004486:	89 cb                	mov    %ecx,%ebx
81004488:	c1 e9 02             	shr    $0x2,%ecx
8100448b:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
8100448d:	74 0d                	je     8100449c <L5>
8100448f:	83 ee 04             	sub    $0x4,%esi
81004492:	83 ef 04             	sub    $0x4,%edi
81004495:	b9 04 00 00 00       	mov    $0x4,%ecx
8100449a:	eb 05                	jmp    810044a1 <BYTECMP>

8100449c <L5>:
8100449c:	83 e3 03             	and    $0x3,%ebx
8100449f:	89 d9                	mov    %ebx,%ecx

810044a1 <BYTECMP>:
810044a1:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

810044a3 <L3>:
810044a3:	31 d2                	xor    %edx,%edx
810044a5:	8a 56 ff             	mov    -0x1(%esi),%dl
810044a8:	31 c0                	xor    %eax,%eax
810044aa:	8a 47 ff             	mov    -0x1(%edi),%al
810044ad:	29 d0                	sub    %edx,%eax

810044af <L4>:
810044af:	8d 65 e4             	lea    -0x1c(%ebp),%esp
810044b2:	5e                   	pop    %esi
810044b3:	5f                   	pop    %edi
810044b4:	5b                   	pop    %ebx
810044b5:	c9                   	leave  
810044b6:	c3                   	ret    
810044b7:	90                   	nop

810044b8 <memcpy>:
810044b8:	55                   	push   %ebp
810044b9:	89 e5                	mov    %esp,%ebp
810044bb:	56                   	push   %esi
810044bc:	57                   	push   %edi
810044bd:	53                   	push   %ebx
810044be:	8b 7d 08             	mov    0x8(%ebp),%edi
810044c1:	8b 4d 10             	mov    0x10(%ebp),%ecx
810044c4:	8b 75 0c             	mov    0xc(%ebp),%esi
810044c7:	fc                   	cld    
810044c8:	83 f9 08             	cmp    $0x8,%ecx
810044cb:	76 26                	jbe    810044f3 <memcpy+0x3b>
810044cd:	89 fa                	mov    %edi,%edx
810044cf:	89 cb                	mov    %ecx,%ebx
810044d1:	83 e2 03             	and    $0x3,%edx
810044d4:	74 10                	je     810044e6 <memcpy+0x2e>
810044d6:	b9 04 00 00 00       	mov    $0x4,%ecx
810044db:	29 d1                	sub    %edx,%ecx
810044dd:	83 e1 03             	and    $0x3,%ecx
810044e0:	29 cb                	sub    %ecx,%ebx
810044e2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810044e4:	89 d9                	mov    %ebx,%ecx
810044e6:	c1 e9 02             	shr    $0x2,%ecx
810044e9:	8d 76 00             	lea    0x0(%esi),%esi
810044ec:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
810044ee:	89 d9                	mov    %ebx,%ecx
810044f0:	83 e1 03             	and    $0x3,%ecx
810044f3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810044f5:	8b 45 08             	mov    0x8(%ebp),%eax
810044f8:	8d 65 f4             	lea    -0xc(%ebp),%esp
810044fb:	5b                   	pop    %ebx
810044fc:	5f                   	pop    %edi
810044fd:	5e                   	pop    %esi
810044fe:	c9                   	leave  
810044ff:	c3                   	ret    

81004500 <memset>:
81004500:	55                   	push   %ebp
81004501:	89 e5                	mov    %esp,%ebp
81004503:	57                   	push   %edi
81004504:	8b 7d 08             	mov    0x8(%ebp),%edi
81004507:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
8100450b:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100450e:	fc                   	cld    
8100450f:	83 f9 10             	cmp    $0x10,%ecx
81004512:	76 69                	jbe    8100457d <memset+0x7d>
81004514:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100451a:	74 4c                	je     81004568 <memset+0x68>
8100451c:	88 07                	mov    %al,(%edi)
8100451e:	47                   	inc    %edi
8100451f:	49                   	dec    %ecx
81004520:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004526:	74 40                	je     81004568 <memset+0x68>
81004528:	88 07                	mov    %al,(%edi)
8100452a:	47                   	inc    %edi
8100452b:	49                   	dec    %ecx
8100452c:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004532:	74 34                	je     81004568 <memset+0x68>
81004534:	88 07                	mov    %al,(%edi)
81004536:	47                   	inc    %edi
81004537:	49                   	dec    %ecx
81004538:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100453e:	74 28                	je     81004568 <memset+0x68>
81004540:	88 07                	mov    %al,(%edi)
81004542:	47                   	inc    %edi
81004543:	49                   	dec    %ecx
81004544:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100454a:	74 1c                	je     81004568 <memset+0x68>
8100454c:	88 07                	mov    %al,(%edi)
8100454e:	47                   	inc    %edi
8100454f:	49                   	dec    %ecx
81004550:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004556:	74 10                	je     81004568 <memset+0x68>
81004558:	88 07                	mov    %al,(%edi)
8100455a:	47                   	inc    %edi
8100455b:	49                   	dec    %ecx
8100455c:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004562:	74 04                	je     81004568 <memset+0x68>
81004564:	88 07                	mov    %al,(%edi)
81004566:	47                   	inc    %edi
81004567:	49                   	dec    %ecx
81004568:	88 c4                	mov    %al,%ah
8100456a:	89 c2                	mov    %eax,%edx
8100456c:	c1 e2 10             	shl    $0x10,%edx
8100456f:	09 d0                	or     %edx,%eax
81004571:	89 ca                	mov    %ecx,%edx
81004573:	c1 e9 02             	shr    $0x2,%ecx
81004576:	83 e2 03             	and    $0x3,%edx
81004579:	f3 ab                	rep stos %eax,%es:(%edi)
8100457b:	89 d1                	mov    %edx,%ecx
8100457d:	f3 aa                	rep stos %al,%es:(%edi)
8100457f:	8b 45 08             	mov    0x8(%ebp),%eax
81004582:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004585:	5f                   	pop    %edi
81004586:	c9                   	leave  
81004587:	c3                   	ret    

81004588 <__malloc_lock>:
81004588:	55                   	push   %ebp
81004589:	89 e5                	mov    %esp,%ebp
8100458b:	90                   	nop
8100458c:	5d                   	pop    %ebp
8100458d:	c3                   	ret    

8100458e <__malloc_unlock>:
8100458e:	55                   	push   %ebp
8100458f:	89 e5                	mov    %esp,%ebp
81004591:	90                   	nop
81004592:	5d                   	pop    %ebp
81004593:	c3                   	ret    

81004594 <__sprint_r>:
81004594:	55                   	push   %ebp
81004595:	89 e5                	mov    %esp,%ebp
81004597:	56                   	push   %esi
81004598:	53                   	push   %ebx
81004599:	83 ec 10             	sub    $0x10,%esp
8100459c:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100459f:	be 00 00 00 00       	mov    $0x0,%esi
810045a4:	8b 43 08             	mov    0x8(%ebx),%eax
810045a7:	85 c0                	test   %eax,%eax
810045a9:	75 11                	jne    810045bc <__sprint_r+0x28>
810045ab:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810045b2:	b8 00 00 00 00       	mov    $0x0,%eax
810045b7:	e9 ad 00 00 00       	jmp    81004669 <__sprint_r+0xd5>
810045bc:	8b 45 0c             	mov    0xc(%ebp),%eax
810045bf:	8b 40 64             	mov    0x64(%eax),%eax
810045c2:	25 00 20 00 00       	and    $0x2000,%eax
810045c7:	85 c0                	test   %eax,%eax
810045c9:	74 7a                	je     81004645 <__sprint_r+0xb1>
810045cb:	8b 03                	mov    (%ebx),%eax
810045cd:	89 45 f4             	mov    %eax,-0xc(%ebp)
810045d0:	eb 6a                	jmp    8100463c <__sprint_r+0xa8>
810045d2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810045d5:	8b 00                	mov    (%eax),%eax
810045d7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810045da:	8b 45 f4             	mov    -0xc(%ebp),%eax
810045dd:	8b 40 04             	mov    0x4(%eax),%eax
810045e0:	c1 e8 02             	shr    $0x2,%eax
810045e3:	89 45 e8             	mov    %eax,-0x18(%ebp)
810045e6:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810045ed:	eb 33                	jmp    81004622 <__sprint_r+0x8e>
810045ef:	8b 45 f0             	mov    -0x10(%ebp),%eax
810045f2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810045f9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810045fc:	01 d0                	add    %edx,%eax
810045fe:	8b 00                	mov    (%eax),%eax
81004600:	83 ec 04             	sub    $0x4,%esp
81004603:	ff 75 0c             	push   0xc(%ebp)
81004606:	50                   	push   %eax
81004607:	ff 75 08             	push   0x8(%ebp)
8100460a:	e8 3c 21 00 00       	call   8100674b <_fputwc_r>
8100460f:	83 c4 10             	add    $0x10,%esp
81004612:	83 f8 ff             	cmp    $0xffffffff,%eax
81004615:	75 07                	jne    8100461e <__sprint_r+0x8a>
81004617:	be ff ff ff ff       	mov    $0xffffffff,%esi
8100461c:	eb 3b                	jmp    81004659 <__sprint_r+0xc5>
8100461e:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004622:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004625:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81004628:	7c c5                	jl     810045ef <__sprint_r+0x5b>
8100462a:	8b 43 08             	mov    0x8(%ebx),%eax
8100462d:	8b 55 e8             	mov    -0x18(%ebp),%edx
81004630:	c1 e2 02             	shl    $0x2,%edx
81004633:	29 d0                	sub    %edx,%eax
81004635:	89 43 08             	mov    %eax,0x8(%ebx)
81004638:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
8100463c:	8b 43 08             	mov    0x8(%ebx),%eax
8100463f:	85 c0                	test   %eax,%eax
81004641:	75 8f                	jne    810045d2 <__sprint_r+0x3e>
81004643:	eb 14                	jmp    81004659 <__sprint_r+0xc5>
81004645:	83 ec 04             	sub    $0x4,%esp
81004648:	53                   	push   %ebx
81004649:	ff 75 0c             	push   0xc(%ebp)
8100464c:	ff 75 08             	push   0x8(%ebp)
8100464f:	e8 96 21 00 00       	call   810067ea <__sfvwrite_r>
81004654:	83 c4 10             	add    $0x10,%esp
81004657:	89 c6                	mov    %eax,%esi
81004659:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81004660:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004667:	89 f0                	mov    %esi,%eax
81004669:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100466c:	5b                   	pop    %ebx
8100466d:	5e                   	pop    %esi
8100466e:	5d                   	pop    %ebp
8100466f:	c3                   	ret    

81004670 <__sfputc_r>:
81004670:	55                   	push   %ebp
81004671:	89 e5                	mov    %esp,%ebp
81004673:	83 ec 08             	sub    $0x8,%esp
81004676:	8b 45 10             	mov    0x10(%ebp),%eax
81004679:	8b 40 08             	mov    0x8(%eax),%eax
8100467c:	8d 50 ff             	lea    -0x1(%eax),%edx
8100467f:	8b 45 10             	mov    0x10(%ebp),%eax
81004682:	89 50 08             	mov    %edx,0x8(%eax)
81004685:	8b 45 10             	mov    0x10(%ebp),%eax
81004688:	8b 40 08             	mov    0x8(%eax),%eax
8100468b:	85 c0                	test   %eax,%eax
8100468d:	79 17                	jns    810046a6 <__sfputc_r+0x36>
8100468f:	8b 45 10             	mov    0x10(%ebp),%eax
81004692:	8b 50 08             	mov    0x8(%eax),%edx
81004695:	8b 45 10             	mov    0x10(%ebp),%eax
81004698:	8b 40 18             	mov    0x18(%eax),%eax
8100469b:	39 c2                	cmp    %eax,%edx
8100469d:	7c 21                	jl     810046c0 <__sfputc_r+0x50>
8100469f:	8b 45 0c             	mov    0xc(%ebp),%eax
810046a2:	3c 0a                	cmp    $0xa,%al
810046a4:	74 1a                	je     810046c0 <__sfputc_r+0x50>
810046a6:	8b 45 10             	mov    0x10(%ebp),%eax
810046a9:	8b 00                	mov    (%eax),%eax
810046ab:	8d 48 01             	lea    0x1(%eax),%ecx
810046ae:	8b 55 10             	mov    0x10(%ebp),%edx
810046b1:	89 0a                	mov    %ecx,(%edx)
810046b3:	8b 55 0c             	mov    0xc(%ebp),%edx
810046b6:	88 10                	mov    %dl,(%eax)
810046b8:	0f b6 00             	movzbl (%eax),%eax
810046bb:	0f b6 c0             	movzbl %al,%eax
810046be:	eb 14                	jmp    810046d4 <__sfputc_r+0x64>
810046c0:	83 ec 04             	sub    $0x4,%esp
810046c3:	ff 75 10             	push   0x10(%ebp)
810046c6:	ff 75 0c             	push   0xc(%ebp)
810046c9:	ff 75 08             	push   0x8(%ebp)
810046cc:	e8 1e 19 00 00       	call   81005fef <__swbuf_r>
810046d1:	83 c4 10             	add    $0x10,%esp
810046d4:	c9                   	leave  
810046d5:	c3                   	ret    

810046d6 <__sfputs_r>:
810046d6:	55                   	push   %ebp
810046d7:	89 e5                	mov    %esp,%ebp
810046d9:	53                   	push   %ebx
810046da:	83 ec 14             	sub    $0x14,%esp
810046dd:	8b 45 0c             	mov    0xc(%ebp),%eax
810046e0:	8b 40 64             	mov    0x64(%eax),%eax
810046e3:	25 00 20 00 00       	and    $0x2000,%eax
810046e8:	85 c0                	test   %eax,%eax
810046ea:	74 4c                	je     81004738 <__sfputs_r+0x62>
810046ec:	8b 45 10             	mov    0x10(%ebp),%eax
810046ef:	89 45 f4             	mov    %eax,-0xc(%ebp)
810046f2:	bb 00 00 00 00       	mov    $0x0,%ebx
810046f7:	eb 31                	jmp    8100472a <__sfputs_r+0x54>
810046f9:	89 d8                	mov    %ebx,%eax
810046fb:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81004702:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004705:	01 d0                	add    %edx,%eax
81004707:	8b 00                	mov    (%eax),%eax
81004709:	83 ec 04             	sub    $0x4,%esp
8100470c:	ff 75 0c             	push   0xc(%ebp)
8100470f:	50                   	push   %eax
81004710:	ff 75 08             	push   0x8(%ebp)
81004713:	e8 33 20 00 00       	call   8100674b <_fputwc_r>
81004718:	83 c4 10             	add    $0x10,%esp
8100471b:	83 f8 ff             	cmp    $0xffffffff,%eax
8100471e:	75 07                	jne    81004727 <__sfputs_r+0x51>
81004720:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004725:	eb 52                	jmp    81004779 <__sfputs_r+0xa3>
81004727:	83 c3 01             	add    $0x1,%ebx
8100472a:	8b 45 14             	mov    0x14(%ebp),%eax
8100472d:	c1 e8 02             	shr    $0x2,%eax
81004730:	89 da                	mov    %ebx,%edx
81004732:	39 d0                	cmp    %edx,%eax
81004734:	77 c3                	ja     810046f9 <__sfputs_r+0x23>
81004736:	eb 3c                	jmp    81004774 <__sfputs_r+0x9e>
81004738:	bb 00 00 00 00       	mov    $0x0,%ebx
8100473d:	eb 2e                	jmp    8100476d <__sfputs_r+0x97>
8100473f:	89 da                	mov    %ebx,%edx
81004741:	8b 45 10             	mov    0x10(%ebp),%eax
81004744:	01 d0                	add    %edx,%eax
81004746:	0f b6 00             	movzbl (%eax),%eax
81004749:	0f be c0             	movsbl %al,%eax
8100474c:	83 ec 04             	sub    $0x4,%esp
8100474f:	ff 75 0c             	push   0xc(%ebp)
81004752:	50                   	push   %eax
81004753:	ff 75 08             	push   0x8(%ebp)
81004756:	e8 15 ff ff ff       	call   81004670 <__sfputc_r>
8100475b:	83 c4 10             	add    $0x10,%esp
8100475e:	83 f8 ff             	cmp    $0xffffffff,%eax
81004761:	75 07                	jne    8100476a <__sfputs_r+0x94>
81004763:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004768:	eb 0f                	jmp    81004779 <__sfputs_r+0xa3>
8100476a:	83 c3 01             	add    $0x1,%ebx
8100476d:	89 d8                	mov    %ebx,%eax
8100476f:	39 45 14             	cmp    %eax,0x14(%ebp)
81004772:	77 cb                	ja     8100473f <__sfputs_r+0x69>
81004774:	b8 00 00 00 00       	mov    $0x0,%eax
81004779:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100477c:	c9                   	leave  
8100477d:	c3                   	ret    

8100477e <vfiprintf>:
8100477e:	55                   	push   %ebp
8100477f:	89 e5                	mov    %esp,%ebp
81004781:	83 ec 18             	sub    $0x18,%esp
81004784:	a1 44 91 00 81       	mov    0x81009144,%eax
81004789:	ff 75 10             	push   0x10(%ebp)
8100478c:	ff 75 0c             	push   0xc(%ebp)
8100478f:	ff 75 08             	push   0x8(%ebp)
81004792:	50                   	push   %eax
81004793:	e8 0b 00 00 00       	call   810047a3 <_vfiprintf_r>
81004798:	83 c4 10             	add    $0x10,%esp
8100479b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100479e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810047a1:	c9                   	leave  
810047a2:	c3                   	ret    

810047a3 <_vfiprintf_r>:
810047a3:	55                   	push   %ebp
810047a4:	89 e5                	mov    %esp,%ebp
810047a6:	57                   	push   %edi
810047a7:	56                   	push   %esi
810047a8:	53                   	push   %ebx
810047a9:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
810047af:	c7 45 e4 d6 46 00 81 	movl   $0x810046d6,-0x1c(%ebp)
810047b6:	8b 45 08             	mov    0x8(%ebp),%eax
810047b9:	89 45 e0             	mov    %eax,-0x20(%ebp)
810047bc:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810047c0:	74 18                	je     810047da <_vfiprintf_r+0x37>
810047c2:	8b 45 e0             	mov    -0x20(%ebp),%eax
810047c5:	8b 40 38             	mov    0x38(%eax),%eax
810047c8:	85 c0                	test   %eax,%eax
810047ca:	75 0e                	jne    810047da <_vfiprintf_r+0x37>
810047cc:	83 ec 0c             	sub    $0xc,%esp
810047cf:	ff 75 e0             	push   -0x20(%ebp)
810047d2:	e8 1d d0 ff ff       	call   810017f4 <__sinit>
810047d7:	83 c4 10             	add    $0x10,%esp
810047da:	8b 45 0c             	mov    0xc(%ebp),%eax
810047dd:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810047e1:	98                   	cwtl   
810047e2:	83 e0 08             	and    $0x8,%eax
810047e5:	85 c0                	test   %eax,%eax
810047e7:	74 0a                	je     810047f3 <_vfiprintf_r+0x50>
810047e9:	8b 45 0c             	mov    0xc(%ebp),%eax
810047ec:	8b 40 10             	mov    0x10(%eax),%eax
810047ef:	85 c0                	test   %eax,%eax
810047f1:	75 1f                	jne    81004812 <_vfiprintf_r+0x6f>
810047f3:	83 ec 08             	sub    $0x8,%esp
810047f6:	ff 75 0c             	push   0xc(%ebp)
810047f9:	ff 75 08             	push   0x8(%ebp)
810047fc:	e8 67 19 00 00       	call   81006168 <__swsetup_r>
81004801:	83 c4 10             	add    $0x10,%esp
81004804:	85 c0                	test   %eax,%eax
81004806:	74 0a                	je     81004812 <_vfiprintf_r+0x6f>
81004808:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100480d:	e9 df 02 00 00       	jmp    81004af1 <_vfiprintf_r+0x34e>
81004812:	8b 5d 10             	mov    0x10(%ebp),%ebx
81004815:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
8100481c:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81004820:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81004824:	8b 45 14             	mov    0x14(%ebp),%eax
81004827:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
8100482d:	89 de                	mov    %ebx,%esi
8100482f:	eb 03                	jmp    81004834 <_vfiprintf_r+0x91>
81004831:	83 c3 01             	add    $0x1,%ebx
81004834:	0f b6 03             	movzbl (%ebx),%eax
81004837:	84 c0                	test   %al,%al
81004839:	74 07                	je     81004842 <_vfiprintf_r+0x9f>
8100483b:	0f b6 03             	movzbl (%ebx),%eax
8100483e:	3c 25                	cmp    $0x25,%al
81004840:	75 ef                	jne    81004831 <_vfiprintf_r+0x8e>
81004842:	89 d8                	mov    %ebx,%eax
81004844:	29 f0                	sub    %esi,%eax
81004846:	85 c0                	test   %eax,%eax
81004848:	74 2b                	je     81004875 <_vfiprintf_r+0xd2>
8100484a:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81004850:	50                   	push   %eax
81004851:	56                   	push   %esi
81004852:	ff 75 0c             	push   0xc(%ebp)
81004855:	ff 75 08             	push   0x8(%ebp)
81004858:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100485b:	ff d0                	call   *%eax
8100485d:	83 c4 10             	add    $0x10,%esp
81004860:	83 f8 ff             	cmp    $0xffffffff,%eax
81004863:	0f 84 68 02 00 00    	je     81004ad1 <_vfiprintf_r+0x32e>
81004869:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100486c:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81004872:	89 45 94             	mov    %eax,-0x6c(%ebp)
81004875:	0f b6 03             	movzbl (%ebx),%eax
81004878:	84 c0                	test   %al,%al
8100487a:	0f 84 54 02 00 00    	je     81004ad4 <_vfiprintf_r+0x331>
81004880:	83 c3 01             	add    $0x1,%ebx
81004883:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
8100488a:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81004891:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81004898:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
8100489f:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
810048a3:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
810048aa:	c7 45 dc 94 89 00 81 	movl   $0x81008994,-0x24(%ebp)
810048b1:	eb 1b                	jmp    810048ce <_vfiprintf_r+0x12b>
810048b3:	8b 55 80             	mov    -0x80(%ebp),%edx
810048b6:	89 f0                	mov    %esi,%eax
810048b8:	2b 45 dc             	sub    -0x24(%ebp),%eax
810048bb:	be 01 00 00 00       	mov    $0x1,%esi
810048c0:	89 c1                	mov    %eax,%ecx
810048c2:	d3 e6                	shl    %cl,%esi
810048c4:	89 f0                	mov    %esi,%eax
810048c6:	09 d0                	or     %edx,%eax
810048c8:	89 45 80             	mov    %eax,-0x80(%ebp)
810048cb:	83 c3 01             	add    $0x1,%ebx
810048ce:	0f b6 03             	movzbl (%ebx),%eax
810048d1:	0f be c0             	movsbl %al,%eax
810048d4:	83 ec 04             	sub    $0x4,%esp
810048d7:	6a 05                	push   $0x5
810048d9:	50                   	push   %eax
810048da:	ff 75 dc             	push   -0x24(%ebp)
810048dd:	e8 ee fa ff ff       	call   810043d0 <memchr>
810048e2:	83 c4 10             	add    $0x10,%esp
810048e5:	89 c6                	mov    %eax,%esi
810048e7:	85 f6                	test   %esi,%esi
810048e9:	75 c8                	jne    810048b3 <_vfiprintf_r+0x110>
810048eb:	8b 45 80             	mov    -0x80(%ebp),%eax
810048ee:	83 e0 10             	and    $0x10,%eax
810048f1:	85 c0                	test   %eax,%eax
810048f3:	74 04                	je     810048f9 <_vfiprintf_r+0x156>
810048f5:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
810048f9:	8b 45 80             	mov    -0x80(%ebp),%eax
810048fc:	83 e0 08             	and    $0x8,%eax
810048ff:	85 c0                	test   %eax,%eax
81004901:	74 04                	je     81004907 <_vfiprintf_r+0x164>
81004903:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81004907:	0f b6 03             	movzbl (%ebx),%eax
8100490a:	3c 2a                	cmp    $0x2a,%al
8100490c:	75 50                	jne    8100495e <_vfiprintf_r+0x1bb>
8100490e:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004914:	8d 50 04             	lea    0x4(%eax),%edx
81004917:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100491d:	8b 00                	mov    (%eax),%eax
8100491f:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004922:	8b 45 8c             	mov    -0x74(%ebp),%eax
81004925:	85 c0                	test   %eax,%eax
81004927:	79 11                	jns    8100493a <_vfiprintf_r+0x197>
81004929:	8b 45 8c             	mov    -0x74(%ebp),%eax
8100492c:	f7 d8                	neg    %eax
8100492e:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004931:	8b 45 80             	mov    -0x80(%ebp),%eax
81004934:	83 c8 02             	or     $0x2,%eax
81004937:	89 45 80             	mov    %eax,-0x80(%ebp)
8100493a:	83 c3 01             	add    $0x1,%ebx
8100493d:	eb 2d                	jmp    8100496c <_vfiprintf_r+0x1c9>
8100493f:	8b 55 8c             	mov    -0x74(%ebp),%edx
81004942:	89 d0                	mov    %edx,%eax
81004944:	c1 e0 02             	shl    $0x2,%eax
81004947:	01 d0                	add    %edx,%eax
81004949:	01 c0                	add    %eax,%eax
8100494b:	89 c2                	mov    %eax,%edx
8100494d:	0f b6 03             	movzbl (%ebx),%eax
81004950:	0f be c0             	movsbl %al,%eax
81004953:	83 e8 30             	sub    $0x30,%eax
81004956:	01 d0                	add    %edx,%eax
81004958:	89 45 8c             	mov    %eax,-0x74(%ebp)
8100495b:	83 c3 01             	add    $0x1,%ebx
8100495e:	0f b6 03             	movzbl (%ebx),%eax
81004961:	0f be c0             	movsbl %al,%eax
81004964:	83 e8 30             	sub    $0x30,%eax
81004967:	83 f8 09             	cmp    $0x9,%eax
8100496a:	76 d3                	jbe    8100493f <_vfiprintf_r+0x19c>
8100496c:	0f b6 03             	movzbl (%ebx),%eax
8100496f:	3c 2e                	cmp    $0x2e,%al
81004971:	75 67                	jne    810049da <_vfiprintf_r+0x237>
81004973:	83 c3 01             	add    $0x1,%ebx
81004976:	0f b6 03             	movzbl (%ebx),%eax
81004979:	3c 2a                	cmp    $0x2a,%al
8100497b:	75 27                	jne    810049a4 <_vfiprintf_r+0x201>
8100497d:	83 c3 01             	add    $0x1,%ebx
81004980:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004986:	8d 50 04             	lea    0x4(%eax),%edx
81004989:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100498f:	8b 00                	mov    (%eax),%eax
81004991:	89 45 84             	mov    %eax,-0x7c(%ebp)
81004994:	8b 45 84             	mov    -0x7c(%ebp),%eax
81004997:	85 c0                	test   %eax,%eax
81004999:	79 3f                	jns    810049da <_vfiprintf_r+0x237>
8100499b:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
810049a2:	eb 36                	jmp    810049da <_vfiprintf_r+0x237>
810049a4:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
810049ab:	eb 1f                	jmp    810049cc <_vfiprintf_r+0x229>
810049ad:	8b 55 84             	mov    -0x7c(%ebp),%edx
810049b0:	89 d0                	mov    %edx,%eax
810049b2:	c1 e0 02             	shl    $0x2,%eax
810049b5:	01 d0                	add    %edx,%eax
810049b7:	01 c0                	add    %eax,%eax
810049b9:	89 c2                	mov    %eax,%edx
810049bb:	0f b6 03             	movzbl (%ebx),%eax
810049be:	0f be c0             	movsbl %al,%eax
810049c1:	83 e8 30             	sub    $0x30,%eax
810049c4:	01 d0                	add    %edx,%eax
810049c6:	89 45 84             	mov    %eax,-0x7c(%ebp)
810049c9:	83 c3 01             	add    $0x1,%ebx
810049cc:	0f b6 03             	movzbl (%ebx),%eax
810049cf:	0f be c0             	movsbl %al,%eax
810049d2:	83 e8 30             	sub    $0x30,%eax
810049d5:	83 f8 09             	cmp    $0x9,%eax
810049d8:	76 d3                	jbe    810049ad <_vfiprintf_r+0x20a>
810049da:	c7 45 dc 9a 89 00 81 	movl   $0x8100899a,-0x24(%ebp)
810049e1:	0f b6 03             	movzbl (%ebx),%eax
810049e4:	0f be c0             	movsbl %al,%eax
810049e7:	83 ec 04             	sub    $0x4,%esp
810049ea:	6a 03                	push   $0x3
810049ec:	50                   	push   %eax
810049ed:	ff 75 dc             	push   -0x24(%ebp)
810049f0:	e8 db f9 ff ff       	call   810043d0 <memchr>
810049f5:	83 c4 10             	add    $0x10,%esp
810049f8:	89 c6                	mov    %eax,%esi
810049fa:	85 f6                	test   %esi,%esi
810049fc:	74 1b                	je     81004a19 <_vfiprintf_r+0x276>
810049fe:	8b 55 80             	mov    -0x80(%ebp),%edx
81004a01:	89 f0                	mov    %esi,%eax
81004a03:	2b 45 dc             	sub    -0x24(%ebp),%eax
81004a06:	be 40 00 00 00       	mov    $0x40,%esi
81004a0b:	89 c1                	mov    %eax,%ecx
81004a0d:	d3 e6                	shl    %cl,%esi
81004a0f:	89 f0                	mov    %esi,%eax
81004a11:	09 d0                	or     %edx,%eax
81004a13:	89 45 80             	mov    %eax,-0x80(%ebp)
81004a16:	83 c3 01             	add    $0x1,%ebx
81004a19:	89 d8                	mov    %ebx,%eax
81004a1b:	8d 58 01             	lea    0x1(%eax),%ebx
81004a1e:	0f b6 00             	movzbl (%eax),%eax
81004a21:	88 45 98             	mov    %al,-0x68(%ebp)
81004a24:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
81004a28:	0f be c0             	movsbl %al,%eax
81004a2b:	83 ec 04             	sub    $0x4,%esp
81004a2e:	6a 06                	push   $0x6
81004a30:	50                   	push   %eax
81004a31:	68 9e 89 00 81       	push   $0x8100899e
81004a36:	e8 95 f9 ff ff       	call   810043d0 <memchr>
81004a3b:	83 c4 10             	add    $0x10,%esp
81004a3e:	89 c6                	mov    %eax,%esi
81004a40:	85 f6                	test   %esi,%esi
81004a42:	74 5a                	je     81004a9e <_vfiprintf_r+0x2fb>
81004a44:	b8 00 00 00 00       	mov    $0x0,%eax
81004a49:	85 c0                	test   %eax,%eax
81004a4b:	75 2e                	jne    81004a7b <_vfiprintf_r+0x2d8>
81004a4d:	8b 45 80             	mov    -0x80(%ebp),%eax
81004a50:	25 00 01 00 00       	and    $0x100,%eax
81004a55:	85 c0                	test   %eax,%eax
81004a57:	74 11                	je     81004a6a <_vfiprintf_r+0x2c7>
81004a59:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004a5f:	83 c0 0c             	add    $0xc,%eax
81004a62:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004a68:	eb 55                	jmp    81004abf <_vfiprintf_r+0x31c>
81004a6a:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004a70:	83 c0 08             	add    $0x8,%eax
81004a73:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004a79:	eb 44                	jmp    81004abf <_vfiprintf_r+0x31c>
81004a7b:	83 ec 0c             	sub    $0xc,%esp
81004a7e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81004a84:	50                   	push   %eax
81004a85:	ff 75 e4             	push   -0x1c(%ebp)
81004a88:	ff 75 0c             	push   0xc(%ebp)
81004a8b:	8d 45 80             	lea    -0x80(%ebp),%eax
81004a8e:	50                   	push   %eax
81004a8f:	ff 75 08             	push   0x8(%ebp)
81004a92:	e8 69 b5 ff 7e       	call   0 <do_help-0x81000000>
81004a97:	83 c4 20             	add    $0x20,%esp
81004a9a:	89 c7                	mov    %eax,%edi
81004a9c:	eb 21                	jmp    81004abf <_vfiprintf_r+0x31c>
81004a9e:	83 ec 0c             	sub    $0xc,%esp
81004aa1:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81004aa7:	50                   	push   %eax
81004aa8:	ff 75 e4             	push   -0x1c(%ebp)
81004aab:	ff 75 0c             	push   0xc(%ebp)
81004aae:	8d 45 80             	lea    -0x80(%ebp),%eax
81004ab1:	50                   	push   %eax
81004ab2:	ff 75 08             	push   0x8(%ebp)
81004ab5:	e8 da 01 00 00       	call   81004c94 <_printf_i>
81004aba:	83 c4 20             	add    $0x20,%esp
81004abd:	89 c7                	mov    %eax,%edi
81004abf:	83 ff ff             	cmp    $0xffffffff,%edi
81004ac2:	74 13                	je     81004ad7 <_vfiprintf_r+0x334>
81004ac4:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004ac7:	01 f8                	add    %edi,%eax
81004ac9:	89 45 94             	mov    %eax,-0x6c(%ebp)
81004acc:	e9 5c fd ff ff       	jmp    8100482d <_vfiprintf_r+0x8a>
81004ad1:	90                   	nop
81004ad2:	eb 04                	jmp    81004ad8 <_vfiprintf_r+0x335>
81004ad4:	90                   	nop
81004ad5:	eb 01                	jmp    81004ad8 <_vfiprintf_r+0x335>
81004ad7:	90                   	nop
81004ad8:	8b 45 0c             	mov    0xc(%ebp),%eax
81004adb:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004adf:	98                   	cwtl   
81004ae0:	83 e0 40             	and    $0x40,%eax
81004ae3:	85 c0                	test   %eax,%eax
81004ae5:	75 05                	jne    81004aec <_vfiprintf_r+0x349>
81004ae7:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004aea:	eb 05                	jmp    81004af1 <_vfiprintf_r+0x34e>
81004aec:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004af1:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004af4:	5b                   	pop    %ebx
81004af5:	5e                   	pop    %esi
81004af6:	5f                   	pop    %edi
81004af7:	5d                   	pop    %ebp
81004af8:	c3                   	ret    

81004af9 <_printf_common>:
81004af9:	55                   	push   %ebp
81004afa:	89 e5                	mov    %esp,%ebp
81004afc:	83 ec 18             	sub    $0x18,%esp
81004aff:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b02:	8b 50 10             	mov    0x10(%eax),%edx
81004b05:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b08:	8b 40 08             	mov    0x8(%eax),%eax
81004b0b:	39 c2                	cmp    %eax,%edx
81004b0d:	0f 4c d0             	cmovl  %eax,%edx
81004b10:	8b 45 10             	mov    0x10(%ebp),%eax
81004b13:	89 10                	mov    %edx,(%eax)
81004b15:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b18:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81004b1c:	84 c0                	test   %al,%al
81004b1e:	74 0d                	je     81004b2d <_printf_common+0x34>
81004b20:	8b 45 10             	mov    0x10(%ebp),%eax
81004b23:	8b 00                	mov    (%eax),%eax
81004b25:	8d 50 01             	lea    0x1(%eax),%edx
81004b28:	8b 45 10             	mov    0x10(%ebp),%eax
81004b2b:	89 10                	mov    %edx,(%eax)
81004b2d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b30:	8b 00                	mov    (%eax),%eax
81004b32:	83 e0 20             	and    $0x20,%eax
81004b35:	85 c0                	test   %eax,%eax
81004b37:	74 0d                	je     81004b46 <_printf_common+0x4d>
81004b39:	8b 45 10             	mov    0x10(%ebp),%eax
81004b3c:	8b 00                	mov    (%eax),%eax
81004b3e:	8d 50 02             	lea    0x2(%eax),%edx
81004b41:	8b 45 10             	mov    0x10(%ebp),%eax
81004b44:	89 10                	mov    %edx,(%eax)
81004b46:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b49:	8b 00                	mov    (%eax),%eax
81004b4b:	83 e0 06             	and    $0x6,%eax
81004b4e:	85 c0                	test   %eax,%eax
81004b50:	75 41                	jne    81004b93 <_printf_common+0x9a>
81004b52:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81004b59:	eb 24                	jmp    81004b7f <_printf_common+0x86>
81004b5b:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b5e:	83 c0 19             	add    $0x19,%eax
81004b61:	6a 01                	push   $0x1
81004b63:	50                   	push   %eax
81004b64:	ff 75 14             	push   0x14(%ebp)
81004b67:	ff 75 08             	push   0x8(%ebp)
81004b6a:	8b 45 18             	mov    0x18(%ebp),%eax
81004b6d:	ff d0                	call   *%eax
81004b6f:	83 c4 10             	add    $0x10,%esp
81004b72:	83 f8 ff             	cmp    $0xffffffff,%eax
81004b75:	0f 84 0b 01 00 00    	je     81004c86 <_printf_common+0x18d>
81004b7b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004b7f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b82:	8b 50 0c             	mov    0xc(%eax),%edx
81004b85:	8b 45 10             	mov    0x10(%ebp),%eax
81004b88:	8b 08                	mov    (%eax),%ecx
81004b8a:	89 d0                	mov    %edx,%eax
81004b8c:	29 c8                	sub    %ecx,%eax
81004b8e:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81004b91:	7c c8                	jl     81004b5b <_printf_common+0x62>
81004b93:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004b9a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b9d:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81004ba1:	84 c0                	test   %al,%al
81004ba3:	74 04                	je     81004ba9 <_printf_common+0xb0>
81004ba5:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81004ba9:	8b 45 0c             	mov    0xc(%ebp),%eax
81004bac:	8b 00                	mov    (%eax),%eax
81004bae:	83 e0 20             	and    $0x20,%eax
81004bb1:	85 c0                	test   %eax,%eax
81004bb3:	74 28                	je     81004bdd <_printf_common+0xe4>
81004bb5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004bb8:	8d 50 01             	lea    0x1(%eax),%edx
81004bbb:	89 55 f4             	mov    %edx,-0xc(%ebp)
81004bbe:	8b 55 0c             	mov    0xc(%ebp),%edx
81004bc1:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81004bc6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004bc9:	8d 50 01             	lea    0x1(%eax),%edx
81004bcc:	89 55 f4             	mov    %edx,-0xc(%ebp)
81004bcf:	8b 55 0c             	mov    0xc(%ebp),%edx
81004bd2:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81004bd6:	8b 55 0c             	mov    0xc(%ebp),%edx
81004bd9:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
81004bdd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004be0:	8b 55 0c             	mov    0xc(%ebp),%edx
81004be3:	83 c2 43             	add    $0x43,%edx
81004be6:	50                   	push   %eax
81004be7:	52                   	push   %edx
81004be8:	ff 75 14             	push   0x14(%ebp)
81004beb:	ff 75 08             	push   0x8(%ebp)
81004bee:	8b 45 18             	mov    0x18(%ebp),%eax
81004bf1:	ff d0                	call   *%eax
81004bf3:	83 c4 10             	add    $0x10,%esp
81004bf6:	83 f8 ff             	cmp    $0xffffffff,%eax
81004bf9:	0f 84 8a 00 00 00    	je     81004c89 <_printf_common+0x190>
81004bff:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c02:	8b 50 0c             	mov    0xc(%eax),%edx
81004c05:	8b 45 10             	mov    0x10(%ebp),%eax
81004c08:	8b 08                	mov    (%eax),%ecx
81004c0a:	89 d0                	mov    %edx,%eax
81004c0c:	29 c8                	sub    %ecx,%eax
81004c0e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004c11:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c14:	8b 00                	mov    (%eax),%eax
81004c16:	83 e0 06             	and    $0x6,%eax
81004c19:	83 f8 04             	cmp    $0x4,%eax
81004c1c:	75 06                	jne    81004c24 <_printf_common+0x12b>
81004c1e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004c22:	79 07                	jns    81004c2b <_printf_common+0x132>
81004c24:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004c2b:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c2e:	8b 50 08             	mov    0x8(%eax),%edx
81004c31:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c34:	8b 40 10             	mov    0x10(%eax),%eax
81004c37:	39 c2                	cmp    %eax,%edx
81004c39:	7e 13                	jle    81004c4e <_printf_common+0x155>
81004c3b:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c3e:	8b 50 08             	mov    0x8(%eax),%edx
81004c41:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c44:	8b 48 10             	mov    0x10(%eax),%ecx
81004c47:	89 d0                	mov    %edx,%eax
81004c49:	29 c8                	sub    %ecx,%eax
81004c4b:	01 45 f4             	add    %eax,-0xc(%ebp)
81004c4e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81004c55:	eb 20                	jmp    81004c77 <_printf_common+0x17e>
81004c57:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c5a:	83 c0 1a             	add    $0x1a,%eax
81004c5d:	6a 01                	push   $0x1
81004c5f:	50                   	push   %eax
81004c60:	ff 75 14             	push   0x14(%ebp)
81004c63:	ff 75 08             	push   0x8(%ebp)
81004c66:	8b 45 18             	mov    0x18(%ebp),%eax
81004c69:	ff d0                	call   *%eax
81004c6b:	83 c4 10             	add    $0x10,%esp
81004c6e:	83 f8 ff             	cmp    $0xffffffff,%eax
81004c71:	74 19                	je     81004c8c <_printf_common+0x193>
81004c73:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
81004c77:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004c7a:	3b 45 f4             	cmp    -0xc(%ebp),%eax
81004c7d:	7c d8                	jl     81004c57 <_printf_common+0x15e>
81004c7f:	b8 00 00 00 00       	mov    $0x0,%eax
81004c84:	eb 0c                	jmp    81004c92 <_printf_common+0x199>
81004c86:	90                   	nop
81004c87:	eb 04                	jmp    81004c8d <_printf_common+0x194>
81004c89:	90                   	nop
81004c8a:	eb 01                	jmp    81004c8d <_printf_common+0x194>
81004c8c:	90                   	nop
81004c8d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004c92:	c9                   	leave  
81004c93:	c3                   	ret    

81004c94 <_printf_i>:
81004c94:	55                   	push   %ebp
81004c95:	89 e5                	mov    %esp,%ebp
81004c97:	53                   	push   %ebx
81004c98:	83 ec 24             	sub    $0x24,%esp
81004c9b:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c9e:	83 c0 1b             	add    $0x1b,%eax
81004ca1:	83 c0 28             	add    $0x28,%eax
81004ca4:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004ca7:	c7 45 e8 a8 89 00 81 	movl   $0x810089a8,-0x18(%ebp)
81004cae:	8b 45 0c             	mov    0xc(%ebp),%eax
81004cb1:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81004cb5:	0f be c0             	movsbl %al,%eax
81004cb8:	85 c0                	test   %eax,%eax
81004cba:	0f 84 00 03 00 00    	je     81004fc0 <_printf_i+0x32c>
81004cc0:	85 c0                	test   %eax,%eax
81004cc2:	0f 88 52 03 00 00    	js     8100501a <_printf_i+0x386>
81004cc8:	83 f8 78             	cmp    $0x78,%eax
81004ccb:	0f 8f 49 03 00 00    	jg     8100501a <_printf_i+0x386>
81004cd1:	83 f8 58             	cmp    $0x58,%eax
81004cd4:	0f 8c 40 03 00 00    	jl     8100501a <_printf_i+0x386>
81004cda:	83 e8 58             	sub    $0x58,%eax
81004cdd:	83 f8 20             	cmp    $0x20,%eax
81004ce0:	0f 87 34 03 00 00    	ja     8100501a <_printf_i+0x386>
81004ce6:	8b 04 85 cc 89 00 81 	mov    -0x7eff7634(,%eax,4),%eax
81004ced:	ff e0                	jmp    *%eax
81004cef:	8b 45 18             	mov    0x18(%ebp),%eax
81004cf2:	8b 00                	mov    (%eax),%eax
81004cf4:	8d 48 04             	lea    0x4(%eax),%ecx
81004cf7:	8b 55 18             	mov    0x18(%ebp),%edx
81004cfa:	89 0a                	mov    %ecx,(%edx)
81004cfc:	8b 00                	mov    (%eax),%eax
81004cfe:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004d02:	89 c2                	mov    %eax,%edx
81004d04:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004d07:	88 10                	mov    %dl,(%eax)
81004d09:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d0c:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81004d13:	e9 1c 03 00 00       	jmp    81005034 <_printf_i+0x3a0>
81004d18:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d1b:	8b 00                	mov    (%eax),%eax
81004d1d:	25 80 00 00 00       	and    $0x80,%eax
81004d22:	85 c0                	test   %eax,%eax
81004d24:	74 11                	je     81004d37 <_printf_i+0xa3>
81004d26:	8b 45 18             	mov    0x18(%ebp),%eax
81004d29:	8b 00                	mov    (%eax),%eax
81004d2b:	8d 48 04             	lea    0x4(%eax),%ecx
81004d2e:	8b 55 18             	mov    0x18(%ebp),%edx
81004d31:	89 0a                	mov    %ecx,(%edx)
81004d33:	8b 00                	mov    (%eax),%eax
81004d35:	eb 2d                	jmp    81004d64 <_printf_i+0xd0>
81004d37:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d3a:	8b 00                	mov    (%eax),%eax
81004d3c:	83 e0 40             	and    $0x40,%eax
81004d3f:	85 c0                	test   %eax,%eax
81004d41:	74 12                	je     81004d55 <_printf_i+0xc1>
81004d43:	8b 45 18             	mov    0x18(%ebp),%eax
81004d46:	8b 00                	mov    (%eax),%eax
81004d48:	8d 48 04             	lea    0x4(%eax),%ecx
81004d4b:	8b 55 18             	mov    0x18(%ebp),%edx
81004d4e:	89 0a                	mov    %ecx,(%edx)
81004d50:	8b 00                	mov    (%eax),%eax
81004d52:	98                   	cwtl   
81004d53:	eb 0f                	jmp    81004d64 <_printf_i+0xd0>
81004d55:	8b 45 18             	mov    0x18(%ebp),%eax
81004d58:	8b 00                	mov    (%eax),%eax
81004d5a:	8d 48 04             	lea    0x4(%eax),%ecx
81004d5d:	8b 55 18             	mov    0x18(%ebp),%edx
81004d60:	89 0a                	mov    %ecx,(%edx)
81004d62:	8b 00                	mov    (%eax),%eax
81004d64:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004d67:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004d6a:	85 c0                	test   %eax,%eax
81004d6c:	79 0a                	jns    81004d78 <_printf_i+0xe4>
81004d6e:	f7 5d f4             	negl   -0xc(%ebp)
81004d71:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d74:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81004d78:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
81004d7f:	e9 28 01 00 00       	jmp    81004eac <_printf_i+0x218>
81004d84:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d87:	8b 00                	mov    (%eax),%eax
81004d89:	25 80 00 00 00       	and    $0x80,%eax
81004d8e:	85 c0                	test   %eax,%eax
81004d90:	74 11                	je     81004da3 <_printf_i+0x10f>
81004d92:	8b 45 18             	mov    0x18(%ebp),%eax
81004d95:	8b 00                	mov    (%eax),%eax
81004d97:	8d 48 04             	lea    0x4(%eax),%ecx
81004d9a:	8b 55 18             	mov    0x18(%ebp),%edx
81004d9d:	89 0a                	mov    %ecx,(%edx)
81004d9f:	8b 00                	mov    (%eax),%eax
81004da1:	eb 2f                	jmp    81004dd2 <_printf_i+0x13e>
81004da3:	8b 45 0c             	mov    0xc(%ebp),%eax
81004da6:	8b 00                	mov    (%eax),%eax
81004da8:	83 e0 40             	and    $0x40,%eax
81004dab:	85 c0                	test   %eax,%eax
81004dad:	74 14                	je     81004dc3 <_printf_i+0x12f>
81004daf:	8b 45 18             	mov    0x18(%ebp),%eax
81004db2:	8b 00                	mov    (%eax),%eax
81004db4:	8d 48 04             	lea    0x4(%eax),%ecx
81004db7:	8b 55 18             	mov    0x18(%ebp),%edx
81004dba:	89 0a                	mov    %ecx,(%edx)
81004dbc:	8b 00                	mov    (%eax),%eax
81004dbe:	0f b7 c0             	movzwl %ax,%eax
81004dc1:	eb 0f                	jmp    81004dd2 <_printf_i+0x13e>
81004dc3:	8b 45 18             	mov    0x18(%ebp),%eax
81004dc6:	8b 00                	mov    (%eax),%eax
81004dc8:	8d 48 04             	lea    0x4(%eax),%ecx
81004dcb:	8b 55 18             	mov    0x18(%ebp),%edx
81004dce:	89 0a                	mov    %ecx,(%edx)
81004dd0:	8b 00                	mov    (%eax),%eax
81004dd2:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004dd5:	8b 45 0c             	mov    0xc(%ebp),%eax
81004dd8:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81004ddc:	3c 6f                	cmp    $0x6f,%al
81004dde:	75 07                	jne    81004de7 <_printf_i+0x153>
81004de0:	b8 08 00 00 00       	mov    $0x8,%eax
81004de5:	eb 05                	jmp    81004dec <_printf_i+0x158>
81004de7:	b8 0a 00 00 00       	mov    $0xa,%eax
81004dec:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004def:	e9 b1 00 00 00       	jmp    81004ea5 <_printf_i+0x211>
81004df4:	8b 45 0c             	mov    0xc(%ebp),%eax
81004df7:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81004dfb:	eb 1d                	jmp    81004e1a <_printf_i+0x186>
81004dfd:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e00:	8b 00                	mov    (%eax),%eax
81004e02:	83 c8 20             	or     $0x20,%eax
81004e05:	89 c2                	mov    %eax,%edx
81004e07:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e0a:	89 10                	mov    %edx,(%eax)
81004e0c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e0f:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81004e13:	c7 45 e8 b9 89 00 81 	movl   $0x810089b9,-0x18(%ebp)
81004e1a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e1d:	8b 00                	mov    (%eax),%eax
81004e1f:	25 80 00 00 00       	and    $0x80,%eax
81004e24:	85 c0                	test   %eax,%eax
81004e26:	74 11                	je     81004e39 <_printf_i+0x1a5>
81004e28:	8b 45 18             	mov    0x18(%ebp),%eax
81004e2b:	8b 00                	mov    (%eax),%eax
81004e2d:	8d 48 04             	lea    0x4(%eax),%ecx
81004e30:	8b 55 18             	mov    0x18(%ebp),%edx
81004e33:	89 0a                	mov    %ecx,(%edx)
81004e35:	8b 00                	mov    (%eax),%eax
81004e37:	eb 2f                	jmp    81004e68 <_printf_i+0x1d4>
81004e39:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e3c:	8b 00                	mov    (%eax),%eax
81004e3e:	83 e0 40             	and    $0x40,%eax
81004e41:	85 c0                	test   %eax,%eax
81004e43:	74 14                	je     81004e59 <_printf_i+0x1c5>
81004e45:	8b 45 18             	mov    0x18(%ebp),%eax
81004e48:	8b 00                	mov    (%eax),%eax
81004e4a:	8d 48 04             	lea    0x4(%eax),%ecx
81004e4d:	8b 55 18             	mov    0x18(%ebp),%edx
81004e50:	89 0a                	mov    %ecx,(%edx)
81004e52:	8b 00                	mov    (%eax),%eax
81004e54:	0f b7 c0             	movzwl %ax,%eax
81004e57:	eb 0f                	jmp    81004e68 <_printf_i+0x1d4>
81004e59:	8b 45 18             	mov    0x18(%ebp),%eax
81004e5c:	8b 00                	mov    (%eax),%eax
81004e5e:	8d 48 04             	lea    0x4(%eax),%ecx
81004e61:	8b 55 18             	mov    0x18(%ebp),%edx
81004e64:	89 0a                	mov    %ecx,(%edx)
81004e66:	8b 00                	mov    (%eax),%eax
81004e68:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e6b:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
81004e72:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e75:	8b 00                	mov    (%eax),%eax
81004e77:	83 e0 01             	and    $0x1,%eax
81004e7a:	85 c0                	test   %eax,%eax
81004e7c:	74 0f                	je     81004e8d <_printf_i+0x1f9>
81004e7e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e81:	8b 00                	mov    (%eax),%eax
81004e83:	83 c8 20             	or     $0x20,%eax
81004e86:	89 c2                	mov    %eax,%edx
81004e88:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e8b:	89 10                	mov    %edx,(%eax)
81004e8d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004e91:	75 11                	jne    81004ea4 <_printf_i+0x210>
81004e93:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e96:	8b 00                	mov    (%eax),%eax
81004e98:	83 e0 df             	and    $0xffffffdf,%eax
81004e9b:	89 c2                	mov    %eax,%edx
81004e9d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ea0:	89 10                	mov    %edx,(%eax)
81004ea2:	eb 01                	jmp    81004ea5 <_printf_i+0x211>
81004ea4:	90                   	nop
81004ea5:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ea8:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81004eac:	8b 45 0c             	mov    0xc(%ebp),%eax
81004eaf:	8b 50 04             	mov    0x4(%eax),%edx
81004eb2:	8b 45 0c             	mov    0xc(%ebp),%eax
81004eb5:	89 50 08             	mov    %edx,0x8(%eax)
81004eb8:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ebb:	8b 40 08             	mov    0x8(%eax),%eax
81004ebe:	85 c0                	test   %eax,%eax
81004ec0:	78 0f                	js     81004ed1 <_printf_i+0x23d>
81004ec2:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ec5:	8b 00                	mov    (%eax),%eax
81004ec7:	83 e0 fb             	and    $0xfffffffb,%eax
81004eca:	89 c2                	mov    %eax,%edx
81004ecc:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ecf:	89 10                	mov    %edx,(%eax)
81004ed1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004ed5:	75 0a                	jne    81004ee1 <_printf_i+0x24d>
81004ed7:	8b 45 0c             	mov    0xc(%ebp),%eax
81004eda:	8b 40 04             	mov    0x4(%eax),%eax
81004edd:	85 c0                	test   %eax,%eax
81004edf:	74 34                	je     81004f15 <_printf_i+0x281>
81004ee1:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81004ee4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004ee7:	ba 00 00 00 00       	mov    $0x0,%edx
81004eec:	f7 f1                	div    %ecx
81004eee:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004ef1:	01 d0                	add    %edx,%eax
81004ef3:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004ef7:	0f b6 10             	movzbl (%eax),%edx
81004efa:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004efd:	88 10                	mov    %dl,(%eax)
81004eff:	8b 5d f0             	mov    -0x10(%ebp),%ebx
81004f02:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004f05:	ba 00 00 00 00       	mov    $0x0,%edx
81004f0a:	f7 f3                	div    %ebx
81004f0c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004f0f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004f13:	75 cc                	jne    81004ee1 <_printf_i+0x24d>
81004f15:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81004f19:	75 26                	jne    81004f41 <_printf_i+0x2ad>
81004f1b:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f1e:	8b 00                	mov    (%eax),%eax
81004f20:	83 e0 01             	and    $0x1,%eax
81004f23:	85 c0                	test   %eax,%eax
81004f25:	74 1a                	je     81004f41 <_printf_i+0x2ad>
81004f27:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f2a:	8b 50 04             	mov    0x4(%eax),%edx
81004f2d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f30:	8b 40 10             	mov    0x10(%eax),%eax
81004f33:	39 c2                	cmp    %eax,%edx
81004f35:	7f 0a                	jg     81004f41 <_printf_i+0x2ad>
81004f37:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004f3b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004f3e:	c6 00 30             	movb   $0x30,(%eax)
81004f41:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f44:	83 c0 1b             	add    $0x1b,%eax
81004f47:	83 c0 28             	add    $0x28,%eax
81004f4a:	2b 45 ec             	sub    -0x14(%ebp),%eax
81004f4d:	89 c2                	mov    %eax,%edx
81004f4f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f52:	89 50 10             	mov    %edx,0x10(%eax)
81004f55:	e9 e2 00 00 00       	jmp    8100503c <_printf_i+0x3a8>
81004f5a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f5d:	8b 00                	mov    (%eax),%eax
81004f5f:	25 80 00 00 00       	and    $0x80,%eax
81004f64:	85 c0                	test   %eax,%eax
81004f66:	74 19                	je     81004f81 <_printf_i+0x2ed>
81004f68:	8b 45 18             	mov    0x18(%ebp),%eax
81004f6b:	8b 00                	mov    (%eax),%eax
81004f6d:	8d 48 04             	lea    0x4(%eax),%ecx
81004f70:	8b 55 18             	mov    0x18(%ebp),%edx
81004f73:	89 0a                	mov    %ecx,(%edx)
81004f75:	8b 00                	mov    (%eax),%eax
81004f77:	8b 55 0c             	mov    0xc(%ebp),%edx
81004f7a:	8b 52 14             	mov    0x14(%edx),%edx
81004f7d:	89 10                	mov    %edx,(%eax)
81004f7f:	eb 3f                	jmp    81004fc0 <_printf_i+0x32c>
81004f81:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f84:	8b 00                	mov    (%eax),%eax
81004f86:	83 e0 40             	and    $0x40,%eax
81004f89:	85 c0                	test   %eax,%eax
81004f8b:	74 1c                	je     81004fa9 <_printf_i+0x315>
81004f8d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f90:	8b 58 14             	mov    0x14(%eax),%ebx
81004f93:	8b 45 18             	mov    0x18(%ebp),%eax
81004f96:	8b 00                	mov    (%eax),%eax
81004f98:	8d 48 04             	lea    0x4(%eax),%ecx
81004f9b:	8b 55 18             	mov    0x18(%ebp),%edx
81004f9e:	89 0a                	mov    %ecx,(%edx)
81004fa0:	8b 00                	mov    (%eax),%eax
81004fa2:	89 da                	mov    %ebx,%edx
81004fa4:	66 89 10             	mov    %dx,(%eax)
81004fa7:	eb 17                	jmp    81004fc0 <_printf_i+0x32c>
81004fa9:	8b 45 18             	mov    0x18(%ebp),%eax
81004fac:	8b 00                	mov    (%eax),%eax
81004fae:	8d 48 04             	lea    0x4(%eax),%ecx
81004fb1:	8b 55 18             	mov    0x18(%ebp),%edx
81004fb4:	89 0a                	mov    %ecx,(%edx)
81004fb6:	8b 00                	mov    (%eax),%eax
81004fb8:	8b 55 0c             	mov    0xc(%ebp),%edx
81004fbb:	8b 52 14             	mov    0x14(%edx),%edx
81004fbe:	89 10                	mov    %edx,(%eax)
81004fc0:	8b 45 0c             	mov    0xc(%ebp),%eax
81004fc3:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81004fca:	eb 70                	jmp    8100503c <_printf_i+0x3a8>
81004fcc:	8b 45 18             	mov    0x18(%ebp),%eax
81004fcf:	8b 00                	mov    (%eax),%eax
81004fd1:	8d 48 04             	lea    0x4(%eax),%ecx
81004fd4:	8b 55 18             	mov    0x18(%ebp),%edx
81004fd7:	89 0a                	mov    %ecx,(%edx)
81004fd9:	8b 00                	mov    (%eax),%eax
81004fdb:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004fde:	8b 45 0c             	mov    0xc(%ebp),%eax
81004fe1:	8b 40 04             	mov    0x4(%eax),%eax
81004fe4:	83 ec 04             	sub    $0x4,%esp
81004fe7:	50                   	push   %eax
81004fe8:	6a 00                	push   $0x0
81004fea:	ff 75 ec             	push   -0x14(%ebp)
81004fed:	e8 de f3 ff ff       	call   810043d0 <memchr>
81004ff2:	83 c4 10             	add    $0x10,%esp
81004ff5:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004ff8:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81004ffc:	74 0e                	je     8100500c <_printf_i+0x378>
81004ffe:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005001:	2b 45 ec             	sub    -0x14(%ebp),%eax
81005004:	89 c2                	mov    %eax,%edx
81005006:	8b 45 0c             	mov    0xc(%ebp),%eax
81005009:	89 50 04             	mov    %edx,0x4(%eax)
8100500c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100500f:	8b 50 04             	mov    0x4(%eax),%edx
81005012:	8b 45 0c             	mov    0xc(%ebp),%eax
81005015:	89 50 10             	mov    %edx,0x10(%eax)
81005018:	eb 1a                	jmp    81005034 <_printf_i+0x3a0>
8100501a:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8100501e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005021:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81005025:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005028:	88 10                	mov    %dl,(%eax)
8100502a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100502d:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81005034:	8b 45 0c             	mov    0xc(%ebp),%eax
81005037:	c6 40 43 00          	movb   $0x0,0x43(%eax)
8100503b:	90                   	nop
8100503c:	83 ec 0c             	sub    $0xc,%esp
8100503f:	ff 75 14             	push   0x14(%ebp)
81005042:	ff 75 10             	push   0x10(%ebp)
81005045:	8d 45 d8             	lea    -0x28(%ebp),%eax
81005048:	50                   	push   %eax
81005049:	ff 75 0c             	push   0xc(%ebp)
8100504c:	ff 75 08             	push   0x8(%ebp)
8100504f:	e8 a5 fa ff ff       	call   81004af9 <_printf_common>
81005054:	83 c4 20             	add    $0x20,%esp
81005057:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100505a:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
8100505e:	74 72                	je     810050d2 <_printf_i+0x43e>
81005060:	8b 45 0c             	mov    0xc(%ebp),%eax
81005063:	8b 40 10             	mov    0x10(%eax),%eax
81005066:	50                   	push   %eax
81005067:	ff 75 ec             	push   -0x14(%ebp)
8100506a:	ff 75 10             	push   0x10(%ebp)
8100506d:	ff 75 08             	push   0x8(%ebp)
81005070:	8b 45 14             	mov    0x14(%ebp),%eax
81005073:	ff d0                	call   *%eax
81005075:	83 c4 10             	add    $0x10,%esp
81005078:	83 f8 ff             	cmp    $0xffffffff,%eax
8100507b:	74 58                	je     810050d5 <_printf_i+0x441>
8100507d:	8b 45 0c             	mov    0xc(%ebp),%eax
81005080:	8b 00                	mov    (%eax),%eax
81005082:	83 e0 02             	and    $0x2,%eax
81005085:	85 c0                	test   %eax,%eax
81005087:	74 39                	je     810050c2 <_printf_i+0x42e>
81005089:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81005090:	eb 20                	jmp    810050b2 <_printf_i+0x41e>
81005092:	8b 45 0c             	mov    0xc(%ebp),%eax
81005095:	83 c0 19             	add    $0x19,%eax
81005098:	6a 01                	push   $0x1
8100509a:	50                   	push   %eax
8100509b:	ff 75 10             	push   0x10(%ebp)
8100509e:	ff 75 08             	push   0x8(%ebp)
810050a1:	8b 45 14             	mov    0x14(%ebp),%eax
810050a4:	ff d0                	call   *%eax
810050a6:	83 c4 10             	add    $0x10,%esp
810050a9:	83 f8 ff             	cmp    $0xffffffff,%eax
810050ac:	74 2a                	je     810050d8 <_printf_i+0x444>
810050ae:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810050b2:	8b 45 0c             	mov    0xc(%ebp),%eax
810050b5:	8b 40 0c             	mov    0xc(%eax),%eax
810050b8:	8b 55 d8             	mov    -0x28(%ebp),%edx
810050bb:	29 d0                	sub    %edx,%eax
810050bd:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810050c0:	7c d0                	jl     81005092 <_printf_i+0x3fe>
810050c2:	8b 45 0c             	mov    0xc(%ebp),%eax
810050c5:	8b 50 0c             	mov    0xc(%eax),%edx
810050c8:	8b 45 d8             	mov    -0x28(%ebp),%eax
810050cb:	39 c2                	cmp    %eax,%edx
810050cd:	0f 4d c2             	cmovge %edx,%eax
810050d0:	eb 0c                	jmp    810050de <_printf_i+0x44a>
810050d2:	90                   	nop
810050d3:	eb 04                	jmp    810050d9 <_printf_i+0x445>
810050d5:	90                   	nop
810050d6:	eb 01                	jmp    810050d9 <_printf_i+0x445>
810050d8:	90                   	nop
810050d9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810050de:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810050e1:	c9                   	leave  
810050e2:	c3                   	ret    

810050e3 <_open_r>:
810050e3:	55                   	push   %ebp
810050e4:	89 e5                	mov    %esp,%ebp
810050e6:	83 ec 18             	sub    $0x18,%esp
810050e9:	c7 05 8c 9e 00 81 00 	movl   $0x0,0x81009e8c
810050f0:	00 00 00 
810050f3:	83 ec 04             	sub    $0x4,%esp
810050f6:	ff 75 14             	push   0x14(%ebp)
810050f9:	ff 75 10             	push   0x10(%ebp)
810050fc:	ff 75 0c             	push   0xc(%ebp)
810050ff:	e8 52 bb ff ff       	call   81000c56 <open>
81005104:	83 c4 10             	add    $0x10,%esp
81005107:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100510a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100510e:	75 14                	jne    81005124 <_open_r+0x41>
81005110:	a1 8c 9e 00 81       	mov    0x81009e8c,%eax
81005115:	85 c0                	test   %eax,%eax
81005117:	74 0b                	je     81005124 <_open_r+0x41>
81005119:	8b 15 8c 9e 00 81    	mov    0x81009e8c,%edx
8100511f:	8b 45 08             	mov    0x8(%ebp),%eax
81005122:	89 10                	mov    %edx,(%eax)
81005124:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005127:	c9                   	leave  
81005128:	c3                   	ret    

81005129 <_iprintf_r>:
81005129:	55                   	push   %ebp
8100512a:	89 e5                	mov    %esp,%ebp
8100512c:	83 ec 18             	sub    $0x18,%esp
8100512f:	8d 45 10             	lea    0x10(%ebp),%eax
81005132:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005135:	8b 55 f0             	mov    -0x10(%ebp),%edx
81005138:	8b 45 08             	mov    0x8(%ebp),%eax
8100513b:	8b 40 08             	mov    0x8(%eax),%eax
8100513e:	52                   	push   %edx
8100513f:	ff 75 0c             	push   0xc(%ebp)
81005142:	50                   	push   %eax
81005143:	ff 75 08             	push   0x8(%ebp)
81005146:	e8 58 f6 ff ff       	call   810047a3 <_vfiprintf_r>
8100514b:	83 c4 10             	add    $0x10,%esp
8100514e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005151:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005154:	c9                   	leave  
81005155:	c3                   	ret    

81005156 <iprintf>:
81005156:	55                   	push   %ebp
81005157:	89 e5                	mov    %esp,%ebp
81005159:	83 ec 18             	sub    $0x18,%esp
8100515c:	a1 44 91 00 81       	mov    0x81009144,%eax
81005161:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005164:	8d 45 0c             	lea    0xc(%ebp),%eax
81005167:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100516a:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100516d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005170:	8b 40 08             	mov    0x8(%eax),%eax
81005173:	52                   	push   %edx
81005174:	ff 75 08             	push   0x8(%ebp)
81005177:	50                   	push   %eax
81005178:	ff 75 f4             	push   -0xc(%ebp)
8100517b:	e8 23 f6 ff ff       	call   810047a3 <_vfiprintf_r>
81005180:	83 c4 10             	add    $0x10,%esp
81005183:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005186:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005189:	c9                   	leave  
8100518a:	c3                   	ret    

8100518b <_puts_r>:
8100518b:	55                   	push   %ebp
8100518c:	89 e5                	mov    %esp,%ebp
8100518e:	83 ec 38             	sub    $0x38,%esp
81005191:	83 ec 0c             	sub    $0xc,%esp
81005194:	ff 75 0c             	push   0xc(%ebp)
81005197:	e8 74 0a 00 00       	call   81005c10 <strlen>
8100519c:	83 c4 10             	add    $0x10,%esp
8100519f:	89 45 f4             	mov    %eax,-0xc(%ebp)
810051a2:	8b 45 0c             	mov    0xc(%ebp),%eax
810051a5:	89 45 cc             	mov    %eax,-0x34(%ebp)
810051a8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810051ab:	89 45 d0             	mov    %eax,-0x30(%ebp)
810051ae:	c7 45 d4 50 8a 00 81 	movl   $0x81008a50,-0x2c(%ebp)
810051b5:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
810051bc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810051bf:	83 c0 01             	add    $0x1,%eax
810051c2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810051c5:	8d 45 cc             	lea    -0x34(%ebp),%eax
810051c8:	89 45 dc             	mov    %eax,-0x24(%ebp)
810051cb:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
810051d2:	8b 45 08             	mov    0x8(%ebp),%eax
810051d5:	8b 40 08             	mov    0x8(%eax),%eax
810051d8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810051db:	8b 45 08             	mov    0x8(%ebp),%eax
810051de:	89 45 ec             	mov    %eax,-0x14(%ebp)
810051e1:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810051e5:	74 18                	je     810051ff <_puts_r+0x74>
810051e7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810051ea:	8b 40 38             	mov    0x38(%eax),%eax
810051ed:	85 c0                	test   %eax,%eax
810051ef:	75 0e                	jne    810051ff <_puts_r+0x74>
810051f1:	83 ec 0c             	sub    $0xc,%esp
810051f4:	ff 75 ec             	push   -0x14(%ebp)
810051f7:	e8 f8 c5 ff ff       	call   810017f4 <__sinit>
810051fc:	83 c4 10             	add    $0x10,%esp
810051ff:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005202:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005206:	98                   	cwtl   
81005207:	25 00 20 00 00       	and    $0x2000,%eax
8100520c:	85 c0                	test   %eax,%eax
8100520e:	75 24                	jne    81005234 <_puts_r+0xa9>
81005210:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005213:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005217:	80 cc 20             	or     $0x20,%ah
8100521a:	89 c2                	mov    %eax,%edx
8100521c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100521f:	66 89 50 0c          	mov    %dx,0xc(%eax)
81005223:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005226:	8b 40 64             	mov    0x64(%eax),%eax
81005229:	80 e4 df             	and    $0xdf,%ah
8100522c:	89 c2                	mov    %eax,%edx
8100522e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005231:	89 50 64             	mov    %edx,0x64(%eax)
81005234:	83 ec 04             	sub    $0x4,%esp
81005237:	8d 45 dc             	lea    -0x24(%ebp),%eax
8100523a:	50                   	push   %eax
8100523b:	ff 75 f0             	push   -0x10(%ebp)
8100523e:	ff 75 08             	push   0x8(%ebp)
81005241:	e8 a4 15 00 00       	call   810067ea <__sfvwrite_r>
81005246:	83 c4 10             	add    $0x10,%esp
81005249:	85 c0                	test   %eax,%eax
8100524b:	74 07                	je     81005254 <_puts_r+0xc9>
8100524d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005252:	eb 05                	jmp    81005259 <_puts_r+0xce>
81005254:	b8 0a 00 00 00       	mov    $0xa,%eax
81005259:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100525c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100525f:	c9                   	leave  
81005260:	c3                   	ret    

81005261 <puts>:
81005261:	55                   	push   %ebp
81005262:	89 e5                	mov    %esp,%ebp
81005264:	83 ec 08             	sub    $0x8,%esp
81005267:	a1 44 91 00 81       	mov    0x81009144,%eax
8100526c:	83 ec 08             	sub    $0x8,%esp
8100526f:	ff 75 08             	push   0x8(%ebp)
81005272:	50                   	push   %eax
81005273:	e8 13 ff ff ff       	call   8100518b <_puts_r>
81005278:	83 c4 10             	add    $0x10,%esp
8100527b:	c9                   	leave  
8100527c:	c3                   	ret    

8100527d <cleanup_glue>:
8100527d:	55                   	push   %ebp
8100527e:	89 e5                	mov    %esp,%ebp
81005280:	83 ec 08             	sub    $0x8,%esp
81005283:	8b 45 0c             	mov    0xc(%ebp),%eax
81005286:	8b 00                	mov    (%eax),%eax
81005288:	85 c0                	test   %eax,%eax
8100528a:	74 14                	je     810052a0 <cleanup_glue+0x23>
8100528c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100528f:	8b 00                	mov    (%eax),%eax
81005291:	83 ec 08             	sub    $0x8,%esp
81005294:	50                   	push   %eax
81005295:	ff 75 08             	push   0x8(%ebp)
81005298:	e8 e0 ff ff ff       	call   8100527d <cleanup_glue>
8100529d:	83 c4 10             	add    $0x10,%esp
810052a0:	83 ec 08             	sub    $0x8,%esp
810052a3:	ff 75 0c             	push   0xc(%ebp)
810052a6:	ff 75 08             	push   0x8(%ebp)
810052a9:	e8 36 ca ff ff       	call   81001ce4 <_free_r>
810052ae:	83 c4 10             	add    $0x10,%esp
810052b1:	90                   	nop
810052b2:	c9                   	leave  
810052b3:	c3                   	ret    

810052b4 <_reclaim_reent>:
810052b4:	55                   	push   %ebp
810052b5:	89 e5                	mov    %esp,%ebp
810052b7:	83 ec 28             	sub    $0x28,%esp
810052ba:	a1 44 91 00 81       	mov    0x81009144,%eax
810052bf:	39 45 08             	cmp    %eax,0x8(%ebp)
810052c2:	0f 84 49 01 00 00    	je     81005411 <_reclaim_reent+0x15d>
810052c8:	8b 45 08             	mov    0x8(%ebp),%eax
810052cb:	8b 40 4c             	mov    0x4c(%eax),%eax
810052ce:	85 c0                	test   %eax,%eax
810052d0:	74 64                	je     81005336 <_reclaim_reent+0x82>
810052d2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810052d9:	eb 3e                	jmp    81005319 <_reclaim_reent+0x65>
810052db:	8b 45 08             	mov    0x8(%ebp),%eax
810052de:	8b 50 4c             	mov    0x4c(%eax),%edx
810052e1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810052e4:	c1 e0 02             	shl    $0x2,%eax
810052e7:	01 d0                	add    %edx,%eax
810052e9:	8b 00                	mov    (%eax),%eax
810052eb:	89 45 f0             	mov    %eax,-0x10(%ebp)
810052ee:	eb 1f                	jmp    8100530f <_reclaim_reent+0x5b>
810052f0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810052f3:	89 45 e8             	mov    %eax,-0x18(%ebp)
810052f6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810052f9:	8b 00                	mov    (%eax),%eax
810052fb:	89 45 f0             	mov    %eax,-0x10(%ebp)
810052fe:	83 ec 08             	sub    $0x8,%esp
81005301:	ff 75 e8             	push   -0x18(%ebp)
81005304:	ff 75 08             	push   0x8(%ebp)
81005307:	e8 d8 c9 ff ff       	call   81001ce4 <_free_r>
8100530c:	83 c4 10             	add    $0x10,%esp
8100530f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81005313:	75 db                	jne    810052f0 <_reclaim_reent+0x3c>
81005315:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81005319:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100531c:	83 f8 1f             	cmp    $0x1f,%eax
8100531f:	76 ba                	jbe    810052db <_reclaim_reent+0x27>
81005321:	8b 45 08             	mov    0x8(%ebp),%eax
81005324:	8b 40 4c             	mov    0x4c(%eax),%eax
81005327:	83 ec 08             	sub    $0x8,%esp
8100532a:	50                   	push   %eax
8100532b:	ff 75 08             	push   0x8(%ebp)
8100532e:	e8 b1 c9 ff ff       	call   81001ce4 <_free_r>
81005333:	83 c4 10             	add    $0x10,%esp
81005336:	8b 45 08             	mov    0x8(%ebp),%eax
81005339:	8b 40 40             	mov    0x40(%eax),%eax
8100533c:	85 c0                	test   %eax,%eax
8100533e:	74 15                	je     81005355 <_reclaim_reent+0xa1>
81005340:	8b 45 08             	mov    0x8(%ebp),%eax
81005343:	8b 40 40             	mov    0x40(%eax),%eax
81005346:	83 ec 08             	sub    $0x8,%esp
81005349:	50                   	push   %eax
8100534a:	ff 75 08             	push   0x8(%ebp)
8100534d:	e8 92 c9 ff ff       	call   81001ce4 <_free_r>
81005352:	83 c4 10             	add    $0x10,%esp
81005355:	8b 45 08             	mov    0x8(%ebp),%eax
81005358:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
8100535e:	85 c0                	test   %eax,%eax
81005360:	74 50                	je     810053b2 <_reclaim_reent+0xfe>
81005362:	8b 45 08             	mov    0x8(%ebp),%eax
81005365:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
8100536b:	8b 55 08             	mov    0x8(%ebp),%edx
8100536e:	81 c2 4c 01 00 00    	add    $0x14c,%edx
81005374:	39 d0                	cmp    %edx,%eax
81005376:	74 3a                	je     810053b2 <_reclaim_reent+0xfe>
81005378:	8b 45 08             	mov    0x8(%ebp),%eax
8100537b:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81005381:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005384:	eb 1f                	jmp    810053a5 <_reclaim_reent+0xf1>
81005386:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005389:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100538c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100538f:	8b 00                	mov    (%eax),%eax
81005391:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005394:	83 ec 08             	sub    $0x8,%esp
81005397:	ff 75 e4             	push   -0x1c(%ebp)
8100539a:	ff 75 08             	push   0x8(%ebp)
8100539d:	e8 42 c9 ff ff       	call   81001ce4 <_free_r>
810053a2:	83 c4 10             	add    $0x10,%esp
810053a5:	8b 45 08             	mov    0x8(%ebp),%eax
810053a8:	05 4c 01 00 00       	add    $0x14c,%eax
810053ad:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810053b0:	75 d4                	jne    81005386 <_reclaim_reent+0xd2>
810053b2:	8b 45 08             	mov    0x8(%ebp),%eax
810053b5:	8b 40 54             	mov    0x54(%eax),%eax
810053b8:	85 c0                	test   %eax,%eax
810053ba:	74 15                	je     810053d1 <_reclaim_reent+0x11d>
810053bc:	8b 45 08             	mov    0x8(%ebp),%eax
810053bf:	8b 40 54             	mov    0x54(%eax),%eax
810053c2:	83 ec 08             	sub    $0x8,%esp
810053c5:	50                   	push   %eax
810053c6:	ff 75 08             	push   0x8(%ebp)
810053c9:	e8 16 c9 ff ff       	call   81001ce4 <_free_r>
810053ce:	83 c4 10             	add    $0x10,%esp
810053d1:	8b 45 08             	mov    0x8(%ebp),%eax
810053d4:	8b 40 38             	mov    0x38(%eax),%eax
810053d7:	85 c0                	test   %eax,%eax
810053d9:	74 36                	je     81005411 <_reclaim_reent+0x15d>
810053db:	8b 45 08             	mov    0x8(%ebp),%eax
810053de:	8b 40 3c             	mov    0x3c(%eax),%eax
810053e1:	83 ec 0c             	sub    $0xc,%esp
810053e4:	ff 75 08             	push   0x8(%ebp)
810053e7:	ff d0                	call   *%eax
810053e9:	83 c4 10             	add    $0x10,%esp
810053ec:	8b 45 08             	mov    0x8(%ebp),%eax
810053ef:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810053f5:	85 c0                	test   %eax,%eax
810053f7:	74 18                	je     81005411 <_reclaim_reent+0x15d>
810053f9:	8b 45 08             	mov    0x8(%ebp),%eax
810053fc:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81005402:	83 ec 08             	sub    $0x8,%esp
81005405:	50                   	push   %eax
81005406:	ff 75 08             	push   0x8(%ebp)
81005409:	e8 6f fe ff ff       	call   8100527d <cleanup_glue>
8100540e:	83 c4 10             	add    $0x10,%esp
81005411:	90                   	nop
81005412:	c9                   	leave  
81005413:	c3                   	ret    

81005414 <lflush>:
81005414:	55                   	push   %ebp
81005415:	89 e5                	mov    %esp,%ebp
81005417:	83 ec 08             	sub    $0x8,%esp
8100541a:	8b 45 08             	mov    0x8(%ebp),%eax
8100541d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005421:	98                   	cwtl   
81005422:	83 e0 09             	and    $0x9,%eax
81005425:	83 f8 09             	cmp    $0x9,%eax
81005428:	75 10                	jne    8100543a <lflush+0x26>
8100542a:	83 ec 0c             	sub    $0xc,%esp
8100542d:	ff 75 08             	push   0x8(%ebp)
81005430:	e8 14 bf ff ff       	call   81001349 <fflush>
81005435:	83 c4 10             	add    $0x10,%esp
81005438:	eb 05                	jmp    8100543f <lflush+0x2b>
8100543a:	b8 00 00 00 00       	mov    $0x0,%eax
8100543f:	c9                   	leave  
81005440:	c3                   	ret    

81005441 <__srefill_r>:
81005441:	55                   	push   %ebp
81005442:	89 e5                	mov    %esp,%ebp
81005444:	56                   	push   %esi
81005445:	53                   	push   %ebx
81005446:	83 ec 10             	sub    $0x10,%esp
81005449:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100544c:	8b 45 08             	mov    0x8(%ebp),%eax
8100544f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005452:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005456:	74 18                	je     81005470 <__srefill_r+0x2f>
81005458:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100545b:	8b 40 38             	mov    0x38(%eax),%eax
8100545e:	85 c0                	test   %eax,%eax
81005460:	75 0e                	jne    81005470 <__srefill_r+0x2f>
81005462:	83 ec 0c             	sub    $0xc,%esp
81005465:	ff 75 f4             	push   -0xc(%ebp)
81005468:	e8 87 c3 ff ff       	call   810017f4 <__sinit>
8100546d:	83 c4 10             	add    $0x10,%esp
81005470:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005474:	98                   	cwtl   
81005475:	25 00 20 00 00       	and    $0x2000,%eax
8100547a:	85 c0                	test   %eax,%eax
8100547c:	75 14                	jne    81005492 <__srefill_r+0x51>
8100547e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005482:	80 cc 20             	or     $0x20,%ah
81005485:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005489:	8b 43 64             	mov    0x64(%ebx),%eax
8100548c:	80 e4 df             	and    $0xdf,%ah
8100548f:	89 43 64             	mov    %eax,0x64(%ebx)
81005492:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81005499:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100549d:	98                   	cwtl   
8100549e:	83 e0 20             	and    $0x20,%eax
810054a1:	85 c0                	test   %eax,%eax
810054a3:	74 0a                	je     810054af <__srefill_r+0x6e>
810054a5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810054aa:	e9 8c 01 00 00       	jmp    8100563b <__srefill_r+0x1fa>
810054af:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810054b3:	98                   	cwtl   
810054b4:	83 e0 04             	and    $0x4,%eax
810054b7:	85 c0                	test   %eax,%eax
810054b9:	75 79                	jne    81005534 <__srefill_r+0xf3>
810054bb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810054bf:	98                   	cwtl   
810054c0:	83 e0 10             	and    $0x10,%eax
810054c3:	85 c0                	test   %eax,%eax
810054c5:	75 1e                	jne    810054e5 <__srefill_r+0xa4>
810054c7:	8b 45 08             	mov    0x8(%ebp),%eax
810054ca:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
810054d0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810054d4:	83 c8 40             	or     $0x40,%eax
810054d7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810054db:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810054e0:	e9 56 01 00 00       	jmp    8100563b <__srefill_r+0x1fa>
810054e5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810054e9:	98                   	cwtl   
810054ea:	83 e0 08             	and    $0x8,%eax
810054ed:	85 c0                	test   %eax,%eax
810054ef:	74 36                	je     81005527 <__srefill_r+0xe6>
810054f1:	83 ec 08             	sub    $0x8,%esp
810054f4:	53                   	push   %ebx
810054f5:	ff 75 08             	push   0x8(%ebp)
810054f8:	e8 f4 bd ff ff       	call   810012f1 <_fflush_r>
810054fd:	83 c4 10             	add    $0x10,%esp
81005500:	85 c0                	test   %eax,%eax
81005502:	74 0a                	je     8100550e <__srefill_r+0xcd>
81005504:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005509:	e9 2d 01 00 00       	jmp    8100563b <__srefill_r+0x1fa>
8100550e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005512:	83 e0 f7             	and    $0xfffffff7,%eax
81005515:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005519:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005520:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
81005527:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100552b:	83 c8 04             	or     $0x4,%eax
8100552e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005532:	eb 46                	jmp    8100557a <__srefill_r+0x139>
81005534:	8b 43 30             	mov    0x30(%ebx),%eax
81005537:	85 c0                	test   %eax,%eax
81005539:	74 3f                	je     8100557a <__srefill_r+0x139>
8100553b:	8b 53 30             	mov    0x30(%ebx),%edx
8100553e:	8d 43 40             	lea    0x40(%ebx),%eax
81005541:	39 c2                	cmp    %eax,%edx
81005543:	74 12                	je     81005557 <__srefill_r+0x116>
81005545:	8b 43 30             	mov    0x30(%ebx),%eax
81005548:	83 ec 08             	sub    $0x8,%esp
8100554b:	50                   	push   %eax
8100554c:	ff 75 08             	push   0x8(%ebp)
8100554f:	e8 90 c7 ff ff       	call   81001ce4 <_free_r>
81005554:	83 c4 10             	add    $0x10,%esp
81005557:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100555e:	8b 43 3c             	mov    0x3c(%ebx),%eax
81005561:	89 43 04             	mov    %eax,0x4(%ebx)
81005564:	8b 43 04             	mov    0x4(%ebx),%eax
81005567:	85 c0                	test   %eax,%eax
81005569:	74 0f                	je     8100557a <__srefill_r+0x139>
8100556b:	8b 43 38             	mov    0x38(%ebx),%eax
8100556e:	89 03                	mov    %eax,(%ebx)
81005570:	b8 00 00 00 00       	mov    $0x0,%eax
81005575:	e9 c1 00 00 00       	jmp    8100563b <__srefill_r+0x1fa>
8100557a:	8b 43 10             	mov    0x10(%ebx),%eax
8100557d:	85 c0                	test   %eax,%eax
8100557f:	75 0f                	jne    81005590 <__srefill_r+0x14f>
81005581:	83 ec 08             	sub    $0x8,%esp
81005584:	53                   	push   %ebx
81005585:	ff 75 08             	push   0x8(%ebp)
81005588:	e8 ce e1 ff ff       	call   8100375b <__smakebuf_r>
8100558d:	83 c4 10             	add    $0x10,%esp
81005590:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005594:	98                   	cwtl   
81005595:	83 e0 03             	and    $0x3,%eax
81005598:	85 c0                	test   %eax,%eax
8100559a:	74 48                	je     810055e4 <__srefill_r+0x1a3>
8100559c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810055a0:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
810055a4:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
810055aa:	a1 90 89 00 81       	mov    0x81008990,%eax
810055af:	83 ec 08             	sub    $0x8,%esp
810055b2:	68 14 54 00 81       	push   $0x81005414
810055b7:	50                   	push   %eax
810055b8:	e8 b4 d1 ff ff       	call   81002771 <_fwalk>
810055bd:	83 c4 10             	add    $0x10,%esp
810055c0:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
810055c4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810055c8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810055cc:	98                   	cwtl   
810055cd:	83 e0 09             	and    $0x9,%eax
810055d0:	83 f8 09             	cmp    $0x9,%eax
810055d3:	75 0f                	jne    810055e4 <__srefill_r+0x1a3>
810055d5:	83 ec 08             	sub    $0x8,%esp
810055d8:	53                   	push   %ebx
810055d9:	ff 75 08             	push   0x8(%ebp)
810055dc:	e8 ea ba ff ff       	call   810010cb <__sflush_r>
810055e1:	83 c4 10             	add    $0x10,%esp
810055e4:	8b 43 10             	mov    0x10(%ebx),%eax
810055e7:	89 03                	mov    %eax,(%ebx)
810055e9:	8b 43 20             	mov    0x20(%ebx),%eax
810055ec:	8b 73 14             	mov    0x14(%ebx),%esi
810055ef:	8b 0b                	mov    (%ebx),%ecx
810055f1:	8b 53 1c             	mov    0x1c(%ebx),%edx
810055f4:	56                   	push   %esi
810055f5:	51                   	push   %ecx
810055f6:	52                   	push   %edx
810055f7:	ff 75 08             	push   0x8(%ebp)
810055fa:	ff d0                	call   *%eax
810055fc:	83 c4 10             	add    $0x10,%esp
810055ff:	89 43 04             	mov    %eax,0x4(%ebx)
81005602:	8b 43 04             	mov    0x4(%ebx),%eax
81005605:	85 c0                	test   %eax,%eax
81005607:	7f 2d                	jg     81005636 <__srefill_r+0x1f5>
81005609:	8b 43 04             	mov    0x4(%ebx),%eax
8100560c:	85 c0                	test   %eax,%eax
8100560e:	75 0d                	jne    8100561d <__srefill_r+0x1dc>
81005610:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005614:	83 c8 20             	or     $0x20,%eax
81005617:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100561b:	eb 12                	jmp    8100562f <__srefill_r+0x1ee>
8100561d:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81005624:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005628:	83 c8 40             	or     $0x40,%eax
8100562b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100562f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005634:	eb 05                	jmp    8100563b <__srefill_r+0x1fa>
81005636:	b8 00 00 00 00       	mov    $0x0,%eax
8100563b:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100563e:	5b                   	pop    %ebx
8100563f:	5e                   	pop    %esi
81005640:	5d                   	pop    %ebp
81005641:	c3                   	ret    

81005642 <_sbrk_r>:
81005642:	55                   	push   %ebp
81005643:	89 e5                	mov    %esp,%ebp
81005645:	83 ec 18             	sub    $0x18,%esp
81005648:	c7 05 8c 9e 00 81 00 	movl   $0x0,0x81009e8c
8100564f:	00 00 00 
81005652:	83 ec 0c             	sub    $0xc,%esp
81005655:	ff 75 0c             	push   0xc(%ebp)
81005658:	e8 10 b7 ff ff       	call   81000d6d <sbrk>
8100565d:	83 c4 10             	add    $0x10,%esp
81005660:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005663:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81005667:	75 14                	jne    8100567d <_sbrk_r+0x3b>
81005669:	a1 8c 9e 00 81       	mov    0x81009e8c,%eax
8100566e:	85 c0                	test   %eax,%eax
81005670:	74 0b                	je     8100567d <_sbrk_r+0x3b>
81005672:	8b 15 8c 9e 00 81    	mov    0x81009e8c,%edx
81005678:	8b 45 08             	mov    0x8(%ebp),%eax
8100567b:	89 10                	mov    %edx,(%eax)
8100567d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005680:	c9                   	leave  
81005681:	c3                   	ret    

81005682 <setvbuf>:
81005682:	55                   	push   %ebp
81005683:	89 e5                	mov    %esp,%ebp
81005685:	57                   	push   %edi
81005686:	56                   	push   %esi
81005687:	53                   	push   %ebx
81005688:	83 ec 2c             	sub    $0x2c,%esp
8100568b:	8b 5d 08             	mov    0x8(%ebp),%ebx
8100568e:	8b 7d 10             	mov    0x10(%ebp),%edi
81005691:	8b 75 14             	mov    0x14(%ebp),%esi
81005694:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100569b:	a1 44 91 00 81       	mov    0x81009144,%eax
810056a0:	89 45 e0             	mov    %eax,-0x20(%ebp)
810056a3:	8b 45 e0             	mov    -0x20(%ebp),%eax
810056a6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810056a9:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810056ad:	74 18                	je     810056c7 <setvbuf+0x45>
810056af:	8b 45 dc             	mov    -0x24(%ebp),%eax
810056b2:	8b 40 38             	mov    0x38(%eax),%eax
810056b5:	85 c0                	test   %eax,%eax
810056b7:	75 0e                	jne    810056c7 <setvbuf+0x45>
810056b9:	83 ec 0c             	sub    $0xc,%esp
810056bc:	ff 75 dc             	push   -0x24(%ebp)
810056bf:	e8 30 c1 ff ff       	call   810017f4 <__sinit>
810056c4:	83 c4 10             	add    $0x10,%esp
810056c7:	83 ff 02             	cmp    $0x2,%edi
810056ca:	74 19                	je     810056e5 <setvbuf+0x63>
810056cc:	85 ff                	test   %edi,%edi
810056ce:	74 05                	je     810056d5 <setvbuf+0x53>
810056d0:	83 ff 01             	cmp    $0x1,%edi
810056d3:	75 06                	jne    810056db <setvbuf+0x59>
810056d5:	89 f0                	mov    %esi,%eax
810056d7:	85 c0                	test   %eax,%eax
810056d9:	79 0a                	jns    810056e5 <setvbuf+0x63>
810056db:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810056e0:	e9 a1 01 00 00       	jmp    81005886 <setvbuf+0x204>
810056e5:	83 ec 08             	sub    $0x8,%esp
810056e8:	53                   	push   %ebx
810056e9:	ff 75 e0             	push   -0x20(%ebp)
810056ec:	e8 00 bc ff ff       	call   810012f1 <_fflush_r>
810056f1:	83 c4 10             	add    $0x10,%esp
810056f4:	8b 43 30             	mov    0x30(%ebx),%eax
810056f7:	85 c0                	test   %eax,%eax
810056f9:	74 23                	je     8100571e <setvbuf+0x9c>
810056fb:	8b 53 30             	mov    0x30(%ebx),%edx
810056fe:	8d 43 40             	lea    0x40(%ebx),%eax
81005701:	39 c2                	cmp    %eax,%edx
81005703:	74 12                	je     81005717 <setvbuf+0x95>
81005705:	8b 43 30             	mov    0x30(%ebx),%eax
81005708:	83 ec 08             	sub    $0x8,%esp
8100570b:	50                   	push   %eax
8100570c:	ff 75 e0             	push   -0x20(%ebp)
8100570f:	e8 d0 c5 ff ff       	call   81001ce4 <_free_r>
81005714:	83 c4 10             	add    $0x10,%esp
81005717:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100571e:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
81005725:	8b 43 18             	mov    0x18(%ebx),%eax
81005728:	89 43 04             	mov    %eax,0x4(%ebx)
8100572b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100572f:	98                   	cwtl   
81005730:	25 80 00 00 00       	and    $0x80,%eax
81005735:	85 c0                	test   %eax,%eax
81005737:	74 12                	je     8100574b <setvbuf+0xc9>
81005739:	8b 43 10             	mov    0x10(%ebx),%eax
8100573c:	83 ec 08             	sub    $0x8,%esp
8100573f:	50                   	push   %eax
81005740:	ff 75 e0             	push   -0x20(%ebp)
81005743:	e8 9c c5 ff ff       	call   81001ce4 <_free_r>
81005748:	83 c4 10             	add    $0x10,%esp
8100574b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100574f:	66 25 5c f3          	and    $0xf35c,%ax
81005753:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005757:	83 ff 02             	cmp    $0x2,%edi
8100575a:	74 6f                	je     810057cb <setvbuf+0x149>
8100575c:	8d 45 d4             	lea    -0x2c(%ebp),%eax
8100575f:	50                   	push   %eax
81005760:	8d 45 d8             	lea    -0x28(%ebp),%eax
81005763:	50                   	push   %eax
81005764:	53                   	push   %ebx
81005765:	ff 75 e0             	push   -0x20(%ebp)
81005768:	e8 db e0 ff ff       	call   81003848 <__swhatbuf_r>
8100576d:	83 c4 10             	add    $0x10,%esp
81005770:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81005774:	09 d0                	or     %edx,%eax
81005776:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100577a:	85 f6                	test   %esi,%esi
8100577c:	75 0a                	jne    81005788 <setvbuf+0x106>
8100577e:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
81005785:	8b 75 d8             	mov    -0x28(%ebp),%esi
81005788:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100578c:	75 73                	jne    81005801 <setvbuf+0x17f>
8100578e:	83 ec 0c             	sub    $0xc,%esp
81005791:	56                   	push   %esi
81005792:	e8 44 e1 ff ff       	call   810038db <malloc>
81005797:	83 c4 10             	add    $0x10,%esp
8100579a:	89 45 0c             	mov    %eax,0xc(%ebp)
8100579d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810057a1:	75 20                	jne    810057c3 <setvbuf+0x141>
810057a3:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
810057aa:	8b 45 d8             	mov    -0x28(%ebp),%eax
810057ad:	39 c6                	cmp    %eax,%esi
810057af:	74 12                	je     810057c3 <setvbuf+0x141>
810057b1:	8b 75 d8             	mov    -0x28(%ebp),%esi
810057b4:	83 ec 0c             	sub    $0xc,%esp
810057b7:	56                   	push   %esi
810057b8:	e8 1e e1 ff ff       	call   810038db <malloc>
810057bd:	83 c4 10             	add    $0x10,%esp
810057c0:	89 45 0c             	mov    %eax,0xc(%ebp)
810057c3:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810057c7:	75 2e                	jne    810057f7 <setvbuf+0x175>
810057c9:	eb 01                	jmp    810057cc <setvbuf+0x14a>
810057cb:	90                   	nop
810057cc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810057d0:	83 c8 02             	or     $0x2,%eax
810057d3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810057d7:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810057de:	8d 43 43             	lea    0x43(%ebx),%eax
810057e1:	89 03                	mov    %eax,(%ebx)
810057e3:	8b 03                	mov    (%ebx),%eax
810057e5:	89 43 10             	mov    %eax,0x10(%ebx)
810057e8:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810057ef:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810057f2:	e9 8f 00 00 00       	jmp    81005886 <setvbuf+0x204>
810057f7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810057fb:	0c 80                	or     $0x80,%al
810057fd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005801:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005804:	8b 40 38             	mov    0x38(%eax),%eax
81005807:	85 c0                	test   %eax,%eax
81005809:	75 0e                	jne    81005819 <setvbuf+0x197>
8100580b:	83 ec 0c             	sub    $0xc,%esp
8100580e:	ff 75 e0             	push   -0x20(%ebp)
81005811:	e8 de bf ff ff       	call   810017f4 <__sinit>
81005816:	83 c4 10             	add    $0x10,%esp
81005819:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100581c:	39 c6                	cmp    %eax,%esi
8100581e:	74 0b                	je     8100582b <setvbuf+0x1a9>
81005820:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005824:	80 cc 08             	or     $0x8,%ah
81005827:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100582b:	83 ff 01             	cmp    $0x1,%edi
8100582e:	75 0b                	jne    8100583b <setvbuf+0x1b9>
81005830:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005834:	83 c8 01             	or     $0x1,%eax
81005837:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100583b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100583e:	89 03                	mov    %eax,(%ebx)
81005840:	8b 03                	mov    (%ebx),%eax
81005842:	89 43 10             	mov    %eax,0x10(%ebx)
81005845:	89 f0                	mov    %esi,%eax
81005847:	89 43 14             	mov    %eax,0x14(%ebx)
8100584a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100584e:	98                   	cwtl   
8100584f:	83 e0 08             	and    $0x8,%eax
81005852:	85 c0                	test   %eax,%eax
81005854:	74 24                	je     8100587a <setvbuf+0x1f8>
81005856:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100585a:	98                   	cwtl   
8100585b:	83 e0 01             	and    $0x1,%eax
8100585e:	85 c0                	test   %eax,%eax
81005860:	74 11                	je     81005873 <setvbuf+0x1f1>
81005862:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005869:	8b 43 14             	mov    0x14(%ebx),%eax
8100586c:	f7 d8                	neg    %eax
8100586e:	89 43 18             	mov    %eax,0x18(%ebx)
81005871:	eb 0e                	jmp    81005881 <setvbuf+0x1ff>
81005873:	89 f0                	mov    %esi,%eax
81005875:	89 43 08             	mov    %eax,0x8(%ebx)
81005878:	eb 07                	jmp    81005881 <setvbuf+0x1ff>
8100587a:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005881:	b8 00 00 00 00       	mov    $0x0,%eax
81005886:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005889:	5b                   	pop    %ebx
8100588a:	5e                   	pop    %esi
8100588b:	5f                   	pop    %edi
8100588c:	5d                   	pop    %ebp
8100588d:	c3                   	ret    

8100588e <_siprintf_r>:
8100588e:	55                   	push   %ebp
8100588f:	89 e5                	mov    %esp,%ebp
81005891:	83 ec 78             	sub    $0x78,%esp
81005894:	66 c7 45 94 08 02    	movw   $0x208,-0x6c(%ebp)
8100589a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100589d:	89 45 88             	mov    %eax,-0x78(%ebp)
810058a0:	8b 45 88             	mov    -0x78(%ebp),%eax
810058a3:	89 45 98             	mov    %eax,-0x68(%ebp)
810058a6:	c7 45 90 ff ff ff 7f 	movl   $0x7fffffff,-0x70(%ebp)
810058ad:	8b 45 90             	mov    -0x70(%ebp),%eax
810058b0:	89 45 9c             	mov    %eax,-0x64(%ebp)
810058b3:	66 c7 45 96 ff ff    	movw   $0xffff,-0x6a(%ebp)
810058b9:	8d 45 14             	lea    0x14(%ebp),%eax
810058bc:	89 45 f0             	mov    %eax,-0x10(%ebp)
810058bf:	8b 45 f0             	mov    -0x10(%ebp),%eax
810058c2:	50                   	push   %eax
810058c3:	ff 75 10             	push   0x10(%ebp)
810058c6:	8d 45 88             	lea    -0x78(%ebp),%eax
810058c9:	50                   	push   %eax
810058ca:	ff 75 08             	push   0x8(%ebp)
810058cd:	e8 14 1c 00 00       	call   810074e6 <_svfiprintf_r>
810058d2:	83 c4 10             	add    $0x10,%esp
810058d5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810058d8:	8b 45 88             	mov    -0x78(%ebp),%eax
810058db:	c6 00 00             	movb   $0x0,(%eax)
810058de:	8b 45 f4             	mov    -0xc(%ebp),%eax
810058e1:	c9                   	leave  
810058e2:	c3                   	ret    

810058e3 <siprintf>:
810058e3:	55                   	push   %ebp
810058e4:	89 e5                	mov    %esp,%ebp
810058e6:	83 ec 78             	sub    $0x78,%esp
810058e9:	66 c7 45 94 08 02    	movw   $0x208,-0x6c(%ebp)
810058ef:	8b 45 08             	mov    0x8(%ebp),%eax
810058f2:	89 45 88             	mov    %eax,-0x78(%ebp)
810058f5:	8b 45 88             	mov    -0x78(%ebp),%eax
810058f8:	89 45 98             	mov    %eax,-0x68(%ebp)
810058fb:	c7 45 90 ff ff ff 7f 	movl   $0x7fffffff,-0x70(%ebp)
81005902:	8b 45 90             	mov    -0x70(%ebp),%eax
81005905:	89 45 9c             	mov    %eax,-0x64(%ebp)
81005908:	66 c7 45 96 ff ff    	movw   $0xffff,-0x6a(%ebp)
8100590e:	8d 45 10             	lea    0x10(%ebp),%eax
81005911:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005914:	8b 55 f0             	mov    -0x10(%ebp),%edx
81005917:	a1 44 91 00 81       	mov    0x81009144,%eax
8100591c:	52                   	push   %edx
8100591d:	ff 75 0c             	push   0xc(%ebp)
81005920:	8d 55 88             	lea    -0x78(%ebp),%edx
81005923:	52                   	push   %edx
81005924:	50                   	push   %eax
81005925:	e8 bc 1b 00 00       	call   810074e6 <_svfiprintf_r>
8100592a:	83 c4 10             	add    $0x10,%esp
8100592d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005930:	8b 45 88             	mov    -0x78(%ebp),%eax
81005933:	c6 00 00             	movb   $0x0,(%eax)
81005936:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005939:	c9                   	leave  
8100593a:	c3                   	ret    

8100593b <__sread>:
8100593b:	55                   	push   %ebp
8100593c:	89 e5                	mov    %esp,%ebp
8100593e:	56                   	push   %esi
8100593f:	53                   	push   %ebx
81005940:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005943:	8b 55 14             	mov    0x14(%ebp),%edx
81005946:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100594a:	98                   	cwtl   
8100594b:	52                   	push   %edx
8100594c:	ff 75 10             	push   0x10(%ebp)
8100594f:	50                   	push   %eax
81005950:	ff 75 08             	push   0x8(%ebp)
81005953:	e8 cc 1f 00 00       	call   81007924 <_read_r>
81005958:	83 c4 10             	add    $0x10,%esp
8100595b:	89 c6                	mov    %eax,%esi
8100595d:	85 f6                	test   %esi,%esi
8100595f:	78 0a                	js     8100596b <__sread+0x30>
81005961:	8b 43 50             	mov    0x50(%ebx),%eax
81005964:	01 f0                	add    %esi,%eax
81005966:	89 43 50             	mov    %eax,0x50(%ebx)
81005969:	eb 0b                	jmp    81005976 <__sread+0x3b>
8100596b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100596f:	80 e4 ef             	and    $0xef,%ah
81005972:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005976:	89 f0                	mov    %esi,%eax
81005978:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100597b:	5b                   	pop    %ebx
8100597c:	5e                   	pop    %esi
8100597d:	5d                   	pop    %ebp
8100597e:	c3                   	ret    

8100597f <__seofread>:
8100597f:	55                   	push   %ebp
81005980:	89 e5                	mov    %esp,%ebp
81005982:	b8 00 00 00 00       	mov    $0x0,%eax
81005987:	5d                   	pop    %ebp
81005988:	c3                   	ret    

81005989 <__swrite>:
81005989:	55                   	push   %ebp
8100598a:	89 e5                	mov    %esp,%ebp
8100598c:	53                   	push   %ebx
8100598d:	83 ec 14             	sub    $0x14,%esp
81005990:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005993:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005997:	98                   	cwtl   
81005998:	25 00 01 00 00       	and    $0x100,%eax
8100599d:	85 c0                	test   %eax,%eax
8100599f:	74 15                	je     810059b6 <__swrite+0x2d>
810059a1:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810059a5:	98                   	cwtl   
810059a6:	6a 02                	push   $0x2
810059a8:	6a 00                	push   $0x0
810059aa:	50                   	push   %eax
810059ab:	ff 75 08             	push   0x8(%ebp)
810059ae:	e8 db 15 00 00       	call   81006f8e <_lseek_r>
810059b3:	83 c4 10             	add    $0x10,%esp
810059b6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810059ba:	80 e4 ef             	and    $0xef,%ah
810059bd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810059c1:	8b 55 14             	mov    0x14(%ebp),%edx
810059c4:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810059c8:	98                   	cwtl   
810059c9:	52                   	push   %edx
810059ca:	ff 75 10             	push   0x10(%ebp)
810059cd:	50                   	push   %eax
810059ce:	ff 75 08             	push   0x8(%ebp)
810059d1:	e8 4c 07 00 00       	call   81006122 <_write_r>
810059d6:	83 c4 10             	add    $0x10,%esp
810059d9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810059dc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810059df:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810059e2:	c9                   	leave  
810059e3:	c3                   	ret    

810059e4 <__sseek>:
810059e4:	55                   	push   %ebp
810059e5:	89 e5                	mov    %esp,%ebp
810059e7:	56                   	push   %esi
810059e8:	53                   	push   %ebx
810059e9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810059ec:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810059f0:	98                   	cwtl   
810059f1:	ff 75 14             	push   0x14(%ebp)
810059f4:	ff 75 10             	push   0x10(%ebp)
810059f7:	50                   	push   %eax
810059f8:	ff 75 08             	push   0x8(%ebp)
810059fb:	e8 8e 15 00 00       	call   81006f8e <_lseek_r>
81005a00:	83 c4 10             	add    $0x10,%esp
81005a03:	89 c6                	mov    %eax,%esi
81005a05:	83 fe ff             	cmp    $0xffffffff,%esi
81005a08:	75 0d                	jne    81005a17 <__sseek+0x33>
81005a0a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005a0e:	80 e4 ef             	and    $0xef,%ah
81005a11:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005a15:	eb 0e                	jmp    81005a25 <__sseek+0x41>
81005a17:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005a1b:	80 cc 10             	or     $0x10,%ah
81005a1e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005a22:	89 73 50             	mov    %esi,0x50(%ebx)
81005a25:	89 f0                	mov    %esi,%eax
81005a27:	8d 65 f8             	lea    -0x8(%ebp),%esp
81005a2a:	5b                   	pop    %ebx
81005a2b:	5e                   	pop    %esi
81005a2c:	5d                   	pop    %ebp
81005a2d:	c3                   	ret    

81005a2e <__sclose>:
81005a2e:	55                   	push   %ebp
81005a2f:	89 e5                	mov    %esp,%ebp
81005a31:	83 ec 18             	sub    $0x18,%esp
81005a34:	8b 45 0c             	mov    0xc(%ebp),%eax
81005a37:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005a3a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005a3d:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81005a41:	98                   	cwtl   
81005a42:	83 ec 08             	sub    $0x8,%esp
81005a45:	50                   	push   %eax
81005a46:	ff 75 08             	push   0x8(%ebp)
81005a49:	e8 8a 09 00 00       	call   810063d8 <_close_r>
81005a4e:	83 c4 10             	add    $0x10,%esp
81005a51:	c9                   	leave  
81005a52:	c3                   	ret    
81005a53:	66 90                	xchg   %ax,%ax
81005a55:	66 90                	xchg   %ax,%ax
81005a57:	66 90                	xchg   %ax,%ax
81005a59:	66 90                	xchg   %ax,%ax
81005a5b:	66 90                	xchg   %ax,%ax
81005a5d:	66 90                	xchg   %ax,%ax
81005a5f:	90                   	nop

81005a60 <strchr>:
81005a60:	55                   	push   %ebp
81005a61:	89 e5                	mov    %esp,%ebp
81005a63:	57                   	push   %edi
81005a64:	53                   	push   %ebx
81005a65:	31 db                	xor    %ebx,%ebx
81005a67:	8b 7d 08             	mov    0x8(%ebp),%edi
81005a6a:	02 5d 0c             	add    0xc(%ebp),%bl
81005a6d:	0f 84 98 00 00 00    	je     81005b0b <L25>
81005a73:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005a79:	74 37                	je     81005ab2 <L5>
81005a7b:	89 f8                	mov    %edi,%eax
81005a7d:	8a 08                	mov    (%eax),%cl
81005a7f:	84 c9                	test   %cl,%cl
81005a81:	74 7b                	je     81005afe <L14>
81005a83:	38 d9                	cmp    %bl,%cl
81005a85:	74 7d                	je     81005b04 <L19>
81005a87:	47                   	inc    %edi
81005a88:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005a8e:	74 22                	je     81005ab2 <L5>
81005a90:	89 f8                	mov    %edi,%eax
81005a92:	8a 08                	mov    (%eax),%cl
81005a94:	84 c9                	test   %cl,%cl
81005a96:	74 66                	je     81005afe <L14>
81005a98:	38 d9                	cmp    %bl,%cl
81005a9a:	74 68                	je     81005b04 <L19>
81005a9c:	47                   	inc    %edi
81005a9d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005aa3:	74 0d                	je     81005ab2 <L5>
81005aa5:	89 f8                	mov    %edi,%eax
81005aa7:	8a 08                	mov    (%eax),%cl
81005aa9:	84 c9                	test   %cl,%cl
81005aab:	74 51                	je     81005afe <L14>
81005aad:	38 d9                	cmp    %bl,%cl
81005aaf:	74 53                	je     81005b04 <L19>
81005ab1:	47                   	inc    %edi

81005ab2 <L5>:
81005ab2:	89 d9                	mov    %ebx,%ecx
81005ab4:	c1 e3 08             	shl    $0x8,%ebx
81005ab7:	83 ef 04             	sub    $0x4,%edi
81005aba:	09 cb                	or     %ecx,%ebx
81005abc:	89 da                	mov    %ebx,%edx
81005abe:	c1 e3 10             	shl    $0x10,%ebx
81005ac1:	09 d3                	or     %edx,%ebx

81005ac3 <L10>:
81005ac3:	83 c7 04             	add    $0x4,%edi
81005ac6:	8b 0f                	mov    (%edi),%ecx
81005ac8:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81005ace:	89 c8                	mov    %ecx,%eax
81005ad0:	f7 d0                	not    %eax
81005ad2:	21 c2                	and    %eax,%edx
81005ad4:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81005ada:	75 14                	jne    81005af0 <L9>
81005adc:	31 d9                	xor    %ebx,%ecx
81005ade:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81005ae4:	f7 d1                	not    %ecx
81005ae6:	21 ca                	and    %ecx,%edx
81005ae8:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81005aee:	74 d3                	je     81005ac3 <L10>

81005af0 <L9>:
81005af0:	8d 47 ff             	lea    -0x1(%edi),%eax

81005af3 <L15>:
81005af3:	40                   	inc    %eax
81005af4:	8a 10                	mov    (%eax),%dl
81005af6:	84 d2                	test   %dl,%dl
81005af8:	74 04                	je     81005afe <L14>
81005afa:	38 da                	cmp    %bl,%dl
81005afc:	75 f5                	jne    81005af3 <L15>

81005afe <L14>:
81005afe:	38 18                	cmp    %bl,(%eax)
81005b00:	74 02                	je     81005b04 <L19>
81005b02:	31 c0                	xor    %eax,%eax

81005b04 <L19>:
81005b04:	8d 65 f8             	lea    -0x8(%ebp),%esp
81005b07:	5b                   	pop    %ebx
81005b08:	5f                   	pop    %edi
81005b09:	c9                   	leave  
81005b0a:	c3                   	ret    

81005b0b <L25>:
81005b0b:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005b11:	74 2b                	je     81005b3e <L26>
81005b13:	89 f8                	mov    %edi,%eax
81005b15:	8a 08                	mov    (%eax),%cl
81005b17:	84 c9                	test   %cl,%cl
81005b19:	74 e9                	je     81005b04 <L19>
81005b1b:	47                   	inc    %edi
81005b1c:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005b22:	74 1a                	je     81005b3e <L26>
81005b24:	89 f8                	mov    %edi,%eax
81005b26:	8a 08                	mov    (%eax),%cl
81005b28:	84 c9                	test   %cl,%cl
81005b2a:	74 d8                	je     81005b04 <L19>
81005b2c:	47                   	inc    %edi
81005b2d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005b33:	74 09                	je     81005b3e <L26>
81005b35:	89 f8                	mov    %edi,%eax
81005b37:	8a 08                	mov    (%eax),%cl
81005b39:	84 c9                	test   %cl,%cl
81005b3b:	74 c7                	je     81005b04 <L19>
81005b3d:	47                   	inc    %edi

81005b3e <L26>:
81005b3e:	83 ef 04             	sub    $0x4,%edi

81005b41 <L27>:
81005b41:	83 c7 04             	add    $0x4,%edi
81005b44:	8b 0f                	mov    (%edi),%ecx
81005b46:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81005b4c:	89 c8                	mov    %ecx,%eax
81005b4e:	f7 d0                	not    %eax
81005b50:	21 c2                	and    %eax,%edx
81005b52:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81005b58:	74 e7                	je     81005b41 <L27>
81005b5a:	eb 94                	jmp    81005af0 <L9>

81005b5c <strcmp>:
81005b5c:	55                   	push   %ebp
81005b5d:	89 e5                	mov    %esp,%ebp
81005b5f:	83 ec 10             	sub    $0x10,%esp
81005b62:	8b 55 08             	mov    0x8(%ebp),%edx
81005b65:	8b 45 0c             	mov    0xc(%ebp),%eax
81005b68:	09 d0                	or     %edx,%eax
81005b6a:	83 e0 03             	and    $0x3,%eax
81005b6d:	85 c0                	test   %eax,%eax
81005b6f:	75 5e                	jne    81005bcf <strcmp+0x73>
81005b71:	8b 45 08             	mov    0x8(%ebp),%eax
81005b74:	89 45 fc             	mov    %eax,-0x4(%ebp)
81005b77:	8b 45 0c             	mov    0xc(%ebp),%eax
81005b7a:	89 45 f8             	mov    %eax,-0x8(%ebp)
81005b7d:	eb 2c                	jmp    81005bab <strcmp+0x4f>
81005b7f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005b82:	8b 00                	mov    (%eax),%eax
81005b84:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81005b8a:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005b8d:	8b 00                	mov    (%eax),%eax
81005b8f:	f7 d0                	not    %eax
81005b91:	21 d0                	and    %edx,%eax
81005b93:	25 80 80 80 80       	and    $0x80808080,%eax
81005b98:	85 c0                	test   %eax,%eax
81005b9a:	74 07                	je     81005ba3 <strcmp+0x47>
81005b9c:	b8 00 00 00 00       	mov    $0x0,%eax
81005ba1:	eb 5c                	jmp    81005bff <strcmp+0xa3>
81005ba3:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81005ba7:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81005bab:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005bae:	8b 10                	mov    (%eax),%edx
81005bb0:	8b 45 f8             	mov    -0x8(%ebp),%eax
81005bb3:	8b 00                	mov    (%eax),%eax
81005bb5:	39 c2                	cmp    %eax,%edx
81005bb7:	74 c6                	je     81005b7f <strcmp+0x23>
81005bb9:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005bbc:	89 45 08             	mov    %eax,0x8(%ebp)
81005bbf:	8b 45 f8             	mov    -0x8(%ebp),%eax
81005bc2:	89 45 0c             	mov    %eax,0xc(%ebp)
81005bc5:	eb 08                	jmp    81005bcf <strcmp+0x73>
81005bc7:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81005bcb:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81005bcf:	8b 45 08             	mov    0x8(%ebp),%eax
81005bd2:	0f b6 00             	movzbl (%eax),%eax
81005bd5:	84 c0                	test   %al,%al
81005bd7:	74 10                	je     81005be9 <strcmp+0x8d>
81005bd9:	8b 45 08             	mov    0x8(%ebp),%eax
81005bdc:	0f b6 10             	movzbl (%eax),%edx
81005bdf:	8b 45 0c             	mov    0xc(%ebp),%eax
81005be2:	0f b6 00             	movzbl (%eax),%eax
81005be5:	38 c2                	cmp    %al,%dl
81005be7:	74 de                	je     81005bc7 <strcmp+0x6b>
81005be9:	8b 45 08             	mov    0x8(%ebp),%eax
81005bec:	0f b6 00             	movzbl (%eax),%eax
81005bef:	0f b6 d0             	movzbl %al,%edx
81005bf2:	8b 45 0c             	mov    0xc(%ebp),%eax
81005bf5:	0f b6 00             	movzbl (%eax),%eax
81005bf8:	0f b6 c8             	movzbl %al,%ecx
81005bfb:	89 d0                	mov    %edx,%eax
81005bfd:	29 c8                	sub    %ecx,%eax
81005bff:	c9                   	leave  
81005c00:	c3                   	ret    
81005c01:	66 90                	xchg   %ax,%ax
81005c03:	66 90                	xchg   %ax,%ax
81005c05:	66 90                	xchg   %ax,%ax
81005c07:	66 90                	xchg   %ax,%ax
81005c09:	66 90                	xchg   %ax,%ax
81005c0b:	66 90                	xchg   %ax,%ax
81005c0d:	66 90                	xchg   %ax,%ax
81005c0f:	90                   	nop

81005c10 <strlen>:
81005c10:	55                   	push   %ebp
81005c11:	89 e5                	mov    %esp,%ebp
81005c13:	57                   	push   %edi
81005c14:	8b 55 08             	mov    0x8(%ebp),%edx
81005c17:	89 d7                	mov    %edx,%edi
81005c19:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005c1f:	74 25                	je     81005c46 <L5>
81005c21:	8a 0f                	mov    (%edi),%cl
81005c23:	47                   	inc    %edi
81005c24:	84 c9                	test   %cl,%cl
81005c26:	74 56                	je     81005c7e <L15>
81005c28:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005c2e:	74 16                	je     81005c46 <L5>
81005c30:	8a 0f                	mov    (%edi),%cl
81005c32:	47                   	inc    %edi
81005c33:	84 c9                	test   %cl,%cl
81005c35:	74 47                	je     81005c7e <L15>
81005c37:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005c3d:	74 07                	je     81005c46 <L5>
81005c3f:	8a 0f                	mov    (%edi),%cl
81005c41:	47                   	inc    %edi
81005c42:	84 c9                	test   %cl,%cl
81005c44:	74 38                	je     81005c7e <L15>

81005c46 <L5>:
81005c46:	83 ef 04             	sub    $0x4,%edi
81005c49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81005c50 <L10>:
81005c50:	83 c7 04             	add    $0x4,%edi
81005c53:	8b 0f                	mov    (%edi),%ecx
81005c55:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
81005c5b:	f7 d1                	not    %ecx
81005c5d:	21 c8                	and    %ecx,%eax
81005c5f:	a9 80 80 80 80       	test   $0x80808080,%eax
81005c64:	74 ea                	je     81005c50 <L10>
81005c66:	f7 d1                	not    %ecx
81005c68:	47                   	inc    %edi
81005c69:	84 c9                	test   %cl,%cl
81005c6b:	74 11                	je     81005c7e <L15>
81005c6d:	47                   	inc    %edi
81005c6e:	c1 e9 08             	shr    $0x8,%ecx
81005c71:	84 c9                	test   %cl,%cl
81005c73:	74 09                	je     81005c7e <L15>
81005c75:	47                   	inc    %edi
81005c76:	c1 e9 08             	shr    $0x8,%ecx
81005c79:	84 c9                	test   %cl,%cl
81005c7b:	74 01                	je     81005c7e <L15>
81005c7d:	47                   	inc    %edi

81005c7e <L15>:
81005c7e:	29 d7                	sub    %edx,%edi
81005c80:	8d 47 ff             	lea    -0x1(%edi),%eax
81005c83:	8d 65 fc             	lea    -0x4(%ebp),%esp
81005c86:	5f                   	pop    %edi
81005c87:	c9                   	leave  
81005c88:	c3                   	ret    

81005c89 <strtok>:
81005c89:	55                   	push   %ebp
81005c8a:	89 e5                	mov    %esp,%ebp
81005c8c:	83 ec 18             	sub    $0x18,%esp
81005c8f:	8b 55 08             	mov    0x8(%ebp),%edx
81005c92:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81005c95:	a1 44 91 00 81       	mov    0x81009144,%eax
81005c9a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005c9d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005ca0:	83 c0 5c             	add    $0x5c,%eax
81005ca3:	6a 01                	push   $0x1
81005ca5:	50                   	push   %eax
81005ca6:	51                   	push   %ecx
81005ca7:	52                   	push   %edx
81005ca8:	e8 05 00 00 00       	call   81005cb2 <__strtok_r>
81005cad:	83 c4 10             	add    $0x10,%esp
81005cb0:	c9                   	leave  
81005cb1:	c3                   	ret    

81005cb2 <__strtok_r>:
81005cb2:	55                   	push   %ebp
81005cb3:	89 e5                	mov    %esp,%ebp
81005cb5:	57                   	push   %edi
81005cb6:	56                   	push   %esi
81005cb7:	53                   	push   %ebx
81005cb8:	83 ec 10             	sub    $0x10,%esp
81005cbb:	8b 45 08             	mov    0x8(%ebp),%eax
81005cbe:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81005cc1:	85 c0                	test   %eax,%eax
81005cc3:	75 13                	jne    81005cd8 <__strtok_r+0x26>
81005cc5:	8b 45 10             	mov    0x10(%ebp),%eax
81005cc8:	8b 00                	mov    (%eax),%eax
81005cca:	85 c0                	test   %eax,%eax
81005ccc:	75 0a                	jne    81005cd8 <__strtok_r+0x26>
81005cce:	b8 00 00 00 00       	mov    $0x0,%eax
81005cd3:	e9 92 00 00 00       	jmp    81005d6a <__strtok_r+0xb8>
81005cd8:	90                   	nop
81005cd9:	89 c2                	mov    %eax,%edx
81005cdb:	8d 42 01             	lea    0x1(%edx),%eax
81005cde:	0f b6 12             	movzbl (%edx),%edx
81005ce1:	0f be f2             	movsbl %dl,%esi
81005ce4:	89 cf                	mov    %ecx,%edi
81005ce6:	eb 1c                	jmp    81005d04 <__strtok_r+0x52>
81005ce8:	39 de                	cmp    %ebx,%esi
81005cea:	75 18                	jne    81005d04 <__strtok_r+0x52>
81005cec:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005cf0:	74 02                	je     81005cf4 <__strtok_r+0x42>
81005cf2:	eb e5                	jmp    81005cd9 <__strtok_r+0x27>
81005cf4:	8b 55 10             	mov    0x10(%ebp),%edx
81005cf7:	89 02                	mov    %eax,(%edx)
81005cf9:	8d 50 ff             	lea    -0x1(%eax),%edx
81005cfc:	c6 02 00             	movb   $0x0,(%edx)
81005cff:	83 e8 01             	sub    $0x1,%eax
81005d02:	eb 66                	jmp    81005d6a <__strtok_r+0xb8>
81005d04:	89 fa                	mov    %edi,%edx
81005d06:	8d 7a 01             	lea    0x1(%edx),%edi
81005d09:	0f b6 12             	movzbl (%edx),%edx
81005d0c:	0f be da             	movsbl %dl,%ebx
81005d0f:	85 db                	test   %ebx,%ebx
81005d11:	75 d5                	jne    81005ce8 <__strtok_r+0x36>
81005d13:	85 f6                	test   %esi,%esi
81005d15:	75 10                	jne    81005d27 <__strtok_r+0x75>
81005d17:	8b 45 10             	mov    0x10(%ebp),%eax
81005d1a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81005d20:	b8 00 00 00 00       	mov    $0x0,%eax
81005d25:	eb 43                	jmp    81005d6a <__strtok_r+0xb8>
81005d27:	8d 50 ff             	lea    -0x1(%eax),%edx
81005d2a:	89 55 f0             	mov    %edx,-0x10(%ebp)
81005d2d:	89 c2                	mov    %eax,%edx
81005d2f:	8d 42 01             	lea    0x1(%edx),%eax
81005d32:	0f b6 12             	movzbl (%edx),%edx
81005d35:	0f be f2             	movsbl %dl,%esi
81005d38:	89 cf                	mov    %ecx,%edi
81005d3a:	89 fa                	mov    %edi,%edx
81005d3c:	8d 7a 01             	lea    0x1(%edx),%edi
81005d3f:	0f b6 12             	movzbl (%edx),%edx
81005d42:	0f be da             	movsbl %dl,%ebx
81005d45:	39 f3                	cmp    %esi,%ebx
81005d47:	75 1b                	jne    81005d64 <__strtok_r+0xb2>
81005d49:	85 f6                	test   %esi,%esi
81005d4b:	75 07                	jne    81005d54 <__strtok_r+0xa2>
81005d4d:	b8 00 00 00 00       	mov    $0x0,%eax
81005d52:	eb 06                	jmp    81005d5a <__strtok_r+0xa8>
81005d54:	8d 50 ff             	lea    -0x1(%eax),%edx
81005d57:	c6 02 00             	movb   $0x0,(%edx)
81005d5a:	8b 55 10             	mov    0x10(%ebp),%edx
81005d5d:	89 02                	mov    %eax,(%edx)
81005d5f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005d62:	eb 06                	jmp    81005d6a <__strtok_r+0xb8>
81005d64:	85 db                	test   %ebx,%ebx
81005d66:	75 d2                	jne    81005d3a <__strtok_r+0x88>
81005d68:	eb c3                	jmp    81005d2d <__strtok_r+0x7b>
81005d6a:	83 c4 10             	add    $0x10,%esp
81005d6d:	5b                   	pop    %ebx
81005d6e:	5e                   	pop    %esi
81005d6f:	5f                   	pop    %edi
81005d70:	5d                   	pop    %ebp
81005d71:	c3                   	ret    

81005d72 <strtok_r>:
81005d72:	55                   	push   %ebp
81005d73:	89 e5                	mov    %esp,%ebp
81005d75:	8b 45 08             	mov    0x8(%ebp),%eax
81005d78:	8b 55 0c             	mov    0xc(%ebp),%edx
81005d7b:	6a 01                	push   $0x1
81005d7d:	ff 75 10             	push   0x10(%ebp)
81005d80:	52                   	push   %edx
81005d81:	50                   	push   %eax
81005d82:	e8 2b ff ff ff       	call   81005cb2 <__strtok_r>
81005d87:	83 c4 10             	add    $0x10,%esp
81005d8a:	c9                   	leave  
81005d8b:	c3                   	ret    

81005d8c <__locale_ctype_ptr_l>:
81005d8c:	55                   	push   %ebp
81005d8d:	89 e5                	mov    %esp,%ebp
81005d8f:	b8 e0 8b 00 81       	mov    $0x81008be0,%eax
81005d94:	5d                   	pop    %ebp
81005d95:	c3                   	ret    

81005d96 <__get_global_locale>:
81005d96:	55                   	push   %ebp
81005d97:	89 e5                	mov    %esp,%ebp
81005d99:	b8 80 95 00 81       	mov    $0x81009580,%eax
81005d9e:	5d                   	pop    %ebp
81005d9f:	c3                   	ret    

81005da0 <__get_current_locale>:
81005da0:	55                   	push   %ebp
81005da1:	89 e5                	mov    %esp,%ebp
81005da3:	e8 ee ff ff ff       	call   81005d96 <__get_global_locale>
81005da8:	5d                   	pop    %ebp
81005da9:	c3                   	ret    

81005daa <_strtol_l>:
81005daa:	55                   	push   %ebp
81005dab:	89 e5                	mov    %esp,%ebp
81005dad:	57                   	push   %edi
81005dae:	56                   	push   %esi
81005daf:	53                   	push   %ebx
81005db0:	83 ec 1c             	sub    $0x1c,%esp
81005db3:	8b 75 0c             	mov    0xc(%ebp),%esi
81005db6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81005dbd:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005dc1:	78 0c                	js     81005dcf <_strtol_l+0x25>
81005dc3:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81005dc7:	74 06                	je     81005dcf <_strtol_l+0x25>
81005dc9:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
81005dcd:	7e 15                	jle    81005de4 <_strtol_l+0x3a>
81005dcf:	e8 44 06 00 00       	call   81006418 <__errno>
81005dd4:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81005dda:	b8 00 00 00 00       	mov    $0x0,%eax
81005ddf:	e9 90 01 00 00       	jmp    81005f74 <_strtol_l+0x1ca>
81005de4:	89 f0                	mov    %esi,%eax
81005de6:	8d 70 01             	lea    0x1(%eax),%esi
81005de9:	0f b6 00             	movzbl (%eax),%eax
81005dec:	0f b6 d8             	movzbl %al,%ebx
81005def:	83 ec 0c             	sub    $0xc,%esp
81005df2:	ff 75 18             	push   0x18(%ebp)
81005df5:	e8 92 ff ff ff       	call   81005d8c <__locale_ctype_ptr_l>
81005dfa:	83 c4 10             	add    $0x10,%esp
81005dfd:	89 da                	mov    %ebx,%edx
81005dff:	83 c2 01             	add    $0x1,%edx
81005e02:	01 d0                	add    %edx,%eax
81005e04:	0f b6 00             	movzbl (%eax),%eax
81005e07:	0f be c0             	movsbl %al,%eax
81005e0a:	83 e0 08             	and    $0x8,%eax
81005e0d:	85 c0                	test   %eax,%eax
81005e0f:	75 d3                	jne    81005de4 <_strtol_l+0x3a>
81005e11:	83 fb 2d             	cmp    $0x2d,%ebx
81005e14:	75 14                	jne    81005e2a <_strtol_l+0x80>
81005e16:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81005e1d:	89 f0                	mov    %esi,%eax
81005e1f:	8d 70 01             	lea    0x1(%eax),%esi
81005e22:	0f b6 00             	movzbl (%eax),%eax
81005e25:	0f b6 d8             	movzbl %al,%ebx
81005e28:	eb 10                	jmp    81005e3a <_strtol_l+0x90>
81005e2a:	83 fb 2b             	cmp    $0x2b,%ebx
81005e2d:	75 0b                	jne    81005e3a <_strtol_l+0x90>
81005e2f:	89 f0                	mov    %esi,%eax
81005e31:	8d 70 01             	lea    0x1(%eax),%esi
81005e34:	0f b6 00             	movzbl (%eax),%eax
81005e37:	0f b6 d8             	movzbl %al,%ebx
81005e3a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005e3e:	74 06                	je     81005e46 <_strtol_l+0x9c>
81005e40:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
81005e44:	75 26                	jne    81005e6c <_strtol_l+0xc2>
81005e46:	83 fb 30             	cmp    $0x30,%ebx
81005e49:	75 21                	jne    81005e6c <_strtol_l+0xc2>
81005e4b:	0f b6 06             	movzbl (%esi),%eax
81005e4e:	3c 78                	cmp    $0x78,%al
81005e50:	74 07                	je     81005e59 <_strtol_l+0xaf>
81005e52:	0f b6 06             	movzbl (%esi),%eax
81005e55:	3c 58                	cmp    $0x58,%al
81005e57:	75 13                	jne    81005e6c <_strtol_l+0xc2>
81005e59:	8d 46 01             	lea    0x1(%esi),%eax
81005e5c:	0f b6 00             	movzbl (%eax),%eax
81005e5f:	0f b6 d8             	movzbl %al,%ebx
81005e62:	83 c6 02             	add    $0x2,%esi
81005e65:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
81005e6c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005e70:	75 14                	jne    81005e86 <_strtol_l+0xdc>
81005e72:	83 fb 30             	cmp    $0x30,%ebx
81005e75:	75 07                	jne    81005e7e <_strtol_l+0xd4>
81005e77:	b8 08 00 00 00       	mov    $0x8,%eax
81005e7c:	eb 05                	jmp    81005e83 <_strtol_l+0xd9>
81005e7e:	b8 0a 00 00 00       	mov    $0xa,%eax
81005e83:	89 45 14             	mov    %eax,0x14(%ebp)
81005e86:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005e8a:	74 07                	je     81005e93 <_strtol_l+0xe9>
81005e8c:	b8 00 00 00 80       	mov    $0x80000000,%eax
81005e91:	eb 05                	jmp    81005e98 <_strtol_l+0xee>
81005e93:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81005e98:	89 c7                	mov    %eax,%edi
81005e9a:	8b 4d 14             	mov    0x14(%ebp),%ecx
81005e9d:	89 f8                	mov    %edi,%eax
81005e9f:	ba 00 00 00 00       	mov    $0x0,%edx
81005ea4:	f7 f1                	div    %ecx
81005ea6:	89 d0                	mov    %edx,%eax
81005ea8:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005eab:	8b 4d 14             	mov    0x14(%ebp),%ecx
81005eae:	89 f8                	mov    %edi,%eax
81005eb0:	ba 00 00 00 00       	mov    $0x0,%edx
81005eb5:	f7 f1                	div    %ecx
81005eb7:	89 c2                	mov    %eax,%edx
81005eb9:	bf 00 00 00 00       	mov    $0x0,%edi
81005ebe:	b9 00 00 00 00       	mov    $0x0,%ecx
81005ec3:	83 fb 2f             	cmp    $0x2f,%ebx
81005ec6:	7e 0a                	jle    81005ed2 <_strtol_l+0x128>
81005ec8:	83 fb 39             	cmp    $0x39,%ebx
81005ecb:	7f 05                	jg     81005ed2 <_strtol_l+0x128>
81005ecd:	83 eb 30             	sub    $0x30,%ebx
81005ed0:	eb 1c                	jmp    81005eee <_strtol_l+0x144>
81005ed2:	83 fb 40             	cmp    $0x40,%ebx
81005ed5:	7e 0a                	jle    81005ee1 <_strtol_l+0x137>
81005ed7:	83 fb 5a             	cmp    $0x5a,%ebx
81005eda:	7f 05                	jg     81005ee1 <_strtol_l+0x137>
81005edc:	83 eb 37             	sub    $0x37,%ebx
81005edf:	eb 0d                	jmp    81005eee <_strtol_l+0x144>
81005ee1:	83 fb 60             	cmp    $0x60,%ebx
81005ee4:	7e 46                	jle    81005f2c <_strtol_l+0x182>
81005ee6:	83 fb 7a             	cmp    $0x7a,%ebx
81005ee9:	7f 41                	jg     81005f2c <_strtol_l+0x182>
81005eeb:	83 eb 57             	sub    $0x57,%ebx
81005eee:	3b 5d 14             	cmp    0x14(%ebp),%ebx
81005ef1:	7d 38                	jge    81005f2b <_strtol_l+0x181>
81005ef3:	89 c8                	mov    %ecx,%eax
81005ef5:	85 c0                	test   %eax,%eax
81005ef7:	78 0f                	js     81005f08 <_strtol_l+0x15e>
81005ef9:	89 d0                	mov    %edx,%eax
81005efb:	39 c7                	cmp    %eax,%edi
81005efd:	77 09                	ja     81005f08 <_strtol_l+0x15e>
81005eff:	39 c7                	cmp    %eax,%edi
81005f01:	75 0c                	jne    81005f0f <_strtol_l+0x165>
81005f03:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
81005f06:	7e 07                	jle    81005f0f <_strtol_l+0x165>
81005f08:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
81005f0d:	eb 0f                	jmp    81005f1e <_strtol_l+0x174>
81005f0f:	b9 01 00 00 00       	mov    $0x1,%ecx
81005f14:	8b 45 14             	mov    0x14(%ebp),%eax
81005f17:	0f af f8             	imul   %eax,%edi
81005f1a:	89 d8                	mov    %ebx,%eax
81005f1c:	01 c7                	add    %eax,%edi
81005f1e:	89 f0                	mov    %esi,%eax
81005f20:	8d 70 01             	lea    0x1(%eax),%esi
81005f23:	0f b6 00             	movzbl (%eax),%eax
81005f26:	0f b6 d8             	movzbl %al,%ebx
81005f29:	eb 98                	jmp    81005ec3 <_strtol_l+0x119>
81005f2b:	90                   	nop
81005f2c:	89 c8                	mov    %ecx,%eax
81005f2e:	85 c0                	test   %eax,%eax
81005f30:	79 1f                	jns    81005f51 <_strtol_l+0x1a7>
81005f32:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005f36:	74 07                	je     81005f3f <_strtol_l+0x195>
81005f38:	b8 00 00 00 80       	mov    $0x80000000,%eax
81005f3d:	eb 05                	jmp    81005f44 <_strtol_l+0x19a>
81005f3f:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81005f44:	89 c7                	mov    %eax,%edi
81005f46:	8b 45 08             	mov    0x8(%ebp),%eax
81005f49:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
81005f4f:	eb 08                	jmp    81005f59 <_strtol_l+0x1af>
81005f51:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005f55:	74 02                	je     81005f59 <_strtol_l+0x1af>
81005f57:	f7 df                	neg    %edi
81005f59:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81005f5d:	74 13                	je     81005f72 <_strtol_l+0x1c8>
81005f5f:	89 c8                	mov    %ecx,%eax
81005f61:	85 c0                	test   %eax,%eax
81005f63:	74 05                	je     81005f6a <_strtol_l+0x1c0>
81005f65:	8d 46 ff             	lea    -0x1(%esi),%eax
81005f68:	eb 03                	jmp    81005f6d <_strtol_l+0x1c3>
81005f6a:	8b 45 0c             	mov    0xc(%ebp),%eax
81005f6d:	8b 55 10             	mov    0x10(%ebp),%edx
81005f70:	89 02                	mov    %eax,(%edx)
81005f72:	89 f8                	mov    %edi,%eax
81005f74:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005f77:	5b                   	pop    %ebx
81005f78:	5e                   	pop    %esi
81005f79:	5f                   	pop    %edi
81005f7a:	5d                   	pop    %ebp
81005f7b:	c3                   	ret    

81005f7c <_strtol_r>:
81005f7c:	55                   	push   %ebp
81005f7d:	89 e5                	mov    %esp,%ebp
81005f7f:	83 ec 08             	sub    $0x8,%esp
81005f82:	e8 19 fe ff ff       	call   81005da0 <__get_current_locale>
81005f87:	83 ec 0c             	sub    $0xc,%esp
81005f8a:	50                   	push   %eax
81005f8b:	ff 75 14             	push   0x14(%ebp)
81005f8e:	ff 75 10             	push   0x10(%ebp)
81005f91:	ff 75 0c             	push   0xc(%ebp)
81005f94:	ff 75 08             	push   0x8(%ebp)
81005f97:	e8 0e fe ff ff       	call   81005daa <_strtol_l>
81005f9c:	83 c4 20             	add    $0x20,%esp
81005f9f:	c9                   	leave  
81005fa0:	c3                   	ret    

81005fa1 <strtol_l>:
81005fa1:	55                   	push   %ebp
81005fa2:	89 e5                	mov    %esp,%ebp
81005fa4:	83 ec 08             	sub    $0x8,%esp
81005fa7:	a1 44 91 00 81       	mov    0x81009144,%eax
81005fac:	83 ec 0c             	sub    $0xc,%esp
81005faf:	ff 75 14             	push   0x14(%ebp)
81005fb2:	ff 75 10             	push   0x10(%ebp)
81005fb5:	ff 75 0c             	push   0xc(%ebp)
81005fb8:	ff 75 08             	push   0x8(%ebp)
81005fbb:	50                   	push   %eax
81005fbc:	e8 e9 fd ff ff       	call   81005daa <_strtol_l>
81005fc1:	83 c4 20             	add    $0x20,%esp
81005fc4:	c9                   	leave  
81005fc5:	c3                   	ret    

81005fc6 <strtol>:
81005fc6:	55                   	push   %ebp
81005fc7:	89 e5                	mov    %esp,%ebp
81005fc9:	83 ec 08             	sub    $0x8,%esp
81005fcc:	e8 cf fd ff ff       	call   81005da0 <__get_current_locale>
81005fd1:	8b 15 44 91 00 81    	mov    0x81009144,%edx
81005fd7:	83 ec 0c             	sub    $0xc,%esp
81005fda:	50                   	push   %eax
81005fdb:	ff 75 10             	push   0x10(%ebp)
81005fde:	ff 75 0c             	push   0xc(%ebp)
81005fe1:	ff 75 08             	push   0x8(%ebp)
81005fe4:	52                   	push   %edx
81005fe5:	e8 c0 fd ff ff       	call   81005daa <_strtol_l>
81005fea:	83 c4 20             	add    $0x20,%esp
81005fed:	c9                   	leave  
81005fee:	c3                   	ret    

81005fef <__swbuf_r>:
81005fef:	55                   	push   %ebp
81005ff0:	89 e5                	mov    %esp,%ebp
81005ff2:	57                   	push   %edi
81005ff3:	56                   	push   %esi
81005ff4:	53                   	push   %ebx
81005ff5:	83 ec 1c             	sub    $0x1c,%esp
81005ff8:	8b 7d 0c             	mov    0xc(%ebp),%edi
81005ffb:	8b 5d 10             	mov    0x10(%ebp),%ebx
81005ffe:	8b 45 08             	mov    0x8(%ebp),%eax
81006001:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006004:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006008:	74 18                	je     81006022 <__swbuf_r+0x33>
8100600a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100600d:	8b 40 38             	mov    0x38(%eax),%eax
81006010:	85 c0                	test   %eax,%eax
81006012:	75 0e                	jne    81006022 <__swbuf_r+0x33>
81006014:	83 ec 0c             	sub    $0xc,%esp
81006017:	ff 75 e4             	push   -0x1c(%ebp)
8100601a:	e8 d5 b7 ff ff       	call   810017f4 <__sinit>
8100601f:	83 c4 10             	add    $0x10,%esp
81006022:	8b 43 18             	mov    0x18(%ebx),%eax
81006025:	89 43 08             	mov    %eax,0x8(%ebx)
81006028:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100602c:	98                   	cwtl   
8100602d:	83 e0 08             	and    $0x8,%eax
81006030:	85 c0                	test   %eax,%eax
81006032:	74 07                	je     8100603b <__swbuf_r+0x4c>
81006034:	8b 43 10             	mov    0x10(%ebx),%eax
81006037:	85 c0                	test   %eax,%eax
81006039:	75 1d                	jne    81006058 <__swbuf_r+0x69>
8100603b:	83 ec 08             	sub    $0x8,%esp
8100603e:	53                   	push   %ebx
8100603f:	ff 75 08             	push   0x8(%ebp)
81006042:	e8 21 01 00 00       	call   81006168 <__swsetup_r>
81006047:	83 c4 10             	add    $0x10,%esp
8100604a:	85 c0                	test   %eax,%eax
8100604c:	74 0a                	je     81006058 <__swbuf_r+0x69>
8100604e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006053:	e9 a1 00 00 00       	jmp    810060f9 <__swbuf_r+0x10a>
81006058:	89 f8                	mov    %edi,%eax
8100605a:	0f b6 f8             	movzbl %al,%edi
8100605d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006061:	98                   	cwtl   
81006062:	25 00 20 00 00       	and    $0x2000,%eax
81006067:	85 c0                	test   %eax,%eax
81006069:	75 14                	jne    8100607f <__swbuf_r+0x90>
8100606b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100606f:	80 cc 20             	or     $0x20,%ah
81006072:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006076:	8b 43 64             	mov    0x64(%ebx),%eax
81006079:	80 e4 df             	and    $0xdf,%ah
8100607c:	89 43 64             	mov    %eax,0x64(%ebx)
8100607f:	8b 03                	mov    (%ebx),%eax
81006081:	8b 53 10             	mov    0x10(%ebx),%edx
81006084:	29 d0                	sub    %edx,%eax
81006086:	89 c6                	mov    %eax,%esi
81006088:	8b 43 14             	mov    0x14(%ebx),%eax
8100608b:	39 c6                	cmp    %eax,%esi
8100608d:	7c 1f                	jl     810060ae <__swbuf_r+0xbf>
8100608f:	83 ec 08             	sub    $0x8,%esp
81006092:	53                   	push   %ebx
81006093:	ff 75 08             	push   0x8(%ebp)
81006096:	e8 56 b2 ff ff       	call   810012f1 <_fflush_r>
8100609b:	83 c4 10             	add    $0x10,%esp
8100609e:	85 c0                	test   %eax,%eax
810060a0:	74 07                	je     810060a9 <__swbuf_r+0xba>
810060a2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810060a7:	eb 50                	jmp    810060f9 <__swbuf_r+0x10a>
810060a9:	be 00 00 00 00       	mov    $0x0,%esi
810060ae:	8b 43 08             	mov    0x8(%ebx),%eax
810060b1:	83 e8 01             	sub    $0x1,%eax
810060b4:	89 43 08             	mov    %eax,0x8(%ebx)
810060b7:	8b 03                	mov    (%ebx),%eax
810060b9:	8d 50 01             	lea    0x1(%eax),%edx
810060bc:	89 13                	mov    %edx,(%ebx)
810060be:	89 fa                	mov    %edi,%edx
810060c0:	88 10                	mov    %dl,(%eax)
810060c2:	83 c6 01             	add    $0x1,%esi
810060c5:	8b 43 14             	mov    0x14(%ebx),%eax
810060c8:	39 c6                	cmp    %eax,%esi
810060ca:	74 11                	je     810060dd <__swbuf_r+0xee>
810060cc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810060d0:	98                   	cwtl   
810060d1:	83 e0 01             	and    $0x1,%eax
810060d4:	85 c0                	test   %eax,%eax
810060d6:	74 1f                	je     810060f7 <__swbuf_r+0x108>
810060d8:	83 ff 0a             	cmp    $0xa,%edi
810060db:	75 1a                	jne    810060f7 <__swbuf_r+0x108>
810060dd:	83 ec 08             	sub    $0x8,%esp
810060e0:	53                   	push   %ebx
810060e1:	ff 75 08             	push   0x8(%ebp)
810060e4:	e8 08 b2 ff ff       	call   810012f1 <_fflush_r>
810060e9:	83 c4 10             	add    $0x10,%esp
810060ec:	85 c0                	test   %eax,%eax
810060ee:	74 07                	je     810060f7 <__swbuf_r+0x108>
810060f0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810060f5:	eb 02                	jmp    810060f9 <__swbuf_r+0x10a>
810060f7:	89 f8                	mov    %edi,%eax
810060f9:	8d 65 f4             	lea    -0xc(%ebp),%esp
810060fc:	5b                   	pop    %ebx
810060fd:	5e                   	pop    %esi
810060fe:	5f                   	pop    %edi
810060ff:	5d                   	pop    %ebp
81006100:	c3                   	ret    

81006101 <__swbuf>:
81006101:	55                   	push   %ebp
81006102:	89 e5                	mov    %esp,%ebp
81006104:	83 ec 08             	sub    $0x8,%esp
81006107:	8b 55 08             	mov    0x8(%ebp),%edx
8100610a:	8b 4d 0c             	mov    0xc(%ebp),%ecx
8100610d:	a1 44 91 00 81       	mov    0x81009144,%eax
81006112:	83 ec 04             	sub    $0x4,%esp
81006115:	51                   	push   %ecx
81006116:	52                   	push   %edx
81006117:	50                   	push   %eax
81006118:	e8 d2 fe ff ff       	call   81005fef <__swbuf_r>
8100611d:	83 c4 10             	add    $0x10,%esp
81006120:	c9                   	leave  
81006121:	c3                   	ret    

81006122 <_write_r>:
81006122:	55                   	push   %ebp
81006123:	89 e5                	mov    %esp,%ebp
81006125:	83 ec 18             	sub    $0x18,%esp
81006128:	c7 05 8c 9e 00 81 00 	movl   $0x0,0x81009e8c
8100612f:	00 00 00 
81006132:	83 ec 04             	sub    $0x4,%esp
81006135:	ff 75 14             	push   0x14(%ebp)
81006138:	ff 75 10             	push   0x10(%ebp)
8100613b:	ff 75 0c             	push   0xc(%ebp)
8100613e:	e8 67 ab ff ff       	call   81000caa <write>
81006143:	83 c4 10             	add    $0x10,%esp
81006146:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006149:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100614d:	75 14                	jne    81006163 <_write_r+0x41>
8100614f:	a1 8c 9e 00 81       	mov    0x81009e8c,%eax
81006154:	85 c0                	test   %eax,%eax
81006156:	74 0b                	je     81006163 <_write_r+0x41>
81006158:	8b 15 8c 9e 00 81    	mov    0x81009e8c,%edx
8100615e:	8b 45 08             	mov    0x8(%ebp),%eax
81006161:	89 10                	mov    %edx,(%eax)
81006163:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006166:	c9                   	leave  
81006167:	c3                   	ret    

81006168 <__swsetup_r>:
81006168:	55                   	push   %ebp
81006169:	89 e5                	mov    %esp,%ebp
8100616b:	53                   	push   %ebx
8100616c:	83 ec 14             	sub    $0x14,%esp
8100616f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81006172:	a1 44 91 00 81       	mov    0x81009144,%eax
81006177:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100617a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100617e:	74 18                	je     81006198 <__swsetup_r+0x30>
81006180:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006183:	8b 40 38             	mov    0x38(%eax),%eax
81006186:	85 c0                	test   %eax,%eax
81006188:	75 0e                	jne    81006198 <__swsetup_r+0x30>
8100618a:	83 ec 0c             	sub    $0xc,%esp
8100618d:	ff 75 f4             	push   -0xc(%ebp)
81006190:	e8 5f b6 ff ff       	call   810017f4 <__sinit>
81006195:	83 c4 10             	add    $0x10,%esp
81006198:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100619c:	98                   	cwtl   
8100619d:	83 e0 08             	and    $0x8,%eax
810061a0:	85 c0                	test   %eax,%eax
810061a2:	0f 85 82 00 00 00    	jne    8100622a <__swsetup_r+0xc2>
810061a8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810061ac:	98                   	cwtl   
810061ad:	83 e0 10             	and    $0x10,%eax
810061b0:	85 c0                	test   %eax,%eax
810061b2:	75 1e                	jne    810061d2 <__swsetup_r+0x6a>
810061b4:	8b 45 08             	mov    0x8(%ebp),%eax
810061b7:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
810061bd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810061c1:	83 c8 40             	or     $0x40,%eax
810061c4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810061c8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810061cd:	e9 ec 00 00 00       	jmp    810062be <__swsetup_r+0x156>
810061d2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810061d6:	98                   	cwtl   
810061d7:	83 e0 04             	and    $0x4,%eax
810061da:	85 c0                	test   %eax,%eax
810061dc:	74 41                	je     8100621f <__swsetup_r+0xb7>
810061de:	8b 43 30             	mov    0x30(%ebx),%eax
810061e1:	85 c0                	test   %eax,%eax
810061e3:	74 23                	je     81006208 <__swsetup_r+0xa0>
810061e5:	8b 53 30             	mov    0x30(%ebx),%edx
810061e8:	8d 43 40             	lea    0x40(%ebx),%eax
810061eb:	39 c2                	cmp    %eax,%edx
810061ed:	74 12                	je     81006201 <__swsetup_r+0x99>
810061ef:	8b 43 30             	mov    0x30(%ebx),%eax
810061f2:	83 ec 08             	sub    $0x8,%esp
810061f5:	50                   	push   %eax
810061f6:	ff 75 08             	push   0x8(%ebp)
810061f9:	e8 e6 ba ff ff       	call   81001ce4 <_free_r>
810061fe:	83 c4 10             	add    $0x10,%esp
81006201:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81006208:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100620c:	83 e0 db             	and    $0xffffffdb,%eax
8100620f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006213:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100621a:	8b 43 10             	mov    0x10(%ebx),%eax
8100621d:	89 03                	mov    %eax,(%ebx)
8100621f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006223:	83 c8 08             	or     $0x8,%eax
81006226:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100622a:	8b 43 10             	mov    0x10(%ebx),%eax
8100622d:	85 c0                	test   %eax,%eax
8100622f:	75 2b                	jne    8100625c <__swsetup_r+0xf4>
81006231:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006235:	98                   	cwtl   
81006236:	25 00 02 00 00       	and    $0x200,%eax
8100623b:	85 c0                	test   %eax,%eax
8100623d:	74 0e                	je     8100624d <__swsetup_r+0xe5>
8100623f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006243:	98                   	cwtl   
81006244:	25 80 00 00 00       	and    $0x80,%eax
81006249:	85 c0                	test   %eax,%eax
8100624b:	74 0f                	je     8100625c <__swsetup_r+0xf4>
8100624d:	83 ec 08             	sub    $0x8,%esp
81006250:	53                   	push   %ebx
81006251:	ff 75 08             	push   0x8(%ebp)
81006254:	e8 02 d5 ff ff       	call   8100375b <__smakebuf_r>
81006259:	83 c4 10             	add    $0x10,%esp
8100625c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006260:	98                   	cwtl   
81006261:	83 e0 01             	and    $0x1,%eax
81006264:	85 c0                	test   %eax,%eax
81006266:	74 11                	je     81006279 <__swsetup_r+0x111>
81006268:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8100626f:	8b 43 14             	mov    0x14(%ebx),%eax
81006272:	f7 d8                	neg    %eax
81006274:	89 43 18             	mov    %eax,0x18(%ebx)
81006277:	eb 19                	jmp    81006292 <__swsetup_r+0x12a>
81006279:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100627d:	98                   	cwtl   
8100627e:	83 e0 02             	and    $0x2,%eax
81006281:	85 c0                	test   %eax,%eax
81006283:	75 05                	jne    8100628a <__swsetup_r+0x122>
81006285:	8b 43 14             	mov    0x14(%ebx),%eax
81006288:	eb 05                	jmp    8100628f <__swsetup_r+0x127>
8100628a:	b8 00 00 00 00       	mov    $0x0,%eax
8100628f:	89 43 08             	mov    %eax,0x8(%ebx)
81006292:	8b 43 10             	mov    0x10(%ebx),%eax
81006295:	85 c0                	test   %eax,%eax
81006297:	75 20                	jne    810062b9 <__swsetup_r+0x151>
81006299:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100629d:	98                   	cwtl   
8100629e:	25 80 00 00 00       	and    $0x80,%eax
810062a3:	85 c0                	test   %eax,%eax
810062a5:	74 12                	je     810062b9 <__swsetup_r+0x151>
810062a7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810062ab:	83 c8 40             	or     $0x40,%eax
810062ae:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810062b2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810062b7:	eb 05                	jmp    810062be <__swsetup_r+0x156>
810062b9:	b8 00 00 00 00       	mov    $0x0,%eax
810062be:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810062c1:	c9                   	leave  
810062c2:	c3                   	ret    

810062c3 <__call_exitprocs>:
810062c3:	55                   	push   %ebp
810062c4:	89 e5                	mov    %esp,%ebp
810062c6:	57                   	push   %edi
810062c7:	56                   	push   %esi
810062c8:	53                   	push   %ebx
810062c9:	83 ec 1c             	sub    $0x1c,%esp
810062cc:	a1 90 89 00 81       	mov    0x81008990,%eax
810062d1:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
810062d7:	a1 90 89 00 81       	mov    0x81008990,%eax
810062dc:	05 48 01 00 00       	add    $0x148,%eax
810062e1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810062e4:	90                   	nop
810062e5:	85 db                	test   %ebx,%ebx
810062e7:	0f 84 e1 00 00 00    	je     810063ce <__call_exitprocs+0x10b>
810062ed:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
810062f3:	8b 43 04             	mov    0x4(%ebx),%eax
810062f6:	8d 70 ff             	lea    -0x1(%eax),%esi
810062f9:	e9 c6 00 00 00       	jmp    810063c4 <__call_exitprocs+0x101>
810062fe:	b8 01 00 00 00       	mov    $0x1,%eax
81006303:	89 f1                	mov    %esi,%ecx
81006305:	d3 e0                	shl    %cl,%eax
81006307:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100630a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100630e:	74 17                	je     81006327 <__call_exitprocs+0x64>
81006310:	85 ff                	test   %edi,%edi
81006312:	0f 84 a5 00 00 00    	je     810063bd <__call_exitprocs+0xfa>
81006318:	8d 46 20             	lea    0x20(%esi),%eax
8100631b:	8b 04 87             	mov    (%edi,%eax,4),%eax
8100631e:	39 45 0c             	cmp    %eax,0xc(%ebp)
81006321:	0f 85 96 00 00 00    	jne    810063bd <__call_exitprocs+0xfa>
81006327:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
8100632b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100632e:	8b 43 04             	mov    0x4(%ebx),%eax
81006331:	83 e8 01             	sub    $0x1,%eax
81006334:	39 c6                	cmp    %eax,%esi
81006336:	75 0b                	jne    81006343 <__call_exitprocs+0x80>
81006338:	8b 43 04             	mov    0x4(%ebx),%eax
8100633b:	83 e8 01             	sub    $0x1,%eax
8100633e:	89 43 04             	mov    %eax,0x4(%ebx)
81006341:	eb 08                	jmp    8100634b <__call_exitprocs+0x88>
81006343:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
8100634a:	00 
8100634b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100634f:	74 6f                	je     810063c0 <__call_exitprocs+0xfd>
81006351:	8b 43 04             	mov    0x4(%ebx),%eax
81006354:	89 45 d8             	mov    %eax,-0x28(%ebp)
81006357:	85 ff                	test   %edi,%edi
81006359:	74 0f                	je     8100636a <__call_exitprocs+0xa7>
8100635b:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
81006361:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006364:	21 d0                	and    %edx,%eax
81006366:	85 c0                	test   %eax,%eax
81006368:	75 07                	jne    81006371 <__call_exitprocs+0xae>
8100636a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100636d:	ff d0                	call   *%eax
8100636f:	eb 32                	jmp    810063a3 <__call_exitprocs+0xe0>
81006371:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
81006377:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100637a:	21 d0                	and    %edx,%eax
8100637c:	85 c0                	test   %eax,%eax
8100637e:	75 14                	jne    81006394 <__call_exitprocs+0xd1>
81006380:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81006383:	83 ec 08             	sub    $0x8,%esp
81006386:	50                   	push   %eax
81006387:	ff 75 08             	push   0x8(%ebp)
8100638a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100638d:	ff d0                	call   *%eax
8100638f:	83 c4 10             	add    $0x10,%esp
81006392:	eb 0f                	jmp    810063a3 <__call_exitprocs+0xe0>
81006394:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81006397:	83 ec 0c             	sub    $0xc,%esp
8100639a:	50                   	push   %eax
8100639b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100639e:	ff d0                	call   *%eax
810063a0:	83 c4 10             	add    $0x10,%esp
810063a3:	8b 43 04             	mov    0x4(%ebx),%eax
810063a6:	39 45 d8             	cmp    %eax,-0x28(%ebp)
810063a9:	0f 85 1d ff ff ff    	jne    810062cc <__call_exitprocs+0x9>
810063af:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810063b2:	8b 00                	mov    (%eax),%eax
810063b4:	39 c3                	cmp    %eax,%ebx
810063b6:	74 09                	je     810063c1 <__call_exitprocs+0xfe>
810063b8:	e9 0f ff ff ff       	jmp    810062cc <__call_exitprocs+0x9>
810063bd:	90                   	nop
810063be:	eb 01                	jmp    810063c1 <__call_exitprocs+0xfe>
810063c0:	90                   	nop
810063c1:	83 ee 01             	sub    $0x1,%esi
810063c4:	85 f6                	test   %esi,%esi
810063c6:	0f 89 32 ff ff ff    	jns    810062fe <__call_exitprocs+0x3b>
810063cc:	eb 01                	jmp    810063cf <__call_exitprocs+0x10c>
810063ce:	90                   	nop
810063cf:	90                   	nop
810063d0:	8d 65 f4             	lea    -0xc(%ebp),%esp
810063d3:	5b                   	pop    %ebx
810063d4:	5e                   	pop    %esi
810063d5:	5f                   	pop    %edi
810063d6:	5d                   	pop    %ebp
810063d7:	c3                   	ret    

810063d8 <_close_r>:
810063d8:	55                   	push   %ebp
810063d9:	89 e5                	mov    %esp,%ebp
810063db:	83 ec 18             	sub    $0x18,%esp
810063de:	c7 05 8c 9e 00 81 00 	movl   $0x0,0x81009e8c
810063e5:	00 00 00 
810063e8:	83 ec 0c             	sub    $0xc,%esp
810063eb:	ff 75 0c             	push   0xc(%ebp)
810063ee:	e8 e4 a8 ff ff       	call   81000cd7 <close>
810063f3:	83 c4 10             	add    $0x10,%esp
810063f6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810063f9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810063fd:	75 14                	jne    81006413 <_close_r+0x3b>
810063ff:	a1 8c 9e 00 81       	mov    0x81009e8c,%eax
81006404:	85 c0                	test   %eax,%eax
81006406:	74 0b                	je     81006413 <_close_r+0x3b>
81006408:	8b 15 8c 9e 00 81    	mov    0x81009e8c,%edx
8100640e:	8b 45 08             	mov    0x8(%ebp),%eax
81006411:	89 10                	mov    %edx,(%eax)
81006413:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006416:	c9                   	leave  
81006417:	c3                   	ret    

81006418 <__errno>:
81006418:	55                   	push   %ebp
81006419:	89 e5                	mov    %esp,%ebp
8100641b:	a1 44 91 00 81       	mov    0x81009144,%eax
81006420:	5d                   	pop    %ebp
81006421:	c3                   	ret    

81006422 <__sflags>:
81006422:	55                   	push   %ebp
81006423:	89 e5                	mov    %esp,%ebp
81006425:	57                   	push   %edi
81006426:	56                   	push   %esi
81006427:	53                   	push   %ebx
81006428:	8b 55 0c             	mov    0xc(%ebp),%edx
8100642b:	0f b6 02             	movzbl (%edx),%eax
8100642e:	0f be c0             	movsbl %al,%eax
81006431:	83 f8 77             	cmp    $0x77,%eax
81006434:	74 20                	je     81006456 <__sflags+0x34>
81006436:	83 f8 77             	cmp    $0x77,%eax
81006439:	7f 3d                	jg     81006478 <__sflags+0x56>
8100643b:	83 f8 61             	cmp    $0x61,%eax
8100643e:	74 27                	je     81006467 <__sflags+0x45>
81006440:	83 f8 72             	cmp    $0x72,%eax
81006443:	75 33                	jne    81006478 <__sflags+0x56>
81006445:	be 04 00 00 00       	mov    $0x4,%esi
8100644a:	bb 00 00 00 00       	mov    $0x0,%ebx
8100644f:	bf 00 00 00 00       	mov    $0x0,%edi
81006454:	eb 32                	jmp    81006488 <__sflags+0x66>
81006456:	be 08 00 00 00       	mov    $0x8,%esi
8100645b:	bb 01 00 00 00       	mov    $0x1,%ebx
81006460:	bf 00 06 00 00       	mov    $0x600,%edi
81006465:	eb 21                	jmp    81006488 <__sflags+0x66>
81006467:	be 08 01 00 00       	mov    $0x108,%esi
8100646c:	bb 01 00 00 00       	mov    $0x1,%ebx
81006471:	bf 08 02 00 00       	mov    $0x208,%edi
81006476:	eb 10                	jmp    81006488 <__sflags+0x66>
81006478:	8b 45 08             	mov    0x8(%ebp),%eax
8100647b:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81006481:	b8 00 00 00 00       	mov    $0x0,%eax
81006486:	eb 4f                	jmp    810064d7 <__sflags+0xb5>
81006488:	eb 38                	jmp    810064c2 <__sflags+0xa0>
8100648a:	0f b6 02             	movzbl (%edx),%eax
8100648d:	0f be c0             	movsbl %al,%eax
81006490:	83 f8 78             	cmp    $0x78,%eax
81006493:	74 27                	je     810064bc <__sflags+0x9a>
81006495:	83 f8 78             	cmp    $0x78,%eax
81006498:	7f 27                	jg     810064c1 <__sflags+0x9f>
8100649a:	83 f8 2b             	cmp    $0x2b,%eax
8100649d:	74 07                	je     810064a6 <__sflags+0x84>
8100649f:	83 f8 62             	cmp    $0x62,%eax
810064a2:	74 1e                	je     810064c2 <__sflags+0xa0>
810064a4:	eb 1b                	jmp    810064c1 <__sflags+0x9f>
810064a6:	89 f0                	mov    %esi,%eax
810064a8:	83 e0 e3             	and    $0xffffffe3,%eax
810064ab:	83 c8 10             	or     $0x10,%eax
810064ae:	89 c6                	mov    %eax,%esi
810064b0:	89 d8                	mov    %ebx,%eax
810064b2:	83 e0 fc             	and    $0xfffffffc,%eax
810064b5:	83 c8 02             	or     $0x2,%eax
810064b8:	89 c3                	mov    %eax,%ebx
810064ba:	eb 06                	jmp    810064c2 <__sflags+0xa0>
810064bc:	80 cf 08             	or     $0x8,%bh
810064bf:	eb 01                	jmp    810064c2 <__sflags+0xa0>
810064c1:	90                   	nop
810064c2:	83 c2 01             	add    $0x1,%edx
810064c5:	0f b6 02             	movzbl (%edx),%eax
810064c8:	84 c0                	test   %al,%al
810064ca:	75 be                	jne    8100648a <__sflags+0x68>
810064cc:	89 da                	mov    %ebx,%edx
810064ce:	09 fa                	or     %edi,%edx
810064d0:	8b 45 10             	mov    0x10(%ebp),%eax
810064d3:	89 10                	mov    %edx,(%eax)
810064d5:	89 f0                	mov    %esi,%eax
810064d7:	5b                   	pop    %ebx
810064d8:	5e                   	pop    %esi
810064d9:	5f                   	pop    %edi
810064da:	5d                   	pop    %ebp
810064db:	c3                   	ret    

810064dc <_fputc_r>:
810064dc:	55                   	push   %ebp
810064dd:	89 e5                	mov    %esp,%ebp
810064df:	83 ec 18             	sub    $0x18,%esp
810064e2:	8b 45 08             	mov    0x8(%ebp),%eax
810064e5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810064e8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810064ec:	74 18                	je     81006506 <_fputc_r+0x2a>
810064ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
810064f1:	8b 40 38             	mov    0x38(%eax),%eax
810064f4:	85 c0                	test   %eax,%eax
810064f6:	75 0e                	jne    81006506 <_fputc_r+0x2a>
810064f8:	83 ec 0c             	sub    $0xc,%esp
810064fb:	ff 75 f4             	push   -0xc(%ebp)
810064fe:	e8 f1 b2 ff ff       	call   810017f4 <__sinit>
81006503:	83 c4 10             	add    $0x10,%esp
81006506:	83 ec 04             	sub    $0x4,%esp
81006509:	ff 75 10             	push   0x10(%ebp)
8100650c:	ff 75 0c             	push   0xc(%ebp)
8100650f:	ff 75 08             	push   0x8(%ebp)
81006512:	e8 6f 13 00 00       	call   81007886 <_putc_r>
81006517:	83 c4 10             	add    $0x10,%esp
8100651a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100651d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006520:	c9                   	leave  
81006521:	c3                   	ret    

81006522 <fputc>:
81006522:	55                   	push   %ebp
81006523:	89 e5                	mov    %esp,%ebp
81006525:	83 ec 18             	sub    $0x18,%esp
81006528:	a1 44 91 00 81       	mov    0x81009144,%eax
8100652d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006530:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006533:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006536:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100653a:	74 18                	je     81006554 <fputc+0x32>
8100653c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100653f:	8b 40 38             	mov    0x38(%eax),%eax
81006542:	85 c0                	test   %eax,%eax
81006544:	75 0e                	jne    81006554 <fputc+0x32>
81006546:	83 ec 0c             	sub    $0xc,%esp
81006549:	ff 75 f0             	push   -0x10(%ebp)
8100654c:	e8 a3 b2 ff ff       	call   810017f4 <__sinit>
81006551:	83 c4 10             	add    $0x10,%esp
81006554:	83 ec 04             	sub    $0x4,%esp
81006557:	ff 75 0c             	push   0xc(%ebp)
8100655a:	ff 75 08             	push   0x8(%ebp)
8100655d:	ff 75 f4             	push   -0xc(%ebp)
81006560:	e8 21 13 00 00       	call   81007886 <_putc_r>
81006565:	83 c4 10             	add    $0x10,%esp
81006568:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100656b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100656e:	c9                   	leave  
8100656f:	c3                   	ret    

81006570 <_fputs_r>:
81006570:	55                   	push   %ebp
81006571:	89 e5                	mov    %esp,%ebp
81006573:	83 ec 28             	sub    $0x28,%esp
81006576:	8b 45 0c             	mov    0xc(%ebp),%eax
81006579:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100657c:	83 ec 0c             	sub    $0xc,%esp
8100657f:	ff 75 0c             	push   0xc(%ebp)
81006582:	e8 89 f6 ff ff       	call   81005c10 <strlen>
81006587:	83 c4 10             	add    $0x10,%esp
8100658a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100658d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006590:	89 45 e0             	mov    %eax,-0x20(%ebp)
81006593:	8d 45 dc             	lea    -0x24(%ebp),%eax
81006596:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006599:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
810065a0:	8b 45 08             	mov    0x8(%ebp),%eax
810065a3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810065a6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810065aa:	74 18                	je     810065c4 <_fputs_r+0x54>
810065ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
810065af:	8b 40 38             	mov    0x38(%eax),%eax
810065b2:	85 c0                	test   %eax,%eax
810065b4:	75 0e                	jne    810065c4 <_fputs_r+0x54>
810065b6:	83 ec 0c             	sub    $0xc,%esp
810065b9:	ff 75 f4             	push   -0xc(%ebp)
810065bc:	e8 33 b2 ff ff       	call   810017f4 <__sinit>
810065c1:	83 c4 10             	add    $0x10,%esp
810065c4:	8b 45 10             	mov    0x10(%ebp),%eax
810065c7:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810065cb:	98                   	cwtl   
810065cc:	25 00 20 00 00       	and    $0x2000,%eax
810065d1:	85 c0                	test   %eax,%eax
810065d3:	75 24                	jne    810065f9 <_fputs_r+0x89>
810065d5:	8b 45 10             	mov    0x10(%ebp),%eax
810065d8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810065dc:	80 cc 20             	or     $0x20,%ah
810065df:	89 c2                	mov    %eax,%edx
810065e1:	8b 45 10             	mov    0x10(%ebp),%eax
810065e4:	66 89 50 0c          	mov    %dx,0xc(%eax)
810065e8:	8b 45 10             	mov    0x10(%ebp),%eax
810065eb:	8b 40 64             	mov    0x64(%eax),%eax
810065ee:	80 e4 df             	and    $0xdf,%ah
810065f1:	89 c2                	mov    %eax,%edx
810065f3:	8b 45 10             	mov    0x10(%ebp),%eax
810065f6:	89 50 64             	mov    %edx,0x64(%eax)
810065f9:	83 ec 04             	sub    $0x4,%esp
810065fc:	8d 45 e4             	lea    -0x1c(%ebp),%eax
810065ff:	50                   	push   %eax
81006600:	ff 75 10             	push   0x10(%ebp)
81006603:	ff 75 08             	push   0x8(%ebp)
81006606:	e8 df 01 00 00       	call   810067ea <__sfvwrite_r>
8100660b:	83 c4 10             	add    $0x10,%esp
8100660e:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006611:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006614:	c9                   	leave  
81006615:	c3                   	ret    

81006616 <fputs>:
81006616:	55                   	push   %ebp
81006617:	89 e5                	mov    %esp,%ebp
81006619:	83 ec 08             	sub    $0x8,%esp
8100661c:	a1 44 91 00 81       	mov    0x81009144,%eax
81006621:	83 ec 04             	sub    $0x4,%esp
81006624:	ff 75 0c             	push   0xc(%ebp)
81006627:	ff 75 08             	push   0x8(%ebp)
8100662a:	50                   	push   %eax
8100662b:	e8 40 ff ff ff       	call   81006570 <_fputs_r>
81006630:	83 c4 10             	add    $0x10,%esp
81006633:	c9                   	leave  
81006634:	c3                   	ret    

81006635 <__sputc_r>:
81006635:	55                   	push   %ebp
81006636:	89 e5                	mov    %esp,%ebp
81006638:	83 ec 08             	sub    $0x8,%esp
8100663b:	8b 45 10             	mov    0x10(%ebp),%eax
8100663e:	8b 40 08             	mov    0x8(%eax),%eax
81006641:	8d 50 ff             	lea    -0x1(%eax),%edx
81006644:	8b 45 10             	mov    0x10(%ebp),%eax
81006647:	89 50 08             	mov    %edx,0x8(%eax)
8100664a:	8b 45 10             	mov    0x10(%ebp),%eax
8100664d:	8b 40 08             	mov    0x8(%eax),%eax
81006650:	85 c0                	test   %eax,%eax
81006652:	79 17                	jns    8100666b <__sputc_r+0x36>
81006654:	8b 45 10             	mov    0x10(%ebp),%eax
81006657:	8b 50 08             	mov    0x8(%eax),%edx
8100665a:	8b 45 10             	mov    0x10(%ebp),%eax
8100665d:	8b 40 18             	mov    0x18(%eax),%eax
81006660:	39 c2                	cmp    %eax,%edx
81006662:	7c 21                	jl     81006685 <__sputc_r+0x50>
81006664:	8b 45 0c             	mov    0xc(%ebp),%eax
81006667:	3c 0a                	cmp    $0xa,%al
81006669:	74 1a                	je     81006685 <__sputc_r+0x50>
8100666b:	8b 45 10             	mov    0x10(%ebp),%eax
8100666e:	8b 00                	mov    (%eax),%eax
81006670:	8d 48 01             	lea    0x1(%eax),%ecx
81006673:	8b 55 10             	mov    0x10(%ebp),%edx
81006676:	89 0a                	mov    %ecx,(%edx)
81006678:	8b 55 0c             	mov    0xc(%ebp),%edx
8100667b:	88 10                	mov    %dl,(%eax)
8100667d:	0f b6 00             	movzbl (%eax),%eax
81006680:	0f b6 c0             	movzbl %al,%eax
81006683:	eb 14                	jmp    81006699 <__sputc_r+0x64>
81006685:	83 ec 04             	sub    $0x4,%esp
81006688:	ff 75 10             	push   0x10(%ebp)
8100668b:	ff 75 0c             	push   0xc(%ebp)
8100668e:	ff 75 08             	push   0x8(%ebp)
81006691:	e8 59 f9 ff ff       	call   81005fef <__swbuf_r>
81006696:	83 c4 10             	add    $0x10,%esp
81006699:	c9                   	leave  
8100669a:	c3                   	ret    

8100669b <__fputwc>:
8100669b:	55                   	push   %ebp
8100669c:	89 e5                	mov    %esp,%ebp
8100669e:	83 ec 18             	sub    $0x18,%esp
810066a1:	e8 b5 08 00 00       	call   81006f5b <__locale_mb_cur_max>
810066a6:	83 f8 01             	cmp    $0x1,%eax
810066a9:	75 1e                	jne    810066c9 <__fputwc+0x2e>
810066ab:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810066af:	7e 18                	jle    810066c9 <__fputwc+0x2e>
810066b1:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
810066b8:	7f 0f                	jg     810066c9 <__fputwc+0x2e>
810066ba:	8b 45 0c             	mov    0xc(%ebp),%eax
810066bd:	88 45 ef             	mov    %al,-0x11(%ebp)
810066c0:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
810066c7:	eb 3c                	jmp    81006705 <__fputwc+0x6a>
810066c9:	8b 45 10             	mov    0x10(%ebp),%eax
810066cc:	83 c0 5c             	add    $0x5c,%eax
810066cf:	50                   	push   %eax
810066d0:	ff 75 0c             	push   0xc(%ebp)
810066d3:	8d 45 ef             	lea    -0x11(%ebp),%eax
810066d6:	50                   	push   %eax
810066d7:	ff 75 08             	push   0x8(%ebp)
810066da:	e8 dc 1c 00 00       	call   810083bb <_wcrtomb_r>
810066df:	83 c4 10             	add    $0x10,%esp
810066e2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810066e5:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810066e9:	75 1a                	jne    81006705 <__fputwc+0x6a>
810066eb:	8b 45 10             	mov    0x10(%ebp),%eax
810066ee:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810066f2:	83 c8 40             	or     $0x40,%eax
810066f5:	89 c2                	mov    %eax,%edx
810066f7:	8b 45 10             	mov    0x10(%ebp),%eax
810066fa:	66 89 50 0c          	mov    %dx,0xc(%eax)
810066fe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006703:	eb 44                	jmp    81006749 <__fputwc+0xae>
81006705:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100670c:	eb 30                	jmp    8100673e <__fputwc+0xa3>
8100670e:	8d 55 ef             	lea    -0x11(%ebp),%edx
81006711:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006714:	01 d0                	add    %edx,%eax
81006716:	0f b6 00             	movzbl (%eax),%eax
81006719:	0f b6 c0             	movzbl %al,%eax
8100671c:	83 ec 04             	sub    $0x4,%esp
8100671f:	ff 75 10             	push   0x10(%ebp)
81006722:	50                   	push   %eax
81006723:	ff 75 08             	push   0x8(%ebp)
81006726:	e8 0a ff ff ff       	call   81006635 <__sputc_r>
8100672b:	83 c4 10             	add    $0x10,%esp
8100672e:	83 f8 ff             	cmp    $0xffffffff,%eax
81006731:	75 07                	jne    8100673a <__fputwc+0x9f>
81006733:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006738:	eb 0f                	jmp    81006749 <__fputwc+0xae>
8100673a:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8100673e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006741:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81006744:	72 c8                	jb     8100670e <__fputwc+0x73>
81006746:	8b 45 0c             	mov    0xc(%ebp),%eax
81006749:	c9                   	leave  
8100674a:	c3                   	ret    

8100674b <_fputwc_r>:
8100674b:	55                   	push   %ebp
8100674c:	89 e5                	mov    %esp,%ebp
8100674e:	83 ec 18             	sub    $0x18,%esp
81006751:	8b 45 10             	mov    0x10(%ebp),%eax
81006754:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006758:	98                   	cwtl   
81006759:	25 00 20 00 00       	and    $0x2000,%eax
8100675e:	85 c0                	test   %eax,%eax
81006760:	75 24                	jne    81006786 <_fputwc_r+0x3b>
81006762:	8b 45 10             	mov    0x10(%ebp),%eax
81006765:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006769:	80 cc 20             	or     $0x20,%ah
8100676c:	89 c2                	mov    %eax,%edx
8100676e:	8b 45 10             	mov    0x10(%ebp),%eax
81006771:	66 89 50 0c          	mov    %dx,0xc(%eax)
81006775:	8b 45 10             	mov    0x10(%ebp),%eax
81006778:	8b 40 64             	mov    0x64(%eax),%eax
8100677b:	80 cc 20             	or     $0x20,%ah
8100677e:	89 c2                	mov    %eax,%edx
81006780:	8b 45 10             	mov    0x10(%ebp),%eax
81006783:	89 50 64             	mov    %edx,0x64(%eax)
81006786:	83 ec 04             	sub    $0x4,%esp
81006789:	ff 75 10             	push   0x10(%ebp)
8100678c:	ff 75 0c             	push   0xc(%ebp)
8100678f:	ff 75 08             	push   0x8(%ebp)
81006792:	e8 04 ff ff ff       	call   8100669b <__fputwc>
81006797:	83 c4 10             	add    $0x10,%esp
8100679a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100679d:	8b 45 f4             	mov    -0xc(%ebp),%eax
810067a0:	c9                   	leave  
810067a1:	c3                   	ret    

810067a2 <fputwc>:
810067a2:	55                   	push   %ebp
810067a3:	89 e5                	mov    %esp,%ebp
810067a5:	83 ec 18             	sub    $0x18,%esp
810067a8:	a1 44 91 00 81       	mov    0x81009144,%eax
810067ad:	89 45 f4             	mov    %eax,-0xc(%ebp)
810067b0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810067b3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810067b6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810067ba:	74 18                	je     810067d4 <fputwc+0x32>
810067bc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810067bf:	8b 40 38             	mov    0x38(%eax),%eax
810067c2:	85 c0                	test   %eax,%eax
810067c4:	75 0e                	jne    810067d4 <fputwc+0x32>
810067c6:	83 ec 0c             	sub    $0xc,%esp
810067c9:	ff 75 f0             	push   -0x10(%ebp)
810067cc:	e8 23 b0 ff ff       	call   810017f4 <__sinit>
810067d1:	83 c4 10             	add    $0x10,%esp
810067d4:	83 ec 04             	sub    $0x4,%esp
810067d7:	ff 75 0c             	push   0xc(%ebp)
810067da:	ff 75 08             	push   0x8(%ebp)
810067dd:	ff 75 f4             	push   -0xc(%ebp)
810067e0:	e8 66 ff ff ff       	call   8100674b <_fputwc_r>
810067e5:	83 c4 10             	add    $0x10,%esp
810067e8:	c9                   	leave  
810067e9:	c3                   	ret    

810067ea <__sfvwrite_r>:
810067ea:	55                   	push   %ebp
810067eb:	89 e5                	mov    %esp,%ebp
810067ed:	57                   	push   %edi
810067ee:	56                   	push   %esi
810067ef:	53                   	push   %ebx
810067f0:	83 ec 3c             	sub    $0x3c,%esp
810067f3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810067f6:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
810067fd:	8b 45 10             	mov    0x10(%ebp),%eax
81006800:	8b 78 08             	mov    0x8(%eax),%edi
81006803:	85 ff                	test   %edi,%edi
81006805:	75 0a                	jne    81006811 <__sfvwrite_r+0x27>
81006807:	b8 00 00 00 00       	mov    $0x0,%eax
8100680c:	e9 6f 04 00 00       	jmp    81006c80 <__sfvwrite_r+0x496>
81006811:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006815:	98                   	cwtl   
81006816:	83 e0 08             	and    $0x8,%eax
81006819:	85 c0                	test   %eax,%eax
8100681b:	74 07                	je     81006824 <__sfvwrite_r+0x3a>
8100681d:	8b 43 10             	mov    0x10(%ebx),%eax
81006820:	85 c0                	test   %eax,%eax
81006822:	75 1d                	jne    81006841 <__sfvwrite_r+0x57>
81006824:	83 ec 08             	sub    $0x8,%esp
81006827:	53                   	push   %ebx
81006828:	ff 75 08             	push   0x8(%ebp)
8100682b:	e8 38 f9 ff ff       	call   81006168 <__swsetup_r>
81006830:	83 c4 10             	add    $0x10,%esp
81006833:	85 c0                	test   %eax,%eax
81006835:	74 0a                	je     81006841 <__sfvwrite_r+0x57>
81006837:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100683c:	e9 3f 04 00 00       	jmp    81006c80 <__sfvwrite_r+0x496>
81006841:	8b 45 10             	mov    0x10(%ebp),%eax
81006844:	8b 00                	mov    (%eax),%eax
81006846:	89 45 c0             	mov    %eax,-0x40(%ebp)
81006849:	bf 00 00 00 00       	mov    $0x0,%edi
8100684e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006852:	98                   	cwtl   
81006853:	83 e0 02             	and    $0x2,%eax
81006856:	85 c0                	test   %eax,%eax
81006858:	74 68                	je     810068c2 <__sfvwrite_r+0xd8>
8100685a:	eb 11                	jmp    8100686d <__sfvwrite_r+0x83>
8100685c:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100685f:	8b 08                	mov    (%eax),%ecx
81006861:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81006864:	8b 78 04             	mov    0x4(%eax),%edi
81006867:	83 c0 08             	add    $0x8,%eax
8100686a:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100686d:	85 ff                	test   %edi,%edi
8100686f:	74 eb                	je     8100685c <__sfvwrite_r+0x72>
81006871:	8b 4b 24             	mov    0x24(%ebx),%ecx
81006874:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
81006879:	39 c7                	cmp    %eax,%edi
8100687b:	0f 46 c7             	cmovbe %edi,%eax
8100687e:	89 c2                	mov    %eax,%edx
81006880:	8b 43 1c             	mov    0x1c(%ebx),%eax
81006883:	52                   	push   %edx
81006884:	ff 75 c4             	push   -0x3c(%ebp)
81006887:	50                   	push   %eax
81006888:	ff 75 08             	push   0x8(%ebp)
8100688b:	ff d1                	call   *%ecx
8100688d:	83 c4 10             	add    $0x10,%esp
81006890:	89 c6                	mov    %eax,%esi
81006892:	85 f6                	test   %esi,%esi
81006894:	0f 8e cf 03 00 00    	jle    81006c69 <__sfvwrite_r+0x47f>
8100689a:	89 f0                	mov    %esi,%eax
8100689c:	01 45 c4             	add    %eax,-0x3c(%ebp)
8100689f:	89 f0                	mov    %esi,%eax
810068a1:	29 c7                	sub    %eax,%edi
810068a3:	8b 45 10             	mov    0x10(%ebp),%eax
810068a6:	8b 40 08             	mov    0x8(%eax),%eax
810068a9:	89 f2                	mov    %esi,%edx
810068ab:	29 d0                	sub    %edx,%eax
810068ad:	8b 4d 10             	mov    0x10(%ebp),%ecx
810068b0:	89 41 08             	mov    %eax,0x8(%ecx)
810068b3:	8b 45 10             	mov    0x10(%ebp),%eax
810068b6:	8b 40 08             	mov    0x8(%eax),%eax
810068b9:	85 c0                	test   %eax,%eax
810068bb:	75 b0                	jne    8100686d <__sfvwrite_r+0x83>
810068bd:	e9 a0 03 00 00       	jmp    81006c62 <__sfvwrite_r+0x478>
810068c2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810068c6:	98                   	cwtl   
810068c7:	83 e0 01             	and    $0x1,%eax
810068ca:	85 c0                	test   %eax,%eax
810068cc:	0f 85 44 02 00 00    	jne    81006b16 <__sfvwrite_r+0x32c>
810068d2:	eb 11                	jmp    810068e5 <__sfvwrite_r+0xfb>
810068d4:	8b 45 c0             	mov    -0x40(%ebp),%eax
810068d7:	8b 08                	mov    (%eax),%ecx
810068d9:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810068dc:	8b 78 04             	mov    0x4(%eax),%edi
810068df:	83 c0 08             	add    $0x8,%eax
810068e2:	89 45 c0             	mov    %eax,-0x40(%ebp)
810068e5:	85 ff                	test   %edi,%edi
810068e7:	74 eb                	je     810068d4 <__sfvwrite_r+0xea>
810068e9:	8b 73 08             	mov    0x8(%ebx),%esi
810068ec:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810068f0:	98                   	cwtl   
810068f1:	25 00 02 00 00       	and    $0x200,%eax
810068f6:	85 c0                	test   %eax,%eax
810068f8:	0f 84 4f 01 00 00    	je     81006a4d <__sfvwrite_r+0x263>
810068fe:	89 f0                	mov    %esi,%eax
81006900:	39 c7                	cmp    %eax,%edi
81006902:	0f 82 12 01 00 00    	jb     81006a1a <__sfvwrite_r+0x230>
81006908:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100690c:	98                   	cwtl   
8100690d:	25 80 04 00 00       	and    $0x480,%eax
81006912:	85 c0                	test   %eax,%eax
81006914:	0f 84 00 01 00 00    	je     81006a1a <__sfvwrite_r+0x230>
8100691a:	8b 03                	mov    (%ebx),%eax
8100691c:	8b 53 10             	mov    0x10(%ebx),%edx
8100691f:	29 d0                	sub    %edx,%eax
81006921:	89 45 d0             	mov    %eax,-0x30(%ebp)
81006924:	8b 53 14             	mov    0x14(%ebx),%edx
81006927:	89 d0                	mov    %edx,%eax
81006929:	01 c0                	add    %eax,%eax
8100692b:	01 d0                	add    %edx,%eax
8100692d:	89 c2                	mov    %eax,%edx
8100692f:	c1 ea 1f             	shr    $0x1f,%edx
81006932:	01 d0                	add    %edx,%eax
81006934:	d1 f8                	sar    %eax
81006936:	89 45 d8             	mov    %eax,-0x28(%ebp)
81006939:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100693c:	01 f8                	add    %edi,%eax
8100693e:	8d 50 01             	lea    0x1(%eax),%edx
81006941:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006944:	39 c2                	cmp    %eax,%edx
81006946:	76 0b                	jbe    81006953 <__sfvwrite_r+0x169>
81006948:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100694b:	01 f8                	add    %edi,%eax
8100694d:	83 c0 01             	add    $0x1,%eax
81006950:	89 45 d8             	mov    %eax,-0x28(%ebp)
81006953:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006957:	98                   	cwtl   
81006958:	25 00 04 00 00       	and    $0x400,%eax
8100695d:	85 c0                	test   %eax,%eax
8100695f:	74 4f                	je     810069b0 <__sfvwrite_r+0x1c6>
81006961:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006964:	83 ec 08             	sub    $0x8,%esp
81006967:	50                   	push   %eax
81006968:	ff 75 08             	push   0x8(%ebp)
8100696b:	e8 37 d2 ff ff       	call   81003ba7 <_malloc_r>
81006970:	83 c4 10             	add    $0x10,%esp
81006973:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006976:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100697a:	75 0e                	jne    8100698a <__sfvwrite_r+0x1a0>
8100697c:	8b 45 08             	mov    0x8(%ebp),%eax
8100697f:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81006985:	e9 e6 02 00 00       	jmp    81006c70 <__sfvwrite_r+0x486>
8100698a:	8b 55 d0             	mov    -0x30(%ebp),%edx
8100698d:	8b 43 10             	mov    0x10(%ebx),%eax
81006990:	83 ec 04             	sub    $0x4,%esp
81006993:	52                   	push   %edx
81006994:	50                   	push   %eax
81006995:	ff 75 dc             	push   -0x24(%ebp)
81006998:	e8 1b db ff ff       	call   810044b8 <memcpy>
8100699d:	83 c4 10             	add    $0x10,%esp
810069a0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810069a4:	66 25 7f fb          	and    $0xfb7f,%ax
810069a8:	0c 80                	or     $0x80,%al
810069aa:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810069ae:	eb 49                	jmp    810069f9 <__sfvwrite_r+0x20f>
810069b0:	8b 55 d8             	mov    -0x28(%ebp),%edx
810069b3:	8b 43 10             	mov    0x10(%ebx),%eax
810069b6:	83 ec 04             	sub    $0x4,%esp
810069b9:	52                   	push   %edx
810069ba:	50                   	push   %eax
810069bb:	ff 75 08             	push   0x8(%ebp)
810069be:	e8 a7 0f 00 00       	call   8100796a <_realloc_r>
810069c3:	83 c4 10             	add    $0x10,%esp
810069c6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810069c9:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810069cd:	75 2a                	jne    810069f9 <__sfvwrite_r+0x20f>
810069cf:	8b 43 10             	mov    0x10(%ebx),%eax
810069d2:	83 ec 08             	sub    $0x8,%esp
810069d5:	50                   	push   %eax
810069d6:	ff 75 08             	push   0x8(%ebp)
810069d9:	e8 06 b3 ff ff       	call   81001ce4 <_free_r>
810069de:	83 c4 10             	add    $0x10,%esp
810069e1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810069e5:	24 7f                	and    $0x7f,%al
810069e7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810069eb:	8b 45 08             	mov    0x8(%ebp),%eax
810069ee:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810069f4:	e9 77 02 00 00       	jmp    81006c70 <__sfvwrite_r+0x486>
810069f9:	8b 45 dc             	mov    -0x24(%ebp),%eax
810069fc:	89 43 10             	mov    %eax,0x10(%ebx)
810069ff:	8b 55 d0             	mov    -0x30(%ebp),%edx
81006a02:	8b 45 dc             	mov    -0x24(%ebp),%eax
81006a05:	01 d0                	add    %edx,%eax
81006a07:	89 03                	mov    %eax,(%ebx)
81006a09:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006a0c:	89 43 14             	mov    %eax,0x14(%ebx)
81006a0f:	89 fe                	mov    %edi,%esi
81006a11:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006a14:	2b 45 d0             	sub    -0x30(%ebp),%eax
81006a17:	89 43 08             	mov    %eax,0x8(%ebx)
81006a1a:	89 f0                	mov    %esi,%eax
81006a1c:	39 c7                	cmp    %eax,%edi
81006a1e:	73 02                	jae    81006a22 <__sfvwrite_r+0x238>
81006a20:	89 fe                	mov    %edi,%esi
81006a22:	89 f2                	mov    %esi,%edx
81006a24:	8b 03                	mov    (%ebx),%eax
81006a26:	83 ec 04             	sub    $0x4,%esp
81006a29:	52                   	push   %edx
81006a2a:	ff 75 c4             	push   -0x3c(%ebp)
81006a2d:	50                   	push   %eax
81006a2e:	e8 3d 06 00 00       	call   81007070 <memmove>
81006a33:	83 c4 10             	add    $0x10,%esp
81006a36:	8b 43 08             	mov    0x8(%ebx),%eax
81006a39:	29 f0                	sub    %esi,%eax
81006a3b:	89 43 08             	mov    %eax,0x8(%ebx)
81006a3e:	8b 03                	mov    (%ebx),%eax
81006a40:	89 f2                	mov    %esi,%edx
81006a42:	01 d0                	add    %edx,%eax
81006a44:	89 03                	mov    %eax,(%ebx)
81006a46:	89 fe                	mov    %edi,%esi
81006a48:	e9 9d 00 00 00       	jmp    81006aea <__sfvwrite_r+0x300>
81006a4d:	8b 13                	mov    (%ebx),%edx
81006a4f:	8b 43 10             	mov    0x10(%ebx),%eax
81006a52:	39 c2                	cmp    %eax,%edx
81006a54:	77 07                	ja     81006a5d <__sfvwrite_r+0x273>
81006a56:	8b 43 14             	mov    0x14(%ebx),%eax
81006a59:	39 c7                	cmp    %eax,%edi
81006a5b:	73 4c                	jae    81006aa9 <__sfvwrite_r+0x2bf>
81006a5d:	89 f0                	mov    %esi,%eax
81006a5f:	39 c7                	cmp    %eax,%edi
81006a61:	0f 46 c7             	cmovbe %edi,%eax
81006a64:	89 c6                	mov    %eax,%esi
81006a66:	89 f2                	mov    %esi,%edx
81006a68:	8b 03                	mov    (%ebx),%eax
81006a6a:	83 ec 04             	sub    $0x4,%esp
81006a6d:	52                   	push   %edx
81006a6e:	ff 75 c4             	push   -0x3c(%ebp)
81006a71:	50                   	push   %eax
81006a72:	e8 f9 05 00 00       	call   81007070 <memmove>
81006a77:	83 c4 10             	add    $0x10,%esp
81006a7a:	8b 43 08             	mov    0x8(%ebx),%eax
81006a7d:	29 f0                	sub    %esi,%eax
81006a7f:	89 43 08             	mov    %eax,0x8(%ebx)
81006a82:	8b 03                	mov    (%ebx),%eax
81006a84:	89 f2                	mov    %esi,%edx
81006a86:	01 d0                	add    %edx,%eax
81006a88:	89 03                	mov    %eax,(%ebx)
81006a8a:	8b 43 08             	mov    0x8(%ebx),%eax
81006a8d:	85 c0                	test   %eax,%eax
81006a8f:	75 58                	jne    81006ae9 <__sfvwrite_r+0x2ff>
81006a91:	83 ec 08             	sub    $0x8,%esp
81006a94:	53                   	push   %ebx
81006a95:	ff 75 08             	push   0x8(%ebp)
81006a98:	e8 54 a8 ff ff       	call   810012f1 <_fflush_r>
81006a9d:	83 c4 10             	add    $0x10,%esp
81006aa0:	85 c0                	test   %eax,%eax
81006aa2:	74 45                	je     81006ae9 <__sfvwrite_r+0x2ff>
81006aa4:	e9 c7 01 00 00       	jmp    81006c70 <__sfvwrite_r+0x486>
81006aa9:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81006aaf:	77 04                	ja     81006ab5 <__sfvwrite_r+0x2cb>
81006ab1:	89 f8                	mov    %edi,%eax
81006ab3:	eb 05                	jmp    81006aba <__sfvwrite_r+0x2d0>
81006ab5:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81006aba:	8b 4b 14             	mov    0x14(%ebx),%ecx
81006abd:	99                   	cltd   
81006abe:	f7 f9                	idiv   %ecx
81006ac0:	89 c2                	mov    %eax,%edx
81006ac2:	8b 43 14             	mov    0x14(%ebx),%eax
81006ac5:	89 d6                	mov    %edx,%esi
81006ac7:	0f af f0             	imul   %eax,%esi
81006aca:	8b 53 24             	mov    0x24(%ebx),%edx
81006acd:	8b 43 1c             	mov    0x1c(%ebx),%eax
81006ad0:	56                   	push   %esi
81006ad1:	ff 75 c4             	push   -0x3c(%ebp)
81006ad4:	50                   	push   %eax
81006ad5:	ff 75 08             	push   0x8(%ebp)
81006ad8:	ff d2                	call   *%edx
81006ada:	83 c4 10             	add    $0x10,%esp
81006add:	89 c6                	mov    %eax,%esi
81006adf:	85 f6                	test   %esi,%esi
81006ae1:	0f 8e 85 01 00 00    	jle    81006c6c <__sfvwrite_r+0x482>
81006ae7:	eb 01                	jmp    81006aea <__sfvwrite_r+0x300>
81006ae9:	90                   	nop
81006aea:	89 f0                	mov    %esi,%eax
81006aec:	01 45 c4             	add    %eax,-0x3c(%ebp)
81006aef:	89 f0                	mov    %esi,%eax
81006af1:	29 c7                	sub    %eax,%edi
81006af3:	8b 45 10             	mov    0x10(%ebp),%eax
81006af6:	8b 40 08             	mov    0x8(%eax),%eax
81006af9:	89 f2                	mov    %esi,%edx
81006afb:	29 d0                	sub    %edx,%eax
81006afd:	8b 4d 10             	mov    0x10(%ebp),%ecx
81006b00:	89 41 08             	mov    %eax,0x8(%ecx)
81006b03:	8b 45 10             	mov    0x10(%ebp),%eax
81006b06:	8b 40 08             	mov    0x8(%eax),%eax
81006b09:	85 c0                	test   %eax,%eax
81006b0b:	0f 85 d4 fd ff ff    	jne    810068e5 <__sfvwrite_r+0xfb>
81006b11:	e9 4c 01 00 00       	jmp    81006c62 <__sfvwrite_r+0x478>
81006b16:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81006b1d:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81006b24:	eb 18                	jmp    81006b3e <__sfvwrite_r+0x354>
81006b26:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81006b2d:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006b30:	8b 08                	mov    (%eax),%ecx
81006b32:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81006b35:	8b 78 04             	mov    0x4(%eax),%edi
81006b38:	83 c0 08             	add    $0x8,%eax
81006b3b:	89 45 c0             	mov    %eax,-0x40(%ebp)
81006b3e:	85 ff                	test   %edi,%edi
81006b40:	74 e4                	je     81006b26 <__sfvwrite_r+0x33c>
81006b42:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006b46:	75 32                	jne    81006b7a <__sfvwrite_r+0x390>
81006b48:	83 ec 04             	sub    $0x4,%esp
81006b4b:	57                   	push   %edi
81006b4c:	6a 0a                	push   $0xa
81006b4e:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81006b51:	56                   	push   %esi
81006b52:	e8 79 d8 ff ff       	call   810043d0 <memchr>
81006b57:	83 c4 10             	add    $0x10,%esp
81006b5a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006b5d:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81006b61:	74 0a                	je     81006b6d <__sfvwrite_r+0x383>
81006b63:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81006b66:	83 c0 01             	add    $0x1,%eax
81006b69:	29 f0                	sub    %esi,%eax
81006b6b:	eb 03                	jmp    81006b70 <__sfvwrite_r+0x386>
81006b6d:	8d 47 01             	lea    0x1(%edi),%eax
81006b70:	89 45 e0             	mov    %eax,-0x20(%ebp)
81006b73:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81006b7a:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006b7d:	39 c7                	cmp    %eax,%edi
81006b7f:	0f 46 c7             	cmovbe %edi,%eax
81006b82:	89 c1                	mov    %eax,%ecx
81006b84:	8b 53 08             	mov    0x8(%ebx),%edx
81006b87:	8b 43 14             	mov    0x14(%ebx),%eax
81006b8a:	8d 34 02             	lea    (%edx,%eax,1),%esi
81006b8d:	8b 13                	mov    (%ebx),%edx
81006b8f:	8b 43 10             	mov    0x10(%ebx),%eax
81006b92:	39 c2                	cmp    %eax,%edx
81006b94:	76 38                	jbe    81006bce <__sfvwrite_r+0x3e4>
81006b96:	39 f1                	cmp    %esi,%ecx
81006b98:	7e 34                	jle    81006bce <__sfvwrite_r+0x3e4>
81006b9a:	89 f2                	mov    %esi,%edx
81006b9c:	8b 03                	mov    (%ebx),%eax
81006b9e:	83 ec 04             	sub    $0x4,%esp
81006ba1:	52                   	push   %edx
81006ba2:	ff 75 c4             	push   -0x3c(%ebp)
81006ba5:	50                   	push   %eax
81006ba6:	e8 c5 04 00 00       	call   81007070 <memmove>
81006bab:	83 c4 10             	add    $0x10,%esp
81006bae:	8b 03                	mov    (%ebx),%eax
81006bb0:	89 f2                	mov    %esi,%edx
81006bb2:	01 d0                	add    %edx,%eax
81006bb4:	89 03                	mov    %eax,(%ebx)
81006bb6:	83 ec 08             	sub    $0x8,%esp
81006bb9:	53                   	push   %ebx
81006bba:	ff 75 08             	push   0x8(%ebp)
81006bbd:	e8 2f a7 ff ff       	call   810012f1 <_fflush_r>
81006bc2:	83 c4 10             	add    $0x10,%esp
81006bc5:	85 c0                	test   %eax,%eax
81006bc7:	74 4f                	je     81006c18 <__sfvwrite_r+0x42e>
81006bc9:	e9 a2 00 00 00       	jmp    81006c70 <__sfvwrite_r+0x486>
81006bce:	8b 73 14             	mov    0x14(%ebx),%esi
81006bd1:	89 c8                	mov    %ecx,%eax
81006bd3:	39 c6                	cmp    %eax,%esi
81006bd5:	7f 1b                	jg     81006bf2 <__sfvwrite_r+0x408>
81006bd7:	8b 53 24             	mov    0x24(%ebx),%edx
81006bda:	8b 43 1c             	mov    0x1c(%ebx),%eax
81006bdd:	56                   	push   %esi
81006bde:	ff 75 c4             	push   -0x3c(%ebp)
81006be1:	50                   	push   %eax
81006be2:	ff 75 08             	push   0x8(%ebp)
81006be5:	ff d2                	call   *%edx
81006be7:	83 c4 10             	add    $0x10,%esp
81006bea:	89 c6                	mov    %eax,%esi
81006bec:	85 f6                	test   %esi,%esi
81006bee:	7f 28                	jg     81006c18 <__sfvwrite_r+0x42e>
81006bf0:	eb 7e                	jmp    81006c70 <__sfvwrite_r+0x486>
81006bf2:	89 ce                	mov    %ecx,%esi
81006bf4:	89 f2                	mov    %esi,%edx
81006bf6:	8b 03                	mov    (%ebx),%eax
81006bf8:	83 ec 04             	sub    $0x4,%esp
81006bfb:	52                   	push   %edx
81006bfc:	ff 75 c4             	push   -0x3c(%ebp)
81006bff:	50                   	push   %eax
81006c00:	e8 6b 04 00 00       	call   81007070 <memmove>
81006c05:	83 c4 10             	add    $0x10,%esp
81006c08:	8b 43 08             	mov    0x8(%ebx),%eax
81006c0b:	29 f0                	sub    %esi,%eax
81006c0d:	89 43 08             	mov    %eax,0x8(%ebx)
81006c10:	8b 03                	mov    (%ebx),%eax
81006c12:	89 f2                	mov    %esi,%edx
81006c14:	01 d0                	add    %edx,%eax
81006c16:	89 03                	mov    %eax,(%ebx)
81006c18:	29 75 e0             	sub    %esi,-0x20(%ebp)
81006c1b:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81006c1f:	75 1a                	jne    81006c3b <__sfvwrite_r+0x451>
81006c21:	83 ec 08             	sub    $0x8,%esp
81006c24:	53                   	push   %ebx
81006c25:	ff 75 08             	push   0x8(%ebp)
81006c28:	e8 c4 a6 ff ff       	call   810012f1 <_fflush_r>
81006c2d:	83 c4 10             	add    $0x10,%esp
81006c30:	85 c0                	test   %eax,%eax
81006c32:	75 3b                	jne    81006c6f <__sfvwrite_r+0x485>
81006c34:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81006c3b:	89 f0                	mov    %esi,%eax
81006c3d:	01 45 c4             	add    %eax,-0x3c(%ebp)
81006c40:	89 f0                	mov    %esi,%eax
81006c42:	29 c7                	sub    %eax,%edi
81006c44:	8b 45 10             	mov    0x10(%ebp),%eax
81006c47:	8b 40 08             	mov    0x8(%eax),%eax
81006c4a:	89 f2                	mov    %esi,%edx
81006c4c:	29 d0                	sub    %edx,%eax
81006c4e:	8b 4d 10             	mov    0x10(%ebp),%ecx
81006c51:	89 41 08             	mov    %eax,0x8(%ecx)
81006c54:	8b 45 10             	mov    0x10(%ebp),%eax
81006c57:	8b 40 08             	mov    0x8(%eax),%eax
81006c5a:	85 c0                	test   %eax,%eax
81006c5c:	0f 85 dc fe ff ff    	jne    81006b3e <__sfvwrite_r+0x354>
81006c62:	b8 00 00 00 00       	mov    $0x0,%eax
81006c67:	eb 17                	jmp    81006c80 <__sfvwrite_r+0x496>
81006c69:	90                   	nop
81006c6a:	eb 04                	jmp    81006c70 <__sfvwrite_r+0x486>
81006c6c:	90                   	nop
81006c6d:	eb 01                	jmp    81006c70 <__sfvwrite_r+0x486>
81006c6f:	90                   	nop
81006c70:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006c74:	83 c8 40             	or     $0x40,%eax
81006c77:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006c7b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006c80:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006c83:	5b                   	pop    %ebx
81006c84:	5e                   	pop    %esi
81006c85:	5f                   	pop    %edi
81006c86:	5d                   	pop    %ebp
81006c87:	c3                   	ret    

81006c88 <_getc_r>:
81006c88:	55                   	push   %ebp
81006c89:	89 e5                	mov    %esp,%ebp
81006c8b:	53                   	push   %ebx
81006c8c:	83 ec 14             	sub    $0x14,%esp
81006c8f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81006c92:	8b 45 08             	mov    0x8(%ebp),%eax
81006c95:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006c98:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81006c9c:	74 18                	je     81006cb6 <_getc_r+0x2e>
81006c9e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006ca1:	8b 40 38             	mov    0x38(%eax),%eax
81006ca4:	85 c0                	test   %eax,%eax
81006ca6:	75 0e                	jne    81006cb6 <_getc_r+0x2e>
81006ca8:	83 ec 0c             	sub    $0xc,%esp
81006cab:	ff 75 f4             	push   -0xc(%ebp)
81006cae:	e8 41 ab ff ff       	call   810017f4 <__sinit>
81006cb3:	83 c4 10             	add    $0x10,%esp
81006cb6:	8b 43 04             	mov    0x4(%ebx),%eax
81006cb9:	83 e8 01             	sub    $0x1,%eax
81006cbc:	89 43 04             	mov    %eax,0x4(%ebx)
81006cbf:	8b 43 04             	mov    0x4(%ebx),%eax
81006cc2:	85 c0                	test   %eax,%eax
81006cc4:	79 11                	jns    81006cd7 <_getc_r+0x4f>
81006cc6:	83 ec 08             	sub    $0x8,%esp
81006cc9:	53                   	push   %ebx
81006cca:	ff 75 08             	push   0x8(%ebp)
81006ccd:	e8 72 15 00 00       	call   81008244 <__srget_r>
81006cd2:	83 c4 10             	add    $0x10,%esp
81006cd5:	eb 0d                	jmp    81006ce4 <_getc_r+0x5c>
81006cd7:	8b 03                	mov    (%ebx),%eax
81006cd9:	8d 50 01             	lea    0x1(%eax),%edx
81006cdc:	89 13                	mov    %edx,(%ebx)
81006cde:	0f b6 00             	movzbl (%eax),%eax
81006ce1:	0f b6 c0             	movzbl %al,%eax
81006ce4:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006ce7:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006cea:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81006ced:	c9                   	leave  
81006cee:	c3                   	ret    

81006cef <getc>:
81006cef:	55                   	push   %ebp
81006cf0:	89 e5                	mov    %esp,%ebp
81006cf2:	53                   	push   %ebx
81006cf3:	83 ec 14             	sub    $0x14,%esp
81006cf6:	8b 5d 08             	mov    0x8(%ebp),%ebx
81006cf9:	a1 44 91 00 81       	mov    0x81009144,%eax
81006cfe:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006d01:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006d04:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006d07:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81006d0b:	74 18                	je     81006d25 <getc+0x36>
81006d0d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006d10:	8b 40 38             	mov    0x38(%eax),%eax
81006d13:	85 c0                	test   %eax,%eax
81006d15:	75 0e                	jne    81006d25 <getc+0x36>
81006d17:	83 ec 0c             	sub    $0xc,%esp
81006d1a:	ff 75 f0             	push   -0x10(%ebp)
81006d1d:	e8 d2 aa ff ff       	call   810017f4 <__sinit>
81006d22:	83 c4 10             	add    $0x10,%esp
81006d25:	8b 43 04             	mov    0x4(%ebx),%eax
81006d28:	83 e8 01             	sub    $0x1,%eax
81006d2b:	89 43 04             	mov    %eax,0x4(%ebx)
81006d2e:	8b 43 04             	mov    0x4(%ebx),%eax
81006d31:	85 c0                	test   %eax,%eax
81006d33:	79 11                	jns    81006d46 <getc+0x57>
81006d35:	83 ec 08             	sub    $0x8,%esp
81006d38:	53                   	push   %ebx
81006d39:	ff 75 f4             	push   -0xc(%ebp)
81006d3c:	e8 03 15 00 00       	call   81008244 <__srget_r>
81006d41:	83 c4 10             	add    $0x10,%esp
81006d44:	eb 0d                	jmp    81006d53 <getc+0x64>
81006d46:	8b 03                	mov    (%ebx),%eax
81006d48:	8d 50 01             	lea    0x1(%eax),%edx
81006d4b:	89 13                	mov    %edx,(%ebx)
81006d4d:	0f b6 00             	movzbl (%eax),%eax
81006d50:	0f b6 c0             	movzbl %al,%eax
81006d53:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006d56:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006d59:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81006d5c:	c9                   	leave  
81006d5d:	c3                   	ret    

81006d5e <_findenv>:
81006d5e:	55                   	push   %ebp
81006d5f:	89 e5                	mov    %esp,%ebp
81006d61:	83 ec 08             	sub    $0x8,%esp
81006d64:	8b 55 08             	mov    0x8(%ebp),%edx
81006d67:	a1 44 91 00 81       	mov    0x81009144,%eax
81006d6c:	83 ec 04             	sub    $0x4,%esp
81006d6f:	ff 75 0c             	push   0xc(%ebp)
81006d72:	52                   	push   %edx
81006d73:	50                   	push   %eax
81006d74:	e8 25 00 00 00       	call   81006d9e <_findenv_r>
81006d79:	83 c4 10             	add    $0x10,%esp
81006d7c:	c9                   	leave  
81006d7d:	c3                   	ret    

81006d7e <getenv>:
81006d7e:	55                   	push   %ebp
81006d7f:	89 e5                	mov    %esp,%ebp
81006d81:	83 ec 18             	sub    $0x18,%esp
81006d84:	a1 44 91 00 81       	mov    0x81009144,%eax
81006d89:	83 ec 04             	sub    $0x4,%esp
81006d8c:	8d 55 f4             	lea    -0xc(%ebp),%edx
81006d8f:	52                   	push   %edx
81006d90:	ff 75 08             	push   0x8(%ebp)
81006d93:	50                   	push   %eax
81006d94:	e8 05 00 00 00       	call   81006d9e <_findenv_r>
81006d99:	83 c4 10             	add    $0x10,%esp
81006d9c:	c9                   	leave  
81006d9d:	c3                   	ret    

81006d9e <_findenv_r>:
81006d9e:	55                   	push   %ebp
81006d9f:	89 e5                	mov    %esp,%ebp
81006da1:	57                   	push   %edi
81006da2:	56                   	push   %esi
81006da3:	53                   	push   %ebx
81006da4:	83 ec 1c             	sub    $0x1c,%esp
81006da7:	8b 7d 0c             	mov    0xc(%ebp),%edi
81006daa:	83 ec 0c             	sub    $0xc,%esp
81006dad:	ff 75 08             	push   0x8(%ebp)
81006db0:	e8 77 17 00 00       	call   8100852c <__env_lock>
81006db5:	83 c4 10             	add    $0x10,%esp
81006db8:	a1 70 95 00 81       	mov    0x81009570,%eax
81006dbd:	8b 00                	mov    (%eax),%eax
81006dbf:	85 c0                	test   %eax,%eax
81006dc1:	75 18                	jne    81006ddb <_findenv_r+0x3d>
81006dc3:	83 ec 0c             	sub    $0xc,%esp
81006dc6:	ff 75 08             	push   0x8(%ebp)
81006dc9:	e8 64 17 00 00       	call   81008532 <__env_unlock>
81006dce:	83 c4 10             	add    $0x10,%esp
81006dd1:	b8 00 00 00 00       	mov    $0x0,%eax
81006dd6:	e9 a8 00 00 00       	jmp    81006e83 <_findenv_r+0xe5>
81006ddb:	89 7d e4             	mov    %edi,-0x1c(%ebp)
81006dde:	eb 04                	jmp    81006de4 <_findenv_r+0x46>
81006de0:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81006de4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006de7:	0f b6 00             	movzbl (%eax),%eax
81006dea:	84 c0                	test   %al,%al
81006dec:	74 0a                	je     81006df8 <_findenv_r+0x5a>
81006dee:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006df1:	0f b6 00             	movzbl (%eax),%eax
81006df4:	3c 3d                	cmp    $0x3d,%al
81006df6:	75 e8                	jne    81006de0 <_findenv_r+0x42>
81006df8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006dfb:	0f b6 00             	movzbl (%eax),%eax
81006dfe:	3c 3d                	cmp    $0x3d,%al
81006e00:	74 6e                	je     81006e70 <_findenv_r+0xd2>
81006e02:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006e05:	29 f8                	sub    %edi,%eax
81006e07:	89 c6                	mov    %eax,%esi
81006e09:	a1 70 95 00 81       	mov    0x81009570,%eax
81006e0e:	8b 18                	mov    (%eax),%ebx
81006e10:	eb 58                	jmp    81006e6a <_findenv_r+0xcc>
81006e12:	89 f2                	mov    %esi,%edx
81006e14:	8b 03                	mov    (%ebx),%eax
81006e16:	83 ec 04             	sub    $0x4,%esp
81006e19:	52                   	push   %edx
81006e1a:	57                   	push   %edi
81006e1b:	50                   	push   %eax
81006e1c:	e8 a3 14 00 00       	call   810082c4 <strncmp>
81006e21:	83 c4 10             	add    $0x10,%esp
81006e24:	85 c0                	test   %eax,%eax
81006e26:	75 3f                	jne    81006e67 <_findenv_r+0xc9>
81006e28:	8b 03                	mov    (%ebx),%eax
81006e2a:	89 f2                	mov    %esi,%edx
81006e2c:	01 d0                	add    %edx,%eax
81006e2e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006e31:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006e34:	0f b6 00             	movzbl (%eax),%eax
81006e37:	3c 3d                	cmp    $0x3d,%al
81006e39:	75 2c                	jne    81006e67 <_findenv_r+0xc9>
81006e3b:	a1 70 95 00 81       	mov    0x81009570,%eax
81006e40:	8b 10                	mov    (%eax),%edx
81006e42:	89 d8                	mov    %ebx,%eax
81006e44:	29 d0                	sub    %edx,%eax
81006e46:	c1 f8 02             	sar    $0x2,%eax
81006e49:	89 c2                	mov    %eax,%edx
81006e4b:	8b 45 10             	mov    0x10(%ebp),%eax
81006e4e:	89 10                	mov    %edx,(%eax)
81006e50:	83 ec 0c             	sub    $0xc,%esp
81006e53:	ff 75 08             	push   0x8(%ebp)
81006e56:	e8 d7 16 00 00       	call   81008532 <__env_unlock>
81006e5b:	83 c4 10             	add    $0x10,%esp
81006e5e:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81006e62:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006e65:	eb 1c                	jmp    81006e83 <_findenv_r+0xe5>
81006e67:	83 c3 04             	add    $0x4,%ebx
81006e6a:	8b 03                	mov    (%ebx),%eax
81006e6c:	85 c0                	test   %eax,%eax
81006e6e:	75 a2                	jne    81006e12 <_findenv_r+0x74>
81006e70:	83 ec 0c             	sub    $0xc,%esp
81006e73:	ff 75 08             	push   0x8(%ebp)
81006e76:	e8 b7 16 00 00       	call   81008532 <__env_unlock>
81006e7b:	83 c4 10             	add    $0x10,%esp
81006e7e:	b8 00 00 00 00       	mov    $0x0,%eax
81006e83:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006e86:	5b                   	pop    %ebx
81006e87:	5e                   	pop    %esi
81006e88:	5f                   	pop    %edi
81006e89:	5d                   	pop    %ebp
81006e8a:	c3                   	ret    

81006e8b <_getenv_r>:
81006e8b:	55                   	push   %ebp
81006e8c:	89 e5                	mov    %esp,%ebp
81006e8e:	83 ec 18             	sub    $0x18,%esp
81006e91:	83 ec 04             	sub    $0x4,%esp
81006e94:	8d 45 f4             	lea    -0xc(%ebp),%eax
81006e97:	50                   	push   %eax
81006e98:	ff 75 0c             	push   0xc(%ebp)
81006e9b:	ff 75 08             	push   0x8(%ebp)
81006e9e:	e8 fb fe ff ff       	call   81006d9e <_findenv_r>
81006ea3:	83 c4 10             	add    $0x10,%esp
81006ea6:	c9                   	leave  
81006ea7:	c3                   	ret    

81006ea8 <_isatty_r>:
81006ea8:	55                   	push   %ebp
81006ea9:	89 e5                	mov    %esp,%ebp
81006eab:	83 ec 18             	sub    $0x18,%esp
81006eae:	c7 05 8c 9e 00 81 00 	movl   $0x0,0x81009e8c
81006eb5:	00 00 00 
81006eb8:	83 ec 0c             	sub    $0xc,%esp
81006ebb:	ff 75 0c             	push   0xc(%ebp)
81006ebe:	e8 62 9e ff ff       	call   81000d25 <isatty>
81006ec3:	83 c4 10             	add    $0x10,%esp
81006ec6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006ec9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006ecd:	75 14                	jne    81006ee3 <_isatty_r+0x3b>
81006ecf:	a1 8c 9e 00 81       	mov    0x81009e8c,%eax
81006ed4:	85 c0                	test   %eax,%eax
81006ed6:	74 0b                	je     81006ee3 <_isatty_r+0x3b>
81006ed8:	8b 15 8c 9e 00 81    	mov    0x81009e8c,%edx
81006ede:	8b 45 08             	mov    0x8(%ebp),%eax
81006ee1:	89 10                	mov    %edx,(%eax)
81006ee3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006ee6:	c9                   	leave  
81006ee7:	c3                   	ret    

81006ee8 <__get_global_locale>:
81006ee8:	55                   	push   %ebp
81006ee9:	89 e5                	mov    %esp,%ebp
81006eeb:	b8 80 95 00 81       	mov    $0x81009580,%eax
81006ef0:	5d                   	pop    %ebp
81006ef1:	c3                   	ret    

81006ef2 <__get_current_locale>:
81006ef2:	55                   	push   %ebp
81006ef3:	89 e5                	mov    %esp,%ebp
81006ef5:	e8 ee ff ff ff       	call   81006ee8 <__get_global_locale>
81006efa:	5d                   	pop    %ebp
81006efb:	c3                   	ret    

81006efc <_setlocale_r>:
81006efc:	55                   	push   %ebp
81006efd:	89 e5                	mov    %esp,%ebp
81006eff:	83 ec 08             	sub    $0x8,%esp
81006f02:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006f06:	74 4c                	je     81006f54 <_setlocale_r+0x58>
81006f08:	83 ec 08             	sub    $0x8,%esp
81006f0b:	68 e4 8c 00 81       	push   $0x81008ce4
81006f10:	ff 75 10             	push   0x10(%ebp)
81006f13:	e8 44 ec ff ff       	call   81005b5c <strcmp>
81006f18:	83 c4 10             	add    $0x10,%esp
81006f1b:	85 c0                	test   %eax,%eax
81006f1d:	74 35                	je     81006f54 <_setlocale_r+0x58>
81006f1f:	83 ec 08             	sub    $0x8,%esp
81006f22:	68 ea 8c 00 81       	push   $0x81008cea
81006f27:	ff 75 10             	push   0x10(%ebp)
81006f2a:	e8 2d ec ff ff       	call   81005b5c <strcmp>
81006f2f:	83 c4 10             	add    $0x10,%esp
81006f32:	85 c0                	test   %eax,%eax
81006f34:	74 1e                	je     81006f54 <_setlocale_r+0x58>
81006f36:	83 ec 08             	sub    $0x8,%esp
81006f39:	68 e3 8c 00 81       	push   $0x81008ce3
81006f3e:	ff 75 10             	push   0x10(%ebp)
81006f41:	e8 16 ec ff ff       	call   81005b5c <strcmp>
81006f46:	83 c4 10             	add    $0x10,%esp
81006f49:	85 c0                	test   %eax,%eax
81006f4b:	74 07                	je     81006f54 <_setlocale_r+0x58>
81006f4d:	b8 00 00 00 00       	mov    $0x0,%eax
81006f52:	eb 05                	jmp    81006f59 <_setlocale_r+0x5d>
81006f54:	b8 ea 8c 00 81       	mov    $0x81008cea,%eax
81006f59:	c9                   	leave  
81006f5a:	c3                   	ret    

81006f5b <__locale_mb_cur_max>:
81006f5b:	55                   	push   %ebp
81006f5c:	89 e5                	mov    %esp,%ebp
81006f5e:	e8 8f ff ff ff       	call   81006ef2 <__get_current_locale>
81006f63:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
81006f6a:	0f be c0             	movsbl %al,%eax
81006f6d:	5d                   	pop    %ebp
81006f6e:	c3                   	ret    

81006f6f <setlocale>:
81006f6f:	55                   	push   %ebp
81006f70:	89 e5                	mov    %esp,%ebp
81006f72:	83 ec 08             	sub    $0x8,%esp
81006f75:	a1 44 91 00 81       	mov    0x81009144,%eax
81006f7a:	83 ec 04             	sub    $0x4,%esp
81006f7d:	ff 75 0c             	push   0xc(%ebp)
81006f80:	ff 75 08             	push   0x8(%ebp)
81006f83:	50                   	push   %eax
81006f84:	e8 73 ff ff ff       	call   81006efc <_setlocale_r>
81006f89:	83 c4 10             	add    $0x10,%esp
81006f8c:	c9                   	leave  
81006f8d:	c3                   	ret    

81006f8e <_lseek_r>:
81006f8e:	55                   	push   %ebp
81006f8f:	89 e5                	mov    %esp,%ebp
81006f91:	83 ec 18             	sub    $0x18,%esp
81006f94:	c7 05 8c 9e 00 81 00 	movl   $0x0,0x81009e8c
81006f9b:	00 00 00 
81006f9e:	83 ec 04             	sub    $0x4,%esp
81006fa1:	ff 75 14             	push   0x14(%ebp)
81006fa4:	ff 75 10             	push   0x10(%ebp)
81006fa7:	ff 75 0c             	push   0xc(%ebp)
81006faa:	e8 49 9d ff ff       	call   81000cf8 <lseek>
81006faf:	83 c4 10             	add    $0x10,%esp
81006fb2:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006fb5:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006fb9:	75 14                	jne    81006fcf <_lseek_r+0x41>
81006fbb:	a1 8c 9e 00 81       	mov    0x81009e8c,%eax
81006fc0:	85 c0                	test   %eax,%eax
81006fc2:	74 0b                	je     81006fcf <_lseek_r+0x41>
81006fc4:	8b 15 8c 9e 00 81    	mov    0x81009e8c,%edx
81006fca:	8b 45 08             	mov    0x8(%ebp),%eax
81006fcd:	89 10                	mov    %edx,(%eax)
81006fcf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006fd2:	c9                   	leave  
81006fd3:	c3                   	ret    

81006fd4 <__get_global_locale>:
81006fd4:	55                   	push   %ebp
81006fd5:	89 e5                	mov    %esp,%ebp
81006fd7:	b8 80 95 00 81       	mov    $0x81009580,%eax
81006fdc:	5d                   	pop    %ebp
81006fdd:	c3                   	ret    

81006fde <__get_current_locale>:
81006fde:	55                   	push   %ebp
81006fdf:	89 e5                	mov    %esp,%ebp
81006fe1:	e8 ee ff ff ff       	call   81006fd4 <__get_global_locale>
81006fe6:	5d                   	pop    %ebp
81006fe7:	c3                   	ret    

81006fe8 <_mbtowc_r>:
81006fe8:	55                   	push   %ebp
81006fe9:	89 e5                	mov    %esp,%ebp
81006feb:	83 ec 08             	sub    $0x8,%esp
81006fee:	e8 eb ff ff ff       	call   81006fde <__get_current_locale>
81006ff3:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
81006ff9:	83 ec 0c             	sub    $0xc,%esp
81006ffc:	ff 75 18             	push   0x18(%ebp)
81006fff:	ff 75 14             	push   0x14(%ebp)
81007002:	ff 75 10             	push   0x10(%ebp)
81007005:	ff 75 0c             	push   0xc(%ebp)
81007008:	ff 75 08             	push   0x8(%ebp)
8100700b:	ff d0                	call   *%eax
8100700d:	83 c4 20             	add    $0x20,%esp
81007010:	c9                   	leave  
81007011:	c3                   	ret    

81007012 <__ascii_mbtowc>:
81007012:	55                   	push   %ebp
81007013:	89 e5                	mov    %esp,%ebp
81007015:	83 ec 10             	sub    $0x10,%esp
81007018:	8b 45 10             	mov    0x10(%ebp),%eax
8100701b:	89 45 fc             	mov    %eax,-0x4(%ebp)
8100701e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007022:	75 06                	jne    8100702a <__ascii_mbtowc+0x18>
81007024:	8d 45 f8             	lea    -0x8(%ebp),%eax
81007027:	89 45 0c             	mov    %eax,0xc(%ebp)
8100702a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100702e:	75 07                	jne    81007037 <__ascii_mbtowc+0x25>
81007030:	b8 00 00 00 00       	mov    $0x0,%eax
81007035:	eb 31                	jmp    81007068 <__ascii_mbtowc+0x56>
81007037:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100703b:	75 07                	jne    81007044 <__ascii_mbtowc+0x32>
8100703d:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
81007042:	eb 24                	jmp    81007068 <__ascii_mbtowc+0x56>
81007044:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007047:	0f b6 00             	movzbl (%eax),%eax
8100704a:	0f b6 d0             	movzbl %al,%edx
8100704d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007050:	89 10                	mov    %edx,(%eax)
81007052:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007055:	0f b6 00             	movzbl (%eax),%eax
81007058:	84 c0                	test   %al,%al
8100705a:	75 07                	jne    81007063 <__ascii_mbtowc+0x51>
8100705c:	b8 00 00 00 00       	mov    $0x0,%eax
81007061:	eb 05                	jmp    81007068 <__ascii_mbtowc+0x56>
81007063:	b8 01 00 00 00       	mov    $0x1,%eax
81007068:	c9                   	leave  
81007069:	c3                   	ret    
8100706a:	66 90                	xchg   %ax,%ax
8100706c:	66 90                	xchg   %ax,%ax
8100706e:	66 90                	xchg   %ax,%ax

81007070 <memmove>:
81007070:	55                   	push   %ebp
81007071:	89 e5                	mov    %esp,%ebp
81007073:	56                   	push   %esi
81007074:	57                   	push   %edi
81007075:	53                   	push   %ebx
81007076:	8b 7d 08             	mov    0x8(%ebp),%edi
81007079:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100707c:	8b 75 0c             	mov    0xc(%ebp),%esi
8100707f:	fc                   	cld    
81007080:	39 fe                	cmp    %edi,%esi
81007082:	73 43                	jae    810070c7 <memmove+0x57>
81007084:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81007088:	39 df                	cmp    %ebx,%edi
8100708a:	77 3b                	ja     810070c7 <memmove+0x57>
8100708c:	01 ce                	add    %ecx,%esi
8100708e:	01 cf                	add    %ecx,%edi
81007090:	fd                   	std    
81007091:	83 f9 08             	cmp    $0x8,%ecx
81007094:	76 2b                	jbe    810070c1 <memmove+0x51>
81007096:	89 fa                	mov    %edi,%edx
81007098:	89 cb                	mov    %ecx,%ebx
8100709a:	83 e2 03             	and    $0x3,%edx
8100709d:	74 0c                	je     810070ab <memmove+0x3b>
8100709f:	89 d1                	mov    %edx,%ecx
810070a1:	4e                   	dec    %esi
810070a2:	4f                   	dec    %edi
810070a3:	29 cb                	sub    %ecx,%ebx
810070a5:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810070a7:	89 d9                	mov    %ebx,%ecx
810070a9:	46                   	inc    %esi
810070aa:	47                   	inc    %edi
810070ab:	c1 e9 02             	shr    $0x2,%ecx
810070ae:	83 ee 04             	sub    $0x4,%esi
810070b1:	83 ef 04             	sub    $0x4,%edi
810070b4:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
810070b6:	83 c6 04             	add    $0x4,%esi
810070b9:	83 c7 04             	add    $0x4,%edi
810070bc:	89 d9                	mov    %ebx,%ecx
810070be:	83 e1 03             	and    $0x3,%ecx
810070c1:	4e                   	dec    %esi
810070c2:	4f                   	dec    %edi
810070c3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810070c5:	eb 2a                	jmp    810070f1 <memmove+0x81>
810070c7:	83 f9 08             	cmp    $0x8,%ecx
810070ca:	76 23                	jbe    810070ef <memmove+0x7f>
810070cc:	89 fa                	mov    %edi,%edx
810070ce:	89 cb                	mov    %ecx,%ebx
810070d0:	83 e2 03             	and    $0x3,%edx
810070d3:	74 10                	je     810070e5 <memmove+0x75>
810070d5:	b9 04 00 00 00       	mov    $0x4,%ecx
810070da:	29 d1                	sub    %edx,%ecx
810070dc:	83 e1 03             	and    $0x3,%ecx
810070df:	29 cb                	sub    %ecx,%ebx
810070e1:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810070e3:	89 d9                	mov    %ebx,%ecx
810070e5:	c1 e9 02             	shr    $0x2,%ecx
810070e8:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
810070ea:	89 d9                	mov    %ebx,%ecx
810070ec:	83 e1 03             	and    $0x3,%ecx
810070ef:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810070f1:	8b 45 08             	mov    0x8(%ebp),%eax
810070f4:	fc                   	cld    
810070f5:	8d 65 f4             	lea    -0xc(%ebp),%esp
810070f8:	5b                   	pop    %ebx
810070f9:	5f                   	pop    %edi
810070fa:	5e                   	pop    %esi
810070fb:	c9                   	leave  
810070fc:	c3                   	ret    

810070fd <__ssputs_r>:
810070fd:	55                   	push   %ebp
810070fe:	89 e5                	mov    %esp,%ebp
81007100:	53                   	push   %ebx
81007101:	83 ec 14             	sub    $0x14,%esp
81007104:	8b 45 0c             	mov    0xc(%ebp),%eax
81007107:	8b 58 08             	mov    0x8(%eax),%ebx
8100710a:	89 d8                	mov    %ebx,%eax
8100710c:	39 45 14             	cmp    %eax,0x14(%ebp)
8100710f:	0f 82 3c 01 00 00    	jb     81007251 <__ssputs_r+0x154>
81007115:	8b 45 0c             	mov    0xc(%ebp),%eax
81007118:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100711c:	98                   	cwtl   
8100711d:	25 80 04 00 00       	and    $0x480,%eax
81007122:	85 c0                	test   %eax,%eax
81007124:	0f 84 27 01 00 00    	je     81007251 <__ssputs_r+0x154>
8100712a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100712d:	8b 10                	mov    (%eax),%edx
8100712f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007132:	8b 48 10             	mov    0x10(%eax),%ecx
81007135:	89 d0                	mov    %edx,%eax
81007137:	29 c8                	sub    %ecx,%eax
81007139:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100713c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100713f:	8b 50 14             	mov    0x14(%eax),%edx
81007142:	89 d0                	mov    %edx,%eax
81007144:	01 c0                	add    %eax,%eax
81007146:	01 d0                	add    %edx,%eax
81007148:	89 c2                	mov    %eax,%edx
8100714a:	c1 ea 1f             	shr    $0x1f,%edx
8100714d:	01 d0                	add    %edx,%eax
8100714f:	d1 f8                	sar    %eax
81007151:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007154:	8b 55 ec             	mov    -0x14(%ebp),%edx
81007157:	8b 45 14             	mov    0x14(%ebp),%eax
8100715a:	01 d0                	add    %edx,%eax
8100715c:	8d 50 01             	lea    0x1(%eax),%edx
8100715f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007162:	39 c2                	cmp    %eax,%edx
81007164:	76 0e                	jbe    81007174 <__ssputs_r+0x77>
81007166:	8b 55 ec             	mov    -0x14(%ebp),%edx
81007169:	8b 45 14             	mov    0x14(%ebp),%eax
8100716c:	01 d0                	add    %edx,%eax
8100716e:	83 c0 01             	add    $0x1,%eax
81007171:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007174:	8b 45 0c             	mov    0xc(%ebp),%eax
81007177:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100717b:	98                   	cwtl   
8100717c:	25 00 04 00 00       	and    $0x400,%eax
81007181:	85 c0                	test   %eax,%eax
81007183:	74 5a                	je     810071df <__ssputs_r+0xe2>
81007185:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007188:	83 ec 08             	sub    $0x8,%esp
8100718b:	50                   	push   %eax
8100718c:	ff 75 08             	push   0x8(%ebp)
8100718f:	e8 13 ca ff ff       	call   81003ba7 <_malloc_r>
81007194:	83 c4 10             	add    $0x10,%esp
81007197:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100719a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100719e:	75 0e                	jne    810071ae <__ssputs_r+0xb1>
810071a0:	8b 45 08             	mov    0x8(%ebp),%eax
810071a3:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810071a9:	e9 e9 00 00 00       	jmp    81007297 <__ssputs_r+0x19a>
810071ae:	8b 55 ec             	mov    -0x14(%ebp),%edx
810071b1:	8b 45 0c             	mov    0xc(%ebp),%eax
810071b4:	8b 40 10             	mov    0x10(%eax),%eax
810071b7:	83 ec 04             	sub    $0x4,%esp
810071ba:	52                   	push   %edx
810071bb:	50                   	push   %eax
810071bc:	ff 75 f4             	push   -0xc(%ebp)
810071bf:	e8 f4 d2 ff ff       	call   810044b8 <memcpy>
810071c4:	83 c4 10             	add    $0x10,%esp
810071c7:	8b 45 0c             	mov    0xc(%ebp),%eax
810071ca:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810071ce:	66 25 7f fb          	and    $0xfb7f,%ax
810071d2:	0c 80                	or     $0x80,%al
810071d4:	89 c2                	mov    %eax,%edx
810071d6:	8b 45 0c             	mov    0xc(%ebp),%eax
810071d9:	66 89 50 0c          	mov    %dx,0xc(%eax)
810071dd:	eb 42                	jmp    81007221 <__ssputs_r+0x124>
810071df:	8b 55 f0             	mov    -0x10(%ebp),%edx
810071e2:	8b 45 0c             	mov    0xc(%ebp),%eax
810071e5:	8b 40 10             	mov    0x10(%eax),%eax
810071e8:	83 ec 04             	sub    $0x4,%esp
810071eb:	52                   	push   %edx
810071ec:	50                   	push   %eax
810071ed:	ff 75 08             	push   0x8(%ebp)
810071f0:	e8 75 07 00 00       	call   8100796a <_realloc_r>
810071f5:	83 c4 10             	add    $0x10,%esp
810071f8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810071fb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810071ff:	75 20                	jne    81007221 <__ssputs_r+0x124>
81007201:	8b 45 0c             	mov    0xc(%ebp),%eax
81007204:	8b 40 10             	mov    0x10(%eax),%eax
81007207:	83 ec 08             	sub    $0x8,%esp
8100720a:	50                   	push   %eax
8100720b:	ff 75 08             	push   0x8(%ebp)
8100720e:	e8 d1 aa ff ff       	call   81001ce4 <_free_r>
81007213:	83 c4 10             	add    $0x10,%esp
81007216:	8b 45 08             	mov    0x8(%ebp),%eax
81007219:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100721f:	eb 76                	jmp    81007297 <__ssputs_r+0x19a>
81007221:	8b 45 0c             	mov    0xc(%ebp),%eax
81007224:	8b 55 f4             	mov    -0xc(%ebp),%edx
81007227:	89 50 10             	mov    %edx,0x10(%eax)
8100722a:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100722d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007230:	01 c2                	add    %eax,%edx
81007232:	8b 45 0c             	mov    0xc(%ebp),%eax
81007235:	89 10                	mov    %edx,(%eax)
81007237:	8b 45 0c             	mov    0xc(%ebp),%eax
8100723a:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100723d:	89 50 14             	mov    %edx,0x14(%eax)
81007240:	8b 5d 14             	mov    0x14(%ebp),%ebx
81007243:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007246:	2b 45 ec             	sub    -0x14(%ebp),%eax
81007249:	89 c2                	mov    %eax,%edx
8100724b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100724e:	89 50 08             	mov    %edx,0x8(%eax)
81007251:	89 d8                	mov    %ebx,%eax
81007253:	39 45 14             	cmp    %eax,0x14(%ebp)
81007256:	73 03                	jae    8100725b <__ssputs_r+0x15e>
81007258:	8b 5d 14             	mov    0x14(%ebp),%ebx
8100725b:	89 da                	mov    %ebx,%edx
8100725d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007260:	8b 00                	mov    (%eax),%eax
81007262:	83 ec 04             	sub    $0x4,%esp
81007265:	52                   	push   %edx
81007266:	ff 75 10             	push   0x10(%ebp)
81007269:	50                   	push   %eax
8100726a:	e8 01 fe ff ff       	call   81007070 <memmove>
8100726f:	83 c4 10             	add    $0x10,%esp
81007272:	8b 45 0c             	mov    0xc(%ebp),%eax
81007275:	8b 40 08             	mov    0x8(%eax),%eax
81007278:	29 d8                	sub    %ebx,%eax
8100727a:	89 c2                	mov    %eax,%edx
8100727c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100727f:	89 50 08             	mov    %edx,0x8(%eax)
81007282:	8b 45 0c             	mov    0xc(%ebp),%eax
81007285:	8b 00                	mov    (%eax),%eax
81007287:	89 da                	mov    %ebx,%edx
81007289:	01 c2                	add    %eax,%edx
8100728b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100728e:	89 10                	mov    %edx,(%eax)
81007290:	b8 00 00 00 00       	mov    $0x0,%eax
81007295:	eb 18                	jmp    810072af <__ssputs_r+0x1b2>
81007297:	8b 45 0c             	mov    0xc(%ebp),%eax
8100729a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100729e:	83 c8 40             	or     $0x40,%eax
810072a1:	89 c2                	mov    %eax,%edx
810072a3:	8b 45 0c             	mov    0xc(%ebp),%eax
810072a6:	66 89 50 0c          	mov    %dx,0xc(%eax)
810072aa:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810072af:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810072b2:	c9                   	leave  
810072b3:	c3                   	ret    

810072b4 <__ssprint_r>:
810072b4:	55                   	push   %ebp
810072b5:	89 e5                	mov    %esp,%ebp
810072b7:	57                   	push   %edi
810072b8:	56                   	push   %esi
810072b9:	53                   	push   %ebx
810072ba:	83 ec 2c             	sub    $0x2c,%esp
810072bd:	8b 5d 10             	mov    0x10(%ebp),%ebx
810072c0:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
810072c7:	8b 03                	mov    (%ebx),%eax
810072c9:	89 45 d0             	mov    %eax,-0x30(%ebp)
810072cc:	be 00 00 00 00       	mov    $0x0,%esi
810072d1:	8b 43 08             	mov    0x8(%ebx),%eax
810072d4:	85 c0                	test   %eax,%eax
810072d6:	75 22                	jne    810072fa <__ssprint_r+0x46>
810072d8:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810072df:	b8 00 00 00 00       	mov    $0x0,%eax
810072e4:	e9 f5 01 00 00       	jmp    810074de <__ssprint_r+0x22a>
810072e9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810072ec:	8b 08                	mov    (%eax),%ecx
810072ee:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
810072f1:	8b 70 04             	mov    0x4(%eax),%esi
810072f4:	83 c0 08             	add    $0x8,%eax
810072f7:	89 45 d0             	mov    %eax,-0x30(%ebp)
810072fa:	85 f6                	test   %esi,%esi
810072fc:	74 eb                	je     810072e9 <__ssprint_r+0x35>
810072fe:	8b 45 0c             	mov    0xc(%ebp),%eax
81007301:	8b 78 08             	mov    0x8(%eax),%edi
81007304:	89 f8                	mov    %edi,%eax
81007306:	39 c6                	cmp    %eax,%esi
81007308:	0f 82 38 01 00 00    	jb     81007446 <__ssprint_r+0x192>
8100730e:	8b 45 0c             	mov    0xc(%ebp),%eax
81007311:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007315:	98                   	cwtl   
81007316:	25 80 04 00 00       	and    $0x480,%eax
8100731b:	85 c0                	test   %eax,%eax
8100731d:	0f 84 23 01 00 00    	je     81007446 <__ssprint_r+0x192>
81007323:	8b 45 0c             	mov    0xc(%ebp),%eax
81007326:	8b 10                	mov    (%eax),%edx
81007328:	8b 45 0c             	mov    0xc(%ebp),%eax
8100732b:	8b 48 10             	mov    0x10(%eax),%ecx
8100732e:	89 d0                	mov    %edx,%eax
81007330:	29 c8                	sub    %ecx,%eax
81007332:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007335:	8b 45 0c             	mov    0xc(%ebp),%eax
81007338:	8b 50 14             	mov    0x14(%eax),%edx
8100733b:	89 d0                	mov    %edx,%eax
8100733d:	01 c0                	add    %eax,%eax
8100733f:	01 d0                	add    %edx,%eax
81007341:	89 c2                	mov    %eax,%edx
81007343:	c1 ea 1f             	shr    $0x1f,%edx
81007346:	01 d0                	add    %edx,%eax
81007348:	d1 f8                	sar    %eax
8100734a:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100734d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81007350:	01 f0                	add    %esi,%eax
81007352:	8d 50 01             	lea    0x1(%eax),%edx
81007355:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007358:	39 c2                	cmp    %eax,%edx
8100735a:	76 0b                	jbe    81007367 <__ssprint_r+0xb3>
8100735c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100735f:	01 f0                	add    %esi,%eax
81007361:	83 c0 01             	add    $0x1,%eax
81007364:	89 45 e0             	mov    %eax,-0x20(%ebp)
81007367:	8b 45 0c             	mov    0xc(%ebp),%eax
8100736a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100736e:	98                   	cwtl   
8100736f:	25 00 04 00 00       	and    $0x400,%eax
81007374:	85 c0                	test   %eax,%eax
81007376:	74 5a                	je     810073d2 <__ssprint_r+0x11e>
81007378:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100737b:	83 ec 08             	sub    $0x8,%esp
8100737e:	50                   	push   %eax
8100737f:	ff 75 08             	push   0x8(%ebp)
81007382:	e8 20 c8 ff ff       	call   81003ba7 <_malloc_r>
81007387:	83 c4 10             	add    $0x10,%esp
8100738a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100738d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81007391:	75 0e                	jne    810073a1 <__ssprint_r+0xed>
81007393:	8b 45 08             	mov    0x8(%ebp),%eax
81007396:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100739c:	e9 17 01 00 00       	jmp    810074b8 <__ssprint_r+0x204>
810073a1:	8b 55 dc             	mov    -0x24(%ebp),%edx
810073a4:	8b 45 0c             	mov    0xc(%ebp),%eax
810073a7:	8b 40 10             	mov    0x10(%eax),%eax
810073aa:	83 ec 04             	sub    $0x4,%esp
810073ad:	52                   	push   %edx
810073ae:	50                   	push   %eax
810073af:	ff 75 e4             	push   -0x1c(%ebp)
810073b2:	e8 01 d1 ff ff       	call   810044b8 <memcpy>
810073b7:	83 c4 10             	add    $0x10,%esp
810073ba:	8b 45 0c             	mov    0xc(%ebp),%eax
810073bd:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810073c1:	66 25 7f fb          	and    $0xfb7f,%ax
810073c5:	0c 80                	or     $0x80,%al
810073c7:	89 c2                	mov    %eax,%edx
810073c9:	8b 45 0c             	mov    0xc(%ebp),%eax
810073cc:	66 89 50 0c          	mov    %dx,0xc(%eax)
810073d0:	eb 45                	jmp    81007417 <__ssprint_r+0x163>
810073d2:	8b 55 e0             	mov    -0x20(%ebp),%edx
810073d5:	8b 45 0c             	mov    0xc(%ebp),%eax
810073d8:	8b 40 10             	mov    0x10(%eax),%eax
810073db:	83 ec 04             	sub    $0x4,%esp
810073de:	52                   	push   %edx
810073df:	50                   	push   %eax
810073e0:	ff 75 08             	push   0x8(%ebp)
810073e3:	e8 82 05 00 00       	call   8100796a <_realloc_r>
810073e8:	83 c4 10             	add    $0x10,%esp
810073eb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810073ee:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810073f2:	75 23                	jne    81007417 <__ssprint_r+0x163>
810073f4:	8b 45 0c             	mov    0xc(%ebp),%eax
810073f7:	8b 40 10             	mov    0x10(%eax),%eax
810073fa:	83 ec 08             	sub    $0x8,%esp
810073fd:	50                   	push   %eax
810073fe:	ff 75 08             	push   0x8(%ebp)
81007401:	e8 de a8 ff ff       	call   81001ce4 <_free_r>
81007406:	83 c4 10             	add    $0x10,%esp
81007409:	8b 45 08             	mov    0x8(%ebp),%eax
8100740c:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007412:	e9 a1 00 00 00       	jmp    810074b8 <__ssprint_r+0x204>
81007417:	8b 45 0c             	mov    0xc(%ebp),%eax
8100741a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100741d:	89 50 10             	mov    %edx,0x10(%eax)
81007420:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007423:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007426:	01 c2                	add    %eax,%edx
81007428:	8b 45 0c             	mov    0xc(%ebp),%eax
8100742b:	89 10                	mov    %edx,(%eax)
8100742d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007430:	8b 55 e0             	mov    -0x20(%ebp),%edx
81007433:	89 50 14             	mov    %edx,0x14(%eax)
81007436:	89 f7                	mov    %esi,%edi
81007438:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100743b:	2b 45 dc             	sub    -0x24(%ebp),%eax
8100743e:	89 c2                	mov    %eax,%edx
81007440:	8b 45 0c             	mov    0xc(%ebp),%eax
81007443:	89 50 08             	mov    %edx,0x8(%eax)
81007446:	89 f8                	mov    %edi,%eax
81007448:	39 c6                	cmp    %eax,%esi
8100744a:	73 02                	jae    8100744e <__ssprint_r+0x19a>
8100744c:	89 f7                	mov    %esi,%edi
8100744e:	89 fa                	mov    %edi,%edx
81007450:	8b 45 0c             	mov    0xc(%ebp),%eax
81007453:	8b 00                	mov    (%eax),%eax
81007455:	83 ec 04             	sub    $0x4,%esp
81007458:	52                   	push   %edx
81007459:	ff 75 d4             	push   -0x2c(%ebp)
8100745c:	50                   	push   %eax
8100745d:	e8 0e fc ff ff       	call   81007070 <memmove>
81007462:	83 c4 10             	add    $0x10,%esp
81007465:	8b 45 0c             	mov    0xc(%ebp),%eax
81007468:	8b 40 08             	mov    0x8(%eax),%eax
8100746b:	29 f8                	sub    %edi,%eax
8100746d:	89 c2                	mov    %eax,%edx
8100746f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007472:	89 50 08             	mov    %edx,0x8(%eax)
81007475:	8b 45 0c             	mov    0xc(%ebp),%eax
81007478:	8b 00                	mov    (%eax),%eax
8100747a:	89 fa                	mov    %edi,%edx
8100747c:	01 c2                	add    %eax,%edx
8100747e:	8b 45 0c             	mov    0xc(%ebp),%eax
81007481:	89 10                	mov    %edx,(%eax)
81007483:	89 f7                	mov    %esi,%edi
81007485:	89 f8                	mov    %edi,%eax
81007487:	01 45 d4             	add    %eax,-0x2c(%ebp)
8100748a:	89 f8                	mov    %edi,%eax
8100748c:	29 c6                	sub    %eax,%esi
8100748e:	8b 43 08             	mov    0x8(%ebx),%eax
81007491:	89 fa                	mov    %edi,%edx
81007493:	29 d0                	sub    %edx,%eax
81007495:	89 43 08             	mov    %eax,0x8(%ebx)
81007498:	8b 43 08             	mov    0x8(%ebx),%eax
8100749b:	85 c0                	test   %eax,%eax
8100749d:	0f 85 57 fe ff ff    	jne    810072fa <__ssprint_r+0x46>
810074a3:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810074aa:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810074b1:	b8 00 00 00 00       	mov    $0x0,%eax
810074b6:	eb 26                	jmp    810074de <__ssprint_r+0x22a>
810074b8:	8b 45 0c             	mov    0xc(%ebp),%eax
810074bb:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810074bf:	83 c8 40             	or     $0x40,%eax
810074c2:	89 c2                	mov    %eax,%edx
810074c4:	8b 45 0c             	mov    0xc(%ebp),%eax
810074c7:	66 89 50 0c          	mov    %dx,0xc(%eax)
810074cb:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810074d2:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810074d9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810074de:	8d 65 f4             	lea    -0xc(%ebp),%esp
810074e1:	5b                   	pop    %ebx
810074e2:	5e                   	pop    %esi
810074e3:	5f                   	pop    %edi
810074e4:	5d                   	pop    %ebp
810074e5:	c3                   	ret    

810074e6 <_svfiprintf_r>:
810074e6:	55                   	push   %ebp
810074e7:	89 e5                	mov    %esp,%ebp
810074e9:	57                   	push   %edi
810074ea:	56                   	push   %esi
810074eb:	53                   	push   %ebx
810074ec:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
810074f2:	c7 45 e4 fd 70 00 81 	movl   $0x810070fd,-0x1c(%ebp)
810074f9:	8b 45 0c             	mov    0xc(%ebp),%eax
810074fc:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007500:	98                   	cwtl   
81007501:	25 80 00 00 00       	and    $0x80,%eax
81007506:	85 c0                	test   %eax,%eax
81007508:	74 50                	je     8100755a <_svfiprintf_r+0x74>
8100750a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100750d:	8b 40 10             	mov    0x10(%eax),%eax
81007510:	85 c0                	test   %eax,%eax
81007512:	75 46                	jne    8100755a <_svfiprintf_r+0x74>
81007514:	83 ec 08             	sub    $0x8,%esp
81007517:	6a 40                	push   $0x40
81007519:	ff 75 08             	push   0x8(%ebp)
8100751c:	e8 86 c6 ff ff       	call   81003ba7 <_malloc_r>
81007521:	83 c4 10             	add    $0x10,%esp
81007524:	8b 55 0c             	mov    0xc(%ebp),%edx
81007527:	89 02                	mov    %eax,(%edx)
81007529:	8b 45 0c             	mov    0xc(%ebp),%eax
8100752c:	8b 10                	mov    (%eax),%edx
8100752e:	8b 45 0c             	mov    0xc(%ebp),%eax
81007531:	89 50 10             	mov    %edx,0x10(%eax)
81007534:	8b 45 0c             	mov    0xc(%ebp),%eax
81007537:	8b 00                	mov    (%eax),%eax
81007539:	85 c0                	test   %eax,%eax
8100753b:	75 13                	jne    81007550 <_svfiprintf_r+0x6a>
8100753d:	8b 45 08             	mov    0x8(%ebp),%eax
81007540:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007546:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100754b:	e9 c8 02 00 00       	jmp    81007818 <_svfiprintf_r+0x332>
81007550:	8b 45 0c             	mov    0xc(%ebp),%eax
81007553:	c7 40 14 40 00 00 00 	movl   $0x40,0x14(%eax)
8100755a:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100755d:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%ebp)
81007564:	c6 45 9d 20          	movb   $0x20,-0x63(%ebp)
81007568:	c6 45 9e 30          	movb   $0x30,-0x62(%ebp)
8100756c:	8b 45 14             	mov    0x14(%ebp),%eax
8100756f:	89 45 80             	mov    %eax,-0x80(%ebp)
81007572:	89 de                	mov    %ebx,%esi
81007574:	eb 03                	jmp    81007579 <_svfiprintf_r+0x93>
81007576:	83 c3 01             	add    $0x1,%ebx
81007579:	0f b6 03             	movzbl (%ebx),%eax
8100757c:	84 c0                	test   %al,%al
8100757e:	74 07                	je     81007587 <_svfiprintf_r+0xa1>
81007580:	0f b6 03             	movzbl (%ebx),%eax
81007583:	3c 25                	cmp    $0x25,%al
81007585:	75 ef                	jne    81007576 <_svfiprintf_r+0x90>
81007587:	89 d8                	mov    %ebx,%eax
81007589:	29 f0                	sub    %esi,%eax
8100758b:	85 c0                	test   %eax,%eax
8100758d:	74 2b                	je     810075ba <_svfiprintf_r+0xd4>
8100758f:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81007595:	50                   	push   %eax
81007596:	56                   	push   %esi
81007597:	ff 75 0c             	push   0xc(%ebp)
8100759a:	ff 75 08             	push   0x8(%ebp)
8100759d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810075a0:	ff d0                	call   *%eax
810075a2:	83 c4 10             	add    $0x10,%esp
810075a5:	83 f8 ff             	cmp    $0xffffffff,%eax
810075a8:	0f 84 4a 02 00 00    	je     810077f8 <_svfiprintf_r+0x312>
810075ae:	8b 45 98             	mov    -0x68(%ebp),%eax
810075b1:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
810075b7:	89 45 98             	mov    %eax,-0x68(%ebp)
810075ba:	0f b6 03             	movzbl (%ebx),%eax
810075bd:	84 c0                	test   %al,%al
810075bf:	0f 84 36 02 00 00    	je     810077fb <_svfiprintf_r+0x315>
810075c5:	83 c3 01             	add    $0x1,%ebx
810075c8:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
810075cf:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)
810075d6:	c7 45 88 ff ff ff ff 	movl   $0xffffffff,-0x78(%ebp)
810075dd:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
810075e4:	c6 45 c7 00          	movb   $0x0,-0x39(%ebp)
810075e8:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
810075ef:	c7 45 e0 ec 8c 00 81 	movl   $0x81008cec,-0x20(%ebp)
810075f6:	eb 1b                	jmp    81007613 <_svfiprintf_r+0x12d>
810075f8:	8b 55 84             	mov    -0x7c(%ebp),%edx
810075fb:	89 f0                	mov    %esi,%eax
810075fd:	2b 45 e0             	sub    -0x20(%ebp),%eax
81007600:	be 01 00 00 00       	mov    $0x1,%esi
81007605:	89 c1                	mov    %eax,%ecx
81007607:	d3 e6                	shl    %cl,%esi
81007609:	89 f0                	mov    %esi,%eax
8100760b:	09 d0                	or     %edx,%eax
8100760d:	89 45 84             	mov    %eax,-0x7c(%ebp)
81007610:	83 c3 01             	add    $0x1,%ebx
81007613:	0f b6 03             	movzbl (%ebx),%eax
81007616:	0f be c0             	movsbl %al,%eax
81007619:	83 ec 04             	sub    $0x4,%esp
8100761c:	6a 05                	push   $0x5
8100761e:	50                   	push   %eax
8100761f:	ff 75 e0             	push   -0x20(%ebp)
81007622:	e8 a9 cd ff ff       	call   810043d0 <memchr>
81007627:	83 c4 10             	add    $0x10,%esp
8100762a:	89 c6                	mov    %eax,%esi
8100762c:	85 f6                	test   %esi,%esi
8100762e:	75 c8                	jne    810075f8 <_svfiprintf_r+0x112>
81007630:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007633:	83 e0 10             	and    $0x10,%eax
81007636:	85 c0                	test   %eax,%eax
81007638:	74 04                	je     8100763e <_svfiprintf_r+0x158>
8100763a:	c6 45 c7 20          	movb   $0x20,-0x39(%ebp)
8100763e:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007641:	83 e0 08             	and    $0x8,%eax
81007644:	85 c0                	test   %eax,%eax
81007646:	74 04                	je     8100764c <_svfiprintf_r+0x166>
81007648:	c6 45 c7 2b          	movb   $0x2b,-0x39(%ebp)
8100764c:	0f b6 03             	movzbl (%ebx),%eax
8100764f:	3c 2a                	cmp    $0x2a,%al
81007651:	75 4a                	jne    8100769d <_svfiprintf_r+0x1b7>
81007653:	8b 45 80             	mov    -0x80(%ebp),%eax
81007656:	8d 50 04             	lea    0x4(%eax),%edx
81007659:	89 55 80             	mov    %edx,-0x80(%ebp)
8100765c:	8b 00                	mov    (%eax),%eax
8100765e:	89 45 90             	mov    %eax,-0x70(%ebp)
81007661:	8b 45 90             	mov    -0x70(%ebp),%eax
81007664:	85 c0                	test   %eax,%eax
81007666:	79 11                	jns    81007679 <_svfiprintf_r+0x193>
81007668:	8b 45 90             	mov    -0x70(%ebp),%eax
8100766b:	f7 d8                	neg    %eax
8100766d:	89 45 90             	mov    %eax,-0x70(%ebp)
81007670:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007673:	83 c8 02             	or     $0x2,%eax
81007676:	89 45 84             	mov    %eax,-0x7c(%ebp)
81007679:	83 c3 01             	add    $0x1,%ebx
8100767c:	eb 2d                	jmp    810076ab <_svfiprintf_r+0x1c5>
8100767e:	8b 55 90             	mov    -0x70(%ebp),%edx
81007681:	89 d0                	mov    %edx,%eax
81007683:	c1 e0 02             	shl    $0x2,%eax
81007686:	01 d0                	add    %edx,%eax
81007688:	01 c0                	add    %eax,%eax
8100768a:	89 c2                	mov    %eax,%edx
8100768c:	0f b6 03             	movzbl (%ebx),%eax
8100768f:	0f be c0             	movsbl %al,%eax
81007692:	83 e8 30             	sub    $0x30,%eax
81007695:	01 d0                	add    %edx,%eax
81007697:	89 45 90             	mov    %eax,-0x70(%ebp)
8100769a:	83 c3 01             	add    $0x1,%ebx
8100769d:	0f b6 03             	movzbl (%ebx),%eax
810076a0:	0f be c0             	movsbl %al,%eax
810076a3:	83 e8 30             	sub    $0x30,%eax
810076a6:	83 f8 09             	cmp    $0x9,%eax
810076a9:	76 d3                	jbe    8100767e <_svfiprintf_r+0x198>
810076ab:	0f b6 03             	movzbl (%ebx),%eax
810076ae:	3c 2e                	cmp    $0x2e,%al
810076b0:	75 61                	jne    81007713 <_svfiprintf_r+0x22d>
810076b2:	83 c3 01             	add    $0x1,%ebx
810076b5:	0f b6 03             	movzbl (%ebx),%eax
810076b8:	3c 2a                	cmp    $0x2a,%al
810076ba:	75 21                	jne    810076dd <_svfiprintf_r+0x1f7>
810076bc:	83 c3 01             	add    $0x1,%ebx
810076bf:	8b 45 80             	mov    -0x80(%ebp),%eax
810076c2:	8d 50 04             	lea    0x4(%eax),%edx
810076c5:	89 55 80             	mov    %edx,-0x80(%ebp)
810076c8:	8b 00                	mov    (%eax),%eax
810076ca:	89 45 88             	mov    %eax,-0x78(%ebp)
810076cd:	8b 45 88             	mov    -0x78(%ebp),%eax
810076d0:	85 c0                	test   %eax,%eax
810076d2:	79 3f                	jns    81007713 <_svfiprintf_r+0x22d>
810076d4:	c7 45 88 ff ff ff ff 	movl   $0xffffffff,-0x78(%ebp)
810076db:	eb 36                	jmp    81007713 <_svfiprintf_r+0x22d>
810076dd:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
810076e4:	eb 1f                	jmp    81007705 <_svfiprintf_r+0x21f>
810076e6:	8b 55 88             	mov    -0x78(%ebp),%edx
810076e9:	89 d0                	mov    %edx,%eax
810076eb:	c1 e0 02             	shl    $0x2,%eax
810076ee:	01 d0                	add    %edx,%eax
810076f0:	01 c0                	add    %eax,%eax
810076f2:	89 c2                	mov    %eax,%edx
810076f4:	0f b6 03             	movzbl (%ebx),%eax
810076f7:	0f be c0             	movsbl %al,%eax
810076fa:	83 e8 30             	sub    $0x30,%eax
810076fd:	01 d0                	add    %edx,%eax
810076ff:	89 45 88             	mov    %eax,-0x78(%ebp)
81007702:	83 c3 01             	add    $0x1,%ebx
81007705:	0f b6 03             	movzbl (%ebx),%eax
81007708:	0f be c0             	movsbl %al,%eax
8100770b:	83 e8 30             	sub    $0x30,%eax
8100770e:	83 f8 09             	cmp    $0x9,%eax
81007711:	76 d3                	jbe    810076e6 <_svfiprintf_r+0x200>
81007713:	c7 45 e0 f2 8c 00 81 	movl   $0x81008cf2,-0x20(%ebp)
8100771a:	0f b6 03             	movzbl (%ebx),%eax
8100771d:	0f be c0             	movsbl %al,%eax
81007720:	83 ec 04             	sub    $0x4,%esp
81007723:	6a 03                	push   $0x3
81007725:	50                   	push   %eax
81007726:	ff 75 e0             	push   -0x20(%ebp)
81007729:	e8 a2 cc ff ff       	call   810043d0 <memchr>
8100772e:	83 c4 10             	add    $0x10,%esp
81007731:	89 c6                	mov    %eax,%esi
81007733:	85 f6                	test   %esi,%esi
81007735:	74 1b                	je     81007752 <_svfiprintf_r+0x26c>
81007737:	8b 55 84             	mov    -0x7c(%ebp),%edx
8100773a:	89 f0                	mov    %esi,%eax
8100773c:	2b 45 e0             	sub    -0x20(%ebp),%eax
8100773f:	be 40 00 00 00       	mov    $0x40,%esi
81007744:	89 c1                	mov    %eax,%ecx
81007746:	d3 e6                	shl    %cl,%esi
81007748:	89 f0                	mov    %esi,%eax
8100774a:	09 d0                	or     %edx,%eax
8100774c:	89 45 84             	mov    %eax,-0x7c(%ebp)
8100774f:	83 c3 01             	add    $0x1,%ebx
81007752:	89 d8                	mov    %ebx,%eax
81007754:	8d 58 01             	lea    0x1(%eax),%ebx
81007757:	0f b6 00             	movzbl (%eax),%eax
8100775a:	88 45 9c             	mov    %al,-0x64(%ebp)
8100775d:	0f b6 45 9c          	movzbl -0x64(%ebp),%eax
81007761:	0f be c0             	movsbl %al,%eax
81007764:	83 ec 04             	sub    $0x4,%esp
81007767:	6a 06                	push   $0x6
81007769:	50                   	push   %eax
8100776a:	68 f6 8c 00 81       	push   $0x81008cf6
8100776f:	e8 5c cc ff ff       	call   810043d0 <memchr>
81007774:	83 c4 10             	add    $0x10,%esp
81007777:	89 c6                	mov    %eax,%esi
81007779:	85 f6                	test   %esi,%esi
8100777b:	74 4b                	je     810077c8 <_svfiprintf_r+0x2e2>
8100777d:	b8 00 00 00 00       	mov    $0x0,%eax
81007782:	85 c0                	test   %eax,%eax
81007784:	75 22                	jne    810077a8 <_svfiprintf_r+0x2c2>
81007786:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007789:	25 00 01 00 00       	and    $0x100,%eax
8100778e:	85 c0                	test   %eax,%eax
81007790:	74 0b                	je     8100779d <_svfiprintf_r+0x2b7>
81007792:	8b 45 80             	mov    -0x80(%ebp),%eax
81007795:	83 c0 0c             	add    $0xc,%eax
81007798:	89 45 80             	mov    %eax,-0x80(%ebp)
8100779b:	eb 49                	jmp    810077e6 <_svfiprintf_r+0x300>
8100779d:	8b 45 80             	mov    -0x80(%ebp),%eax
810077a0:	83 c0 08             	add    $0x8,%eax
810077a3:	89 45 80             	mov    %eax,-0x80(%ebp)
810077a6:	eb 3e                	jmp    810077e6 <_svfiprintf_r+0x300>
810077a8:	83 ec 0c             	sub    $0xc,%esp
810077ab:	8d 45 80             	lea    -0x80(%ebp),%eax
810077ae:	50                   	push   %eax
810077af:	ff 75 e4             	push   -0x1c(%ebp)
810077b2:	ff 75 0c             	push   0xc(%ebp)
810077b5:	8d 45 84             	lea    -0x7c(%ebp),%eax
810077b8:	50                   	push   %eax
810077b9:	ff 75 08             	push   0x8(%ebp)
810077bc:	e8 3f 88 ff 7e       	call   0 <do_help-0x81000000>
810077c1:	83 c4 20             	add    $0x20,%esp
810077c4:	89 c7                	mov    %eax,%edi
810077c6:	eb 1e                	jmp    810077e6 <_svfiprintf_r+0x300>
810077c8:	83 ec 0c             	sub    $0xc,%esp
810077cb:	8d 45 80             	lea    -0x80(%ebp),%eax
810077ce:	50                   	push   %eax
810077cf:	ff 75 e4             	push   -0x1c(%ebp)
810077d2:	ff 75 0c             	push   0xc(%ebp)
810077d5:	8d 45 84             	lea    -0x7c(%ebp),%eax
810077d8:	50                   	push   %eax
810077d9:	ff 75 08             	push   0x8(%ebp)
810077dc:	e8 b3 d4 ff ff       	call   81004c94 <_printf_i>
810077e1:	83 c4 20             	add    $0x20,%esp
810077e4:	89 c7                	mov    %eax,%edi
810077e6:	83 ff ff             	cmp    $0xffffffff,%edi
810077e9:	74 13                	je     810077fe <_svfiprintf_r+0x318>
810077eb:	8b 45 98             	mov    -0x68(%ebp),%eax
810077ee:	01 f8                	add    %edi,%eax
810077f0:	89 45 98             	mov    %eax,-0x68(%ebp)
810077f3:	e9 7a fd ff ff       	jmp    81007572 <_svfiprintf_r+0x8c>
810077f8:	90                   	nop
810077f9:	eb 04                	jmp    810077ff <_svfiprintf_r+0x319>
810077fb:	90                   	nop
810077fc:	eb 01                	jmp    810077ff <_svfiprintf_r+0x319>
810077fe:	90                   	nop
810077ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81007802:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007806:	98                   	cwtl   
81007807:	83 e0 40             	and    $0x40,%eax
8100780a:	85 c0                	test   %eax,%eax
8100780c:	75 05                	jne    81007813 <_svfiprintf_r+0x32d>
8100780e:	8b 45 98             	mov    -0x68(%ebp),%eax
81007811:	eb 05                	jmp    81007818 <_svfiprintf_r+0x332>
81007813:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007818:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100781b:	5b                   	pop    %ebx
8100781c:	5e                   	pop    %esi
8100781d:	5f                   	pop    %edi
8100781e:	5d                   	pop    %ebp
8100781f:	c3                   	ret    

81007820 <__sputc_r>:
81007820:	55                   	push   %ebp
81007821:	89 e5                	mov    %esp,%ebp
81007823:	83 ec 08             	sub    $0x8,%esp
81007826:	8b 45 10             	mov    0x10(%ebp),%eax
81007829:	8b 40 08             	mov    0x8(%eax),%eax
8100782c:	8d 50 ff             	lea    -0x1(%eax),%edx
8100782f:	8b 45 10             	mov    0x10(%ebp),%eax
81007832:	89 50 08             	mov    %edx,0x8(%eax)
81007835:	8b 45 10             	mov    0x10(%ebp),%eax
81007838:	8b 40 08             	mov    0x8(%eax),%eax
8100783b:	85 c0                	test   %eax,%eax
8100783d:	79 17                	jns    81007856 <__sputc_r+0x36>
8100783f:	8b 45 10             	mov    0x10(%ebp),%eax
81007842:	8b 50 08             	mov    0x8(%eax),%edx
81007845:	8b 45 10             	mov    0x10(%ebp),%eax
81007848:	8b 40 18             	mov    0x18(%eax),%eax
8100784b:	39 c2                	cmp    %eax,%edx
8100784d:	7c 21                	jl     81007870 <__sputc_r+0x50>
8100784f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007852:	3c 0a                	cmp    $0xa,%al
81007854:	74 1a                	je     81007870 <__sputc_r+0x50>
81007856:	8b 45 10             	mov    0x10(%ebp),%eax
81007859:	8b 00                	mov    (%eax),%eax
8100785b:	8d 48 01             	lea    0x1(%eax),%ecx
8100785e:	8b 55 10             	mov    0x10(%ebp),%edx
81007861:	89 0a                	mov    %ecx,(%edx)
81007863:	8b 55 0c             	mov    0xc(%ebp),%edx
81007866:	88 10                	mov    %dl,(%eax)
81007868:	0f b6 00             	movzbl (%eax),%eax
8100786b:	0f b6 c0             	movzbl %al,%eax
8100786e:	eb 14                	jmp    81007884 <__sputc_r+0x64>
81007870:	83 ec 04             	sub    $0x4,%esp
81007873:	ff 75 10             	push   0x10(%ebp)
81007876:	ff 75 0c             	push   0xc(%ebp)
81007879:	ff 75 08             	push   0x8(%ebp)
8100787c:	e8 6e e7 ff ff       	call   81005fef <__swbuf_r>
81007881:	83 c4 10             	add    $0x10,%esp
81007884:	c9                   	leave  
81007885:	c3                   	ret    

81007886 <_putc_r>:
81007886:	55                   	push   %ebp
81007887:	89 e5                	mov    %esp,%ebp
81007889:	53                   	push   %ebx
8100788a:	83 ec 14             	sub    $0x14,%esp
8100788d:	8b 5d 10             	mov    0x10(%ebp),%ebx
81007890:	8b 45 08             	mov    0x8(%ebp),%eax
81007893:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007896:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100789a:	74 18                	je     810078b4 <_putc_r+0x2e>
8100789c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100789f:	8b 40 38             	mov    0x38(%eax),%eax
810078a2:	85 c0                	test   %eax,%eax
810078a4:	75 0e                	jne    810078b4 <_putc_r+0x2e>
810078a6:	83 ec 0c             	sub    $0xc,%esp
810078a9:	ff 75 f4             	push   -0xc(%ebp)
810078ac:	e8 43 9f ff ff       	call   810017f4 <__sinit>
810078b1:	83 c4 10             	add    $0x10,%esp
810078b4:	83 ec 04             	sub    $0x4,%esp
810078b7:	53                   	push   %ebx
810078b8:	ff 75 0c             	push   0xc(%ebp)
810078bb:	ff 75 08             	push   0x8(%ebp)
810078be:	e8 5d ff ff ff       	call   81007820 <__sputc_r>
810078c3:	83 c4 10             	add    $0x10,%esp
810078c6:	89 45 f0             	mov    %eax,-0x10(%ebp)
810078c9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810078cc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810078cf:	c9                   	leave  
810078d0:	c3                   	ret    

810078d1 <putc>:
810078d1:	55                   	push   %ebp
810078d2:	89 e5                	mov    %esp,%ebp
810078d4:	53                   	push   %ebx
810078d5:	83 ec 14             	sub    $0x14,%esp
810078d8:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810078db:	a1 44 91 00 81       	mov    0x81009144,%eax
810078e0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810078e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810078e6:	89 45 f0             	mov    %eax,-0x10(%ebp)
810078e9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810078ed:	74 18                	je     81007907 <putc+0x36>
810078ef:	8b 45 f0             	mov    -0x10(%ebp),%eax
810078f2:	8b 40 38             	mov    0x38(%eax),%eax
810078f5:	85 c0                	test   %eax,%eax
810078f7:	75 0e                	jne    81007907 <putc+0x36>
810078f9:	83 ec 0c             	sub    $0xc,%esp
810078fc:	ff 75 f0             	push   -0x10(%ebp)
810078ff:	e8 f0 9e ff ff       	call   810017f4 <__sinit>
81007904:	83 c4 10             	add    $0x10,%esp
81007907:	83 ec 04             	sub    $0x4,%esp
8100790a:	53                   	push   %ebx
8100790b:	ff 75 08             	push   0x8(%ebp)
8100790e:	ff 75 f4             	push   -0xc(%ebp)
81007911:	e8 0a ff ff ff       	call   81007820 <__sputc_r>
81007916:	83 c4 10             	add    $0x10,%esp
81007919:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100791c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100791f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81007922:	c9                   	leave  
81007923:	c3                   	ret    

81007924 <_read_r>:
81007924:	55                   	push   %ebp
81007925:	89 e5                	mov    %esp,%ebp
81007927:	83 ec 18             	sub    $0x18,%esp
8100792a:	c7 05 8c 9e 00 81 00 	movl   $0x0,0x81009e8c
81007931:	00 00 00 
81007934:	83 ec 04             	sub    $0x4,%esp
81007937:	ff 75 14             	push   0x14(%ebp)
8100793a:	ff 75 10             	push   0x10(%ebp)
8100793d:	ff 75 0c             	push   0xc(%ebp)
81007940:	e8 38 93 ff ff       	call   81000c7d <read>
81007945:	83 c4 10             	add    $0x10,%esp
81007948:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100794b:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100794f:	75 14                	jne    81007965 <_read_r+0x41>
81007951:	a1 8c 9e 00 81       	mov    0x81009e8c,%eax
81007956:	85 c0                	test   %eax,%eax
81007958:	74 0b                	je     81007965 <_read_r+0x41>
8100795a:	8b 15 8c 9e 00 81    	mov    0x81009e8c,%edx
81007960:	8b 45 08             	mov    0x8(%ebp),%eax
81007963:	89 10                	mov    %edx,(%eax)
81007965:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007968:	c9                   	leave  
81007969:	c3                   	ret    

8100796a <_realloc_r>:
8100796a:	55                   	push   %ebp
8100796b:	89 e5                	mov    %esp,%ebp
8100796d:	83 ec 78             	sub    $0x78,%esp
81007970:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007974:	75 16                	jne    8100798c <_realloc_r+0x22>
81007976:	83 ec 08             	sub    $0x8,%esp
81007979:	ff 75 10             	push   0x10(%ebp)
8100797c:	ff 75 08             	push   0x8(%ebp)
8100797f:	e8 23 c2 ff ff       	call   81003ba7 <_malloc_r>
81007984:	83 c4 10             	add    $0x10,%esp
81007987:	e9 b6 08 00 00       	jmp    81008242 <_realloc_r+0x8d8>
8100798c:	83 ec 0c             	sub    $0xc,%esp
8100798f:	ff 75 08             	push   0x8(%ebp)
81007992:	e8 f1 cb ff ff       	call   81004588 <__malloc_lock>
81007997:	83 c4 10             	add    $0x10,%esp
8100799a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100799d:	83 e8 08             	sub    $0x8,%eax
810079a0:	89 45 c4             	mov    %eax,-0x3c(%ebp)
810079a3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810079a6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810079a9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810079ac:	8b 40 04             	mov    0x4(%eax),%eax
810079af:	83 e0 fc             	and    $0xfffffffc,%eax
810079b2:	89 45 c0             	mov    %eax,-0x40(%ebp)
810079b5:	8b 45 c0             	mov    -0x40(%ebp),%eax
810079b8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810079bb:	8b 45 10             	mov    0x10(%ebp),%eax
810079be:	83 c0 0b             	add    $0xb,%eax
810079c1:	83 f8 16             	cmp    $0x16,%eax
810079c4:	76 0b                	jbe    810079d1 <_realloc_r+0x67>
810079c6:	8b 45 10             	mov    0x10(%ebp),%eax
810079c9:	83 c0 0b             	add    $0xb,%eax
810079cc:	83 e0 f8             	and    $0xfffffff8,%eax
810079cf:	eb 05                	jmp    810079d6 <_realloc_r+0x6c>
810079d1:	b8 10 00 00 00       	mov    $0x10,%eax
810079d6:	89 45 bc             	mov    %eax,-0x44(%ebp)
810079d9:	8b 45 bc             	mov    -0x44(%ebp),%eax
810079dc:	85 c0                	test   %eax,%eax
810079de:	78 08                	js     810079e8 <_realloc_r+0x7e>
810079e0:	8b 45 bc             	mov    -0x44(%ebp),%eax
810079e3:	3b 45 10             	cmp    0x10(%ebp),%eax
810079e6:	73 13                	jae    810079fb <_realloc_r+0x91>
810079e8:	8b 45 08             	mov    0x8(%ebp),%eax
810079eb:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810079f1:	b8 00 00 00 00       	mov    $0x0,%eax
810079f6:	e9 47 08 00 00       	jmp    81008242 <_realloc_r+0x8d8>
810079fb:	8b 55 c0             	mov    -0x40(%ebp),%edx
810079fe:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007a01:	39 c2                	cmp    %eax,%edx
81007a03:	0f 8d 8b 07 00 00    	jge    81008194 <_realloc_r+0x82a>
81007a09:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81007a0c:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007a0f:	01 d0                	add    %edx,%eax
81007a11:	89 45 ec             	mov    %eax,-0x14(%ebp)
81007a14:	b8 60 91 00 81       	mov    $0x81009160,%eax
81007a19:	8b 40 08             	mov    0x8(%eax),%eax
81007a1c:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81007a1f:	74 1e                	je     81007a3f <_realloc_r+0xd5>
81007a21:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007a24:	8b 40 04             	mov    0x4(%eax),%eax
81007a27:	83 e0 fe             	and    $0xfffffffe,%eax
81007a2a:	89 c2                	mov    %eax,%edx
81007a2c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007a2f:	01 d0                	add    %edx,%eax
81007a31:	8b 40 04             	mov    0x4(%eax),%eax
81007a34:	83 e0 01             	and    $0x1,%eax
81007a37:	85 c0                	test   %eax,%eax
81007a39:	0f 85 ca 00 00 00    	jne    81007b09 <_realloc_r+0x19f>
81007a3f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007a42:	8b 40 04             	mov    0x4(%eax),%eax
81007a45:	83 e0 fc             	and    $0xfffffffc,%eax
81007a48:	89 45 e8             	mov    %eax,-0x18(%ebp)
81007a4b:	b8 60 91 00 81       	mov    $0x81009160,%eax
81007a50:	8b 40 08             	mov    0x8(%eax),%eax
81007a53:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81007a56:	75 71                	jne    81007ac9 <_realloc_r+0x15f>
81007a58:	8b 55 e8             	mov    -0x18(%ebp),%edx
81007a5b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007a5e:	01 d0                	add    %edx,%eax
81007a60:	89 c2                	mov    %eax,%edx
81007a62:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007a65:	83 c0 10             	add    $0x10,%eax
81007a68:	39 c2                	cmp    %eax,%edx
81007a6a:	0f 8c a9 00 00 00    	jl     81007b19 <_realloc_r+0x1af>
81007a70:	8b 45 e8             	mov    -0x18(%ebp),%eax
81007a73:	01 45 f0             	add    %eax,-0x10(%ebp)
81007a76:	ba 60 91 00 81       	mov    $0x81009160,%edx
81007a7b:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81007a7e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007a81:	01 c8                	add    %ecx,%eax
81007a83:	89 42 08             	mov    %eax,0x8(%edx)
81007a86:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007a89:	2b 45 bc             	sub    -0x44(%ebp),%eax
81007a8c:	89 c2                	mov    %eax,%edx
81007a8e:	b8 60 91 00 81       	mov    $0x81009160,%eax
81007a93:	8b 40 08             	mov    0x8(%eax),%eax
81007a96:	83 ca 01             	or     $0x1,%edx
81007a99:	89 50 04             	mov    %edx,0x4(%eax)
81007a9c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007a9f:	8b 40 04             	mov    0x4(%eax),%eax
81007aa2:	83 e0 01             	and    $0x1,%eax
81007aa5:	0b 45 bc             	or     -0x44(%ebp),%eax
81007aa8:	89 c2                	mov    %eax,%edx
81007aaa:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007aad:	89 50 04             	mov    %edx,0x4(%eax)
81007ab0:	83 ec 0c             	sub    $0xc,%esp
81007ab3:	ff 75 08             	push   0x8(%ebp)
81007ab6:	e8 d3 ca ff ff       	call   8100458e <__malloc_unlock>
81007abb:	83 c4 10             	add    $0x10,%esp
81007abe:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007ac1:	83 c0 08             	add    $0x8,%eax
81007ac4:	e9 79 07 00 00       	jmp    81008242 <_realloc_r+0x8d8>
81007ac9:	8b 55 e8             	mov    -0x18(%ebp),%edx
81007acc:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007acf:	01 d0                	add    %edx,%eax
81007ad1:	89 c2                	mov    %eax,%edx
81007ad3:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007ad6:	39 c2                	cmp    %eax,%edx
81007ad8:	7c 3f                	jl     81007b19 <_realloc_r+0x1af>
81007ada:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007add:	8b 40 0c             	mov    0xc(%eax),%eax
81007ae0:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007ae3:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007ae6:	8b 40 08             	mov    0x8(%eax),%eax
81007ae9:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81007aec:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81007aef:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007af2:	89 50 0c             	mov    %edx,0xc(%eax)
81007af5:	8b 45 b8             	mov    -0x48(%ebp),%eax
81007af8:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81007afb:	89 50 08             	mov    %edx,0x8(%eax)
81007afe:	8b 45 e8             	mov    -0x18(%ebp),%eax
81007b01:	01 45 f0             	add    %eax,-0x10(%ebp)
81007b04:	e9 8c 06 00 00       	jmp    81008195 <_realloc_r+0x82b>
81007b09:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81007b10:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81007b17:	eb 01                	jmp    81007b1a <_realloc_r+0x1b0>
81007b19:	90                   	nop
81007b1a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007b1d:	8b 40 04             	mov    0x4(%eax),%eax
81007b20:	83 e0 01             	and    $0x1,%eax
81007b23:	85 c0                	test   %eax,%eax
81007b25:	0f 85 d6 04 00 00    	jne    81008001 <_realloc_r+0x697>
81007b2b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007b2e:	8b 00                	mov    (%eax),%eax
81007b30:	f7 d8                	neg    %eax
81007b32:	89 c2                	mov    %eax,%edx
81007b34:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007b37:	01 d0                	add    %edx,%eax
81007b39:	89 45 b0             	mov    %eax,-0x50(%ebp)
81007b3c:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007b3f:	8b 40 04             	mov    0x4(%eax),%eax
81007b42:	83 e0 fc             	and    $0xfffffffc,%eax
81007b45:	89 45 ac             	mov    %eax,-0x54(%ebp)
81007b48:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81007b4c:	0f 84 4a 03 00 00    	je     81007e9c <_realloc_r+0x532>
81007b52:	b8 60 91 00 81       	mov    $0x81009160,%eax
81007b57:	8b 40 08             	mov    0x8(%eax),%eax
81007b5a:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81007b5d:	0f 85 b0 01 00 00    	jne    81007d13 <_realloc_r+0x3a9>
81007b63:	8b 55 e8             	mov    -0x18(%ebp),%edx
81007b66:	8b 45 ac             	mov    -0x54(%ebp),%eax
81007b69:	01 c2                	add    %eax,%edx
81007b6b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007b6e:	01 d0                	add    %edx,%eax
81007b70:	89 c2                	mov    %eax,%edx
81007b72:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007b75:	83 c0 10             	add    $0x10,%eax
81007b78:	39 c2                	cmp    %eax,%edx
81007b7a:	0f 8c 1c 03 00 00    	jl     81007e9c <_realloc_r+0x532>
81007b80:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007b83:	8b 40 0c             	mov    0xc(%eax),%eax
81007b86:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007b89:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007b8c:	8b 40 08             	mov    0x8(%eax),%eax
81007b8f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81007b92:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81007b95:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007b98:	89 50 0c             	mov    %edx,0xc(%eax)
81007b9b:	8b 45 b8             	mov    -0x48(%ebp),%eax
81007b9e:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81007ba1:	89 50 08             	mov    %edx,0x8(%eax)
81007ba4:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007ba7:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007baa:	8b 55 ac             	mov    -0x54(%ebp),%edx
81007bad:	8b 45 e8             	mov    -0x18(%ebp),%eax
81007bb0:	01 d0                	add    %edx,%eax
81007bb2:	01 45 f0             	add    %eax,-0x10(%ebp)
81007bb5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007bb8:	83 c0 08             	add    $0x8,%eax
81007bbb:	89 45 a8             	mov    %eax,-0x58(%ebp)
81007bbe:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007bc1:	83 e8 04             	sub    $0x4,%eax
81007bc4:	89 45 a0             	mov    %eax,-0x60(%ebp)
81007bc7:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81007bcb:	0f 87 de 00 00 00    	ja     81007caf <_realloc_r+0x345>
81007bd1:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bd4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007bd7:	8b 45 a8             	mov    -0x58(%ebp),%eax
81007bda:	89 45 e0             	mov    %eax,-0x20(%ebp)
81007bdd:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81007be1:	0f 86 90 00 00 00    	jbe    81007c77 <_realloc_r+0x30d>
81007be7:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007bea:	8d 42 04             	lea    0x4(%edx),%eax
81007bed:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007bf0:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007bf3:	8d 48 04             	lea    0x4(%eax),%ecx
81007bf6:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007bf9:	8b 12                	mov    (%edx),%edx
81007bfb:	89 10                	mov    %edx,(%eax)
81007bfd:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007c00:	8d 42 04             	lea    0x4(%edx),%eax
81007c03:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007c06:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007c09:	8d 48 04             	lea    0x4(%eax),%ecx
81007c0c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007c0f:	8b 12                	mov    (%edx),%edx
81007c11:	89 10                	mov    %edx,(%eax)
81007c13:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81007c17:	76 5e                	jbe    81007c77 <_realloc_r+0x30d>
81007c19:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007c1c:	8d 42 04             	lea    0x4(%edx),%eax
81007c1f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007c22:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007c25:	8d 48 04             	lea    0x4(%eax),%ecx
81007c28:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007c2b:	8b 12                	mov    (%edx),%edx
81007c2d:	89 10                	mov    %edx,(%eax)
81007c2f:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007c32:	8d 42 04             	lea    0x4(%edx),%eax
81007c35:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007c38:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007c3b:	8d 48 04             	lea    0x4(%eax),%ecx
81007c3e:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007c41:	8b 12                	mov    (%edx),%edx
81007c43:	89 10                	mov    %edx,(%eax)
81007c45:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81007c49:	76 2c                	jbe    81007c77 <_realloc_r+0x30d>
81007c4b:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007c4e:	8d 42 04             	lea    0x4(%edx),%eax
81007c51:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007c54:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007c57:	8d 48 04             	lea    0x4(%eax),%ecx
81007c5a:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007c5d:	8b 12                	mov    (%edx),%edx
81007c5f:	89 10                	mov    %edx,(%eax)
81007c61:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007c64:	8d 42 04             	lea    0x4(%edx),%eax
81007c67:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007c6a:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007c6d:	8d 48 04             	lea    0x4(%eax),%ecx
81007c70:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007c73:	8b 12                	mov    (%edx),%edx
81007c75:	89 10                	mov    %edx,(%eax)
81007c77:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007c7a:	8d 42 04             	lea    0x4(%edx),%eax
81007c7d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007c80:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007c83:	8d 48 04             	lea    0x4(%eax),%ecx
81007c86:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007c89:	8b 12                	mov    (%edx),%edx
81007c8b:	89 10                	mov    %edx,(%eax)
81007c8d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007c90:	8d 42 04             	lea    0x4(%edx),%eax
81007c93:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007c96:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007c99:	8d 48 04             	lea    0x4(%eax),%ecx
81007c9c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007c9f:	8b 12                	mov    (%edx),%edx
81007ca1:	89 10                	mov    %edx,(%eax)
81007ca3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007ca6:	8b 10                	mov    (%eax),%edx
81007ca8:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007cab:	89 10                	mov    %edx,(%eax)
81007cad:	eb 14                	jmp    81007cc3 <_realloc_r+0x359>
81007caf:	83 ec 04             	sub    $0x4,%esp
81007cb2:	ff 75 a0             	push   -0x60(%ebp)
81007cb5:	ff 75 0c             	push   0xc(%ebp)
81007cb8:	ff 75 a8             	push   -0x58(%ebp)
81007cbb:	e8 b0 f3 ff ff       	call   81007070 <memmove>
81007cc0:	83 c4 10             	add    $0x10,%esp
81007cc3:	ba 60 91 00 81       	mov    $0x81009160,%edx
81007cc8:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81007ccb:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007cce:	01 c8                	add    %ecx,%eax
81007cd0:	89 42 08             	mov    %eax,0x8(%edx)
81007cd3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007cd6:	2b 45 bc             	sub    -0x44(%ebp),%eax
81007cd9:	89 c2                	mov    %eax,%edx
81007cdb:	b8 60 91 00 81       	mov    $0x81009160,%eax
81007ce0:	8b 40 08             	mov    0x8(%eax),%eax
81007ce3:	83 ca 01             	or     $0x1,%edx
81007ce6:	89 50 04             	mov    %edx,0x4(%eax)
81007ce9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007cec:	8b 40 04             	mov    0x4(%eax),%eax
81007cef:	83 e0 01             	and    $0x1,%eax
81007cf2:	0b 45 bc             	or     -0x44(%ebp),%eax
81007cf5:	89 c2                	mov    %eax,%edx
81007cf7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007cfa:	89 50 04             	mov    %edx,0x4(%eax)
81007cfd:	83 ec 0c             	sub    $0xc,%esp
81007d00:	ff 75 08             	push   0x8(%ebp)
81007d03:	e8 86 c8 ff ff       	call   8100458e <__malloc_unlock>
81007d08:	83 c4 10             	add    $0x10,%esp
81007d0b:	8b 45 a8             	mov    -0x58(%ebp),%eax
81007d0e:	e9 2f 05 00 00       	jmp    81008242 <_realloc_r+0x8d8>
81007d13:	8b 55 e8             	mov    -0x18(%ebp),%edx
81007d16:	8b 45 ac             	mov    -0x54(%ebp),%eax
81007d19:	01 c2                	add    %eax,%edx
81007d1b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007d1e:	01 d0                	add    %edx,%eax
81007d20:	89 c2                	mov    %eax,%edx
81007d22:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007d25:	39 c2                	cmp    %eax,%edx
81007d27:	0f 8c 6f 01 00 00    	jl     81007e9c <_realloc_r+0x532>
81007d2d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007d30:	8b 40 0c             	mov    0xc(%eax),%eax
81007d33:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007d36:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007d39:	8b 40 08             	mov    0x8(%eax),%eax
81007d3c:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81007d3f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81007d42:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007d45:	89 50 0c             	mov    %edx,0xc(%eax)
81007d48:	8b 45 b8             	mov    -0x48(%ebp),%eax
81007d4b:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81007d4e:	89 50 08             	mov    %edx,0x8(%eax)
81007d51:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007d54:	8b 40 0c             	mov    0xc(%eax),%eax
81007d57:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007d5a:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007d5d:	8b 40 08             	mov    0x8(%eax),%eax
81007d60:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81007d63:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81007d66:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007d69:	89 50 0c             	mov    %edx,0xc(%eax)
81007d6c:	8b 45 b8             	mov    -0x48(%ebp),%eax
81007d6f:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81007d72:	89 50 08             	mov    %edx,0x8(%eax)
81007d75:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007d78:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007d7b:	8b 55 e8             	mov    -0x18(%ebp),%edx
81007d7e:	8b 45 ac             	mov    -0x54(%ebp),%eax
81007d81:	01 d0                	add    %edx,%eax
81007d83:	01 45 f0             	add    %eax,-0x10(%ebp)
81007d86:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007d89:	83 c0 08             	add    $0x8,%eax
81007d8c:	89 45 a8             	mov    %eax,-0x58(%ebp)
81007d8f:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007d92:	83 e8 04             	sub    $0x4,%eax
81007d95:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81007d98:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81007d9c:	0f 87 e1 00 00 00    	ja     81007e83 <_realloc_r+0x519>
81007da2:	8b 45 0c             	mov    0xc(%ebp),%eax
81007da5:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007da8:	8b 45 a8             	mov    -0x58(%ebp),%eax
81007dab:	89 45 d8             	mov    %eax,-0x28(%ebp)
81007dae:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81007db2:	0f 86 90 00 00 00    	jbe    81007e48 <_realloc_r+0x4de>
81007db8:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007dbb:	8d 42 04             	lea    0x4(%edx),%eax
81007dbe:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007dc1:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007dc4:	8d 48 04             	lea    0x4(%eax),%ecx
81007dc7:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007dca:	8b 12                	mov    (%edx),%edx
81007dcc:	89 10                	mov    %edx,(%eax)
81007dce:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007dd1:	8d 42 04             	lea    0x4(%edx),%eax
81007dd4:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007dd7:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007dda:	8d 48 04             	lea    0x4(%eax),%ecx
81007ddd:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007de0:	8b 12                	mov    (%edx),%edx
81007de2:	89 10                	mov    %edx,(%eax)
81007de4:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81007de8:	76 5e                	jbe    81007e48 <_realloc_r+0x4de>
81007dea:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007ded:	8d 42 04             	lea    0x4(%edx),%eax
81007df0:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007df3:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007df6:	8d 48 04             	lea    0x4(%eax),%ecx
81007df9:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007dfc:	8b 12                	mov    (%edx),%edx
81007dfe:	89 10                	mov    %edx,(%eax)
81007e00:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007e03:	8d 42 04             	lea    0x4(%edx),%eax
81007e06:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007e09:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007e0c:	8d 48 04             	lea    0x4(%eax),%ecx
81007e0f:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007e12:	8b 12                	mov    (%edx),%edx
81007e14:	89 10                	mov    %edx,(%eax)
81007e16:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81007e1a:	76 2c                	jbe    81007e48 <_realloc_r+0x4de>
81007e1c:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007e1f:	8d 42 04             	lea    0x4(%edx),%eax
81007e22:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007e25:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007e28:	8d 48 04             	lea    0x4(%eax),%ecx
81007e2b:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007e2e:	8b 12                	mov    (%edx),%edx
81007e30:	89 10                	mov    %edx,(%eax)
81007e32:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007e35:	8d 42 04             	lea    0x4(%edx),%eax
81007e38:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007e3b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007e3e:	8d 48 04             	lea    0x4(%eax),%ecx
81007e41:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007e44:	8b 12                	mov    (%edx),%edx
81007e46:	89 10                	mov    %edx,(%eax)
81007e48:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007e4b:	8d 42 04             	lea    0x4(%edx),%eax
81007e4e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007e51:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007e54:	8d 48 04             	lea    0x4(%eax),%ecx
81007e57:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007e5a:	8b 12                	mov    (%edx),%edx
81007e5c:	89 10                	mov    %edx,(%eax)
81007e5e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007e61:	8d 42 04             	lea    0x4(%edx),%eax
81007e64:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007e67:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007e6a:	8d 48 04             	lea    0x4(%eax),%ecx
81007e6d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007e70:	8b 12                	mov    (%edx),%edx
81007e72:	89 10                	mov    %edx,(%eax)
81007e74:	8b 45 dc             	mov    -0x24(%ebp),%eax
81007e77:	8b 10                	mov    (%eax),%edx
81007e79:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007e7c:	89 10                	mov    %edx,(%eax)
81007e7e:	e9 12 03 00 00       	jmp    81008195 <_realloc_r+0x82b>
81007e83:	83 ec 04             	sub    $0x4,%esp
81007e86:	ff 75 a4             	push   -0x5c(%ebp)
81007e89:	ff 75 0c             	push   0xc(%ebp)
81007e8c:	ff 75 a8             	push   -0x58(%ebp)
81007e8f:	e8 dc f1 ff ff       	call   81007070 <memmove>
81007e94:	83 c4 10             	add    $0x10,%esp
81007e97:	e9 f9 02 00 00       	jmp    81008195 <_realloc_r+0x82b>
81007e9c:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81007ea0:	0f 84 5b 01 00 00    	je     81008001 <_realloc_r+0x697>
81007ea6:	8b 55 ac             	mov    -0x54(%ebp),%edx
81007ea9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007eac:	01 d0                	add    %edx,%eax
81007eae:	89 c2                	mov    %eax,%edx
81007eb0:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007eb3:	39 c2                	cmp    %eax,%edx
81007eb5:	0f 8c 46 01 00 00    	jl     81008001 <_realloc_r+0x697>
81007ebb:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007ebe:	8b 40 0c             	mov    0xc(%eax),%eax
81007ec1:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007ec4:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007ec7:	8b 40 08             	mov    0x8(%eax),%eax
81007eca:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81007ecd:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81007ed0:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007ed3:	89 50 0c             	mov    %edx,0xc(%eax)
81007ed6:	8b 45 b8             	mov    -0x48(%ebp),%eax
81007ed9:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81007edc:	89 50 08             	mov    %edx,0x8(%eax)
81007edf:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007ee2:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007ee5:	8b 45 ac             	mov    -0x54(%ebp),%eax
81007ee8:	01 45 f0             	add    %eax,-0x10(%ebp)
81007eeb:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007eee:	83 c0 08             	add    $0x8,%eax
81007ef1:	89 45 a8             	mov    %eax,-0x58(%ebp)
81007ef4:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007ef7:	83 e8 04             	sub    $0x4,%eax
81007efa:	89 45 9c             	mov    %eax,-0x64(%ebp)
81007efd:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
81007f01:	0f 87 e1 00 00 00    	ja     81007fe8 <_realloc_r+0x67e>
81007f07:	8b 45 0c             	mov    0xc(%ebp),%eax
81007f0a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007f0d:	8b 45 a8             	mov    -0x58(%ebp),%eax
81007f10:	89 45 d0             	mov    %eax,-0x30(%ebp)
81007f13:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81007f17:	0f 86 90 00 00 00    	jbe    81007fad <_realloc_r+0x643>
81007f1d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007f20:	8d 42 04             	lea    0x4(%edx),%eax
81007f23:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007f26:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007f29:	8d 48 04             	lea    0x4(%eax),%ecx
81007f2c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007f2f:	8b 12                	mov    (%edx),%edx
81007f31:	89 10                	mov    %edx,(%eax)
81007f33:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007f36:	8d 42 04             	lea    0x4(%edx),%eax
81007f39:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007f3c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007f3f:	8d 48 04             	lea    0x4(%eax),%ecx
81007f42:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007f45:	8b 12                	mov    (%edx),%edx
81007f47:	89 10                	mov    %edx,(%eax)
81007f49:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
81007f4d:	76 5e                	jbe    81007fad <_realloc_r+0x643>
81007f4f:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007f52:	8d 42 04             	lea    0x4(%edx),%eax
81007f55:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007f58:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007f5b:	8d 48 04             	lea    0x4(%eax),%ecx
81007f5e:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007f61:	8b 12                	mov    (%edx),%edx
81007f63:	89 10                	mov    %edx,(%eax)
81007f65:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007f68:	8d 42 04             	lea    0x4(%edx),%eax
81007f6b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007f6e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007f71:	8d 48 04             	lea    0x4(%eax),%ecx
81007f74:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007f77:	8b 12                	mov    (%edx),%edx
81007f79:	89 10                	mov    %edx,(%eax)
81007f7b:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81007f7f:	76 2c                	jbe    81007fad <_realloc_r+0x643>
81007f81:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007f84:	8d 42 04             	lea    0x4(%edx),%eax
81007f87:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007f8a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007f8d:	8d 48 04             	lea    0x4(%eax),%ecx
81007f90:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007f93:	8b 12                	mov    (%edx),%edx
81007f95:	89 10                	mov    %edx,(%eax)
81007f97:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007f9a:	8d 42 04             	lea    0x4(%edx),%eax
81007f9d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007fa0:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007fa3:	8d 48 04             	lea    0x4(%eax),%ecx
81007fa6:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007fa9:	8b 12                	mov    (%edx),%edx
81007fab:	89 10                	mov    %edx,(%eax)
81007fad:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007fb0:	8d 42 04             	lea    0x4(%edx),%eax
81007fb3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007fb6:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007fb9:	8d 48 04             	lea    0x4(%eax),%ecx
81007fbc:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007fbf:	8b 12                	mov    (%edx),%edx
81007fc1:	89 10                	mov    %edx,(%eax)
81007fc3:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007fc6:	8d 42 04             	lea    0x4(%edx),%eax
81007fc9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007fcc:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007fcf:	8d 48 04             	lea    0x4(%eax),%ecx
81007fd2:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007fd5:	8b 12                	mov    (%edx),%edx
81007fd7:	89 10                	mov    %edx,(%eax)
81007fd9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81007fdc:	8b 10                	mov    (%eax),%edx
81007fde:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007fe1:	89 10                	mov    %edx,(%eax)
81007fe3:	e9 ad 01 00 00       	jmp    81008195 <_realloc_r+0x82b>
81007fe8:	83 ec 04             	sub    $0x4,%esp
81007feb:	ff 75 9c             	push   -0x64(%ebp)
81007fee:	ff 75 0c             	push   0xc(%ebp)
81007ff1:	ff 75 a8             	push   -0x58(%ebp)
81007ff4:	e8 77 f0 ff ff       	call   81007070 <memmove>
81007ff9:	83 c4 10             	add    $0x10,%esp
81007ffc:	e9 94 01 00 00       	jmp    81008195 <_realloc_r+0x82b>
81008001:	83 ec 08             	sub    $0x8,%esp
81008004:	ff 75 10             	push   0x10(%ebp)
81008007:	ff 75 08             	push   0x8(%ebp)
8100800a:	e8 98 bb ff ff       	call   81003ba7 <_malloc_r>
8100800f:	83 c4 10             	add    $0x10,%esp
81008012:	89 45 a8             	mov    %eax,-0x58(%ebp)
81008015:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81008019:	75 18                	jne    81008033 <_realloc_r+0x6c9>
8100801b:	83 ec 0c             	sub    $0xc,%esp
8100801e:	ff 75 08             	push   0x8(%ebp)
81008021:	e8 68 c5 ff ff       	call   8100458e <__malloc_unlock>
81008026:	83 c4 10             	add    $0x10,%esp
81008029:	b8 00 00 00 00       	mov    $0x0,%eax
8100802e:	e9 0f 02 00 00       	jmp    81008242 <_realloc_r+0x8d8>
81008033:	8b 45 a8             	mov    -0x58(%ebp),%eax
81008036:	83 e8 08             	sub    $0x8,%eax
81008039:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100803c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100803f:	8b 40 04             	mov    0x4(%eax),%eax
81008042:	83 e0 fe             	and    $0xfffffffe,%eax
81008045:	89 c2                	mov    %eax,%edx
81008047:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100804a:	01 d0                	add    %edx,%eax
8100804c:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100804f:	75 17                	jne    81008068 <_realloc_r+0x6fe>
81008051:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008054:	8b 40 04             	mov    0x4(%eax),%eax
81008057:	83 e0 fc             	and    $0xfffffffc,%eax
8100805a:	01 45 f0             	add    %eax,-0x10(%ebp)
8100805d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81008060:	89 45 f4             	mov    %eax,-0xc(%ebp)
81008063:	e9 2d 01 00 00       	jmp    81008195 <_realloc_r+0x82b>
81008068:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100806b:	83 e8 04             	sub    $0x4,%eax
8100806e:	89 45 98             	mov    %eax,-0x68(%ebp)
81008071:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81008075:	0f 87 de 00 00 00    	ja     81008159 <_realloc_r+0x7ef>
8100807b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100807e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81008081:	8b 45 a8             	mov    -0x58(%ebp),%eax
81008084:	89 45 c8             	mov    %eax,-0x38(%ebp)
81008087:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
8100808b:	0f 86 90 00 00 00    	jbe    81008121 <_realloc_r+0x7b7>
81008091:	8b 55 cc             	mov    -0x34(%ebp),%edx
81008094:	8d 42 04             	lea    0x4(%edx),%eax
81008097:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100809a:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100809d:	8d 48 04             	lea    0x4(%eax),%ecx
810080a0:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810080a3:	8b 12                	mov    (%edx),%edx
810080a5:	89 10                	mov    %edx,(%eax)
810080a7:	8b 55 cc             	mov    -0x34(%ebp),%edx
810080aa:	8d 42 04             	lea    0x4(%edx),%eax
810080ad:	89 45 cc             	mov    %eax,-0x34(%ebp)
810080b0:	8b 45 c8             	mov    -0x38(%ebp),%eax
810080b3:	8d 48 04             	lea    0x4(%eax),%ecx
810080b6:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810080b9:	8b 12                	mov    (%edx),%edx
810080bb:	89 10                	mov    %edx,(%eax)
810080bd:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
810080c1:	76 5e                	jbe    81008121 <_realloc_r+0x7b7>
810080c3:	8b 55 cc             	mov    -0x34(%ebp),%edx
810080c6:	8d 42 04             	lea    0x4(%edx),%eax
810080c9:	89 45 cc             	mov    %eax,-0x34(%ebp)
810080cc:	8b 45 c8             	mov    -0x38(%ebp),%eax
810080cf:	8d 48 04             	lea    0x4(%eax),%ecx
810080d2:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810080d5:	8b 12                	mov    (%edx),%edx
810080d7:	89 10                	mov    %edx,(%eax)
810080d9:	8b 55 cc             	mov    -0x34(%ebp),%edx
810080dc:	8d 42 04             	lea    0x4(%edx),%eax
810080df:	89 45 cc             	mov    %eax,-0x34(%ebp)
810080e2:	8b 45 c8             	mov    -0x38(%ebp),%eax
810080e5:	8d 48 04             	lea    0x4(%eax),%ecx
810080e8:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810080eb:	8b 12                	mov    (%edx),%edx
810080ed:	89 10                	mov    %edx,(%eax)
810080ef:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
810080f3:	76 2c                	jbe    81008121 <_realloc_r+0x7b7>
810080f5:	8b 55 cc             	mov    -0x34(%ebp),%edx
810080f8:	8d 42 04             	lea    0x4(%edx),%eax
810080fb:	89 45 cc             	mov    %eax,-0x34(%ebp)
810080fe:	8b 45 c8             	mov    -0x38(%ebp),%eax
81008101:	8d 48 04             	lea    0x4(%eax),%ecx
81008104:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81008107:	8b 12                	mov    (%edx),%edx
81008109:	89 10                	mov    %edx,(%eax)
8100810b:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100810e:	8d 42 04             	lea    0x4(%edx),%eax
81008111:	89 45 cc             	mov    %eax,-0x34(%ebp)
81008114:	8b 45 c8             	mov    -0x38(%ebp),%eax
81008117:	8d 48 04             	lea    0x4(%eax),%ecx
8100811a:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100811d:	8b 12                	mov    (%edx),%edx
8100811f:	89 10                	mov    %edx,(%eax)
81008121:	8b 55 cc             	mov    -0x34(%ebp),%edx
81008124:	8d 42 04             	lea    0x4(%edx),%eax
81008127:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100812a:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100812d:	8d 48 04             	lea    0x4(%eax),%ecx
81008130:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81008133:	8b 12                	mov    (%edx),%edx
81008135:	89 10                	mov    %edx,(%eax)
81008137:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100813a:	8d 42 04             	lea    0x4(%edx),%eax
8100813d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81008140:	8b 45 c8             	mov    -0x38(%ebp),%eax
81008143:	8d 48 04             	lea    0x4(%eax),%ecx
81008146:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81008149:	8b 12                	mov    (%edx),%edx
8100814b:	89 10                	mov    %edx,(%eax)
8100814d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81008150:	8b 10                	mov    (%eax),%edx
81008152:	8b 45 c8             	mov    -0x38(%ebp),%eax
81008155:	89 10                	mov    %edx,(%eax)
81008157:	eb 14                	jmp    8100816d <_realloc_r+0x803>
81008159:	83 ec 04             	sub    $0x4,%esp
8100815c:	ff 75 98             	push   -0x68(%ebp)
8100815f:	ff 75 0c             	push   0xc(%ebp)
81008162:	ff 75 a8             	push   -0x58(%ebp)
81008165:	e8 06 ef ff ff       	call   81007070 <memmove>
8100816a:	83 c4 10             	add    $0x10,%esp
8100816d:	83 ec 08             	sub    $0x8,%esp
81008170:	ff 75 0c             	push   0xc(%ebp)
81008173:	ff 75 08             	push   0x8(%ebp)
81008176:	e8 69 9b ff ff       	call   81001ce4 <_free_r>
8100817b:	83 c4 10             	add    $0x10,%esp
8100817e:	83 ec 0c             	sub    $0xc,%esp
81008181:	ff 75 08             	push   0x8(%ebp)
81008184:	e8 05 c4 ff ff       	call   8100458e <__malloc_unlock>
81008189:	83 c4 10             	add    $0x10,%esp
8100818c:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100818f:	e9 ae 00 00 00       	jmp    81008242 <_realloc_r+0x8d8>
81008194:	90                   	nop
81008195:	8b 45 f0             	mov    -0x10(%ebp),%eax
81008198:	2b 45 bc             	sub    -0x44(%ebp),%eax
8100819b:	89 45 94             	mov    %eax,-0x6c(%ebp)
8100819e:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
810081a2:	76 5d                	jbe    81008201 <_realloc_r+0x897>
810081a4:	8b 55 f4             	mov    -0xc(%ebp),%edx
810081a7:	8b 45 bc             	mov    -0x44(%ebp),%eax
810081aa:	01 d0                	add    %edx,%eax
810081ac:	89 45 90             	mov    %eax,-0x70(%ebp)
810081af:	8b 45 f4             	mov    -0xc(%ebp),%eax
810081b2:	8b 40 04             	mov    0x4(%eax),%eax
810081b5:	83 e0 01             	and    $0x1,%eax
810081b8:	0b 45 bc             	or     -0x44(%ebp),%eax
810081bb:	89 c2                	mov    %eax,%edx
810081bd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810081c0:	89 50 04             	mov    %edx,0x4(%eax)
810081c3:	8b 45 94             	mov    -0x6c(%ebp),%eax
810081c6:	83 c8 01             	or     $0x1,%eax
810081c9:	89 c2                	mov    %eax,%edx
810081cb:	8b 45 90             	mov    -0x70(%ebp),%eax
810081ce:	89 50 04             	mov    %edx,0x4(%eax)
810081d1:	8b 55 90             	mov    -0x70(%ebp),%edx
810081d4:	8b 45 94             	mov    -0x6c(%ebp),%eax
810081d7:	01 d0                	add    %edx,%eax
810081d9:	8b 50 04             	mov    0x4(%eax),%edx
810081dc:	8b 4d 90             	mov    -0x70(%ebp),%ecx
810081df:	8b 45 94             	mov    -0x6c(%ebp),%eax
810081e2:	01 c8                	add    %ecx,%eax
810081e4:	83 ca 01             	or     $0x1,%edx
810081e7:	89 50 04             	mov    %edx,0x4(%eax)
810081ea:	8b 45 90             	mov    -0x70(%ebp),%eax
810081ed:	83 c0 08             	add    $0x8,%eax
810081f0:	83 ec 08             	sub    $0x8,%esp
810081f3:	50                   	push   %eax
810081f4:	ff 75 08             	push   0x8(%ebp)
810081f7:	e8 e8 9a ff ff       	call   81001ce4 <_free_r>
810081fc:	83 c4 10             	add    $0x10,%esp
810081ff:	eb 2d                	jmp    8100822e <_realloc_r+0x8c4>
81008201:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008204:	8b 40 04             	mov    0x4(%eax),%eax
81008207:	83 e0 01             	and    $0x1,%eax
8100820a:	0b 45 f0             	or     -0x10(%ebp),%eax
8100820d:	89 c2                	mov    %eax,%edx
8100820f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008212:	89 50 04             	mov    %edx,0x4(%eax)
81008215:	8b 55 f4             	mov    -0xc(%ebp),%edx
81008218:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100821b:	01 d0                	add    %edx,%eax
8100821d:	8b 50 04             	mov    0x4(%eax),%edx
81008220:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81008223:	8b 45 f0             	mov    -0x10(%ebp),%eax
81008226:	01 c8                	add    %ecx,%eax
81008228:	83 ca 01             	or     $0x1,%edx
8100822b:	89 50 04             	mov    %edx,0x4(%eax)
8100822e:	83 ec 0c             	sub    $0xc,%esp
81008231:	ff 75 08             	push   0x8(%ebp)
81008234:	e8 55 c3 ff ff       	call   8100458e <__malloc_unlock>
81008239:	83 c4 10             	add    $0x10,%esp
8100823c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100823f:	83 c0 08             	add    $0x8,%eax
81008242:	c9                   	leave  
81008243:	c3                   	ret    

81008244 <__srget_r>:
81008244:	55                   	push   %ebp
81008245:	89 e5                	mov    %esp,%ebp
81008247:	53                   	push   %ebx
81008248:	83 ec 14             	sub    $0x14,%esp
8100824b:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100824e:	8b 45 08             	mov    0x8(%ebp),%eax
81008251:	89 45 f4             	mov    %eax,-0xc(%ebp)
81008254:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81008258:	74 18                	je     81008272 <__srget_r+0x2e>
8100825a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100825d:	8b 40 38             	mov    0x38(%eax),%eax
81008260:	85 c0                	test   %eax,%eax
81008262:	75 0e                	jne    81008272 <__srget_r+0x2e>
81008264:	83 ec 0c             	sub    $0xc,%esp
81008267:	ff 75 f4             	push   -0xc(%ebp)
8100826a:	e8 85 95 ff ff       	call   810017f4 <__sinit>
8100826f:	83 c4 10             	add    $0x10,%esp
81008272:	83 ec 08             	sub    $0x8,%esp
81008275:	53                   	push   %ebx
81008276:	ff 75 08             	push   0x8(%ebp)
81008279:	e8 c3 d1 ff ff       	call   81005441 <__srefill_r>
8100827e:	83 c4 10             	add    $0x10,%esp
81008281:	85 c0                	test   %eax,%eax
81008283:	75 18                	jne    8100829d <__srget_r+0x59>
81008285:	8b 43 04             	mov    0x4(%ebx),%eax
81008288:	83 e8 01             	sub    $0x1,%eax
8100828b:	89 43 04             	mov    %eax,0x4(%ebx)
8100828e:	8b 03                	mov    (%ebx),%eax
81008290:	8d 50 01             	lea    0x1(%eax),%edx
81008293:	89 13                	mov    %edx,(%ebx)
81008295:	0f b6 00             	movzbl (%eax),%eax
81008298:	0f b6 c0             	movzbl %al,%eax
8100829b:	eb 05                	jmp    810082a2 <__srget_r+0x5e>
8100829d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810082a2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810082a5:	c9                   	leave  
810082a6:	c3                   	ret    

810082a7 <__srget>:
810082a7:	55                   	push   %ebp
810082a8:	89 e5                	mov    %esp,%ebp
810082aa:	83 ec 08             	sub    $0x8,%esp
810082ad:	8b 55 08             	mov    0x8(%ebp),%edx
810082b0:	a1 44 91 00 81       	mov    0x81009144,%eax
810082b5:	83 ec 08             	sub    $0x8,%esp
810082b8:	52                   	push   %edx
810082b9:	50                   	push   %eax
810082ba:	e8 85 ff ff ff       	call   81008244 <__srget_r>
810082bf:	83 c4 10             	add    $0x10,%esp
810082c2:	c9                   	leave  
810082c3:	c3                   	ret    

810082c4 <strncmp>:
810082c4:	55                   	push   %ebp
810082c5:	89 e5                	mov    %esp,%ebp
810082c7:	83 ec 10             	sub    $0x10,%esp
810082ca:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810082ce:	75 0a                	jne    810082da <strncmp+0x16>
810082d0:	b8 00 00 00 00       	mov    $0x0,%eax
810082d5:	e9 cb 00 00 00       	jmp    810083a5 <strncmp+0xe1>
810082da:	8b 55 08             	mov    0x8(%ebp),%edx
810082dd:	8b 45 0c             	mov    0xc(%ebp),%eax
810082e0:	09 d0                	or     %edx,%eax
810082e2:	83 e0 03             	and    $0x3,%eax
810082e5:	85 c0                	test   %eax,%eax
810082e7:	0f 85 85 00 00 00    	jne    81008372 <strncmp+0xae>
810082ed:	8b 45 08             	mov    0x8(%ebp),%eax
810082f0:	89 45 fc             	mov    %eax,-0x4(%ebp)
810082f3:	8b 45 0c             	mov    0xc(%ebp),%eax
810082f6:	89 45 f8             	mov    %eax,-0x8(%ebp)
810082f9:	eb 36                	jmp    81008331 <strncmp+0x6d>
810082fb:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
810082ff:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81008303:	74 1d                	je     81008322 <strncmp+0x5e>
81008305:	8b 45 fc             	mov    -0x4(%ebp),%eax
81008308:	8b 00                	mov    (%eax),%eax
8100830a:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81008310:	8b 45 fc             	mov    -0x4(%ebp),%eax
81008313:	8b 00                	mov    (%eax),%eax
81008315:	f7 d0                	not    %eax
81008317:	21 d0                	and    %edx,%eax
81008319:	25 80 80 80 80       	and    $0x80808080,%eax
8100831e:	85 c0                	test   %eax,%eax
81008320:	74 07                	je     81008329 <strncmp+0x65>
81008322:	b8 00 00 00 00       	mov    $0x0,%eax
81008327:	eb 7c                	jmp    810083a5 <strncmp+0xe1>
81008329:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
8100832d:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81008331:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
81008335:	76 0e                	jbe    81008345 <strncmp+0x81>
81008337:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100833a:	8b 10                	mov    (%eax),%edx
8100833c:	8b 45 f8             	mov    -0x8(%ebp),%eax
8100833f:	8b 00                	mov    (%eax),%eax
81008341:	39 c2                	cmp    %eax,%edx
81008343:	74 b6                	je     810082fb <strncmp+0x37>
81008345:	8b 45 fc             	mov    -0x4(%ebp),%eax
81008348:	89 45 08             	mov    %eax,0x8(%ebp)
8100834b:	8b 45 f8             	mov    -0x8(%ebp),%eax
8100834e:	89 45 0c             	mov    %eax,0xc(%ebp)
81008351:	eb 1f                	jmp    81008372 <strncmp+0xae>
81008353:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81008357:	74 0a                	je     81008363 <strncmp+0x9f>
81008359:	8b 45 08             	mov    0x8(%ebp),%eax
8100835c:	0f b6 00             	movzbl (%eax),%eax
8100835f:	84 c0                	test   %al,%al
81008361:	75 07                	jne    8100836a <strncmp+0xa6>
81008363:	b8 00 00 00 00       	mov    $0x0,%eax
81008368:	eb 3b                	jmp    810083a5 <strncmp+0xe1>
8100836a:	83 45 08 01          	addl   $0x1,0x8(%ebp)
8100836e:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81008372:	8b 45 10             	mov    0x10(%ebp),%eax
81008375:	8d 50 ff             	lea    -0x1(%eax),%edx
81008378:	89 55 10             	mov    %edx,0x10(%ebp)
8100837b:	85 c0                	test   %eax,%eax
8100837d:	74 10                	je     8100838f <strncmp+0xcb>
8100837f:	8b 45 08             	mov    0x8(%ebp),%eax
81008382:	0f b6 10             	movzbl (%eax),%edx
81008385:	8b 45 0c             	mov    0xc(%ebp),%eax
81008388:	0f b6 00             	movzbl (%eax),%eax
8100838b:	38 c2                	cmp    %al,%dl
8100838d:	74 c4                	je     81008353 <strncmp+0x8f>
8100838f:	8b 45 08             	mov    0x8(%ebp),%eax
81008392:	0f b6 00             	movzbl (%eax),%eax
81008395:	0f b6 d0             	movzbl %al,%edx
81008398:	8b 45 0c             	mov    0xc(%ebp),%eax
8100839b:	0f b6 00             	movzbl (%eax),%eax
8100839e:	0f b6 c8             	movzbl %al,%ecx
810083a1:	89 d0                	mov    %edx,%eax
810083a3:	29 c8                	sub    %ecx,%eax
810083a5:	c9                   	leave  
810083a6:	c3                   	ret    

810083a7 <__get_global_locale>:
810083a7:	55                   	push   %ebp
810083a8:	89 e5                	mov    %esp,%ebp
810083aa:	b8 80 95 00 81       	mov    $0x81009580,%eax
810083af:	5d                   	pop    %ebp
810083b0:	c3                   	ret    

810083b1 <__get_current_locale>:
810083b1:	55                   	push   %ebp
810083b2:	89 e5                	mov    %esp,%ebp
810083b4:	e8 ee ff ff ff       	call   810083a7 <__get_global_locale>
810083b9:	5d                   	pop    %ebp
810083ba:	c3                   	ret    

810083bb <_wcrtomb_r>:
810083bb:	55                   	push   %ebp
810083bc:	89 e5                	mov    %esp,%ebp
810083be:	83 ec 18             	sub    $0x18,%esp
810083c1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810083c8:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810083cc:	75 21                	jne    810083ef <_wcrtomb_r+0x34>
810083ce:	e8 de ff ff ff       	call   810083b1 <__get_current_locale>
810083d3:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810083d9:	ff 75 14             	push   0x14(%ebp)
810083dc:	6a 00                	push   $0x0
810083de:	8d 55 ea             	lea    -0x16(%ebp),%edx
810083e1:	52                   	push   %edx
810083e2:	ff 75 08             	push   0x8(%ebp)
810083e5:	ff d0                	call   *%eax
810083e7:	83 c4 10             	add    $0x10,%esp
810083ea:	89 45 f4             	mov    %eax,-0xc(%ebp)
810083ed:	eb 1f                	jmp    8100840e <_wcrtomb_r+0x53>
810083ef:	e8 bd ff ff ff       	call   810083b1 <__get_current_locale>
810083f4:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810083fa:	ff 75 14             	push   0x14(%ebp)
810083fd:	ff 75 10             	push   0x10(%ebp)
81008400:	ff 75 0c             	push   0xc(%ebp)
81008403:	ff 75 08             	push   0x8(%ebp)
81008406:	ff d0                	call   *%eax
81008408:	83 c4 10             	add    $0x10,%esp
8100840b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100840e:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81008412:	75 19                	jne    8100842d <_wcrtomb_r+0x72>
81008414:	8b 45 14             	mov    0x14(%ebp),%eax
81008417:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100841d:	8b 45 08             	mov    0x8(%ebp),%eax
81008420:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81008426:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100842b:	eb 03                	jmp    81008430 <_wcrtomb_r+0x75>
8100842d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008430:	c9                   	leave  
81008431:	c3                   	ret    

81008432 <wcrtomb>:
81008432:	55                   	push   %ebp
81008433:	89 e5                	mov    %esp,%ebp
81008435:	83 ec 28             	sub    $0x28,%esp
81008438:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100843f:	a1 44 91 00 81       	mov    0x81009144,%eax
81008444:	89 45 f0             	mov    %eax,-0x10(%ebp)
81008447:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100844b:	75 21                	jne    8100846e <wcrtomb+0x3c>
8100844d:	e8 5f ff ff ff       	call   810083b1 <__get_current_locale>
81008452:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81008458:	ff 75 10             	push   0x10(%ebp)
8100845b:	6a 00                	push   $0x0
8100845d:	8d 55 e6             	lea    -0x1a(%ebp),%edx
81008460:	52                   	push   %edx
81008461:	ff 75 f0             	push   -0x10(%ebp)
81008464:	ff d0                	call   *%eax
81008466:	83 c4 10             	add    $0x10,%esp
81008469:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100846c:	eb 1f                	jmp    8100848d <wcrtomb+0x5b>
8100846e:	e8 3e ff ff ff       	call   810083b1 <__get_current_locale>
81008473:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81008479:	ff 75 10             	push   0x10(%ebp)
8100847c:	ff 75 0c             	push   0xc(%ebp)
8100847f:	ff 75 08             	push   0x8(%ebp)
81008482:	ff 75 f0             	push   -0x10(%ebp)
81008485:	ff d0                	call   *%eax
81008487:	83 c4 10             	add    $0x10,%esp
8100848a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100848d:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81008491:	75 19                	jne    810084ac <wcrtomb+0x7a>
81008493:	8b 45 10             	mov    0x10(%ebp),%eax
81008496:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100849c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100849f:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810084a5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810084aa:	eb 03                	jmp    810084af <wcrtomb+0x7d>
810084ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
810084af:	c9                   	leave  
810084b0:	c3                   	ret    

810084b1 <__get_global_locale>:
810084b1:	55                   	push   %ebp
810084b2:	89 e5                	mov    %esp,%ebp
810084b4:	b8 80 95 00 81       	mov    $0x81009580,%eax
810084b9:	5d                   	pop    %ebp
810084ba:	c3                   	ret    

810084bb <__get_current_locale>:
810084bb:	55                   	push   %ebp
810084bc:	89 e5                	mov    %esp,%ebp
810084be:	e8 ee ff ff ff       	call   810084b1 <__get_global_locale>
810084c3:	5d                   	pop    %ebp
810084c4:	c3                   	ret    

810084c5 <_wctomb_r>:
810084c5:	55                   	push   %ebp
810084c6:	89 e5                	mov    %esp,%ebp
810084c8:	83 ec 08             	sub    $0x8,%esp
810084cb:	e8 eb ff ff ff       	call   810084bb <__get_current_locale>
810084d0:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810084d6:	ff 75 14             	push   0x14(%ebp)
810084d9:	ff 75 10             	push   0x10(%ebp)
810084dc:	ff 75 0c             	push   0xc(%ebp)
810084df:	ff 75 08             	push   0x8(%ebp)
810084e2:	ff d0                	call   *%eax
810084e4:	83 c4 10             	add    $0x10,%esp
810084e7:	c9                   	leave  
810084e8:	c3                   	ret    

810084e9 <__ascii_wctomb>:
810084e9:	55                   	push   %ebp
810084ea:	89 e5                	mov    %esp,%ebp
810084ec:	83 ec 10             	sub    $0x10,%esp
810084ef:	8b 45 10             	mov    0x10(%ebp),%eax
810084f2:	89 45 fc             	mov    %eax,-0x4(%ebp)
810084f5:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810084f9:	75 07                	jne    81008502 <__ascii_wctomb+0x19>
810084fb:	b8 00 00 00 00       	mov    $0x0,%eax
81008500:	eb 28                	jmp    8100852a <__ascii_wctomb+0x41>
81008502:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
81008509:	76 10                	jbe    8100851b <__ascii_wctomb+0x32>
8100850b:	8b 45 08             	mov    0x8(%ebp),%eax
8100850e:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81008514:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81008519:	eb 0f                	jmp    8100852a <__ascii_wctomb+0x41>
8100851b:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100851e:	89 c2                	mov    %eax,%edx
81008520:	8b 45 0c             	mov    0xc(%ebp),%eax
81008523:	88 10                	mov    %dl,(%eax)
81008525:	b8 01 00 00 00       	mov    $0x1,%eax
8100852a:	c9                   	leave  
8100852b:	c3                   	ret    

8100852c <__env_lock>:
8100852c:	55                   	push   %ebp
8100852d:	89 e5                	mov    %esp,%ebp
8100852f:	90                   	nop
81008530:	5d                   	pop    %ebp
81008531:	c3                   	ret    

81008532 <__env_unlock>:
81008532:	55                   	push   %ebp
81008533:	89 e5                	mov    %esp,%ebp
81008535:	90                   	nop
81008536:	5d                   	pop    %ebp
81008537:	c3                   	ret    
