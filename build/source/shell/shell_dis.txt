
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x810004b5

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00007650 memsz 0x00007cfc flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000066cf  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000056c  810066e0  810066e0  000076e0  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  81006c60  81006c60  00007c60  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          0000069c  81007660  81007660  00008650  2**5
                  ALLOC
  4 .debug_info   00020b98  00000000  00000000  00008650  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 000075a1  00000000  00000000  000291e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 000007c8  00000000  00000000  00030790  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   0000499e  00000000  00000000  00030f58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    0000153a  00000000  00000000  000358f6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line_str 000013cf  00000000  00000000  00036e30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003f  00000000  00000000  000381ff  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00001888  00000000  00000000  00038240  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000004e  00000000  00000000  00039ac8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
81007660 l     O .bss	00000200 cmd_buf
81006c60 l     O .data	00000004 prompt
81007860 l     O .bss	0000040c cli
81000000 l     F .text	00000042 do_help
81000042 l     F .text	00000037 do_clear
81000079 l     F .text	000001c2 do_echo
81006820 l     O .rodata	00000024 cmd_list
8100023b l     F .text	0000003e cli_init
81000279 l     F .text	00000033 show_prompt
810002ac l     F .text	00000043 find_builtin
810002ef l     F .text	00000049 run_builtin
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
81000bda l     F .text	000000ad std
81000c87 l     F .text	0000001b stdin_init
81000ca2 l     F .text	0000001b stdout_init
81000cbd l     F .text	0000001b stderr_init
81007c6c l     O .bss	00000004 __sfp_recursive_mutex
81007c70 l     O .bss	00000004 __sinit_recursive_mutex
81000f80 l     F .text	0000000a __fp_lock
81000f8a l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getopt.c
81007c7c l     O .bss	00000004 optwhere
81007c80 l     O .bss	00000004 permute_from
81007c84 l     O .bss	00000004 num_nonopts
8100171d l     F .text	0000007b reverse_argv_elements
81001798 l     F .text	00000036 permute
810017ce l     F .text	00000031 is_option
810017ff l     F .text	00000059 read_globals
81001858 l     F .text	00000052 write_globals
810018aa l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 impure.c
81006c80 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 mallocr.c
81002515 l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
8100305d l       .text	00000000 L20
81003014 l       .text	00000000 L5
8100305a l       .text	00000000 L15
81003020 l       .text	00000000 L8
81003041 l       .text	00000000 L9
81003050 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
810030af l       .text	00000000 L4
810030a1 l       .text	00000000 BYTECMP
8100309c l       .text	00000000 L5
810030a3 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
81007ce8 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81003270 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
81003e37 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
8100426b l       .text	00000000 L25
81004212 l       .text	00000000 L5
8100425e l       .text	00000000 L14
81004264 l       .text	00000000 L19
81004223 l       .text	00000000 L10
81004250 l       .text	00000000 L9
81004253 l       .text	00000000 L15
8100429e l       .text	00000000 L26
810042a1 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
810043a6 l       .text	00000000 L5
810043de l       .text	00000000 L15
810043b0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
810044ec l     F .text	0000000a __locale_ctype_ptr_l
810044f6 l     F .text	0000000a __get_global_locale
81004500 l     F .text	0000000a __get_current_locale
8100450a l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 fputwc.c
81004cea l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
810074d0 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 locale.c
81005487 l     F .text	0000000a __get_global_locale
81005491 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
810056f3 l     F .text	0000000a __get_global_locale
810056fd l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 putc.c
8100581d l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
810064bb l     F .text	0000000a __get_global_locale
810064c5 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
810065c5 l     F .text	0000000a __get_global_locale
810065cf l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
81007cf4 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
81007cf8 l     O .bss	00000004 __env_recursive_mutex
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
8100668f g     F .text	00000040 _isatty_r
81006241 g     F .text	00000037 cleanup_glue
81003d45 g     F .text	000000d6 _puts_r
8100552d g     F .text	00000046 _lseek_r
810005fe g     F .text	0000001b yield
810044d2 g     F .text	0000001a strtok_r
81003d10 g     F .text	00000035 printf
810064cf g     F .text	00000077 _wcrtomb_r
8100414e g     F .text	0000004a __sseek
81000ecf g     F .text	00000099 __sinit
8100474f g     F .text	00000112 __swbuf_r
8100549b g     F .text	0000005f _setlocale_r
81000cd8 g     F .text	0000006f __sfmoreglue
8100318e g     F .text	00000006 __malloc_unlock
81005790 g       .text	00000000 memmove
81002406 g     F .text	00000049 getopt_long
81000eb5 g     F .text	0000001a _cleanup
81004412 g     F .text	000000c0 __strtok_r
81004a63 g     F .text	0000000a __errno
8100535d g     F .text	00000020 getenv
8100664c g     F .text	00000043 _fstat_r
81007cf0 g     O .bss	00000004 errno
810040e9 g     F .text	0000000a __seofread
810005d1 g     F .text	0000002d execve
81000573 g     F .text	0000001b getpid
81000bbb g     F .text	0000001f fgets
810030b8 g       .text	00000000 memcpy
81000e94 g     F .text	00000021 _cleanup_r
81003e1b g     F .text	0000001c puts
81003ce3 g     F .text	0000002d _printf_r
810006e8 g     F .text	00000021 isatty
8100250b g     F .text	0000000a __getreent
81007c74 g     O .bss	00000004 optarg
81007ca0 g     O .bss	00000004 __malloc_top_pad
81007660 g       .bss	00000000 __bss_start__
81004e9f g     F .text	0000049e __sfvwrite_r
81004065 g     F .text	00000040 _sbrk_r
81006c64 g     O .data	00000004 opterr
81005921 g     F .text	00000046 _read_r
81004a6d g     F .text	00000107 _fclose_r
81000a24 g     F .text	00000039 fflush
81007ca4 g     O .bss	00000004 __malloc_max_sbrked_mem
810006bb g     F .text	0000002d lseek
810068fc g     O .rodata	00000004 _global_impure_ptr
81005967 g     F .text	000008da _realloc_r
81004701 g     F .text	00000025 strtol_l
81004e00 g     F .text	00000057 _fputwc_r
81000f94 g     F .text	00000024 __fp_lock_all
81004726 g     F .text	00000029 strtol
81006278 g     F .text	00000160 _reclaim_reent
81004b91 g     F .text	00000046 _fputc_r
8100066d g     F .text	0000002d write
81005883 g     F .text	0000004b _putc_r
8100764c g     O .data	00000004 environ
81000709 g     F .text	00000027 fstat
81001005 g     F .text	0000002c fprintf
810024e4 g     F .text	00000027 __getopt_long_only_r
8100078c g     F .text	0000001a _atoi_r
810004fd g     F .text	0000004c sys_call
810032d6 g     F .text	000000a8 __sfputs_r
81007c78 g     O .bss	00000004 optind
81000f68 g     F .text	00000006 __sfp_lock_acquire
81002fd0 g       .text	00000000 memchr
81007cfc g       .bss	00000000 __bss_end__
81001031 g     F .text	000003db _free_r
810069c0 g     O .rodata	00000180 _ctype_b
810054fa g     F .text	00000014 __locale_mb_cur_max
810074cc g     O .data	00000004 __malloc_sbrk_base
810004b5 g       .text	00000000 _start
81000640 g     F .text	0000002d read
810063d8 g     F .text	000000e3 strncmp
810024bd g     F .text	00000027 __getopt_long_r
81007cc0 g     O .bss	00000028 __malloc_current_mallinfo
81003ce3 g     F .text	0000002d _iprintf_r
81004a23 g     F .text	00000040 _close_r
810043e9 g     F .text	00000029 strtok
81003065 g       .text	00000000 memcmp
81001640 g     F .text	000000b8 _fwrite_r
810005b6 g     F .text	0000001b fork
810048c8 g     F .text	0000015b __swsetup_r
81000d47 g     F .text	0000014d __sfp
810070c0 g     O .data	00000408 __malloc_av_
81000f7a g     F .text	00000006 __sinit_lock_release
810040a5 g     F .text	00000044 __sread
81003188 g     F .text	00000006 __malloc_lock
81000fdc g     F .text	00000029 _fprintf_r
81000730 g     F .text	00000021 sbrk
810009cc g     F .text	00000058 _fflush_r
810004c5 g     F .text	00000038 cstart
810023bf g     F .text	00000047 getopt
81003100 g       .text	00000000 memset
81000338 g     F .text	0000017d main
81007ca8 g     O .bss	00000004 __malloc_max_total_mem
81004861 g     F .text	00000021 __swbuf
81004198 g     F .text	00000025 __sclose
81004b74 g     F .text	0000001d fclose
810046dc g     F .text	00000025 _strtol_r
8100537d g     F .text	000000ed _findenv_r
810027a8 g     F .text	00000822 _malloc_r
810065fd g     F .text	00000043 __ascii_wctomb
81000fdc g     F .text	00000029 _fiprintf_r
81006646 g     F .text	00000006 __env_unlock
8100533d g     F .text	00000020 _findenv
8100156d g     F .text	00000068 _fwalk
81000a5d g     F .text	0000015e _fgets_r
81005707 g     F .text	0000002a _mbtowc_r
810058ce g     F .text	00000053 putc
8100244f g     F .text	00000049 getopt_long_only
8100140c g     F .text	00000161 _malloc_trim_r
810042bc g     F .text	000000a5 strcmp
8100337e g     F .text	00000025 vfiprintf
81000751 g     F .text	00000021 dup
81003d10 g     F .text	00000035 iprintf
81007cec g     O .bss	00000004 _PathLocale
81004882 g     F .text	00000046 _write_r
8100550e g     F .text	0000001f setlocale
810036f9 g     F .text	0000019b _printf_common
810070a4 g     O .data	00000004 _impure_ptr
810007a6 g     F .text	00000226 __sflush_r
81003e64 g     F .text	00000201 __srefill_r
81005731 g     F .text	00000058 __ascii_mbtowc
81000fb8 g     F .text	00000024 __fp_unlock_all
81004bd7 g     F .text	0000004e fputc
8100058e g     F .text	00000028 print_msg
81006c68 g     O .data	00000004 optopt
81005660 g     F .text	00000093 __swhatbuf_r
810016f8 g     F .text	00000025 fwrite
81004d50 g     F .text	000000b0 __fputwc
81004c25 g     F .text	000000a6 _fputs_r
810040f3 g     F .text	0000005b __swrite
810074c8 g     O .data	00000004 __malloc_trim_threshold
81001005 g     F .text	0000002c fiprintf
810033a3 g     F .text	00000356 _vfiprintf_r
810015d5 g     F .text	0000006b _fwalk_reent
81000f6e g     F .text	00000006 __sfp_lock_release
81000772 g     F .text	0000001a atoi
81006b40 g     O .rodata	00000101 _ctype_
81002498 g     F .text	00000025 __getopt_r
81005573 g     F .text	000000ed __smakebuf_r
81004370 g       .text	00000000 strlen
81003894 g     F .text	0000044f _printf_i
81000619 g     F .text	00000027 open
81003194 g     F .text	000000dc __sprint_r
810041c0 g       .text	00000000 strchr
81004ccb g     F .text	0000001f fputs
810065d9 g     F .text	00000024 _wctomb_r
81006640 g     F .text	00000006 __env_lock
810033a3 g     F .text	00000356 _vfprintf_r
81000549 g     F .text	0000002a msleep
81006546 g     F .text	0000007f wcrtomb
8100069a g     F .text	00000021 close
810074e0 g     O .data	0000016c __global_locale
8100337e g     F .text	00000025 vfprintf
81004e57 g     F .text	00000048 fputwc
81000f74 g     F .text	00000006 __sinit_lock_acquire
8100546a g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <do_help>:
 *
 * @param argc
 * @param arg
 * @return int
 */
static int do_help(int argc, const char **argv) {
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 18             	sub    $0x18,%esp
  const cli_cmd_t *start = cli.cmd_start;
81000006:	a1 60 7c 00 81       	mov    0x81007c60,%eax
8100000b:	89 45 f4             	mov    %eax,-0xc(%ebp)
  while (start < cli.cmd_end) {
8100000e:	eb 21                	jmp    81000031 <do_help+0x31>
    printf("%s\t--> %s\n", start->name, start->usage);
81000010:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000013:	8b 50 04             	mov    0x4(%eax),%edx
81000016:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000019:	8b 00                	mov    (%eax),%eax
8100001b:	83 ec 04             	sub    $0x4,%esp
8100001e:	52                   	push   %edx
8100001f:	50                   	push   %eax
81000020:	68 e6 66 00 81       	push   $0x810066e6
81000025:	e8 e6 3c 00 00       	call   81003d10 <iprintf>
8100002a:	83 c4 10             	add    $0x10,%esp
    start++;
8100002d:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
  while (start < cli.cmd_end) {
81000031:	a1 64 7c 00 81       	mov    0x81007c64,%eax
81000036:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000039:	72 d5                	jb     81000010 <do_help+0x10>
  }

  return 0;
8100003b:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000040:	c9                   	leave  
81000041:	c3                   	ret    

81000042 <do_clear>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_clear(int argc, const char **argv) {
81000042:	55                   	push   %ebp
81000043:	89 e5                	mov    %esp,%ebp
81000045:	83 ec 08             	sub    $0x8,%esp
  printf("%s", ESC_CLEAR_SCREEN);
81000048:	83 ec 08             	sub    $0x8,%esp
8100004b:	68 f1 66 00 81       	push   $0x810066f1
81000050:	68 f6 66 00 81       	push   $0x810066f6
81000055:	e8 b6 3c 00 00       	call   81003d10 <iprintf>
8100005a:	83 c4 10             	add    $0x10,%esp
  printf("%s", ESC_MOVE_CURSOR(0, 0));
8100005d:	83 ec 08             	sub    $0x8,%esp
81000060:	68 f9 66 00 81       	push   $0x810066f9
81000065:	68 f6 66 00 81       	push   $0x810066f6
8100006a:	e8 a1 3c 00 00       	call   81003d10 <iprintf>
8100006f:	83 c4 10             	add    $0x10,%esp
  return 0;
81000072:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000077:	c9                   	leave  
81000078:	c3                   	ret    

81000079 <do_echo>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_echo(int argc, const char **argv) {
81000079:	55                   	push   %ebp
8100007a:	89 e5                	mov    %esp,%ebp
8100007c:	53                   	push   %ebx
8100007d:	81 ec 94 00 00 00    	sub    $0x94,%esp
  if (argc ==
81000083:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
81000087:	75 40                	jne    810000c9 <do_echo+0x50>
      1) {  // 没有指定任何参数只输入了 echo，则等待用户输入信息以进行回显
    char msg_buf[128];
    fgets(msg_buf, sizeof(msg_buf), stdin);
81000089:	e8 7d 24 00 00       	call   8100250b <__getreent>
8100008e:	8b 40 04             	mov    0x4(%eax),%eax
81000091:	83 ec 04             	sub    $0x4,%esp
81000094:	50                   	push   %eax
81000095:	68 80 00 00 00       	push   $0x80
8100009a:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000a0:	50                   	push   %eax
810000a1:	e8 15 0b 00 00       	call   81000bbb <fgets>
810000a6:	83 c4 10             	add    $0x10,%esp
    msg_buf[sizeof(msg_buf) - 1] = '\0';
810000a9:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
    puts(msg_buf);
810000ad:	83 ec 0c             	sub    $0xc,%esp
810000b0:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000b6:	50                   	push   %eax
810000b7:	e8 5f 3d 00 00       	call   81003e1b <puts>
810000bc:	83 c4 10             	add    $0x10,%esp
    return 0;
810000bf:	b8 00 00 00 00       	mov    $0x0,%eax
810000c4:	e9 6d 01 00 00       	jmp    81000236 <do_echo+0x1bd>
  }

  optind = 1;  // getopt每次查找都从optind处开始
810000c9:	c7 05 78 7c 00 81 01 	movl   $0x1,0x81007c78
810000d0:	00 00 00 
  int count = 1;
810000d3:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
  int ch;
  // getopt函数解析参数列表，n:表示查找-n选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
810000da:	e9 a4 00 00 00       	jmp    81000183 <do_echo+0x10a>
    switch (ch) {
810000df:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e3:	74 54                	je     81000139 <do_echo+0xc0>
810000e5:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e9:	0f 8f 93 00 00 00    	jg     81000182 <do_echo+0x109>
810000ef:	83 7d ec 3f          	cmpl   $0x3f,-0x14(%ebp)
810000f3:	74 5a                	je     8100014f <do_echo+0xd6>
810000f5:	83 7d ec 68          	cmpl   $0x68,-0x14(%ebp)
810000f9:	0f 85 83 00 00 00    	jne    81000182 <do_echo+0x109>
      case 'h':
        puts("help:");
810000ff:	83 ec 0c             	sub    $0xc,%esp
81000102:	68 00 67 00 81       	push   $0x81006700
81000107:	e8 0f 3d 00 00       	call   81003e1b <puts>
8100010c:	83 c4 10             	add    $0x10,%esp
        puts("\techo any message");
8100010f:	83 ec 0c             	sub    $0xc,%esp
81000112:	68 06 67 00 81       	push   $0x81006706
81000117:	e8 ff 3c 00 00       	call   81003e1b <puts>
8100011c:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: echo [-n count] message");
8100011f:	83 ec 0c             	sub    $0xc,%esp
81000122:	68 18 67 00 81       	push   $0x81006718
81000127:	e8 ef 3c 00 00       	call   81003e1b <puts>
8100012c:	83 c4 10             	add    $0x10,%esp
        return 0;
8100012f:	b8 00 00 00 00       	mov    $0x0,%eax
81000134:	e9 fd 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      case 'n':
        count = atoi(optarg);  // optarg为newlib库自己声明的
81000139:	a1 74 7c 00 81       	mov    0x81007c74,%eax
8100013e:	83 ec 0c             	sub    $0xc,%esp
81000141:	50                   	push   %eax
81000142:	e8 2b 06 00 00       	call   81000772 <atoi>
81000147:	83 c4 10             	add    $0x10,%esp
8100014a:	89 45 f4             	mov    %eax,-0xc(%ebp)
        break;
8100014d:	eb 34                	jmp    81000183 <do_echo+0x10a>
      case '?':  // 找到未指定选项
        if (optarg) {
8100014f:	a1 74 7c 00 81       	mov    0x81007c74,%eax
81000154:	85 c0                	test   %eax,%eax
81000156:	74 20                	je     81000178 <do_echo+0xff>
          fprintf(stderr,
81000158:	8b 1d 74 7c 00 81    	mov    0x81007c74,%ebx
8100015e:	e8 a8 23 00 00       	call   8100250b <__getreent>
81000163:	8b 40 0c             	mov    0xc(%eax),%eax
81000166:	83 ec 04             	sub    $0x4,%esp
81000169:	53                   	push   %ebx
8100016a:	68 38 67 00 81       	push   $0x81006738
8100016f:	50                   	push   %eax
81000170:	e8 90 0e 00 00       	call   81001005 <fiprintf>
81000175:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000178:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100017d:	e9 b4 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      default:
        break;
81000182:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
81000183:	83 ec 04             	sub    $0x4,%esp
81000186:	68 57 67 00 81       	push   $0x81006757
8100018b:	ff 75 0c             	push   0xc(%ebp)
8100018e:	ff 75 08             	push   0x8(%ebp)
81000191:	e8 29 22 00 00       	call   810023bf <getopt>
81000196:	83 c4 10             	add    $0x10,%esp
81000199:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100019c:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810001a0:	0f 85 39 ff ff ff    	jne    810000df <do_echo+0x66>
    }
  }

    if (count == 0) {
810001a6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810001aa:	75 21                	jne    810001cd <do_echo+0x154>
    fprintf(stderr, ESC_COLOR_ERROR
810001ac:	e8 5a 23 00 00       	call   8100250b <__getreent>
810001b1:	8b 40 0c             	mov    0xc(%eax),%eax
810001b4:	50                   	push   %eax
810001b5:	6a 32                	push   $0x32
810001b7:	6a 01                	push   $0x1
810001b9:	68 5c 67 00 81       	push   $0x8100675c
810001be:	e8 35 15 00 00       	call   810016f8 <fwrite>
810001c3:	83 c4 10             	add    $0x10,%esp
            "echo: argument required for option '-n'\n" ESC_COLOR_DEFAULT);
    return -1;
810001c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001cb:	eb 69                	jmp    81000236 <do_echo+0x1bd>
    }
  if (optind >
810001cd:	a1 78 7c 00 81       	mov    0x81007c78,%eax
810001d2:	39 45 08             	cmp    %eax,0x8(%ebp)
810001d5:	7f 21                	jg     810001f8 <do_echo+0x17f>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "message is empty\n" ESC_COLOR_DEFAULT);
810001d7:	e8 2f 23 00 00       	call   8100250b <__getreent>
810001dc:	8b 40 0c             	mov    0xc(%eax),%eax
810001df:	50                   	push   %eax
810001e0:	6a 1b                	push   $0x1b
810001e2:	6a 01                	push   $0x1
810001e4:	68 8f 67 00 81       	push   $0x8100678f
810001e9:	e8 0a 15 00 00       	call   810016f8 <fwrite>
810001ee:	83 c4 10             	add    $0x10,%esp
    return -1;
810001f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001f6:	eb 3e                	jmp    81000236 <do_echo+0x1bd>
  }
  

  const char *msg = argv[optind];
810001f8:	a1 78 7c 00 81       	mov    0x81007c78,%eax
810001fd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000204:	8b 45 0c             	mov    0xc(%ebp),%eax
81000207:	01 d0                	add    %edx,%eax
81000209:	8b 00                	mov    (%eax),%eax
8100020b:	89 45 e8             	mov    %eax,-0x18(%ebp)
  for (int i = 0; i < count; ++i) {
8100020e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81000215:	eb 12                	jmp    81000229 <do_echo+0x1b0>
    puts(msg);
81000217:	83 ec 0c             	sub    $0xc,%esp
8100021a:	ff 75 e8             	push   -0x18(%ebp)
8100021d:	e8 f9 3b 00 00       	call   81003e1b <puts>
81000222:	83 c4 10             	add    $0x10,%esp
  for (int i = 0; i < count; ++i) {
81000225:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81000229:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100022c:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100022f:	7c e6                	jl     81000217 <do_echo+0x19e>
  }
  return 0;
81000231:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000236:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000239:	c9                   	leave  
8100023a:	c3                   	ret    

8100023b <cli_init>:

/**
 * @brief 初始化终端结构
 *
 */
static void cli_init() {
8100023b:	55                   	push   %ebp
8100023c:	89 e5                	mov    %esp,%ebp
8100023e:	83 ec 08             	sub    $0x8,%esp
  cli.prompt = prompt;
81000241:	a1 60 6c 00 81       	mov    0x81006c60,%eax
81000246:	a3 68 7c 00 81       	mov    %eax,0x81007c68
  memset(cli.curr_input, 0, CLI_INPUT_SIZE);
8100024b:	83 ec 04             	sub    $0x4,%esp
8100024e:	68 00 04 00 00       	push   $0x400
81000253:	6a 00                	push   $0x0
81000255:	68 60 78 00 81       	push   $0x81007860
8100025a:	e8 a1 2e 00 00       	call   81003100 <memset>
8100025f:	83 c4 10             	add    $0x10,%esp
  cli.cmd_start = cmd_list;
81000262:	c7 05 60 7c 00 81 20 	movl   $0x81006820,0x81007c60
81000269:	68 00 81 
  cli.cmd_end = cmd_list + sizeof(cmd_list) / sizeof(cmd_list[0]);
8100026c:	b8 44 68 00 81       	mov    $0x81006844,%eax
81000271:	a3 64 7c 00 81       	mov    %eax,0x81007c64
}
81000276:	90                   	nop
81000277:	c9                   	leave  
81000278:	c3                   	ret    

81000279 <show_prompt>:

/**
 * @brief 打印终端每行固定的提示符
 *
 */
static void show_prompt(void) {
81000279:	55                   	push   %ebp
8100027a:	89 e5                	mov    %esp,%ebp
8100027c:	83 ec 08             	sub    $0x8,%esp
  printf("%s", cli.prompt);
8100027f:	a1 68 7c 00 81       	mov    0x81007c68,%eax
81000284:	83 ec 08             	sub    $0x8,%esp
81000287:	50                   	push   %eax
81000288:	68 f6 66 00 81       	push   $0x810066f6
8100028d:	e8 7e 3a 00 00       	call   81003d10 <iprintf>
81000292:	83 c4 10             	add    $0x10,%esp
  fflush(stdout);
81000295:	e8 71 22 00 00       	call   8100250b <__getreent>
8100029a:	8b 40 08             	mov    0x8(%eax),%eax
8100029d:	83 ec 0c             	sub    $0xc,%esp
810002a0:	50                   	push   %eax
810002a1:	e8 7e 07 00 00       	call   81000a24 <fflush>
810002a6:	83 c4 10             	add    $0x10,%esp
}
810002a9:	90                   	nop
810002aa:	c9                   	leave  
810002ab:	c3                   	ret    

810002ac <find_builtin>:
 * @brief 根据命令程序名称查找并返回对应的命令结构
 *
 * @param name
 * @return const cli_cmd_t*
 */
static const cli_cmd_t *find_builtin(const char *name) {
810002ac:	55                   	push   %ebp
810002ad:	89 e5                	mov    %esp,%ebp
810002af:	83 ec 18             	sub    $0x18,%esp
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
810002b2:	a1 60 7c 00 81       	mov    0x81007c60,%eax
810002b7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810002ba:	eb 22                	jmp    810002de <find_builtin+0x32>
    if (strcmp(cmd->name, name) != 0) {
810002bc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810002bf:	8b 00                	mov    (%eax),%eax
810002c1:	83 ec 08             	sub    $0x8,%esp
810002c4:	ff 75 08             	push   0x8(%ebp)
810002c7:	50                   	push   %eax
810002c8:	e8 ef 3f 00 00       	call   810042bc <strcmp>
810002cd:	83 c4 10             	add    $0x10,%esp
810002d0:	85 c0                	test   %eax,%eax
810002d2:	75 05                	jne    810002d9 <find_builtin+0x2d>
      continue;
    }
    return cmd;
810002d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810002d7:	eb 14                	jmp    810002ed <find_builtin+0x41>
      continue;
810002d9:	90                   	nop
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
810002da:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
810002de:	a1 64 7c 00 81       	mov    0x81007c64,%eax
810002e3:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810002e6:	72 d4                	jb     810002bc <find_builtin+0x10>
  }

  return (const cli_cmd_t *)0;
810002e8:	b8 00 00 00 00       	mov    $0x0,%eax
}
810002ed:	c9                   	leave  
810002ee:	c3                   	ret    

810002ef <run_builtin>:
 *
 * @param cmd
 * @param argc
 * @param argv
 */
static void run_builtin(const cli_cmd_t *cmd, int argc, const char **argv) {
810002ef:	55                   	push   %ebp
810002f0:	89 e5                	mov    %esp,%ebp
810002f2:	53                   	push   %ebx
810002f3:	83 ec 14             	sub    $0x14,%esp
  int ret = cmd->do_func(argc, argv);
810002f6:	8b 45 08             	mov    0x8(%ebp),%eax
810002f9:	8b 40 08             	mov    0x8(%eax),%eax
810002fc:	83 ec 08             	sub    $0x8,%esp
810002ff:	ff 75 10             	push   0x10(%ebp)
81000302:	ff 75 0c             	push   0xc(%ebp)
81000305:	ff d0                	call   *%eax
81000307:	83 c4 10             	add    $0x10,%esp
8100030a:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (ret < 0) {
8100030d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000311:	79 1f                	jns    81000332 <run_builtin+0x43>
    fprintf(stderr, "%s error: %d\n", cmd->name, ret);
81000313:	8b 45 08             	mov    0x8(%ebp),%eax
81000316:	8b 18                	mov    (%eax),%ebx
81000318:	e8 ee 21 00 00       	call   8100250b <__getreent>
8100031d:	8b 40 0c             	mov    0xc(%eax),%eax
81000320:	ff 75 f4             	push   -0xc(%ebp)
81000323:	53                   	push   %ebx
81000324:	68 44 68 00 81       	push   $0x81006844
81000329:	50                   	push   %eax
8100032a:	e8 d6 0c 00 00       	call   81001005 <fiprintf>
8100032f:	83 c4 10             	add    $0x10,%esp
  }
}
81000332:	90                   	nop
81000333:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000336:	c9                   	leave  
81000337:	c3                   	ret    

81000338 <main>:

int main(int argc, char **argv) {
81000338:	8d 4c 24 04          	lea    0x4(%esp),%ecx
8100033c:	83 e4 f0             	and    $0xfffffff0,%esp
8100033f:	ff 71 fc             	push   -0x4(%ecx)
81000342:	55                   	push   %ebp
81000343:	89 e5                	mov    %esp,%ebp
81000345:	51                   	push   %ecx
81000346:	83 ec 44             	sub    $0x44,%esp
81000349:	89 c8                	mov    %ecx,%eax
  // 1.打开shell对应的tty设备绑定为stdin
  open(argv[0], 0);
8100034b:	8b 40 04             	mov    0x4(%eax),%eax
8100034e:	8b 00                	mov    (%eax),%eax
81000350:	83 ec 08             	sub    $0x8,%esp
81000353:	6a 00                	push   $0x0
81000355:	50                   	push   %eax
81000356:	e8 be 02 00 00       	call   81000619 <open>
8100035b:	83 c4 10             	add    $0x10,%esp
  // 2.复用该0号描述符的文件，打开shell的stdout和stderr
  dup(0);
8100035e:	83 ec 0c             	sub    $0xc,%esp
81000361:	6a 00                	push   $0x0
81000363:	e8 e9 03 00 00       	call   81000751 <dup>
81000368:	83 c4 10             	add    $0x10,%esp
  dup(0);
8100036b:	83 ec 0c             	sub    $0xc,%esp
8100036e:	6a 00                	push   $0x0
81000370:	e8 dc 03 00 00       	call   81000751 <dup>
81000375:	83 c4 10             	add    $0x10,%esp

  // 3.初始化终端结构
  cli_init();
81000378:	e8 be fe ff ff       	call   8100023b <cli_init>

  // 4.循环读取命令行输入并执行指令
  for (;;) {
    show_prompt();
8100037d:	e8 f7 fe ff ff       	call   81000279 <show_prompt>
    // 4.1获取命令行输入并清空末尾的"\r\n"
    char *str = fgets(cli.curr_input, CLI_INPUT_SIZE, stdin);
81000382:	e8 84 21 00 00       	call   8100250b <__getreent>
81000387:	8b 40 04             	mov    0x4(%eax),%eax
8100038a:	83 ec 04             	sub    $0x4,%esp
8100038d:	50                   	push   %eax
8100038e:	68 00 04 00 00       	push   $0x400
81000393:	68 60 78 00 81       	push   $0x81007860
81000398:	e8 1e 08 00 00       	call   81000bbb <fgets>
8100039d:	83 c4 10             	add    $0x10,%esp
810003a0:	89 45 ec             	mov    %eax,-0x14(%ebp)
    if (!str) {
810003a3:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810003a7:	0f 84 fc 00 00 00    	je     810004a9 <main+0x171>
      continue;
    }
    char *cr = strchr(cli.curr_input, '\n');
810003ad:	83 ec 08             	sub    $0x8,%esp
810003b0:	6a 0a                	push   $0xa
810003b2:	68 60 78 00 81       	push   $0x81007860
810003b7:	e8 04 3e 00 00       	call   810041c0 <strchr>
810003bc:	83 c4 10             	add    $0x10,%esp
810003bf:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
810003c2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810003c6:	74 06                	je     810003ce <main+0x96>
      *cr = '\0';
810003c8:	8b 45 e8             	mov    -0x18(%ebp),%eax
810003cb:	c6 00 00             	movb   $0x0,(%eax)
    }
    cr = strchr(cli.curr_input, '\r');
810003ce:	83 ec 08             	sub    $0x8,%esp
810003d1:	6a 0d                	push   $0xd
810003d3:	68 60 78 00 81       	push   $0x81007860
810003d8:	e8 e3 3d 00 00       	call   810041c0 <strchr>
810003dd:	83 c4 10             	add    $0x10,%esp
810003e0:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
810003e3:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810003e7:	74 06                	je     810003ef <main+0xb7>
      *cr = '\0';
810003e9:	8b 45 e8             	mov    -0x18(%ebp),%eax
810003ec:	c6 00 00             	movb   $0x0,(%eax)
    }

    // 4.2解析命令行输入的程序和参数
    int argc = 0;
810003ef:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    const char *argv[CLI_MAX_ARG_COUNT];
    memset(argv, 0, sizeof(argv));
810003f6:	83 ec 04             	sub    $0x4,%esp
810003f9:	6a 28                	push   $0x28
810003fb:	6a 00                	push   $0x0
810003fd:	8d 45 b8             	lea    -0x48(%ebp),%eax
81000400:	50                   	push   %eax
81000401:	e8 fa 2c 00 00       	call   81003100 <memset>
81000406:	83 c4 10             	add    $0x10,%esp
    const char *split = " ";
81000409:	c7 45 e4 52 68 00 81 	movl   $0x81006852,-0x1c(%ebp)
    char *token =
        strtok(cli.curr_input,
81000410:	83 ec 08             	sub    $0x8,%esp
81000413:	ff 75 e4             	push   -0x1c(%ebp)
81000416:	68 60 78 00 81       	push   $0x81007860
8100041b:	e8 c9 3f 00 00       	call   810043e9 <strtok>
81000420:	83 c4 10             	add    $0x10,%esp
81000423:	89 45 f0             	mov    %eax,-0x10(%ebp)
               split);  // 将字符串中的第一个split字符换成'\0'并放回起始索引
    while (token) {
81000426:	eb 23                	jmp    8100044b <main+0x113>
      argv[argc++] = token;
81000428:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100042b:	8d 50 01             	lea    0x1(%eax),%edx
8100042e:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000431:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000434:	89 54 85 b8          	mov    %edx,-0x48(%ebp,%eax,4)
      token = strtok(NULL, split);  // 填空默认从之前找到的位置的下一个位置开始
81000438:	83 ec 08             	sub    $0x8,%esp
8100043b:	ff 75 e4             	push   -0x1c(%ebp)
8100043e:	6a 00                	push   $0x0
81000440:	e8 a4 3f 00 00       	call   810043e9 <strtok>
81000445:	83 c4 10             	add    $0x10,%esp
81000448:	89 45 f0             	mov    %eax,-0x10(%ebp)
    while (token) {
8100044b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100044f:	75 d7                	jne    81000428 <main+0xf0>
    }

    if (argc == 0) {
81000451:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000455:	74 58                	je     810004af <main+0x177>
      continue;
    }

    // 4.3 获取可执行的命令结构，并执行
    const cli_cmd_t *cmd = find_builtin(argv[0]);
81000457:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100045a:	83 ec 0c             	sub    $0xc,%esp
8100045d:	50                   	push   %eax
8100045e:	e8 49 fe ff ff       	call   810002ac <find_builtin>
81000463:	83 c4 10             	add    $0x10,%esp
81000466:	89 45 e0             	mov    %eax,-0x20(%ebp)
    if (cmd) {
81000469:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8100046d:	74 17                	je     81000486 <main+0x14e>
      run_builtin(cmd, argc, argv);
8100046f:	83 ec 04             	sub    $0x4,%esp
81000472:	8d 45 b8             	lea    -0x48(%ebp),%eax
81000475:	50                   	push   %eax
81000476:	ff 75 f4             	push   -0xc(%ebp)
81000479:	ff 75 e0             	push   -0x20(%ebp)
8100047c:	e8 6e fe ff ff       	call   810002ef <run_builtin>
81000481:	83 c4 10             	add    $0x10,%esp
      continue;
81000484:	eb 2a                	jmp    810004b0 <main+0x178>
    }

    fprintf(stderr, ESC_COLOR_ERROR "Unknown command: %s\n" ESC_COLOR_DEFAULT,
81000486:	e8 80 20 00 00       	call   8100250b <__getreent>
8100048b:	8b 40 0c             	mov    0xc(%eax),%eax
8100048e:	83 ec 04             	sub    $0x4,%esp
81000491:	68 60 78 00 81       	push   $0x81007860
81000496:	68 54 68 00 81       	push   $0x81006854
8100049b:	50                   	push   %eax
8100049c:	e8 64 0b 00 00       	call   81001005 <fiprintf>
810004a1:	83 c4 10             	add    $0x10,%esp
810004a4:	e9 d4 fe ff ff       	jmp    8100037d <main+0x45>
      continue;
810004a9:	90                   	nop
810004aa:	e9 ce fe ff ff       	jmp    8100037d <main+0x45>
      continue;
810004af:	90                   	nop
  for (;;) {
810004b0:	e9 c8 fe ff ff       	jmp    8100037d <main+0x45>

810004b5 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
810004b5:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
810004b8:	8e d8                	mov    %eax,%ds
	mov %ax, %es
810004ba:	8e c0                	mov    %eax,%es
	mov %ax, %fs
810004bc:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
810004be:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
810004c0:	e9 00 00 00 00       	jmp    810004c5 <cstart>

810004c5 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
810004c5:	55                   	push   %ebp
810004c6:	89 e5                	mov    %esp,%ebp
810004c8:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
810004cb:	c7 45 f4 60 76 00 81 	movl   $0x81007660,-0xc(%ebp)
    while (start < __bss_end__) {
810004d2:	eb 0c                	jmp    810004e0 <cstart+0x1b>
        *(start++) = 0;
810004d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810004d7:	8d 50 01             	lea    0x1(%eax),%edx
810004da:	89 55 f4             	mov    %edx,-0xc(%ebp)
810004dd:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
810004e0:	81 7d f4 fc 7c 00 81 	cmpl   $0x81007cfc,-0xc(%ebp)
810004e7:	72 eb                	jb     810004d4 <cstart+0xf>
    }
    
    main(argc, argv);
810004e9:	83 ec 08             	sub    $0x8,%esp
810004ec:	ff 75 0c             	push   0xc(%ebp)
810004ef:	ff 75 08             	push   0x8(%ebp)
810004f2:	e8 41 fe ff ff       	call   81000338 <main>
810004f7:	83 c4 10             	add    $0x10,%esp
}
810004fa:	90                   	nop
810004fb:	c9                   	leave  
810004fc:	c3                   	ret    

810004fd <sys_call>:
#include    "cpu/syscall.h"
#include    "os_cfg.h"
#include    "lib_syscall.h"


int sys_call(syscall_args_t *args) {
810004fd:	55                   	push   %ebp
810004fe:	89 e5                	mov    %esp,%ebp
81000500:	57                   	push   %edi
81000501:	56                   	push   %esi
81000502:	53                   	push   %ebx
81000503:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
81000506:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8100050d:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
81000514:	8b 45 08             	mov    0x8(%ebp),%eax
81000517:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
8100051a:	8b 55 08             	mov    0x8(%ebp),%edx
8100051d:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
81000520:	8b 4d 08             	mov    0x8(%ebp),%ecx
81000523:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
81000526:	8b 5d 08             	mov    0x8(%ebp),%ebx
81000529:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
8100052c:	8b 75 08             	mov    0x8(%ebp),%esi
8100052f:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
81000531:	8d 7d e8             	lea    -0x18(%ebp),%edi
81000534:	50                   	push   %eax
81000535:	52                   	push   %edx
81000536:	51                   	push   %ecx
81000537:	53                   	push   %ebx
81000538:	56                   	push   %esi
81000539:	ff 1f                	lcall  *(%edi)
8100053b:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
8100053e:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
81000541:	83 c4 10             	add    $0x10,%esp
81000544:	5b                   	pop    %ebx
81000545:	5e                   	pop    %esi
81000546:	5f                   	pop    %edi
81000547:	5d                   	pop    %ebp
81000548:	c3                   	ret    

81000549 <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
81000549:	55                   	push   %ebp
8100054a:	89 e5                	mov    %esp,%ebp
8100054c:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
8100054f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000553:	7e 1b                	jle    81000570 <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
81000555:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
8100055c:	8b 45 08             	mov    0x8(%ebp),%eax
8100055f:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
81000562:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000565:	50                   	push   %eax
81000566:	e8 92 ff ff ff       	call   810004fd <sys_call>
8100056b:	83 c4 04             	add    $0x4,%esp
8100056e:	eb 01                	jmp    81000571 <msleep+0x28>
    if (ms <= 0) return;
81000570:	90                   	nop

}
81000571:	c9                   	leave  
81000572:	c3                   	ret    

81000573 <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
81000573:	55                   	push   %ebp
81000574:	89 e5                	mov    %esp,%ebp
81000576:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000579:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
81000580:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000583:	50                   	push   %eax
81000584:	e8 74 ff ff ff       	call   810004fd <sys_call>
81000589:	83 c4 04             	add    $0x4,%esp
}
8100058c:	c9                   	leave  
8100058d:	c3                   	ret    

8100058e <print_msg>:

void print_msg(const char *fmt, int arg) {
8100058e:	55                   	push   %ebp
8100058f:	89 e5                	mov    %esp,%ebp
81000591:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
81000594:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
8100059b:	8b 45 08             	mov    0x8(%ebp),%eax
8100059e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
810005a1:	8b 45 0c             	mov    0xc(%ebp),%eax
810005a4:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
810005a7:	8d 45 ec             	lea    -0x14(%ebp),%eax
810005aa:	50                   	push   %eax
810005ab:	e8 4d ff ff ff       	call   810004fd <sys_call>
810005b0:	83 c4 04             	add    $0x4,%esp
}
810005b3:	90                   	nop
810005b4:	c9                   	leave  
810005b5:	c3                   	ret    

810005b6 <fork>:

int fork (void) {
810005b6:	55                   	push   %ebp
810005b7:	89 e5                	mov    %esp,%ebp
810005b9:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
810005bc:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
810005c3:	8d 45 ec             	lea    -0x14(%ebp),%eax
810005c6:	50                   	push   %eax
810005c7:	e8 31 ff ff ff       	call   810004fd <sys_call>
810005cc:	83 c4 04             	add    $0x4,%esp
}
810005cf:	c9                   	leave  
810005d0:	c3                   	ret    

810005d1 <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
810005d1:	55                   	push   %ebp
810005d2:	89 e5                	mov    %esp,%ebp
810005d4:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
810005d7:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
810005de:	8b 45 08             	mov    0x8(%ebp),%eax
810005e1:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
810005e4:	8b 45 0c             	mov    0xc(%ebp),%eax
810005e7:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
810005ea:	8b 45 10             	mov    0x10(%ebp),%eax
810005ed:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
810005f0:	8d 45 ec             	lea    -0x14(%ebp),%eax
810005f3:	50                   	push   %eax
810005f4:	e8 04 ff ff ff       	call   810004fd <sys_call>
810005f9:	83 c4 04             	add    $0x4,%esp
}
810005fc:	c9                   	leave  
810005fd:	c3                   	ret    

810005fe <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
810005fe:	55                   	push   %ebp
810005ff:	89 e5                	mov    %esp,%ebp
81000601:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
81000604:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
8100060b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100060e:	50                   	push   %eax
8100060f:	e8 e9 fe ff ff       	call   810004fd <sys_call>
81000614:	83 c4 04             	add    $0x4,%esp
}
81000617:	c9                   	leave  
81000618:	c3                   	ret    

81000619 <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
81000619:	55                   	push   %ebp
8100061a:	89 e5                	mov    %esp,%ebp
8100061c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
8100061f:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
81000626:	8b 45 08             	mov    0x8(%ebp),%eax
81000629:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
8100062c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100062f:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000632:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000635:	50                   	push   %eax
81000636:	e8 c2 fe ff ff       	call   810004fd <sys_call>
8100063b:	83 c4 04             	add    $0x4,%esp
}
8100063e:	c9                   	leave  
8100063f:	c3                   	ret    

81000640 <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
81000640:	55                   	push   %ebp
81000641:	89 e5                	mov    %esp,%ebp
81000643:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
81000646:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
8100064d:	8b 45 08             	mov    0x8(%ebp),%eax
81000650:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000653:	8b 45 0c             	mov    0xc(%ebp),%eax
81000656:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000659:	8b 45 10             	mov    0x10(%ebp),%eax
8100065c:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8100065f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000662:	50                   	push   %eax
81000663:	e8 95 fe ff ff       	call   810004fd <sys_call>
81000668:	83 c4 04             	add    $0x4,%esp
}
8100066b:	c9                   	leave  
8100066c:	c3                   	ret    

8100066d <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
8100066d:	55                   	push   %ebp
8100066e:	89 e5                	mov    %esp,%ebp
81000670:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
81000673:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
8100067a:	8b 45 08             	mov    0x8(%ebp),%eax
8100067d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000680:	8b 45 0c             	mov    0xc(%ebp),%eax
81000683:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000686:	8b 45 10             	mov    0x10(%ebp),%eax
81000689:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8100068c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100068f:	50                   	push   %eax
81000690:	e8 68 fe ff ff       	call   810004fd <sys_call>
81000695:	83 c4 04             	add    $0x4,%esp
}
81000698:	c9                   	leave  
81000699:	c3                   	ret    

8100069a <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
8100069a:	55                   	push   %ebp
8100069b:	89 e5                	mov    %esp,%ebp
8100069d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
810006a0:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
810006a7:	8b 45 08             	mov    0x8(%ebp),%eax
810006aa:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
810006ad:	8d 45 ec             	lea    -0x14(%ebp),%eax
810006b0:	50                   	push   %eax
810006b1:	e8 47 fe ff ff       	call   810004fd <sys_call>
810006b6:	83 c4 04             	add    $0x4,%esp
}
810006b9:	c9                   	leave  
810006ba:	c3                   	ret    

810006bb <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
810006bb:	55                   	push   %ebp
810006bc:	89 e5                	mov    %esp,%ebp
810006be:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
810006c1:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
810006c8:	8b 45 08             	mov    0x8(%ebp),%eax
810006cb:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
810006ce:	8b 45 0c             	mov    0xc(%ebp),%eax
810006d1:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
810006d4:	8b 45 10             	mov    0x10(%ebp),%eax
810006d7:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
810006da:	8d 45 ec             	lea    -0x14(%ebp),%eax
810006dd:	50                   	push   %eax
810006de:	e8 1a fe ff ff       	call   810004fd <sys_call>
810006e3:	83 c4 04             	add    $0x4,%esp
}
810006e6:	c9                   	leave  
810006e7:	c3                   	ret    

810006e8 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
810006e8:	55                   	push   %ebp
810006e9:	89 e5                	mov    %esp,%ebp
810006eb:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
810006ee:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
810006f5:	8b 45 08             	mov    0x8(%ebp),%eax
810006f8:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
810006fb:	8d 45 ec             	lea    -0x14(%ebp),%eax
810006fe:	50                   	push   %eax
810006ff:	e8 f9 fd ff ff       	call   810004fd <sys_call>
81000704:	83 c4 04             	add    $0x4,%esp
}
81000707:	c9                   	leave  
81000708:	c3                   	ret    

81000709 <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
81000709:	55                   	push   %ebp
8100070a:	89 e5                	mov    %esp,%ebp
8100070c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
8100070f:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
81000716:	8b 45 08             	mov    0x8(%ebp),%eax
81000719:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
8100071c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100071f:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000722:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000725:	50                   	push   %eax
81000726:	e8 d2 fd ff ff       	call   810004fd <sys_call>
8100072b:	83 c4 04             	add    $0x4,%esp
}
8100072e:	c9                   	leave  
8100072f:	c3                   	ret    

81000730 <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
81000730:	55                   	push   %ebp
81000731:	89 e5                	mov    %esp,%ebp
81000733:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
81000736:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)incr;
8100073d:	8b 45 08             	mov    0x8(%ebp),%eax
81000740:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
81000743:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000746:	50                   	push   %eax
81000747:	e8 b1 fd ff ff       	call   810004fd <sys_call>
8100074c:	83 c4 04             	add    $0x4,%esp
}
8100074f:	c9                   	leave  
81000750:	c3                   	ret    

81000751 <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
81000751:	55                   	push   %ebp
81000752:	89 e5                	mov    %esp,%ebp
81000754:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
81000757:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0 = file;
8100075e:	8b 45 08             	mov    0x8(%ebp),%eax
81000761:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000764:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000767:	50                   	push   %eax
81000768:	e8 90 fd ff ff       	call   810004fd <sys_call>
8100076d:	83 c4 04             	add    $0x4,%esp
81000770:	c9                   	leave  
81000771:	c3                   	ret    

81000772 <atoi>:
81000772:	55                   	push   %ebp
81000773:	89 e5                	mov    %esp,%ebp
81000775:	83 ec 08             	sub    $0x8,%esp
81000778:	83 ec 04             	sub    $0x4,%esp
8100077b:	6a 0a                	push   $0xa
8100077d:	6a 00                	push   $0x0
8100077f:	ff 75 08             	push   0x8(%ebp)
81000782:	e8 9f 3f 00 00       	call   81004726 <strtol>
81000787:	83 c4 10             	add    $0x10,%esp
8100078a:	c9                   	leave  
8100078b:	c3                   	ret    

8100078c <_atoi_r>:
8100078c:	55                   	push   %ebp
8100078d:	89 e5                	mov    %esp,%ebp
8100078f:	83 ec 08             	sub    $0x8,%esp
81000792:	6a 0a                	push   $0xa
81000794:	6a 00                	push   $0x0
81000796:	ff 75 0c             	push   0xc(%ebp)
81000799:	ff 75 08             	push   0x8(%ebp)
8100079c:	e8 3b 3f 00 00       	call   810046dc <_strtol_r>
810007a1:	83 c4 10             	add    $0x10,%esp
810007a4:	c9                   	leave  
810007a5:	c3                   	ret    

810007a6 <__sflush_r>:
810007a6:	55                   	push   %ebp
810007a7:	89 e5                	mov    %esp,%ebp
810007a9:	57                   	push   %edi
810007aa:	56                   	push   %esi
810007ab:	53                   	push   %ebx
810007ac:	83 ec 1c             	sub    $0x1c,%esp
810007af:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810007b2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810007b6:	66 89 45 de          	mov    %ax,-0x22(%ebp)
810007ba:	0f bf 45 de          	movswl -0x22(%ebp),%eax
810007be:	83 e0 08             	and    $0x8,%eax
810007c1:	85 c0                	test   %eax,%eax
810007c3:	0f 85 93 01 00 00    	jne    8100095c <__sflush_r+0x1b6>
810007c9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810007cd:	80 cc 08             	or     $0x8,%ah
810007d0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810007d4:	8b 43 04             	mov    0x4(%ebx),%eax
810007d7:	85 c0                	test   %eax,%eax
810007d9:	7f 0b                	jg     810007e6 <__sflush_r+0x40>
810007db:	8b 43 3c             	mov    0x3c(%ebx),%eax
810007de:	85 c0                	test   %eax,%eax
810007e0:	0f 8e 6f 01 00 00    	jle    81000955 <__sflush_r+0x1af>
810007e6:	8b 43 28             	mov    0x28(%ebx),%eax
810007e9:	85 c0                	test   %eax,%eax
810007eb:	0f 84 64 01 00 00    	je     81000955 <__sflush_r+0x1af>
810007f1:	8b 45 08             	mov    0x8(%ebp),%eax
810007f4:	8b 00                	mov    (%eax),%eax
810007f6:	89 45 d8             	mov    %eax,-0x28(%ebp)
810007f9:	8b 45 08             	mov    0x8(%ebp),%eax
810007fc:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000802:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000806:	98                   	cwtl   
81000807:	25 00 10 00 00       	and    $0x1000,%eax
8100080c:	85 c0                	test   %eax,%eax
8100080e:	74 08                	je     81000818 <__sflush_r+0x72>
81000810:	8b 43 50             	mov    0x50(%ebx),%eax
81000813:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000816:	eb 64                	jmp    8100087c <__sflush_r+0xd6>
81000818:	8b 43 28             	mov    0x28(%ebx),%eax
8100081b:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100081e:	6a 01                	push   $0x1
81000820:	6a 00                	push   $0x0
81000822:	52                   	push   %edx
81000823:	ff 75 08             	push   0x8(%ebp)
81000826:	ff d0                	call   *%eax
81000828:	83 c4 10             	add    $0x10,%esp
8100082b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100082e:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000832:	75 48                	jne    8100087c <__sflush_r+0xd6>
81000834:	8b 45 08             	mov    0x8(%ebp),%eax
81000837:	8b 00                	mov    (%eax),%eax
81000839:	85 c0                	test   %eax,%eax
8100083b:	74 3f                	je     8100087c <__sflush_r+0xd6>
8100083d:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81000844:	8b 45 08             	mov    0x8(%ebp),%eax
81000847:	8b 00                	mov    (%eax),%eax
81000849:	83 f8 1d             	cmp    $0x1d,%eax
8100084c:	74 0a                	je     81000858 <__sflush_r+0xb2>
8100084e:	8b 45 08             	mov    0x8(%ebp),%eax
81000851:	8b 00                	mov    (%eax),%eax
81000853:	83 f8 16             	cmp    $0x16,%eax
81000856:	75 11                	jne    81000869 <__sflush_r+0xc3>
81000858:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
8100085f:	8b 45 08             	mov    0x8(%ebp),%eax
81000862:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000865:	89 10                	mov    %edx,(%eax)
81000867:	eb 0b                	jmp    81000874 <__sflush_r+0xce>
81000869:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100086d:	83 c8 40             	or     $0x40,%eax
81000870:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000874:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000877:	e9 48 01 00 00       	jmp    810009c4 <__sflush_r+0x21e>
8100087c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000880:	98                   	cwtl   
81000881:	83 e0 04             	and    $0x4,%eax
81000884:	85 c0                	test   %eax,%eax
81000886:	74 13                	je     8100089b <__sflush_r+0xf5>
81000888:	8b 43 04             	mov    0x4(%ebx),%eax
8100088b:	29 45 e4             	sub    %eax,-0x1c(%ebp)
8100088e:	8b 43 30             	mov    0x30(%ebx),%eax
81000891:	85 c0                	test   %eax,%eax
81000893:	74 06                	je     8100089b <__sflush_r+0xf5>
81000895:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000898:	29 45 e4             	sub    %eax,-0x1c(%ebp)
8100089b:	8b 43 28             	mov    0x28(%ebx),%eax
8100089e:	8b 53 1c             	mov    0x1c(%ebx),%edx
810008a1:	6a 00                	push   $0x0
810008a3:	ff 75 e4             	push   -0x1c(%ebp)
810008a6:	52                   	push   %edx
810008a7:	ff 75 08             	push   0x8(%ebp)
810008aa:	ff d0                	call   *%eax
810008ac:	83 c4 10             	add    $0x10,%esp
810008af:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810008b2:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810008b6:	75 1d                	jne    810008d5 <__sflush_r+0x12f>
810008b8:	8b 45 08             	mov    0x8(%ebp),%eax
810008bb:	8b 00                	mov    (%eax),%eax
810008bd:	85 c0                	test   %eax,%eax
810008bf:	74 14                	je     810008d5 <__sflush_r+0x12f>
810008c1:	8b 45 08             	mov    0x8(%ebp),%eax
810008c4:	8b 00                	mov    (%eax),%eax
810008c6:	83 f8 1d             	cmp    $0x1d,%eax
810008c9:	74 0a                	je     810008d5 <__sflush_r+0x12f>
810008cb:	8b 45 08             	mov    0x8(%ebp),%eax
810008ce:	8b 00                	mov    (%eax),%eax
810008d0:	83 f8 16             	cmp    $0x16,%eax
810008d3:	75 6e                	jne    81000943 <__sflush_r+0x19d>
810008d5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810008d9:	80 e4 f7             	and    $0xf7,%ah
810008dc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810008e0:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810008e7:	8b 43 10             	mov    0x10(%ebx),%eax
810008ea:	89 03                	mov    %eax,(%ebx)
810008ec:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810008f0:	98                   	cwtl   
810008f1:	25 00 10 00 00       	and    $0x1000,%eax
810008f6:	85 c0                	test   %eax,%eax
810008f8:	74 15                	je     8100090f <__sflush_r+0x169>
810008fa:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810008fe:	75 09                	jne    81000909 <__sflush_r+0x163>
81000900:	8b 45 08             	mov    0x8(%ebp),%eax
81000903:	8b 00                	mov    (%eax),%eax
81000905:	85 c0                	test   %eax,%eax
81000907:	75 06                	jne    8100090f <__sflush_r+0x169>
81000909:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100090c:	89 43 50             	mov    %eax,0x50(%ebx)
8100090f:	8b 45 08             	mov    0x8(%ebp),%eax
81000912:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000915:	89 10                	mov    %edx,(%eax)
81000917:	8b 43 30             	mov    0x30(%ebx),%eax
8100091a:	85 c0                	test   %eax,%eax
8100091c:	74 37                	je     81000955 <__sflush_r+0x1af>
8100091e:	8b 53 30             	mov    0x30(%ebx),%edx
81000921:	8d 43 40             	lea    0x40(%ebx),%eax
81000924:	39 c2                	cmp    %eax,%edx
81000926:	74 12                	je     8100093a <__sflush_r+0x194>
81000928:	8b 43 30             	mov    0x30(%ebx),%eax
8100092b:	83 ec 08             	sub    $0x8,%esp
8100092e:	50                   	push   %eax
8100092f:	ff 75 08             	push   0x8(%ebp)
81000932:	e8 fa 06 00 00       	call   81001031 <_free_r>
81000937:	83 c4 10             	add    $0x10,%esp
8100093a:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81000941:	eb 12                	jmp    81000955 <__sflush_r+0x1af>
81000943:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000947:	83 c8 40             	or     $0x40,%eax
8100094a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100094e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000953:	eb 6f                	jmp    810009c4 <__sflush_r+0x21e>
81000955:	b8 00 00 00 00       	mov    $0x0,%eax
8100095a:	eb 68                	jmp    810009c4 <__sflush_r+0x21e>
8100095c:	8b 73 10             	mov    0x10(%ebx),%esi
8100095f:	85 f6                	test   %esi,%esi
81000961:	75 07                	jne    8100096a <__sflush_r+0x1c4>
81000963:	b8 00 00 00 00       	mov    $0x0,%eax
81000968:	eb 5a                	jmp    810009c4 <__sflush_r+0x21e>
8100096a:	8b 03                	mov    (%ebx),%eax
8100096c:	29 f0                	sub    %esi,%eax
8100096e:	89 c7                	mov    %eax,%edi
81000970:	89 33                	mov    %esi,(%ebx)
81000972:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000976:	83 e0 03             	and    $0x3,%eax
81000979:	85 c0                	test   %eax,%eax
8100097b:	75 05                	jne    81000982 <__sflush_r+0x1dc>
8100097d:	8b 43 14             	mov    0x14(%ebx),%eax
81000980:	eb 05                	jmp    81000987 <__sflush_r+0x1e1>
81000982:	b8 00 00 00 00       	mov    $0x0,%eax
81000987:	89 43 08             	mov    %eax,0x8(%ebx)
8100098a:	eb 2f                	jmp    810009bb <__sflush_r+0x215>
8100098c:	8b 43 24             	mov    0x24(%ebx),%eax
8100098f:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000992:	57                   	push   %edi
81000993:	56                   	push   %esi
81000994:	52                   	push   %edx
81000995:	ff 75 08             	push   0x8(%ebp)
81000998:	ff d0                	call   *%eax
8100099a:	83 c4 10             	add    $0x10,%esp
8100099d:	85 c0                	test   %eax,%eax
8100099f:	7f 12                	jg     810009b3 <__sflush_r+0x20d>
810009a1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810009a5:	83 c8 40             	or     $0x40,%eax
810009a8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810009ac:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810009b1:	eb 11                	jmp    810009c4 <__sflush_r+0x21e>
810009b3:	89 c1                	mov    %eax,%ecx
810009b5:	89 c8                	mov    %ecx,%eax
810009b7:	01 c6                	add    %eax,%esi
810009b9:	29 cf                	sub    %ecx,%edi
810009bb:	85 ff                	test   %edi,%edi
810009bd:	7f cd                	jg     8100098c <__sflush_r+0x1e6>
810009bf:	b8 00 00 00 00       	mov    $0x0,%eax
810009c4:	8d 65 f4             	lea    -0xc(%ebp),%esp
810009c7:	5b                   	pop    %ebx
810009c8:	5e                   	pop    %esi
810009c9:	5f                   	pop    %edi
810009ca:	5d                   	pop    %ebp
810009cb:	c3                   	ret    

810009cc <_fflush_r>:
810009cc:	55                   	push   %ebp
810009cd:	89 e5                	mov    %esp,%ebp
810009cf:	53                   	push   %ebx
810009d0:	83 ec 14             	sub    $0x14,%esp
810009d3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810009d6:	8b 45 08             	mov    0x8(%ebp),%eax
810009d9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810009dc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810009e0:	74 18                	je     810009fa <_fflush_r+0x2e>
810009e2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810009e5:	8b 40 38             	mov    0x38(%eax),%eax
810009e8:	85 c0                	test   %eax,%eax
810009ea:	75 0e                	jne    810009fa <_fflush_r+0x2e>
810009ec:	83 ec 0c             	sub    $0xc,%esp
810009ef:	ff 75 f4             	push   -0xc(%ebp)
810009f2:	e8 d8 04 00 00       	call   81000ecf <__sinit>
810009f7:	83 c4 10             	add    $0x10,%esp
810009fa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810009fe:	66 85 c0             	test   %ax,%ax
81000a01:	75 07                	jne    81000a0a <_fflush_r+0x3e>
81000a03:	b8 00 00 00 00       	mov    $0x0,%eax
81000a08:	eb 15                	jmp    81000a1f <_fflush_r+0x53>
81000a0a:	83 ec 08             	sub    $0x8,%esp
81000a0d:	53                   	push   %ebx
81000a0e:	ff 75 08             	push   0x8(%ebp)
81000a11:	e8 90 fd ff ff       	call   810007a6 <__sflush_r>
81000a16:	83 c4 10             	add    $0x10,%esp
81000a19:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000a1c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000a1f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000a22:	c9                   	leave  
81000a23:	c3                   	ret    

81000a24 <fflush>:
81000a24:	55                   	push   %ebp
81000a25:	89 e5                	mov    %esp,%ebp
81000a27:	83 ec 08             	sub    $0x8,%esp
81000a2a:	8b 55 08             	mov    0x8(%ebp),%edx
81000a2d:	85 d2                	test   %edx,%edx
81000a2f:	75 18                	jne    81000a49 <fflush+0x25>
81000a31:	a1 fc 68 00 81       	mov    0x810068fc,%eax
81000a36:	83 ec 08             	sub    $0x8,%esp
81000a39:	68 cc 09 00 81       	push   $0x810009cc
81000a3e:	50                   	push   %eax
81000a3f:	e8 91 0b 00 00       	call   810015d5 <_fwalk_reent>
81000a44:	83 c4 10             	add    $0x10,%esp
81000a47:	eb 12                	jmp    81000a5b <fflush+0x37>
81000a49:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81000a4e:	83 ec 08             	sub    $0x8,%esp
81000a51:	52                   	push   %edx
81000a52:	50                   	push   %eax
81000a53:	e8 74 ff ff ff       	call   810009cc <_fflush_r>
81000a58:	83 c4 10             	add    $0x10,%esp
81000a5b:	c9                   	leave  
81000a5c:	c3                   	ret    

81000a5d <_fgets_r>:
81000a5d:	55                   	push   %ebp
81000a5e:	89 e5                	mov    %esp,%ebp
81000a60:	83 ec 28             	sub    $0x28,%esp
81000a63:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
81000a67:	7f 0a                	jg     81000a73 <_fgets_r+0x16>
81000a69:	b8 00 00 00 00       	mov    $0x0,%eax
81000a6e:	e9 46 01 00 00       	jmp    81000bb9 <_fgets_r+0x15c>
81000a73:	8b 45 0c             	mov    0xc(%ebp),%eax
81000a76:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000a79:	8b 45 08             	mov    0x8(%ebp),%eax
81000a7c:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000a7f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000a83:	74 18                	je     81000a9d <_fgets_r+0x40>
81000a85:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000a88:	8b 40 38             	mov    0x38(%eax),%eax
81000a8b:	85 c0                	test   %eax,%eax
81000a8d:	75 0e                	jne    81000a9d <_fgets_r+0x40>
81000a8f:	83 ec 0c             	sub    $0xc,%esp
81000a92:	ff 75 ec             	push   -0x14(%ebp)
81000a95:	e8 35 04 00 00       	call   81000ecf <__sinit>
81000a9a:	83 c4 10             	add    $0x10,%esp
81000a9d:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
81000aa1:	8b 45 14             	mov    0x14(%ebp),%eax
81000aa4:	8b 40 04             	mov    0x4(%eax),%eax
81000aa7:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000aaa:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000aae:	75 34                	jne    81000ae4 <_fgets_r+0x87>
81000ab0:	83 ec 08             	sub    $0x8,%esp
81000ab3:	ff 75 14             	push   0x14(%ebp)
81000ab6:	ff 75 08             	push   0x8(%ebp)
81000ab9:	e8 a6 33 00 00       	call   81003e64 <__srefill_r>
81000abe:	83 c4 10             	add    $0x10,%esp
81000ac1:	85 c0                	test   %eax,%eax
81000ac3:	74 16                	je     81000adb <_fgets_r+0x7e>
81000ac5:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000ac8:	3b 45 0c             	cmp    0xc(%ebp),%eax
81000acb:	0f 85 de 00 00 00    	jne    81000baf <_fgets_r+0x152>
81000ad1:	b8 00 00 00 00       	mov    $0x0,%eax
81000ad6:	e9 de 00 00 00       	jmp    81000bb9 <_fgets_r+0x15c>
81000adb:	8b 45 14             	mov    0x14(%ebp),%eax
81000ade:	8b 40 04             	mov    0x4(%eax),%eax
81000ae1:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000ae4:	8b 45 14             	mov    0x14(%ebp),%eax
81000ae7:	8b 00                	mov    (%eax),%eax
81000ae9:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000aec:	8b 45 10             	mov    0x10(%ebp),%eax
81000aef:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000af2:	76 06                	jbe    81000afa <_fgets_r+0x9d>
81000af4:	8b 45 10             	mov    0x10(%ebp),%eax
81000af7:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000afa:	83 ec 04             	sub    $0x4,%esp
81000afd:	ff 75 f4             	push   -0xc(%ebp)
81000b00:	6a 0a                	push   $0xa
81000b02:	ff 75 e8             	push   -0x18(%ebp)
81000b05:	e8 c6 24 00 00       	call   81002fd0 <memchr>
81000b0a:	83 c4 10             	add    $0x10,%esp
81000b0d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000b10:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000b14:	74 4a                	je     81000b60 <_fgets_r+0x103>
81000b16:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81000b1a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000b1d:	2b 45 e8             	sub    -0x18(%ebp),%eax
81000b20:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000b23:	8b 45 14             	mov    0x14(%ebp),%eax
81000b26:	8b 40 04             	mov    0x4(%eax),%eax
81000b29:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000b2c:	89 c2                	mov    %eax,%edx
81000b2e:	8b 45 14             	mov    0x14(%ebp),%eax
81000b31:	89 50 04             	mov    %edx,0x4(%eax)
81000b34:	8b 45 14             	mov    0x14(%ebp),%eax
81000b37:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81000b3a:	89 10                	mov    %edx,(%eax)
81000b3c:	83 ec 04             	sub    $0x4,%esp
81000b3f:	ff 75 f4             	push   -0xc(%ebp)
81000b42:	ff 75 e8             	push   -0x18(%ebp)
81000b45:	ff 75 f0             	push   -0x10(%ebp)
81000b48:	e8 6b 25 00 00       	call   810030b8 <memcpy>
81000b4d:	83 c4 10             	add    $0x10,%esp
81000b50:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000b53:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000b56:	01 d0                	add    %edx,%eax
81000b58:	c6 00 00             	movb   $0x0,(%eax)
81000b5b:	8b 45 0c             	mov    0xc(%ebp),%eax
81000b5e:	eb 59                	jmp    81000bb9 <_fgets_r+0x15c>
81000b60:	8b 45 14             	mov    0x14(%ebp),%eax
81000b63:	8b 40 04             	mov    0x4(%eax),%eax
81000b66:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000b69:	89 c2                	mov    %eax,%edx
81000b6b:	8b 45 14             	mov    0x14(%ebp),%eax
81000b6e:	89 50 04             	mov    %edx,0x4(%eax)
81000b71:	8b 45 14             	mov    0x14(%ebp),%eax
81000b74:	8b 10                	mov    (%eax),%edx
81000b76:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000b79:	01 c2                	add    %eax,%edx
81000b7b:	8b 45 14             	mov    0x14(%ebp),%eax
81000b7e:	89 10                	mov    %edx,(%eax)
81000b80:	83 ec 04             	sub    $0x4,%esp
81000b83:	ff 75 f4             	push   -0xc(%ebp)
81000b86:	ff 75 e8             	push   -0x18(%ebp)
81000b89:	ff 75 f0             	push   -0x10(%ebp)
81000b8c:	e8 27 25 00 00       	call   810030b8 <memcpy>
81000b91:	83 c4 10             	add    $0x10,%esp
81000b94:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000b97:	01 45 f0             	add    %eax,-0x10(%ebp)
81000b9a:	8b 45 10             	mov    0x10(%ebp),%eax
81000b9d:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000ba0:	89 45 10             	mov    %eax,0x10(%ebp)
81000ba3:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81000ba7:	0f 85 f4 fe ff ff    	jne    81000aa1 <_fgets_r+0x44>
81000bad:	eb 01                	jmp    81000bb0 <_fgets_r+0x153>
81000baf:	90                   	nop
81000bb0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000bb3:	c6 00 00             	movb   $0x0,(%eax)
81000bb6:	8b 45 0c             	mov    0xc(%ebp),%eax
81000bb9:	c9                   	leave  
81000bba:	c3                   	ret    

81000bbb <fgets>:
81000bbb:	55                   	push   %ebp
81000bbc:	89 e5                	mov    %esp,%ebp
81000bbe:	83 ec 08             	sub    $0x8,%esp
81000bc1:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81000bc6:	ff 75 10             	push   0x10(%ebp)
81000bc9:	ff 75 0c             	push   0xc(%ebp)
81000bcc:	ff 75 08             	push   0x8(%ebp)
81000bcf:	50                   	push   %eax
81000bd0:	e8 88 fe ff ff       	call   81000a5d <_fgets_r>
81000bd5:	83 c4 10             	add    $0x10,%esp
81000bd8:	c9                   	leave  
81000bd9:	c3                   	ret    

81000bda <std>:
81000bda:	55                   	push   %ebp
81000bdb:	89 e5                	mov    %esp,%ebp
81000bdd:	83 ec 08             	sub    $0x8,%esp
81000be0:	8b 45 08             	mov    0x8(%ebp),%eax
81000be3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000be9:	8b 45 08             	mov    0x8(%ebp),%eax
81000bec:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000bf3:	8b 45 08             	mov    0x8(%ebp),%eax
81000bf6:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000bfd:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c00:	89 c2                	mov    %eax,%edx
81000c02:	8b 45 08             	mov    0x8(%ebp),%eax
81000c05:	66 89 50 0c          	mov    %dx,0xc(%eax)
81000c09:	8b 45 08             	mov    0x8(%ebp),%eax
81000c0c:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000c13:	8b 45 10             	mov    0x10(%ebp),%eax
81000c16:	89 c2                	mov    %eax,%edx
81000c18:	8b 45 08             	mov    0x8(%ebp),%eax
81000c1b:	66 89 50 0e          	mov    %dx,0xe(%eax)
81000c1f:	8b 45 08             	mov    0x8(%ebp),%eax
81000c22:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000c29:	8b 45 08             	mov    0x8(%ebp),%eax
81000c2c:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000c33:	8b 45 08             	mov    0x8(%ebp),%eax
81000c36:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000c3d:	8b 45 08             	mov    0x8(%ebp),%eax
81000c40:	83 c0 5c             	add    $0x5c,%eax
81000c43:	83 ec 04             	sub    $0x4,%esp
81000c46:	6a 08                	push   $0x8
81000c48:	6a 00                	push   $0x0
81000c4a:	50                   	push   %eax
81000c4b:	e8 b0 24 00 00       	call   81003100 <memset>
81000c50:	83 c4 10             	add    $0x10,%esp
81000c53:	8b 45 08             	mov    0x8(%ebp),%eax
81000c56:	8b 55 08             	mov    0x8(%ebp),%edx
81000c59:	89 50 1c             	mov    %edx,0x1c(%eax)
81000c5c:	8b 45 08             	mov    0x8(%ebp),%eax
81000c5f:	c7 40 20 a5 40 00 81 	movl   $0x810040a5,0x20(%eax)
81000c66:	8b 45 08             	mov    0x8(%ebp),%eax
81000c69:	c7 40 24 f3 40 00 81 	movl   $0x810040f3,0x24(%eax)
81000c70:	8b 45 08             	mov    0x8(%ebp),%eax
81000c73:	c7 40 28 4e 41 00 81 	movl   $0x8100414e,0x28(%eax)
81000c7a:	8b 45 08             	mov    0x8(%ebp),%eax
81000c7d:	c7 40 2c 98 41 00 81 	movl   $0x81004198,0x2c(%eax)
81000c84:	90                   	nop
81000c85:	c9                   	leave  
81000c86:	c3                   	ret    

81000c87 <stdin_init>:
81000c87:	55                   	push   %ebp
81000c88:	89 e5                	mov    %esp,%ebp
81000c8a:	83 ec 08             	sub    $0x8,%esp
81000c8d:	83 ec 04             	sub    $0x4,%esp
81000c90:	6a 00                	push   $0x0
81000c92:	6a 04                	push   $0x4
81000c94:	ff 75 08             	push   0x8(%ebp)
81000c97:	e8 3e ff ff ff       	call   81000bda <std>
81000c9c:	83 c4 10             	add    $0x10,%esp
81000c9f:	90                   	nop
81000ca0:	c9                   	leave  
81000ca1:	c3                   	ret    

81000ca2 <stdout_init>:
81000ca2:	55                   	push   %ebp
81000ca3:	89 e5                	mov    %esp,%ebp
81000ca5:	83 ec 08             	sub    $0x8,%esp
81000ca8:	83 ec 04             	sub    $0x4,%esp
81000cab:	6a 01                	push   $0x1
81000cad:	6a 09                	push   $0x9
81000caf:	ff 75 08             	push   0x8(%ebp)
81000cb2:	e8 23 ff ff ff       	call   81000bda <std>
81000cb7:	83 c4 10             	add    $0x10,%esp
81000cba:	90                   	nop
81000cbb:	c9                   	leave  
81000cbc:	c3                   	ret    

81000cbd <stderr_init>:
81000cbd:	55                   	push   %ebp
81000cbe:	89 e5                	mov    %esp,%ebp
81000cc0:	83 ec 08             	sub    $0x8,%esp
81000cc3:	83 ec 04             	sub    $0x4,%esp
81000cc6:	6a 02                	push   $0x2
81000cc8:	6a 12                	push   $0x12
81000cca:	ff 75 08             	push   0x8(%ebp)
81000ccd:	e8 08 ff ff ff       	call   81000bda <std>
81000cd2:	83 c4 10             	add    $0x10,%esp
81000cd5:	90                   	nop
81000cd6:	c9                   	leave  
81000cd7:	c3                   	ret    

81000cd8 <__sfmoreglue>:
81000cd8:	55                   	push   %ebp
81000cd9:	89 e5                	mov    %esp,%ebp
81000cdb:	53                   	push   %ebx
81000cdc:	83 ec 14             	sub    $0x14,%esp
81000cdf:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000ce2:	8d 43 ff             	lea    -0x1(%ebx),%eax
81000ce5:	6b c0 68             	imul   $0x68,%eax,%eax
81000ce8:	83 c0 74             	add    $0x74,%eax
81000ceb:	83 ec 08             	sub    $0x8,%esp
81000cee:	50                   	push   %eax
81000cef:	ff 75 08             	push   0x8(%ebp)
81000cf2:	e8 b1 1a 00 00       	call   810027a8 <_malloc_r>
81000cf7:	83 c4 10             	add    $0x10,%esp
81000cfa:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000cfd:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000d01:	75 07                	jne    81000d0a <__sfmoreglue+0x32>
81000d03:	b8 00 00 00 00       	mov    $0x0,%eax
81000d08:	eb 38                	jmp    81000d42 <__sfmoreglue+0x6a>
81000d0a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000d0d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000d13:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000d16:	89 58 04             	mov    %ebx,0x4(%eax)
81000d19:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000d1c:	8d 50 0c             	lea    0xc(%eax),%edx
81000d1f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000d22:	89 50 08             	mov    %edx,0x8(%eax)
81000d25:	89 d8                	mov    %ebx,%eax
81000d27:	6b c0 68             	imul   $0x68,%eax,%eax
81000d2a:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000d2d:	83 c2 0c             	add    $0xc,%edx
81000d30:	83 ec 04             	sub    $0x4,%esp
81000d33:	50                   	push   %eax
81000d34:	6a 00                	push   $0x0
81000d36:	52                   	push   %edx
81000d37:	e8 c4 23 00 00       	call   81003100 <memset>
81000d3c:	83 c4 10             	add    $0x10,%esp
81000d3f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000d42:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000d45:	c9                   	leave  
81000d46:	c3                   	ret    

81000d47 <__sfp>:
81000d47:	55                   	push   %ebp
81000d48:	89 e5                	mov    %esp,%ebp
81000d4a:	83 ec 18             	sub    $0x18,%esp
81000d4d:	e8 16 02 00 00       	call   81000f68 <__sfp_lock_acquire>
81000d52:	a1 fc 68 00 81       	mov    0x810068fc,%eax
81000d57:	8b 40 38             	mov    0x38(%eax),%eax
81000d5a:	85 c0                	test   %eax,%eax
81000d5c:	75 11                	jne    81000d6f <__sfp+0x28>
81000d5e:	a1 fc 68 00 81       	mov    0x810068fc,%eax
81000d63:	83 ec 0c             	sub    $0xc,%esp
81000d66:	50                   	push   %eax
81000d67:	e8 63 01 00 00       	call   81000ecf <__sinit>
81000d6c:	83 c4 10             	add    $0x10,%esp
81000d6f:	a1 fc 68 00 81       	mov    0x810068fc,%eax
81000d74:	05 e0 02 00 00       	add    $0x2e0,%eax
81000d79:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000d7c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000d7f:	8b 40 08             	mov    0x8(%eax),%eax
81000d82:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000d85:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000d88:	8b 40 04             	mov    0x4(%eax),%eax
81000d8b:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000d8e:	eb 10                	jmp    81000da0 <__sfp+0x59>
81000d90:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000d93:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000d97:	66 85 c0             	test   %ax,%ax
81000d9a:	74 58                	je     81000df4 <__sfp+0xad>
81000d9c:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
81000da0:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81000da4:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000da8:	79 e6                	jns    81000d90 <__sfp+0x49>
81000daa:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000dad:	8b 00                	mov    (%eax),%eax
81000daf:	85 c0                	test   %eax,%eax
81000db1:	75 1e                	jne    81000dd1 <__sfp+0x8a>
81000db3:	83 ec 08             	sub    $0x8,%esp
81000db6:	6a 04                	push   $0x4
81000db8:	ff 75 08             	push   0x8(%ebp)
81000dbb:	e8 18 ff ff ff       	call   81000cd8 <__sfmoreglue>
81000dc0:	83 c4 10             	add    $0x10,%esp
81000dc3:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000dc6:	89 02                	mov    %eax,(%edx)
81000dc8:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000dcb:	8b 00                	mov    (%eax),%eax
81000dcd:	85 c0                	test   %eax,%eax
81000dcf:	74 0a                	je     81000ddb <__sfp+0x94>
81000dd1:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000dd4:	8b 00                	mov    (%eax),%eax
81000dd6:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000dd9:	eb a1                	jmp    81000d7c <__sfp+0x35>
81000ddb:	90                   	nop
81000ddc:	e8 8d 01 00 00       	call   81000f6e <__sfp_lock_release>
81000de1:	8b 45 08             	mov    0x8(%ebp),%eax
81000de4:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000dea:	b8 00 00 00 00       	mov    $0x0,%eax
81000def:	e9 9e 00 00 00       	jmp    81000e92 <__sfp+0x14b>
81000df4:	90                   	nop
81000df5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000df8:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
81000dfe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e01:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
81000e07:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e0a:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000e11:	e8 58 01 00 00       	call   81000f6e <__sfp_lock_release>
81000e16:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e19:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000e1f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e22:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000e29:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e2c:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000e33:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e36:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000e3d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e40:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000e47:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e4a:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000e51:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e54:	83 c0 5c             	add    $0x5c,%eax
81000e57:	83 ec 04             	sub    $0x4,%esp
81000e5a:	6a 08                	push   $0x8
81000e5c:	6a 00                	push   $0x0
81000e5e:	50                   	push   %eax
81000e5f:	e8 9c 22 00 00       	call   81003100 <memset>
81000e64:	83 c4 10             	add    $0x10,%esp
81000e67:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e6a:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81000e71:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e74:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
81000e7b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e7e:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81000e85:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e88:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
81000e8f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e92:	c9                   	leave  
81000e93:	c3                   	ret    

81000e94 <_cleanup_r>:
81000e94:	55                   	push   %ebp
81000e95:	89 e5                	mov    %esp,%ebp
81000e97:	83 ec 18             	sub    $0x18,%esp
81000e9a:	c7 45 f4 6d 4a 00 81 	movl   $0x81004a6d,-0xc(%ebp)
81000ea1:	83 ec 08             	sub    $0x8,%esp
81000ea4:	ff 75 f4             	push   -0xc(%ebp)
81000ea7:	ff 75 08             	push   0x8(%ebp)
81000eaa:	e8 26 07 00 00       	call   810015d5 <_fwalk_reent>
81000eaf:	83 c4 10             	add    $0x10,%esp
81000eb2:	90                   	nop
81000eb3:	c9                   	leave  
81000eb4:	c3                   	ret    

81000eb5 <_cleanup>:
81000eb5:	55                   	push   %ebp
81000eb6:	89 e5                	mov    %esp,%ebp
81000eb8:	83 ec 08             	sub    $0x8,%esp
81000ebb:	a1 fc 68 00 81       	mov    0x810068fc,%eax
81000ec0:	83 ec 0c             	sub    $0xc,%esp
81000ec3:	50                   	push   %eax
81000ec4:	e8 cb ff ff ff       	call   81000e94 <_cleanup_r>
81000ec9:	83 c4 10             	add    $0x10,%esp
81000ecc:	90                   	nop
81000ecd:	c9                   	leave  
81000ece:	c3                   	ret    

81000ecf <__sinit>:
81000ecf:	55                   	push   %ebp
81000ed0:	89 e5                	mov    %esp,%ebp
81000ed2:	83 ec 08             	sub    $0x8,%esp
81000ed5:	e8 9a 00 00 00       	call   81000f74 <__sinit_lock_acquire>
81000eda:	8b 45 08             	mov    0x8(%ebp),%eax
81000edd:	8b 40 38             	mov    0x38(%eax),%eax
81000ee0:	85 c0                	test   %eax,%eax
81000ee2:	74 07                	je     81000eeb <__sinit+0x1c>
81000ee4:	e8 91 00 00 00       	call   81000f7a <__sinit_lock_release>
81000ee9:	eb 7b                	jmp    81000f66 <__sinit+0x97>
81000eeb:	8b 45 08             	mov    0x8(%ebp),%eax
81000eee:	c7 40 3c 94 0e 00 81 	movl   $0x81000e94,0x3c(%eax)
81000ef5:	8b 45 08             	mov    0x8(%ebp),%eax
81000ef8:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
81000eff:	00 00 00 
81000f02:	8b 45 08             	mov    0x8(%ebp),%eax
81000f05:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
81000f0c:	00 00 00 
81000f0f:	8b 45 08             	mov    0x8(%ebp),%eax
81000f12:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
81000f18:	8b 45 08             	mov    0x8(%ebp),%eax
81000f1b:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81000f21:	8b 45 08             	mov    0x8(%ebp),%eax
81000f24:	8b 40 04             	mov    0x4(%eax),%eax
81000f27:	83 ec 0c             	sub    $0xc,%esp
81000f2a:	50                   	push   %eax
81000f2b:	e8 57 fd ff ff       	call   81000c87 <stdin_init>
81000f30:	83 c4 10             	add    $0x10,%esp
81000f33:	8b 45 08             	mov    0x8(%ebp),%eax
81000f36:	8b 40 08             	mov    0x8(%eax),%eax
81000f39:	83 ec 0c             	sub    $0xc,%esp
81000f3c:	50                   	push   %eax
81000f3d:	e8 60 fd ff ff       	call   81000ca2 <stdout_init>
81000f42:	83 c4 10             	add    $0x10,%esp
81000f45:	8b 45 08             	mov    0x8(%ebp),%eax
81000f48:	8b 40 0c             	mov    0xc(%eax),%eax
81000f4b:	83 ec 0c             	sub    $0xc,%esp
81000f4e:	50                   	push   %eax
81000f4f:	e8 69 fd ff ff       	call   81000cbd <stderr_init>
81000f54:	83 c4 10             	add    $0x10,%esp
81000f57:	8b 45 08             	mov    0x8(%ebp),%eax
81000f5a:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81000f61:	e8 14 00 00 00       	call   81000f7a <__sinit_lock_release>
81000f66:	c9                   	leave  
81000f67:	c3                   	ret    

81000f68 <__sfp_lock_acquire>:
81000f68:	55                   	push   %ebp
81000f69:	89 e5                	mov    %esp,%ebp
81000f6b:	90                   	nop
81000f6c:	5d                   	pop    %ebp
81000f6d:	c3                   	ret    

81000f6e <__sfp_lock_release>:
81000f6e:	55                   	push   %ebp
81000f6f:	89 e5                	mov    %esp,%ebp
81000f71:	90                   	nop
81000f72:	5d                   	pop    %ebp
81000f73:	c3                   	ret    

81000f74 <__sinit_lock_acquire>:
81000f74:	55                   	push   %ebp
81000f75:	89 e5                	mov    %esp,%ebp
81000f77:	90                   	nop
81000f78:	5d                   	pop    %ebp
81000f79:	c3                   	ret    

81000f7a <__sinit_lock_release>:
81000f7a:	55                   	push   %ebp
81000f7b:	89 e5                	mov    %esp,%ebp
81000f7d:	90                   	nop
81000f7e:	5d                   	pop    %ebp
81000f7f:	c3                   	ret    

81000f80 <__fp_lock>:
81000f80:	55                   	push   %ebp
81000f81:	89 e5                	mov    %esp,%ebp
81000f83:	b8 00 00 00 00       	mov    $0x0,%eax
81000f88:	5d                   	pop    %ebp
81000f89:	c3                   	ret    

81000f8a <__fp_unlock>:
81000f8a:	55                   	push   %ebp
81000f8b:	89 e5                	mov    %esp,%ebp
81000f8d:	b8 00 00 00 00       	mov    $0x0,%eax
81000f92:	5d                   	pop    %ebp
81000f93:	c3                   	ret    

81000f94 <__fp_lock_all>:
81000f94:	55                   	push   %ebp
81000f95:	89 e5                	mov    %esp,%ebp
81000f97:	83 ec 08             	sub    $0x8,%esp
81000f9a:	e8 c9 ff ff ff       	call   81000f68 <__sfp_lock_acquire>
81000f9f:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81000fa4:	83 ec 08             	sub    $0x8,%esp
81000fa7:	68 80 0f 00 81       	push   $0x81000f80
81000fac:	50                   	push   %eax
81000fad:	e8 bb 05 00 00       	call   8100156d <_fwalk>
81000fb2:	83 c4 10             	add    $0x10,%esp
81000fb5:	90                   	nop
81000fb6:	c9                   	leave  
81000fb7:	c3                   	ret    

81000fb8 <__fp_unlock_all>:
81000fb8:	55                   	push   %ebp
81000fb9:	89 e5                	mov    %esp,%ebp
81000fbb:	83 ec 08             	sub    $0x8,%esp
81000fbe:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81000fc3:	83 ec 08             	sub    $0x8,%esp
81000fc6:	68 8a 0f 00 81       	push   $0x81000f8a
81000fcb:	50                   	push   %eax
81000fcc:	e8 9c 05 00 00       	call   8100156d <_fwalk>
81000fd1:	83 c4 10             	add    $0x10,%esp
81000fd4:	e8 95 ff ff ff       	call   81000f6e <__sfp_lock_release>
81000fd9:	90                   	nop
81000fda:	c9                   	leave  
81000fdb:	c3                   	ret    

81000fdc <_fiprintf_r>:
81000fdc:	55                   	push   %ebp
81000fdd:	89 e5                	mov    %esp,%ebp
81000fdf:	83 ec 18             	sub    $0x18,%esp
81000fe2:	8d 45 14             	lea    0x14(%ebp),%eax
81000fe5:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000fe8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000feb:	50                   	push   %eax
81000fec:	ff 75 10             	push   0x10(%ebp)
81000fef:	ff 75 0c             	push   0xc(%ebp)
81000ff2:	ff 75 08             	push   0x8(%ebp)
81000ff5:	e8 a9 23 00 00       	call   810033a3 <_vfiprintf_r>
81000ffa:	83 c4 10             	add    $0x10,%esp
81000ffd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001000:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001003:	c9                   	leave  
81001004:	c3                   	ret    

81001005 <fiprintf>:
81001005:	55                   	push   %ebp
81001006:	89 e5                	mov    %esp,%ebp
81001008:	83 ec 18             	sub    $0x18,%esp
8100100b:	8d 45 10             	lea    0x10(%ebp),%eax
8100100e:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001011:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001014:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81001019:	52                   	push   %edx
8100101a:	ff 75 0c             	push   0xc(%ebp)
8100101d:	ff 75 08             	push   0x8(%ebp)
81001020:	50                   	push   %eax
81001021:	e8 7d 23 00 00       	call   810033a3 <_vfiprintf_r>
81001026:	83 c4 10             	add    $0x10,%esp
81001029:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100102c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100102f:	c9                   	leave  
81001030:	c3                   	ret    

81001031 <_free_r>:
81001031:	55                   	push   %ebp
81001032:	89 e5                	mov    %esp,%ebp
81001034:	53                   	push   %ebx
81001035:	83 ec 34             	sub    $0x34,%esp
81001038:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100103c:	0f 84 c4 03 00 00    	je     81001406 <_free_r+0x3d5>
81001042:	83 ec 0c             	sub    $0xc,%esp
81001045:	ff 75 08             	push   0x8(%ebp)
81001048:	e8 3b 21 00 00       	call   81003188 <__malloc_lock>
8100104d:	83 c4 10             	add    $0x10,%esp
81001050:	8b 45 0c             	mov    0xc(%ebp),%eax
81001053:	83 e8 08             	sub    $0x8,%eax
81001056:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001059:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100105c:	8b 40 04             	mov    0x4(%eax),%eax
8100105f:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001062:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001065:	83 e0 fe             	and    $0xfffffffe,%eax
81001068:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100106b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100106e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001071:	01 d0                	add    %edx,%eax
81001073:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001076:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001079:	8b 40 04             	mov    0x4(%eax),%eax
8100107c:	83 e0 fc             	and    $0xfffffffc,%eax
8100107f:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001082:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81001087:	8b 40 08             	mov    0x8(%eax),%eax
8100108a:	39 45 dc             	cmp    %eax,-0x24(%ebp)
8100108d:	0f 85 94 00 00 00    	jne    81001127 <_free_r+0xf6>
81001093:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001096:	01 45 f0             	add    %eax,-0x10(%ebp)
81001099:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100109c:	83 e0 01             	and    $0x1,%eax
8100109f:	85 c0                	test   %eax,%eax
810010a1:	75 3a                	jne    810010dd <_free_r+0xac>
810010a3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010a6:	8b 00                	mov    (%eax),%eax
810010a8:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810010ab:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810010ae:	f7 d8                	neg    %eax
810010b0:	01 45 f4             	add    %eax,-0xc(%ebp)
810010b3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810010b6:	01 45 f0             	add    %eax,-0x10(%ebp)
810010b9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010bc:	8b 40 0c             	mov    0xc(%eax),%eax
810010bf:	89 45 ec             	mov    %eax,-0x14(%ebp)
810010c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010c5:	8b 40 08             	mov    0x8(%eax),%eax
810010c8:	89 45 e8             	mov    %eax,-0x18(%ebp)
810010cb:	8b 45 e8             	mov    -0x18(%ebp),%eax
810010ce:	8b 55 ec             	mov    -0x14(%ebp),%edx
810010d1:	89 50 0c             	mov    %edx,0xc(%eax)
810010d4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810010d7:	8b 55 e8             	mov    -0x18(%ebp),%edx
810010da:	89 50 08             	mov    %edx,0x8(%eax)
810010dd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010e0:	83 c8 01             	or     $0x1,%eax
810010e3:	89 c2                	mov    %eax,%edx
810010e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010e8:	89 50 04             	mov    %edx,0x4(%eax)
810010eb:	ba c0 70 00 81       	mov    $0x810070c0,%edx
810010f0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010f3:	89 42 08             	mov    %eax,0x8(%edx)
810010f6:	a1 c8 74 00 81       	mov    0x810074c8,%eax
810010fb:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810010fe:	72 14                	jb     81001114 <_free_r+0xe3>
81001100:	a1 a0 7c 00 81       	mov    0x81007ca0,%eax
81001105:	83 ec 08             	sub    $0x8,%esp
81001108:	50                   	push   %eax
81001109:	ff 75 08             	push   0x8(%ebp)
8100110c:	e8 fb 02 00 00       	call   8100140c <_malloc_trim_r>
81001111:	83 c4 10             	add    $0x10,%esp
81001114:	83 ec 0c             	sub    $0xc,%esp
81001117:	ff 75 08             	push   0x8(%ebp)
8100111a:	e8 6f 20 00 00       	call   8100318e <__malloc_unlock>
8100111f:	83 c4 10             	add    $0x10,%esp
81001122:	e9 e0 02 00 00       	jmp    81001407 <_free_r+0x3d6>
81001127:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100112a:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100112d:	89 50 04             	mov    %edx,0x4(%eax)
81001130:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81001137:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100113a:	83 e0 01             	and    $0x1,%eax
8100113d:	85 c0                	test   %eax,%eax
8100113f:	75 52                	jne    81001193 <_free_r+0x162>
81001141:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001144:	8b 00                	mov    (%eax),%eax
81001146:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001149:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100114c:	f7 d8                	neg    %eax
8100114e:	01 45 f4             	add    %eax,-0xc(%ebp)
81001151:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001154:	01 45 f0             	add    %eax,-0x10(%ebp)
81001157:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100115a:	8b 40 08             	mov    0x8(%eax),%eax
8100115d:	ba c8 70 00 81       	mov    $0x810070c8,%edx
81001162:	39 d0                	cmp    %edx,%eax
81001164:	75 09                	jne    8100116f <_free_r+0x13e>
81001166:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100116d:	eb 24                	jmp    81001193 <_free_r+0x162>
8100116f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001172:	8b 40 0c             	mov    0xc(%eax),%eax
81001175:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001178:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100117b:	8b 40 08             	mov    0x8(%eax),%eax
8100117e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001181:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001184:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001187:	89 50 0c             	mov    %edx,0xc(%eax)
8100118a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100118d:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001190:	89 50 08             	mov    %edx,0x8(%eax)
81001193:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001196:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001199:	01 d0                	add    %edx,%eax
8100119b:	8b 40 04             	mov    0x4(%eax),%eax
8100119e:	83 e0 01             	and    $0x1,%eax
810011a1:	85 c0                	test   %eax,%eax
810011a3:	75 75                	jne    8100121a <_free_r+0x1e9>
810011a5:	8b 45 d8             	mov    -0x28(%ebp),%eax
810011a8:	01 45 f0             	add    %eax,-0x10(%ebp)
810011ab:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810011af:	75 45                	jne    810011f6 <_free_r+0x1c5>
810011b1:	8b 45 dc             	mov    -0x24(%ebp),%eax
810011b4:	8b 40 08             	mov    0x8(%eax),%eax
810011b7:	ba c8 70 00 81       	mov    $0x810070c8,%edx
810011bc:	39 d0                	cmp    %edx,%eax
810011be:	75 36                	jne    810011f6 <_free_r+0x1c5>
810011c0:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810011c7:	b8 c8 70 00 81       	mov    $0x810070c8,%eax
810011cc:	8b 55 f4             	mov    -0xc(%ebp),%edx
810011cf:	89 50 0c             	mov    %edx,0xc(%eax)
810011d2:	ba c8 70 00 81       	mov    $0x810070c8,%edx
810011d7:	8b 40 0c             	mov    0xc(%eax),%eax
810011da:	89 42 08             	mov    %eax,0x8(%edx)
810011dd:	ba c8 70 00 81       	mov    $0x810070c8,%edx
810011e2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810011e5:	89 50 0c             	mov    %edx,0xc(%eax)
810011e8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810011eb:	8b 50 0c             	mov    0xc(%eax),%edx
810011ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
810011f1:	89 50 08             	mov    %edx,0x8(%eax)
810011f4:	eb 24                	jmp    8100121a <_free_r+0x1e9>
810011f6:	8b 45 dc             	mov    -0x24(%ebp),%eax
810011f9:	8b 40 0c             	mov    0xc(%eax),%eax
810011fc:	89 45 ec             	mov    %eax,-0x14(%ebp)
810011ff:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001202:	8b 40 08             	mov    0x8(%eax),%eax
81001205:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001208:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100120b:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100120e:	89 50 0c             	mov    %edx,0xc(%eax)
81001211:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001214:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001217:	89 50 08             	mov    %edx,0x8(%eax)
8100121a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100121d:	83 c8 01             	or     $0x1,%eax
81001220:	89 c2                	mov    %eax,%edx
81001222:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001225:	89 50 04             	mov    %edx,0x4(%eax)
81001228:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100122b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100122e:	01 c2                	add    %eax,%edx
81001230:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001233:	89 02                	mov    %eax,(%edx)
81001235:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001239:	0f 85 b7 01 00 00    	jne    810013f6 <_free_r+0x3c5>
8100123f:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81001246:	77 7f                	ja     810012c7 <_free_r+0x296>
81001248:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100124b:	c1 e8 03             	shr    $0x3,%eax
8100124e:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001251:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81001256:	8b 58 04             	mov    0x4(%eax),%ebx
81001259:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100125c:	8d 50 03             	lea    0x3(%eax),%edx
8100125f:	85 c0                	test   %eax,%eax
81001261:	0f 48 c2             	cmovs  %edx,%eax
81001264:	c1 f8 02             	sar    $0x2,%eax
81001267:	ba 01 00 00 00       	mov    $0x1,%edx
8100126c:	89 c1                	mov    %eax,%ecx
8100126e:	d3 e2                	shl    %cl,%edx
81001270:	89 d0                	mov    %edx,%eax
81001272:	ba c0 70 00 81       	mov    $0x810070c0,%edx
81001277:	09 d8                	or     %ebx,%eax
81001279:	89 42 04             	mov    %eax,0x4(%edx)
8100127c:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100127f:	83 c0 01             	add    $0x1,%eax
81001282:	01 c0                	add    %eax,%eax
81001284:	c1 e0 02             	shl    $0x2,%eax
81001287:	05 c0 70 00 81       	add    $0x810070c0,%eax
8100128c:	83 e8 08             	sub    $0x8,%eax
8100128f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001292:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001295:	8b 40 08             	mov    0x8(%eax),%eax
81001298:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100129b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100129e:	8b 55 ec             	mov    -0x14(%ebp),%edx
810012a1:	89 50 0c             	mov    %edx,0xc(%eax)
810012a4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012a7:	8b 55 e8             	mov    -0x18(%ebp),%edx
810012aa:	89 50 08             	mov    %edx,0x8(%eax)
810012ad:	8b 45 ec             	mov    -0x14(%ebp),%eax
810012b0:	8b 55 f4             	mov    -0xc(%ebp),%edx
810012b3:	89 50 08             	mov    %edx,0x8(%eax)
810012b6:	8b 45 ec             	mov    -0x14(%ebp),%eax
810012b9:	8b 50 08             	mov    0x8(%eax),%edx
810012bc:	8b 45 e8             	mov    -0x18(%ebp),%eax
810012bf:	89 50 0c             	mov    %edx,0xc(%eax)
810012c2:	e9 2f 01 00 00       	jmp    810013f6 <_free_r+0x3c5>
810012c7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810012ca:	c1 e8 09             	shr    $0x9,%eax
810012cd:	85 c0                	test   %eax,%eax
810012cf:	75 08                	jne    810012d9 <_free_r+0x2a8>
810012d1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810012d4:	c1 e8 03             	shr    $0x3,%eax
810012d7:	eb 77                	jmp    81001350 <_free_r+0x31f>
810012d9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810012dc:	c1 e8 09             	shr    $0x9,%eax
810012df:	83 f8 04             	cmp    $0x4,%eax
810012e2:	77 0b                	ja     810012ef <_free_r+0x2be>
810012e4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810012e7:	c1 e8 06             	shr    $0x6,%eax
810012ea:	83 c0 38             	add    $0x38,%eax
810012ed:	eb 61                	jmp    81001350 <_free_r+0x31f>
810012ef:	8b 45 f0             	mov    -0x10(%ebp),%eax
810012f2:	c1 e8 09             	shr    $0x9,%eax
810012f5:	83 f8 14             	cmp    $0x14,%eax
810012f8:	77 0b                	ja     81001305 <_free_r+0x2d4>
810012fa:	8b 45 f0             	mov    -0x10(%ebp),%eax
810012fd:	c1 e8 09             	shr    $0x9,%eax
81001300:	83 c0 5b             	add    $0x5b,%eax
81001303:	eb 4b                	jmp    81001350 <_free_r+0x31f>
81001305:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001308:	c1 e8 09             	shr    $0x9,%eax
8100130b:	83 f8 54             	cmp    $0x54,%eax
8100130e:	77 0b                	ja     8100131b <_free_r+0x2ea>
81001310:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001313:	c1 e8 0c             	shr    $0xc,%eax
81001316:	83 c0 6e             	add    $0x6e,%eax
81001319:	eb 35                	jmp    81001350 <_free_r+0x31f>
8100131b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100131e:	c1 e8 09             	shr    $0x9,%eax
81001321:	3d 54 01 00 00       	cmp    $0x154,%eax
81001326:	77 0b                	ja     81001333 <_free_r+0x302>
81001328:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100132b:	c1 e8 0f             	shr    $0xf,%eax
8100132e:	83 c0 77             	add    $0x77,%eax
81001331:	eb 1d                	jmp    81001350 <_free_r+0x31f>
81001333:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001336:	c1 e8 09             	shr    $0x9,%eax
81001339:	3d 54 05 00 00       	cmp    $0x554,%eax
8100133e:	77 0b                	ja     8100134b <_free_r+0x31a>
81001340:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001343:	c1 e8 12             	shr    $0x12,%eax
81001346:	83 c0 7c             	add    $0x7c,%eax
81001349:	eb 05                	jmp    81001350 <_free_r+0x31f>
8100134b:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001350:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001353:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001356:	83 c0 01             	add    $0x1,%eax
81001359:	01 c0                	add    %eax,%eax
8100135b:	c1 e0 02             	shl    $0x2,%eax
8100135e:	05 c0 70 00 81       	add    $0x810070c0,%eax
81001363:	83 e8 08             	sub    $0x8,%eax
81001366:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001369:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100136c:	8b 40 08             	mov    0x8(%eax),%eax
8100136f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001372:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001375:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001378:	75 36                	jne    810013b0 <_free_r+0x37f>
8100137a:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
8100137f:	8b 58 04             	mov    0x4(%eax),%ebx
81001382:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001385:	8d 50 03             	lea    0x3(%eax),%edx
81001388:	85 c0                	test   %eax,%eax
8100138a:	0f 48 c2             	cmovs  %edx,%eax
8100138d:	c1 f8 02             	sar    $0x2,%eax
81001390:	ba 01 00 00 00       	mov    $0x1,%edx
81001395:	89 c1                	mov    %eax,%ecx
81001397:	d3 e2                	shl    %cl,%edx
81001399:	89 d0                	mov    %edx,%eax
8100139b:	ba c0 70 00 81       	mov    $0x810070c0,%edx
810013a0:	09 d8                	or     %ebx,%eax
810013a2:	89 42 04             	mov    %eax,0x4(%edx)
810013a5:	eb 28                	jmp    810013cf <_free_r+0x39e>
810013a7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810013aa:	8b 40 08             	mov    0x8(%eax),%eax
810013ad:	89 45 e8             	mov    %eax,-0x18(%ebp)
810013b0:	8b 45 e8             	mov    -0x18(%ebp),%eax
810013b3:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810013b6:	74 0e                	je     810013c6 <_free_r+0x395>
810013b8:	8b 45 e8             	mov    -0x18(%ebp),%eax
810013bb:	8b 40 04             	mov    0x4(%eax),%eax
810013be:	83 e0 fc             	and    $0xfffffffc,%eax
810013c1:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810013c4:	72 e1                	jb     810013a7 <_free_r+0x376>
810013c6:	8b 45 e8             	mov    -0x18(%ebp),%eax
810013c9:	8b 40 0c             	mov    0xc(%eax),%eax
810013cc:	89 45 ec             	mov    %eax,-0x14(%ebp)
810013cf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013d2:	8b 55 ec             	mov    -0x14(%ebp),%edx
810013d5:	89 50 0c             	mov    %edx,0xc(%eax)
810013d8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013db:	8b 55 e8             	mov    -0x18(%ebp),%edx
810013de:	89 50 08             	mov    %edx,0x8(%eax)
810013e1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810013e4:	8b 55 f4             	mov    -0xc(%ebp),%edx
810013e7:	89 50 08             	mov    %edx,0x8(%eax)
810013ea:	8b 45 ec             	mov    -0x14(%ebp),%eax
810013ed:	8b 50 08             	mov    0x8(%eax),%edx
810013f0:	8b 45 e8             	mov    -0x18(%ebp),%eax
810013f3:	89 50 0c             	mov    %edx,0xc(%eax)
810013f6:	83 ec 0c             	sub    $0xc,%esp
810013f9:	ff 75 08             	push   0x8(%ebp)
810013fc:	e8 8d 1d 00 00       	call   8100318e <__malloc_unlock>
81001401:	83 c4 10             	add    $0x10,%esp
81001404:	eb 01                	jmp    81001407 <_free_r+0x3d6>
81001406:	90                   	nop
81001407:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100140a:	c9                   	leave  
8100140b:	c3                   	ret    

8100140c <_malloc_trim_r>:
8100140c:	55                   	push   %ebp
8100140d:	89 e5                	mov    %esp,%ebp
8100140f:	83 ec 28             	sub    $0x28,%esp
81001412:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81001419:	83 ec 0c             	sub    $0xc,%esp
8100141c:	ff 75 08             	push   0x8(%ebp)
8100141f:	e8 64 1d 00 00       	call   81003188 <__malloc_lock>
81001424:	83 c4 10             	add    $0x10,%esp
81001427:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
8100142c:	8b 40 08             	mov    0x8(%eax),%eax
8100142f:	8b 40 04             	mov    0x4(%eax),%eax
81001432:	83 e0 fc             	and    $0xfffffffc,%eax
81001435:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001438:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100143b:	2b 45 0c             	sub    0xc(%ebp),%eax
8100143e:	89 c2                	mov    %eax,%edx
81001440:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001443:	01 d0                	add    %edx,%eax
81001445:	83 e8 11             	sub    $0x11,%eax
81001448:	ba 00 00 00 00       	mov    $0x0,%edx
8100144d:	f7 75 f4             	divl   -0xc(%ebp)
81001450:	83 e8 01             	sub    $0x1,%eax
81001453:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81001457:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100145a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100145d:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001460:	7d 18                	jge    8100147a <_malloc_trim_r+0x6e>
81001462:	83 ec 0c             	sub    $0xc,%esp
81001465:	ff 75 08             	push   0x8(%ebp)
81001468:	e8 21 1d 00 00       	call   8100318e <__malloc_unlock>
8100146d:	83 c4 10             	add    $0x10,%esp
81001470:	b8 00 00 00 00       	mov    $0x0,%eax
81001475:	e9 f1 00 00 00       	jmp    8100156b <_malloc_trim_r+0x15f>
8100147a:	83 ec 08             	sub    $0x8,%esp
8100147d:	6a 00                	push   $0x0
8100147f:	ff 75 08             	push   0x8(%ebp)
81001482:	e8 de 2b 00 00       	call   81004065 <_sbrk_r>
81001487:	83 c4 10             	add    $0x10,%esp
8100148a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100148d:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81001492:	8b 50 08             	mov    0x8(%eax),%edx
81001495:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001498:	01 d0                	add    %edx,%eax
8100149a:	39 45 e8             	cmp    %eax,-0x18(%ebp)
8100149d:	74 18                	je     810014b7 <_malloc_trim_r+0xab>
8100149f:	83 ec 0c             	sub    $0xc,%esp
810014a2:	ff 75 08             	push   0x8(%ebp)
810014a5:	e8 e4 1c 00 00       	call   8100318e <__malloc_unlock>
810014aa:	83 c4 10             	add    $0x10,%esp
810014ad:	b8 00 00 00 00       	mov    $0x0,%eax
810014b2:	e9 b4 00 00 00       	jmp    8100156b <_malloc_trim_r+0x15f>
810014b7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810014ba:	f7 d8                	neg    %eax
810014bc:	83 ec 08             	sub    $0x8,%esp
810014bf:	50                   	push   %eax
810014c0:	ff 75 08             	push   0x8(%ebp)
810014c3:	e8 9d 2b 00 00       	call   81004065 <_sbrk_r>
810014c8:	83 c4 10             	add    $0x10,%esp
810014cb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810014ce:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810014d2:	75 61                	jne    81001535 <_malloc_trim_r+0x129>
810014d4:	83 ec 08             	sub    $0x8,%esp
810014d7:	6a 00                	push   $0x0
810014d9:	ff 75 08             	push   0x8(%ebp)
810014dc:	e8 84 2b 00 00       	call   81004065 <_sbrk_r>
810014e1:	83 c4 10             	add    $0x10,%esp
810014e4:	89 45 e8             	mov    %eax,-0x18(%ebp)
810014e7:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
810014ec:	8b 50 08             	mov    0x8(%eax),%edx
810014ef:	8b 45 e8             	mov    -0x18(%ebp),%eax
810014f2:	29 d0                	sub    %edx,%eax
810014f4:	89 45 f0             	mov    %eax,-0x10(%ebp)
810014f7:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
810014fb:	7e 23                	jle    81001520 <_malloc_trim_r+0x114>
810014fd:	8b 15 cc 74 00 81    	mov    0x810074cc,%edx
81001503:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001506:	29 d0                	sub    %edx,%eax
81001508:	a3 c0 7c 00 81       	mov    %eax,0x81007cc0
8100150d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001510:	83 c8 01             	or     $0x1,%eax
81001513:	89 c2                	mov    %eax,%edx
81001515:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
8100151a:	8b 40 08             	mov    0x8(%eax),%eax
8100151d:	89 50 04             	mov    %edx,0x4(%eax)
81001520:	83 ec 0c             	sub    $0xc,%esp
81001523:	ff 75 08             	push   0x8(%ebp)
81001526:	e8 63 1c 00 00       	call   8100318e <__malloc_unlock>
8100152b:	83 c4 10             	add    $0x10,%esp
8100152e:	b8 00 00 00 00       	mov    $0x0,%eax
81001533:	eb 36                	jmp    8100156b <_malloc_trim_r+0x15f>
81001535:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001538:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100153b:	83 c8 01             	or     $0x1,%eax
8100153e:	89 c2                	mov    %eax,%edx
81001540:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81001545:	8b 40 08             	mov    0x8(%eax),%eax
81001548:	89 50 04             	mov    %edx,0x4(%eax)
8100154b:	a1 c0 7c 00 81       	mov    0x81007cc0,%eax
81001550:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001553:	a3 c0 7c 00 81       	mov    %eax,0x81007cc0
81001558:	83 ec 0c             	sub    $0xc,%esp
8100155b:	ff 75 08             	push   0x8(%ebp)
8100155e:	e8 2b 1c 00 00       	call   8100318e <__malloc_unlock>
81001563:	83 c4 10             	add    $0x10,%esp
81001566:	b8 01 00 00 00       	mov    $0x1,%eax
8100156b:	c9                   	leave  
8100156c:	c3                   	ret    

8100156d <_fwalk>:
8100156d:	55                   	push   %ebp
8100156e:	89 e5                	mov    %esp,%ebp
81001570:	57                   	push   %edi
81001571:	56                   	push   %esi
81001572:	53                   	push   %ebx
81001573:	83 ec 1c             	sub    $0x1c,%esp
81001576:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100157d:	8b 45 08             	mov    0x8(%ebp),%eax
81001580:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81001586:	eb 3e                	jmp    810015c6 <_fwalk+0x59>
81001588:	8b 5e 08             	mov    0x8(%esi),%ebx
8100158b:	8b 7e 04             	mov    0x4(%esi),%edi
8100158e:	eb 2d                	jmp    810015bd <_fwalk+0x50>
81001590:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001594:	66 85 c0             	test   %ax,%ax
81001597:	74 21                	je     810015ba <_fwalk+0x4d>
81001599:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100159d:	66 83 f8 01          	cmp    $0x1,%ax
810015a1:	74 17                	je     810015ba <_fwalk+0x4d>
810015a3:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810015a7:	66 83 f8 ff          	cmp    $0xffff,%ax
810015ab:	74 0d                	je     810015ba <_fwalk+0x4d>
810015ad:	83 ec 0c             	sub    $0xc,%esp
810015b0:	53                   	push   %ebx
810015b1:	ff 55 0c             	call   *0xc(%ebp)
810015b4:	83 c4 10             	add    $0x10,%esp
810015b7:	09 45 e4             	or     %eax,-0x1c(%ebp)
810015ba:	83 c3 68             	add    $0x68,%ebx
810015bd:	83 ef 01             	sub    $0x1,%edi
810015c0:	85 ff                	test   %edi,%edi
810015c2:	79 cc                	jns    81001590 <_fwalk+0x23>
810015c4:	8b 36                	mov    (%esi),%esi
810015c6:	85 f6                	test   %esi,%esi
810015c8:	75 be                	jne    81001588 <_fwalk+0x1b>
810015ca:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810015cd:	8d 65 f4             	lea    -0xc(%ebp),%esp
810015d0:	5b                   	pop    %ebx
810015d1:	5e                   	pop    %esi
810015d2:	5f                   	pop    %edi
810015d3:	5d                   	pop    %ebp
810015d4:	c3                   	ret    

810015d5 <_fwalk_reent>:
810015d5:	55                   	push   %ebp
810015d6:	89 e5                	mov    %esp,%ebp
810015d8:	57                   	push   %edi
810015d9:	56                   	push   %esi
810015da:	53                   	push   %ebx
810015db:	83 ec 1c             	sub    $0x1c,%esp
810015de:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810015e5:	8b 45 08             	mov    0x8(%ebp),%eax
810015e8:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
810015ee:	eb 41                	jmp    81001631 <_fwalk_reent+0x5c>
810015f0:	8b 5e 08             	mov    0x8(%esi),%ebx
810015f3:	8b 7e 04             	mov    0x4(%esi),%edi
810015f6:	eb 30                	jmp    81001628 <_fwalk_reent+0x53>
810015f8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810015fc:	66 85 c0             	test   %ax,%ax
810015ff:	74 24                	je     81001625 <_fwalk_reent+0x50>
81001601:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001605:	66 83 f8 01          	cmp    $0x1,%ax
81001609:	74 1a                	je     81001625 <_fwalk_reent+0x50>
8100160b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100160f:	66 83 f8 ff          	cmp    $0xffff,%ax
81001613:	74 10                	je     81001625 <_fwalk_reent+0x50>
81001615:	83 ec 08             	sub    $0x8,%esp
81001618:	53                   	push   %ebx
81001619:	ff 75 08             	push   0x8(%ebp)
8100161c:	ff 55 0c             	call   *0xc(%ebp)
8100161f:	83 c4 10             	add    $0x10,%esp
81001622:	09 45 e4             	or     %eax,-0x1c(%ebp)
81001625:	83 c3 68             	add    $0x68,%ebx
81001628:	83 ef 01             	sub    $0x1,%edi
8100162b:	85 ff                	test   %edi,%edi
8100162d:	79 c9                	jns    810015f8 <_fwalk_reent+0x23>
8100162f:	8b 36                	mov    (%esi),%esi
81001631:	85 f6                	test   %esi,%esi
81001633:	75 bb                	jne    810015f0 <_fwalk_reent+0x1b>
81001635:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001638:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100163b:	5b                   	pop    %ebx
8100163c:	5e                   	pop    %esi
8100163d:	5f                   	pop    %edi
8100163e:	5d                   	pop    %ebp
8100163f:	c3                   	ret    

81001640 <_fwrite_r>:
81001640:	55                   	push   %ebp
81001641:	89 e5                	mov    %esp,%ebp
81001643:	83 ec 28             	sub    $0x28,%esp
81001646:	8b 45 0c             	mov    0xc(%ebp),%eax
81001649:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100164c:	8b 45 14             	mov    0x14(%ebp),%eax
8100164f:	0f af 45 10          	imul   0x10(%ebp),%eax
81001653:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001656:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001659:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100165c:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100165f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001662:	8d 45 dc             	lea    -0x24(%ebp),%eax
81001665:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001668:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
8100166f:	8b 45 08             	mov    0x8(%ebp),%eax
81001672:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001675:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81001679:	74 18                	je     81001693 <_fwrite_r+0x53>
8100167b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100167e:	8b 40 38             	mov    0x38(%eax),%eax
81001681:	85 c0                	test   %eax,%eax
81001683:	75 0e                	jne    81001693 <_fwrite_r+0x53>
81001685:	83 ec 0c             	sub    $0xc,%esp
81001688:	ff 75 f0             	push   -0x10(%ebp)
8100168b:	e8 3f f8 ff ff       	call   81000ecf <__sinit>
81001690:	83 c4 10             	add    $0x10,%esp
81001693:	8b 45 18             	mov    0x18(%ebp),%eax
81001696:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100169a:	98                   	cwtl   
8100169b:	25 00 20 00 00       	and    $0x2000,%eax
810016a0:	85 c0                	test   %eax,%eax
810016a2:	75 24                	jne    810016c8 <_fwrite_r+0x88>
810016a4:	8b 45 18             	mov    0x18(%ebp),%eax
810016a7:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810016ab:	80 cc 20             	or     $0x20,%ah
810016ae:	89 c2                	mov    %eax,%edx
810016b0:	8b 45 18             	mov    0x18(%ebp),%eax
810016b3:	66 89 50 0c          	mov    %dx,0xc(%eax)
810016b7:	8b 45 18             	mov    0x18(%ebp),%eax
810016ba:	8b 40 64             	mov    0x64(%eax),%eax
810016bd:	80 e4 df             	and    $0xdf,%ah
810016c0:	89 c2                	mov    %eax,%edx
810016c2:	8b 45 18             	mov    0x18(%ebp),%eax
810016c5:	89 50 64             	mov    %edx,0x64(%eax)
810016c8:	83 ec 04             	sub    $0x4,%esp
810016cb:	8d 45 e4             	lea    -0x1c(%ebp),%eax
810016ce:	50                   	push   %eax
810016cf:	ff 75 18             	push   0x18(%ebp)
810016d2:	ff 75 08             	push   0x8(%ebp)
810016d5:	e8 c5 37 00 00       	call   81004e9f <__sfvwrite_r>
810016da:	83 c4 10             	add    $0x10,%esp
810016dd:	85 c0                	test   %eax,%eax
810016df:	75 05                	jne    810016e6 <_fwrite_r+0xa6>
810016e1:	8b 45 14             	mov    0x14(%ebp),%eax
810016e4:	eb 10                	jmp    810016f6 <_fwrite_r+0xb6>
810016e6:	8b 55 ec             	mov    -0x14(%ebp),%edx
810016e9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016ec:	29 d0                	sub    %edx,%eax
810016ee:	ba 00 00 00 00       	mov    $0x0,%edx
810016f3:	f7 75 10             	divl   0x10(%ebp)
810016f6:	c9                   	leave  
810016f7:	c3                   	ret    

810016f8 <fwrite>:
810016f8:	55                   	push   %ebp
810016f9:	89 e5                	mov    %esp,%ebp
810016fb:	83 ec 08             	sub    $0x8,%esp
810016fe:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81001703:	83 ec 0c             	sub    $0xc,%esp
81001706:	ff 75 14             	push   0x14(%ebp)
81001709:	ff 75 10             	push   0x10(%ebp)
8100170c:	ff 75 0c             	push   0xc(%ebp)
8100170f:	ff 75 08             	push   0x8(%ebp)
81001712:	50                   	push   %eax
81001713:	e8 28 ff ff ff       	call   81001640 <_fwrite_r>
81001718:	83 c4 20             	add    $0x20,%esp
8100171b:	c9                   	leave  
8100171c:	c3                   	ret    

8100171d <reverse_argv_elements>:
8100171d:	55                   	push   %ebp
8100171e:	89 e5                	mov    %esp,%ebp
81001720:	83 ec 10             	sub    $0x10,%esp
81001723:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
8100172a:	eb 5e                	jmp    8100178a <reverse_argv_elements+0x6d>
8100172c:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100172f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001736:	8b 45 08             	mov    0x8(%ebp),%eax
81001739:	01 d0                	add    %edx,%eax
8100173b:	8b 00                	mov    (%eax),%eax
8100173d:	89 45 f8             	mov    %eax,-0x8(%ebp)
81001740:	8b 45 0c             	mov    0xc(%ebp),%eax
81001743:	2b 45 fc             	sub    -0x4(%ebp),%eax
81001746:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
8100174b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001752:	8b 45 08             	mov    0x8(%ebp),%eax
81001755:	01 d0                	add    %edx,%eax
81001757:	8b 55 fc             	mov    -0x4(%ebp),%edx
8100175a:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81001761:	8b 55 08             	mov    0x8(%ebp),%edx
81001764:	01 ca                	add    %ecx,%edx
81001766:	8b 00                	mov    (%eax),%eax
81001768:	89 02                	mov    %eax,(%edx)
8100176a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100176d:	2b 45 fc             	sub    -0x4(%ebp),%eax
81001770:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81001775:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100177c:	8b 45 08             	mov    0x8(%ebp),%eax
8100177f:	01 c2                	add    %eax,%edx
81001781:	8b 45 f8             	mov    -0x8(%ebp),%eax
81001784:	89 02                	mov    %eax,(%edx)
81001786:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
8100178a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100178d:	d1 f8                	sar    %eax
8100178f:	39 45 fc             	cmp    %eax,-0x4(%ebp)
81001792:	7c 98                	jl     8100172c <reverse_argv_elements+0xf>
81001794:	90                   	nop
81001795:	90                   	nop
81001796:	c9                   	leave  
81001797:	c3                   	ret    

81001798 <permute>:
81001798:	55                   	push   %ebp
81001799:	89 e5                	mov    %esp,%ebp
8100179b:	ff 75 0c             	push   0xc(%ebp)
8100179e:	ff 75 08             	push   0x8(%ebp)
810017a1:	e8 77 ff ff ff       	call   8100171d <reverse_argv_elements>
810017a6:	83 c4 08             	add    $0x8,%esp
810017a9:	8b 55 0c             	mov    0xc(%ebp),%edx
810017ac:	8b 45 10             	mov    0x10(%ebp),%eax
810017af:	01 d0                	add    %edx,%eax
810017b1:	50                   	push   %eax
810017b2:	ff 75 08             	push   0x8(%ebp)
810017b5:	e8 63 ff ff ff       	call   8100171d <reverse_argv_elements>
810017ba:	83 c4 08             	add    $0x8,%esp
810017bd:	ff 75 10             	push   0x10(%ebp)
810017c0:	ff 75 08             	push   0x8(%ebp)
810017c3:	e8 55 ff ff ff       	call   8100171d <reverse_argv_elements>
810017c8:	83 c4 08             	add    $0x8,%esp
810017cb:	90                   	nop
810017cc:	c9                   	leave  
810017cd:	c3                   	ret    

810017ce <is_option>:
810017ce:	55                   	push   %ebp
810017cf:	89 e5                	mov    %esp,%ebp
810017d1:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810017d5:	74 1a                	je     810017f1 <is_option+0x23>
810017d7:	8b 45 08             	mov    0x8(%ebp),%eax
810017da:	0f b6 00             	movzbl (%eax),%eax
810017dd:	3c 2d                	cmp    $0x2d,%al
810017df:	74 10                	je     810017f1 <is_option+0x23>
810017e1:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810017e5:	74 11                	je     810017f8 <is_option+0x2a>
810017e7:	8b 45 08             	mov    0x8(%ebp),%eax
810017ea:	0f b6 00             	movzbl (%eax),%eax
810017ed:	3c 2b                	cmp    $0x2b,%al
810017ef:	75 07                	jne    810017f8 <is_option+0x2a>
810017f1:	b8 01 00 00 00       	mov    $0x1,%eax
810017f6:	eb 05                	jmp    810017fd <is_option+0x2f>
810017f8:	b8 00 00 00 00       	mov    $0x0,%eax
810017fd:	5d                   	pop    %ebp
810017fe:	c3                   	ret    

810017ff <read_globals>:
810017ff:	55                   	push   %ebp
81001800:	89 e5                	mov    %esp,%ebp
81001802:	8b 15 74 7c 00 81    	mov    0x81007c74,%edx
81001808:	8b 45 08             	mov    0x8(%ebp),%eax
8100180b:	89 10                	mov    %edx,(%eax)
8100180d:	8b 15 78 7c 00 81    	mov    0x81007c78,%edx
81001813:	8b 45 08             	mov    0x8(%ebp),%eax
81001816:	89 50 04             	mov    %edx,0x4(%eax)
81001819:	8b 15 64 6c 00 81    	mov    0x81006c64,%edx
8100181f:	8b 45 08             	mov    0x8(%ebp),%eax
81001822:	89 50 08             	mov    %edx,0x8(%eax)
81001825:	8b 15 68 6c 00 81    	mov    0x81006c68,%edx
8100182b:	8b 45 08             	mov    0x8(%ebp),%eax
8100182e:	89 50 0c             	mov    %edx,0xc(%eax)
81001831:	8b 15 7c 7c 00 81    	mov    0x81007c7c,%edx
81001837:	8b 45 08             	mov    0x8(%ebp),%eax
8100183a:	89 50 10             	mov    %edx,0x10(%eax)
8100183d:	8b 15 80 7c 00 81    	mov    0x81007c80,%edx
81001843:	8b 45 08             	mov    0x8(%ebp),%eax
81001846:	89 50 14             	mov    %edx,0x14(%eax)
81001849:	8b 15 84 7c 00 81    	mov    0x81007c84,%edx
8100184f:	8b 45 08             	mov    0x8(%ebp),%eax
81001852:	89 50 18             	mov    %edx,0x18(%eax)
81001855:	90                   	nop
81001856:	5d                   	pop    %ebp
81001857:	c3                   	ret    

81001858 <write_globals>:
81001858:	55                   	push   %ebp
81001859:	89 e5                	mov    %esp,%ebp
8100185b:	8b 45 08             	mov    0x8(%ebp),%eax
8100185e:	8b 00                	mov    (%eax),%eax
81001860:	a3 74 7c 00 81       	mov    %eax,0x81007c74
81001865:	8b 45 08             	mov    0x8(%ebp),%eax
81001868:	8b 40 04             	mov    0x4(%eax),%eax
8100186b:	a3 78 7c 00 81       	mov    %eax,0x81007c78
81001870:	8b 45 08             	mov    0x8(%ebp),%eax
81001873:	8b 40 08             	mov    0x8(%eax),%eax
81001876:	a3 64 6c 00 81       	mov    %eax,0x81006c64
8100187b:	8b 45 08             	mov    0x8(%ebp),%eax
8100187e:	8b 40 0c             	mov    0xc(%eax),%eax
81001881:	a3 68 6c 00 81       	mov    %eax,0x81006c68
81001886:	8b 45 08             	mov    0x8(%ebp),%eax
81001889:	8b 40 10             	mov    0x10(%eax),%eax
8100188c:	a3 7c 7c 00 81       	mov    %eax,0x81007c7c
81001891:	8b 45 08             	mov    0x8(%ebp),%eax
81001894:	8b 40 14             	mov    0x14(%eax),%eax
81001897:	a3 80 7c 00 81       	mov    %eax,0x81007c80
8100189c:	8b 45 08             	mov    0x8(%ebp),%eax
8100189f:	8b 40 18             	mov    0x18(%eax),%eax
810018a2:	a3 84 7c 00 81       	mov    %eax,0x81007c84
810018a7:	90                   	nop
810018a8:	5d                   	pop    %ebp
810018a9:	c3                   	ret    

810018aa <getopt_internal>:
810018aa:	55                   	push   %ebp
810018ab:	89 e5                	mov    %esp,%ebp
810018ad:	53                   	push   %ebx
810018ae:	83 ec 34             	sub    $0x34,%esp
810018b1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810018b8:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810018bf:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810018c6:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810018cd:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
810018d4:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
810018db:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
810018e2:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
810018e9:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
810018f0:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810018f4:	74 35                	je     8100192b <getopt_internal+0x81>
810018f6:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810018fa:	74 2f                	je     8100192b <getopt_internal+0x81>
810018fc:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001900:	75 06                	jne    81001908 <getopt_internal+0x5e>
81001902:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001906:	74 23                	je     8100192b <getopt_internal+0x81>
81001908:	8b 45 20             	mov    0x20(%ebp),%eax
8100190b:	8b 40 04             	mov    0x4(%eax),%eax
8100190e:	39 45 08             	cmp    %eax,0x8(%ebp)
81001911:	7e 18                	jle    8100192b <getopt_internal+0x81>
81001913:	8b 45 20             	mov    0x20(%ebp),%eax
81001916:	8b 40 04             	mov    0x4(%eax),%eax
81001919:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001920:	8b 45 0c             	mov    0xc(%ebp),%eax
81001923:	01 d0                	add    %edx,%eax
81001925:	8b 00                	mov    (%eax),%eax
81001927:	85 c0                	test   %eax,%eax
81001929:	75 0a                	jne    81001935 <getopt_internal+0x8b>
8100192b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001930:	e9 85 0a 00 00       	jmp    810023ba <getopt_internal+0xb10>
81001935:	8b 45 20             	mov    0x20(%ebp),%eax
81001938:	8b 40 04             	mov    0x4(%eax),%eax
8100193b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001942:	8b 45 0c             	mov    0xc(%ebp),%eax
81001945:	01 d0                	add    %edx,%eax
81001947:	8b 00                	mov    (%eax),%eax
81001949:	83 ec 08             	sub    $0x8,%esp
8100194c:	68 74 68 00 81       	push   $0x81006874
81001951:	50                   	push   %eax
81001952:	e8 65 29 00 00       	call   810042bc <strcmp>
81001957:	83 c4 10             	add    $0x10,%esp
8100195a:	85 c0                	test   %eax,%eax
8100195c:	75 19                	jne    81001977 <getopt_internal+0xcd>
8100195e:	8b 45 20             	mov    0x20(%ebp),%eax
81001961:	8b 40 04             	mov    0x4(%eax),%eax
81001964:	8d 50 01             	lea    0x1(%eax),%edx
81001967:	8b 45 20             	mov    0x20(%ebp),%eax
8100196a:	89 50 04             	mov    %edx,0x4(%eax)
8100196d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001972:	e9 43 0a 00 00       	jmp    810023ba <getopt_internal+0xb10>
81001977:	8b 45 20             	mov    0x20(%ebp),%eax
8100197a:	8b 40 04             	mov    0x4(%eax),%eax
8100197d:	85 c0                	test   %eax,%eax
8100197f:	75 28                	jne    810019a9 <getopt_internal+0xff>
81001981:	8b 45 20             	mov    0x20(%ebp),%eax
81001984:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
8100198b:	8b 45 20             	mov    0x20(%ebp),%eax
8100198e:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81001995:	8b 45 20             	mov    0x20(%ebp),%eax
81001998:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
8100199f:	8b 45 20             	mov    0x20(%ebp),%eax
810019a2:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810019a9:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810019ad:	74 33                	je     810019e2 <getopt_internal+0x138>
810019af:	8b 45 10             	mov    0x10(%ebp),%eax
810019b2:	0f b6 00             	movzbl (%eax),%eax
810019b5:	3c 2d                	cmp    $0x2d,%al
810019b7:	74 0a                	je     810019c3 <getopt_internal+0x119>
810019b9:	8b 45 10             	mov    0x10(%ebp),%eax
810019bc:	0f b6 00             	movzbl (%eax),%eax
810019bf:	3c 2b                	cmp    $0x2b,%al
810019c1:	75 1f                	jne    810019e2 <getopt_internal+0x138>
810019c3:	8b 45 10             	mov    0x10(%ebp),%eax
810019c6:	0f b6 00             	movzbl (%eax),%eax
810019c9:	3c 2d                	cmp    $0x2d,%al
810019cb:	75 07                	jne    810019d4 <getopt_internal+0x12a>
810019cd:	b8 01 00 00 00       	mov    $0x1,%eax
810019d2:	eb 05                	jmp    810019d9 <getopt_internal+0x12f>
810019d4:	b8 02 00 00 00       	mov    $0x2,%eax
810019d9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810019dc:	83 45 10 01          	addl   $0x1,0x10(%ebp)
810019e0:	eb 23                	jmp    81001a05 <getopt_internal+0x15b>
810019e2:	83 ec 0c             	sub    $0xc,%esp
810019e5:	68 77 68 00 81       	push   $0x81006877
810019ea:	e8 6e 39 00 00       	call   8100535d <getenv>
810019ef:	83 c4 10             	add    $0x10,%esp
810019f2:	85 c0                	test   %eax,%eax
810019f4:	74 07                	je     810019fd <getopt_internal+0x153>
810019f6:	b8 02 00 00 00       	mov    $0x2,%eax
810019fb:	eb 05                	jmp    81001a02 <getopt_internal+0x158>
810019fd:	b8 00 00 00 00       	mov    $0x0,%eax
81001a02:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001a05:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001a09:	74 15                	je     81001a20 <getopt_internal+0x176>
81001a0b:	8b 45 10             	mov    0x10(%ebp),%eax
81001a0e:	0f b6 00             	movzbl (%eax),%eax
81001a11:	3c 3a                	cmp    $0x3a,%al
81001a13:	75 0b                	jne    81001a20 <getopt_internal+0x176>
81001a15:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81001a19:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
81001a20:	8b 45 20             	mov    0x20(%ebp),%eax
81001a23:	8b 40 10             	mov    0x10(%eax),%eax
81001a26:	83 f8 01             	cmp    $0x1,%eax
81001a29:	0f 85 a2 01 00 00    	jne    81001bd1 <getopt_internal+0x327>
81001a2f:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
81001a33:	0f 84 02 01 00 00    	je     81001b3b <getopt_internal+0x291>
81001a39:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
81001a3d:	0f 84 56 01 00 00    	je     81001b99 <getopt_internal+0x2ef>
81001a43:	8b 45 20             	mov    0x20(%ebp),%eax
81001a46:	8b 50 04             	mov    0x4(%eax),%edx
81001a49:	8b 45 20             	mov    0x20(%ebp),%eax
81001a4c:	89 50 14             	mov    %edx,0x14(%eax)
81001a4f:	8b 45 20             	mov    0x20(%ebp),%eax
81001a52:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001a59:	eb 1e                	jmp    81001a79 <getopt_internal+0x1cf>
81001a5b:	8b 45 20             	mov    0x20(%ebp),%eax
81001a5e:	8b 40 04             	mov    0x4(%eax),%eax
81001a61:	8d 50 01             	lea    0x1(%eax),%edx
81001a64:	8b 45 20             	mov    0x20(%ebp),%eax
81001a67:	89 50 04             	mov    %edx,0x4(%eax)
81001a6a:	8b 45 20             	mov    0x20(%ebp),%eax
81001a6d:	8b 40 18             	mov    0x18(%eax),%eax
81001a70:	8d 50 01             	lea    0x1(%eax),%edx
81001a73:	8b 45 20             	mov    0x20(%ebp),%eax
81001a76:	89 50 18             	mov    %edx,0x18(%eax)
81001a79:	8b 45 20             	mov    0x20(%ebp),%eax
81001a7c:	8b 40 04             	mov    0x4(%eax),%eax
81001a7f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001a86:	8b 45 0c             	mov    0xc(%ebp),%eax
81001a89:	01 d0                	add    %edx,%eax
81001a8b:	8b 00                	mov    (%eax),%eax
81001a8d:	83 ec 08             	sub    $0x8,%esp
81001a90:	ff 75 1c             	push   0x1c(%ebp)
81001a93:	50                   	push   %eax
81001a94:	e8 35 fd ff ff       	call   810017ce <is_option>
81001a99:	83 c4 10             	add    $0x10,%esp
81001a9c:	85 c0                	test   %eax,%eax
81001a9e:	74 bb                	je     81001a5b <getopt_internal+0x1b1>
81001aa0:	8b 45 20             	mov    0x20(%ebp),%eax
81001aa3:	8b 40 04             	mov    0x4(%eax),%eax
81001aa6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001aad:	8b 45 0c             	mov    0xc(%ebp),%eax
81001ab0:	01 d0                	add    %edx,%eax
81001ab2:	8b 00                	mov    (%eax),%eax
81001ab4:	85 c0                	test   %eax,%eax
81001ab6:	75 16                	jne    81001ace <getopt_internal+0x224>
81001ab8:	8b 45 20             	mov    0x20(%ebp),%eax
81001abb:	8b 50 14             	mov    0x14(%eax),%edx
81001abe:	8b 45 20             	mov    0x20(%ebp),%eax
81001ac1:	89 50 04             	mov    %edx,0x4(%eax)
81001ac4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001ac9:	e9 ec 08 00 00       	jmp    810023ba <getopt_internal+0xb10>
81001ace:	8b 45 20             	mov    0x20(%ebp),%eax
81001ad1:	8b 40 04             	mov    0x4(%eax),%eax
81001ad4:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001adb:	8b 45 0c             	mov    0xc(%ebp),%eax
81001ade:	01 d0                	add    %edx,%eax
81001ae0:	8b 00                	mov    (%eax),%eax
81001ae2:	83 ec 08             	sub    $0x8,%esp
81001ae5:	68 74 68 00 81       	push   $0x81006874
81001aea:	50                   	push   %eax
81001aeb:	e8 cc 27 00 00       	call   810042bc <strcmp>
81001af0:	83 c4 10             	add    $0x10,%esp
81001af3:	85 c0                	test   %eax,%eax
81001af5:	0f 85 cf 00 00 00    	jne    81001bca <getopt_internal+0x320>
81001afb:	8b 45 20             	mov    0x20(%ebp),%eax
81001afe:	8b 40 18             	mov    0x18(%eax),%eax
81001b01:	8b 55 20             	mov    0x20(%ebp),%edx
81001b04:	8b 52 14             	mov    0x14(%edx),%edx
81001b07:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81001b0e:	8b 55 0c             	mov    0xc(%ebp),%edx
81001b11:	01 ca                	add    %ecx,%edx
81001b13:	83 ec 04             	sub    $0x4,%esp
81001b16:	6a 01                	push   $0x1
81001b18:	50                   	push   %eax
81001b19:	52                   	push   %edx
81001b1a:	e8 79 fc ff ff       	call   81001798 <permute>
81001b1f:	83 c4 10             	add    $0x10,%esp
81001b22:	8b 45 20             	mov    0x20(%ebp),%eax
81001b25:	8b 40 14             	mov    0x14(%eax),%eax
81001b28:	8d 50 01             	lea    0x1(%eax),%edx
81001b2b:	8b 45 20             	mov    0x20(%ebp),%eax
81001b2e:	89 50 04             	mov    %edx,0x4(%eax)
81001b31:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001b36:	e9 7f 08 00 00       	jmp    810023ba <getopt_internal+0xb10>
81001b3b:	8b 45 20             	mov    0x20(%ebp),%eax
81001b3e:	8b 40 04             	mov    0x4(%eax),%eax
81001b41:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001b48:	8b 45 0c             	mov    0xc(%ebp),%eax
81001b4b:	01 d0                	add    %edx,%eax
81001b4d:	8b 00                	mov    (%eax),%eax
81001b4f:	83 ec 08             	sub    $0x8,%esp
81001b52:	ff 75 1c             	push   0x1c(%ebp)
81001b55:	50                   	push   %eax
81001b56:	e8 73 fc ff ff       	call   810017ce <is_option>
81001b5b:	83 c4 10             	add    $0x10,%esp
81001b5e:	85 c0                	test   %eax,%eax
81001b60:	75 6b                	jne    81001bcd <getopt_internal+0x323>
81001b62:	8b 45 20             	mov    0x20(%ebp),%eax
81001b65:	8b 40 04             	mov    0x4(%eax),%eax
81001b68:	8d 48 01             	lea    0x1(%eax),%ecx
81001b6b:	8b 55 20             	mov    0x20(%ebp),%edx
81001b6e:	89 4a 04             	mov    %ecx,0x4(%edx)
81001b71:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001b78:	8b 45 0c             	mov    0xc(%ebp),%eax
81001b7b:	01 d0                	add    %edx,%eax
81001b7d:	8b 10                	mov    (%eax),%edx
81001b7f:	8b 45 20             	mov    0x20(%ebp),%eax
81001b82:	89 10                	mov    %edx,(%eax)
81001b84:	8b 45 20             	mov    0x20(%ebp),%eax
81001b87:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
81001b8e:	8b 45 20             	mov    0x20(%ebp),%eax
81001b91:	8b 40 0c             	mov    0xc(%eax),%eax
81001b94:	e9 21 08 00 00       	jmp    810023ba <getopt_internal+0xb10>
81001b99:	8b 45 20             	mov    0x20(%ebp),%eax
81001b9c:	8b 40 04             	mov    0x4(%eax),%eax
81001b9f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001ba6:	8b 45 0c             	mov    0xc(%ebp),%eax
81001ba9:	01 d0                	add    %edx,%eax
81001bab:	8b 00                	mov    (%eax),%eax
81001bad:	83 ec 08             	sub    $0x8,%esp
81001bb0:	ff 75 1c             	push   0x1c(%ebp)
81001bb3:	50                   	push   %eax
81001bb4:	e8 15 fc ff ff       	call   810017ce <is_option>
81001bb9:	83 c4 10             	add    $0x10,%esp
81001bbc:	85 c0                	test   %eax,%eax
81001bbe:	75 10                	jne    81001bd0 <getopt_internal+0x326>
81001bc0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001bc5:	e9 f0 07 00 00       	jmp    810023ba <getopt_internal+0xb10>
81001bca:	90                   	nop
81001bcb:	eb 04                	jmp    81001bd1 <getopt_internal+0x327>
81001bcd:	90                   	nop
81001bce:	eb 01                	jmp    81001bd1 <getopt_internal+0x327>
81001bd0:	90                   	nop
81001bd1:	8b 45 20             	mov    0x20(%ebp),%eax
81001bd4:	8b 40 04             	mov    0x4(%eax),%eax
81001bd7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001bde:	8b 45 0c             	mov    0xc(%ebp),%eax
81001be1:	01 d0                	add    %edx,%eax
81001be3:	8b 00                	mov    (%eax),%eax
81001be5:	85 c0                	test   %eax,%eax
81001be7:	75 0a                	jne    81001bf3 <getopt_internal+0x349>
81001be9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001bee:	e9 c7 07 00 00       	jmp    810023ba <getopt_internal+0xb10>
81001bf3:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001bf7:	0f 84 15 03 00 00    	je     81001f12 <getopt_internal+0x668>
81001bfd:	8b 45 20             	mov    0x20(%ebp),%eax
81001c00:	8b 40 04             	mov    0x4(%eax),%eax
81001c03:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001c0a:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c0d:	01 d0                	add    %edx,%eax
81001c0f:	8b 00                	mov    (%eax),%eax
81001c11:	83 ec 04             	sub    $0x4,%esp
81001c14:	6a 02                	push   $0x2
81001c16:	68 74 68 00 81       	push   $0x81006874
81001c1b:	50                   	push   %eax
81001c1c:	e8 44 14 00 00       	call   81003065 <memcmp>
81001c21:	83 c4 10             	add    $0x10,%esp
81001c24:	85 c0                	test   %eax,%eax
81001c26:	74 29                	je     81001c51 <getopt_internal+0x3a7>
81001c28:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
81001c2c:	0f 84 e0 02 00 00    	je     81001f12 <getopt_internal+0x668>
81001c32:	8b 45 20             	mov    0x20(%ebp),%eax
81001c35:	8b 40 04             	mov    0x4(%eax),%eax
81001c38:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001c3f:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c42:	01 d0                	add    %edx,%eax
81001c44:	8b 00                	mov    (%eax),%eax
81001c46:	0f b6 00             	movzbl (%eax),%eax
81001c49:	3c 2b                	cmp    $0x2b,%al
81001c4b:	0f 85 c1 02 00 00    	jne    81001f12 <getopt_internal+0x668>
81001c51:	8b 45 20             	mov    0x20(%ebp),%eax
81001c54:	8b 40 10             	mov    0x10(%eax),%eax
81001c57:	83 f8 01             	cmp    $0x1,%eax
81001c5a:	0f 85 b2 02 00 00    	jne    81001f12 <getopt_internal+0x668>
81001c60:	8b 45 20             	mov    0x20(%ebp),%eax
81001c63:	8b 40 04             	mov    0x4(%eax),%eax
81001c66:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001c6d:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c70:	01 d0                	add    %edx,%eax
81001c72:	8b 00                	mov    (%eax),%eax
81001c74:	83 ec 04             	sub    $0x4,%esp
81001c77:	6a 02                	push   $0x2
81001c79:	68 74 68 00 81       	push   $0x81006874
81001c7e:	50                   	push   %eax
81001c7f:	e8 e1 13 00 00       	call   81003065 <memcmp>
81001c84:	83 c4 10             	add    $0x10,%esp
81001c87:	85 c0                	test   %eax,%eax
81001c89:	75 0a                	jne    81001c95 <getopt_internal+0x3eb>
81001c8b:	8b 45 20             	mov    0x20(%ebp),%eax
81001c8e:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
81001c95:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81001c9c:	8b 45 20             	mov    0x20(%ebp),%eax
81001c9f:	8b 40 04             	mov    0x4(%eax),%eax
81001ca2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001ca9:	8b 45 0c             	mov    0xc(%ebp),%eax
81001cac:	01 d0                	add    %edx,%eax
81001cae:	8b 10                	mov    (%eax),%edx
81001cb0:	8b 45 20             	mov    0x20(%ebp),%eax
81001cb3:	8b 40 10             	mov    0x10(%eax),%eax
81001cb6:	01 d0                	add    %edx,%eax
81001cb8:	83 ec 08             	sub    $0x8,%esp
81001cbb:	6a 3d                	push   $0x3d
81001cbd:	50                   	push   %eax
81001cbe:	e8 fd 24 00 00       	call   810041c0 <strchr>
81001cc3:	83 c4 10             	add    $0x10,%esp
81001cc6:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001cc9:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001ccd:	75 4a                	jne    81001d19 <getopt_internal+0x46f>
81001ccf:	8b 45 20             	mov    0x20(%ebp),%eax
81001cd2:	8b 40 04             	mov    0x4(%eax),%eax
81001cd5:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001cdc:	8b 45 0c             	mov    0xc(%ebp),%eax
81001cdf:	01 d0                	add    %edx,%eax
81001ce1:	8b 00                	mov    (%eax),%eax
81001ce3:	83 ec 0c             	sub    $0xc,%esp
81001ce6:	50                   	push   %eax
81001ce7:	e8 84 26 00 00       	call   81004370 <strlen>
81001cec:	83 c4 10             	add    $0x10,%esp
81001cef:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001cf2:	8b 45 20             	mov    0x20(%ebp),%eax
81001cf5:	8b 40 04             	mov    0x4(%eax),%eax
81001cf8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001cff:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d02:	01 d0                	add    %edx,%eax
81001d04:	8b 10                	mov    (%eax),%edx
81001d06:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001d09:	01 d0                	add    %edx,%eax
81001d0b:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001d0e:	8b 45 20             	mov    0x20(%ebp),%eax
81001d11:	8b 40 10             	mov    0x10(%eax),%eax
81001d14:	29 45 ec             	sub    %eax,-0x14(%ebp)
81001d17:	eb 28                	jmp    81001d41 <getopt_internal+0x497>
81001d19:	8b 45 20             	mov    0x20(%ebp),%eax
81001d1c:	8b 40 04             	mov    0x4(%eax),%eax
81001d1f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d26:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d29:	01 d0                	add    %edx,%eax
81001d2b:	8b 08                	mov    (%eax),%ecx
81001d2d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001d30:	29 c8                	sub    %ecx,%eax
81001d32:	89 c2                	mov    %eax,%edx
81001d34:	8b 45 20             	mov    0x20(%ebp),%eax
81001d37:	8b 48 10             	mov    0x10(%eax),%ecx
81001d3a:	89 d0                	mov    %edx,%eax
81001d3c:	29 c8                	sub    %ecx,%eax
81001d3e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001d41:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001d48:	e9 95 01 00 00       	jmp    81001ee2 <getopt_internal+0x638>
81001d4d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001d50:	c1 e0 04             	shl    $0x4,%eax
81001d53:	89 c2                	mov    %eax,%edx
81001d55:	8b 45 14             	mov    0x14(%ebp),%eax
81001d58:	01 d0                	add    %edx,%eax
81001d5a:	8b 00                	mov    (%eax),%eax
81001d5c:	8b 55 20             	mov    0x20(%ebp),%edx
81001d5f:	8b 52 04             	mov    0x4(%edx),%edx
81001d62:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81001d69:	8b 55 0c             	mov    0xc(%ebp),%edx
81001d6c:	01 ca                	add    %ecx,%edx
81001d6e:	8b 0a                	mov    (%edx),%ecx
81001d70:	8b 55 20             	mov    0x20(%ebp),%edx
81001d73:	8b 52 10             	mov    0x10(%edx),%edx
81001d76:	01 ca                	add    %ecx,%edx
81001d78:	83 ec 04             	sub    $0x4,%esp
81001d7b:	ff 75 ec             	push   -0x14(%ebp)
81001d7e:	50                   	push   %eax
81001d7f:	52                   	push   %edx
81001d80:	e8 e0 12 00 00       	call   81003065 <memcmp>
81001d85:	83 c4 10             	add    $0x10,%esp
81001d88:	85 c0                	test   %eax,%eax
81001d8a:	0f 85 4e 01 00 00    	jne    81001ede <getopt_internal+0x634>
81001d90:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001d93:	c1 e0 04             	shl    $0x4,%eax
81001d96:	89 c2                	mov    %eax,%edx
81001d98:	8b 45 14             	mov    0x14(%ebp),%eax
81001d9b:	01 d0                	add    %edx,%eax
81001d9d:	8b 00                	mov    (%eax),%eax
81001d9f:	83 ec 0c             	sub    $0xc,%esp
81001da2:	50                   	push   %eax
81001da3:	e8 c8 25 00 00       	call   81004370 <strlen>
81001da8:	83 c4 10             	add    $0x10,%esp
81001dab:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001dae:	75 0b                	jne    81001dbb <getopt_internal+0x511>
81001db0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001db3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001db6:	e9 3e 01 00 00       	jmp    81001ef9 <getopt_internal+0x64f>
81001dbb:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001dbf:	79 0b                	jns    81001dcc <getopt_internal+0x522>
81001dc1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001dc4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001dc7:	e9 12 01 00 00       	jmp    81001ede <getopt_internal+0x634>
81001dcc:	8b 45 20             	mov    0x20(%ebp),%eax
81001dcf:	8b 40 08             	mov    0x8(%eax),%eax
81001dd2:	85 c0                	test   %eax,%eax
81001dd4:	0f 84 ef 00 00 00    	je     81001ec9 <getopt_internal+0x61f>
81001dda:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81001ddf:	8b 50 0c             	mov    0xc(%eax),%edx
81001de2:	8b 45 0c             	mov    0xc(%ebp),%eax
81001de5:	8b 00                	mov    (%eax),%eax
81001de7:	83 ec 08             	sub    $0x8,%esp
81001dea:	52                   	push   %edx
81001deb:	50                   	push   %eax
81001dec:	e8 da 2e 00 00       	call   81004ccb <fputs>
81001df1:	83 c4 10             	add    $0x10,%esp
81001df4:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81001df9:	8b 40 0c             	mov    0xc(%eax),%eax
81001dfc:	83 ec 08             	sub    $0x8,%esp
81001dff:	50                   	push   %eax
81001e00:	68 87 68 00 81       	push   $0x81006887
81001e05:	e8 c1 2e 00 00       	call   81004ccb <fputs>
81001e0a:	83 c4 10             	add    $0x10,%esp
81001e0d:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81001e12:	8b 50 0c             	mov    0xc(%eax),%edx
81001e15:	8b 45 20             	mov    0x20(%ebp),%eax
81001e18:	8b 40 04             	mov    0x4(%eax),%eax
81001e1b:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81001e22:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e25:	01 c8                	add    %ecx,%eax
81001e27:	8b 00                	mov    (%eax),%eax
81001e29:	83 ec 08             	sub    $0x8,%esp
81001e2c:	52                   	push   %edx
81001e2d:	50                   	push   %eax
81001e2e:	e8 98 2e 00 00       	call   81004ccb <fputs>
81001e33:	83 c4 10             	add    $0x10,%esp
81001e36:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81001e3b:	8b 40 0c             	mov    0xc(%eax),%eax
81001e3e:	83 ec 08             	sub    $0x8,%esp
81001e41:	50                   	push   %eax
81001e42:	68 92 68 00 81       	push   $0x81006892
81001e47:	e8 7f 2e 00 00       	call   81004ccb <fputs>
81001e4c:	83 c4 10             	add    $0x10,%esp
81001e4f:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81001e54:	8b 50 0c             	mov    0xc(%eax),%edx
81001e57:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001e5a:	c1 e0 04             	shl    $0x4,%eax
81001e5d:	89 c1                	mov    %eax,%ecx
81001e5f:	8b 45 14             	mov    0x14(%ebp),%eax
81001e62:	01 c8                	add    %ecx,%eax
81001e64:	8b 00                	mov    (%eax),%eax
81001e66:	83 ec 08             	sub    $0x8,%esp
81001e69:	52                   	push   %edx
81001e6a:	50                   	push   %eax
81001e6b:	e8 5b 2e 00 00       	call   81004ccb <fputs>
81001e70:	83 c4 10             	add    $0x10,%esp
81001e73:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81001e78:	8b 40 0c             	mov    0xc(%eax),%eax
81001e7b:	83 ec 08             	sub    $0x8,%esp
81001e7e:	50                   	push   %eax
81001e7f:	68 af 68 00 81       	push   $0x810068af
81001e84:	e8 42 2e 00 00       	call   81004ccb <fputs>
81001e89:	83 c4 10             	add    $0x10,%esp
81001e8c:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81001e91:	8b 50 0c             	mov    0xc(%eax),%edx
81001e94:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001e97:	c1 e0 04             	shl    $0x4,%eax
81001e9a:	89 c1                	mov    %eax,%ecx
81001e9c:	8b 45 14             	mov    0x14(%ebp),%eax
81001e9f:	01 c8                	add    %ecx,%eax
81001ea1:	8b 00                	mov    (%eax),%eax
81001ea3:	83 ec 08             	sub    $0x8,%esp
81001ea6:	52                   	push   %edx
81001ea7:	50                   	push   %eax
81001ea8:	e8 1e 2e 00 00       	call   81004ccb <fputs>
81001ead:	83 c4 10             	add    $0x10,%esp
81001eb0:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81001eb5:	8b 40 0c             	mov    0xc(%eax),%eax
81001eb8:	83 ec 08             	sub    $0x8,%esp
81001ebb:	50                   	push   %eax
81001ebc:	68 b8 68 00 81       	push   $0x810068b8
81001ec1:	e8 05 2e 00 00       	call   81004ccb <fputs>
81001ec6:	83 c4 10             	add    $0x10,%esp
81001ec9:	8b 45 20             	mov    0x20(%ebp),%eax
81001ecc:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81001ed3:	8b 45 20             	mov    0x20(%ebp),%eax
81001ed6:	8b 40 0c             	mov    0xc(%eax),%eax
81001ed9:	e9 dc 04 00 00       	jmp    810023ba <getopt_internal+0xb10>
81001ede:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001ee2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ee5:	c1 e0 04             	shl    $0x4,%eax
81001ee8:	89 c2                	mov    %eax,%edx
81001eea:	8b 45 14             	mov    0x14(%ebp),%eax
81001eed:	01 d0                	add    %edx,%eax
81001eef:	8b 00                	mov    (%eax),%eax
81001ef1:	85 c0                	test   %eax,%eax
81001ef3:	0f 85 54 fe ff ff    	jne    81001d4d <getopt_internal+0x4a3>
81001ef9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001efd:	78 13                	js     81001f12 <getopt_internal+0x668>
81001eff:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001f02:	c1 e0 04             	shl    $0x4,%eax
81001f05:	89 c2                	mov    %eax,%edx
81001f07:	8b 45 14             	mov    0x14(%ebp),%eax
81001f0a:	01 d0                	add    %edx,%eax
81001f0c:	8b 40 04             	mov    0x4(%eax),%eax
81001f0f:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001f12:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001f16:	0f 89 9a 01 00 00    	jns    810020b6 <getopt_internal+0x80c>
81001f1c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001f20:	0f 84 90 01 00 00    	je     810020b6 <getopt_internal+0x80c>
81001f26:	8b 45 20             	mov    0x20(%ebp),%eax
81001f29:	8b 40 04             	mov    0x4(%eax),%eax
81001f2c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001f33:	8b 45 0c             	mov    0xc(%ebp),%eax
81001f36:	01 d0                	add    %edx,%eax
81001f38:	8b 10                	mov    (%eax),%edx
81001f3a:	8b 45 20             	mov    0x20(%ebp),%eax
81001f3d:	8b 40 10             	mov    0x10(%eax),%eax
81001f40:	01 d0                	add    %edx,%eax
81001f42:	0f b6 00             	movzbl (%eax),%eax
81001f45:	0f be c0             	movsbl %al,%eax
81001f48:	83 ec 08             	sub    $0x8,%esp
81001f4b:	50                   	push   %eax
81001f4c:	ff 75 10             	push   0x10(%ebp)
81001f4f:	e8 6c 22 00 00       	call   810041c0 <strchr>
81001f54:	83 c4 10             	add    $0x10,%esp
81001f57:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001f5a:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81001f5e:	0f 85 f1 00 00 00    	jne    81002055 <getopt_internal+0x7ab>
81001f64:	8b 45 20             	mov    0x20(%ebp),%eax
81001f67:	8b 40 08             	mov    0x8(%eax),%eax
81001f6a:	85 c0                	test   %eax,%eax
81001f6c:	0f 84 83 00 00 00    	je     81001ff5 <getopt_internal+0x74b>
81001f72:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81001f77:	8b 50 0c             	mov    0xc(%eax),%edx
81001f7a:	8b 45 0c             	mov    0xc(%ebp),%eax
81001f7d:	8b 00                	mov    (%eax),%eax
81001f7f:	83 ec 08             	sub    $0x8,%esp
81001f82:	52                   	push   %edx
81001f83:	50                   	push   %eax
81001f84:	e8 42 2d 00 00       	call   81004ccb <fputs>
81001f89:	83 c4 10             	add    $0x10,%esp
81001f8c:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81001f91:	8b 40 0c             	mov    0xc(%eax),%eax
81001f94:	83 ec 08             	sub    $0x8,%esp
81001f97:	50                   	push   %eax
81001f98:	68 bc 68 00 81       	push   $0x810068bc
81001f9d:	e8 29 2d 00 00       	call   81004ccb <fputs>
81001fa2:	83 c4 10             	add    $0x10,%esp
81001fa5:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81001faa:	8b 50 0c             	mov    0xc(%eax),%edx
81001fad:	8b 45 20             	mov    0x20(%ebp),%eax
81001fb0:	8b 40 04             	mov    0x4(%eax),%eax
81001fb3:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81001fba:	8b 45 0c             	mov    0xc(%ebp),%eax
81001fbd:	01 c8                	add    %ecx,%eax
81001fbf:	8b 08                	mov    (%eax),%ecx
81001fc1:	8b 45 20             	mov    0x20(%ebp),%eax
81001fc4:	8b 40 10             	mov    0x10(%eax),%eax
81001fc7:	01 c8                	add    %ecx,%eax
81001fc9:	0f b6 00             	movzbl (%eax),%eax
81001fcc:	0f be c0             	movsbl %al,%eax
81001fcf:	83 ec 08             	sub    $0x8,%esp
81001fd2:	52                   	push   %edx
81001fd3:	50                   	push   %eax
81001fd4:	e8 fe 2b 00 00       	call   81004bd7 <fputc>
81001fd9:	83 c4 10             	add    $0x10,%esp
81001fdc:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81001fe1:	8b 40 0c             	mov    0xc(%eax),%eax
81001fe4:	83 ec 08             	sub    $0x8,%esp
81001fe7:	50                   	push   %eax
81001fe8:	68 d3 68 00 81       	push   $0x810068d3
81001fed:	e8 d9 2c 00 00       	call   81004ccb <fputs>
81001ff2:	83 c4 10             	add    $0x10,%esp
81001ff5:	8b 45 20             	mov    0x20(%ebp),%eax
81001ff8:	8b 40 10             	mov    0x10(%eax),%eax
81001ffb:	8d 50 01             	lea    0x1(%eax),%edx
81001ffe:	8b 45 20             	mov    0x20(%ebp),%eax
81002001:	89 50 10             	mov    %edx,0x10(%eax)
81002004:	8b 45 20             	mov    0x20(%ebp),%eax
81002007:	8b 40 04             	mov    0x4(%eax),%eax
8100200a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002011:	8b 45 0c             	mov    0xc(%ebp),%eax
81002014:	01 d0                	add    %edx,%eax
81002016:	8b 10                	mov    (%eax),%edx
81002018:	8b 45 20             	mov    0x20(%ebp),%eax
8100201b:	8b 40 10             	mov    0x10(%eax),%eax
8100201e:	01 d0                	add    %edx,%eax
81002020:	0f b6 00             	movzbl (%eax),%eax
81002023:	84 c0                	test   %al,%al
81002025:	75 19                	jne    81002040 <getopt_internal+0x796>
81002027:	8b 45 20             	mov    0x20(%ebp),%eax
8100202a:	8b 40 04             	mov    0x4(%eax),%eax
8100202d:	8d 50 01             	lea    0x1(%eax),%edx
81002030:	8b 45 20             	mov    0x20(%ebp),%eax
81002033:	89 50 04             	mov    %edx,0x4(%eax)
81002036:	8b 45 20             	mov    0x20(%ebp),%eax
81002039:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002040:	8b 45 20             	mov    0x20(%ebp),%eax
81002043:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
8100204a:	8b 45 20             	mov    0x20(%ebp),%eax
8100204d:	8b 40 0c             	mov    0xc(%eax),%eax
81002050:	e9 65 03 00 00       	jmp    810023ba <getopt_internal+0xb10>
81002055:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002058:	83 c0 01             	add    $0x1,%eax
8100205b:	0f b6 00             	movzbl (%eax),%eax
8100205e:	3c 3a                	cmp    $0x3a,%al
81002060:	75 1b                	jne    8100207d <getopt_internal+0x7d3>
81002062:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002065:	83 c0 02             	add    $0x2,%eax
81002068:	0f b6 00             	movzbl (%eax),%eax
8100206b:	3c 3a                	cmp    $0x3a,%al
8100206d:	75 07                	jne    81002076 <getopt_internal+0x7cc>
8100206f:	b8 02 00 00 00       	mov    $0x2,%eax
81002074:	eb 0c                	jmp    81002082 <getopt_internal+0x7d8>
81002076:	b8 01 00 00 00       	mov    $0x1,%eax
8100207b:	eb 05                	jmp    81002082 <getopt_internal+0x7d8>
8100207d:	b8 00 00 00 00       	mov    $0x0,%eax
81002082:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002085:	8b 45 20             	mov    0x20(%ebp),%eax
81002088:	8b 40 04             	mov    0x4(%eax),%eax
8100208b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002092:	8b 45 0c             	mov    0xc(%ebp),%eax
81002095:	01 d0                	add    %edx,%eax
81002097:	8b 10                	mov    (%eax),%edx
81002099:	8b 45 20             	mov    0x20(%ebp),%eax
8100209c:	8b 40 10             	mov    0x10(%eax),%eax
8100209f:	83 c0 01             	add    $0x1,%eax
810020a2:	01 d0                	add    %edx,%eax
810020a4:	89 45 e8             	mov    %eax,-0x18(%ebp)
810020a7:	8b 45 dc             	mov    -0x24(%ebp),%eax
810020aa:	0f b6 00             	movzbl (%eax),%eax
810020ad:	0f be d0             	movsbl %al,%edx
810020b0:	8b 45 20             	mov    0x20(%ebp),%eax
810020b3:	89 50 0c             	mov    %edx,0xc(%eax)
810020b6:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
810020bd:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
810020c1:	74 40                	je     81002103 <getopt_internal+0x859>
810020c3:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
810020c7:	0f 85 b0 01 00 00    	jne    8100227d <getopt_internal+0x9d3>
810020cd:	8b 45 e8             	mov    -0x18(%ebp),%eax
810020d0:	0f b6 00             	movzbl (%eax),%eax
810020d3:	3c 3d                	cmp    $0x3d,%al
810020d5:	75 04                	jne    810020db <getopt_internal+0x831>
810020d7:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
810020db:	8b 45 e8             	mov    -0x18(%ebp),%eax
810020de:	0f b6 00             	movzbl (%eax),%eax
810020e1:	84 c0                	test   %al,%al
810020e3:	74 05                	je     810020ea <getopt_internal+0x840>
810020e5:	8b 45 e8             	mov    -0x18(%ebp),%eax
810020e8:	eb 05                	jmp    810020ef <getopt_internal+0x845>
810020ea:	b8 00 00 00 00       	mov    $0x0,%eax
810020ef:	8b 55 20             	mov    0x20(%ebp),%edx
810020f2:	89 02                	mov    %eax,(%edx)
810020f4:	8b 45 20             	mov    0x20(%ebp),%eax
810020f7:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810020fe:	e9 d2 01 00 00       	jmp    810022d5 <getopt_internal+0xa2b>
81002103:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002106:	0f b6 00             	movzbl (%eax),%eax
81002109:	3c 3d                	cmp    $0x3d,%al
8100210b:	75 04                	jne    81002111 <getopt_internal+0x867>
8100210d:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81002111:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002114:	0f b6 00             	movzbl (%eax),%eax
81002117:	84 c0                	test   %al,%al
81002119:	74 17                	je     81002132 <getopt_internal+0x888>
8100211b:	8b 45 20             	mov    0x20(%ebp),%eax
8100211e:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002121:	89 10                	mov    %edx,(%eax)
81002123:	8b 45 20             	mov    0x20(%ebp),%eax
81002126:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100212d:	e9 a3 01 00 00       	jmp    810022d5 <getopt_internal+0xa2b>
81002132:	8b 45 20             	mov    0x20(%ebp),%eax
81002135:	8b 40 04             	mov    0x4(%eax),%eax
81002138:	83 c0 01             	add    $0x1,%eax
8100213b:	39 45 08             	cmp    %eax,0x8(%ebp)
8100213e:	0f 8f 0a 01 00 00    	jg     8100224e <getopt_internal+0x9a4>
81002144:	8b 45 20             	mov    0x20(%ebp),%eax
81002147:	8b 40 08             	mov    0x8(%eax),%eax
8100214a:	85 c0                	test   %eax,%eax
8100214c:	0f 84 d3 00 00 00    	je     81002225 <getopt_internal+0x97b>
81002152:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81002157:	8b 50 0c             	mov    0xc(%eax),%edx
8100215a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100215d:	8b 00                	mov    (%eax),%eax
8100215f:	83 ec 08             	sub    $0x8,%esp
81002162:	52                   	push   %edx
81002163:	50                   	push   %eax
81002164:	e8 62 2b 00 00       	call   81004ccb <fputs>
81002169:	83 c4 10             	add    $0x10,%esp
8100216c:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81002171:	8b 40 0c             	mov    0xc(%eax),%eax
81002174:	83 ec 08             	sub    $0x8,%esp
81002177:	50                   	push   %eax
81002178:	68 d8 68 00 81       	push   $0x810068d8
8100217d:	e8 49 2b 00 00       	call   81004ccb <fputs>
81002182:	83 c4 10             	add    $0x10,%esp
81002185:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002189:	78 54                	js     810021df <getopt_internal+0x935>
8100218b:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81002190:	8b 40 0c             	mov    0xc(%eax),%eax
81002193:	83 ec 08             	sub    $0x8,%esp
81002196:	50                   	push   %eax
81002197:	6a 2d                	push   $0x2d
81002199:	e8 39 2a 00 00       	call   81004bd7 <fputc>
8100219e:	83 c4 10             	add    $0x10,%esp
810021a1:	a1 a4 70 00 81       	mov    0x810070a4,%eax
810021a6:	8b 50 0c             	mov    0xc(%eax),%edx
810021a9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810021ac:	c1 e0 04             	shl    $0x4,%eax
810021af:	89 c1                	mov    %eax,%ecx
810021b1:	8b 45 14             	mov    0x14(%ebp),%eax
810021b4:	01 c8                	add    %ecx,%eax
810021b6:	8b 00                	mov    (%eax),%eax
810021b8:	83 ec 08             	sub    $0x8,%esp
810021bb:	52                   	push   %edx
810021bc:	50                   	push   %eax
810021bd:	e8 09 2b 00 00       	call   81004ccb <fputs>
810021c2:	83 c4 10             	add    $0x10,%esp
810021c5:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
810021c9:	74 07                	je     810021d2 <getopt_internal+0x928>
810021cb:	ba 3a 00 00 00       	mov    $0x3a,%edx
810021d0:	eb 05                	jmp    810021d7 <getopt_internal+0x92d>
810021d2:	ba 3f 00 00 00       	mov    $0x3f,%edx
810021d7:	8b 45 20             	mov    0x20(%ebp),%eax
810021da:	89 50 0c             	mov    %edx,0xc(%eax)
810021dd:	eb 2d                	jmp    8100220c <getopt_internal+0x962>
810021df:	a1 a4 70 00 81       	mov    0x810070a4,%eax
810021e4:	8b 50 0c             	mov    0xc(%eax),%edx
810021e7:	8b 45 dc             	mov    -0x24(%ebp),%eax
810021ea:	0f b6 00             	movzbl (%eax),%eax
810021ed:	0f be c0             	movsbl %al,%eax
810021f0:	83 ec 08             	sub    $0x8,%esp
810021f3:	52                   	push   %edx
810021f4:	50                   	push   %eax
810021f5:	e8 dd 29 00 00       	call   81004bd7 <fputc>
810021fa:	83 c4 10             	add    $0x10,%esp
810021fd:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002200:	0f b6 00             	movzbl (%eax),%eax
81002203:	0f be d0             	movsbl %al,%edx
81002206:	8b 45 20             	mov    0x20(%ebp),%eax
81002209:	89 50 0c             	mov    %edx,0xc(%eax)
8100220c:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81002211:	8b 40 0c             	mov    0xc(%eax),%eax
81002214:	83 ec 08             	sub    $0x8,%esp
81002217:	50                   	push   %eax
81002218:	68 d3 68 00 81       	push   $0x810068d3
8100221d:	e8 a9 2a 00 00       	call   81004ccb <fputs>
81002222:	83 c4 10             	add    $0x10,%esp
81002225:	8b 45 20             	mov    0x20(%ebp),%eax
81002228:	8b 40 04             	mov    0x4(%eax),%eax
8100222b:	8d 50 01             	lea    0x1(%eax),%edx
8100222e:	8b 45 20             	mov    0x20(%ebp),%eax
81002231:	89 50 04             	mov    %edx,0x4(%eax)
81002234:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81002238:	74 0a                	je     81002244 <getopt_internal+0x99a>
8100223a:	b8 3a 00 00 00       	mov    $0x3a,%eax
8100223f:	e9 76 01 00 00       	jmp    810023ba <getopt_internal+0xb10>
81002244:	b8 3f 00 00 00       	mov    $0x3f,%eax
81002249:	e9 6c 01 00 00       	jmp    810023ba <getopt_internal+0xb10>
8100224e:	8b 45 20             	mov    0x20(%ebp),%eax
81002251:	8b 40 04             	mov    0x4(%eax),%eax
81002254:	83 c0 01             	add    $0x1,%eax
81002257:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100225e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002261:	01 d0                	add    %edx,%eax
81002263:	8b 10                	mov    (%eax),%edx
81002265:	8b 45 20             	mov    0x20(%ebp),%eax
81002268:	89 10                	mov    %edx,(%eax)
8100226a:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81002271:	8b 45 20             	mov    0x20(%ebp),%eax
81002274:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100227b:	eb 58                	jmp    810022d5 <getopt_internal+0xa2b>
8100227d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002281:	79 3e                	jns    810022c1 <getopt_internal+0xa17>
81002283:	8b 45 20             	mov    0x20(%ebp),%eax
81002286:	8b 40 10             	mov    0x10(%eax),%eax
81002289:	8d 50 01             	lea    0x1(%eax),%edx
8100228c:	8b 45 20             	mov    0x20(%ebp),%eax
8100228f:	89 50 10             	mov    %edx,0x10(%eax)
81002292:	8b 45 20             	mov    0x20(%ebp),%eax
81002295:	8b 40 04             	mov    0x4(%eax),%eax
81002298:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100229f:	8b 45 0c             	mov    0xc(%ebp),%eax
810022a2:	01 d0                	add    %edx,%eax
810022a4:	8b 10                	mov    (%eax),%edx
810022a6:	8b 45 20             	mov    0x20(%ebp),%eax
810022a9:	8b 40 10             	mov    0x10(%eax),%eax
810022ac:	01 d0                	add    %edx,%eax
810022ae:	0f b6 00             	movzbl (%eax),%eax
810022b1:	84 c0                	test   %al,%al
810022b3:	75 16                	jne    810022cb <getopt_internal+0xa21>
810022b5:	8b 45 20             	mov    0x20(%ebp),%eax
810022b8:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810022bf:	eb 0a                	jmp    810022cb <getopt_internal+0xa21>
810022c1:	8b 45 20             	mov    0x20(%ebp),%eax
810022c4:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810022cb:	8b 45 20             	mov    0x20(%ebp),%eax
810022ce:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810022d4:	90                   	nop
810022d5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810022d9:	75 57                	jne    81002332 <getopt_internal+0xa88>
810022db:	8b 45 20             	mov    0x20(%ebp),%eax
810022de:	8b 40 10             	mov    0x10(%eax),%eax
810022e1:	83 f8 01             	cmp    $0x1,%eax
810022e4:	75 4c                	jne    81002332 <getopt_internal+0xa88>
810022e6:	8b 45 20             	mov    0x20(%ebp),%eax
810022e9:	8b 40 18             	mov    0x18(%eax),%eax
810022ec:	85 c0                	test   %eax,%eax
810022ee:	74 42                	je     81002332 <getopt_internal+0xa88>
810022f0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810022f3:	8d 48 01             	lea    0x1(%eax),%ecx
810022f6:	8b 45 20             	mov    0x20(%ebp),%eax
810022f9:	8b 40 18             	mov    0x18(%eax),%eax
810022fc:	8b 55 20             	mov    0x20(%ebp),%edx
810022ff:	8b 52 14             	mov    0x14(%edx),%edx
81002302:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
81002309:	8b 55 0c             	mov    0xc(%ebp),%edx
8100230c:	01 da                	add    %ebx,%edx
8100230e:	83 ec 04             	sub    $0x4,%esp
81002311:	51                   	push   %ecx
81002312:	50                   	push   %eax
81002313:	52                   	push   %edx
81002314:	e8 7f f4 ff ff       	call   81001798 <permute>
81002319:	83 c4 10             	add    $0x10,%esp
8100231c:	8b 45 20             	mov    0x20(%ebp),%eax
8100231f:	8b 40 14             	mov    0x14(%eax),%eax
81002322:	8d 50 01             	lea    0x1(%eax),%edx
81002325:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002328:	01 c2                	add    %eax,%edx
8100232a:	8b 45 20             	mov    0x20(%ebp),%eax
8100232d:	89 50 04             	mov    %edx,0x4(%eax)
81002330:	eb 1f                	jmp    81002351 <getopt_internal+0xaa7>
81002332:	8b 45 20             	mov    0x20(%ebp),%eax
81002335:	8b 40 10             	mov    0x10(%eax),%eax
81002338:	83 f8 01             	cmp    $0x1,%eax
8100233b:	75 14                	jne    81002351 <getopt_internal+0xaa7>
8100233d:	8b 45 20             	mov    0x20(%ebp),%eax
81002340:	8b 40 04             	mov    0x4(%eax),%eax
81002343:	8d 50 01             	lea    0x1(%eax),%edx
81002346:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002349:	01 c2                	add    %eax,%edx
8100234b:	8b 45 20             	mov    0x20(%ebp),%eax
8100234e:	89 50 04             	mov    %edx,0x4(%eax)
81002351:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002355:	78 5d                	js     810023b4 <getopt_internal+0xb0a>
81002357:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
8100235b:	74 08                	je     81002365 <getopt_internal+0xabb>
8100235d:	8b 45 18             	mov    0x18(%ebp),%eax
81002360:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002363:	89 10                	mov    %edx,(%eax)
81002365:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002368:	c1 e0 04             	shl    $0x4,%eax
8100236b:	89 c2                	mov    %eax,%edx
8100236d:	8b 45 14             	mov    0x14(%ebp),%eax
81002370:	01 d0                	add    %edx,%eax
81002372:	8b 40 08             	mov    0x8(%eax),%eax
81002375:	85 c0                	test   %eax,%eax
81002377:	74 29                	je     810023a2 <getopt_internal+0xaf8>
81002379:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100237c:	c1 e0 04             	shl    $0x4,%eax
8100237f:	89 c2                	mov    %eax,%edx
81002381:	8b 45 14             	mov    0x14(%ebp),%eax
81002384:	01 c2                	add    %eax,%edx
81002386:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002389:	c1 e0 04             	shl    $0x4,%eax
8100238c:	89 c1                	mov    %eax,%ecx
8100238e:	8b 45 14             	mov    0x14(%ebp),%eax
81002391:	01 c8                	add    %ecx,%eax
81002393:	8b 40 08             	mov    0x8(%eax),%eax
81002396:	8b 52 0c             	mov    0xc(%edx),%edx
81002399:	89 10                	mov    %edx,(%eax)
8100239b:	b8 00 00 00 00       	mov    $0x0,%eax
810023a0:	eb 18                	jmp    810023ba <getopt_internal+0xb10>
810023a2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810023a5:	c1 e0 04             	shl    $0x4,%eax
810023a8:	89 c2                	mov    %eax,%edx
810023aa:	8b 45 14             	mov    0x14(%ebp),%eax
810023ad:	01 d0                	add    %edx,%eax
810023af:	8b 40 0c             	mov    0xc(%eax),%eax
810023b2:	eb 06                	jmp    810023ba <getopt_internal+0xb10>
810023b4:	8b 45 20             	mov    0x20(%ebp),%eax
810023b7:	8b 40 0c             	mov    0xc(%eax),%eax
810023ba:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810023bd:	c9                   	leave  
810023be:	c3                   	ret    

810023bf <getopt>:
810023bf:	55                   	push   %ebp
810023c0:	89 e5                	mov    %esp,%ebp
810023c2:	83 ec 28             	sub    $0x28,%esp
810023c5:	8d 45 d8             	lea    -0x28(%ebp),%eax
810023c8:	50                   	push   %eax
810023c9:	e8 31 f4 ff ff       	call   810017ff <read_globals>
810023ce:	83 c4 04             	add    $0x4,%esp
810023d1:	83 ec 04             	sub    $0x4,%esp
810023d4:	8d 45 d8             	lea    -0x28(%ebp),%eax
810023d7:	50                   	push   %eax
810023d8:	6a 00                	push   $0x0
810023da:	6a 00                	push   $0x0
810023dc:	6a 00                	push   $0x0
810023de:	ff 75 10             	push   0x10(%ebp)
810023e1:	ff 75 0c             	push   0xc(%ebp)
810023e4:	ff 75 08             	push   0x8(%ebp)
810023e7:	e8 be f4 ff ff       	call   810018aa <getopt_internal>
810023ec:	83 c4 20             	add    $0x20,%esp
810023ef:	89 45 f4             	mov    %eax,-0xc(%ebp)
810023f2:	83 ec 0c             	sub    $0xc,%esp
810023f5:	8d 45 d8             	lea    -0x28(%ebp),%eax
810023f8:	50                   	push   %eax
810023f9:	e8 5a f4 ff ff       	call   81001858 <write_globals>
810023fe:	83 c4 10             	add    $0x10,%esp
81002401:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002404:	c9                   	leave  
81002405:	c3                   	ret    

81002406 <getopt_long>:
81002406:	55                   	push   %ebp
81002407:	89 e5                	mov    %esp,%ebp
81002409:	83 ec 28             	sub    $0x28,%esp
8100240c:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100240f:	50                   	push   %eax
81002410:	e8 ea f3 ff ff       	call   810017ff <read_globals>
81002415:	83 c4 04             	add    $0x4,%esp
81002418:	83 ec 04             	sub    $0x4,%esp
8100241b:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100241e:	50                   	push   %eax
8100241f:	6a 00                	push   $0x0
81002421:	ff 75 18             	push   0x18(%ebp)
81002424:	ff 75 14             	push   0x14(%ebp)
81002427:	ff 75 10             	push   0x10(%ebp)
8100242a:	ff 75 0c             	push   0xc(%ebp)
8100242d:	ff 75 08             	push   0x8(%ebp)
81002430:	e8 75 f4 ff ff       	call   810018aa <getopt_internal>
81002435:	83 c4 20             	add    $0x20,%esp
81002438:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100243b:	83 ec 0c             	sub    $0xc,%esp
8100243e:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002441:	50                   	push   %eax
81002442:	e8 11 f4 ff ff       	call   81001858 <write_globals>
81002447:	83 c4 10             	add    $0x10,%esp
8100244a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100244d:	c9                   	leave  
8100244e:	c3                   	ret    

8100244f <getopt_long_only>:
8100244f:	55                   	push   %ebp
81002450:	89 e5                	mov    %esp,%ebp
81002452:	83 ec 28             	sub    $0x28,%esp
81002455:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002458:	50                   	push   %eax
81002459:	e8 a1 f3 ff ff       	call   810017ff <read_globals>
8100245e:	83 c4 04             	add    $0x4,%esp
81002461:	83 ec 04             	sub    $0x4,%esp
81002464:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002467:	50                   	push   %eax
81002468:	6a 01                	push   $0x1
8100246a:	ff 75 18             	push   0x18(%ebp)
8100246d:	ff 75 14             	push   0x14(%ebp)
81002470:	ff 75 10             	push   0x10(%ebp)
81002473:	ff 75 0c             	push   0xc(%ebp)
81002476:	ff 75 08             	push   0x8(%ebp)
81002479:	e8 2c f4 ff ff       	call   810018aa <getopt_internal>
8100247e:	83 c4 20             	add    $0x20,%esp
81002481:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002484:	83 ec 0c             	sub    $0xc,%esp
81002487:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100248a:	50                   	push   %eax
8100248b:	e8 c8 f3 ff ff       	call   81001858 <write_globals>
81002490:	83 c4 10             	add    $0x10,%esp
81002493:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002496:	c9                   	leave  
81002497:	c3                   	ret    

81002498 <__getopt_r>:
81002498:	55                   	push   %ebp
81002499:	89 e5                	mov    %esp,%ebp
8100249b:	83 ec 08             	sub    $0x8,%esp
8100249e:	83 ec 04             	sub    $0x4,%esp
810024a1:	ff 75 14             	push   0x14(%ebp)
810024a4:	6a 00                	push   $0x0
810024a6:	6a 00                	push   $0x0
810024a8:	6a 00                	push   $0x0
810024aa:	ff 75 10             	push   0x10(%ebp)
810024ad:	ff 75 0c             	push   0xc(%ebp)
810024b0:	ff 75 08             	push   0x8(%ebp)
810024b3:	e8 f2 f3 ff ff       	call   810018aa <getopt_internal>
810024b8:	83 c4 20             	add    $0x20,%esp
810024bb:	c9                   	leave  
810024bc:	c3                   	ret    

810024bd <__getopt_long_r>:
810024bd:	55                   	push   %ebp
810024be:	89 e5                	mov    %esp,%ebp
810024c0:	83 ec 08             	sub    $0x8,%esp
810024c3:	83 ec 04             	sub    $0x4,%esp
810024c6:	ff 75 1c             	push   0x1c(%ebp)
810024c9:	6a 00                	push   $0x0
810024cb:	ff 75 18             	push   0x18(%ebp)
810024ce:	ff 75 14             	push   0x14(%ebp)
810024d1:	ff 75 10             	push   0x10(%ebp)
810024d4:	ff 75 0c             	push   0xc(%ebp)
810024d7:	ff 75 08             	push   0x8(%ebp)
810024da:	e8 cb f3 ff ff       	call   810018aa <getopt_internal>
810024df:	83 c4 20             	add    $0x20,%esp
810024e2:	c9                   	leave  
810024e3:	c3                   	ret    

810024e4 <__getopt_long_only_r>:
810024e4:	55                   	push   %ebp
810024e5:	89 e5                	mov    %esp,%ebp
810024e7:	83 ec 08             	sub    $0x8,%esp
810024ea:	83 ec 04             	sub    $0x4,%esp
810024ed:	ff 75 1c             	push   0x1c(%ebp)
810024f0:	6a 01                	push   $0x1
810024f2:	ff 75 18             	push   0x18(%ebp)
810024f5:	ff 75 14             	push   0x14(%ebp)
810024f8:	ff 75 10             	push   0x10(%ebp)
810024fb:	ff 75 0c             	push   0xc(%ebp)
810024fe:	ff 75 08             	push   0x8(%ebp)
81002501:	e8 a4 f3 ff ff       	call   810018aa <getopt_internal>
81002506:	83 c4 20             	add    $0x20,%esp
81002509:	c9                   	leave  
8100250a:	c3                   	ret    

8100250b <__getreent>:
8100250b:	55                   	push   %ebp
8100250c:	89 e5                	mov    %esp,%ebp
8100250e:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81002513:	5d                   	pop    %ebp
81002514:	c3                   	ret    

81002515 <malloc_extend_top>:
81002515:	55                   	push   %ebp
81002516:	89 e5                	mov    %esp,%ebp
81002518:	83 ec 38             	sub    $0x38,%esp
8100251b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002522:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81002527:	8b 40 08             	mov    0x8(%eax),%eax
8100252a:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100252d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002530:	8b 40 04             	mov    0x4(%eax),%eax
81002533:	83 e0 fc             	and    $0xfffffffc,%eax
81002536:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002539:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100253c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100253f:	01 d0                	add    %edx,%eax
81002541:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002544:	8b 15 a0 7c 00 81    	mov    0x81007ca0,%edx
8100254a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100254d:	01 d0                	add    %edx,%eax
8100254f:	83 c0 10             	add    $0x10,%eax
81002552:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002555:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
8100255c:	a1 cc 74 00 81       	mov    0x810074cc,%eax
81002561:	83 f8 ff             	cmp    $0xffffffff,%eax
81002564:	74 15                	je     8100257b <malloc_extend_top+0x66>
81002566:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002569:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100256c:	01 d0                	add    %edx,%eax
8100256e:	8d 50 ff             	lea    -0x1(%eax),%edx
81002571:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002574:	f7 d8                	neg    %eax
81002576:	21 d0                	and    %edx,%eax
81002578:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100257b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100257e:	83 ec 08             	sub    $0x8,%esp
81002581:	50                   	push   %eax
81002582:	ff 75 08             	push   0x8(%ebp)
81002585:	e8 db 1a 00 00       	call   81004065 <_sbrk_r>
8100258a:	83 c4 10             	add    $0x10,%esp
8100258d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002590:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81002594:	0f 84 0b 02 00 00    	je     810027a5 <malloc_extend_top+0x290>
8100259a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100259d:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810025a0:	73 0e                	jae    810025b0 <malloc_extend_top+0x9b>
810025a2:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
810025a7:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810025aa:	0f 85 f5 01 00 00    	jne    810027a5 <malloc_extend_top+0x290>
810025b0:	a1 c0 7c 00 81       	mov    0x81007cc0,%eax
810025b5:	89 c2                	mov    %eax,%edx
810025b7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810025ba:	01 d0                	add    %edx,%eax
810025bc:	a3 c0 7c 00 81       	mov    %eax,0x81007cc0
810025c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810025c4:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810025c7:	75 30                	jne    810025f9 <malloc_extend_top+0xe4>
810025c9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810025cc:	8d 50 ff             	lea    -0x1(%eax),%edx
810025cf:	8b 45 d8             	mov    -0x28(%ebp),%eax
810025d2:	21 d0                	and    %edx,%eax
810025d4:	85 c0                	test   %eax,%eax
810025d6:	75 21                	jne    810025f9 <malloc_extend_top+0xe4>
810025d8:	8b 55 e8             	mov    -0x18(%ebp),%edx
810025db:	8b 45 dc             	mov    -0x24(%ebp),%eax
810025de:	01 d0                	add    %edx,%eax
810025e0:	89 45 d0             	mov    %eax,-0x30(%ebp)
810025e3:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
810025e8:	8b 40 08             	mov    0x8(%eax),%eax
810025eb:	8b 55 d0             	mov    -0x30(%ebp),%edx
810025ee:	83 ca 01             	or     $0x1,%edx
810025f1:	89 50 04             	mov    %edx,0x4(%eax)
810025f4:	e9 76 01 00 00       	jmp    8100276f <malloc_extend_top+0x25a>
810025f9:	a1 cc 74 00 81       	mov    0x810074cc,%eax
810025fe:	83 f8 ff             	cmp    $0xffffffff,%eax
81002601:	75 0a                	jne    8100260d <malloc_extend_top+0xf8>
81002603:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002606:	a3 cc 74 00 81       	mov    %eax,0x810074cc
8100260b:	eb 13                	jmp    81002620 <malloc_extend_top+0x10b>
8100260d:	8b 15 c0 7c 00 81    	mov    0x81007cc0,%edx
81002613:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002616:	2b 45 d8             	sub    -0x28(%ebp),%eax
81002619:	01 d0                	add    %edx,%eax
8100261b:	a3 c0 7c 00 81       	mov    %eax,0x81007cc0
81002620:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002623:	83 c0 08             	add    $0x8,%eax
81002626:	83 e0 07             	and    $0x7,%eax
81002629:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100262c:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81002630:	74 13                	je     81002645 <malloc_extend_top+0x130>
81002632:	b8 08 00 00 00       	mov    $0x8,%eax
81002637:	2b 45 cc             	sub    -0x34(%ebp),%eax
8100263a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100263d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002640:	01 45 f4             	add    %eax,-0xc(%ebp)
81002643:	eb 07                	jmp    8100264c <malloc_extend_top+0x137>
81002645:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100264c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100264f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002652:	01 d0                	add    %edx,%eax
81002654:	89 c2                	mov    %eax,%edx
81002656:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002659:	83 e8 01             	sub    $0x1,%eax
8100265c:	21 c2                	and    %eax,%edx
8100265e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002661:	29 d0                	sub    %edx,%eax
81002663:	01 45 f0             	add    %eax,-0x10(%ebp)
81002666:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002669:	83 e8 01             	sub    $0x1,%eax
8100266c:	21 45 f0             	and    %eax,-0x10(%ebp)
8100266f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002672:	83 ec 08             	sub    $0x8,%esp
81002675:	50                   	push   %eax
81002676:	ff 75 08             	push   0x8(%ebp)
81002679:	e8 e7 19 00 00       	call   81004065 <_sbrk_r>
8100267e:	83 c4 10             	add    $0x10,%esp
81002681:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002684:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
81002688:	75 28                	jne    810026b2 <malloc_extend_top+0x19d>
8100268a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002691:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002698:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100269b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100269e:	01 d0                	add    %edx,%eax
810026a0:	89 45 ec             	mov    %eax,-0x14(%ebp)
810026a3:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810026a7:	74 09                	je     810026b2 <malloc_extend_top+0x19d>
810026a9:	8b 45 cc             	mov    -0x34(%ebp),%eax
810026ac:	83 e8 08             	sub    $0x8,%eax
810026af:	01 45 ec             	add    %eax,-0x14(%ebp)
810026b2:	a1 c0 7c 00 81       	mov    0x81007cc0,%eax
810026b7:	89 c2                	mov    %eax,%edx
810026b9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810026bc:	01 d0                	add    %edx,%eax
810026be:	a3 c0 7c 00 81       	mov    %eax,0x81007cc0
810026c3:	ba c0 70 00 81       	mov    $0x810070c0,%edx
810026c8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026cb:	89 42 08             	mov    %eax,0x8(%edx)
810026ce:	8b 45 ec             	mov    -0x14(%ebp),%eax
810026d1:	2b 45 f4             	sub    -0xc(%ebp),%eax
810026d4:	89 c2                	mov    %eax,%edx
810026d6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810026d9:	01 d0                	add    %edx,%eax
810026db:	89 45 d0             	mov    %eax,-0x30(%ebp)
810026de:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
810026e3:	8b 40 08             	mov    0x8(%eax),%eax
810026e6:	8b 55 d0             	mov    -0x30(%ebp),%edx
810026e9:	83 ca 01             	or     $0x1,%edx
810026ec:	89 50 04             	mov    %edx,0x4(%eax)
810026ef:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
810026f4:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810026f7:	74 76                	je     8100276f <malloc_extend_top+0x25a>
810026f9:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
810026fd:	77 14                	ja     81002713 <malloc_extend_top+0x1fe>
810026ff:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81002704:	8b 40 08             	mov    0x8(%eax),%eax
81002707:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
8100270e:	e9 93 00 00 00       	jmp    810027a6 <malloc_extend_top+0x291>
81002713:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002716:	83 e8 0c             	sub    $0xc,%eax
81002719:	83 e0 f8             	and    $0xfffffff8,%eax
8100271c:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100271f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002722:	8b 40 04             	mov    0x4(%eax),%eax
81002725:	83 e0 01             	and    $0x1,%eax
81002728:	0b 45 dc             	or     -0x24(%ebp),%eax
8100272b:	89 c2                	mov    %eax,%edx
8100272d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002730:	89 50 04             	mov    %edx,0x4(%eax)
81002733:	8b 55 e0             	mov    -0x20(%ebp),%edx
81002736:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002739:	01 d0                	add    %edx,%eax
8100273b:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81002742:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002745:	8d 50 04             	lea    0x4(%eax),%edx
81002748:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100274b:	01 d0                	add    %edx,%eax
8100274d:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81002754:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81002758:	76 15                	jbe    8100276f <malloc_extend_top+0x25a>
8100275a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100275d:	83 c0 08             	add    $0x8,%eax
81002760:	83 ec 08             	sub    $0x8,%esp
81002763:	50                   	push   %eax
81002764:	ff 75 08             	push   0x8(%ebp)
81002767:	e8 c5 e8 ff ff       	call   81001031 <_free_r>
8100276c:	83 c4 10             	add    $0x10,%esp
8100276f:	a1 c0 7c 00 81       	mov    0x81007cc0,%eax
81002774:	89 c2                	mov    %eax,%edx
81002776:	a1 a4 7c 00 81       	mov    0x81007ca4,%eax
8100277b:	39 c2                	cmp    %eax,%edx
8100277d:	76 0a                	jbe    81002789 <malloc_extend_top+0x274>
8100277f:	a1 c0 7c 00 81       	mov    0x81007cc0,%eax
81002784:	a3 a4 7c 00 81       	mov    %eax,0x81007ca4
81002789:	a1 c0 7c 00 81       	mov    0x81007cc0,%eax
8100278e:	89 c2                	mov    %eax,%edx
81002790:	a1 a8 7c 00 81       	mov    0x81007ca8,%eax
81002795:	39 c2                	cmp    %eax,%edx
81002797:	76 0d                	jbe    810027a6 <malloc_extend_top+0x291>
81002799:	a1 c0 7c 00 81       	mov    0x81007cc0,%eax
8100279e:	a3 a8 7c 00 81       	mov    %eax,0x81007ca8
810027a3:	eb 01                	jmp    810027a6 <malloc_extend_top+0x291>
810027a5:	90                   	nop
810027a6:	c9                   	leave  
810027a7:	c3                   	ret    

810027a8 <_malloc_r>:
810027a8:	55                   	push   %ebp
810027a9:	89 e5                	mov    %esp,%ebp
810027ab:	53                   	push   %ebx
810027ac:	83 ec 44             	sub    $0x44,%esp
810027af:	8b 45 0c             	mov    0xc(%ebp),%eax
810027b2:	83 c0 0b             	add    $0xb,%eax
810027b5:	83 f8 16             	cmp    $0x16,%eax
810027b8:	76 0b                	jbe    810027c5 <_malloc_r+0x1d>
810027ba:	8b 45 0c             	mov    0xc(%ebp),%eax
810027bd:	83 c0 0b             	add    $0xb,%eax
810027c0:	83 e0 f8             	and    $0xfffffff8,%eax
810027c3:	eb 05                	jmp    810027ca <_malloc_r+0x22>
810027c5:	b8 10 00 00 00       	mov    $0x10,%eax
810027ca:	89 45 d0             	mov    %eax,-0x30(%ebp)
810027cd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810027d0:	85 c0                	test   %eax,%eax
810027d2:	78 08                	js     810027dc <_malloc_r+0x34>
810027d4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810027d7:	3b 45 0c             	cmp    0xc(%ebp),%eax
810027da:	73 13                	jae    810027ef <_malloc_r+0x47>
810027dc:	8b 45 08             	mov    0x8(%ebp),%eax
810027df:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810027e5:	b8 00 00 00 00       	mov    $0x0,%eax
810027ea:	e9 d6 07 00 00       	jmp    81002fc5 <_malloc_r+0x81d>
810027ef:	83 ec 0c             	sub    $0xc,%esp
810027f2:	ff 75 08             	push   0x8(%ebp)
810027f5:	e8 8e 09 00 00       	call   81003188 <__malloc_lock>
810027fa:	83 c4 10             	add    $0x10,%esp
810027fd:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
81002804:	0f 87 b0 00 00 00    	ja     810028ba <_malloc_r+0x112>
8100280a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100280d:	c1 e8 03             	shr    $0x3,%eax
81002810:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002813:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002816:	83 c0 01             	add    $0x1,%eax
81002819:	01 c0                	add    %eax,%eax
8100281b:	c1 e0 02             	shl    $0x2,%eax
8100281e:	05 c0 70 00 81       	add    $0x810070c0,%eax
81002823:	83 e8 08             	sub    $0x8,%eax
81002826:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002829:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100282c:	8b 40 0c             	mov    0xc(%eax),%eax
8100282f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002832:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002835:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81002838:	75 0d                	jne    81002847 <_malloc_r+0x9f>
8100283a:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
8100283e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002841:	8b 40 0c             	mov    0xc(%eax),%eax
81002844:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002847:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100284a:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
8100284d:	74 62                	je     810028b1 <_malloc_r+0x109>
8100284f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002852:	8b 40 04             	mov    0x4(%eax),%eax
81002855:	83 e0 fc             	and    $0xfffffffc,%eax
81002858:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100285b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100285e:	8b 40 0c             	mov    0xc(%eax),%eax
81002861:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002864:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002867:	8b 40 08             	mov    0x8(%eax),%eax
8100286a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100286d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002870:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002873:	89 50 0c             	mov    %edx,0xc(%eax)
81002876:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002879:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100287c:	89 50 08             	mov    %edx,0x8(%eax)
8100287f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002882:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002885:	01 d0                	add    %edx,%eax
81002887:	8b 50 04             	mov    0x4(%eax),%edx
8100288a:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100288d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002890:	01 c8                	add    %ecx,%eax
81002892:	83 ca 01             	or     $0x1,%edx
81002895:	89 50 04             	mov    %edx,0x4(%eax)
81002898:	83 ec 0c             	sub    $0xc,%esp
8100289b:	ff 75 08             	push   0x8(%ebp)
8100289e:	e8 eb 08 00 00       	call   8100318e <__malloc_unlock>
810028a3:	83 c4 10             	add    $0x10,%esp
810028a6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810028a9:	83 c0 08             	add    $0x8,%eax
810028ac:	e9 14 07 00 00       	jmp    81002fc5 <_malloc_r+0x81d>
810028b1:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
810028b5:	e9 46 01 00 00       	jmp    81002a00 <_malloc_r+0x258>
810028ba:	8b 45 d0             	mov    -0x30(%ebp),%eax
810028bd:	c1 e8 09             	shr    $0x9,%eax
810028c0:	85 c0                	test   %eax,%eax
810028c2:	75 08                	jne    810028cc <_malloc_r+0x124>
810028c4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810028c7:	c1 e8 03             	shr    $0x3,%eax
810028ca:	eb 77                	jmp    81002943 <_malloc_r+0x19b>
810028cc:	8b 45 d0             	mov    -0x30(%ebp),%eax
810028cf:	c1 e8 09             	shr    $0x9,%eax
810028d2:	83 f8 04             	cmp    $0x4,%eax
810028d5:	77 0b                	ja     810028e2 <_malloc_r+0x13a>
810028d7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810028da:	c1 e8 06             	shr    $0x6,%eax
810028dd:	83 c0 38             	add    $0x38,%eax
810028e0:	eb 61                	jmp    81002943 <_malloc_r+0x19b>
810028e2:	8b 45 d0             	mov    -0x30(%ebp),%eax
810028e5:	c1 e8 09             	shr    $0x9,%eax
810028e8:	83 f8 14             	cmp    $0x14,%eax
810028eb:	77 0b                	ja     810028f8 <_malloc_r+0x150>
810028ed:	8b 45 d0             	mov    -0x30(%ebp),%eax
810028f0:	c1 e8 09             	shr    $0x9,%eax
810028f3:	83 c0 5b             	add    $0x5b,%eax
810028f6:	eb 4b                	jmp    81002943 <_malloc_r+0x19b>
810028f8:	8b 45 d0             	mov    -0x30(%ebp),%eax
810028fb:	c1 e8 09             	shr    $0x9,%eax
810028fe:	83 f8 54             	cmp    $0x54,%eax
81002901:	77 0b                	ja     8100290e <_malloc_r+0x166>
81002903:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002906:	c1 e8 0c             	shr    $0xc,%eax
81002909:	83 c0 6e             	add    $0x6e,%eax
8100290c:	eb 35                	jmp    81002943 <_malloc_r+0x19b>
8100290e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002911:	c1 e8 09             	shr    $0x9,%eax
81002914:	3d 54 01 00 00       	cmp    $0x154,%eax
81002919:	77 0b                	ja     81002926 <_malloc_r+0x17e>
8100291b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100291e:	c1 e8 0f             	shr    $0xf,%eax
81002921:	83 c0 77             	add    $0x77,%eax
81002924:	eb 1d                	jmp    81002943 <_malloc_r+0x19b>
81002926:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002929:	c1 e8 09             	shr    $0x9,%eax
8100292c:	3d 54 05 00 00       	cmp    $0x554,%eax
81002931:	77 0b                	ja     8100293e <_malloc_r+0x196>
81002933:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002936:	c1 e8 12             	shr    $0x12,%eax
81002939:	83 c0 7c             	add    $0x7c,%eax
8100293c:	eb 05                	jmp    81002943 <_malloc_r+0x19b>
8100293e:	b8 7e 00 00 00       	mov    $0x7e,%eax
81002943:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002946:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002949:	83 c0 01             	add    $0x1,%eax
8100294c:	01 c0                	add    %eax,%eax
8100294e:	c1 e0 02             	shl    $0x2,%eax
81002951:	05 c0 70 00 81       	add    $0x810070c0,%eax
81002956:	83 e8 08             	sub    $0x8,%eax
81002959:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100295c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100295f:	8b 40 0c             	mov    0xc(%eax),%eax
81002962:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002965:	e9 86 00 00 00       	jmp    810029f0 <_malloc_r+0x248>
8100296a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100296d:	8b 40 04             	mov    0x4(%eax),%eax
81002970:	83 e0 fc             	and    $0xfffffffc,%eax
81002973:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002976:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002979:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100297c:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100297f:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002983:	7e 06                	jle    8100298b <_malloc_r+0x1e3>
81002985:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81002989:	eb 71                	jmp    810029fc <_malloc_r+0x254>
8100298b:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8100298f:	78 56                	js     810029e7 <_malloc_r+0x23f>
81002991:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002994:	8b 40 0c             	mov    0xc(%eax),%eax
81002997:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100299a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100299d:	8b 40 08             	mov    0x8(%eax),%eax
810029a0:	89 45 dc             	mov    %eax,-0x24(%ebp)
810029a3:	8b 45 dc             	mov    -0x24(%ebp),%eax
810029a6:	8b 55 d8             	mov    -0x28(%ebp),%edx
810029a9:	89 50 0c             	mov    %edx,0xc(%eax)
810029ac:	8b 45 d8             	mov    -0x28(%ebp),%eax
810029af:	8b 55 dc             	mov    -0x24(%ebp),%edx
810029b2:	89 50 08             	mov    %edx,0x8(%eax)
810029b5:	8b 55 f4             	mov    -0xc(%ebp),%edx
810029b8:	8b 45 cc             	mov    -0x34(%ebp),%eax
810029bb:	01 d0                	add    %edx,%eax
810029bd:	8b 50 04             	mov    0x4(%eax),%edx
810029c0:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810029c3:	8b 45 cc             	mov    -0x34(%ebp),%eax
810029c6:	01 c8                	add    %ecx,%eax
810029c8:	83 ca 01             	or     $0x1,%edx
810029cb:	89 50 04             	mov    %edx,0x4(%eax)
810029ce:	83 ec 0c             	sub    $0xc,%esp
810029d1:	ff 75 08             	push   0x8(%ebp)
810029d4:	e8 b5 07 00 00       	call   8100318e <__malloc_unlock>
810029d9:	83 c4 10             	add    $0x10,%esp
810029dc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810029df:	83 c0 08             	add    $0x8,%eax
810029e2:	e9 de 05 00 00       	jmp    81002fc5 <_malloc_r+0x81d>
810029e7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810029ea:	8b 40 0c             	mov    0xc(%eax),%eax
810029ed:	89 45 f4             	mov    %eax,-0xc(%ebp)
810029f0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810029f3:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810029f6:	0f 85 6e ff ff ff    	jne    8100296a <_malloc_r+0x1c2>
810029fc:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81002a00:	b8 c8 70 00 81       	mov    $0x810070c8,%eax
81002a05:	8b 40 08             	mov    0x8(%eax),%eax
81002a08:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002a0b:	b8 c8 70 00 81       	mov    $0x810070c8,%eax
81002a10:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81002a13:	0f 84 9c 02 00 00    	je     81002cb5 <_malloc_r+0x50d>
81002a19:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a1c:	8b 40 04             	mov    0x4(%eax),%eax
81002a1f:	83 e0 fc             	and    $0xfffffffc,%eax
81002a22:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002a25:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002a28:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002a2b:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002a2e:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002a32:	7e 7a                	jle    81002aae <_malloc_r+0x306>
81002a34:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002a37:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a3a:	01 d0                	add    %edx,%eax
81002a3c:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81002a3f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a42:	83 c8 01             	or     $0x1,%eax
81002a45:	89 c2                	mov    %eax,%edx
81002a47:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a4a:	89 50 04             	mov    %edx,0x4(%eax)
81002a4d:	b8 c8 70 00 81       	mov    $0x810070c8,%eax
81002a52:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81002a55:	89 50 0c             	mov    %edx,0xc(%eax)
81002a58:	ba c8 70 00 81       	mov    $0x810070c8,%edx
81002a5d:	8b 40 0c             	mov    0xc(%eax),%eax
81002a60:	89 42 08             	mov    %eax,0x8(%edx)
81002a63:	ba c8 70 00 81       	mov    $0x810070c8,%edx
81002a68:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002a6b:	89 50 0c             	mov    %edx,0xc(%eax)
81002a6e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002a71:	8b 50 0c             	mov    0xc(%eax),%edx
81002a74:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002a77:	89 50 08             	mov    %edx,0x8(%eax)
81002a7a:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002a7d:	83 c8 01             	or     $0x1,%eax
81002a80:	89 c2                	mov    %eax,%edx
81002a82:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002a85:	89 50 04             	mov    %edx,0x4(%eax)
81002a88:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002a8b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002a8e:	01 c2                	add    %eax,%edx
81002a90:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002a93:	89 02                	mov    %eax,(%edx)
81002a95:	83 ec 0c             	sub    $0xc,%esp
81002a98:	ff 75 08             	push   0x8(%ebp)
81002a9b:	e8 ee 06 00 00       	call   8100318e <__malloc_unlock>
81002aa0:	83 c4 10             	add    $0x10,%esp
81002aa3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002aa6:	83 c0 08             	add    $0x8,%eax
81002aa9:	e9 17 05 00 00       	jmp    81002fc5 <_malloc_r+0x81d>
81002aae:	b8 c8 70 00 81       	mov    $0x810070c8,%eax
81002ab3:	ba c8 70 00 81       	mov    $0x810070c8,%edx
81002ab8:	89 50 0c             	mov    %edx,0xc(%eax)
81002abb:	ba c8 70 00 81       	mov    $0x810070c8,%edx
81002ac0:	8b 40 0c             	mov    0xc(%eax),%eax
81002ac3:	89 42 08             	mov    %eax,0x8(%edx)
81002ac6:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002aca:	78 32                	js     81002afe <_malloc_r+0x356>
81002acc:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002acf:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002ad2:	01 d0                	add    %edx,%eax
81002ad4:	8b 50 04             	mov    0x4(%eax),%edx
81002ad7:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002ada:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002add:	01 c8                	add    %ecx,%eax
81002adf:	83 ca 01             	or     $0x1,%edx
81002ae2:	89 50 04             	mov    %edx,0x4(%eax)
81002ae5:	83 ec 0c             	sub    $0xc,%esp
81002ae8:	ff 75 08             	push   0x8(%ebp)
81002aeb:	e8 9e 06 00 00       	call   8100318e <__malloc_unlock>
81002af0:	83 c4 10             	add    $0x10,%esp
81002af3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002af6:	83 c0 08             	add    $0x8,%eax
81002af9:	e9 c7 04 00 00       	jmp    81002fc5 <_malloc_r+0x81d>
81002afe:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
81002b05:	77 7f                	ja     81002b86 <_malloc_r+0x3de>
81002b07:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002b0a:	c1 e8 03             	shr    $0x3,%eax
81002b0d:	89 45 c8             	mov    %eax,-0x38(%ebp)
81002b10:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81002b15:	8b 58 04             	mov    0x4(%eax),%ebx
81002b18:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002b1b:	8d 50 03             	lea    0x3(%eax),%edx
81002b1e:	85 c0                	test   %eax,%eax
81002b20:	0f 48 c2             	cmovs  %edx,%eax
81002b23:	c1 f8 02             	sar    $0x2,%eax
81002b26:	ba 01 00 00 00       	mov    $0x1,%edx
81002b2b:	89 c1                	mov    %eax,%ecx
81002b2d:	d3 e2                	shl    %cl,%edx
81002b2f:	89 d0                	mov    %edx,%eax
81002b31:	ba c0 70 00 81       	mov    $0x810070c0,%edx
81002b36:	09 d8                	or     %ebx,%eax
81002b38:	89 42 04             	mov    %eax,0x4(%edx)
81002b3b:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002b3e:	83 c0 01             	add    $0x1,%eax
81002b41:	01 c0                	add    %eax,%eax
81002b43:	c1 e0 02             	shl    $0x2,%eax
81002b46:	05 c0 70 00 81       	add    $0x810070c0,%eax
81002b4b:	83 e8 08             	sub    $0x8,%eax
81002b4e:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002b51:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b54:	8b 40 08             	mov    0x8(%eax),%eax
81002b57:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002b5a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b5d:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002b60:	89 50 0c             	mov    %edx,0xc(%eax)
81002b63:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b66:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002b69:	89 50 08             	mov    %edx,0x8(%eax)
81002b6c:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b6f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002b72:	89 50 08             	mov    %edx,0x8(%eax)
81002b75:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b78:	8b 50 08             	mov    0x8(%eax),%edx
81002b7b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002b7e:	89 50 0c             	mov    %edx,0xc(%eax)
81002b81:	e9 2f 01 00 00       	jmp    81002cb5 <_malloc_r+0x50d>
81002b86:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002b89:	c1 e8 09             	shr    $0x9,%eax
81002b8c:	85 c0                	test   %eax,%eax
81002b8e:	75 08                	jne    81002b98 <_malloc_r+0x3f0>
81002b90:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002b93:	c1 e8 03             	shr    $0x3,%eax
81002b96:	eb 77                	jmp    81002c0f <_malloc_r+0x467>
81002b98:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002b9b:	c1 e8 09             	shr    $0x9,%eax
81002b9e:	83 f8 04             	cmp    $0x4,%eax
81002ba1:	77 0b                	ja     81002bae <_malloc_r+0x406>
81002ba3:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002ba6:	c1 e8 06             	shr    $0x6,%eax
81002ba9:	83 c0 38             	add    $0x38,%eax
81002bac:	eb 61                	jmp    81002c0f <_malloc_r+0x467>
81002bae:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002bb1:	c1 e8 09             	shr    $0x9,%eax
81002bb4:	83 f8 14             	cmp    $0x14,%eax
81002bb7:	77 0b                	ja     81002bc4 <_malloc_r+0x41c>
81002bb9:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002bbc:	c1 e8 09             	shr    $0x9,%eax
81002bbf:	83 c0 5b             	add    $0x5b,%eax
81002bc2:	eb 4b                	jmp    81002c0f <_malloc_r+0x467>
81002bc4:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002bc7:	c1 e8 09             	shr    $0x9,%eax
81002bca:	83 f8 54             	cmp    $0x54,%eax
81002bcd:	77 0b                	ja     81002bda <_malloc_r+0x432>
81002bcf:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002bd2:	c1 e8 0c             	shr    $0xc,%eax
81002bd5:	83 c0 6e             	add    $0x6e,%eax
81002bd8:	eb 35                	jmp    81002c0f <_malloc_r+0x467>
81002bda:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002bdd:	c1 e8 09             	shr    $0x9,%eax
81002be0:	3d 54 01 00 00       	cmp    $0x154,%eax
81002be5:	77 0b                	ja     81002bf2 <_malloc_r+0x44a>
81002be7:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002bea:	c1 e8 0f             	shr    $0xf,%eax
81002bed:	83 c0 77             	add    $0x77,%eax
81002bf0:	eb 1d                	jmp    81002c0f <_malloc_r+0x467>
81002bf2:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002bf5:	c1 e8 09             	shr    $0x9,%eax
81002bf8:	3d 54 05 00 00       	cmp    $0x554,%eax
81002bfd:	77 0b                	ja     81002c0a <_malloc_r+0x462>
81002bff:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c02:	c1 e8 12             	shr    $0x12,%eax
81002c05:	83 c0 7c             	add    $0x7c,%eax
81002c08:	eb 05                	jmp    81002c0f <_malloc_r+0x467>
81002c0a:	b8 7e 00 00 00       	mov    $0x7e,%eax
81002c0f:	89 45 c8             	mov    %eax,-0x38(%ebp)
81002c12:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002c15:	83 c0 01             	add    $0x1,%eax
81002c18:	01 c0                	add    %eax,%eax
81002c1a:	c1 e0 02             	shl    $0x2,%eax
81002c1d:	05 c0 70 00 81       	add    $0x810070c0,%eax
81002c22:	83 e8 08             	sub    $0x8,%eax
81002c25:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002c28:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c2b:	8b 40 08             	mov    0x8(%eax),%eax
81002c2e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c31:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002c34:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81002c37:	75 36                	jne    81002c6f <_malloc_r+0x4c7>
81002c39:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81002c3e:	8b 58 04             	mov    0x4(%eax),%ebx
81002c41:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002c44:	8d 50 03             	lea    0x3(%eax),%edx
81002c47:	85 c0                	test   %eax,%eax
81002c49:	0f 48 c2             	cmovs  %edx,%eax
81002c4c:	c1 f8 02             	sar    $0x2,%eax
81002c4f:	ba 01 00 00 00       	mov    $0x1,%edx
81002c54:	89 c1                	mov    %eax,%ecx
81002c56:	d3 e2                	shl    %cl,%edx
81002c58:	89 d0                	mov    %edx,%eax
81002c5a:	ba c0 70 00 81       	mov    $0x810070c0,%edx
81002c5f:	09 d8                	or     %ebx,%eax
81002c61:	89 42 04             	mov    %eax,0x4(%edx)
81002c64:	eb 28                	jmp    81002c8e <_malloc_r+0x4e6>
81002c66:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002c69:	8b 40 08             	mov    0x8(%eax),%eax
81002c6c:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c6f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002c72:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81002c75:	74 0e                	je     81002c85 <_malloc_r+0x4dd>
81002c77:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002c7a:	8b 40 04             	mov    0x4(%eax),%eax
81002c7d:	83 e0 fc             	and    $0xfffffffc,%eax
81002c80:	39 45 cc             	cmp    %eax,-0x34(%ebp)
81002c83:	72 e1                	jb     81002c66 <_malloc_r+0x4be>
81002c85:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002c88:	8b 40 0c             	mov    0xc(%eax),%eax
81002c8b:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002c8e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c91:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002c94:	89 50 0c             	mov    %edx,0xc(%eax)
81002c97:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c9a:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c9d:	89 50 08             	mov    %edx,0x8(%eax)
81002ca0:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002ca3:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002ca6:	89 50 08             	mov    %edx,0x8(%eax)
81002ca9:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002cac:	8b 50 08             	mov    0x8(%eax),%edx
81002caf:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002cb2:	89 50 0c             	mov    %edx,0xc(%eax)
81002cb5:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002cb8:	8d 50 03             	lea    0x3(%eax),%edx
81002cbb:	85 c0                	test   %eax,%eax
81002cbd:	0f 48 c2             	cmovs  %edx,%eax
81002cc0:	c1 f8 02             	sar    $0x2,%eax
81002cc3:	ba 01 00 00 00       	mov    $0x1,%edx
81002cc8:	89 c1                	mov    %eax,%ecx
81002cca:	d3 e2                	shl    %cl,%edx
81002ccc:	89 d0                	mov    %edx,%eax
81002cce:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002cd1:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81002cd6:	8b 40 04             	mov    0x4(%eax),%eax
81002cd9:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81002cdc:	0f 87 13 02 00 00    	ja     81002ef5 <_malloc_r+0x74d>
81002ce2:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81002ce7:	8b 40 04             	mov    0x4(%eax),%eax
81002cea:	23 45 e4             	and    -0x1c(%ebp),%eax
81002ced:	85 c0                	test   %eax,%eax
81002cef:	75 27                	jne    81002d18 <_malloc_r+0x570>
81002cf1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002cf4:	83 e0 fc             	and    $0xfffffffc,%eax
81002cf7:	83 c0 04             	add    $0x4,%eax
81002cfa:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002cfd:	d1 65 e4             	shll   -0x1c(%ebp)
81002d00:	eb 07                	jmp    81002d09 <_malloc_r+0x561>
81002d02:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81002d06:	d1 65 e4             	shll   -0x1c(%ebp)
81002d09:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81002d0e:	8b 40 04             	mov    0x4(%eax),%eax
81002d11:	23 45 e4             	and    -0x1c(%ebp),%eax
81002d14:	85 c0                	test   %eax,%eax
81002d16:	74 ea                	je     81002d02 <_malloc_r+0x55a>
81002d18:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002d1b:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002d1e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002d21:	83 c0 01             	add    $0x1,%eax
81002d24:	01 c0                	add    %eax,%eax
81002d26:	c1 e0 02             	shl    $0x2,%eax
81002d29:	05 c0 70 00 81       	add    $0x810070c0,%eax
81002d2e:	83 e8 08             	sub    $0x8,%eax
81002d31:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002d34:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002d37:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d3a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002d3d:	8b 40 0c             	mov    0xc(%eax),%eax
81002d40:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002d43:	e9 22 01 00 00       	jmp    81002e6a <_malloc_r+0x6c2>
81002d48:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d4b:	8b 40 04             	mov    0x4(%eax),%eax
81002d4e:	83 e0 fc             	and    $0xfffffffc,%eax
81002d51:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002d54:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d57:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002d5a:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002d5d:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002d61:	0f 8e 9e 00 00 00    	jle    81002e05 <_malloc_r+0x65d>
81002d67:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002d6a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d6d:	01 d0                	add    %edx,%eax
81002d6f:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81002d72:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d75:	83 c8 01             	or     $0x1,%eax
81002d78:	89 c2                	mov    %eax,%edx
81002d7a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d7d:	89 50 04             	mov    %edx,0x4(%eax)
81002d80:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d83:	8b 40 0c             	mov    0xc(%eax),%eax
81002d86:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002d89:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d8c:	8b 40 08             	mov    0x8(%eax),%eax
81002d8f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002d92:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002d95:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002d98:	89 50 0c             	mov    %edx,0xc(%eax)
81002d9b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002d9e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002da1:	89 50 08             	mov    %edx,0x8(%eax)
81002da4:	b8 c8 70 00 81       	mov    $0x810070c8,%eax
81002da9:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81002dac:	89 50 0c             	mov    %edx,0xc(%eax)
81002daf:	ba c8 70 00 81       	mov    $0x810070c8,%edx
81002db4:	8b 40 0c             	mov    0xc(%eax),%eax
81002db7:	89 42 08             	mov    %eax,0x8(%edx)
81002dba:	ba c8 70 00 81       	mov    $0x810070c8,%edx
81002dbf:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002dc2:	89 50 0c             	mov    %edx,0xc(%eax)
81002dc5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002dc8:	8b 50 0c             	mov    0xc(%eax),%edx
81002dcb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002dce:	89 50 08             	mov    %edx,0x8(%eax)
81002dd1:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002dd4:	83 c8 01             	or     $0x1,%eax
81002dd7:	89 c2                	mov    %eax,%edx
81002dd9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002ddc:	89 50 04             	mov    %edx,0x4(%eax)
81002ddf:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002de2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002de5:	01 c2                	add    %eax,%edx
81002de7:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002dea:	89 02                	mov    %eax,(%edx)
81002dec:	83 ec 0c             	sub    $0xc,%esp
81002def:	ff 75 08             	push   0x8(%ebp)
81002df2:	e8 97 03 00 00       	call   8100318e <__malloc_unlock>
81002df7:	83 c4 10             	add    $0x10,%esp
81002dfa:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002dfd:	83 c0 08             	add    $0x8,%eax
81002e00:	e9 c0 01 00 00       	jmp    81002fc5 <_malloc_r+0x81d>
81002e05:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002e09:	78 56                	js     81002e61 <_malloc_r+0x6b9>
81002e0b:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002e0e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002e11:	01 d0                	add    %edx,%eax
81002e13:	8b 50 04             	mov    0x4(%eax),%edx
81002e16:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002e19:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002e1c:	01 c8                	add    %ecx,%eax
81002e1e:	83 ca 01             	or     $0x1,%edx
81002e21:	89 50 04             	mov    %edx,0x4(%eax)
81002e24:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e27:	8b 40 0c             	mov    0xc(%eax),%eax
81002e2a:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002e2d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e30:	8b 40 08             	mov    0x8(%eax),%eax
81002e33:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002e36:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002e39:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002e3c:	89 50 0c             	mov    %edx,0xc(%eax)
81002e3f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002e42:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002e45:	89 50 08             	mov    %edx,0x8(%eax)
81002e48:	83 ec 0c             	sub    $0xc,%esp
81002e4b:	ff 75 08             	push   0x8(%ebp)
81002e4e:	e8 3b 03 00 00       	call   8100318e <__malloc_unlock>
81002e53:	83 c4 10             	add    $0x10,%esp
81002e56:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e59:	83 c0 08             	add    $0x8,%eax
81002e5c:	e9 64 01 00 00       	jmp    81002fc5 <_malloc_r+0x81d>
81002e61:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e64:	8b 40 0c             	mov    0xc(%eax),%eax
81002e67:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002e6a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e6d:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81002e70:	0f 85 d2 fe ff ff    	jne    81002d48 <_malloc_r+0x5a0>
81002e76:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81002e7a:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81002e7e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002e81:	83 e0 03             	and    $0x3,%eax
81002e84:	85 c0                	test   %eax,%eax
81002e86:	0f 85 ae fe ff ff    	jne    81002d3a <_malloc_r+0x592>
81002e8c:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002e8f:	83 e0 03             	and    $0x3,%eax
81002e92:	85 c0                	test   %eax,%eax
81002e94:	75 19                	jne    81002eaf <_malloc_r+0x707>
81002e96:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81002e9b:	8b 48 04             	mov    0x4(%eax),%ecx
81002e9e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002ea1:	f7 d0                	not    %eax
81002ea3:	ba c0 70 00 81       	mov    $0x810070c0,%edx
81002ea8:	21 c8                	and    %ecx,%eax
81002eaa:	89 42 04             	mov    %eax,0x4(%edx)
81002ead:	eb 13                	jmp    81002ec2 <_malloc_r+0x71a>
81002eaf:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
81002eb3:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
81002eb7:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002eba:	8b 40 08             	mov    0x8(%eax),%eax
81002ebd:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
81002ec0:	74 ca                	je     81002e8c <_malloc_r+0x6e4>
81002ec2:	d1 65 e4             	shll   -0x1c(%ebp)
81002ec5:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81002eca:	8b 40 04             	mov    0x4(%eax),%eax
81002ecd:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81002ed0:	77 23                	ja     81002ef5 <_malloc_r+0x74d>
81002ed2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002ed6:	74 1d                	je     81002ef5 <_malloc_r+0x74d>
81002ed8:	eb 07                	jmp    81002ee1 <_malloc_r+0x739>
81002eda:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81002ede:	d1 65 e4             	shll   -0x1c(%ebp)
81002ee1:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81002ee6:	8b 40 04             	mov    0x4(%eax),%eax
81002ee9:	23 45 e4             	and    -0x1c(%ebp),%eax
81002eec:	85 c0                	test   %eax,%eax
81002eee:	74 ea                	je     81002eda <_malloc_r+0x732>
81002ef0:	e9 23 fe ff ff       	jmp    81002d18 <_malloc_r+0x570>
81002ef5:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81002efa:	8b 40 08             	mov    0x8(%eax),%eax
81002efd:	8b 40 04             	mov    0x4(%eax),%eax
81002f00:	83 e0 fc             	and    $0xfffffffc,%eax
81002f03:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002f06:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002f09:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81002f0e:	8b 40 08             	mov    0x8(%eax),%eax
81002f11:	8b 40 04             	mov    0x4(%eax),%eax
81002f14:	83 e0 fc             	and    $0xfffffffc,%eax
81002f17:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81002f1a:	77 06                	ja     81002f22 <_malloc_r+0x77a>
81002f1c:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002f20:	7f 53                	jg     81002f75 <_malloc_r+0x7cd>
81002f22:	83 ec 08             	sub    $0x8,%esp
81002f25:	ff 75 d0             	push   -0x30(%ebp)
81002f28:	ff 75 08             	push   0x8(%ebp)
81002f2b:	e8 e5 f5 ff ff       	call   81002515 <malloc_extend_top>
81002f30:	83 c4 10             	add    $0x10,%esp
81002f33:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81002f38:	8b 40 08             	mov    0x8(%eax),%eax
81002f3b:	8b 40 04             	mov    0x4(%eax),%eax
81002f3e:	83 e0 fc             	and    $0xfffffffc,%eax
81002f41:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002f44:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002f47:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81002f4c:	8b 40 08             	mov    0x8(%eax),%eax
81002f4f:	8b 40 04             	mov    0x4(%eax),%eax
81002f52:	83 e0 fc             	and    $0xfffffffc,%eax
81002f55:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81002f58:	77 06                	ja     81002f60 <_malloc_r+0x7b8>
81002f5a:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002f5e:	7f 15                	jg     81002f75 <_malloc_r+0x7cd>
81002f60:	83 ec 0c             	sub    $0xc,%esp
81002f63:	ff 75 08             	push   0x8(%ebp)
81002f66:	e8 23 02 00 00       	call   8100318e <__malloc_unlock>
81002f6b:	83 c4 10             	add    $0x10,%esp
81002f6e:	b8 00 00 00 00       	mov    $0x0,%eax
81002f73:	eb 50                	jmp    81002fc5 <_malloc_r+0x81d>
81002f75:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81002f7a:	8b 40 08             	mov    0x8(%eax),%eax
81002f7d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002f80:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002f83:	83 c8 01             	or     $0x1,%eax
81002f86:	89 c2                	mov    %eax,%edx
81002f88:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f8b:	89 50 04             	mov    %edx,0x4(%eax)
81002f8e:	ba c0 70 00 81       	mov    $0x810070c0,%edx
81002f93:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002f96:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002f99:	01 c8                	add    %ecx,%eax
81002f9b:	89 42 08             	mov    %eax,0x8(%edx)
81002f9e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002fa1:	83 c8 01             	or     $0x1,%eax
81002fa4:	89 c2                	mov    %eax,%edx
81002fa6:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81002fab:	8b 40 08             	mov    0x8(%eax),%eax
81002fae:	89 50 04             	mov    %edx,0x4(%eax)
81002fb1:	83 ec 0c             	sub    $0xc,%esp
81002fb4:	ff 75 08             	push   0x8(%ebp)
81002fb7:	e8 d2 01 00 00       	call   8100318e <__malloc_unlock>
81002fbc:	83 c4 10             	add    $0x10,%esp
81002fbf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fc2:	83 c0 08             	add    $0x8,%eax
81002fc5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002fc8:	c9                   	leave  
81002fc9:	c3                   	ret    
81002fca:	66 90                	xchg   %ax,%ax
81002fcc:	66 90                	xchg   %ax,%ax
81002fce:	66 90                	xchg   %ax,%ax

81002fd0 <memchr>:
81002fd0:	55                   	push   %ebp
81002fd1:	89 e5                	mov    %esp,%ebp
81002fd3:	57                   	push   %edi
81002fd4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81002fd8:	8b 4d 10             	mov    0x10(%ebp),%ecx
81002fdb:	8b 7d 08             	mov    0x8(%ebp),%edi
81002fde:	31 d2                	xor    %edx,%edx
81002fe0:	85 c9                	test   %ecx,%ecx
81002fe2:	74 79                	je     8100305d <L20>
81002fe4:	f7 c7 03 00 00 00    	test   $0x3,%edi
81002fea:	74 28                	je     81003014 <L5>
81002fec:	3a 07                	cmp    (%edi),%al
81002fee:	74 6a                	je     8100305a <L15>
81002ff0:	47                   	inc    %edi
81002ff1:	49                   	dec    %ecx
81002ff2:	74 69                	je     8100305d <L20>
81002ff4:	f7 c7 03 00 00 00    	test   $0x3,%edi
81002ffa:	74 18                	je     81003014 <L5>
81002ffc:	3a 07                	cmp    (%edi),%al
81002ffe:	74 5a                	je     8100305a <L15>
81003000:	47                   	inc    %edi
81003001:	49                   	dec    %ecx
81003002:	74 59                	je     8100305d <L20>
81003004:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100300a:	74 08                	je     81003014 <L5>
8100300c:	3a 07                	cmp    (%edi),%al
8100300e:	74 4a                	je     8100305a <L15>
81003010:	47                   	inc    %edi
81003011:	49                   	dec    %ecx
81003012:	74 49                	je     8100305d <L20>

81003014 <L5>:
81003014:	88 c4                	mov    %al,%ah
81003016:	89 c2                	mov    %eax,%edx
81003018:	c1 e2 10             	shl    $0x10,%edx
8100301b:	09 d0                	or     %edx,%eax
8100301d:	53                   	push   %ebx
8100301e:	66 90                	xchg   %ax,%ax

81003020 <L8>:
81003020:	83 e9 04             	sub    $0x4,%ecx
81003023:	72 1c                	jb     81003041 <L9>
81003025:	8b 17                	mov    (%edi),%edx
81003027:	83 c7 04             	add    $0x4,%edi
8100302a:	31 c2                	xor    %eax,%edx
8100302c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81003032:	f7 d2                	not    %edx
81003034:	21 d3                	and    %edx,%ebx
81003036:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
8100303c:	74 e2                	je     81003020 <L8>
8100303e:	83 ef 04             	sub    $0x4,%edi

81003041 <L9>:
81003041:	5b                   	pop    %ebx
81003042:	31 d2                	xor    %edx,%edx
81003044:	83 c1 04             	add    $0x4,%ecx
81003047:	74 14                	je     8100305d <L20>
81003049:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81003050 <L10>:
81003050:	3a 07                	cmp    (%edi),%al
81003052:	74 06                	je     8100305a <L15>
81003054:	47                   	inc    %edi
81003055:	49                   	dec    %ecx
81003056:	75 f8                	jne    81003050 <L10>
81003058:	31 ff                	xor    %edi,%edi

8100305a <L15>:
8100305a:	4a                   	dec    %edx
8100305b:	21 fa                	and    %edi,%edx

8100305d <L20>:
8100305d:	89 d0                	mov    %edx,%eax
8100305f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81003062:	5f                   	pop    %edi
81003063:	c9                   	leave  
81003064:	c3                   	ret    

81003065 <memcmp>:
81003065:	55                   	push   %ebp
81003066:	89 e5                	mov    %esp,%ebp
81003068:	83 ec 10             	sub    $0x10,%esp
8100306b:	53                   	push   %ebx
8100306c:	57                   	push   %edi
8100306d:	56                   	push   %esi
8100306e:	8b 7d 08             	mov    0x8(%ebp),%edi
81003071:	8b 75 0c             	mov    0xc(%ebp),%esi
81003074:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003077:	fc                   	cld    
81003078:	31 c0                	xor    %eax,%eax
8100307a:	85 c9                	test   %ecx,%ecx
8100307c:	74 31                	je     810030af <L4>
8100307e:	89 f8                	mov    %edi,%eax
81003080:	09 f0                	or     %esi,%eax
81003082:	a8 03                	test   $0x3,%al
81003084:	75 1b                	jne    810030a1 <BYTECMP>
81003086:	89 cb                	mov    %ecx,%ebx
81003088:	c1 e9 02             	shr    $0x2,%ecx
8100308b:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
8100308d:	74 0d                	je     8100309c <L5>
8100308f:	83 ee 04             	sub    $0x4,%esi
81003092:	83 ef 04             	sub    $0x4,%edi
81003095:	b9 04 00 00 00       	mov    $0x4,%ecx
8100309a:	eb 05                	jmp    810030a1 <BYTECMP>

8100309c <L5>:
8100309c:	83 e3 03             	and    $0x3,%ebx
8100309f:	89 d9                	mov    %ebx,%ecx

810030a1 <BYTECMP>:
810030a1:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

810030a3 <L3>:
810030a3:	31 d2                	xor    %edx,%edx
810030a5:	8a 56 ff             	mov    -0x1(%esi),%dl
810030a8:	31 c0                	xor    %eax,%eax
810030aa:	8a 47 ff             	mov    -0x1(%edi),%al
810030ad:	29 d0                	sub    %edx,%eax

810030af <L4>:
810030af:	8d 65 e4             	lea    -0x1c(%ebp),%esp
810030b2:	5e                   	pop    %esi
810030b3:	5f                   	pop    %edi
810030b4:	5b                   	pop    %ebx
810030b5:	c9                   	leave  
810030b6:	c3                   	ret    
810030b7:	90                   	nop

810030b8 <memcpy>:
810030b8:	55                   	push   %ebp
810030b9:	89 e5                	mov    %esp,%ebp
810030bb:	56                   	push   %esi
810030bc:	57                   	push   %edi
810030bd:	53                   	push   %ebx
810030be:	8b 7d 08             	mov    0x8(%ebp),%edi
810030c1:	8b 4d 10             	mov    0x10(%ebp),%ecx
810030c4:	8b 75 0c             	mov    0xc(%ebp),%esi
810030c7:	fc                   	cld    
810030c8:	83 f9 08             	cmp    $0x8,%ecx
810030cb:	76 26                	jbe    810030f3 <memcpy+0x3b>
810030cd:	89 fa                	mov    %edi,%edx
810030cf:	89 cb                	mov    %ecx,%ebx
810030d1:	83 e2 03             	and    $0x3,%edx
810030d4:	74 10                	je     810030e6 <memcpy+0x2e>
810030d6:	b9 04 00 00 00       	mov    $0x4,%ecx
810030db:	29 d1                	sub    %edx,%ecx
810030dd:	83 e1 03             	and    $0x3,%ecx
810030e0:	29 cb                	sub    %ecx,%ebx
810030e2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810030e4:	89 d9                	mov    %ebx,%ecx
810030e6:	c1 e9 02             	shr    $0x2,%ecx
810030e9:	8d 76 00             	lea    0x0(%esi),%esi
810030ec:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
810030ee:	89 d9                	mov    %ebx,%ecx
810030f0:	83 e1 03             	and    $0x3,%ecx
810030f3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810030f5:	8b 45 08             	mov    0x8(%ebp),%eax
810030f8:	8d 65 f4             	lea    -0xc(%ebp),%esp
810030fb:	5b                   	pop    %ebx
810030fc:	5f                   	pop    %edi
810030fd:	5e                   	pop    %esi
810030fe:	c9                   	leave  
810030ff:	c3                   	ret    

81003100 <memset>:
81003100:	55                   	push   %ebp
81003101:	89 e5                	mov    %esp,%ebp
81003103:	57                   	push   %edi
81003104:	8b 7d 08             	mov    0x8(%ebp),%edi
81003107:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
8100310b:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100310e:	fc                   	cld    
8100310f:	83 f9 10             	cmp    $0x10,%ecx
81003112:	76 69                	jbe    8100317d <memset+0x7d>
81003114:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100311a:	74 4c                	je     81003168 <memset+0x68>
8100311c:	88 07                	mov    %al,(%edi)
8100311e:	47                   	inc    %edi
8100311f:	49                   	dec    %ecx
81003120:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003126:	74 40                	je     81003168 <memset+0x68>
81003128:	88 07                	mov    %al,(%edi)
8100312a:	47                   	inc    %edi
8100312b:	49                   	dec    %ecx
8100312c:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003132:	74 34                	je     81003168 <memset+0x68>
81003134:	88 07                	mov    %al,(%edi)
81003136:	47                   	inc    %edi
81003137:	49                   	dec    %ecx
81003138:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100313e:	74 28                	je     81003168 <memset+0x68>
81003140:	88 07                	mov    %al,(%edi)
81003142:	47                   	inc    %edi
81003143:	49                   	dec    %ecx
81003144:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100314a:	74 1c                	je     81003168 <memset+0x68>
8100314c:	88 07                	mov    %al,(%edi)
8100314e:	47                   	inc    %edi
8100314f:	49                   	dec    %ecx
81003150:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003156:	74 10                	je     81003168 <memset+0x68>
81003158:	88 07                	mov    %al,(%edi)
8100315a:	47                   	inc    %edi
8100315b:	49                   	dec    %ecx
8100315c:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003162:	74 04                	je     81003168 <memset+0x68>
81003164:	88 07                	mov    %al,(%edi)
81003166:	47                   	inc    %edi
81003167:	49                   	dec    %ecx
81003168:	88 c4                	mov    %al,%ah
8100316a:	89 c2                	mov    %eax,%edx
8100316c:	c1 e2 10             	shl    $0x10,%edx
8100316f:	09 d0                	or     %edx,%eax
81003171:	89 ca                	mov    %ecx,%edx
81003173:	c1 e9 02             	shr    $0x2,%ecx
81003176:	83 e2 03             	and    $0x3,%edx
81003179:	f3 ab                	rep stos %eax,%es:(%edi)
8100317b:	89 d1                	mov    %edx,%ecx
8100317d:	f3 aa                	rep stos %al,%es:(%edi)
8100317f:	8b 45 08             	mov    0x8(%ebp),%eax
81003182:	8d 65 fc             	lea    -0x4(%ebp),%esp
81003185:	5f                   	pop    %edi
81003186:	c9                   	leave  
81003187:	c3                   	ret    

81003188 <__malloc_lock>:
81003188:	55                   	push   %ebp
81003189:	89 e5                	mov    %esp,%ebp
8100318b:	90                   	nop
8100318c:	5d                   	pop    %ebp
8100318d:	c3                   	ret    

8100318e <__malloc_unlock>:
8100318e:	55                   	push   %ebp
8100318f:	89 e5                	mov    %esp,%ebp
81003191:	90                   	nop
81003192:	5d                   	pop    %ebp
81003193:	c3                   	ret    

81003194 <__sprint_r>:
81003194:	55                   	push   %ebp
81003195:	89 e5                	mov    %esp,%ebp
81003197:	56                   	push   %esi
81003198:	53                   	push   %ebx
81003199:	83 ec 10             	sub    $0x10,%esp
8100319c:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100319f:	be 00 00 00 00       	mov    $0x0,%esi
810031a4:	8b 43 08             	mov    0x8(%ebx),%eax
810031a7:	85 c0                	test   %eax,%eax
810031a9:	75 11                	jne    810031bc <__sprint_r+0x28>
810031ab:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810031b2:	b8 00 00 00 00       	mov    $0x0,%eax
810031b7:	e9 ad 00 00 00       	jmp    81003269 <__sprint_r+0xd5>
810031bc:	8b 45 0c             	mov    0xc(%ebp),%eax
810031bf:	8b 40 64             	mov    0x64(%eax),%eax
810031c2:	25 00 20 00 00       	and    $0x2000,%eax
810031c7:	85 c0                	test   %eax,%eax
810031c9:	74 7a                	je     81003245 <__sprint_r+0xb1>
810031cb:	8b 03                	mov    (%ebx),%eax
810031cd:	89 45 f4             	mov    %eax,-0xc(%ebp)
810031d0:	eb 6a                	jmp    8100323c <__sprint_r+0xa8>
810031d2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810031d5:	8b 00                	mov    (%eax),%eax
810031d7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810031da:	8b 45 f4             	mov    -0xc(%ebp),%eax
810031dd:	8b 40 04             	mov    0x4(%eax),%eax
810031e0:	c1 e8 02             	shr    $0x2,%eax
810031e3:	89 45 e8             	mov    %eax,-0x18(%ebp)
810031e6:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810031ed:	eb 33                	jmp    81003222 <__sprint_r+0x8e>
810031ef:	8b 45 f0             	mov    -0x10(%ebp),%eax
810031f2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810031f9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810031fc:	01 d0                	add    %edx,%eax
810031fe:	8b 00                	mov    (%eax),%eax
81003200:	83 ec 04             	sub    $0x4,%esp
81003203:	ff 75 0c             	push   0xc(%ebp)
81003206:	50                   	push   %eax
81003207:	ff 75 08             	push   0x8(%ebp)
8100320a:	e8 f1 1b 00 00       	call   81004e00 <_fputwc_r>
8100320f:	83 c4 10             	add    $0x10,%esp
81003212:	83 f8 ff             	cmp    $0xffffffff,%eax
81003215:	75 07                	jne    8100321e <__sprint_r+0x8a>
81003217:	be ff ff ff ff       	mov    $0xffffffff,%esi
8100321c:	eb 3b                	jmp    81003259 <__sprint_r+0xc5>
8100321e:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003222:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003225:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81003228:	7c c5                	jl     810031ef <__sprint_r+0x5b>
8100322a:	8b 43 08             	mov    0x8(%ebx),%eax
8100322d:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003230:	c1 e2 02             	shl    $0x2,%edx
81003233:	29 d0                	sub    %edx,%eax
81003235:	89 43 08             	mov    %eax,0x8(%ebx)
81003238:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
8100323c:	8b 43 08             	mov    0x8(%ebx),%eax
8100323f:	85 c0                	test   %eax,%eax
81003241:	75 8f                	jne    810031d2 <__sprint_r+0x3e>
81003243:	eb 14                	jmp    81003259 <__sprint_r+0xc5>
81003245:	83 ec 04             	sub    $0x4,%esp
81003248:	53                   	push   %ebx
81003249:	ff 75 0c             	push   0xc(%ebp)
8100324c:	ff 75 08             	push   0x8(%ebp)
8100324f:	e8 4b 1c 00 00       	call   81004e9f <__sfvwrite_r>
81003254:	83 c4 10             	add    $0x10,%esp
81003257:	89 c6                	mov    %eax,%esi
81003259:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81003260:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81003267:	89 f0                	mov    %esi,%eax
81003269:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100326c:	5b                   	pop    %ebx
8100326d:	5e                   	pop    %esi
8100326e:	5d                   	pop    %ebp
8100326f:	c3                   	ret    

81003270 <__sfputc_r>:
81003270:	55                   	push   %ebp
81003271:	89 e5                	mov    %esp,%ebp
81003273:	83 ec 08             	sub    $0x8,%esp
81003276:	8b 45 10             	mov    0x10(%ebp),%eax
81003279:	8b 40 08             	mov    0x8(%eax),%eax
8100327c:	8d 50 ff             	lea    -0x1(%eax),%edx
8100327f:	8b 45 10             	mov    0x10(%ebp),%eax
81003282:	89 50 08             	mov    %edx,0x8(%eax)
81003285:	8b 45 10             	mov    0x10(%ebp),%eax
81003288:	8b 40 08             	mov    0x8(%eax),%eax
8100328b:	85 c0                	test   %eax,%eax
8100328d:	79 17                	jns    810032a6 <__sfputc_r+0x36>
8100328f:	8b 45 10             	mov    0x10(%ebp),%eax
81003292:	8b 50 08             	mov    0x8(%eax),%edx
81003295:	8b 45 10             	mov    0x10(%ebp),%eax
81003298:	8b 40 18             	mov    0x18(%eax),%eax
8100329b:	39 c2                	cmp    %eax,%edx
8100329d:	7c 21                	jl     810032c0 <__sfputc_r+0x50>
8100329f:	8b 45 0c             	mov    0xc(%ebp),%eax
810032a2:	3c 0a                	cmp    $0xa,%al
810032a4:	74 1a                	je     810032c0 <__sfputc_r+0x50>
810032a6:	8b 45 10             	mov    0x10(%ebp),%eax
810032a9:	8b 00                	mov    (%eax),%eax
810032ab:	8d 48 01             	lea    0x1(%eax),%ecx
810032ae:	8b 55 10             	mov    0x10(%ebp),%edx
810032b1:	89 0a                	mov    %ecx,(%edx)
810032b3:	8b 55 0c             	mov    0xc(%ebp),%edx
810032b6:	88 10                	mov    %dl,(%eax)
810032b8:	0f b6 00             	movzbl (%eax),%eax
810032bb:	0f b6 c0             	movzbl %al,%eax
810032be:	eb 14                	jmp    810032d4 <__sfputc_r+0x64>
810032c0:	83 ec 04             	sub    $0x4,%esp
810032c3:	ff 75 10             	push   0x10(%ebp)
810032c6:	ff 75 0c             	push   0xc(%ebp)
810032c9:	ff 75 08             	push   0x8(%ebp)
810032cc:	e8 7e 14 00 00       	call   8100474f <__swbuf_r>
810032d1:	83 c4 10             	add    $0x10,%esp
810032d4:	c9                   	leave  
810032d5:	c3                   	ret    

810032d6 <__sfputs_r>:
810032d6:	55                   	push   %ebp
810032d7:	89 e5                	mov    %esp,%ebp
810032d9:	53                   	push   %ebx
810032da:	83 ec 14             	sub    $0x14,%esp
810032dd:	8b 45 0c             	mov    0xc(%ebp),%eax
810032e0:	8b 40 64             	mov    0x64(%eax),%eax
810032e3:	25 00 20 00 00       	and    $0x2000,%eax
810032e8:	85 c0                	test   %eax,%eax
810032ea:	74 4c                	je     81003338 <__sfputs_r+0x62>
810032ec:	8b 45 10             	mov    0x10(%ebp),%eax
810032ef:	89 45 f4             	mov    %eax,-0xc(%ebp)
810032f2:	bb 00 00 00 00       	mov    $0x0,%ebx
810032f7:	eb 31                	jmp    8100332a <__sfputs_r+0x54>
810032f9:	89 d8                	mov    %ebx,%eax
810032fb:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003302:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003305:	01 d0                	add    %edx,%eax
81003307:	8b 00                	mov    (%eax),%eax
81003309:	83 ec 04             	sub    $0x4,%esp
8100330c:	ff 75 0c             	push   0xc(%ebp)
8100330f:	50                   	push   %eax
81003310:	ff 75 08             	push   0x8(%ebp)
81003313:	e8 e8 1a 00 00       	call   81004e00 <_fputwc_r>
81003318:	83 c4 10             	add    $0x10,%esp
8100331b:	83 f8 ff             	cmp    $0xffffffff,%eax
8100331e:	75 07                	jne    81003327 <__sfputs_r+0x51>
81003320:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003325:	eb 52                	jmp    81003379 <__sfputs_r+0xa3>
81003327:	83 c3 01             	add    $0x1,%ebx
8100332a:	8b 45 14             	mov    0x14(%ebp),%eax
8100332d:	c1 e8 02             	shr    $0x2,%eax
81003330:	89 da                	mov    %ebx,%edx
81003332:	39 d0                	cmp    %edx,%eax
81003334:	77 c3                	ja     810032f9 <__sfputs_r+0x23>
81003336:	eb 3c                	jmp    81003374 <__sfputs_r+0x9e>
81003338:	bb 00 00 00 00       	mov    $0x0,%ebx
8100333d:	eb 2e                	jmp    8100336d <__sfputs_r+0x97>
8100333f:	89 da                	mov    %ebx,%edx
81003341:	8b 45 10             	mov    0x10(%ebp),%eax
81003344:	01 d0                	add    %edx,%eax
81003346:	0f b6 00             	movzbl (%eax),%eax
81003349:	0f be c0             	movsbl %al,%eax
8100334c:	83 ec 04             	sub    $0x4,%esp
8100334f:	ff 75 0c             	push   0xc(%ebp)
81003352:	50                   	push   %eax
81003353:	ff 75 08             	push   0x8(%ebp)
81003356:	e8 15 ff ff ff       	call   81003270 <__sfputc_r>
8100335b:	83 c4 10             	add    $0x10,%esp
8100335e:	83 f8 ff             	cmp    $0xffffffff,%eax
81003361:	75 07                	jne    8100336a <__sfputs_r+0x94>
81003363:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003368:	eb 0f                	jmp    81003379 <__sfputs_r+0xa3>
8100336a:	83 c3 01             	add    $0x1,%ebx
8100336d:	89 d8                	mov    %ebx,%eax
8100336f:	39 45 14             	cmp    %eax,0x14(%ebp)
81003372:	77 cb                	ja     8100333f <__sfputs_r+0x69>
81003374:	b8 00 00 00 00       	mov    $0x0,%eax
81003379:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100337c:	c9                   	leave  
8100337d:	c3                   	ret    

8100337e <vfiprintf>:
8100337e:	55                   	push   %ebp
8100337f:	89 e5                	mov    %esp,%ebp
81003381:	83 ec 18             	sub    $0x18,%esp
81003384:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81003389:	ff 75 10             	push   0x10(%ebp)
8100338c:	ff 75 0c             	push   0xc(%ebp)
8100338f:	ff 75 08             	push   0x8(%ebp)
81003392:	50                   	push   %eax
81003393:	e8 0b 00 00 00       	call   810033a3 <_vfiprintf_r>
81003398:	83 c4 10             	add    $0x10,%esp
8100339b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100339e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810033a1:	c9                   	leave  
810033a2:	c3                   	ret    

810033a3 <_vfiprintf_r>:
810033a3:	55                   	push   %ebp
810033a4:	89 e5                	mov    %esp,%ebp
810033a6:	57                   	push   %edi
810033a7:	56                   	push   %esi
810033a8:	53                   	push   %ebx
810033a9:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
810033af:	c7 45 e4 d6 32 00 81 	movl   $0x810032d6,-0x1c(%ebp)
810033b6:	8b 45 08             	mov    0x8(%ebp),%eax
810033b9:	89 45 e0             	mov    %eax,-0x20(%ebp)
810033bc:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810033c0:	74 18                	je     810033da <_vfiprintf_r+0x37>
810033c2:	8b 45 e0             	mov    -0x20(%ebp),%eax
810033c5:	8b 40 38             	mov    0x38(%eax),%eax
810033c8:	85 c0                	test   %eax,%eax
810033ca:	75 0e                	jne    810033da <_vfiprintf_r+0x37>
810033cc:	83 ec 0c             	sub    $0xc,%esp
810033cf:	ff 75 e0             	push   -0x20(%ebp)
810033d2:	e8 f8 da ff ff       	call   81000ecf <__sinit>
810033d7:	83 c4 10             	add    $0x10,%esp
810033da:	8b 45 0c             	mov    0xc(%ebp),%eax
810033dd:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810033e1:	98                   	cwtl   
810033e2:	83 e0 08             	and    $0x8,%eax
810033e5:	85 c0                	test   %eax,%eax
810033e7:	74 0a                	je     810033f3 <_vfiprintf_r+0x50>
810033e9:	8b 45 0c             	mov    0xc(%ebp),%eax
810033ec:	8b 40 10             	mov    0x10(%eax),%eax
810033ef:	85 c0                	test   %eax,%eax
810033f1:	75 1f                	jne    81003412 <_vfiprintf_r+0x6f>
810033f3:	83 ec 08             	sub    $0x8,%esp
810033f6:	ff 75 0c             	push   0xc(%ebp)
810033f9:	ff 75 08             	push   0x8(%ebp)
810033fc:	e8 c7 14 00 00       	call   810048c8 <__swsetup_r>
81003401:	83 c4 10             	add    $0x10,%esp
81003404:	85 c0                	test   %eax,%eax
81003406:	74 0a                	je     81003412 <_vfiprintf_r+0x6f>
81003408:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100340d:	e9 df 02 00 00       	jmp    810036f1 <_vfiprintf_r+0x34e>
81003412:	8b 5d 10             	mov    0x10(%ebp),%ebx
81003415:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
8100341c:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81003420:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81003424:	8b 45 14             	mov    0x14(%ebp),%eax
81003427:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
8100342d:	89 de                	mov    %ebx,%esi
8100342f:	eb 03                	jmp    81003434 <_vfiprintf_r+0x91>
81003431:	83 c3 01             	add    $0x1,%ebx
81003434:	0f b6 03             	movzbl (%ebx),%eax
81003437:	84 c0                	test   %al,%al
81003439:	74 07                	je     81003442 <_vfiprintf_r+0x9f>
8100343b:	0f b6 03             	movzbl (%ebx),%eax
8100343e:	3c 25                	cmp    $0x25,%al
81003440:	75 ef                	jne    81003431 <_vfiprintf_r+0x8e>
81003442:	89 d8                	mov    %ebx,%eax
81003444:	29 f0                	sub    %esi,%eax
81003446:	85 c0                	test   %eax,%eax
81003448:	74 2b                	je     81003475 <_vfiprintf_r+0xd2>
8100344a:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81003450:	50                   	push   %eax
81003451:	56                   	push   %esi
81003452:	ff 75 0c             	push   0xc(%ebp)
81003455:	ff 75 08             	push   0x8(%ebp)
81003458:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100345b:	ff d0                	call   *%eax
8100345d:	83 c4 10             	add    $0x10,%esp
81003460:	83 f8 ff             	cmp    $0xffffffff,%eax
81003463:	0f 84 68 02 00 00    	je     810036d1 <_vfiprintf_r+0x32e>
81003469:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100346c:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81003472:	89 45 94             	mov    %eax,-0x6c(%ebp)
81003475:	0f b6 03             	movzbl (%ebx),%eax
81003478:	84 c0                	test   %al,%al
8100347a:	0f 84 54 02 00 00    	je     810036d4 <_vfiprintf_r+0x331>
81003480:	83 c3 01             	add    $0x1,%ebx
81003483:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
8100348a:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81003491:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81003498:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
8100349f:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
810034a3:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
810034aa:	c7 45 dc 00 69 00 81 	movl   $0x81006900,-0x24(%ebp)
810034b1:	eb 1b                	jmp    810034ce <_vfiprintf_r+0x12b>
810034b3:	8b 55 80             	mov    -0x80(%ebp),%edx
810034b6:	89 f0                	mov    %esi,%eax
810034b8:	2b 45 dc             	sub    -0x24(%ebp),%eax
810034bb:	be 01 00 00 00       	mov    $0x1,%esi
810034c0:	89 c1                	mov    %eax,%ecx
810034c2:	d3 e6                	shl    %cl,%esi
810034c4:	89 f0                	mov    %esi,%eax
810034c6:	09 d0                	or     %edx,%eax
810034c8:	89 45 80             	mov    %eax,-0x80(%ebp)
810034cb:	83 c3 01             	add    $0x1,%ebx
810034ce:	0f b6 03             	movzbl (%ebx),%eax
810034d1:	0f be c0             	movsbl %al,%eax
810034d4:	83 ec 04             	sub    $0x4,%esp
810034d7:	6a 05                	push   $0x5
810034d9:	50                   	push   %eax
810034da:	ff 75 dc             	push   -0x24(%ebp)
810034dd:	e8 ee fa ff ff       	call   81002fd0 <memchr>
810034e2:	83 c4 10             	add    $0x10,%esp
810034e5:	89 c6                	mov    %eax,%esi
810034e7:	85 f6                	test   %esi,%esi
810034e9:	75 c8                	jne    810034b3 <_vfiprintf_r+0x110>
810034eb:	8b 45 80             	mov    -0x80(%ebp),%eax
810034ee:	83 e0 10             	and    $0x10,%eax
810034f1:	85 c0                	test   %eax,%eax
810034f3:	74 04                	je     810034f9 <_vfiprintf_r+0x156>
810034f5:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
810034f9:	8b 45 80             	mov    -0x80(%ebp),%eax
810034fc:	83 e0 08             	and    $0x8,%eax
810034ff:	85 c0                	test   %eax,%eax
81003501:	74 04                	je     81003507 <_vfiprintf_r+0x164>
81003503:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81003507:	0f b6 03             	movzbl (%ebx),%eax
8100350a:	3c 2a                	cmp    $0x2a,%al
8100350c:	75 50                	jne    8100355e <_vfiprintf_r+0x1bb>
8100350e:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81003514:	8d 50 04             	lea    0x4(%eax),%edx
81003517:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100351d:	8b 00                	mov    (%eax),%eax
8100351f:	89 45 8c             	mov    %eax,-0x74(%ebp)
81003522:	8b 45 8c             	mov    -0x74(%ebp),%eax
81003525:	85 c0                	test   %eax,%eax
81003527:	79 11                	jns    8100353a <_vfiprintf_r+0x197>
81003529:	8b 45 8c             	mov    -0x74(%ebp),%eax
8100352c:	f7 d8                	neg    %eax
8100352e:	89 45 8c             	mov    %eax,-0x74(%ebp)
81003531:	8b 45 80             	mov    -0x80(%ebp),%eax
81003534:	83 c8 02             	or     $0x2,%eax
81003537:	89 45 80             	mov    %eax,-0x80(%ebp)
8100353a:	83 c3 01             	add    $0x1,%ebx
8100353d:	eb 2d                	jmp    8100356c <_vfiprintf_r+0x1c9>
8100353f:	8b 55 8c             	mov    -0x74(%ebp),%edx
81003542:	89 d0                	mov    %edx,%eax
81003544:	c1 e0 02             	shl    $0x2,%eax
81003547:	01 d0                	add    %edx,%eax
81003549:	01 c0                	add    %eax,%eax
8100354b:	89 c2                	mov    %eax,%edx
8100354d:	0f b6 03             	movzbl (%ebx),%eax
81003550:	0f be c0             	movsbl %al,%eax
81003553:	83 e8 30             	sub    $0x30,%eax
81003556:	01 d0                	add    %edx,%eax
81003558:	89 45 8c             	mov    %eax,-0x74(%ebp)
8100355b:	83 c3 01             	add    $0x1,%ebx
8100355e:	0f b6 03             	movzbl (%ebx),%eax
81003561:	0f be c0             	movsbl %al,%eax
81003564:	83 e8 30             	sub    $0x30,%eax
81003567:	83 f8 09             	cmp    $0x9,%eax
8100356a:	76 d3                	jbe    8100353f <_vfiprintf_r+0x19c>
8100356c:	0f b6 03             	movzbl (%ebx),%eax
8100356f:	3c 2e                	cmp    $0x2e,%al
81003571:	75 67                	jne    810035da <_vfiprintf_r+0x237>
81003573:	83 c3 01             	add    $0x1,%ebx
81003576:	0f b6 03             	movzbl (%ebx),%eax
81003579:	3c 2a                	cmp    $0x2a,%al
8100357b:	75 27                	jne    810035a4 <_vfiprintf_r+0x201>
8100357d:	83 c3 01             	add    $0x1,%ebx
81003580:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81003586:	8d 50 04             	lea    0x4(%eax),%edx
81003589:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100358f:	8b 00                	mov    (%eax),%eax
81003591:	89 45 84             	mov    %eax,-0x7c(%ebp)
81003594:	8b 45 84             	mov    -0x7c(%ebp),%eax
81003597:	85 c0                	test   %eax,%eax
81003599:	79 3f                	jns    810035da <_vfiprintf_r+0x237>
8100359b:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
810035a2:	eb 36                	jmp    810035da <_vfiprintf_r+0x237>
810035a4:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
810035ab:	eb 1f                	jmp    810035cc <_vfiprintf_r+0x229>
810035ad:	8b 55 84             	mov    -0x7c(%ebp),%edx
810035b0:	89 d0                	mov    %edx,%eax
810035b2:	c1 e0 02             	shl    $0x2,%eax
810035b5:	01 d0                	add    %edx,%eax
810035b7:	01 c0                	add    %eax,%eax
810035b9:	89 c2                	mov    %eax,%edx
810035bb:	0f b6 03             	movzbl (%ebx),%eax
810035be:	0f be c0             	movsbl %al,%eax
810035c1:	83 e8 30             	sub    $0x30,%eax
810035c4:	01 d0                	add    %edx,%eax
810035c6:	89 45 84             	mov    %eax,-0x7c(%ebp)
810035c9:	83 c3 01             	add    $0x1,%ebx
810035cc:	0f b6 03             	movzbl (%ebx),%eax
810035cf:	0f be c0             	movsbl %al,%eax
810035d2:	83 e8 30             	sub    $0x30,%eax
810035d5:	83 f8 09             	cmp    $0x9,%eax
810035d8:	76 d3                	jbe    810035ad <_vfiprintf_r+0x20a>
810035da:	c7 45 dc 06 69 00 81 	movl   $0x81006906,-0x24(%ebp)
810035e1:	0f b6 03             	movzbl (%ebx),%eax
810035e4:	0f be c0             	movsbl %al,%eax
810035e7:	83 ec 04             	sub    $0x4,%esp
810035ea:	6a 03                	push   $0x3
810035ec:	50                   	push   %eax
810035ed:	ff 75 dc             	push   -0x24(%ebp)
810035f0:	e8 db f9 ff ff       	call   81002fd0 <memchr>
810035f5:	83 c4 10             	add    $0x10,%esp
810035f8:	89 c6                	mov    %eax,%esi
810035fa:	85 f6                	test   %esi,%esi
810035fc:	74 1b                	je     81003619 <_vfiprintf_r+0x276>
810035fe:	8b 55 80             	mov    -0x80(%ebp),%edx
81003601:	89 f0                	mov    %esi,%eax
81003603:	2b 45 dc             	sub    -0x24(%ebp),%eax
81003606:	be 40 00 00 00       	mov    $0x40,%esi
8100360b:	89 c1                	mov    %eax,%ecx
8100360d:	d3 e6                	shl    %cl,%esi
8100360f:	89 f0                	mov    %esi,%eax
81003611:	09 d0                	or     %edx,%eax
81003613:	89 45 80             	mov    %eax,-0x80(%ebp)
81003616:	83 c3 01             	add    $0x1,%ebx
81003619:	89 d8                	mov    %ebx,%eax
8100361b:	8d 58 01             	lea    0x1(%eax),%ebx
8100361e:	0f b6 00             	movzbl (%eax),%eax
81003621:	88 45 98             	mov    %al,-0x68(%ebp)
81003624:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
81003628:	0f be c0             	movsbl %al,%eax
8100362b:	83 ec 04             	sub    $0x4,%esp
8100362e:	6a 06                	push   $0x6
81003630:	50                   	push   %eax
81003631:	68 0a 69 00 81       	push   $0x8100690a
81003636:	e8 95 f9 ff ff       	call   81002fd0 <memchr>
8100363b:	83 c4 10             	add    $0x10,%esp
8100363e:	89 c6                	mov    %eax,%esi
81003640:	85 f6                	test   %esi,%esi
81003642:	74 5a                	je     8100369e <_vfiprintf_r+0x2fb>
81003644:	b8 00 00 00 00       	mov    $0x0,%eax
81003649:	85 c0                	test   %eax,%eax
8100364b:	75 2e                	jne    8100367b <_vfiprintf_r+0x2d8>
8100364d:	8b 45 80             	mov    -0x80(%ebp),%eax
81003650:	25 00 01 00 00       	and    $0x100,%eax
81003655:	85 c0                	test   %eax,%eax
81003657:	74 11                	je     8100366a <_vfiprintf_r+0x2c7>
81003659:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
8100365f:	83 c0 0c             	add    $0xc,%eax
81003662:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81003668:	eb 55                	jmp    810036bf <_vfiprintf_r+0x31c>
8100366a:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81003670:	83 c0 08             	add    $0x8,%eax
81003673:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81003679:	eb 44                	jmp    810036bf <_vfiprintf_r+0x31c>
8100367b:	83 ec 0c             	sub    $0xc,%esp
8100367e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81003684:	50                   	push   %eax
81003685:	ff 75 e4             	push   -0x1c(%ebp)
81003688:	ff 75 0c             	push   0xc(%ebp)
8100368b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100368e:	50                   	push   %eax
8100368f:	ff 75 08             	push   0x8(%ebp)
81003692:	e8 69 c9 ff 7e       	call   0 <do_help-0x81000000>
81003697:	83 c4 20             	add    $0x20,%esp
8100369a:	89 c7                	mov    %eax,%edi
8100369c:	eb 21                	jmp    810036bf <_vfiprintf_r+0x31c>
8100369e:	83 ec 0c             	sub    $0xc,%esp
810036a1:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
810036a7:	50                   	push   %eax
810036a8:	ff 75 e4             	push   -0x1c(%ebp)
810036ab:	ff 75 0c             	push   0xc(%ebp)
810036ae:	8d 45 80             	lea    -0x80(%ebp),%eax
810036b1:	50                   	push   %eax
810036b2:	ff 75 08             	push   0x8(%ebp)
810036b5:	e8 da 01 00 00       	call   81003894 <_printf_i>
810036ba:	83 c4 20             	add    $0x20,%esp
810036bd:	89 c7                	mov    %eax,%edi
810036bf:	83 ff ff             	cmp    $0xffffffff,%edi
810036c2:	74 13                	je     810036d7 <_vfiprintf_r+0x334>
810036c4:	8b 45 94             	mov    -0x6c(%ebp),%eax
810036c7:	01 f8                	add    %edi,%eax
810036c9:	89 45 94             	mov    %eax,-0x6c(%ebp)
810036cc:	e9 5c fd ff ff       	jmp    8100342d <_vfiprintf_r+0x8a>
810036d1:	90                   	nop
810036d2:	eb 04                	jmp    810036d8 <_vfiprintf_r+0x335>
810036d4:	90                   	nop
810036d5:	eb 01                	jmp    810036d8 <_vfiprintf_r+0x335>
810036d7:	90                   	nop
810036d8:	8b 45 0c             	mov    0xc(%ebp),%eax
810036db:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810036df:	98                   	cwtl   
810036e0:	83 e0 40             	and    $0x40,%eax
810036e3:	85 c0                	test   %eax,%eax
810036e5:	75 05                	jne    810036ec <_vfiprintf_r+0x349>
810036e7:	8b 45 94             	mov    -0x6c(%ebp),%eax
810036ea:	eb 05                	jmp    810036f1 <_vfiprintf_r+0x34e>
810036ec:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810036f1:	8d 65 f4             	lea    -0xc(%ebp),%esp
810036f4:	5b                   	pop    %ebx
810036f5:	5e                   	pop    %esi
810036f6:	5f                   	pop    %edi
810036f7:	5d                   	pop    %ebp
810036f8:	c3                   	ret    

810036f9 <_printf_common>:
810036f9:	55                   	push   %ebp
810036fa:	89 e5                	mov    %esp,%ebp
810036fc:	83 ec 18             	sub    $0x18,%esp
810036ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81003702:	8b 50 10             	mov    0x10(%eax),%edx
81003705:	8b 45 0c             	mov    0xc(%ebp),%eax
81003708:	8b 40 08             	mov    0x8(%eax),%eax
8100370b:	39 c2                	cmp    %eax,%edx
8100370d:	0f 4c d0             	cmovl  %eax,%edx
81003710:	8b 45 10             	mov    0x10(%ebp),%eax
81003713:	89 10                	mov    %edx,(%eax)
81003715:	8b 45 0c             	mov    0xc(%ebp),%eax
81003718:	0f b6 40 43          	movzbl 0x43(%eax),%eax
8100371c:	84 c0                	test   %al,%al
8100371e:	74 0d                	je     8100372d <_printf_common+0x34>
81003720:	8b 45 10             	mov    0x10(%ebp),%eax
81003723:	8b 00                	mov    (%eax),%eax
81003725:	8d 50 01             	lea    0x1(%eax),%edx
81003728:	8b 45 10             	mov    0x10(%ebp),%eax
8100372b:	89 10                	mov    %edx,(%eax)
8100372d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003730:	8b 00                	mov    (%eax),%eax
81003732:	83 e0 20             	and    $0x20,%eax
81003735:	85 c0                	test   %eax,%eax
81003737:	74 0d                	je     81003746 <_printf_common+0x4d>
81003739:	8b 45 10             	mov    0x10(%ebp),%eax
8100373c:	8b 00                	mov    (%eax),%eax
8100373e:	8d 50 02             	lea    0x2(%eax),%edx
81003741:	8b 45 10             	mov    0x10(%ebp),%eax
81003744:	89 10                	mov    %edx,(%eax)
81003746:	8b 45 0c             	mov    0xc(%ebp),%eax
81003749:	8b 00                	mov    (%eax),%eax
8100374b:	83 e0 06             	and    $0x6,%eax
8100374e:	85 c0                	test   %eax,%eax
81003750:	75 41                	jne    81003793 <_printf_common+0x9a>
81003752:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003759:	eb 24                	jmp    8100377f <_printf_common+0x86>
8100375b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100375e:	83 c0 19             	add    $0x19,%eax
81003761:	6a 01                	push   $0x1
81003763:	50                   	push   %eax
81003764:	ff 75 14             	push   0x14(%ebp)
81003767:	ff 75 08             	push   0x8(%ebp)
8100376a:	8b 45 18             	mov    0x18(%ebp),%eax
8100376d:	ff d0                	call   *%eax
8100376f:	83 c4 10             	add    $0x10,%esp
81003772:	83 f8 ff             	cmp    $0xffffffff,%eax
81003775:	0f 84 0b 01 00 00    	je     81003886 <_printf_common+0x18d>
8100377b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8100377f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003782:	8b 50 0c             	mov    0xc(%eax),%edx
81003785:	8b 45 10             	mov    0x10(%ebp),%eax
81003788:	8b 08                	mov    (%eax),%ecx
8100378a:	89 d0                	mov    %edx,%eax
8100378c:	29 c8                	sub    %ecx,%eax
8100378e:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81003791:	7c c8                	jl     8100375b <_printf_common+0x62>
81003793:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100379a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100379d:	0f b6 40 43          	movzbl 0x43(%eax),%eax
810037a1:	84 c0                	test   %al,%al
810037a3:	74 04                	je     810037a9 <_printf_common+0xb0>
810037a5:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810037a9:	8b 45 0c             	mov    0xc(%ebp),%eax
810037ac:	8b 00                	mov    (%eax),%eax
810037ae:	83 e0 20             	and    $0x20,%eax
810037b1:	85 c0                	test   %eax,%eax
810037b3:	74 28                	je     810037dd <_printf_common+0xe4>
810037b5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810037b8:	8d 50 01             	lea    0x1(%eax),%edx
810037bb:	89 55 f4             	mov    %edx,-0xc(%ebp)
810037be:	8b 55 0c             	mov    0xc(%ebp),%edx
810037c1:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
810037c6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810037c9:	8d 50 01             	lea    0x1(%eax),%edx
810037cc:	89 55 f4             	mov    %edx,-0xc(%ebp)
810037cf:	8b 55 0c             	mov    0xc(%ebp),%edx
810037d2:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
810037d6:	8b 55 0c             	mov    0xc(%ebp),%edx
810037d9:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
810037dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810037e0:	8b 55 0c             	mov    0xc(%ebp),%edx
810037e3:	83 c2 43             	add    $0x43,%edx
810037e6:	50                   	push   %eax
810037e7:	52                   	push   %edx
810037e8:	ff 75 14             	push   0x14(%ebp)
810037eb:	ff 75 08             	push   0x8(%ebp)
810037ee:	8b 45 18             	mov    0x18(%ebp),%eax
810037f1:	ff d0                	call   *%eax
810037f3:	83 c4 10             	add    $0x10,%esp
810037f6:	83 f8 ff             	cmp    $0xffffffff,%eax
810037f9:	0f 84 8a 00 00 00    	je     81003889 <_printf_common+0x190>
810037ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81003802:	8b 50 0c             	mov    0xc(%eax),%edx
81003805:	8b 45 10             	mov    0x10(%ebp),%eax
81003808:	8b 08                	mov    (%eax),%ecx
8100380a:	89 d0                	mov    %edx,%eax
8100380c:	29 c8                	sub    %ecx,%eax
8100380e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003811:	8b 45 0c             	mov    0xc(%ebp),%eax
81003814:	8b 00                	mov    (%eax),%eax
81003816:	83 e0 06             	and    $0x6,%eax
81003819:	83 f8 04             	cmp    $0x4,%eax
8100381c:	75 06                	jne    81003824 <_printf_common+0x12b>
8100381e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003822:	79 07                	jns    8100382b <_printf_common+0x132>
81003824:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100382b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100382e:	8b 50 08             	mov    0x8(%eax),%edx
81003831:	8b 45 0c             	mov    0xc(%ebp),%eax
81003834:	8b 40 10             	mov    0x10(%eax),%eax
81003837:	39 c2                	cmp    %eax,%edx
81003839:	7e 13                	jle    8100384e <_printf_common+0x155>
8100383b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100383e:	8b 50 08             	mov    0x8(%eax),%edx
81003841:	8b 45 0c             	mov    0xc(%ebp),%eax
81003844:	8b 48 10             	mov    0x10(%eax),%ecx
81003847:	89 d0                	mov    %edx,%eax
81003849:	29 c8                	sub    %ecx,%eax
8100384b:	01 45 f4             	add    %eax,-0xc(%ebp)
8100384e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81003855:	eb 20                	jmp    81003877 <_printf_common+0x17e>
81003857:	8b 45 0c             	mov    0xc(%ebp),%eax
8100385a:	83 c0 1a             	add    $0x1a,%eax
8100385d:	6a 01                	push   $0x1
8100385f:	50                   	push   %eax
81003860:	ff 75 14             	push   0x14(%ebp)
81003863:	ff 75 08             	push   0x8(%ebp)
81003866:	8b 45 18             	mov    0x18(%ebp),%eax
81003869:	ff d0                	call   *%eax
8100386b:	83 c4 10             	add    $0x10,%esp
8100386e:	83 f8 ff             	cmp    $0xffffffff,%eax
81003871:	74 19                	je     8100388c <_printf_common+0x193>
81003873:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
81003877:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100387a:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100387d:	7c d8                	jl     81003857 <_printf_common+0x15e>
8100387f:	b8 00 00 00 00       	mov    $0x0,%eax
81003884:	eb 0c                	jmp    81003892 <_printf_common+0x199>
81003886:	90                   	nop
81003887:	eb 04                	jmp    8100388d <_printf_common+0x194>
81003889:	90                   	nop
8100388a:	eb 01                	jmp    8100388d <_printf_common+0x194>
8100388c:	90                   	nop
8100388d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003892:	c9                   	leave  
81003893:	c3                   	ret    

81003894 <_printf_i>:
81003894:	55                   	push   %ebp
81003895:	89 e5                	mov    %esp,%ebp
81003897:	53                   	push   %ebx
81003898:	83 ec 24             	sub    $0x24,%esp
8100389b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100389e:	83 c0 1b             	add    $0x1b,%eax
810038a1:	83 c0 28             	add    $0x28,%eax
810038a4:	89 45 ec             	mov    %eax,-0x14(%ebp)
810038a7:	c7 45 e8 14 69 00 81 	movl   $0x81006914,-0x18(%ebp)
810038ae:	8b 45 0c             	mov    0xc(%ebp),%eax
810038b1:	0f b6 40 18          	movzbl 0x18(%eax),%eax
810038b5:	0f be c0             	movsbl %al,%eax
810038b8:	85 c0                	test   %eax,%eax
810038ba:	0f 84 00 03 00 00    	je     81003bc0 <_printf_i+0x32c>
810038c0:	85 c0                	test   %eax,%eax
810038c2:	0f 88 52 03 00 00    	js     81003c1a <_printf_i+0x386>
810038c8:	83 f8 78             	cmp    $0x78,%eax
810038cb:	0f 8f 49 03 00 00    	jg     81003c1a <_printf_i+0x386>
810038d1:	83 f8 58             	cmp    $0x58,%eax
810038d4:	0f 8c 40 03 00 00    	jl     81003c1a <_printf_i+0x386>
810038da:	83 e8 58             	sub    $0x58,%eax
810038dd:	83 f8 20             	cmp    $0x20,%eax
810038e0:	0f 87 34 03 00 00    	ja     81003c1a <_printf_i+0x386>
810038e6:	8b 04 85 38 69 00 81 	mov    -0x7eff96c8(,%eax,4),%eax
810038ed:	ff e0                	jmp    *%eax
810038ef:	8b 45 18             	mov    0x18(%ebp),%eax
810038f2:	8b 00                	mov    (%eax),%eax
810038f4:	8d 48 04             	lea    0x4(%eax),%ecx
810038f7:	8b 55 18             	mov    0x18(%ebp),%edx
810038fa:	89 0a                	mov    %ecx,(%edx)
810038fc:	8b 00                	mov    (%eax),%eax
810038fe:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003902:	89 c2                	mov    %eax,%edx
81003904:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003907:	88 10                	mov    %dl,(%eax)
81003909:	8b 45 0c             	mov    0xc(%ebp),%eax
8100390c:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003913:	e9 1c 03 00 00       	jmp    81003c34 <_printf_i+0x3a0>
81003918:	8b 45 0c             	mov    0xc(%ebp),%eax
8100391b:	8b 00                	mov    (%eax),%eax
8100391d:	25 80 00 00 00       	and    $0x80,%eax
81003922:	85 c0                	test   %eax,%eax
81003924:	74 11                	je     81003937 <_printf_i+0xa3>
81003926:	8b 45 18             	mov    0x18(%ebp),%eax
81003929:	8b 00                	mov    (%eax),%eax
8100392b:	8d 48 04             	lea    0x4(%eax),%ecx
8100392e:	8b 55 18             	mov    0x18(%ebp),%edx
81003931:	89 0a                	mov    %ecx,(%edx)
81003933:	8b 00                	mov    (%eax),%eax
81003935:	eb 2d                	jmp    81003964 <_printf_i+0xd0>
81003937:	8b 45 0c             	mov    0xc(%ebp),%eax
8100393a:	8b 00                	mov    (%eax),%eax
8100393c:	83 e0 40             	and    $0x40,%eax
8100393f:	85 c0                	test   %eax,%eax
81003941:	74 12                	je     81003955 <_printf_i+0xc1>
81003943:	8b 45 18             	mov    0x18(%ebp),%eax
81003946:	8b 00                	mov    (%eax),%eax
81003948:	8d 48 04             	lea    0x4(%eax),%ecx
8100394b:	8b 55 18             	mov    0x18(%ebp),%edx
8100394e:	89 0a                	mov    %ecx,(%edx)
81003950:	8b 00                	mov    (%eax),%eax
81003952:	98                   	cwtl   
81003953:	eb 0f                	jmp    81003964 <_printf_i+0xd0>
81003955:	8b 45 18             	mov    0x18(%ebp),%eax
81003958:	8b 00                	mov    (%eax),%eax
8100395a:	8d 48 04             	lea    0x4(%eax),%ecx
8100395d:	8b 55 18             	mov    0x18(%ebp),%edx
81003960:	89 0a                	mov    %ecx,(%edx)
81003962:	8b 00                	mov    (%eax),%eax
81003964:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003967:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100396a:	85 c0                	test   %eax,%eax
8100396c:	79 0a                	jns    81003978 <_printf_i+0xe4>
8100396e:	f7 5d f4             	negl   -0xc(%ebp)
81003971:	8b 45 0c             	mov    0xc(%ebp),%eax
81003974:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81003978:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
8100397f:	e9 28 01 00 00       	jmp    81003aac <_printf_i+0x218>
81003984:	8b 45 0c             	mov    0xc(%ebp),%eax
81003987:	8b 00                	mov    (%eax),%eax
81003989:	25 80 00 00 00       	and    $0x80,%eax
8100398e:	85 c0                	test   %eax,%eax
81003990:	74 11                	je     810039a3 <_printf_i+0x10f>
81003992:	8b 45 18             	mov    0x18(%ebp),%eax
81003995:	8b 00                	mov    (%eax),%eax
81003997:	8d 48 04             	lea    0x4(%eax),%ecx
8100399a:	8b 55 18             	mov    0x18(%ebp),%edx
8100399d:	89 0a                	mov    %ecx,(%edx)
8100399f:	8b 00                	mov    (%eax),%eax
810039a1:	eb 2f                	jmp    810039d2 <_printf_i+0x13e>
810039a3:	8b 45 0c             	mov    0xc(%ebp),%eax
810039a6:	8b 00                	mov    (%eax),%eax
810039a8:	83 e0 40             	and    $0x40,%eax
810039ab:	85 c0                	test   %eax,%eax
810039ad:	74 14                	je     810039c3 <_printf_i+0x12f>
810039af:	8b 45 18             	mov    0x18(%ebp),%eax
810039b2:	8b 00                	mov    (%eax),%eax
810039b4:	8d 48 04             	lea    0x4(%eax),%ecx
810039b7:	8b 55 18             	mov    0x18(%ebp),%edx
810039ba:	89 0a                	mov    %ecx,(%edx)
810039bc:	8b 00                	mov    (%eax),%eax
810039be:	0f b7 c0             	movzwl %ax,%eax
810039c1:	eb 0f                	jmp    810039d2 <_printf_i+0x13e>
810039c3:	8b 45 18             	mov    0x18(%ebp),%eax
810039c6:	8b 00                	mov    (%eax),%eax
810039c8:	8d 48 04             	lea    0x4(%eax),%ecx
810039cb:	8b 55 18             	mov    0x18(%ebp),%edx
810039ce:	89 0a                	mov    %ecx,(%edx)
810039d0:	8b 00                	mov    (%eax),%eax
810039d2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810039d5:	8b 45 0c             	mov    0xc(%ebp),%eax
810039d8:	0f b6 40 18          	movzbl 0x18(%eax),%eax
810039dc:	3c 6f                	cmp    $0x6f,%al
810039de:	75 07                	jne    810039e7 <_printf_i+0x153>
810039e0:	b8 08 00 00 00       	mov    $0x8,%eax
810039e5:	eb 05                	jmp    810039ec <_printf_i+0x158>
810039e7:	b8 0a 00 00 00       	mov    $0xa,%eax
810039ec:	89 45 f0             	mov    %eax,-0x10(%ebp)
810039ef:	e9 b1 00 00 00       	jmp    81003aa5 <_printf_i+0x211>
810039f4:	8b 45 0c             	mov    0xc(%ebp),%eax
810039f7:	c6 40 45 58          	movb   $0x58,0x45(%eax)
810039fb:	eb 1d                	jmp    81003a1a <_printf_i+0x186>
810039fd:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a00:	8b 00                	mov    (%eax),%eax
81003a02:	83 c8 20             	or     $0x20,%eax
81003a05:	89 c2                	mov    %eax,%edx
81003a07:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a0a:	89 10                	mov    %edx,(%eax)
81003a0c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a0f:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81003a13:	c7 45 e8 25 69 00 81 	movl   $0x81006925,-0x18(%ebp)
81003a1a:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a1d:	8b 00                	mov    (%eax),%eax
81003a1f:	25 80 00 00 00       	and    $0x80,%eax
81003a24:	85 c0                	test   %eax,%eax
81003a26:	74 11                	je     81003a39 <_printf_i+0x1a5>
81003a28:	8b 45 18             	mov    0x18(%ebp),%eax
81003a2b:	8b 00                	mov    (%eax),%eax
81003a2d:	8d 48 04             	lea    0x4(%eax),%ecx
81003a30:	8b 55 18             	mov    0x18(%ebp),%edx
81003a33:	89 0a                	mov    %ecx,(%edx)
81003a35:	8b 00                	mov    (%eax),%eax
81003a37:	eb 2f                	jmp    81003a68 <_printf_i+0x1d4>
81003a39:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a3c:	8b 00                	mov    (%eax),%eax
81003a3e:	83 e0 40             	and    $0x40,%eax
81003a41:	85 c0                	test   %eax,%eax
81003a43:	74 14                	je     81003a59 <_printf_i+0x1c5>
81003a45:	8b 45 18             	mov    0x18(%ebp),%eax
81003a48:	8b 00                	mov    (%eax),%eax
81003a4a:	8d 48 04             	lea    0x4(%eax),%ecx
81003a4d:	8b 55 18             	mov    0x18(%ebp),%edx
81003a50:	89 0a                	mov    %ecx,(%edx)
81003a52:	8b 00                	mov    (%eax),%eax
81003a54:	0f b7 c0             	movzwl %ax,%eax
81003a57:	eb 0f                	jmp    81003a68 <_printf_i+0x1d4>
81003a59:	8b 45 18             	mov    0x18(%ebp),%eax
81003a5c:	8b 00                	mov    (%eax),%eax
81003a5e:	8d 48 04             	lea    0x4(%eax),%ecx
81003a61:	8b 55 18             	mov    0x18(%ebp),%edx
81003a64:	89 0a                	mov    %ecx,(%edx)
81003a66:	8b 00                	mov    (%eax),%eax
81003a68:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003a6b:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
81003a72:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a75:	8b 00                	mov    (%eax),%eax
81003a77:	83 e0 01             	and    $0x1,%eax
81003a7a:	85 c0                	test   %eax,%eax
81003a7c:	74 0f                	je     81003a8d <_printf_i+0x1f9>
81003a7e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a81:	8b 00                	mov    (%eax),%eax
81003a83:	83 c8 20             	or     $0x20,%eax
81003a86:	89 c2                	mov    %eax,%edx
81003a88:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a8b:	89 10                	mov    %edx,(%eax)
81003a8d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003a91:	75 11                	jne    81003aa4 <_printf_i+0x210>
81003a93:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a96:	8b 00                	mov    (%eax),%eax
81003a98:	83 e0 df             	and    $0xffffffdf,%eax
81003a9b:	89 c2                	mov    %eax,%edx
81003a9d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003aa0:	89 10                	mov    %edx,(%eax)
81003aa2:	eb 01                	jmp    81003aa5 <_printf_i+0x211>
81003aa4:	90                   	nop
81003aa5:	8b 45 0c             	mov    0xc(%ebp),%eax
81003aa8:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81003aac:	8b 45 0c             	mov    0xc(%ebp),%eax
81003aaf:	8b 50 04             	mov    0x4(%eax),%edx
81003ab2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ab5:	89 50 08             	mov    %edx,0x8(%eax)
81003ab8:	8b 45 0c             	mov    0xc(%ebp),%eax
81003abb:	8b 40 08             	mov    0x8(%eax),%eax
81003abe:	85 c0                	test   %eax,%eax
81003ac0:	78 0f                	js     81003ad1 <_printf_i+0x23d>
81003ac2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ac5:	8b 00                	mov    (%eax),%eax
81003ac7:	83 e0 fb             	and    $0xfffffffb,%eax
81003aca:	89 c2                	mov    %eax,%edx
81003acc:	8b 45 0c             	mov    0xc(%ebp),%eax
81003acf:	89 10                	mov    %edx,(%eax)
81003ad1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003ad5:	75 0a                	jne    81003ae1 <_printf_i+0x24d>
81003ad7:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ada:	8b 40 04             	mov    0x4(%eax),%eax
81003add:	85 c0                	test   %eax,%eax
81003adf:	74 34                	je     81003b15 <_printf_i+0x281>
81003ae1:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81003ae4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ae7:	ba 00 00 00 00       	mov    $0x0,%edx
81003aec:	f7 f1                	div    %ecx
81003aee:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003af1:	01 d0                	add    %edx,%eax
81003af3:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003af7:	0f b6 10             	movzbl (%eax),%edx
81003afa:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003afd:	88 10                	mov    %dl,(%eax)
81003aff:	8b 5d f0             	mov    -0x10(%ebp),%ebx
81003b02:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b05:	ba 00 00 00 00       	mov    $0x0,%edx
81003b0a:	f7 f3                	div    %ebx
81003b0c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003b0f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003b13:	75 cc                	jne    81003ae1 <_printf_i+0x24d>
81003b15:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81003b19:	75 26                	jne    81003b41 <_printf_i+0x2ad>
81003b1b:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b1e:	8b 00                	mov    (%eax),%eax
81003b20:	83 e0 01             	and    $0x1,%eax
81003b23:	85 c0                	test   %eax,%eax
81003b25:	74 1a                	je     81003b41 <_printf_i+0x2ad>
81003b27:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b2a:	8b 50 04             	mov    0x4(%eax),%edx
81003b2d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b30:	8b 40 10             	mov    0x10(%eax),%eax
81003b33:	39 c2                	cmp    %eax,%edx
81003b35:	7f 0a                	jg     81003b41 <_printf_i+0x2ad>
81003b37:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003b3b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003b3e:	c6 00 30             	movb   $0x30,(%eax)
81003b41:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b44:	83 c0 1b             	add    $0x1b,%eax
81003b47:	83 c0 28             	add    $0x28,%eax
81003b4a:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003b4d:	89 c2                	mov    %eax,%edx
81003b4f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b52:	89 50 10             	mov    %edx,0x10(%eax)
81003b55:	e9 e2 00 00 00       	jmp    81003c3c <_printf_i+0x3a8>
81003b5a:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b5d:	8b 00                	mov    (%eax),%eax
81003b5f:	25 80 00 00 00       	and    $0x80,%eax
81003b64:	85 c0                	test   %eax,%eax
81003b66:	74 19                	je     81003b81 <_printf_i+0x2ed>
81003b68:	8b 45 18             	mov    0x18(%ebp),%eax
81003b6b:	8b 00                	mov    (%eax),%eax
81003b6d:	8d 48 04             	lea    0x4(%eax),%ecx
81003b70:	8b 55 18             	mov    0x18(%ebp),%edx
81003b73:	89 0a                	mov    %ecx,(%edx)
81003b75:	8b 00                	mov    (%eax),%eax
81003b77:	8b 55 0c             	mov    0xc(%ebp),%edx
81003b7a:	8b 52 14             	mov    0x14(%edx),%edx
81003b7d:	89 10                	mov    %edx,(%eax)
81003b7f:	eb 3f                	jmp    81003bc0 <_printf_i+0x32c>
81003b81:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b84:	8b 00                	mov    (%eax),%eax
81003b86:	83 e0 40             	and    $0x40,%eax
81003b89:	85 c0                	test   %eax,%eax
81003b8b:	74 1c                	je     81003ba9 <_printf_i+0x315>
81003b8d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b90:	8b 58 14             	mov    0x14(%eax),%ebx
81003b93:	8b 45 18             	mov    0x18(%ebp),%eax
81003b96:	8b 00                	mov    (%eax),%eax
81003b98:	8d 48 04             	lea    0x4(%eax),%ecx
81003b9b:	8b 55 18             	mov    0x18(%ebp),%edx
81003b9e:	89 0a                	mov    %ecx,(%edx)
81003ba0:	8b 00                	mov    (%eax),%eax
81003ba2:	89 da                	mov    %ebx,%edx
81003ba4:	66 89 10             	mov    %dx,(%eax)
81003ba7:	eb 17                	jmp    81003bc0 <_printf_i+0x32c>
81003ba9:	8b 45 18             	mov    0x18(%ebp),%eax
81003bac:	8b 00                	mov    (%eax),%eax
81003bae:	8d 48 04             	lea    0x4(%eax),%ecx
81003bb1:	8b 55 18             	mov    0x18(%ebp),%edx
81003bb4:	89 0a                	mov    %ecx,(%edx)
81003bb6:	8b 00                	mov    (%eax),%eax
81003bb8:	8b 55 0c             	mov    0xc(%ebp),%edx
81003bbb:	8b 52 14             	mov    0x14(%edx),%edx
81003bbe:	89 10                	mov    %edx,(%eax)
81003bc0:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bc3:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81003bca:	eb 70                	jmp    81003c3c <_printf_i+0x3a8>
81003bcc:	8b 45 18             	mov    0x18(%ebp),%eax
81003bcf:	8b 00                	mov    (%eax),%eax
81003bd1:	8d 48 04             	lea    0x4(%eax),%ecx
81003bd4:	8b 55 18             	mov    0x18(%ebp),%edx
81003bd7:	89 0a                	mov    %ecx,(%edx)
81003bd9:	8b 00                	mov    (%eax),%eax
81003bdb:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003bde:	8b 45 0c             	mov    0xc(%ebp),%eax
81003be1:	8b 40 04             	mov    0x4(%eax),%eax
81003be4:	83 ec 04             	sub    $0x4,%esp
81003be7:	50                   	push   %eax
81003be8:	6a 00                	push   $0x0
81003bea:	ff 75 ec             	push   -0x14(%ebp)
81003bed:	e8 de f3 ff ff       	call   81002fd0 <memchr>
81003bf2:	83 c4 10             	add    $0x10,%esp
81003bf5:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003bf8:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81003bfc:	74 0e                	je     81003c0c <_printf_i+0x378>
81003bfe:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003c01:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003c04:	89 c2                	mov    %eax,%edx
81003c06:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c09:	89 50 04             	mov    %edx,0x4(%eax)
81003c0c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c0f:	8b 50 04             	mov    0x4(%eax),%edx
81003c12:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c15:	89 50 10             	mov    %edx,0x10(%eax)
81003c18:	eb 1a                	jmp    81003c34 <_printf_i+0x3a0>
81003c1a:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003c1e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c21:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81003c25:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003c28:	88 10                	mov    %dl,(%eax)
81003c2a:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c2d:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003c34:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c37:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81003c3b:	90                   	nop
81003c3c:	83 ec 0c             	sub    $0xc,%esp
81003c3f:	ff 75 14             	push   0x14(%ebp)
81003c42:	ff 75 10             	push   0x10(%ebp)
81003c45:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c48:	50                   	push   %eax
81003c49:	ff 75 0c             	push   0xc(%ebp)
81003c4c:	ff 75 08             	push   0x8(%ebp)
81003c4f:	e8 a5 fa ff ff       	call   810036f9 <_printf_common>
81003c54:	83 c4 20             	add    $0x20,%esp
81003c57:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003c5a:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
81003c5e:	74 72                	je     81003cd2 <_printf_i+0x43e>
81003c60:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c63:	8b 40 10             	mov    0x10(%eax),%eax
81003c66:	50                   	push   %eax
81003c67:	ff 75 ec             	push   -0x14(%ebp)
81003c6a:	ff 75 10             	push   0x10(%ebp)
81003c6d:	ff 75 08             	push   0x8(%ebp)
81003c70:	8b 45 14             	mov    0x14(%ebp),%eax
81003c73:	ff d0                	call   *%eax
81003c75:	83 c4 10             	add    $0x10,%esp
81003c78:	83 f8 ff             	cmp    $0xffffffff,%eax
81003c7b:	74 58                	je     81003cd5 <_printf_i+0x441>
81003c7d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c80:	8b 00                	mov    (%eax),%eax
81003c82:	83 e0 02             	and    $0x2,%eax
81003c85:	85 c0                	test   %eax,%eax
81003c87:	74 39                	je     81003cc2 <_printf_i+0x42e>
81003c89:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003c90:	eb 20                	jmp    81003cb2 <_printf_i+0x41e>
81003c92:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c95:	83 c0 19             	add    $0x19,%eax
81003c98:	6a 01                	push   $0x1
81003c9a:	50                   	push   %eax
81003c9b:	ff 75 10             	push   0x10(%ebp)
81003c9e:	ff 75 08             	push   0x8(%ebp)
81003ca1:	8b 45 14             	mov    0x14(%ebp),%eax
81003ca4:	ff d0                	call   *%eax
81003ca6:	83 c4 10             	add    $0x10,%esp
81003ca9:	83 f8 ff             	cmp    $0xffffffff,%eax
81003cac:	74 2a                	je     81003cd8 <_printf_i+0x444>
81003cae:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81003cb2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003cb5:	8b 40 0c             	mov    0xc(%eax),%eax
81003cb8:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003cbb:	29 d0                	sub    %edx,%eax
81003cbd:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81003cc0:	7c d0                	jl     81003c92 <_printf_i+0x3fe>
81003cc2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003cc5:	8b 50 0c             	mov    0xc(%eax),%edx
81003cc8:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003ccb:	39 c2                	cmp    %eax,%edx
81003ccd:	0f 4d c2             	cmovge %edx,%eax
81003cd0:	eb 0c                	jmp    81003cde <_printf_i+0x44a>
81003cd2:	90                   	nop
81003cd3:	eb 04                	jmp    81003cd9 <_printf_i+0x445>
81003cd5:	90                   	nop
81003cd6:	eb 01                	jmp    81003cd9 <_printf_i+0x445>
81003cd8:	90                   	nop
81003cd9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003cde:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003ce1:	c9                   	leave  
81003ce2:	c3                   	ret    

81003ce3 <_iprintf_r>:
81003ce3:	55                   	push   %ebp
81003ce4:	89 e5                	mov    %esp,%ebp
81003ce6:	83 ec 18             	sub    $0x18,%esp
81003ce9:	8d 45 10             	lea    0x10(%ebp),%eax
81003cec:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003cef:	8b 55 f0             	mov    -0x10(%ebp),%edx
81003cf2:	8b 45 08             	mov    0x8(%ebp),%eax
81003cf5:	8b 40 08             	mov    0x8(%eax),%eax
81003cf8:	52                   	push   %edx
81003cf9:	ff 75 0c             	push   0xc(%ebp)
81003cfc:	50                   	push   %eax
81003cfd:	ff 75 08             	push   0x8(%ebp)
81003d00:	e8 9e f6 ff ff       	call   810033a3 <_vfiprintf_r>
81003d05:	83 c4 10             	add    $0x10,%esp
81003d08:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d0b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d0e:	c9                   	leave  
81003d0f:	c3                   	ret    

81003d10 <iprintf>:
81003d10:	55                   	push   %ebp
81003d11:	89 e5                	mov    %esp,%ebp
81003d13:	83 ec 18             	sub    $0x18,%esp
81003d16:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81003d1b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d1e:	8d 45 0c             	lea    0xc(%ebp),%eax
81003d21:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003d24:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003d27:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d2a:	8b 40 08             	mov    0x8(%eax),%eax
81003d2d:	52                   	push   %edx
81003d2e:	ff 75 08             	push   0x8(%ebp)
81003d31:	50                   	push   %eax
81003d32:	ff 75 f4             	push   -0xc(%ebp)
81003d35:	e8 69 f6 ff ff       	call   810033a3 <_vfiprintf_r>
81003d3a:	83 c4 10             	add    $0x10,%esp
81003d3d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003d40:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d43:	c9                   	leave  
81003d44:	c3                   	ret    

81003d45 <_puts_r>:
81003d45:	55                   	push   %ebp
81003d46:	89 e5                	mov    %esp,%ebp
81003d48:	83 ec 38             	sub    $0x38,%esp
81003d4b:	83 ec 0c             	sub    $0xc,%esp
81003d4e:	ff 75 0c             	push   0xc(%ebp)
81003d51:	e8 1a 06 00 00       	call   81004370 <strlen>
81003d56:	83 c4 10             	add    $0x10,%esp
81003d59:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d5c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d5f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003d62:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d65:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003d68:	c7 45 d4 bc 69 00 81 	movl   $0x810069bc,-0x2c(%ebp)
81003d6f:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81003d76:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d79:	83 c0 01             	add    $0x1,%eax
81003d7c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003d7f:	8d 45 cc             	lea    -0x34(%ebp),%eax
81003d82:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003d85:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
81003d8c:	8b 45 08             	mov    0x8(%ebp),%eax
81003d8f:	8b 40 08             	mov    0x8(%eax),%eax
81003d92:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003d95:	8b 45 08             	mov    0x8(%ebp),%eax
81003d98:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003d9b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81003d9f:	74 18                	je     81003db9 <_puts_r+0x74>
81003da1:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003da4:	8b 40 38             	mov    0x38(%eax),%eax
81003da7:	85 c0                	test   %eax,%eax
81003da9:	75 0e                	jne    81003db9 <_puts_r+0x74>
81003dab:	83 ec 0c             	sub    $0xc,%esp
81003dae:	ff 75 ec             	push   -0x14(%ebp)
81003db1:	e8 19 d1 ff ff       	call   81000ecf <__sinit>
81003db6:	83 c4 10             	add    $0x10,%esp
81003db9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003dbc:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003dc0:	98                   	cwtl   
81003dc1:	25 00 20 00 00       	and    $0x2000,%eax
81003dc6:	85 c0                	test   %eax,%eax
81003dc8:	75 24                	jne    81003dee <_puts_r+0xa9>
81003dca:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003dcd:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003dd1:	80 cc 20             	or     $0x20,%ah
81003dd4:	89 c2                	mov    %eax,%edx
81003dd6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003dd9:	66 89 50 0c          	mov    %dx,0xc(%eax)
81003ddd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003de0:	8b 40 64             	mov    0x64(%eax),%eax
81003de3:	80 e4 df             	and    $0xdf,%ah
81003de6:	89 c2                	mov    %eax,%edx
81003de8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003deb:	89 50 64             	mov    %edx,0x64(%eax)
81003dee:	83 ec 04             	sub    $0x4,%esp
81003df1:	8d 45 dc             	lea    -0x24(%ebp),%eax
81003df4:	50                   	push   %eax
81003df5:	ff 75 f0             	push   -0x10(%ebp)
81003df8:	ff 75 08             	push   0x8(%ebp)
81003dfb:	e8 9f 10 00 00       	call   81004e9f <__sfvwrite_r>
81003e00:	83 c4 10             	add    $0x10,%esp
81003e03:	85 c0                	test   %eax,%eax
81003e05:	74 07                	je     81003e0e <_puts_r+0xc9>
81003e07:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003e0c:	eb 05                	jmp    81003e13 <_puts_r+0xce>
81003e0e:	b8 0a 00 00 00       	mov    $0xa,%eax
81003e13:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003e16:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003e19:	c9                   	leave  
81003e1a:	c3                   	ret    

81003e1b <puts>:
81003e1b:	55                   	push   %ebp
81003e1c:	89 e5                	mov    %esp,%ebp
81003e1e:	83 ec 08             	sub    $0x8,%esp
81003e21:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81003e26:	83 ec 08             	sub    $0x8,%esp
81003e29:	ff 75 08             	push   0x8(%ebp)
81003e2c:	50                   	push   %eax
81003e2d:	e8 13 ff ff ff       	call   81003d45 <_puts_r>
81003e32:	83 c4 10             	add    $0x10,%esp
81003e35:	c9                   	leave  
81003e36:	c3                   	ret    

81003e37 <lflush>:
81003e37:	55                   	push   %ebp
81003e38:	89 e5                	mov    %esp,%ebp
81003e3a:	83 ec 08             	sub    $0x8,%esp
81003e3d:	8b 45 08             	mov    0x8(%ebp),%eax
81003e40:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003e44:	98                   	cwtl   
81003e45:	83 e0 09             	and    $0x9,%eax
81003e48:	83 f8 09             	cmp    $0x9,%eax
81003e4b:	75 10                	jne    81003e5d <lflush+0x26>
81003e4d:	83 ec 0c             	sub    $0xc,%esp
81003e50:	ff 75 08             	push   0x8(%ebp)
81003e53:	e8 cc cb ff ff       	call   81000a24 <fflush>
81003e58:	83 c4 10             	add    $0x10,%esp
81003e5b:	eb 05                	jmp    81003e62 <lflush+0x2b>
81003e5d:	b8 00 00 00 00       	mov    $0x0,%eax
81003e62:	c9                   	leave  
81003e63:	c3                   	ret    

81003e64 <__srefill_r>:
81003e64:	55                   	push   %ebp
81003e65:	89 e5                	mov    %esp,%ebp
81003e67:	56                   	push   %esi
81003e68:	53                   	push   %ebx
81003e69:	83 ec 10             	sub    $0x10,%esp
81003e6c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003e6f:	8b 45 08             	mov    0x8(%ebp),%eax
81003e72:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003e75:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003e79:	74 18                	je     81003e93 <__srefill_r+0x2f>
81003e7b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e7e:	8b 40 38             	mov    0x38(%eax),%eax
81003e81:	85 c0                	test   %eax,%eax
81003e83:	75 0e                	jne    81003e93 <__srefill_r+0x2f>
81003e85:	83 ec 0c             	sub    $0xc,%esp
81003e88:	ff 75 f4             	push   -0xc(%ebp)
81003e8b:	e8 3f d0 ff ff       	call   81000ecf <__sinit>
81003e90:	83 c4 10             	add    $0x10,%esp
81003e93:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003e97:	98                   	cwtl   
81003e98:	25 00 20 00 00       	and    $0x2000,%eax
81003e9d:	85 c0                	test   %eax,%eax
81003e9f:	75 14                	jne    81003eb5 <__srefill_r+0x51>
81003ea1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003ea5:	80 cc 20             	or     $0x20,%ah
81003ea8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003eac:	8b 43 64             	mov    0x64(%ebx),%eax
81003eaf:	80 e4 df             	and    $0xdf,%ah
81003eb2:	89 43 64             	mov    %eax,0x64(%ebx)
81003eb5:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81003ebc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003ec0:	98                   	cwtl   
81003ec1:	83 e0 20             	and    $0x20,%eax
81003ec4:	85 c0                	test   %eax,%eax
81003ec6:	74 0a                	je     81003ed2 <__srefill_r+0x6e>
81003ec8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003ecd:	e9 8c 01 00 00       	jmp    8100405e <__srefill_r+0x1fa>
81003ed2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003ed6:	98                   	cwtl   
81003ed7:	83 e0 04             	and    $0x4,%eax
81003eda:	85 c0                	test   %eax,%eax
81003edc:	75 79                	jne    81003f57 <__srefill_r+0xf3>
81003ede:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003ee2:	98                   	cwtl   
81003ee3:	83 e0 10             	and    $0x10,%eax
81003ee6:	85 c0                	test   %eax,%eax
81003ee8:	75 1e                	jne    81003f08 <__srefill_r+0xa4>
81003eea:	8b 45 08             	mov    0x8(%ebp),%eax
81003eed:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81003ef3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003ef7:	83 c8 40             	or     $0x40,%eax
81003efa:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003efe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003f03:	e9 56 01 00 00       	jmp    8100405e <__srefill_r+0x1fa>
81003f08:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003f0c:	98                   	cwtl   
81003f0d:	83 e0 08             	and    $0x8,%eax
81003f10:	85 c0                	test   %eax,%eax
81003f12:	74 36                	je     81003f4a <__srefill_r+0xe6>
81003f14:	83 ec 08             	sub    $0x8,%esp
81003f17:	53                   	push   %ebx
81003f18:	ff 75 08             	push   0x8(%ebp)
81003f1b:	e8 ac ca ff ff       	call   810009cc <_fflush_r>
81003f20:	83 c4 10             	add    $0x10,%esp
81003f23:	85 c0                	test   %eax,%eax
81003f25:	74 0a                	je     81003f31 <__srefill_r+0xcd>
81003f27:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003f2c:	e9 2d 01 00 00       	jmp    8100405e <__srefill_r+0x1fa>
81003f31:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003f35:	83 e0 f7             	and    $0xfffffff7,%eax
81003f38:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003f3c:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81003f43:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
81003f4a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003f4e:	83 c8 04             	or     $0x4,%eax
81003f51:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003f55:	eb 46                	jmp    81003f9d <__srefill_r+0x139>
81003f57:	8b 43 30             	mov    0x30(%ebx),%eax
81003f5a:	85 c0                	test   %eax,%eax
81003f5c:	74 3f                	je     81003f9d <__srefill_r+0x139>
81003f5e:	8b 53 30             	mov    0x30(%ebx),%edx
81003f61:	8d 43 40             	lea    0x40(%ebx),%eax
81003f64:	39 c2                	cmp    %eax,%edx
81003f66:	74 12                	je     81003f7a <__srefill_r+0x116>
81003f68:	8b 43 30             	mov    0x30(%ebx),%eax
81003f6b:	83 ec 08             	sub    $0x8,%esp
81003f6e:	50                   	push   %eax
81003f6f:	ff 75 08             	push   0x8(%ebp)
81003f72:	e8 ba d0 ff ff       	call   81001031 <_free_r>
81003f77:	83 c4 10             	add    $0x10,%esp
81003f7a:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81003f81:	8b 43 3c             	mov    0x3c(%ebx),%eax
81003f84:	89 43 04             	mov    %eax,0x4(%ebx)
81003f87:	8b 43 04             	mov    0x4(%ebx),%eax
81003f8a:	85 c0                	test   %eax,%eax
81003f8c:	74 0f                	je     81003f9d <__srefill_r+0x139>
81003f8e:	8b 43 38             	mov    0x38(%ebx),%eax
81003f91:	89 03                	mov    %eax,(%ebx)
81003f93:	b8 00 00 00 00       	mov    $0x0,%eax
81003f98:	e9 c1 00 00 00       	jmp    8100405e <__srefill_r+0x1fa>
81003f9d:	8b 43 10             	mov    0x10(%ebx),%eax
81003fa0:	85 c0                	test   %eax,%eax
81003fa2:	75 0f                	jne    81003fb3 <__srefill_r+0x14f>
81003fa4:	83 ec 08             	sub    $0x8,%esp
81003fa7:	53                   	push   %ebx
81003fa8:	ff 75 08             	push   0x8(%ebp)
81003fab:	e8 c3 15 00 00       	call   81005573 <__smakebuf_r>
81003fb0:	83 c4 10             	add    $0x10,%esp
81003fb3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003fb7:	98                   	cwtl   
81003fb8:	83 e0 03             	and    $0x3,%eax
81003fbb:	85 c0                	test   %eax,%eax
81003fbd:	74 48                	je     81004007 <__srefill_r+0x1a3>
81003fbf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003fc3:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
81003fc7:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
81003fcd:	a1 fc 68 00 81       	mov    0x810068fc,%eax
81003fd2:	83 ec 08             	sub    $0x8,%esp
81003fd5:	68 37 3e 00 81       	push   $0x81003e37
81003fda:	50                   	push   %eax
81003fdb:	e8 8d d5 ff ff       	call   8100156d <_fwalk>
81003fe0:	83 c4 10             	add    $0x10,%esp
81003fe3:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
81003fe7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003feb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003fef:	98                   	cwtl   
81003ff0:	83 e0 09             	and    $0x9,%eax
81003ff3:	83 f8 09             	cmp    $0x9,%eax
81003ff6:	75 0f                	jne    81004007 <__srefill_r+0x1a3>
81003ff8:	83 ec 08             	sub    $0x8,%esp
81003ffb:	53                   	push   %ebx
81003ffc:	ff 75 08             	push   0x8(%ebp)
81003fff:	e8 a2 c7 ff ff       	call   810007a6 <__sflush_r>
81004004:	83 c4 10             	add    $0x10,%esp
81004007:	8b 43 10             	mov    0x10(%ebx),%eax
8100400a:	89 03                	mov    %eax,(%ebx)
8100400c:	8b 43 20             	mov    0x20(%ebx),%eax
8100400f:	8b 73 14             	mov    0x14(%ebx),%esi
81004012:	8b 0b                	mov    (%ebx),%ecx
81004014:	8b 53 1c             	mov    0x1c(%ebx),%edx
81004017:	56                   	push   %esi
81004018:	51                   	push   %ecx
81004019:	52                   	push   %edx
8100401a:	ff 75 08             	push   0x8(%ebp)
8100401d:	ff d0                	call   *%eax
8100401f:	83 c4 10             	add    $0x10,%esp
81004022:	89 43 04             	mov    %eax,0x4(%ebx)
81004025:	8b 43 04             	mov    0x4(%ebx),%eax
81004028:	85 c0                	test   %eax,%eax
8100402a:	7f 2d                	jg     81004059 <__srefill_r+0x1f5>
8100402c:	8b 43 04             	mov    0x4(%ebx),%eax
8100402f:	85 c0                	test   %eax,%eax
81004031:	75 0d                	jne    81004040 <__srefill_r+0x1dc>
81004033:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004037:	83 c8 20             	or     $0x20,%eax
8100403a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100403e:	eb 12                	jmp    81004052 <__srefill_r+0x1ee>
81004040:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004047:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100404b:	83 c8 40             	or     $0x40,%eax
8100404e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004052:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004057:	eb 05                	jmp    8100405e <__srefill_r+0x1fa>
81004059:	b8 00 00 00 00       	mov    $0x0,%eax
8100405e:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004061:	5b                   	pop    %ebx
81004062:	5e                   	pop    %esi
81004063:	5d                   	pop    %ebp
81004064:	c3                   	ret    

81004065 <_sbrk_r>:
81004065:	55                   	push   %ebp
81004066:	89 e5                	mov    %esp,%ebp
81004068:	83 ec 18             	sub    $0x18,%esp
8100406b:	c7 05 f0 7c 00 81 00 	movl   $0x0,0x81007cf0
81004072:	00 00 00 
81004075:	83 ec 0c             	sub    $0xc,%esp
81004078:	ff 75 0c             	push   0xc(%ebp)
8100407b:	e8 b0 c6 ff ff       	call   81000730 <sbrk>
81004080:	83 c4 10             	add    $0x10,%esp
81004083:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004086:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100408a:	75 14                	jne    810040a0 <_sbrk_r+0x3b>
8100408c:	a1 f0 7c 00 81       	mov    0x81007cf0,%eax
81004091:	85 c0                	test   %eax,%eax
81004093:	74 0b                	je     810040a0 <_sbrk_r+0x3b>
81004095:	8b 15 f0 7c 00 81    	mov    0x81007cf0,%edx
8100409b:	8b 45 08             	mov    0x8(%ebp),%eax
8100409e:	89 10                	mov    %edx,(%eax)
810040a0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040a3:	c9                   	leave  
810040a4:	c3                   	ret    

810040a5 <__sread>:
810040a5:	55                   	push   %ebp
810040a6:	89 e5                	mov    %esp,%ebp
810040a8:	56                   	push   %esi
810040a9:	53                   	push   %ebx
810040aa:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810040ad:	8b 55 14             	mov    0x14(%ebp),%edx
810040b0:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810040b4:	98                   	cwtl   
810040b5:	52                   	push   %edx
810040b6:	ff 75 10             	push   0x10(%ebp)
810040b9:	50                   	push   %eax
810040ba:	ff 75 08             	push   0x8(%ebp)
810040bd:	e8 5f 18 00 00       	call   81005921 <_read_r>
810040c2:	83 c4 10             	add    $0x10,%esp
810040c5:	89 c6                	mov    %eax,%esi
810040c7:	85 f6                	test   %esi,%esi
810040c9:	78 0a                	js     810040d5 <__sread+0x30>
810040cb:	8b 43 50             	mov    0x50(%ebx),%eax
810040ce:	01 f0                	add    %esi,%eax
810040d0:	89 43 50             	mov    %eax,0x50(%ebx)
810040d3:	eb 0b                	jmp    810040e0 <__sread+0x3b>
810040d5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810040d9:	80 e4 ef             	and    $0xef,%ah
810040dc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810040e0:	89 f0                	mov    %esi,%eax
810040e2:	8d 65 f8             	lea    -0x8(%ebp),%esp
810040e5:	5b                   	pop    %ebx
810040e6:	5e                   	pop    %esi
810040e7:	5d                   	pop    %ebp
810040e8:	c3                   	ret    

810040e9 <__seofread>:
810040e9:	55                   	push   %ebp
810040ea:	89 e5                	mov    %esp,%ebp
810040ec:	b8 00 00 00 00       	mov    $0x0,%eax
810040f1:	5d                   	pop    %ebp
810040f2:	c3                   	ret    

810040f3 <__swrite>:
810040f3:	55                   	push   %ebp
810040f4:	89 e5                	mov    %esp,%ebp
810040f6:	53                   	push   %ebx
810040f7:	83 ec 14             	sub    $0x14,%esp
810040fa:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810040fd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004101:	98                   	cwtl   
81004102:	25 00 01 00 00       	and    $0x100,%eax
81004107:	85 c0                	test   %eax,%eax
81004109:	74 15                	je     81004120 <__swrite+0x2d>
8100410b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100410f:	98                   	cwtl   
81004110:	6a 02                	push   $0x2
81004112:	6a 00                	push   $0x0
81004114:	50                   	push   %eax
81004115:	ff 75 08             	push   0x8(%ebp)
81004118:	e8 10 14 00 00       	call   8100552d <_lseek_r>
8100411d:	83 c4 10             	add    $0x10,%esp
81004120:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004124:	80 e4 ef             	and    $0xef,%ah
81004127:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100412b:	8b 55 14             	mov    0x14(%ebp),%edx
8100412e:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81004132:	98                   	cwtl   
81004133:	52                   	push   %edx
81004134:	ff 75 10             	push   0x10(%ebp)
81004137:	50                   	push   %eax
81004138:	ff 75 08             	push   0x8(%ebp)
8100413b:	e8 42 07 00 00       	call   81004882 <_write_r>
81004140:	83 c4 10             	add    $0x10,%esp
81004143:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004146:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004149:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100414c:	c9                   	leave  
8100414d:	c3                   	ret    

8100414e <__sseek>:
8100414e:	55                   	push   %ebp
8100414f:	89 e5                	mov    %esp,%ebp
81004151:	56                   	push   %esi
81004152:	53                   	push   %ebx
81004153:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004156:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100415a:	98                   	cwtl   
8100415b:	ff 75 14             	push   0x14(%ebp)
8100415e:	ff 75 10             	push   0x10(%ebp)
81004161:	50                   	push   %eax
81004162:	ff 75 08             	push   0x8(%ebp)
81004165:	e8 c3 13 00 00       	call   8100552d <_lseek_r>
8100416a:	83 c4 10             	add    $0x10,%esp
8100416d:	89 c6                	mov    %eax,%esi
8100416f:	83 fe ff             	cmp    $0xffffffff,%esi
81004172:	75 0d                	jne    81004181 <__sseek+0x33>
81004174:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004178:	80 e4 ef             	and    $0xef,%ah
8100417b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100417f:	eb 0e                	jmp    8100418f <__sseek+0x41>
81004181:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004185:	80 cc 10             	or     $0x10,%ah
81004188:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100418c:	89 73 50             	mov    %esi,0x50(%ebx)
8100418f:	89 f0                	mov    %esi,%eax
81004191:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004194:	5b                   	pop    %ebx
81004195:	5e                   	pop    %esi
81004196:	5d                   	pop    %ebp
81004197:	c3                   	ret    

81004198 <__sclose>:
81004198:	55                   	push   %ebp
81004199:	89 e5                	mov    %esp,%ebp
8100419b:	83 ec 18             	sub    $0x18,%esp
8100419e:	8b 45 0c             	mov    0xc(%ebp),%eax
810041a1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810041a4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041a7:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
810041ab:	98                   	cwtl   
810041ac:	83 ec 08             	sub    $0x8,%esp
810041af:	50                   	push   %eax
810041b0:	ff 75 08             	push   0x8(%ebp)
810041b3:	e8 6b 08 00 00       	call   81004a23 <_close_r>
810041b8:	83 c4 10             	add    $0x10,%esp
810041bb:	c9                   	leave  
810041bc:	c3                   	ret    
810041bd:	66 90                	xchg   %ax,%ax
810041bf:	90                   	nop

810041c0 <strchr>:
810041c0:	55                   	push   %ebp
810041c1:	89 e5                	mov    %esp,%ebp
810041c3:	57                   	push   %edi
810041c4:	53                   	push   %ebx
810041c5:	31 db                	xor    %ebx,%ebx
810041c7:	8b 7d 08             	mov    0x8(%ebp),%edi
810041ca:	02 5d 0c             	add    0xc(%ebp),%bl
810041cd:	0f 84 98 00 00 00    	je     8100426b <L25>
810041d3:	f7 c7 03 00 00 00    	test   $0x3,%edi
810041d9:	74 37                	je     81004212 <L5>
810041db:	89 f8                	mov    %edi,%eax
810041dd:	8a 08                	mov    (%eax),%cl
810041df:	84 c9                	test   %cl,%cl
810041e1:	74 7b                	je     8100425e <L14>
810041e3:	38 d9                	cmp    %bl,%cl
810041e5:	74 7d                	je     81004264 <L19>
810041e7:	47                   	inc    %edi
810041e8:	f7 c7 03 00 00 00    	test   $0x3,%edi
810041ee:	74 22                	je     81004212 <L5>
810041f0:	89 f8                	mov    %edi,%eax
810041f2:	8a 08                	mov    (%eax),%cl
810041f4:	84 c9                	test   %cl,%cl
810041f6:	74 66                	je     8100425e <L14>
810041f8:	38 d9                	cmp    %bl,%cl
810041fa:	74 68                	je     81004264 <L19>
810041fc:	47                   	inc    %edi
810041fd:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004203:	74 0d                	je     81004212 <L5>
81004205:	89 f8                	mov    %edi,%eax
81004207:	8a 08                	mov    (%eax),%cl
81004209:	84 c9                	test   %cl,%cl
8100420b:	74 51                	je     8100425e <L14>
8100420d:	38 d9                	cmp    %bl,%cl
8100420f:	74 53                	je     81004264 <L19>
81004211:	47                   	inc    %edi

81004212 <L5>:
81004212:	89 d9                	mov    %ebx,%ecx
81004214:	c1 e3 08             	shl    $0x8,%ebx
81004217:	83 ef 04             	sub    $0x4,%edi
8100421a:	09 cb                	or     %ecx,%ebx
8100421c:	89 da                	mov    %ebx,%edx
8100421e:	c1 e3 10             	shl    $0x10,%ebx
81004221:	09 d3                	or     %edx,%ebx

81004223 <L10>:
81004223:	83 c7 04             	add    $0x4,%edi
81004226:	8b 0f                	mov    (%edi),%ecx
81004228:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8100422e:	89 c8                	mov    %ecx,%eax
81004230:	f7 d0                	not    %eax
81004232:	21 c2                	and    %eax,%edx
81004234:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
8100423a:	75 14                	jne    81004250 <L9>
8100423c:	31 d9                	xor    %ebx,%ecx
8100423e:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81004244:	f7 d1                	not    %ecx
81004246:	21 ca                	and    %ecx,%edx
81004248:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
8100424e:	74 d3                	je     81004223 <L10>

81004250 <L9>:
81004250:	8d 47 ff             	lea    -0x1(%edi),%eax

81004253 <L15>:
81004253:	40                   	inc    %eax
81004254:	8a 10                	mov    (%eax),%dl
81004256:	84 d2                	test   %dl,%dl
81004258:	74 04                	je     8100425e <L14>
8100425a:	38 da                	cmp    %bl,%dl
8100425c:	75 f5                	jne    81004253 <L15>

8100425e <L14>:
8100425e:	38 18                	cmp    %bl,(%eax)
81004260:	74 02                	je     81004264 <L19>
81004262:	31 c0                	xor    %eax,%eax

81004264 <L19>:
81004264:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004267:	5b                   	pop    %ebx
81004268:	5f                   	pop    %edi
81004269:	c9                   	leave  
8100426a:	c3                   	ret    

8100426b <L25>:
8100426b:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004271:	74 2b                	je     8100429e <L26>
81004273:	89 f8                	mov    %edi,%eax
81004275:	8a 08                	mov    (%eax),%cl
81004277:	84 c9                	test   %cl,%cl
81004279:	74 e9                	je     81004264 <L19>
8100427b:	47                   	inc    %edi
8100427c:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004282:	74 1a                	je     8100429e <L26>
81004284:	89 f8                	mov    %edi,%eax
81004286:	8a 08                	mov    (%eax),%cl
81004288:	84 c9                	test   %cl,%cl
8100428a:	74 d8                	je     81004264 <L19>
8100428c:	47                   	inc    %edi
8100428d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004293:	74 09                	je     8100429e <L26>
81004295:	89 f8                	mov    %edi,%eax
81004297:	8a 08                	mov    (%eax),%cl
81004299:	84 c9                	test   %cl,%cl
8100429b:	74 c7                	je     81004264 <L19>
8100429d:	47                   	inc    %edi

8100429e <L26>:
8100429e:	83 ef 04             	sub    $0x4,%edi

810042a1 <L27>:
810042a1:	83 c7 04             	add    $0x4,%edi
810042a4:	8b 0f                	mov    (%edi),%ecx
810042a6:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810042ac:	89 c8                	mov    %ecx,%eax
810042ae:	f7 d0                	not    %eax
810042b0:	21 c2                	and    %eax,%edx
810042b2:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810042b8:	74 e7                	je     810042a1 <L27>
810042ba:	eb 94                	jmp    81004250 <L9>

810042bc <strcmp>:
810042bc:	55                   	push   %ebp
810042bd:	89 e5                	mov    %esp,%ebp
810042bf:	83 ec 10             	sub    $0x10,%esp
810042c2:	8b 55 08             	mov    0x8(%ebp),%edx
810042c5:	8b 45 0c             	mov    0xc(%ebp),%eax
810042c8:	09 d0                	or     %edx,%eax
810042ca:	83 e0 03             	and    $0x3,%eax
810042cd:	85 c0                	test   %eax,%eax
810042cf:	75 5e                	jne    8100432f <strcmp+0x73>
810042d1:	8b 45 08             	mov    0x8(%ebp),%eax
810042d4:	89 45 fc             	mov    %eax,-0x4(%ebp)
810042d7:	8b 45 0c             	mov    0xc(%ebp),%eax
810042da:	89 45 f8             	mov    %eax,-0x8(%ebp)
810042dd:	eb 2c                	jmp    8100430b <strcmp+0x4f>
810042df:	8b 45 fc             	mov    -0x4(%ebp),%eax
810042e2:	8b 00                	mov    (%eax),%eax
810042e4:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
810042ea:	8b 45 fc             	mov    -0x4(%ebp),%eax
810042ed:	8b 00                	mov    (%eax),%eax
810042ef:	f7 d0                	not    %eax
810042f1:	21 d0                	and    %edx,%eax
810042f3:	25 80 80 80 80       	and    $0x80808080,%eax
810042f8:	85 c0                	test   %eax,%eax
810042fa:	74 07                	je     81004303 <strcmp+0x47>
810042fc:	b8 00 00 00 00       	mov    $0x0,%eax
81004301:	eb 5c                	jmp    8100435f <strcmp+0xa3>
81004303:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81004307:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
8100430b:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100430e:	8b 10                	mov    (%eax),%edx
81004310:	8b 45 f8             	mov    -0x8(%ebp),%eax
81004313:	8b 00                	mov    (%eax),%eax
81004315:	39 c2                	cmp    %eax,%edx
81004317:	74 c6                	je     810042df <strcmp+0x23>
81004319:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100431c:	89 45 08             	mov    %eax,0x8(%ebp)
8100431f:	8b 45 f8             	mov    -0x8(%ebp),%eax
81004322:	89 45 0c             	mov    %eax,0xc(%ebp)
81004325:	eb 08                	jmp    8100432f <strcmp+0x73>
81004327:	83 45 08 01          	addl   $0x1,0x8(%ebp)
8100432b:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
8100432f:	8b 45 08             	mov    0x8(%ebp),%eax
81004332:	0f b6 00             	movzbl (%eax),%eax
81004335:	84 c0                	test   %al,%al
81004337:	74 10                	je     81004349 <strcmp+0x8d>
81004339:	8b 45 08             	mov    0x8(%ebp),%eax
8100433c:	0f b6 10             	movzbl (%eax),%edx
8100433f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004342:	0f b6 00             	movzbl (%eax),%eax
81004345:	38 c2                	cmp    %al,%dl
81004347:	74 de                	je     81004327 <strcmp+0x6b>
81004349:	8b 45 08             	mov    0x8(%ebp),%eax
8100434c:	0f b6 00             	movzbl (%eax),%eax
8100434f:	0f b6 d0             	movzbl %al,%edx
81004352:	8b 45 0c             	mov    0xc(%ebp),%eax
81004355:	0f b6 00             	movzbl (%eax),%eax
81004358:	0f b6 c8             	movzbl %al,%ecx
8100435b:	89 d0                	mov    %edx,%eax
8100435d:	29 c8                	sub    %ecx,%eax
8100435f:	c9                   	leave  
81004360:	c3                   	ret    
81004361:	66 90                	xchg   %ax,%ax
81004363:	66 90                	xchg   %ax,%ax
81004365:	66 90                	xchg   %ax,%ax
81004367:	66 90                	xchg   %ax,%ax
81004369:	66 90                	xchg   %ax,%ax
8100436b:	66 90                	xchg   %ax,%ax
8100436d:	66 90                	xchg   %ax,%ax
8100436f:	90                   	nop

81004370 <strlen>:
81004370:	55                   	push   %ebp
81004371:	89 e5                	mov    %esp,%ebp
81004373:	57                   	push   %edi
81004374:	8b 55 08             	mov    0x8(%ebp),%edx
81004377:	89 d7                	mov    %edx,%edi
81004379:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100437f:	74 25                	je     810043a6 <L5>
81004381:	8a 0f                	mov    (%edi),%cl
81004383:	47                   	inc    %edi
81004384:	84 c9                	test   %cl,%cl
81004386:	74 56                	je     810043de <L15>
81004388:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100438e:	74 16                	je     810043a6 <L5>
81004390:	8a 0f                	mov    (%edi),%cl
81004392:	47                   	inc    %edi
81004393:	84 c9                	test   %cl,%cl
81004395:	74 47                	je     810043de <L15>
81004397:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100439d:	74 07                	je     810043a6 <L5>
8100439f:	8a 0f                	mov    (%edi),%cl
810043a1:	47                   	inc    %edi
810043a2:	84 c9                	test   %cl,%cl
810043a4:	74 38                	je     810043de <L15>

810043a6 <L5>:
810043a6:	83 ef 04             	sub    $0x4,%edi
810043a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

810043b0 <L10>:
810043b0:	83 c7 04             	add    $0x4,%edi
810043b3:	8b 0f                	mov    (%edi),%ecx
810043b5:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
810043bb:	f7 d1                	not    %ecx
810043bd:	21 c8                	and    %ecx,%eax
810043bf:	a9 80 80 80 80       	test   $0x80808080,%eax
810043c4:	74 ea                	je     810043b0 <L10>
810043c6:	f7 d1                	not    %ecx
810043c8:	47                   	inc    %edi
810043c9:	84 c9                	test   %cl,%cl
810043cb:	74 11                	je     810043de <L15>
810043cd:	47                   	inc    %edi
810043ce:	c1 e9 08             	shr    $0x8,%ecx
810043d1:	84 c9                	test   %cl,%cl
810043d3:	74 09                	je     810043de <L15>
810043d5:	47                   	inc    %edi
810043d6:	c1 e9 08             	shr    $0x8,%ecx
810043d9:	84 c9                	test   %cl,%cl
810043db:	74 01                	je     810043de <L15>
810043dd:	47                   	inc    %edi

810043de <L15>:
810043de:	29 d7                	sub    %edx,%edi
810043e0:	8d 47 ff             	lea    -0x1(%edi),%eax
810043e3:	8d 65 fc             	lea    -0x4(%ebp),%esp
810043e6:	5f                   	pop    %edi
810043e7:	c9                   	leave  
810043e8:	c3                   	ret    

810043e9 <strtok>:
810043e9:	55                   	push   %ebp
810043ea:	89 e5                	mov    %esp,%ebp
810043ec:	83 ec 18             	sub    $0x18,%esp
810043ef:	8b 55 08             	mov    0x8(%ebp),%edx
810043f2:	8b 4d 0c             	mov    0xc(%ebp),%ecx
810043f5:	a1 a4 70 00 81       	mov    0x810070a4,%eax
810043fa:	89 45 f4             	mov    %eax,-0xc(%ebp)
810043fd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004400:	83 c0 5c             	add    $0x5c,%eax
81004403:	6a 01                	push   $0x1
81004405:	50                   	push   %eax
81004406:	51                   	push   %ecx
81004407:	52                   	push   %edx
81004408:	e8 05 00 00 00       	call   81004412 <__strtok_r>
8100440d:	83 c4 10             	add    $0x10,%esp
81004410:	c9                   	leave  
81004411:	c3                   	ret    

81004412 <__strtok_r>:
81004412:	55                   	push   %ebp
81004413:	89 e5                	mov    %esp,%ebp
81004415:	57                   	push   %edi
81004416:	56                   	push   %esi
81004417:	53                   	push   %ebx
81004418:	83 ec 10             	sub    $0x10,%esp
8100441b:	8b 45 08             	mov    0x8(%ebp),%eax
8100441e:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81004421:	85 c0                	test   %eax,%eax
81004423:	75 13                	jne    81004438 <__strtok_r+0x26>
81004425:	8b 45 10             	mov    0x10(%ebp),%eax
81004428:	8b 00                	mov    (%eax),%eax
8100442a:	85 c0                	test   %eax,%eax
8100442c:	75 0a                	jne    81004438 <__strtok_r+0x26>
8100442e:	b8 00 00 00 00       	mov    $0x0,%eax
81004433:	e9 92 00 00 00       	jmp    810044ca <__strtok_r+0xb8>
81004438:	90                   	nop
81004439:	89 c2                	mov    %eax,%edx
8100443b:	8d 42 01             	lea    0x1(%edx),%eax
8100443e:	0f b6 12             	movzbl (%edx),%edx
81004441:	0f be f2             	movsbl %dl,%esi
81004444:	89 cf                	mov    %ecx,%edi
81004446:	eb 1c                	jmp    81004464 <__strtok_r+0x52>
81004448:	39 de                	cmp    %ebx,%esi
8100444a:	75 18                	jne    81004464 <__strtok_r+0x52>
8100444c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81004450:	74 02                	je     81004454 <__strtok_r+0x42>
81004452:	eb e5                	jmp    81004439 <__strtok_r+0x27>
81004454:	8b 55 10             	mov    0x10(%ebp),%edx
81004457:	89 02                	mov    %eax,(%edx)
81004459:	8d 50 ff             	lea    -0x1(%eax),%edx
8100445c:	c6 02 00             	movb   $0x0,(%edx)
8100445f:	83 e8 01             	sub    $0x1,%eax
81004462:	eb 66                	jmp    810044ca <__strtok_r+0xb8>
81004464:	89 fa                	mov    %edi,%edx
81004466:	8d 7a 01             	lea    0x1(%edx),%edi
81004469:	0f b6 12             	movzbl (%edx),%edx
8100446c:	0f be da             	movsbl %dl,%ebx
8100446f:	85 db                	test   %ebx,%ebx
81004471:	75 d5                	jne    81004448 <__strtok_r+0x36>
81004473:	85 f6                	test   %esi,%esi
81004475:	75 10                	jne    81004487 <__strtok_r+0x75>
81004477:	8b 45 10             	mov    0x10(%ebp),%eax
8100447a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81004480:	b8 00 00 00 00       	mov    $0x0,%eax
81004485:	eb 43                	jmp    810044ca <__strtok_r+0xb8>
81004487:	8d 50 ff             	lea    -0x1(%eax),%edx
8100448a:	89 55 f0             	mov    %edx,-0x10(%ebp)
8100448d:	89 c2                	mov    %eax,%edx
8100448f:	8d 42 01             	lea    0x1(%edx),%eax
81004492:	0f b6 12             	movzbl (%edx),%edx
81004495:	0f be f2             	movsbl %dl,%esi
81004498:	89 cf                	mov    %ecx,%edi
8100449a:	89 fa                	mov    %edi,%edx
8100449c:	8d 7a 01             	lea    0x1(%edx),%edi
8100449f:	0f b6 12             	movzbl (%edx),%edx
810044a2:	0f be da             	movsbl %dl,%ebx
810044a5:	39 f3                	cmp    %esi,%ebx
810044a7:	75 1b                	jne    810044c4 <__strtok_r+0xb2>
810044a9:	85 f6                	test   %esi,%esi
810044ab:	75 07                	jne    810044b4 <__strtok_r+0xa2>
810044ad:	b8 00 00 00 00       	mov    $0x0,%eax
810044b2:	eb 06                	jmp    810044ba <__strtok_r+0xa8>
810044b4:	8d 50 ff             	lea    -0x1(%eax),%edx
810044b7:	c6 02 00             	movb   $0x0,(%edx)
810044ba:	8b 55 10             	mov    0x10(%ebp),%edx
810044bd:	89 02                	mov    %eax,(%edx)
810044bf:	8b 45 f0             	mov    -0x10(%ebp),%eax
810044c2:	eb 06                	jmp    810044ca <__strtok_r+0xb8>
810044c4:	85 db                	test   %ebx,%ebx
810044c6:	75 d2                	jne    8100449a <__strtok_r+0x88>
810044c8:	eb c3                	jmp    8100448d <__strtok_r+0x7b>
810044ca:	83 c4 10             	add    $0x10,%esp
810044cd:	5b                   	pop    %ebx
810044ce:	5e                   	pop    %esi
810044cf:	5f                   	pop    %edi
810044d0:	5d                   	pop    %ebp
810044d1:	c3                   	ret    

810044d2 <strtok_r>:
810044d2:	55                   	push   %ebp
810044d3:	89 e5                	mov    %esp,%ebp
810044d5:	8b 45 08             	mov    0x8(%ebp),%eax
810044d8:	8b 55 0c             	mov    0xc(%ebp),%edx
810044db:	6a 01                	push   $0x1
810044dd:	ff 75 10             	push   0x10(%ebp)
810044e0:	52                   	push   %edx
810044e1:	50                   	push   %eax
810044e2:	e8 2b ff ff ff       	call   81004412 <__strtok_r>
810044e7:	83 c4 10             	add    $0x10,%esp
810044ea:	c9                   	leave  
810044eb:	c3                   	ret    

810044ec <__locale_ctype_ptr_l>:
810044ec:	55                   	push   %ebp
810044ed:	89 e5                	mov    %esp,%ebp
810044ef:	b8 40 6b 00 81       	mov    $0x81006b40,%eax
810044f4:	5d                   	pop    %ebp
810044f5:	c3                   	ret    

810044f6 <__get_global_locale>:
810044f6:	55                   	push   %ebp
810044f7:	89 e5                	mov    %esp,%ebp
810044f9:	b8 e0 74 00 81       	mov    $0x810074e0,%eax
810044fe:	5d                   	pop    %ebp
810044ff:	c3                   	ret    

81004500 <__get_current_locale>:
81004500:	55                   	push   %ebp
81004501:	89 e5                	mov    %esp,%ebp
81004503:	e8 ee ff ff ff       	call   810044f6 <__get_global_locale>
81004508:	5d                   	pop    %ebp
81004509:	c3                   	ret    

8100450a <_strtol_l>:
8100450a:	55                   	push   %ebp
8100450b:	89 e5                	mov    %esp,%ebp
8100450d:	57                   	push   %edi
8100450e:	56                   	push   %esi
8100450f:	53                   	push   %ebx
81004510:	83 ec 1c             	sub    $0x1c,%esp
81004513:	8b 75 0c             	mov    0xc(%ebp),%esi
81004516:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100451d:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81004521:	78 0c                	js     8100452f <_strtol_l+0x25>
81004523:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81004527:	74 06                	je     8100452f <_strtol_l+0x25>
81004529:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
8100452d:	7e 15                	jle    81004544 <_strtol_l+0x3a>
8100452f:	e8 2f 05 00 00       	call   81004a63 <__errno>
81004534:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
8100453a:	b8 00 00 00 00       	mov    $0x0,%eax
8100453f:	e9 90 01 00 00       	jmp    810046d4 <_strtol_l+0x1ca>
81004544:	89 f0                	mov    %esi,%eax
81004546:	8d 70 01             	lea    0x1(%eax),%esi
81004549:	0f b6 00             	movzbl (%eax),%eax
8100454c:	0f b6 d8             	movzbl %al,%ebx
8100454f:	83 ec 0c             	sub    $0xc,%esp
81004552:	ff 75 18             	push   0x18(%ebp)
81004555:	e8 92 ff ff ff       	call   810044ec <__locale_ctype_ptr_l>
8100455a:	83 c4 10             	add    $0x10,%esp
8100455d:	89 da                	mov    %ebx,%edx
8100455f:	83 c2 01             	add    $0x1,%edx
81004562:	01 d0                	add    %edx,%eax
81004564:	0f b6 00             	movzbl (%eax),%eax
81004567:	0f be c0             	movsbl %al,%eax
8100456a:	83 e0 08             	and    $0x8,%eax
8100456d:	85 c0                	test   %eax,%eax
8100456f:	75 d3                	jne    81004544 <_strtol_l+0x3a>
81004571:	83 fb 2d             	cmp    $0x2d,%ebx
81004574:	75 14                	jne    8100458a <_strtol_l+0x80>
81004576:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100457d:	89 f0                	mov    %esi,%eax
8100457f:	8d 70 01             	lea    0x1(%eax),%esi
81004582:	0f b6 00             	movzbl (%eax),%eax
81004585:	0f b6 d8             	movzbl %al,%ebx
81004588:	eb 10                	jmp    8100459a <_strtol_l+0x90>
8100458a:	83 fb 2b             	cmp    $0x2b,%ebx
8100458d:	75 0b                	jne    8100459a <_strtol_l+0x90>
8100458f:	89 f0                	mov    %esi,%eax
81004591:	8d 70 01             	lea    0x1(%eax),%esi
81004594:	0f b6 00             	movzbl (%eax),%eax
81004597:	0f b6 d8             	movzbl %al,%ebx
8100459a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100459e:	74 06                	je     810045a6 <_strtol_l+0x9c>
810045a0:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
810045a4:	75 26                	jne    810045cc <_strtol_l+0xc2>
810045a6:	83 fb 30             	cmp    $0x30,%ebx
810045a9:	75 21                	jne    810045cc <_strtol_l+0xc2>
810045ab:	0f b6 06             	movzbl (%esi),%eax
810045ae:	3c 78                	cmp    $0x78,%al
810045b0:	74 07                	je     810045b9 <_strtol_l+0xaf>
810045b2:	0f b6 06             	movzbl (%esi),%eax
810045b5:	3c 58                	cmp    $0x58,%al
810045b7:	75 13                	jne    810045cc <_strtol_l+0xc2>
810045b9:	8d 46 01             	lea    0x1(%esi),%eax
810045bc:	0f b6 00             	movzbl (%eax),%eax
810045bf:	0f b6 d8             	movzbl %al,%ebx
810045c2:	83 c6 02             	add    $0x2,%esi
810045c5:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
810045cc:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810045d0:	75 14                	jne    810045e6 <_strtol_l+0xdc>
810045d2:	83 fb 30             	cmp    $0x30,%ebx
810045d5:	75 07                	jne    810045de <_strtol_l+0xd4>
810045d7:	b8 08 00 00 00       	mov    $0x8,%eax
810045dc:	eb 05                	jmp    810045e3 <_strtol_l+0xd9>
810045de:	b8 0a 00 00 00       	mov    $0xa,%eax
810045e3:	89 45 14             	mov    %eax,0x14(%ebp)
810045e6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810045ea:	74 07                	je     810045f3 <_strtol_l+0xe9>
810045ec:	b8 00 00 00 80       	mov    $0x80000000,%eax
810045f1:	eb 05                	jmp    810045f8 <_strtol_l+0xee>
810045f3:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
810045f8:	89 c7                	mov    %eax,%edi
810045fa:	8b 4d 14             	mov    0x14(%ebp),%ecx
810045fd:	89 f8                	mov    %edi,%eax
810045ff:	ba 00 00 00 00       	mov    $0x0,%edx
81004604:	f7 f1                	div    %ecx
81004606:	89 d0                	mov    %edx,%eax
81004608:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100460b:	8b 4d 14             	mov    0x14(%ebp),%ecx
8100460e:	89 f8                	mov    %edi,%eax
81004610:	ba 00 00 00 00       	mov    $0x0,%edx
81004615:	f7 f1                	div    %ecx
81004617:	89 c2                	mov    %eax,%edx
81004619:	bf 00 00 00 00       	mov    $0x0,%edi
8100461e:	b9 00 00 00 00       	mov    $0x0,%ecx
81004623:	83 fb 2f             	cmp    $0x2f,%ebx
81004626:	7e 0a                	jle    81004632 <_strtol_l+0x128>
81004628:	83 fb 39             	cmp    $0x39,%ebx
8100462b:	7f 05                	jg     81004632 <_strtol_l+0x128>
8100462d:	83 eb 30             	sub    $0x30,%ebx
81004630:	eb 1c                	jmp    8100464e <_strtol_l+0x144>
81004632:	83 fb 40             	cmp    $0x40,%ebx
81004635:	7e 0a                	jle    81004641 <_strtol_l+0x137>
81004637:	83 fb 5a             	cmp    $0x5a,%ebx
8100463a:	7f 05                	jg     81004641 <_strtol_l+0x137>
8100463c:	83 eb 37             	sub    $0x37,%ebx
8100463f:	eb 0d                	jmp    8100464e <_strtol_l+0x144>
81004641:	83 fb 60             	cmp    $0x60,%ebx
81004644:	7e 46                	jle    8100468c <_strtol_l+0x182>
81004646:	83 fb 7a             	cmp    $0x7a,%ebx
81004649:	7f 41                	jg     8100468c <_strtol_l+0x182>
8100464b:	83 eb 57             	sub    $0x57,%ebx
8100464e:	3b 5d 14             	cmp    0x14(%ebp),%ebx
81004651:	7d 38                	jge    8100468b <_strtol_l+0x181>
81004653:	89 c8                	mov    %ecx,%eax
81004655:	85 c0                	test   %eax,%eax
81004657:	78 0f                	js     81004668 <_strtol_l+0x15e>
81004659:	89 d0                	mov    %edx,%eax
8100465b:	39 c7                	cmp    %eax,%edi
8100465d:	77 09                	ja     81004668 <_strtol_l+0x15e>
8100465f:	39 c7                	cmp    %eax,%edi
81004661:	75 0c                	jne    8100466f <_strtol_l+0x165>
81004663:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
81004666:	7e 07                	jle    8100466f <_strtol_l+0x165>
81004668:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
8100466d:	eb 0f                	jmp    8100467e <_strtol_l+0x174>
8100466f:	b9 01 00 00 00       	mov    $0x1,%ecx
81004674:	8b 45 14             	mov    0x14(%ebp),%eax
81004677:	0f af f8             	imul   %eax,%edi
8100467a:	89 d8                	mov    %ebx,%eax
8100467c:	01 c7                	add    %eax,%edi
8100467e:	89 f0                	mov    %esi,%eax
81004680:	8d 70 01             	lea    0x1(%eax),%esi
81004683:	0f b6 00             	movzbl (%eax),%eax
81004686:	0f b6 d8             	movzbl %al,%ebx
81004689:	eb 98                	jmp    81004623 <_strtol_l+0x119>
8100468b:	90                   	nop
8100468c:	89 c8                	mov    %ecx,%eax
8100468e:	85 c0                	test   %eax,%eax
81004690:	79 1f                	jns    810046b1 <_strtol_l+0x1a7>
81004692:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81004696:	74 07                	je     8100469f <_strtol_l+0x195>
81004698:	b8 00 00 00 80       	mov    $0x80000000,%eax
8100469d:	eb 05                	jmp    810046a4 <_strtol_l+0x19a>
8100469f:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
810046a4:	89 c7                	mov    %eax,%edi
810046a6:	8b 45 08             	mov    0x8(%ebp),%eax
810046a9:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
810046af:	eb 08                	jmp    810046b9 <_strtol_l+0x1af>
810046b1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810046b5:	74 02                	je     810046b9 <_strtol_l+0x1af>
810046b7:	f7 df                	neg    %edi
810046b9:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810046bd:	74 13                	je     810046d2 <_strtol_l+0x1c8>
810046bf:	89 c8                	mov    %ecx,%eax
810046c1:	85 c0                	test   %eax,%eax
810046c3:	74 05                	je     810046ca <_strtol_l+0x1c0>
810046c5:	8d 46 ff             	lea    -0x1(%esi),%eax
810046c8:	eb 03                	jmp    810046cd <_strtol_l+0x1c3>
810046ca:	8b 45 0c             	mov    0xc(%ebp),%eax
810046cd:	8b 55 10             	mov    0x10(%ebp),%edx
810046d0:	89 02                	mov    %eax,(%edx)
810046d2:	89 f8                	mov    %edi,%eax
810046d4:	8d 65 f4             	lea    -0xc(%ebp),%esp
810046d7:	5b                   	pop    %ebx
810046d8:	5e                   	pop    %esi
810046d9:	5f                   	pop    %edi
810046da:	5d                   	pop    %ebp
810046db:	c3                   	ret    

810046dc <_strtol_r>:
810046dc:	55                   	push   %ebp
810046dd:	89 e5                	mov    %esp,%ebp
810046df:	83 ec 08             	sub    $0x8,%esp
810046e2:	e8 19 fe ff ff       	call   81004500 <__get_current_locale>
810046e7:	83 ec 0c             	sub    $0xc,%esp
810046ea:	50                   	push   %eax
810046eb:	ff 75 14             	push   0x14(%ebp)
810046ee:	ff 75 10             	push   0x10(%ebp)
810046f1:	ff 75 0c             	push   0xc(%ebp)
810046f4:	ff 75 08             	push   0x8(%ebp)
810046f7:	e8 0e fe ff ff       	call   8100450a <_strtol_l>
810046fc:	83 c4 20             	add    $0x20,%esp
810046ff:	c9                   	leave  
81004700:	c3                   	ret    

81004701 <strtol_l>:
81004701:	55                   	push   %ebp
81004702:	89 e5                	mov    %esp,%ebp
81004704:	83 ec 08             	sub    $0x8,%esp
81004707:	a1 a4 70 00 81       	mov    0x810070a4,%eax
8100470c:	83 ec 0c             	sub    $0xc,%esp
8100470f:	ff 75 14             	push   0x14(%ebp)
81004712:	ff 75 10             	push   0x10(%ebp)
81004715:	ff 75 0c             	push   0xc(%ebp)
81004718:	ff 75 08             	push   0x8(%ebp)
8100471b:	50                   	push   %eax
8100471c:	e8 e9 fd ff ff       	call   8100450a <_strtol_l>
81004721:	83 c4 20             	add    $0x20,%esp
81004724:	c9                   	leave  
81004725:	c3                   	ret    

81004726 <strtol>:
81004726:	55                   	push   %ebp
81004727:	89 e5                	mov    %esp,%ebp
81004729:	83 ec 08             	sub    $0x8,%esp
8100472c:	e8 cf fd ff ff       	call   81004500 <__get_current_locale>
81004731:	8b 15 a4 70 00 81    	mov    0x810070a4,%edx
81004737:	83 ec 0c             	sub    $0xc,%esp
8100473a:	50                   	push   %eax
8100473b:	ff 75 10             	push   0x10(%ebp)
8100473e:	ff 75 0c             	push   0xc(%ebp)
81004741:	ff 75 08             	push   0x8(%ebp)
81004744:	52                   	push   %edx
81004745:	e8 c0 fd ff ff       	call   8100450a <_strtol_l>
8100474a:	83 c4 20             	add    $0x20,%esp
8100474d:	c9                   	leave  
8100474e:	c3                   	ret    

8100474f <__swbuf_r>:
8100474f:	55                   	push   %ebp
81004750:	89 e5                	mov    %esp,%ebp
81004752:	57                   	push   %edi
81004753:	56                   	push   %esi
81004754:	53                   	push   %ebx
81004755:	83 ec 1c             	sub    $0x1c,%esp
81004758:	8b 7d 0c             	mov    0xc(%ebp),%edi
8100475b:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100475e:	8b 45 08             	mov    0x8(%ebp),%eax
81004761:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004764:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81004768:	74 18                	je     81004782 <__swbuf_r+0x33>
8100476a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100476d:	8b 40 38             	mov    0x38(%eax),%eax
81004770:	85 c0                	test   %eax,%eax
81004772:	75 0e                	jne    81004782 <__swbuf_r+0x33>
81004774:	83 ec 0c             	sub    $0xc,%esp
81004777:	ff 75 e4             	push   -0x1c(%ebp)
8100477a:	e8 50 c7 ff ff       	call   81000ecf <__sinit>
8100477f:	83 c4 10             	add    $0x10,%esp
81004782:	8b 43 18             	mov    0x18(%ebx),%eax
81004785:	89 43 08             	mov    %eax,0x8(%ebx)
81004788:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100478c:	98                   	cwtl   
8100478d:	83 e0 08             	and    $0x8,%eax
81004790:	85 c0                	test   %eax,%eax
81004792:	74 07                	je     8100479b <__swbuf_r+0x4c>
81004794:	8b 43 10             	mov    0x10(%ebx),%eax
81004797:	85 c0                	test   %eax,%eax
81004799:	75 1d                	jne    810047b8 <__swbuf_r+0x69>
8100479b:	83 ec 08             	sub    $0x8,%esp
8100479e:	53                   	push   %ebx
8100479f:	ff 75 08             	push   0x8(%ebp)
810047a2:	e8 21 01 00 00       	call   810048c8 <__swsetup_r>
810047a7:	83 c4 10             	add    $0x10,%esp
810047aa:	85 c0                	test   %eax,%eax
810047ac:	74 0a                	je     810047b8 <__swbuf_r+0x69>
810047ae:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810047b3:	e9 a1 00 00 00       	jmp    81004859 <__swbuf_r+0x10a>
810047b8:	89 f8                	mov    %edi,%eax
810047ba:	0f b6 f8             	movzbl %al,%edi
810047bd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810047c1:	98                   	cwtl   
810047c2:	25 00 20 00 00       	and    $0x2000,%eax
810047c7:	85 c0                	test   %eax,%eax
810047c9:	75 14                	jne    810047df <__swbuf_r+0x90>
810047cb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810047cf:	80 cc 20             	or     $0x20,%ah
810047d2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810047d6:	8b 43 64             	mov    0x64(%ebx),%eax
810047d9:	80 e4 df             	and    $0xdf,%ah
810047dc:	89 43 64             	mov    %eax,0x64(%ebx)
810047df:	8b 03                	mov    (%ebx),%eax
810047e1:	8b 53 10             	mov    0x10(%ebx),%edx
810047e4:	29 d0                	sub    %edx,%eax
810047e6:	89 c6                	mov    %eax,%esi
810047e8:	8b 43 14             	mov    0x14(%ebx),%eax
810047eb:	39 c6                	cmp    %eax,%esi
810047ed:	7c 1f                	jl     8100480e <__swbuf_r+0xbf>
810047ef:	83 ec 08             	sub    $0x8,%esp
810047f2:	53                   	push   %ebx
810047f3:	ff 75 08             	push   0x8(%ebp)
810047f6:	e8 d1 c1 ff ff       	call   810009cc <_fflush_r>
810047fb:	83 c4 10             	add    $0x10,%esp
810047fe:	85 c0                	test   %eax,%eax
81004800:	74 07                	je     81004809 <__swbuf_r+0xba>
81004802:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004807:	eb 50                	jmp    81004859 <__swbuf_r+0x10a>
81004809:	be 00 00 00 00       	mov    $0x0,%esi
8100480e:	8b 43 08             	mov    0x8(%ebx),%eax
81004811:	83 e8 01             	sub    $0x1,%eax
81004814:	89 43 08             	mov    %eax,0x8(%ebx)
81004817:	8b 03                	mov    (%ebx),%eax
81004819:	8d 50 01             	lea    0x1(%eax),%edx
8100481c:	89 13                	mov    %edx,(%ebx)
8100481e:	89 fa                	mov    %edi,%edx
81004820:	88 10                	mov    %dl,(%eax)
81004822:	83 c6 01             	add    $0x1,%esi
81004825:	8b 43 14             	mov    0x14(%ebx),%eax
81004828:	39 c6                	cmp    %eax,%esi
8100482a:	74 11                	je     8100483d <__swbuf_r+0xee>
8100482c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004830:	98                   	cwtl   
81004831:	83 e0 01             	and    $0x1,%eax
81004834:	85 c0                	test   %eax,%eax
81004836:	74 1f                	je     81004857 <__swbuf_r+0x108>
81004838:	83 ff 0a             	cmp    $0xa,%edi
8100483b:	75 1a                	jne    81004857 <__swbuf_r+0x108>
8100483d:	83 ec 08             	sub    $0x8,%esp
81004840:	53                   	push   %ebx
81004841:	ff 75 08             	push   0x8(%ebp)
81004844:	e8 83 c1 ff ff       	call   810009cc <_fflush_r>
81004849:	83 c4 10             	add    $0x10,%esp
8100484c:	85 c0                	test   %eax,%eax
8100484e:	74 07                	je     81004857 <__swbuf_r+0x108>
81004850:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004855:	eb 02                	jmp    81004859 <__swbuf_r+0x10a>
81004857:	89 f8                	mov    %edi,%eax
81004859:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100485c:	5b                   	pop    %ebx
8100485d:	5e                   	pop    %esi
8100485e:	5f                   	pop    %edi
8100485f:	5d                   	pop    %ebp
81004860:	c3                   	ret    

81004861 <__swbuf>:
81004861:	55                   	push   %ebp
81004862:	89 e5                	mov    %esp,%ebp
81004864:	83 ec 08             	sub    $0x8,%esp
81004867:	8b 55 08             	mov    0x8(%ebp),%edx
8100486a:	8b 4d 0c             	mov    0xc(%ebp),%ecx
8100486d:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81004872:	83 ec 04             	sub    $0x4,%esp
81004875:	51                   	push   %ecx
81004876:	52                   	push   %edx
81004877:	50                   	push   %eax
81004878:	e8 d2 fe ff ff       	call   8100474f <__swbuf_r>
8100487d:	83 c4 10             	add    $0x10,%esp
81004880:	c9                   	leave  
81004881:	c3                   	ret    

81004882 <_write_r>:
81004882:	55                   	push   %ebp
81004883:	89 e5                	mov    %esp,%ebp
81004885:	83 ec 18             	sub    $0x18,%esp
81004888:	c7 05 f0 7c 00 81 00 	movl   $0x0,0x81007cf0
8100488f:	00 00 00 
81004892:	83 ec 04             	sub    $0x4,%esp
81004895:	ff 75 14             	push   0x14(%ebp)
81004898:	ff 75 10             	push   0x10(%ebp)
8100489b:	ff 75 0c             	push   0xc(%ebp)
8100489e:	e8 ca bd ff ff       	call   8100066d <write>
810048a3:	83 c4 10             	add    $0x10,%esp
810048a6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810048a9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810048ad:	75 14                	jne    810048c3 <_write_r+0x41>
810048af:	a1 f0 7c 00 81       	mov    0x81007cf0,%eax
810048b4:	85 c0                	test   %eax,%eax
810048b6:	74 0b                	je     810048c3 <_write_r+0x41>
810048b8:	8b 15 f0 7c 00 81    	mov    0x81007cf0,%edx
810048be:	8b 45 08             	mov    0x8(%ebp),%eax
810048c1:	89 10                	mov    %edx,(%eax)
810048c3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810048c6:	c9                   	leave  
810048c7:	c3                   	ret    

810048c8 <__swsetup_r>:
810048c8:	55                   	push   %ebp
810048c9:	89 e5                	mov    %esp,%ebp
810048cb:	53                   	push   %ebx
810048cc:	83 ec 14             	sub    $0x14,%esp
810048cf:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810048d2:	a1 a4 70 00 81       	mov    0x810070a4,%eax
810048d7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810048da:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810048de:	74 18                	je     810048f8 <__swsetup_r+0x30>
810048e0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810048e3:	8b 40 38             	mov    0x38(%eax),%eax
810048e6:	85 c0                	test   %eax,%eax
810048e8:	75 0e                	jne    810048f8 <__swsetup_r+0x30>
810048ea:	83 ec 0c             	sub    $0xc,%esp
810048ed:	ff 75 f4             	push   -0xc(%ebp)
810048f0:	e8 da c5 ff ff       	call   81000ecf <__sinit>
810048f5:	83 c4 10             	add    $0x10,%esp
810048f8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810048fc:	98                   	cwtl   
810048fd:	83 e0 08             	and    $0x8,%eax
81004900:	85 c0                	test   %eax,%eax
81004902:	0f 85 82 00 00 00    	jne    8100498a <__swsetup_r+0xc2>
81004908:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100490c:	98                   	cwtl   
8100490d:	83 e0 10             	and    $0x10,%eax
81004910:	85 c0                	test   %eax,%eax
81004912:	75 1e                	jne    81004932 <__swsetup_r+0x6a>
81004914:	8b 45 08             	mov    0x8(%ebp),%eax
81004917:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
8100491d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004921:	83 c8 40             	or     $0x40,%eax
81004924:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004928:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100492d:	e9 ec 00 00 00       	jmp    81004a1e <__swsetup_r+0x156>
81004932:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004936:	98                   	cwtl   
81004937:	83 e0 04             	and    $0x4,%eax
8100493a:	85 c0                	test   %eax,%eax
8100493c:	74 41                	je     8100497f <__swsetup_r+0xb7>
8100493e:	8b 43 30             	mov    0x30(%ebx),%eax
81004941:	85 c0                	test   %eax,%eax
81004943:	74 23                	je     81004968 <__swsetup_r+0xa0>
81004945:	8b 53 30             	mov    0x30(%ebx),%edx
81004948:	8d 43 40             	lea    0x40(%ebx),%eax
8100494b:	39 c2                	cmp    %eax,%edx
8100494d:	74 12                	je     81004961 <__swsetup_r+0x99>
8100494f:	8b 43 30             	mov    0x30(%ebx),%eax
81004952:	83 ec 08             	sub    $0x8,%esp
81004955:	50                   	push   %eax
81004956:	ff 75 08             	push   0x8(%ebp)
81004959:	e8 d3 c6 ff ff       	call   81001031 <_free_r>
8100495e:	83 c4 10             	add    $0x10,%esp
81004961:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81004968:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100496c:	83 e0 db             	and    $0xffffffdb,%eax
8100496f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004973:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100497a:	8b 43 10             	mov    0x10(%ebx),%eax
8100497d:	89 03                	mov    %eax,(%ebx)
8100497f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004983:	83 c8 08             	or     $0x8,%eax
81004986:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100498a:	8b 43 10             	mov    0x10(%ebx),%eax
8100498d:	85 c0                	test   %eax,%eax
8100498f:	75 2b                	jne    810049bc <__swsetup_r+0xf4>
81004991:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004995:	98                   	cwtl   
81004996:	25 00 02 00 00       	and    $0x200,%eax
8100499b:	85 c0                	test   %eax,%eax
8100499d:	74 0e                	je     810049ad <__swsetup_r+0xe5>
8100499f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810049a3:	98                   	cwtl   
810049a4:	25 80 00 00 00       	and    $0x80,%eax
810049a9:	85 c0                	test   %eax,%eax
810049ab:	74 0f                	je     810049bc <__swsetup_r+0xf4>
810049ad:	83 ec 08             	sub    $0x8,%esp
810049b0:	53                   	push   %ebx
810049b1:	ff 75 08             	push   0x8(%ebp)
810049b4:	e8 ba 0b 00 00       	call   81005573 <__smakebuf_r>
810049b9:	83 c4 10             	add    $0x10,%esp
810049bc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810049c0:	98                   	cwtl   
810049c1:	83 e0 01             	and    $0x1,%eax
810049c4:	85 c0                	test   %eax,%eax
810049c6:	74 11                	je     810049d9 <__swsetup_r+0x111>
810049c8:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810049cf:	8b 43 14             	mov    0x14(%ebx),%eax
810049d2:	f7 d8                	neg    %eax
810049d4:	89 43 18             	mov    %eax,0x18(%ebx)
810049d7:	eb 19                	jmp    810049f2 <__swsetup_r+0x12a>
810049d9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810049dd:	98                   	cwtl   
810049de:	83 e0 02             	and    $0x2,%eax
810049e1:	85 c0                	test   %eax,%eax
810049e3:	75 05                	jne    810049ea <__swsetup_r+0x122>
810049e5:	8b 43 14             	mov    0x14(%ebx),%eax
810049e8:	eb 05                	jmp    810049ef <__swsetup_r+0x127>
810049ea:	b8 00 00 00 00       	mov    $0x0,%eax
810049ef:	89 43 08             	mov    %eax,0x8(%ebx)
810049f2:	8b 43 10             	mov    0x10(%ebx),%eax
810049f5:	85 c0                	test   %eax,%eax
810049f7:	75 20                	jne    81004a19 <__swsetup_r+0x151>
810049f9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810049fd:	98                   	cwtl   
810049fe:	25 80 00 00 00       	and    $0x80,%eax
81004a03:	85 c0                	test   %eax,%eax
81004a05:	74 12                	je     81004a19 <__swsetup_r+0x151>
81004a07:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004a0b:	83 c8 40             	or     $0x40,%eax
81004a0e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004a12:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004a17:	eb 05                	jmp    81004a1e <__swsetup_r+0x156>
81004a19:	b8 00 00 00 00       	mov    $0x0,%eax
81004a1e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004a21:	c9                   	leave  
81004a22:	c3                   	ret    

81004a23 <_close_r>:
81004a23:	55                   	push   %ebp
81004a24:	89 e5                	mov    %esp,%ebp
81004a26:	83 ec 18             	sub    $0x18,%esp
81004a29:	c7 05 f0 7c 00 81 00 	movl   $0x0,0x81007cf0
81004a30:	00 00 00 
81004a33:	83 ec 0c             	sub    $0xc,%esp
81004a36:	ff 75 0c             	push   0xc(%ebp)
81004a39:	e8 5c bc ff ff       	call   8100069a <close>
81004a3e:	83 c4 10             	add    $0x10,%esp
81004a41:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004a44:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004a48:	75 14                	jne    81004a5e <_close_r+0x3b>
81004a4a:	a1 f0 7c 00 81       	mov    0x81007cf0,%eax
81004a4f:	85 c0                	test   %eax,%eax
81004a51:	74 0b                	je     81004a5e <_close_r+0x3b>
81004a53:	8b 15 f0 7c 00 81    	mov    0x81007cf0,%edx
81004a59:	8b 45 08             	mov    0x8(%ebp),%eax
81004a5c:	89 10                	mov    %edx,(%eax)
81004a5e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004a61:	c9                   	leave  
81004a62:	c3                   	ret    

81004a63 <__errno>:
81004a63:	55                   	push   %ebp
81004a64:	89 e5                	mov    %esp,%ebp
81004a66:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81004a6b:	5d                   	pop    %ebp
81004a6c:	c3                   	ret    

81004a6d <_fclose_r>:
81004a6d:	55                   	push   %ebp
81004a6e:	89 e5                	mov    %esp,%ebp
81004a70:	53                   	push   %ebx
81004a71:	83 ec 14             	sub    $0x14,%esp
81004a74:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004a77:	85 db                	test   %ebx,%ebx
81004a79:	75 0a                	jne    81004a85 <_fclose_r+0x18>
81004a7b:	b8 00 00 00 00       	mov    $0x0,%eax
81004a80:	e9 ea 00 00 00       	jmp    81004b6f <_fclose_r+0x102>
81004a85:	8b 45 08             	mov    0x8(%ebp),%eax
81004a88:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004a8b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004a8f:	74 18                	je     81004aa9 <_fclose_r+0x3c>
81004a91:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004a94:	8b 40 38             	mov    0x38(%eax),%eax
81004a97:	85 c0                	test   %eax,%eax
81004a99:	75 0e                	jne    81004aa9 <_fclose_r+0x3c>
81004a9b:	83 ec 0c             	sub    $0xc,%esp
81004a9e:	ff 75 f0             	push   -0x10(%ebp)
81004aa1:	e8 29 c4 ff ff       	call   81000ecf <__sinit>
81004aa6:	83 c4 10             	add    $0x10,%esp
81004aa9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004aad:	66 85 c0             	test   %ax,%ax
81004ab0:	75 0a                	jne    81004abc <_fclose_r+0x4f>
81004ab2:	b8 00 00 00 00       	mov    $0x0,%eax
81004ab7:	e9 b3 00 00 00       	jmp    81004b6f <_fclose_r+0x102>
81004abc:	83 ec 08             	sub    $0x8,%esp
81004abf:	53                   	push   %ebx
81004ac0:	ff 75 08             	push   0x8(%ebp)
81004ac3:	e8 de bc ff ff       	call   810007a6 <__sflush_r>
81004ac8:	83 c4 10             	add    $0x10,%esp
81004acb:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004ace:	8b 43 2c             	mov    0x2c(%ebx),%eax
81004ad1:	85 c0                	test   %eax,%eax
81004ad3:	74 1d                	je     81004af2 <_fclose_r+0x85>
81004ad5:	8b 43 2c             	mov    0x2c(%ebx),%eax
81004ad8:	8b 53 1c             	mov    0x1c(%ebx),%edx
81004adb:	83 ec 08             	sub    $0x8,%esp
81004ade:	52                   	push   %edx
81004adf:	ff 75 08             	push   0x8(%ebp)
81004ae2:	ff d0                	call   *%eax
81004ae4:	83 c4 10             	add    $0x10,%esp
81004ae7:	85 c0                	test   %eax,%eax
81004ae9:	79 07                	jns    81004af2 <_fclose_r+0x85>
81004aeb:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81004af2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004af6:	98                   	cwtl   
81004af7:	25 80 00 00 00       	and    $0x80,%eax
81004afc:	85 c0                	test   %eax,%eax
81004afe:	74 12                	je     81004b12 <_fclose_r+0xa5>
81004b00:	8b 43 10             	mov    0x10(%ebx),%eax
81004b03:	83 ec 08             	sub    $0x8,%esp
81004b06:	50                   	push   %eax
81004b07:	ff 75 08             	push   0x8(%ebp)
81004b0a:	e8 22 c5 ff ff       	call   81001031 <_free_r>
81004b0f:	83 c4 10             	add    $0x10,%esp
81004b12:	8b 43 30             	mov    0x30(%ebx),%eax
81004b15:	85 c0                	test   %eax,%eax
81004b17:	74 23                	je     81004b3c <_fclose_r+0xcf>
81004b19:	8b 53 30             	mov    0x30(%ebx),%edx
81004b1c:	8d 43 40             	lea    0x40(%ebx),%eax
81004b1f:	39 c2                	cmp    %eax,%edx
81004b21:	74 12                	je     81004b35 <_fclose_r+0xc8>
81004b23:	8b 43 30             	mov    0x30(%ebx),%eax
81004b26:	83 ec 08             	sub    $0x8,%esp
81004b29:	50                   	push   %eax
81004b2a:	ff 75 08             	push   0x8(%ebp)
81004b2d:	e8 ff c4 ff ff       	call   81001031 <_free_r>
81004b32:	83 c4 10             	add    $0x10,%esp
81004b35:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81004b3c:	8b 43 44             	mov    0x44(%ebx),%eax
81004b3f:	85 c0                	test   %eax,%eax
81004b41:	74 19                	je     81004b5c <_fclose_r+0xef>
81004b43:	8b 43 44             	mov    0x44(%ebx),%eax
81004b46:	83 ec 08             	sub    $0x8,%esp
81004b49:	50                   	push   %eax
81004b4a:	ff 75 08             	push   0x8(%ebp)
81004b4d:	e8 df c4 ff ff       	call   81001031 <_free_r>
81004b52:	83 c4 10             	add    $0x10,%esp
81004b55:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81004b5c:	e8 07 c4 ff ff       	call   81000f68 <__sfp_lock_acquire>
81004b61:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81004b67:	e8 02 c4 ff ff       	call   81000f6e <__sfp_lock_release>
81004b6c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004b6f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004b72:	c9                   	leave  
81004b73:	c3                   	ret    

81004b74 <fclose>:
81004b74:	55                   	push   %ebp
81004b75:	89 e5                	mov    %esp,%ebp
81004b77:	83 ec 08             	sub    $0x8,%esp
81004b7a:	8b 55 08             	mov    0x8(%ebp),%edx
81004b7d:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81004b82:	83 ec 08             	sub    $0x8,%esp
81004b85:	52                   	push   %edx
81004b86:	50                   	push   %eax
81004b87:	e8 e1 fe ff ff       	call   81004a6d <_fclose_r>
81004b8c:	83 c4 10             	add    $0x10,%esp
81004b8f:	c9                   	leave  
81004b90:	c3                   	ret    

81004b91 <_fputc_r>:
81004b91:	55                   	push   %ebp
81004b92:	89 e5                	mov    %esp,%ebp
81004b94:	83 ec 18             	sub    $0x18,%esp
81004b97:	8b 45 08             	mov    0x8(%ebp),%eax
81004b9a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004b9d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004ba1:	74 18                	je     81004bbb <_fputc_r+0x2a>
81004ba3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004ba6:	8b 40 38             	mov    0x38(%eax),%eax
81004ba9:	85 c0                	test   %eax,%eax
81004bab:	75 0e                	jne    81004bbb <_fputc_r+0x2a>
81004bad:	83 ec 0c             	sub    $0xc,%esp
81004bb0:	ff 75 f4             	push   -0xc(%ebp)
81004bb3:	e8 17 c3 ff ff       	call   81000ecf <__sinit>
81004bb8:	83 c4 10             	add    $0x10,%esp
81004bbb:	83 ec 04             	sub    $0x4,%esp
81004bbe:	ff 75 10             	push   0x10(%ebp)
81004bc1:	ff 75 0c             	push   0xc(%ebp)
81004bc4:	ff 75 08             	push   0x8(%ebp)
81004bc7:	e8 b7 0c 00 00       	call   81005883 <_putc_r>
81004bcc:	83 c4 10             	add    $0x10,%esp
81004bcf:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004bd2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004bd5:	c9                   	leave  
81004bd6:	c3                   	ret    

81004bd7 <fputc>:
81004bd7:	55                   	push   %ebp
81004bd8:	89 e5                	mov    %esp,%ebp
81004bda:	83 ec 18             	sub    $0x18,%esp
81004bdd:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81004be2:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004be5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004be8:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004beb:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004bef:	74 18                	je     81004c09 <fputc+0x32>
81004bf1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004bf4:	8b 40 38             	mov    0x38(%eax),%eax
81004bf7:	85 c0                	test   %eax,%eax
81004bf9:	75 0e                	jne    81004c09 <fputc+0x32>
81004bfb:	83 ec 0c             	sub    $0xc,%esp
81004bfe:	ff 75 f0             	push   -0x10(%ebp)
81004c01:	e8 c9 c2 ff ff       	call   81000ecf <__sinit>
81004c06:	83 c4 10             	add    $0x10,%esp
81004c09:	83 ec 04             	sub    $0x4,%esp
81004c0c:	ff 75 0c             	push   0xc(%ebp)
81004c0f:	ff 75 08             	push   0x8(%ebp)
81004c12:	ff 75 f4             	push   -0xc(%ebp)
81004c15:	e8 69 0c 00 00       	call   81005883 <_putc_r>
81004c1a:	83 c4 10             	add    $0x10,%esp
81004c1d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004c20:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004c23:	c9                   	leave  
81004c24:	c3                   	ret    

81004c25 <_fputs_r>:
81004c25:	55                   	push   %ebp
81004c26:	89 e5                	mov    %esp,%ebp
81004c28:	83 ec 28             	sub    $0x28,%esp
81004c2b:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c2e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004c31:	83 ec 0c             	sub    $0xc,%esp
81004c34:	ff 75 0c             	push   0xc(%ebp)
81004c37:	e8 34 f7 ff ff       	call   81004370 <strlen>
81004c3c:	83 c4 10             	add    $0x10,%esp
81004c3f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004c42:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004c45:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004c48:	8d 45 dc             	lea    -0x24(%ebp),%eax
81004c4b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004c4e:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81004c55:	8b 45 08             	mov    0x8(%ebp),%eax
81004c58:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004c5b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004c5f:	74 18                	je     81004c79 <_fputs_r+0x54>
81004c61:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c64:	8b 40 38             	mov    0x38(%eax),%eax
81004c67:	85 c0                	test   %eax,%eax
81004c69:	75 0e                	jne    81004c79 <_fputs_r+0x54>
81004c6b:	83 ec 0c             	sub    $0xc,%esp
81004c6e:	ff 75 f4             	push   -0xc(%ebp)
81004c71:	e8 59 c2 ff ff       	call   81000ecf <__sinit>
81004c76:	83 c4 10             	add    $0x10,%esp
81004c79:	8b 45 10             	mov    0x10(%ebp),%eax
81004c7c:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004c80:	98                   	cwtl   
81004c81:	25 00 20 00 00       	and    $0x2000,%eax
81004c86:	85 c0                	test   %eax,%eax
81004c88:	75 24                	jne    81004cae <_fputs_r+0x89>
81004c8a:	8b 45 10             	mov    0x10(%ebp),%eax
81004c8d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004c91:	80 cc 20             	or     $0x20,%ah
81004c94:	89 c2                	mov    %eax,%edx
81004c96:	8b 45 10             	mov    0x10(%ebp),%eax
81004c99:	66 89 50 0c          	mov    %dx,0xc(%eax)
81004c9d:	8b 45 10             	mov    0x10(%ebp),%eax
81004ca0:	8b 40 64             	mov    0x64(%eax),%eax
81004ca3:	80 e4 df             	and    $0xdf,%ah
81004ca6:	89 c2                	mov    %eax,%edx
81004ca8:	8b 45 10             	mov    0x10(%ebp),%eax
81004cab:	89 50 64             	mov    %edx,0x64(%eax)
81004cae:	83 ec 04             	sub    $0x4,%esp
81004cb1:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81004cb4:	50                   	push   %eax
81004cb5:	ff 75 10             	push   0x10(%ebp)
81004cb8:	ff 75 08             	push   0x8(%ebp)
81004cbb:	e8 df 01 00 00       	call   81004e9f <__sfvwrite_r>
81004cc0:	83 c4 10             	add    $0x10,%esp
81004cc3:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004cc6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004cc9:	c9                   	leave  
81004cca:	c3                   	ret    

81004ccb <fputs>:
81004ccb:	55                   	push   %ebp
81004ccc:	89 e5                	mov    %esp,%ebp
81004cce:	83 ec 08             	sub    $0x8,%esp
81004cd1:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81004cd6:	83 ec 04             	sub    $0x4,%esp
81004cd9:	ff 75 0c             	push   0xc(%ebp)
81004cdc:	ff 75 08             	push   0x8(%ebp)
81004cdf:	50                   	push   %eax
81004ce0:	e8 40 ff ff ff       	call   81004c25 <_fputs_r>
81004ce5:	83 c4 10             	add    $0x10,%esp
81004ce8:	c9                   	leave  
81004ce9:	c3                   	ret    

81004cea <__sputc_r>:
81004cea:	55                   	push   %ebp
81004ceb:	89 e5                	mov    %esp,%ebp
81004ced:	83 ec 08             	sub    $0x8,%esp
81004cf0:	8b 45 10             	mov    0x10(%ebp),%eax
81004cf3:	8b 40 08             	mov    0x8(%eax),%eax
81004cf6:	8d 50 ff             	lea    -0x1(%eax),%edx
81004cf9:	8b 45 10             	mov    0x10(%ebp),%eax
81004cfc:	89 50 08             	mov    %edx,0x8(%eax)
81004cff:	8b 45 10             	mov    0x10(%ebp),%eax
81004d02:	8b 40 08             	mov    0x8(%eax),%eax
81004d05:	85 c0                	test   %eax,%eax
81004d07:	79 17                	jns    81004d20 <__sputc_r+0x36>
81004d09:	8b 45 10             	mov    0x10(%ebp),%eax
81004d0c:	8b 50 08             	mov    0x8(%eax),%edx
81004d0f:	8b 45 10             	mov    0x10(%ebp),%eax
81004d12:	8b 40 18             	mov    0x18(%eax),%eax
81004d15:	39 c2                	cmp    %eax,%edx
81004d17:	7c 21                	jl     81004d3a <__sputc_r+0x50>
81004d19:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d1c:	3c 0a                	cmp    $0xa,%al
81004d1e:	74 1a                	je     81004d3a <__sputc_r+0x50>
81004d20:	8b 45 10             	mov    0x10(%ebp),%eax
81004d23:	8b 00                	mov    (%eax),%eax
81004d25:	8d 48 01             	lea    0x1(%eax),%ecx
81004d28:	8b 55 10             	mov    0x10(%ebp),%edx
81004d2b:	89 0a                	mov    %ecx,(%edx)
81004d2d:	8b 55 0c             	mov    0xc(%ebp),%edx
81004d30:	88 10                	mov    %dl,(%eax)
81004d32:	0f b6 00             	movzbl (%eax),%eax
81004d35:	0f b6 c0             	movzbl %al,%eax
81004d38:	eb 14                	jmp    81004d4e <__sputc_r+0x64>
81004d3a:	83 ec 04             	sub    $0x4,%esp
81004d3d:	ff 75 10             	push   0x10(%ebp)
81004d40:	ff 75 0c             	push   0xc(%ebp)
81004d43:	ff 75 08             	push   0x8(%ebp)
81004d46:	e8 04 fa ff ff       	call   8100474f <__swbuf_r>
81004d4b:	83 c4 10             	add    $0x10,%esp
81004d4e:	c9                   	leave  
81004d4f:	c3                   	ret    

81004d50 <__fputwc>:
81004d50:	55                   	push   %ebp
81004d51:	89 e5                	mov    %esp,%ebp
81004d53:	83 ec 18             	sub    $0x18,%esp
81004d56:	e8 9f 07 00 00       	call   810054fa <__locale_mb_cur_max>
81004d5b:	83 f8 01             	cmp    $0x1,%eax
81004d5e:	75 1e                	jne    81004d7e <__fputwc+0x2e>
81004d60:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81004d64:	7e 18                	jle    81004d7e <__fputwc+0x2e>
81004d66:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
81004d6d:	7f 0f                	jg     81004d7e <__fputwc+0x2e>
81004d6f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d72:	88 45 ef             	mov    %al,-0x11(%ebp)
81004d75:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
81004d7c:	eb 3c                	jmp    81004dba <__fputwc+0x6a>
81004d7e:	8b 45 10             	mov    0x10(%ebp),%eax
81004d81:	83 c0 5c             	add    $0x5c,%eax
81004d84:	50                   	push   %eax
81004d85:	ff 75 0c             	push   0xc(%ebp)
81004d88:	8d 45 ef             	lea    -0x11(%ebp),%eax
81004d8b:	50                   	push   %eax
81004d8c:	ff 75 08             	push   0x8(%ebp)
81004d8f:	e8 3b 17 00 00       	call   810064cf <_wcrtomb_r>
81004d94:	83 c4 10             	add    $0x10,%esp
81004d97:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004d9a:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81004d9e:	75 1a                	jne    81004dba <__fputwc+0x6a>
81004da0:	8b 45 10             	mov    0x10(%ebp),%eax
81004da3:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004da7:	83 c8 40             	or     $0x40,%eax
81004daa:	89 c2                	mov    %eax,%edx
81004dac:	8b 45 10             	mov    0x10(%ebp),%eax
81004daf:	66 89 50 0c          	mov    %dx,0xc(%eax)
81004db3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004db8:	eb 44                	jmp    81004dfe <__fputwc+0xae>
81004dba:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004dc1:	eb 30                	jmp    81004df3 <__fputwc+0xa3>
81004dc3:	8d 55 ef             	lea    -0x11(%ebp),%edx
81004dc6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004dc9:	01 d0                	add    %edx,%eax
81004dcb:	0f b6 00             	movzbl (%eax),%eax
81004dce:	0f b6 c0             	movzbl %al,%eax
81004dd1:	83 ec 04             	sub    $0x4,%esp
81004dd4:	ff 75 10             	push   0x10(%ebp)
81004dd7:	50                   	push   %eax
81004dd8:	ff 75 08             	push   0x8(%ebp)
81004ddb:	e8 0a ff ff ff       	call   81004cea <__sputc_r>
81004de0:	83 c4 10             	add    $0x10,%esp
81004de3:	83 f8 ff             	cmp    $0xffffffff,%eax
81004de6:	75 07                	jne    81004def <__fputwc+0x9f>
81004de8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004ded:	eb 0f                	jmp    81004dfe <__fputwc+0xae>
81004def:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81004df3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004df6:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81004df9:	72 c8                	jb     81004dc3 <__fputwc+0x73>
81004dfb:	8b 45 0c             	mov    0xc(%ebp),%eax
81004dfe:	c9                   	leave  
81004dff:	c3                   	ret    

81004e00 <_fputwc_r>:
81004e00:	55                   	push   %ebp
81004e01:	89 e5                	mov    %esp,%ebp
81004e03:	83 ec 18             	sub    $0x18,%esp
81004e06:	8b 45 10             	mov    0x10(%ebp),%eax
81004e09:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004e0d:	98                   	cwtl   
81004e0e:	25 00 20 00 00       	and    $0x2000,%eax
81004e13:	85 c0                	test   %eax,%eax
81004e15:	75 24                	jne    81004e3b <_fputwc_r+0x3b>
81004e17:	8b 45 10             	mov    0x10(%ebp),%eax
81004e1a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004e1e:	80 cc 20             	or     $0x20,%ah
81004e21:	89 c2                	mov    %eax,%edx
81004e23:	8b 45 10             	mov    0x10(%ebp),%eax
81004e26:	66 89 50 0c          	mov    %dx,0xc(%eax)
81004e2a:	8b 45 10             	mov    0x10(%ebp),%eax
81004e2d:	8b 40 64             	mov    0x64(%eax),%eax
81004e30:	80 cc 20             	or     $0x20,%ah
81004e33:	89 c2                	mov    %eax,%edx
81004e35:	8b 45 10             	mov    0x10(%ebp),%eax
81004e38:	89 50 64             	mov    %edx,0x64(%eax)
81004e3b:	83 ec 04             	sub    $0x4,%esp
81004e3e:	ff 75 10             	push   0x10(%ebp)
81004e41:	ff 75 0c             	push   0xc(%ebp)
81004e44:	ff 75 08             	push   0x8(%ebp)
81004e47:	e8 04 ff ff ff       	call   81004d50 <__fputwc>
81004e4c:	83 c4 10             	add    $0x10,%esp
81004e4f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e52:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004e55:	c9                   	leave  
81004e56:	c3                   	ret    

81004e57 <fputwc>:
81004e57:	55                   	push   %ebp
81004e58:	89 e5                	mov    %esp,%ebp
81004e5a:	83 ec 18             	sub    $0x18,%esp
81004e5d:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81004e62:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e65:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004e68:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004e6b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004e6f:	74 18                	je     81004e89 <fputwc+0x32>
81004e71:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004e74:	8b 40 38             	mov    0x38(%eax),%eax
81004e77:	85 c0                	test   %eax,%eax
81004e79:	75 0e                	jne    81004e89 <fputwc+0x32>
81004e7b:	83 ec 0c             	sub    $0xc,%esp
81004e7e:	ff 75 f0             	push   -0x10(%ebp)
81004e81:	e8 49 c0 ff ff       	call   81000ecf <__sinit>
81004e86:	83 c4 10             	add    $0x10,%esp
81004e89:	83 ec 04             	sub    $0x4,%esp
81004e8c:	ff 75 0c             	push   0xc(%ebp)
81004e8f:	ff 75 08             	push   0x8(%ebp)
81004e92:	ff 75 f4             	push   -0xc(%ebp)
81004e95:	e8 66 ff ff ff       	call   81004e00 <_fputwc_r>
81004e9a:	83 c4 10             	add    $0x10,%esp
81004e9d:	c9                   	leave  
81004e9e:	c3                   	ret    

81004e9f <__sfvwrite_r>:
81004e9f:	55                   	push   %ebp
81004ea0:	89 e5                	mov    %esp,%ebp
81004ea2:	57                   	push   %edi
81004ea3:	56                   	push   %esi
81004ea4:	53                   	push   %ebx
81004ea5:	83 ec 3c             	sub    $0x3c,%esp
81004ea8:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004eab:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
81004eb2:	8b 45 10             	mov    0x10(%ebp),%eax
81004eb5:	8b 78 08             	mov    0x8(%eax),%edi
81004eb8:	85 ff                	test   %edi,%edi
81004eba:	75 0a                	jne    81004ec6 <__sfvwrite_r+0x27>
81004ebc:	b8 00 00 00 00       	mov    $0x0,%eax
81004ec1:	e9 6f 04 00 00       	jmp    81005335 <__sfvwrite_r+0x496>
81004ec6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004eca:	98                   	cwtl   
81004ecb:	83 e0 08             	and    $0x8,%eax
81004ece:	85 c0                	test   %eax,%eax
81004ed0:	74 07                	je     81004ed9 <__sfvwrite_r+0x3a>
81004ed2:	8b 43 10             	mov    0x10(%ebx),%eax
81004ed5:	85 c0                	test   %eax,%eax
81004ed7:	75 1d                	jne    81004ef6 <__sfvwrite_r+0x57>
81004ed9:	83 ec 08             	sub    $0x8,%esp
81004edc:	53                   	push   %ebx
81004edd:	ff 75 08             	push   0x8(%ebp)
81004ee0:	e8 e3 f9 ff ff       	call   810048c8 <__swsetup_r>
81004ee5:	83 c4 10             	add    $0x10,%esp
81004ee8:	85 c0                	test   %eax,%eax
81004eea:	74 0a                	je     81004ef6 <__sfvwrite_r+0x57>
81004eec:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004ef1:	e9 3f 04 00 00       	jmp    81005335 <__sfvwrite_r+0x496>
81004ef6:	8b 45 10             	mov    0x10(%ebp),%eax
81004ef9:	8b 00                	mov    (%eax),%eax
81004efb:	89 45 c0             	mov    %eax,-0x40(%ebp)
81004efe:	bf 00 00 00 00       	mov    $0x0,%edi
81004f03:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004f07:	98                   	cwtl   
81004f08:	83 e0 02             	and    $0x2,%eax
81004f0b:	85 c0                	test   %eax,%eax
81004f0d:	74 68                	je     81004f77 <__sfvwrite_r+0xd8>
81004f0f:	eb 11                	jmp    81004f22 <__sfvwrite_r+0x83>
81004f11:	8b 45 c0             	mov    -0x40(%ebp),%eax
81004f14:	8b 08                	mov    (%eax),%ecx
81004f16:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81004f19:	8b 78 04             	mov    0x4(%eax),%edi
81004f1c:	83 c0 08             	add    $0x8,%eax
81004f1f:	89 45 c0             	mov    %eax,-0x40(%ebp)
81004f22:	85 ff                	test   %edi,%edi
81004f24:	74 eb                	je     81004f11 <__sfvwrite_r+0x72>
81004f26:	8b 4b 24             	mov    0x24(%ebx),%ecx
81004f29:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
81004f2e:	39 c7                	cmp    %eax,%edi
81004f30:	0f 46 c7             	cmovbe %edi,%eax
81004f33:	89 c2                	mov    %eax,%edx
81004f35:	8b 43 1c             	mov    0x1c(%ebx),%eax
81004f38:	52                   	push   %edx
81004f39:	ff 75 c4             	push   -0x3c(%ebp)
81004f3c:	50                   	push   %eax
81004f3d:	ff 75 08             	push   0x8(%ebp)
81004f40:	ff d1                	call   *%ecx
81004f42:	83 c4 10             	add    $0x10,%esp
81004f45:	89 c6                	mov    %eax,%esi
81004f47:	85 f6                	test   %esi,%esi
81004f49:	0f 8e cf 03 00 00    	jle    8100531e <__sfvwrite_r+0x47f>
81004f4f:	89 f0                	mov    %esi,%eax
81004f51:	01 45 c4             	add    %eax,-0x3c(%ebp)
81004f54:	89 f0                	mov    %esi,%eax
81004f56:	29 c7                	sub    %eax,%edi
81004f58:	8b 45 10             	mov    0x10(%ebp),%eax
81004f5b:	8b 40 08             	mov    0x8(%eax),%eax
81004f5e:	89 f2                	mov    %esi,%edx
81004f60:	29 d0                	sub    %edx,%eax
81004f62:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004f65:	89 41 08             	mov    %eax,0x8(%ecx)
81004f68:	8b 45 10             	mov    0x10(%ebp),%eax
81004f6b:	8b 40 08             	mov    0x8(%eax),%eax
81004f6e:	85 c0                	test   %eax,%eax
81004f70:	75 b0                	jne    81004f22 <__sfvwrite_r+0x83>
81004f72:	e9 a0 03 00 00       	jmp    81005317 <__sfvwrite_r+0x478>
81004f77:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004f7b:	98                   	cwtl   
81004f7c:	83 e0 01             	and    $0x1,%eax
81004f7f:	85 c0                	test   %eax,%eax
81004f81:	0f 85 44 02 00 00    	jne    810051cb <__sfvwrite_r+0x32c>
81004f87:	eb 11                	jmp    81004f9a <__sfvwrite_r+0xfb>
81004f89:	8b 45 c0             	mov    -0x40(%ebp),%eax
81004f8c:	8b 08                	mov    (%eax),%ecx
81004f8e:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81004f91:	8b 78 04             	mov    0x4(%eax),%edi
81004f94:	83 c0 08             	add    $0x8,%eax
81004f97:	89 45 c0             	mov    %eax,-0x40(%ebp)
81004f9a:	85 ff                	test   %edi,%edi
81004f9c:	74 eb                	je     81004f89 <__sfvwrite_r+0xea>
81004f9e:	8b 73 08             	mov    0x8(%ebx),%esi
81004fa1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004fa5:	98                   	cwtl   
81004fa6:	25 00 02 00 00       	and    $0x200,%eax
81004fab:	85 c0                	test   %eax,%eax
81004fad:	0f 84 4f 01 00 00    	je     81005102 <__sfvwrite_r+0x263>
81004fb3:	89 f0                	mov    %esi,%eax
81004fb5:	39 c7                	cmp    %eax,%edi
81004fb7:	0f 82 12 01 00 00    	jb     810050cf <__sfvwrite_r+0x230>
81004fbd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004fc1:	98                   	cwtl   
81004fc2:	25 80 04 00 00       	and    $0x480,%eax
81004fc7:	85 c0                	test   %eax,%eax
81004fc9:	0f 84 00 01 00 00    	je     810050cf <__sfvwrite_r+0x230>
81004fcf:	8b 03                	mov    (%ebx),%eax
81004fd1:	8b 53 10             	mov    0x10(%ebx),%edx
81004fd4:	29 d0                	sub    %edx,%eax
81004fd6:	89 45 d0             	mov    %eax,-0x30(%ebp)
81004fd9:	8b 53 14             	mov    0x14(%ebx),%edx
81004fdc:	89 d0                	mov    %edx,%eax
81004fde:	01 c0                	add    %eax,%eax
81004fe0:	01 d0                	add    %edx,%eax
81004fe2:	89 c2                	mov    %eax,%edx
81004fe4:	c1 ea 1f             	shr    $0x1f,%edx
81004fe7:	01 d0                	add    %edx,%eax
81004fe9:	d1 f8                	sar    %eax
81004feb:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004fee:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004ff1:	01 f8                	add    %edi,%eax
81004ff3:	8d 50 01             	lea    0x1(%eax),%edx
81004ff6:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004ff9:	39 c2                	cmp    %eax,%edx
81004ffb:	76 0b                	jbe    81005008 <__sfvwrite_r+0x169>
81004ffd:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005000:	01 f8                	add    %edi,%eax
81005002:	83 c0 01             	add    $0x1,%eax
81005005:	89 45 d8             	mov    %eax,-0x28(%ebp)
81005008:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100500c:	98                   	cwtl   
8100500d:	25 00 04 00 00       	and    $0x400,%eax
81005012:	85 c0                	test   %eax,%eax
81005014:	74 4f                	je     81005065 <__sfvwrite_r+0x1c6>
81005016:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005019:	83 ec 08             	sub    $0x8,%esp
8100501c:	50                   	push   %eax
8100501d:	ff 75 08             	push   0x8(%ebp)
81005020:	e8 83 d7 ff ff       	call   810027a8 <_malloc_r>
81005025:	83 c4 10             	add    $0x10,%esp
81005028:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100502b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100502f:	75 0e                	jne    8100503f <__sfvwrite_r+0x1a0>
81005031:	8b 45 08             	mov    0x8(%ebp),%eax
81005034:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100503a:	e9 e6 02 00 00       	jmp    81005325 <__sfvwrite_r+0x486>
8100503f:	8b 55 d0             	mov    -0x30(%ebp),%edx
81005042:	8b 43 10             	mov    0x10(%ebx),%eax
81005045:	83 ec 04             	sub    $0x4,%esp
81005048:	52                   	push   %edx
81005049:	50                   	push   %eax
8100504a:	ff 75 dc             	push   -0x24(%ebp)
8100504d:	e8 66 e0 ff ff       	call   810030b8 <memcpy>
81005052:	83 c4 10             	add    $0x10,%esp
81005055:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005059:	66 25 7f fb          	and    $0xfb7f,%ax
8100505d:	0c 80                	or     $0x80,%al
8100505f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005063:	eb 49                	jmp    810050ae <__sfvwrite_r+0x20f>
81005065:	8b 55 d8             	mov    -0x28(%ebp),%edx
81005068:	8b 43 10             	mov    0x10(%ebx),%eax
8100506b:	83 ec 04             	sub    $0x4,%esp
8100506e:	52                   	push   %edx
8100506f:	50                   	push   %eax
81005070:	ff 75 08             	push   0x8(%ebp)
81005073:	e8 ef 08 00 00       	call   81005967 <_realloc_r>
81005078:	83 c4 10             	add    $0x10,%esp
8100507b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100507e:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81005082:	75 2a                	jne    810050ae <__sfvwrite_r+0x20f>
81005084:	8b 43 10             	mov    0x10(%ebx),%eax
81005087:	83 ec 08             	sub    $0x8,%esp
8100508a:	50                   	push   %eax
8100508b:	ff 75 08             	push   0x8(%ebp)
8100508e:	e8 9e bf ff ff       	call   81001031 <_free_r>
81005093:	83 c4 10             	add    $0x10,%esp
81005096:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100509a:	24 7f                	and    $0x7f,%al
8100509c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810050a0:	8b 45 08             	mov    0x8(%ebp),%eax
810050a3:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810050a9:	e9 77 02 00 00       	jmp    81005325 <__sfvwrite_r+0x486>
810050ae:	8b 45 dc             	mov    -0x24(%ebp),%eax
810050b1:	89 43 10             	mov    %eax,0x10(%ebx)
810050b4:	8b 55 d0             	mov    -0x30(%ebp),%edx
810050b7:	8b 45 dc             	mov    -0x24(%ebp),%eax
810050ba:	01 d0                	add    %edx,%eax
810050bc:	89 03                	mov    %eax,(%ebx)
810050be:	8b 45 d8             	mov    -0x28(%ebp),%eax
810050c1:	89 43 14             	mov    %eax,0x14(%ebx)
810050c4:	89 fe                	mov    %edi,%esi
810050c6:	8b 45 d8             	mov    -0x28(%ebp),%eax
810050c9:	2b 45 d0             	sub    -0x30(%ebp),%eax
810050cc:	89 43 08             	mov    %eax,0x8(%ebx)
810050cf:	89 f0                	mov    %esi,%eax
810050d1:	39 c7                	cmp    %eax,%edi
810050d3:	73 02                	jae    810050d7 <__sfvwrite_r+0x238>
810050d5:	89 fe                	mov    %edi,%esi
810050d7:	89 f2                	mov    %esi,%edx
810050d9:	8b 03                	mov    (%ebx),%eax
810050db:	83 ec 04             	sub    $0x4,%esp
810050de:	52                   	push   %edx
810050df:	ff 75 c4             	push   -0x3c(%ebp)
810050e2:	50                   	push   %eax
810050e3:	e8 a8 06 00 00       	call   81005790 <memmove>
810050e8:	83 c4 10             	add    $0x10,%esp
810050eb:	8b 43 08             	mov    0x8(%ebx),%eax
810050ee:	29 f0                	sub    %esi,%eax
810050f0:	89 43 08             	mov    %eax,0x8(%ebx)
810050f3:	8b 03                	mov    (%ebx),%eax
810050f5:	89 f2                	mov    %esi,%edx
810050f7:	01 d0                	add    %edx,%eax
810050f9:	89 03                	mov    %eax,(%ebx)
810050fb:	89 fe                	mov    %edi,%esi
810050fd:	e9 9d 00 00 00       	jmp    8100519f <__sfvwrite_r+0x300>
81005102:	8b 13                	mov    (%ebx),%edx
81005104:	8b 43 10             	mov    0x10(%ebx),%eax
81005107:	39 c2                	cmp    %eax,%edx
81005109:	77 07                	ja     81005112 <__sfvwrite_r+0x273>
8100510b:	8b 43 14             	mov    0x14(%ebx),%eax
8100510e:	39 c7                	cmp    %eax,%edi
81005110:	73 4c                	jae    8100515e <__sfvwrite_r+0x2bf>
81005112:	89 f0                	mov    %esi,%eax
81005114:	39 c7                	cmp    %eax,%edi
81005116:	0f 46 c7             	cmovbe %edi,%eax
81005119:	89 c6                	mov    %eax,%esi
8100511b:	89 f2                	mov    %esi,%edx
8100511d:	8b 03                	mov    (%ebx),%eax
8100511f:	83 ec 04             	sub    $0x4,%esp
81005122:	52                   	push   %edx
81005123:	ff 75 c4             	push   -0x3c(%ebp)
81005126:	50                   	push   %eax
81005127:	e8 64 06 00 00       	call   81005790 <memmove>
8100512c:	83 c4 10             	add    $0x10,%esp
8100512f:	8b 43 08             	mov    0x8(%ebx),%eax
81005132:	29 f0                	sub    %esi,%eax
81005134:	89 43 08             	mov    %eax,0x8(%ebx)
81005137:	8b 03                	mov    (%ebx),%eax
81005139:	89 f2                	mov    %esi,%edx
8100513b:	01 d0                	add    %edx,%eax
8100513d:	89 03                	mov    %eax,(%ebx)
8100513f:	8b 43 08             	mov    0x8(%ebx),%eax
81005142:	85 c0                	test   %eax,%eax
81005144:	75 58                	jne    8100519e <__sfvwrite_r+0x2ff>
81005146:	83 ec 08             	sub    $0x8,%esp
81005149:	53                   	push   %ebx
8100514a:	ff 75 08             	push   0x8(%ebp)
8100514d:	e8 7a b8 ff ff       	call   810009cc <_fflush_r>
81005152:	83 c4 10             	add    $0x10,%esp
81005155:	85 c0                	test   %eax,%eax
81005157:	74 45                	je     8100519e <__sfvwrite_r+0x2ff>
81005159:	e9 c7 01 00 00       	jmp    81005325 <__sfvwrite_r+0x486>
8100515e:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81005164:	77 04                	ja     8100516a <__sfvwrite_r+0x2cb>
81005166:	89 f8                	mov    %edi,%eax
81005168:	eb 05                	jmp    8100516f <__sfvwrite_r+0x2d0>
8100516a:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
8100516f:	8b 4b 14             	mov    0x14(%ebx),%ecx
81005172:	99                   	cltd   
81005173:	f7 f9                	idiv   %ecx
81005175:	89 c2                	mov    %eax,%edx
81005177:	8b 43 14             	mov    0x14(%ebx),%eax
8100517a:	89 d6                	mov    %edx,%esi
8100517c:	0f af f0             	imul   %eax,%esi
8100517f:	8b 53 24             	mov    0x24(%ebx),%edx
81005182:	8b 43 1c             	mov    0x1c(%ebx),%eax
81005185:	56                   	push   %esi
81005186:	ff 75 c4             	push   -0x3c(%ebp)
81005189:	50                   	push   %eax
8100518a:	ff 75 08             	push   0x8(%ebp)
8100518d:	ff d2                	call   *%edx
8100518f:	83 c4 10             	add    $0x10,%esp
81005192:	89 c6                	mov    %eax,%esi
81005194:	85 f6                	test   %esi,%esi
81005196:	0f 8e 85 01 00 00    	jle    81005321 <__sfvwrite_r+0x482>
8100519c:	eb 01                	jmp    8100519f <__sfvwrite_r+0x300>
8100519e:	90                   	nop
8100519f:	89 f0                	mov    %esi,%eax
810051a1:	01 45 c4             	add    %eax,-0x3c(%ebp)
810051a4:	89 f0                	mov    %esi,%eax
810051a6:	29 c7                	sub    %eax,%edi
810051a8:	8b 45 10             	mov    0x10(%ebp),%eax
810051ab:	8b 40 08             	mov    0x8(%eax),%eax
810051ae:	89 f2                	mov    %esi,%edx
810051b0:	29 d0                	sub    %edx,%eax
810051b2:	8b 4d 10             	mov    0x10(%ebp),%ecx
810051b5:	89 41 08             	mov    %eax,0x8(%ecx)
810051b8:	8b 45 10             	mov    0x10(%ebp),%eax
810051bb:	8b 40 08             	mov    0x8(%eax),%eax
810051be:	85 c0                	test   %eax,%eax
810051c0:	0f 85 d4 fd ff ff    	jne    81004f9a <__sfvwrite_r+0xfb>
810051c6:	e9 4c 01 00 00       	jmp    81005317 <__sfvwrite_r+0x478>
810051cb:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810051d2:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
810051d9:	eb 18                	jmp    810051f3 <__sfvwrite_r+0x354>
810051db:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810051e2:	8b 45 c0             	mov    -0x40(%ebp),%eax
810051e5:	8b 08                	mov    (%eax),%ecx
810051e7:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810051ea:	8b 78 04             	mov    0x4(%eax),%edi
810051ed:	83 c0 08             	add    $0x8,%eax
810051f0:	89 45 c0             	mov    %eax,-0x40(%ebp)
810051f3:	85 ff                	test   %edi,%edi
810051f5:	74 e4                	je     810051db <__sfvwrite_r+0x33c>
810051f7:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810051fb:	75 32                	jne    8100522f <__sfvwrite_r+0x390>
810051fd:	83 ec 04             	sub    $0x4,%esp
81005200:	57                   	push   %edi
81005201:	6a 0a                	push   $0xa
81005203:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81005206:	56                   	push   %esi
81005207:	e8 c4 dd ff ff       	call   81002fd0 <memchr>
8100520c:	83 c4 10             	add    $0x10,%esp
8100520f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005212:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81005216:	74 0a                	je     81005222 <__sfvwrite_r+0x383>
81005218:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100521b:	83 c0 01             	add    $0x1,%eax
8100521e:	29 f0                	sub    %esi,%eax
81005220:	eb 03                	jmp    81005225 <__sfvwrite_r+0x386>
81005222:	8d 47 01             	lea    0x1(%edi),%eax
81005225:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005228:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100522f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005232:	39 c7                	cmp    %eax,%edi
81005234:	0f 46 c7             	cmovbe %edi,%eax
81005237:	89 c1                	mov    %eax,%ecx
81005239:	8b 53 08             	mov    0x8(%ebx),%edx
8100523c:	8b 43 14             	mov    0x14(%ebx),%eax
8100523f:	8d 34 02             	lea    (%edx,%eax,1),%esi
81005242:	8b 13                	mov    (%ebx),%edx
81005244:	8b 43 10             	mov    0x10(%ebx),%eax
81005247:	39 c2                	cmp    %eax,%edx
81005249:	76 38                	jbe    81005283 <__sfvwrite_r+0x3e4>
8100524b:	39 f1                	cmp    %esi,%ecx
8100524d:	7e 34                	jle    81005283 <__sfvwrite_r+0x3e4>
8100524f:	89 f2                	mov    %esi,%edx
81005251:	8b 03                	mov    (%ebx),%eax
81005253:	83 ec 04             	sub    $0x4,%esp
81005256:	52                   	push   %edx
81005257:	ff 75 c4             	push   -0x3c(%ebp)
8100525a:	50                   	push   %eax
8100525b:	e8 30 05 00 00       	call   81005790 <memmove>
81005260:	83 c4 10             	add    $0x10,%esp
81005263:	8b 03                	mov    (%ebx),%eax
81005265:	89 f2                	mov    %esi,%edx
81005267:	01 d0                	add    %edx,%eax
81005269:	89 03                	mov    %eax,(%ebx)
8100526b:	83 ec 08             	sub    $0x8,%esp
8100526e:	53                   	push   %ebx
8100526f:	ff 75 08             	push   0x8(%ebp)
81005272:	e8 55 b7 ff ff       	call   810009cc <_fflush_r>
81005277:	83 c4 10             	add    $0x10,%esp
8100527a:	85 c0                	test   %eax,%eax
8100527c:	74 4f                	je     810052cd <__sfvwrite_r+0x42e>
8100527e:	e9 a2 00 00 00       	jmp    81005325 <__sfvwrite_r+0x486>
81005283:	8b 73 14             	mov    0x14(%ebx),%esi
81005286:	89 c8                	mov    %ecx,%eax
81005288:	39 c6                	cmp    %eax,%esi
8100528a:	7f 1b                	jg     810052a7 <__sfvwrite_r+0x408>
8100528c:	8b 53 24             	mov    0x24(%ebx),%edx
8100528f:	8b 43 1c             	mov    0x1c(%ebx),%eax
81005292:	56                   	push   %esi
81005293:	ff 75 c4             	push   -0x3c(%ebp)
81005296:	50                   	push   %eax
81005297:	ff 75 08             	push   0x8(%ebp)
8100529a:	ff d2                	call   *%edx
8100529c:	83 c4 10             	add    $0x10,%esp
8100529f:	89 c6                	mov    %eax,%esi
810052a1:	85 f6                	test   %esi,%esi
810052a3:	7f 28                	jg     810052cd <__sfvwrite_r+0x42e>
810052a5:	eb 7e                	jmp    81005325 <__sfvwrite_r+0x486>
810052a7:	89 ce                	mov    %ecx,%esi
810052a9:	89 f2                	mov    %esi,%edx
810052ab:	8b 03                	mov    (%ebx),%eax
810052ad:	83 ec 04             	sub    $0x4,%esp
810052b0:	52                   	push   %edx
810052b1:	ff 75 c4             	push   -0x3c(%ebp)
810052b4:	50                   	push   %eax
810052b5:	e8 d6 04 00 00       	call   81005790 <memmove>
810052ba:	83 c4 10             	add    $0x10,%esp
810052bd:	8b 43 08             	mov    0x8(%ebx),%eax
810052c0:	29 f0                	sub    %esi,%eax
810052c2:	89 43 08             	mov    %eax,0x8(%ebx)
810052c5:	8b 03                	mov    (%ebx),%eax
810052c7:	89 f2                	mov    %esi,%edx
810052c9:	01 d0                	add    %edx,%eax
810052cb:	89 03                	mov    %eax,(%ebx)
810052cd:	29 75 e0             	sub    %esi,-0x20(%ebp)
810052d0:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810052d4:	75 1a                	jne    810052f0 <__sfvwrite_r+0x451>
810052d6:	83 ec 08             	sub    $0x8,%esp
810052d9:	53                   	push   %ebx
810052da:	ff 75 08             	push   0x8(%ebp)
810052dd:	e8 ea b6 ff ff       	call   810009cc <_fflush_r>
810052e2:	83 c4 10             	add    $0x10,%esp
810052e5:	85 c0                	test   %eax,%eax
810052e7:	75 3b                	jne    81005324 <__sfvwrite_r+0x485>
810052e9:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810052f0:	89 f0                	mov    %esi,%eax
810052f2:	01 45 c4             	add    %eax,-0x3c(%ebp)
810052f5:	89 f0                	mov    %esi,%eax
810052f7:	29 c7                	sub    %eax,%edi
810052f9:	8b 45 10             	mov    0x10(%ebp),%eax
810052fc:	8b 40 08             	mov    0x8(%eax),%eax
810052ff:	89 f2                	mov    %esi,%edx
81005301:	29 d0                	sub    %edx,%eax
81005303:	8b 4d 10             	mov    0x10(%ebp),%ecx
81005306:	89 41 08             	mov    %eax,0x8(%ecx)
81005309:	8b 45 10             	mov    0x10(%ebp),%eax
8100530c:	8b 40 08             	mov    0x8(%eax),%eax
8100530f:	85 c0                	test   %eax,%eax
81005311:	0f 85 dc fe ff ff    	jne    810051f3 <__sfvwrite_r+0x354>
81005317:	b8 00 00 00 00       	mov    $0x0,%eax
8100531c:	eb 17                	jmp    81005335 <__sfvwrite_r+0x496>
8100531e:	90                   	nop
8100531f:	eb 04                	jmp    81005325 <__sfvwrite_r+0x486>
81005321:	90                   	nop
81005322:	eb 01                	jmp    81005325 <__sfvwrite_r+0x486>
81005324:	90                   	nop
81005325:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005329:	83 c8 40             	or     $0x40,%eax
8100532c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005330:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005335:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005338:	5b                   	pop    %ebx
81005339:	5e                   	pop    %esi
8100533a:	5f                   	pop    %edi
8100533b:	5d                   	pop    %ebp
8100533c:	c3                   	ret    

8100533d <_findenv>:
8100533d:	55                   	push   %ebp
8100533e:	89 e5                	mov    %esp,%ebp
81005340:	83 ec 08             	sub    $0x8,%esp
81005343:	8b 55 08             	mov    0x8(%ebp),%edx
81005346:	a1 a4 70 00 81       	mov    0x810070a4,%eax
8100534b:	83 ec 04             	sub    $0x4,%esp
8100534e:	ff 75 0c             	push   0xc(%ebp)
81005351:	52                   	push   %edx
81005352:	50                   	push   %eax
81005353:	e8 25 00 00 00       	call   8100537d <_findenv_r>
81005358:	83 c4 10             	add    $0x10,%esp
8100535b:	c9                   	leave  
8100535c:	c3                   	ret    

8100535d <getenv>:
8100535d:	55                   	push   %ebp
8100535e:	89 e5                	mov    %esp,%ebp
81005360:	83 ec 18             	sub    $0x18,%esp
81005363:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81005368:	83 ec 04             	sub    $0x4,%esp
8100536b:	8d 55 f4             	lea    -0xc(%ebp),%edx
8100536e:	52                   	push   %edx
8100536f:	ff 75 08             	push   0x8(%ebp)
81005372:	50                   	push   %eax
81005373:	e8 05 00 00 00       	call   8100537d <_findenv_r>
81005378:	83 c4 10             	add    $0x10,%esp
8100537b:	c9                   	leave  
8100537c:	c3                   	ret    

8100537d <_findenv_r>:
8100537d:	55                   	push   %ebp
8100537e:	89 e5                	mov    %esp,%ebp
81005380:	57                   	push   %edi
81005381:	56                   	push   %esi
81005382:	53                   	push   %ebx
81005383:	83 ec 1c             	sub    $0x1c,%esp
81005386:	8b 7d 0c             	mov    0xc(%ebp),%edi
81005389:	83 ec 0c             	sub    $0xc,%esp
8100538c:	ff 75 08             	push   0x8(%ebp)
8100538f:	e8 ac 12 00 00       	call   81006640 <__env_lock>
81005394:	83 c4 10             	add    $0x10,%esp
81005397:	a1 d0 74 00 81       	mov    0x810074d0,%eax
8100539c:	8b 00                	mov    (%eax),%eax
8100539e:	85 c0                	test   %eax,%eax
810053a0:	75 18                	jne    810053ba <_findenv_r+0x3d>
810053a2:	83 ec 0c             	sub    $0xc,%esp
810053a5:	ff 75 08             	push   0x8(%ebp)
810053a8:	e8 99 12 00 00       	call   81006646 <__env_unlock>
810053ad:	83 c4 10             	add    $0x10,%esp
810053b0:	b8 00 00 00 00       	mov    $0x0,%eax
810053b5:	e9 a8 00 00 00       	jmp    81005462 <_findenv_r+0xe5>
810053ba:	89 7d e4             	mov    %edi,-0x1c(%ebp)
810053bd:	eb 04                	jmp    810053c3 <_findenv_r+0x46>
810053bf:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810053c3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810053c6:	0f b6 00             	movzbl (%eax),%eax
810053c9:	84 c0                	test   %al,%al
810053cb:	74 0a                	je     810053d7 <_findenv_r+0x5a>
810053cd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810053d0:	0f b6 00             	movzbl (%eax),%eax
810053d3:	3c 3d                	cmp    $0x3d,%al
810053d5:	75 e8                	jne    810053bf <_findenv_r+0x42>
810053d7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810053da:	0f b6 00             	movzbl (%eax),%eax
810053dd:	3c 3d                	cmp    $0x3d,%al
810053df:	74 6e                	je     8100544f <_findenv_r+0xd2>
810053e1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810053e4:	29 f8                	sub    %edi,%eax
810053e6:	89 c6                	mov    %eax,%esi
810053e8:	a1 d0 74 00 81       	mov    0x810074d0,%eax
810053ed:	8b 18                	mov    (%eax),%ebx
810053ef:	eb 58                	jmp    81005449 <_findenv_r+0xcc>
810053f1:	89 f2                	mov    %esi,%edx
810053f3:	8b 03                	mov    (%ebx),%eax
810053f5:	83 ec 04             	sub    $0x4,%esp
810053f8:	52                   	push   %edx
810053f9:	57                   	push   %edi
810053fa:	50                   	push   %eax
810053fb:	e8 d8 0f 00 00       	call   810063d8 <strncmp>
81005400:	83 c4 10             	add    $0x10,%esp
81005403:	85 c0                	test   %eax,%eax
81005405:	75 3f                	jne    81005446 <_findenv_r+0xc9>
81005407:	8b 03                	mov    (%ebx),%eax
81005409:	89 f2                	mov    %esi,%edx
8100540b:	01 d0                	add    %edx,%eax
8100540d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005410:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005413:	0f b6 00             	movzbl (%eax),%eax
81005416:	3c 3d                	cmp    $0x3d,%al
81005418:	75 2c                	jne    81005446 <_findenv_r+0xc9>
8100541a:	a1 d0 74 00 81       	mov    0x810074d0,%eax
8100541f:	8b 10                	mov    (%eax),%edx
81005421:	89 d8                	mov    %ebx,%eax
81005423:	29 d0                	sub    %edx,%eax
81005425:	c1 f8 02             	sar    $0x2,%eax
81005428:	89 c2                	mov    %eax,%edx
8100542a:	8b 45 10             	mov    0x10(%ebp),%eax
8100542d:	89 10                	mov    %edx,(%eax)
8100542f:	83 ec 0c             	sub    $0xc,%esp
81005432:	ff 75 08             	push   0x8(%ebp)
81005435:	e8 0c 12 00 00       	call   81006646 <__env_unlock>
8100543a:	83 c4 10             	add    $0x10,%esp
8100543d:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81005441:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005444:	eb 1c                	jmp    81005462 <_findenv_r+0xe5>
81005446:	83 c3 04             	add    $0x4,%ebx
81005449:	8b 03                	mov    (%ebx),%eax
8100544b:	85 c0                	test   %eax,%eax
8100544d:	75 a2                	jne    810053f1 <_findenv_r+0x74>
8100544f:	83 ec 0c             	sub    $0xc,%esp
81005452:	ff 75 08             	push   0x8(%ebp)
81005455:	e8 ec 11 00 00       	call   81006646 <__env_unlock>
8100545a:	83 c4 10             	add    $0x10,%esp
8100545d:	b8 00 00 00 00       	mov    $0x0,%eax
81005462:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005465:	5b                   	pop    %ebx
81005466:	5e                   	pop    %esi
81005467:	5f                   	pop    %edi
81005468:	5d                   	pop    %ebp
81005469:	c3                   	ret    

8100546a <_getenv_r>:
8100546a:	55                   	push   %ebp
8100546b:	89 e5                	mov    %esp,%ebp
8100546d:	83 ec 18             	sub    $0x18,%esp
81005470:	83 ec 04             	sub    $0x4,%esp
81005473:	8d 45 f4             	lea    -0xc(%ebp),%eax
81005476:	50                   	push   %eax
81005477:	ff 75 0c             	push   0xc(%ebp)
8100547a:	ff 75 08             	push   0x8(%ebp)
8100547d:	e8 fb fe ff ff       	call   8100537d <_findenv_r>
81005482:	83 c4 10             	add    $0x10,%esp
81005485:	c9                   	leave  
81005486:	c3                   	ret    

81005487 <__get_global_locale>:
81005487:	55                   	push   %ebp
81005488:	89 e5                	mov    %esp,%ebp
8100548a:	b8 e0 74 00 81       	mov    $0x810074e0,%eax
8100548f:	5d                   	pop    %ebp
81005490:	c3                   	ret    

81005491 <__get_current_locale>:
81005491:	55                   	push   %ebp
81005492:	89 e5                	mov    %esp,%ebp
81005494:	e8 ee ff ff ff       	call   81005487 <__get_global_locale>
81005499:	5d                   	pop    %ebp
8100549a:	c3                   	ret    

8100549b <_setlocale_r>:
8100549b:	55                   	push   %ebp
8100549c:	89 e5                	mov    %esp,%ebp
8100549e:	83 ec 08             	sub    $0x8,%esp
810054a1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810054a5:	74 4c                	je     810054f3 <_setlocale_r+0x58>
810054a7:	83 ec 08             	sub    $0x8,%esp
810054aa:	68 44 6c 00 81       	push   $0x81006c44
810054af:	ff 75 10             	push   0x10(%ebp)
810054b2:	e8 05 ee ff ff       	call   810042bc <strcmp>
810054b7:	83 c4 10             	add    $0x10,%esp
810054ba:	85 c0                	test   %eax,%eax
810054bc:	74 35                	je     810054f3 <_setlocale_r+0x58>
810054be:	83 ec 08             	sub    $0x8,%esp
810054c1:	68 4a 6c 00 81       	push   $0x81006c4a
810054c6:	ff 75 10             	push   0x10(%ebp)
810054c9:	e8 ee ed ff ff       	call   810042bc <strcmp>
810054ce:	83 c4 10             	add    $0x10,%esp
810054d1:	85 c0                	test   %eax,%eax
810054d3:	74 1e                	je     810054f3 <_setlocale_r+0x58>
810054d5:	83 ec 08             	sub    $0x8,%esp
810054d8:	68 43 6c 00 81       	push   $0x81006c43
810054dd:	ff 75 10             	push   0x10(%ebp)
810054e0:	e8 d7 ed ff ff       	call   810042bc <strcmp>
810054e5:	83 c4 10             	add    $0x10,%esp
810054e8:	85 c0                	test   %eax,%eax
810054ea:	74 07                	je     810054f3 <_setlocale_r+0x58>
810054ec:	b8 00 00 00 00       	mov    $0x0,%eax
810054f1:	eb 05                	jmp    810054f8 <_setlocale_r+0x5d>
810054f3:	b8 4a 6c 00 81       	mov    $0x81006c4a,%eax
810054f8:	c9                   	leave  
810054f9:	c3                   	ret    

810054fa <__locale_mb_cur_max>:
810054fa:	55                   	push   %ebp
810054fb:	89 e5                	mov    %esp,%ebp
810054fd:	e8 8f ff ff ff       	call   81005491 <__get_current_locale>
81005502:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
81005509:	0f be c0             	movsbl %al,%eax
8100550c:	5d                   	pop    %ebp
8100550d:	c3                   	ret    

8100550e <setlocale>:
8100550e:	55                   	push   %ebp
8100550f:	89 e5                	mov    %esp,%ebp
81005511:	83 ec 08             	sub    $0x8,%esp
81005514:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81005519:	83 ec 04             	sub    $0x4,%esp
8100551c:	ff 75 0c             	push   0xc(%ebp)
8100551f:	ff 75 08             	push   0x8(%ebp)
81005522:	50                   	push   %eax
81005523:	e8 73 ff ff ff       	call   8100549b <_setlocale_r>
81005528:	83 c4 10             	add    $0x10,%esp
8100552b:	c9                   	leave  
8100552c:	c3                   	ret    

8100552d <_lseek_r>:
8100552d:	55                   	push   %ebp
8100552e:	89 e5                	mov    %esp,%ebp
81005530:	83 ec 18             	sub    $0x18,%esp
81005533:	c7 05 f0 7c 00 81 00 	movl   $0x0,0x81007cf0
8100553a:	00 00 00 
8100553d:	83 ec 04             	sub    $0x4,%esp
81005540:	ff 75 14             	push   0x14(%ebp)
81005543:	ff 75 10             	push   0x10(%ebp)
81005546:	ff 75 0c             	push   0xc(%ebp)
81005549:	e8 6d b1 ff ff       	call   810006bb <lseek>
8100554e:	83 c4 10             	add    $0x10,%esp
81005551:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005554:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81005558:	75 14                	jne    8100556e <_lseek_r+0x41>
8100555a:	a1 f0 7c 00 81       	mov    0x81007cf0,%eax
8100555f:	85 c0                	test   %eax,%eax
81005561:	74 0b                	je     8100556e <_lseek_r+0x41>
81005563:	8b 15 f0 7c 00 81    	mov    0x81007cf0,%edx
81005569:	8b 45 08             	mov    0x8(%ebp),%eax
8100556c:	89 10                	mov    %edx,(%eax)
8100556e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005571:	c9                   	leave  
81005572:	c3                   	ret    

81005573 <__smakebuf_r>:
81005573:	55                   	push   %ebp
81005574:	89 e5                	mov    %esp,%ebp
81005576:	56                   	push   %esi
81005577:	53                   	push   %ebx
81005578:	83 ec 10             	sub    $0x10,%esp
8100557b:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100557e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005582:	98                   	cwtl   
81005583:	83 e0 02             	and    $0x2,%eax
81005586:	85 c0                	test   %eax,%eax
81005588:	74 16                	je     810055a0 <__smakebuf_r+0x2d>
8100558a:	8d 43 43             	lea    0x43(%ebx),%eax
8100558d:	89 03                	mov    %eax,(%ebx)
8100558f:	8b 03                	mov    (%ebx),%eax
81005591:	89 43 10             	mov    %eax,0x10(%ebx)
81005594:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
8100559b:	e9 b9 00 00 00       	jmp    81005659 <__smakebuf_r+0xe6>
810055a0:	8d 45 ec             	lea    -0x14(%ebp),%eax
810055a3:	50                   	push   %eax
810055a4:	8d 45 f0             	lea    -0x10(%ebp),%eax
810055a7:	50                   	push   %eax
810055a8:	53                   	push   %ebx
810055a9:	ff 75 08             	push   0x8(%ebp)
810055ac:	e8 af 00 00 00       	call   81005660 <__swhatbuf_r>
810055b1:	83 c4 10             	add    $0x10,%esp
810055b4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810055b7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810055ba:	83 ec 08             	sub    $0x8,%esp
810055bd:	50                   	push   %eax
810055be:	ff 75 08             	push   0x8(%ebp)
810055c1:	e8 e2 d1 ff ff       	call   810027a8 <_malloc_r>
810055c6:	83 c4 10             	add    $0x10,%esp
810055c9:	89 c6                	mov    %eax,%esi
810055cb:	85 f6                	test   %esi,%esi
810055cd:	75 2f                	jne    810055fe <__smakebuf_r+0x8b>
810055cf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810055d3:	98                   	cwtl   
810055d4:	25 00 02 00 00       	and    $0x200,%eax
810055d9:	85 c0                	test   %eax,%eax
810055db:	75 7c                	jne    81005659 <__smakebuf_r+0xe6>
810055dd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810055e1:	83 e0 fc             	and    $0xfffffffc,%eax
810055e4:	83 c8 02             	or     $0x2,%eax
810055e7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810055eb:	8d 43 43             	lea    0x43(%ebx),%eax
810055ee:	89 03                	mov    %eax,(%ebx)
810055f0:	8b 03                	mov    (%ebx),%eax
810055f2:	89 43 10             	mov    %eax,0x10(%ebx)
810055f5:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810055fc:	eb 5b                	jmp    81005659 <__smakebuf_r+0xe6>
810055fe:	8b 45 08             	mov    0x8(%ebp),%eax
81005601:	c7 40 3c 94 0e 00 81 	movl   $0x81000e94,0x3c(%eax)
81005608:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100560c:	0c 80                	or     $0x80,%al
8100560e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005612:	89 33                	mov    %esi,(%ebx)
81005614:	8b 03                	mov    (%ebx),%eax
81005616:	89 43 10             	mov    %eax,0x10(%ebx)
81005619:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100561c:	89 43 14             	mov    %eax,0x14(%ebx)
8100561f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005622:	85 c0                	test   %eax,%eax
81005624:	74 26                	je     8100564c <__smakebuf_r+0xd9>
81005626:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100562a:	98                   	cwtl   
8100562b:	83 ec 08             	sub    $0x8,%esp
8100562e:	50                   	push   %eax
8100562f:	ff 75 08             	push   0x8(%ebp)
81005632:	e8 58 10 00 00       	call   8100668f <_isatty_r>
81005637:	83 c4 10             	add    $0x10,%esp
8100563a:	85 c0                	test   %eax,%eax
8100563c:	74 0e                	je     8100564c <__smakebuf_r+0xd9>
8100563e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005642:	83 e0 fc             	and    $0xfffffffc,%eax
81005645:	83 c8 01             	or     $0x1,%eax
81005648:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100564c:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81005650:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005653:	09 d0                	or     %edx,%eax
81005655:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005659:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100565c:	5b                   	pop    %ebx
8100565d:	5e                   	pop    %esi
8100565e:	5d                   	pop    %ebp
8100565f:	c3                   	ret    

81005660 <__swhatbuf_r>:
81005660:	55                   	push   %ebp
81005661:	89 e5                	mov    %esp,%ebp
81005663:	83 ec 58             	sub    $0x58,%esp
81005666:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
8100566d:	8b 45 0c             	mov    0xc(%ebp),%eax
81005670:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81005674:	66 85 c0             	test   %ax,%ax
81005677:	78 1f                	js     81005698 <__swhatbuf_r+0x38>
81005679:	8b 45 0c             	mov    0xc(%ebp),%eax
8100567c:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81005680:	98                   	cwtl   
81005681:	83 ec 04             	sub    $0x4,%esp
81005684:	8d 55 ac             	lea    -0x54(%ebp),%edx
81005687:	52                   	push   %edx
81005688:	50                   	push   %eax
81005689:	ff 75 08             	push   0x8(%ebp)
8100568c:	e8 bb 0f 00 00       	call   8100664c <_fstat_r>
81005691:	83 c4 10             	add    $0x10,%esp
81005694:	85 c0                	test   %eax,%eax
81005696:	79 35                	jns    810056cd <__swhatbuf_r+0x6d>
81005698:	8b 45 14             	mov    0x14(%ebp),%eax
8100569b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810056a1:	8b 45 0c             	mov    0xc(%ebp),%eax
810056a4:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810056a8:	98                   	cwtl   
810056a9:	25 80 00 00 00       	and    $0x80,%eax
810056ae:	85 c0                	test   %eax,%eax
810056b0:	74 0b                	je     810056bd <__swhatbuf_r+0x5d>
810056b2:	8b 45 10             	mov    0x10(%ebp),%eax
810056b5:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
810056bb:	eb 09                	jmp    810056c6 <__swhatbuf_r+0x66>
810056bd:	8b 45 10             	mov    0x10(%ebp),%eax
810056c0:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810056c6:	b8 00 00 00 00       	mov    $0x0,%eax
810056cb:	eb 24                	jmp    810056f1 <__swhatbuf_r+0x91>
810056cd:	8b 45 b0             	mov    -0x50(%ebp),%eax
810056d0:	25 00 f0 00 00       	and    $0xf000,%eax
810056d5:	3d 00 20 00 00       	cmp    $0x2000,%eax
810056da:	0f 94 c0             	sete   %al
810056dd:	0f b6 d0             	movzbl %al,%edx
810056e0:	8b 45 14             	mov    0x14(%ebp),%eax
810056e3:	89 10                	mov    %edx,(%eax)
810056e5:	8b 45 10             	mov    0x10(%ebp),%eax
810056e8:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810056ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
810056f1:	c9                   	leave  
810056f2:	c3                   	ret    

810056f3 <__get_global_locale>:
810056f3:	55                   	push   %ebp
810056f4:	89 e5                	mov    %esp,%ebp
810056f6:	b8 e0 74 00 81       	mov    $0x810074e0,%eax
810056fb:	5d                   	pop    %ebp
810056fc:	c3                   	ret    

810056fd <__get_current_locale>:
810056fd:	55                   	push   %ebp
810056fe:	89 e5                	mov    %esp,%ebp
81005700:	e8 ee ff ff ff       	call   810056f3 <__get_global_locale>
81005705:	5d                   	pop    %ebp
81005706:	c3                   	ret    

81005707 <_mbtowc_r>:
81005707:	55                   	push   %ebp
81005708:	89 e5                	mov    %esp,%ebp
8100570a:	83 ec 08             	sub    $0x8,%esp
8100570d:	e8 eb ff ff ff       	call   810056fd <__get_current_locale>
81005712:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
81005718:	83 ec 0c             	sub    $0xc,%esp
8100571b:	ff 75 18             	push   0x18(%ebp)
8100571e:	ff 75 14             	push   0x14(%ebp)
81005721:	ff 75 10             	push   0x10(%ebp)
81005724:	ff 75 0c             	push   0xc(%ebp)
81005727:	ff 75 08             	push   0x8(%ebp)
8100572a:	ff d0                	call   *%eax
8100572c:	83 c4 20             	add    $0x20,%esp
8100572f:	c9                   	leave  
81005730:	c3                   	ret    

81005731 <__ascii_mbtowc>:
81005731:	55                   	push   %ebp
81005732:	89 e5                	mov    %esp,%ebp
81005734:	83 ec 10             	sub    $0x10,%esp
81005737:	8b 45 10             	mov    0x10(%ebp),%eax
8100573a:	89 45 fc             	mov    %eax,-0x4(%ebp)
8100573d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005741:	75 06                	jne    81005749 <__ascii_mbtowc+0x18>
81005743:	8d 45 f8             	lea    -0x8(%ebp),%eax
81005746:	89 45 0c             	mov    %eax,0xc(%ebp)
81005749:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100574d:	75 07                	jne    81005756 <__ascii_mbtowc+0x25>
8100574f:	b8 00 00 00 00       	mov    $0x0,%eax
81005754:	eb 31                	jmp    81005787 <__ascii_mbtowc+0x56>
81005756:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100575a:	75 07                	jne    81005763 <__ascii_mbtowc+0x32>
8100575c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
81005761:	eb 24                	jmp    81005787 <__ascii_mbtowc+0x56>
81005763:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005766:	0f b6 00             	movzbl (%eax),%eax
81005769:	0f b6 d0             	movzbl %al,%edx
8100576c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100576f:	89 10                	mov    %edx,(%eax)
81005771:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005774:	0f b6 00             	movzbl (%eax),%eax
81005777:	84 c0                	test   %al,%al
81005779:	75 07                	jne    81005782 <__ascii_mbtowc+0x51>
8100577b:	b8 00 00 00 00       	mov    $0x0,%eax
81005780:	eb 05                	jmp    81005787 <__ascii_mbtowc+0x56>
81005782:	b8 01 00 00 00       	mov    $0x1,%eax
81005787:	c9                   	leave  
81005788:	c3                   	ret    
81005789:	66 90                	xchg   %ax,%ax
8100578b:	66 90                	xchg   %ax,%ax
8100578d:	66 90                	xchg   %ax,%ax
8100578f:	90                   	nop

81005790 <memmove>:
81005790:	55                   	push   %ebp
81005791:	89 e5                	mov    %esp,%ebp
81005793:	56                   	push   %esi
81005794:	57                   	push   %edi
81005795:	53                   	push   %ebx
81005796:	8b 7d 08             	mov    0x8(%ebp),%edi
81005799:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100579c:	8b 75 0c             	mov    0xc(%ebp),%esi
8100579f:	fc                   	cld    
810057a0:	39 fe                	cmp    %edi,%esi
810057a2:	73 43                	jae    810057e7 <memmove+0x57>
810057a4:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
810057a8:	39 df                	cmp    %ebx,%edi
810057aa:	77 3b                	ja     810057e7 <memmove+0x57>
810057ac:	01 ce                	add    %ecx,%esi
810057ae:	01 cf                	add    %ecx,%edi
810057b0:	fd                   	std    
810057b1:	83 f9 08             	cmp    $0x8,%ecx
810057b4:	76 2b                	jbe    810057e1 <memmove+0x51>
810057b6:	89 fa                	mov    %edi,%edx
810057b8:	89 cb                	mov    %ecx,%ebx
810057ba:	83 e2 03             	and    $0x3,%edx
810057bd:	74 0c                	je     810057cb <memmove+0x3b>
810057bf:	89 d1                	mov    %edx,%ecx
810057c1:	4e                   	dec    %esi
810057c2:	4f                   	dec    %edi
810057c3:	29 cb                	sub    %ecx,%ebx
810057c5:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810057c7:	89 d9                	mov    %ebx,%ecx
810057c9:	46                   	inc    %esi
810057ca:	47                   	inc    %edi
810057cb:	c1 e9 02             	shr    $0x2,%ecx
810057ce:	83 ee 04             	sub    $0x4,%esi
810057d1:	83 ef 04             	sub    $0x4,%edi
810057d4:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
810057d6:	83 c6 04             	add    $0x4,%esi
810057d9:	83 c7 04             	add    $0x4,%edi
810057dc:	89 d9                	mov    %ebx,%ecx
810057de:	83 e1 03             	and    $0x3,%ecx
810057e1:	4e                   	dec    %esi
810057e2:	4f                   	dec    %edi
810057e3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810057e5:	eb 2a                	jmp    81005811 <memmove+0x81>
810057e7:	83 f9 08             	cmp    $0x8,%ecx
810057ea:	76 23                	jbe    8100580f <memmove+0x7f>
810057ec:	89 fa                	mov    %edi,%edx
810057ee:	89 cb                	mov    %ecx,%ebx
810057f0:	83 e2 03             	and    $0x3,%edx
810057f3:	74 10                	je     81005805 <memmove+0x75>
810057f5:	b9 04 00 00 00       	mov    $0x4,%ecx
810057fa:	29 d1                	sub    %edx,%ecx
810057fc:	83 e1 03             	and    $0x3,%ecx
810057ff:	29 cb                	sub    %ecx,%ebx
81005801:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005803:	89 d9                	mov    %ebx,%ecx
81005805:	c1 e9 02             	shr    $0x2,%ecx
81005808:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
8100580a:	89 d9                	mov    %ebx,%ecx
8100580c:	83 e1 03             	and    $0x3,%ecx
8100580f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005811:	8b 45 08             	mov    0x8(%ebp),%eax
81005814:	fc                   	cld    
81005815:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005818:	5b                   	pop    %ebx
81005819:	5f                   	pop    %edi
8100581a:	5e                   	pop    %esi
8100581b:	c9                   	leave  
8100581c:	c3                   	ret    

8100581d <__sputc_r>:
8100581d:	55                   	push   %ebp
8100581e:	89 e5                	mov    %esp,%ebp
81005820:	83 ec 08             	sub    $0x8,%esp
81005823:	8b 45 10             	mov    0x10(%ebp),%eax
81005826:	8b 40 08             	mov    0x8(%eax),%eax
81005829:	8d 50 ff             	lea    -0x1(%eax),%edx
8100582c:	8b 45 10             	mov    0x10(%ebp),%eax
8100582f:	89 50 08             	mov    %edx,0x8(%eax)
81005832:	8b 45 10             	mov    0x10(%ebp),%eax
81005835:	8b 40 08             	mov    0x8(%eax),%eax
81005838:	85 c0                	test   %eax,%eax
8100583a:	79 17                	jns    81005853 <__sputc_r+0x36>
8100583c:	8b 45 10             	mov    0x10(%ebp),%eax
8100583f:	8b 50 08             	mov    0x8(%eax),%edx
81005842:	8b 45 10             	mov    0x10(%ebp),%eax
81005845:	8b 40 18             	mov    0x18(%eax),%eax
81005848:	39 c2                	cmp    %eax,%edx
8100584a:	7c 21                	jl     8100586d <__sputc_r+0x50>
8100584c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100584f:	3c 0a                	cmp    $0xa,%al
81005851:	74 1a                	je     8100586d <__sputc_r+0x50>
81005853:	8b 45 10             	mov    0x10(%ebp),%eax
81005856:	8b 00                	mov    (%eax),%eax
81005858:	8d 48 01             	lea    0x1(%eax),%ecx
8100585b:	8b 55 10             	mov    0x10(%ebp),%edx
8100585e:	89 0a                	mov    %ecx,(%edx)
81005860:	8b 55 0c             	mov    0xc(%ebp),%edx
81005863:	88 10                	mov    %dl,(%eax)
81005865:	0f b6 00             	movzbl (%eax),%eax
81005868:	0f b6 c0             	movzbl %al,%eax
8100586b:	eb 14                	jmp    81005881 <__sputc_r+0x64>
8100586d:	83 ec 04             	sub    $0x4,%esp
81005870:	ff 75 10             	push   0x10(%ebp)
81005873:	ff 75 0c             	push   0xc(%ebp)
81005876:	ff 75 08             	push   0x8(%ebp)
81005879:	e8 d1 ee ff ff       	call   8100474f <__swbuf_r>
8100587e:	83 c4 10             	add    $0x10,%esp
81005881:	c9                   	leave  
81005882:	c3                   	ret    

81005883 <_putc_r>:
81005883:	55                   	push   %ebp
81005884:	89 e5                	mov    %esp,%ebp
81005886:	53                   	push   %ebx
81005887:	83 ec 14             	sub    $0x14,%esp
8100588a:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100588d:	8b 45 08             	mov    0x8(%ebp),%eax
81005890:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005893:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005897:	74 18                	je     810058b1 <_putc_r+0x2e>
81005899:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100589c:	8b 40 38             	mov    0x38(%eax),%eax
8100589f:	85 c0                	test   %eax,%eax
810058a1:	75 0e                	jne    810058b1 <_putc_r+0x2e>
810058a3:	83 ec 0c             	sub    $0xc,%esp
810058a6:	ff 75 f4             	push   -0xc(%ebp)
810058a9:	e8 21 b6 ff ff       	call   81000ecf <__sinit>
810058ae:	83 c4 10             	add    $0x10,%esp
810058b1:	83 ec 04             	sub    $0x4,%esp
810058b4:	53                   	push   %ebx
810058b5:	ff 75 0c             	push   0xc(%ebp)
810058b8:	ff 75 08             	push   0x8(%ebp)
810058bb:	e8 5d ff ff ff       	call   8100581d <__sputc_r>
810058c0:	83 c4 10             	add    $0x10,%esp
810058c3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810058c6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810058c9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810058cc:	c9                   	leave  
810058cd:	c3                   	ret    

810058ce <putc>:
810058ce:	55                   	push   %ebp
810058cf:	89 e5                	mov    %esp,%ebp
810058d1:	53                   	push   %ebx
810058d2:	83 ec 14             	sub    $0x14,%esp
810058d5:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810058d8:	a1 a4 70 00 81       	mov    0x810070a4,%eax
810058dd:	89 45 f4             	mov    %eax,-0xc(%ebp)
810058e0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810058e3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810058e6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810058ea:	74 18                	je     81005904 <putc+0x36>
810058ec:	8b 45 f0             	mov    -0x10(%ebp),%eax
810058ef:	8b 40 38             	mov    0x38(%eax),%eax
810058f2:	85 c0                	test   %eax,%eax
810058f4:	75 0e                	jne    81005904 <putc+0x36>
810058f6:	83 ec 0c             	sub    $0xc,%esp
810058f9:	ff 75 f0             	push   -0x10(%ebp)
810058fc:	e8 ce b5 ff ff       	call   81000ecf <__sinit>
81005901:	83 c4 10             	add    $0x10,%esp
81005904:	83 ec 04             	sub    $0x4,%esp
81005907:	53                   	push   %ebx
81005908:	ff 75 08             	push   0x8(%ebp)
8100590b:	ff 75 f4             	push   -0xc(%ebp)
8100590e:	e8 0a ff ff ff       	call   8100581d <__sputc_r>
81005913:	83 c4 10             	add    $0x10,%esp
81005916:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005919:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100591c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100591f:	c9                   	leave  
81005920:	c3                   	ret    

81005921 <_read_r>:
81005921:	55                   	push   %ebp
81005922:	89 e5                	mov    %esp,%ebp
81005924:	83 ec 18             	sub    $0x18,%esp
81005927:	c7 05 f0 7c 00 81 00 	movl   $0x0,0x81007cf0
8100592e:	00 00 00 
81005931:	83 ec 04             	sub    $0x4,%esp
81005934:	ff 75 14             	push   0x14(%ebp)
81005937:	ff 75 10             	push   0x10(%ebp)
8100593a:	ff 75 0c             	push   0xc(%ebp)
8100593d:	e8 fe ac ff ff       	call   81000640 <read>
81005942:	83 c4 10             	add    $0x10,%esp
81005945:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005948:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100594c:	75 14                	jne    81005962 <_read_r+0x41>
8100594e:	a1 f0 7c 00 81       	mov    0x81007cf0,%eax
81005953:	85 c0                	test   %eax,%eax
81005955:	74 0b                	je     81005962 <_read_r+0x41>
81005957:	8b 15 f0 7c 00 81    	mov    0x81007cf0,%edx
8100595d:	8b 45 08             	mov    0x8(%ebp),%eax
81005960:	89 10                	mov    %edx,(%eax)
81005962:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005965:	c9                   	leave  
81005966:	c3                   	ret    

81005967 <_realloc_r>:
81005967:	55                   	push   %ebp
81005968:	89 e5                	mov    %esp,%ebp
8100596a:	83 ec 78             	sub    $0x78,%esp
8100596d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005971:	75 16                	jne    81005989 <_realloc_r+0x22>
81005973:	83 ec 08             	sub    $0x8,%esp
81005976:	ff 75 10             	push   0x10(%ebp)
81005979:	ff 75 08             	push   0x8(%ebp)
8100597c:	e8 27 ce ff ff       	call   810027a8 <_malloc_r>
81005981:	83 c4 10             	add    $0x10,%esp
81005984:	e9 b6 08 00 00       	jmp    8100623f <_realloc_r+0x8d8>
81005989:	83 ec 0c             	sub    $0xc,%esp
8100598c:	ff 75 08             	push   0x8(%ebp)
8100598f:	e8 f4 d7 ff ff       	call   81003188 <__malloc_lock>
81005994:	83 c4 10             	add    $0x10,%esp
81005997:	8b 45 0c             	mov    0xc(%ebp),%eax
8100599a:	83 e8 08             	sub    $0x8,%eax
8100599d:	89 45 c4             	mov    %eax,-0x3c(%ebp)
810059a0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810059a3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810059a6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810059a9:	8b 40 04             	mov    0x4(%eax),%eax
810059ac:	83 e0 fc             	and    $0xfffffffc,%eax
810059af:	89 45 c0             	mov    %eax,-0x40(%ebp)
810059b2:	8b 45 c0             	mov    -0x40(%ebp),%eax
810059b5:	89 45 f0             	mov    %eax,-0x10(%ebp)
810059b8:	8b 45 10             	mov    0x10(%ebp),%eax
810059bb:	83 c0 0b             	add    $0xb,%eax
810059be:	83 f8 16             	cmp    $0x16,%eax
810059c1:	76 0b                	jbe    810059ce <_realloc_r+0x67>
810059c3:	8b 45 10             	mov    0x10(%ebp),%eax
810059c6:	83 c0 0b             	add    $0xb,%eax
810059c9:	83 e0 f8             	and    $0xfffffff8,%eax
810059cc:	eb 05                	jmp    810059d3 <_realloc_r+0x6c>
810059ce:	b8 10 00 00 00       	mov    $0x10,%eax
810059d3:	89 45 bc             	mov    %eax,-0x44(%ebp)
810059d6:	8b 45 bc             	mov    -0x44(%ebp),%eax
810059d9:	85 c0                	test   %eax,%eax
810059db:	78 08                	js     810059e5 <_realloc_r+0x7e>
810059dd:	8b 45 bc             	mov    -0x44(%ebp),%eax
810059e0:	3b 45 10             	cmp    0x10(%ebp),%eax
810059e3:	73 13                	jae    810059f8 <_realloc_r+0x91>
810059e5:	8b 45 08             	mov    0x8(%ebp),%eax
810059e8:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810059ee:	b8 00 00 00 00       	mov    $0x0,%eax
810059f3:	e9 47 08 00 00       	jmp    8100623f <_realloc_r+0x8d8>
810059f8:	8b 55 c0             	mov    -0x40(%ebp),%edx
810059fb:	8b 45 bc             	mov    -0x44(%ebp),%eax
810059fe:	39 c2                	cmp    %eax,%edx
81005a00:	0f 8d 8b 07 00 00    	jge    81006191 <_realloc_r+0x82a>
81005a06:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81005a09:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005a0c:	01 d0                	add    %edx,%eax
81005a0e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005a11:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81005a16:	8b 40 08             	mov    0x8(%eax),%eax
81005a19:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005a1c:	74 1e                	je     81005a3c <_realloc_r+0xd5>
81005a1e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005a21:	8b 40 04             	mov    0x4(%eax),%eax
81005a24:	83 e0 fe             	and    $0xfffffffe,%eax
81005a27:	89 c2                	mov    %eax,%edx
81005a29:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005a2c:	01 d0                	add    %edx,%eax
81005a2e:	8b 40 04             	mov    0x4(%eax),%eax
81005a31:	83 e0 01             	and    $0x1,%eax
81005a34:	85 c0                	test   %eax,%eax
81005a36:	0f 85 ca 00 00 00    	jne    81005b06 <_realloc_r+0x19f>
81005a3c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005a3f:	8b 40 04             	mov    0x4(%eax),%eax
81005a42:	83 e0 fc             	and    $0xfffffffc,%eax
81005a45:	89 45 e8             	mov    %eax,-0x18(%ebp)
81005a48:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81005a4d:	8b 40 08             	mov    0x8(%eax),%eax
81005a50:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005a53:	75 71                	jne    81005ac6 <_realloc_r+0x15f>
81005a55:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005a58:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005a5b:	01 d0                	add    %edx,%eax
81005a5d:	89 c2                	mov    %eax,%edx
81005a5f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005a62:	83 c0 10             	add    $0x10,%eax
81005a65:	39 c2                	cmp    %eax,%edx
81005a67:	0f 8c a9 00 00 00    	jl     81005b16 <_realloc_r+0x1af>
81005a6d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005a70:	01 45 f0             	add    %eax,-0x10(%ebp)
81005a73:	ba c0 70 00 81       	mov    $0x810070c0,%edx
81005a78:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81005a7b:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005a7e:	01 c8                	add    %ecx,%eax
81005a80:	89 42 08             	mov    %eax,0x8(%edx)
81005a83:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005a86:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005a89:	89 c2                	mov    %eax,%edx
81005a8b:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81005a90:	8b 40 08             	mov    0x8(%eax),%eax
81005a93:	83 ca 01             	or     $0x1,%edx
81005a96:	89 50 04             	mov    %edx,0x4(%eax)
81005a99:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005a9c:	8b 40 04             	mov    0x4(%eax),%eax
81005a9f:	83 e0 01             	and    $0x1,%eax
81005aa2:	0b 45 bc             	or     -0x44(%ebp),%eax
81005aa5:	89 c2                	mov    %eax,%edx
81005aa7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005aaa:	89 50 04             	mov    %edx,0x4(%eax)
81005aad:	83 ec 0c             	sub    $0xc,%esp
81005ab0:	ff 75 08             	push   0x8(%ebp)
81005ab3:	e8 d6 d6 ff ff       	call   8100318e <__malloc_unlock>
81005ab8:	83 c4 10             	add    $0x10,%esp
81005abb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005abe:	83 c0 08             	add    $0x8,%eax
81005ac1:	e9 79 07 00 00       	jmp    8100623f <_realloc_r+0x8d8>
81005ac6:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005ac9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005acc:	01 d0                	add    %edx,%eax
81005ace:	89 c2                	mov    %eax,%edx
81005ad0:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005ad3:	39 c2                	cmp    %eax,%edx
81005ad5:	7c 3f                	jl     81005b16 <_realloc_r+0x1af>
81005ad7:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005ada:	8b 40 0c             	mov    0xc(%eax),%eax
81005add:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005ae0:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005ae3:	8b 40 08             	mov    0x8(%eax),%eax
81005ae6:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005ae9:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005aec:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005aef:	89 50 0c             	mov    %edx,0xc(%eax)
81005af2:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005af5:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005af8:	89 50 08             	mov    %edx,0x8(%eax)
81005afb:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005afe:	01 45 f0             	add    %eax,-0x10(%ebp)
81005b01:	e9 8c 06 00 00       	jmp    81006192 <_realloc_r+0x82b>
81005b06:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81005b0d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81005b14:	eb 01                	jmp    81005b17 <_realloc_r+0x1b0>
81005b16:	90                   	nop
81005b17:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005b1a:	8b 40 04             	mov    0x4(%eax),%eax
81005b1d:	83 e0 01             	and    $0x1,%eax
81005b20:	85 c0                	test   %eax,%eax
81005b22:	0f 85 d6 04 00 00    	jne    81005ffe <_realloc_r+0x697>
81005b28:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005b2b:	8b 00                	mov    (%eax),%eax
81005b2d:	f7 d8                	neg    %eax
81005b2f:	89 c2                	mov    %eax,%edx
81005b31:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005b34:	01 d0                	add    %edx,%eax
81005b36:	89 45 b0             	mov    %eax,-0x50(%ebp)
81005b39:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005b3c:	8b 40 04             	mov    0x4(%eax),%eax
81005b3f:	83 e0 fc             	and    $0xfffffffc,%eax
81005b42:	89 45 ac             	mov    %eax,-0x54(%ebp)
81005b45:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81005b49:	0f 84 4a 03 00 00    	je     81005e99 <_realloc_r+0x532>
81005b4f:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81005b54:	8b 40 08             	mov    0x8(%eax),%eax
81005b57:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005b5a:	0f 85 b0 01 00 00    	jne    81005d10 <_realloc_r+0x3a9>
81005b60:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005b63:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005b66:	01 c2                	add    %eax,%edx
81005b68:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005b6b:	01 d0                	add    %edx,%eax
81005b6d:	89 c2                	mov    %eax,%edx
81005b6f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005b72:	83 c0 10             	add    $0x10,%eax
81005b75:	39 c2                	cmp    %eax,%edx
81005b77:	0f 8c 1c 03 00 00    	jl     81005e99 <_realloc_r+0x532>
81005b7d:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005b80:	8b 40 0c             	mov    0xc(%eax),%eax
81005b83:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005b86:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005b89:	8b 40 08             	mov    0x8(%eax),%eax
81005b8c:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005b8f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005b92:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005b95:	89 50 0c             	mov    %edx,0xc(%eax)
81005b98:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005b9b:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005b9e:	89 50 08             	mov    %edx,0x8(%eax)
81005ba1:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005ba4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005ba7:	8b 55 ac             	mov    -0x54(%ebp),%edx
81005baa:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005bad:	01 d0                	add    %edx,%eax
81005baf:	01 45 f0             	add    %eax,-0x10(%ebp)
81005bb2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005bb5:	83 c0 08             	add    $0x8,%eax
81005bb8:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005bbb:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005bbe:	83 e8 04             	sub    $0x4,%eax
81005bc1:	89 45 a0             	mov    %eax,-0x60(%ebp)
81005bc4:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81005bc8:	0f 87 de 00 00 00    	ja     81005cac <_realloc_r+0x345>
81005bce:	8b 45 0c             	mov    0xc(%ebp),%eax
81005bd1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005bd4:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005bd7:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005bda:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81005bde:	0f 86 90 00 00 00    	jbe    81005c74 <_realloc_r+0x30d>
81005be4:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005be7:	8d 42 04             	lea    0x4(%edx),%eax
81005bea:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005bed:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005bf0:	8d 48 04             	lea    0x4(%eax),%ecx
81005bf3:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005bf6:	8b 12                	mov    (%edx),%edx
81005bf8:	89 10                	mov    %edx,(%eax)
81005bfa:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005bfd:	8d 42 04             	lea    0x4(%edx),%eax
81005c00:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005c03:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005c06:	8d 48 04             	lea    0x4(%eax),%ecx
81005c09:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005c0c:	8b 12                	mov    (%edx),%edx
81005c0e:	89 10                	mov    %edx,(%eax)
81005c10:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81005c14:	76 5e                	jbe    81005c74 <_realloc_r+0x30d>
81005c16:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005c19:	8d 42 04             	lea    0x4(%edx),%eax
81005c1c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005c1f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005c22:	8d 48 04             	lea    0x4(%eax),%ecx
81005c25:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005c28:	8b 12                	mov    (%edx),%edx
81005c2a:	89 10                	mov    %edx,(%eax)
81005c2c:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005c2f:	8d 42 04             	lea    0x4(%edx),%eax
81005c32:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005c35:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005c38:	8d 48 04             	lea    0x4(%eax),%ecx
81005c3b:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005c3e:	8b 12                	mov    (%edx),%edx
81005c40:	89 10                	mov    %edx,(%eax)
81005c42:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81005c46:	76 2c                	jbe    81005c74 <_realloc_r+0x30d>
81005c48:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005c4b:	8d 42 04             	lea    0x4(%edx),%eax
81005c4e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005c51:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005c54:	8d 48 04             	lea    0x4(%eax),%ecx
81005c57:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005c5a:	8b 12                	mov    (%edx),%edx
81005c5c:	89 10                	mov    %edx,(%eax)
81005c5e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005c61:	8d 42 04             	lea    0x4(%edx),%eax
81005c64:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005c67:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005c6a:	8d 48 04             	lea    0x4(%eax),%ecx
81005c6d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005c70:	8b 12                	mov    (%edx),%edx
81005c72:	89 10                	mov    %edx,(%eax)
81005c74:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005c77:	8d 42 04             	lea    0x4(%edx),%eax
81005c7a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005c7d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005c80:	8d 48 04             	lea    0x4(%eax),%ecx
81005c83:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005c86:	8b 12                	mov    (%edx),%edx
81005c88:	89 10                	mov    %edx,(%eax)
81005c8a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005c8d:	8d 42 04             	lea    0x4(%edx),%eax
81005c90:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005c93:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005c96:	8d 48 04             	lea    0x4(%eax),%ecx
81005c99:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005c9c:	8b 12                	mov    (%edx),%edx
81005c9e:	89 10                	mov    %edx,(%eax)
81005ca0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005ca3:	8b 10                	mov    (%eax),%edx
81005ca5:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005ca8:	89 10                	mov    %edx,(%eax)
81005caa:	eb 14                	jmp    81005cc0 <_realloc_r+0x359>
81005cac:	83 ec 04             	sub    $0x4,%esp
81005caf:	ff 75 a0             	push   -0x60(%ebp)
81005cb2:	ff 75 0c             	push   0xc(%ebp)
81005cb5:	ff 75 a8             	push   -0x58(%ebp)
81005cb8:	e8 d3 fa ff ff       	call   81005790 <memmove>
81005cbd:	83 c4 10             	add    $0x10,%esp
81005cc0:	ba c0 70 00 81       	mov    $0x810070c0,%edx
81005cc5:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81005cc8:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005ccb:	01 c8                	add    %ecx,%eax
81005ccd:	89 42 08             	mov    %eax,0x8(%edx)
81005cd0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005cd3:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005cd6:	89 c2                	mov    %eax,%edx
81005cd8:	b8 c0 70 00 81       	mov    $0x810070c0,%eax
81005cdd:	8b 40 08             	mov    0x8(%eax),%eax
81005ce0:	83 ca 01             	or     $0x1,%edx
81005ce3:	89 50 04             	mov    %edx,0x4(%eax)
81005ce6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005ce9:	8b 40 04             	mov    0x4(%eax),%eax
81005cec:	83 e0 01             	and    $0x1,%eax
81005cef:	0b 45 bc             	or     -0x44(%ebp),%eax
81005cf2:	89 c2                	mov    %eax,%edx
81005cf4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005cf7:	89 50 04             	mov    %edx,0x4(%eax)
81005cfa:	83 ec 0c             	sub    $0xc,%esp
81005cfd:	ff 75 08             	push   0x8(%ebp)
81005d00:	e8 89 d4 ff ff       	call   8100318e <__malloc_unlock>
81005d05:	83 c4 10             	add    $0x10,%esp
81005d08:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005d0b:	e9 2f 05 00 00       	jmp    8100623f <_realloc_r+0x8d8>
81005d10:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005d13:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005d16:	01 c2                	add    %eax,%edx
81005d18:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005d1b:	01 d0                	add    %edx,%eax
81005d1d:	89 c2                	mov    %eax,%edx
81005d1f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005d22:	39 c2                	cmp    %eax,%edx
81005d24:	0f 8c 6f 01 00 00    	jl     81005e99 <_realloc_r+0x532>
81005d2a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005d2d:	8b 40 0c             	mov    0xc(%eax),%eax
81005d30:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005d33:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005d36:	8b 40 08             	mov    0x8(%eax),%eax
81005d39:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005d3c:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005d3f:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005d42:	89 50 0c             	mov    %edx,0xc(%eax)
81005d45:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005d48:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005d4b:	89 50 08             	mov    %edx,0x8(%eax)
81005d4e:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005d51:	8b 40 0c             	mov    0xc(%eax),%eax
81005d54:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005d57:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005d5a:	8b 40 08             	mov    0x8(%eax),%eax
81005d5d:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005d60:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005d63:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005d66:	89 50 0c             	mov    %edx,0xc(%eax)
81005d69:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005d6c:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005d6f:	89 50 08             	mov    %edx,0x8(%eax)
81005d72:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005d75:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005d78:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005d7b:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005d7e:	01 d0                	add    %edx,%eax
81005d80:	01 45 f0             	add    %eax,-0x10(%ebp)
81005d83:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005d86:	83 c0 08             	add    $0x8,%eax
81005d89:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005d8c:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005d8f:	83 e8 04             	sub    $0x4,%eax
81005d92:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81005d95:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81005d99:	0f 87 e1 00 00 00    	ja     81005e80 <_realloc_r+0x519>
81005d9f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005da2:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005da5:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005da8:	89 45 d8             	mov    %eax,-0x28(%ebp)
81005dab:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81005daf:	0f 86 90 00 00 00    	jbe    81005e45 <_realloc_r+0x4de>
81005db5:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005db8:	8d 42 04             	lea    0x4(%edx),%eax
81005dbb:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005dbe:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005dc1:	8d 48 04             	lea    0x4(%eax),%ecx
81005dc4:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005dc7:	8b 12                	mov    (%edx),%edx
81005dc9:	89 10                	mov    %edx,(%eax)
81005dcb:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005dce:	8d 42 04             	lea    0x4(%edx),%eax
81005dd1:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005dd4:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005dd7:	8d 48 04             	lea    0x4(%eax),%ecx
81005dda:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005ddd:	8b 12                	mov    (%edx),%edx
81005ddf:	89 10                	mov    %edx,(%eax)
81005de1:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81005de5:	76 5e                	jbe    81005e45 <_realloc_r+0x4de>
81005de7:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005dea:	8d 42 04             	lea    0x4(%edx),%eax
81005ded:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005df0:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005df3:	8d 48 04             	lea    0x4(%eax),%ecx
81005df6:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005df9:	8b 12                	mov    (%edx),%edx
81005dfb:	89 10                	mov    %edx,(%eax)
81005dfd:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005e00:	8d 42 04             	lea    0x4(%edx),%eax
81005e03:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005e06:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005e09:	8d 48 04             	lea    0x4(%eax),%ecx
81005e0c:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005e0f:	8b 12                	mov    (%edx),%edx
81005e11:	89 10                	mov    %edx,(%eax)
81005e13:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81005e17:	76 2c                	jbe    81005e45 <_realloc_r+0x4de>
81005e19:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005e1c:	8d 42 04             	lea    0x4(%edx),%eax
81005e1f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005e22:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005e25:	8d 48 04             	lea    0x4(%eax),%ecx
81005e28:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005e2b:	8b 12                	mov    (%edx),%edx
81005e2d:	89 10                	mov    %edx,(%eax)
81005e2f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005e32:	8d 42 04             	lea    0x4(%edx),%eax
81005e35:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005e38:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005e3b:	8d 48 04             	lea    0x4(%eax),%ecx
81005e3e:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005e41:	8b 12                	mov    (%edx),%edx
81005e43:	89 10                	mov    %edx,(%eax)
81005e45:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005e48:	8d 42 04             	lea    0x4(%edx),%eax
81005e4b:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005e4e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005e51:	8d 48 04             	lea    0x4(%eax),%ecx
81005e54:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005e57:	8b 12                	mov    (%edx),%edx
81005e59:	89 10                	mov    %edx,(%eax)
81005e5b:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005e5e:	8d 42 04             	lea    0x4(%edx),%eax
81005e61:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005e64:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005e67:	8d 48 04             	lea    0x4(%eax),%ecx
81005e6a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005e6d:	8b 12                	mov    (%edx),%edx
81005e6f:	89 10                	mov    %edx,(%eax)
81005e71:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005e74:	8b 10                	mov    (%eax),%edx
81005e76:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005e79:	89 10                	mov    %edx,(%eax)
81005e7b:	e9 12 03 00 00       	jmp    81006192 <_realloc_r+0x82b>
81005e80:	83 ec 04             	sub    $0x4,%esp
81005e83:	ff 75 a4             	push   -0x5c(%ebp)
81005e86:	ff 75 0c             	push   0xc(%ebp)
81005e89:	ff 75 a8             	push   -0x58(%ebp)
81005e8c:	e8 ff f8 ff ff       	call   81005790 <memmove>
81005e91:	83 c4 10             	add    $0x10,%esp
81005e94:	e9 f9 02 00 00       	jmp    81006192 <_realloc_r+0x82b>
81005e99:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81005e9d:	0f 84 5b 01 00 00    	je     81005ffe <_realloc_r+0x697>
81005ea3:	8b 55 ac             	mov    -0x54(%ebp),%edx
81005ea6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005ea9:	01 d0                	add    %edx,%eax
81005eab:	89 c2                	mov    %eax,%edx
81005ead:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005eb0:	39 c2                	cmp    %eax,%edx
81005eb2:	0f 8c 46 01 00 00    	jl     81005ffe <_realloc_r+0x697>
81005eb8:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005ebb:	8b 40 0c             	mov    0xc(%eax),%eax
81005ebe:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005ec1:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005ec4:	8b 40 08             	mov    0x8(%eax),%eax
81005ec7:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005eca:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005ecd:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005ed0:	89 50 0c             	mov    %edx,0xc(%eax)
81005ed3:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005ed6:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005ed9:	89 50 08             	mov    %edx,0x8(%eax)
81005edc:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005edf:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005ee2:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005ee5:	01 45 f0             	add    %eax,-0x10(%ebp)
81005ee8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005eeb:	83 c0 08             	add    $0x8,%eax
81005eee:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005ef1:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005ef4:	83 e8 04             	sub    $0x4,%eax
81005ef7:	89 45 9c             	mov    %eax,-0x64(%ebp)
81005efa:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
81005efe:	0f 87 e1 00 00 00    	ja     81005fe5 <_realloc_r+0x67e>
81005f04:	8b 45 0c             	mov    0xc(%ebp),%eax
81005f07:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f0a:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005f0d:	89 45 d0             	mov    %eax,-0x30(%ebp)
81005f10:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81005f14:	0f 86 90 00 00 00    	jbe    81005faa <_realloc_r+0x643>
81005f1a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f1d:	8d 42 04             	lea    0x4(%edx),%eax
81005f20:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f23:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f26:	8d 48 04             	lea    0x4(%eax),%ecx
81005f29:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f2c:	8b 12                	mov    (%edx),%edx
81005f2e:	89 10                	mov    %edx,(%eax)
81005f30:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f33:	8d 42 04             	lea    0x4(%edx),%eax
81005f36:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f39:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f3c:	8d 48 04             	lea    0x4(%eax),%ecx
81005f3f:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f42:	8b 12                	mov    (%edx),%edx
81005f44:	89 10                	mov    %edx,(%eax)
81005f46:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
81005f4a:	76 5e                	jbe    81005faa <_realloc_r+0x643>
81005f4c:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f4f:	8d 42 04             	lea    0x4(%edx),%eax
81005f52:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f55:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f58:	8d 48 04             	lea    0x4(%eax),%ecx
81005f5b:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f5e:	8b 12                	mov    (%edx),%edx
81005f60:	89 10                	mov    %edx,(%eax)
81005f62:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f65:	8d 42 04             	lea    0x4(%edx),%eax
81005f68:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f6b:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f6e:	8d 48 04             	lea    0x4(%eax),%ecx
81005f71:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f74:	8b 12                	mov    (%edx),%edx
81005f76:	89 10                	mov    %edx,(%eax)
81005f78:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81005f7c:	76 2c                	jbe    81005faa <_realloc_r+0x643>
81005f7e:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f81:	8d 42 04             	lea    0x4(%edx),%eax
81005f84:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f87:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f8a:	8d 48 04             	lea    0x4(%eax),%ecx
81005f8d:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f90:	8b 12                	mov    (%edx),%edx
81005f92:	89 10                	mov    %edx,(%eax)
81005f94:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f97:	8d 42 04             	lea    0x4(%edx),%eax
81005f9a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f9d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005fa0:	8d 48 04             	lea    0x4(%eax),%ecx
81005fa3:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005fa6:	8b 12                	mov    (%edx),%edx
81005fa8:	89 10                	mov    %edx,(%eax)
81005faa:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005fad:	8d 42 04             	lea    0x4(%edx),%eax
81005fb0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005fb3:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005fb6:	8d 48 04             	lea    0x4(%eax),%ecx
81005fb9:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005fbc:	8b 12                	mov    (%edx),%edx
81005fbe:	89 10                	mov    %edx,(%eax)
81005fc0:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005fc3:	8d 42 04             	lea    0x4(%edx),%eax
81005fc6:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005fc9:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005fcc:	8d 48 04             	lea    0x4(%eax),%ecx
81005fcf:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005fd2:	8b 12                	mov    (%edx),%edx
81005fd4:	89 10                	mov    %edx,(%eax)
81005fd6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81005fd9:	8b 10                	mov    (%eax),%edx
81005fdb:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005fde:	89 10                	mov    %edx,(%eax)
81005fe0:	e9 ad 01 00 00       	jmp    81006192 <_realloc_r+0x82b>
81005fe5:	83 ec 04             	sub    $0x4,%esp
81005fe8:	ff 75 9c             	push   -0x64(%ebp)
81005feb:	ff 75 0c             	push   0xc(%ebp)
81005fee:	ff 75 a8             	push   -0x58(%ebp)
81005ff1:	e8 9a f7 ff ff       	call   81005790 <memmove>
81005ff6:	83 c4 10             	add    $0x10,%esp
81005ff9:	e9 94 01 00 00       	jmp    81006192 <_realloc_r+0x82b>
81005ffe:	83 ec 08             	sub    $0x8,%esp
81006001:	ff 75 10             	push   0x10(%ebp)
81006004:	ff 75 08             	push   0x8(%ebp)
81006007:	e8 9c c7 ff ff       	call   810027a8 <_malloc_r>
8100600c:	83 c4 10             	add    $0x10,%esp
8100600f:	89 45 a8             	mov    %eax,-0x58(%ebp)
81006012:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81006016:	75 18                	jne    81006030 <_realloc_r+0x6c9>
81006018:	83 ec 0c             	sub    $0xc,%esp
8100601b:	ff 75 08             	push   0x8(%ebp)
8100601e:	e8 6b d1 ff ff       	call   8100318e <__malloc_unlock>
81006023:	83 c4 10             	add    $0x10,%esp
81006026:	b8 00 00 00 00       	mov    $0x0,%eax
8100602b:	e9 0f 02 00 00       	jmp    8100623f <_realloc_r+0x8d8>
81006030:	8b 45 a8             	mov    -0x58(%ebp),%eax
81006033:	83 e8 08             	sub    $0x8,%eax
81006036:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006039:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100603c:	8b 40 04             	mov    0x4(%eax),%eax
8100603f:	83 e0 fe             	and    $0xfffffffe,%eax
81006042:	89 c2                	mov    %eax,%edx
81006044:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006047:	01 d0                	add    %edx,%eax
81006049:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100604c:	75 17                	jne    81006065 <_realloc_r+0x6fe>
8100604e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006051:	8b 40 04             	mov    0x4(%eax),%eax
81006054:	83 e0 fc             	and    $0xfffffffc,%eax
81006057:	01 45 f0             	add    %eax,-0x10(%ebp)
8100605a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100605d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006060:	e9 2d 01 00 00       	jmp    81006192 <_realloc_r+0x82b>
81006065:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006068:	83 e8 04             	sub    $0x4,%eax
8100606b:	89 45 98             	mov    %eax,-0x68(%ebp)
8100606e:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81006072:	0f 87 de 00 00 00    	ja     81006156 <_realloc_r+0x7ef>
81006078:	8b 45 0c             	mov    0xc(%ebp),%eax
8100607b:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100607e:	8b 45 a8             	mov    -0x58(%ebp),%eax
81006081:	89 45 c8             	mov    %eax,-0x38(%ebp)
81006084:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81006088:	0f 86 90 00 00 00    	jbe    8100611e <_realloc_r+0x7b7>
8100608e:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006091:	8d 42 04             	lea    0x4(%edx),%eax
81006094:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006097:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100609a:	8d 48 04             	lea    0x4(%eax),%ecx
8100609d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810060a0:	8b 12                	mov    (%edx),%edx
810060a2:	89 10                	mov    %edx,(%eax)
810060a4:	8b 55 cc             	mov    -0x34(%ebp),%edx
810060a7:	8d 42 04             	lea    0x4(%edx),%eax
810060aa:	89 45 cc             	mov    %eax,-0x34(%ebp)
810060ad:	8b 45 c8             	mov    -0x38(%ebp),%eax
810060b0:	8d 48 04             	lea    0x4(%eax),%ecx
810060b3:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810060b6:	8b 12                	mov    (%edx),%edx
810060b8:	89 10                	mov    %edx,(%eax)
810060ba:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
810060be:	76 5e                	jbe    8100611e <_realloc_r+0x7b7>
810060c0:	8b 55 cc             	mov    -0x34(%ebp),%edx
810060c3:	8d 42 04             	lea    0x4(%edx),%eax
810060c6:	89 45 cc             	mov    %eax,-0x34(%ebp)
810060c9:	8b 45 c8             	mov    -0x38(%ebp),%eax
810060cc:	8d 48 04             	lea    0x4(%eax),%ecx
810060cf:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810060d2:	8b 12                	mov    (%edx),%edx
810060d4:	89 10                	mov    %edx,(%eax)
810060d6:	8b 55 cc             	mov    -0x34(%ebp),%edx
810060d9:	8d 42 04             	lea    0x4(%edx),%eax
810060dc:	89 45 cc             	mov    %eax,-0x34(%ebp)
810060df:	8b 45 c8             	mov    -0x38(%ebp),%eax
810060e2:	8d 48 04             	lea    0x4(%eax),%ecx
810060e5:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810060e8:	8b 12                	mov    (%edx),%edx
810060ea:	89 10                	mov    %edx,(%eax)
810060ec:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
810060f0:	76 2c                	jbe    8100611e <_realloc_r+0x7b7>
810060f2:	8b 55 cc             	mov    -0x34(%ebp),%edx
810060f5:	8d 42 04             	lea    0x4(%edx),%eax
810060f8:	89 45 cc             	mov    %eax,-0x34(%ebp)
810060fb:	8b 45 c8             	mov    -0x38(%ebp),%eax
810060fe:	8d 48 04             	lea    0x4(%eax),%ecx
81006101:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006104:	8b 12                	mov    (%edx),%edx
81006106:	89 10                	mov    %edx,(%eax)
81006108:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100610b:	8d 42 04             	lea    0x4(%edx),%eax
8100610e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006111:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006114:	8d 48 04             	lea    0x4(%eax),%ecx
81006117:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100611a:	8b 12                	mov    (%edx),%edx
8100611c:	89 10                	mov    %edx,(%eax)
8100611e:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006121:	8d 42 04             	lea    0x4(%edx),%eax
81006124:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006127:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100612a:	8d 48 04             	lea    0x4(%eax),%ecx
8100612d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006130:	8b 12                	mov    (%edx),%edx
81006132:	89 10                	mov    %edx,(%eax)
81006134:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006137:	8d 42 04             	lea    0x4(%edx),%eax
8100613a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100613d:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006140:	8d 48 04             	lea    0x4(%eax),%ecx
81006143:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006146:	8b 12                	mov    (%edx),%edx
81006148:	89 10                	mov    %edx,(%eax)
8100614a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100614d:	8b 10                	mov    (%eax),%edx
8100614f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006152:	89 10                	mov    %edx,(%eax)
81006154:	eb 14                	jmp    8100616a <_realloc_r+0x803>
81006156:	83 ec 04             	sub    $0x4,%esp
81006159:	ff 75 98             	push   -0x68(%ebp)
8100615c:	ff 75 0c             	push   0xc(%ebp)
8100615f:	ff 75 a8             	push   -0x58(%ebp)
81006162:	e8 29 f6 ff ff       	call   81005790 <memmove>
81006167:	83 c4 10             	add    $0x10,%esp
8100616a:	83 ec 08             	sub    $0x8,%esp
8100616d:	ff 75 0c             	push   0xc(%ebp)
81006170:	ff 75 08             	push   0x8(%ebp)
81006173:	e8 b9 ae ff ff       	call   81001031 <_free_r>
81006178:	83 c4 10             	add    $0x10,%esp
8100617b:	83 ec 0c             	sub    $0xc,%esp
8100617e:	ff 75 08             	push   0x8(%ebp)
81006181:	e8 08 d0 ff ff       	call   8100318e <__malloc_unlock>
81006186:	83 c4 10             	add    $0x10,%esp
81006189:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100618c:	e9 ae 00 00 00       	jmp    8100623f <_realloc_r+0x8d8>
81006191:	90                   	nop
81006192:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006195:	2b 45 bc             	sub    -0x44(%ebp),%eax
81006198:	89 45 94             	mov    %eax,-0x6c(%ebp)
8100619b:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
8100619f:	76 5d                	jbe    810061fe <_realloc_r+0x897>
810061a1:	8b 55 f4             	mov    -0xc(%ebp),%edx
810061a4:	8b 45 bc             	mov    -0x44(%ebp),%eax
810061a7:	01 d0                	add    %edx,%eax
810061a9:	89 45 90             	mov    %eax,-0x70(%ebp)
810061ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
810061af:	8b 40 04             	mov    0x4(%eax),%eax
810061b2:	83 e0 01             	and    $0x1,%eax
810061b5:	0b 45 bc             	or     -0x44(%ebp),%eax
810061b8:	89 c2                	mov    %eax,%edx
810061ba:	8b 45 f4             	mov    -0xc(%ebp),%eax
810061bd:	89 50 04             	mov    %edx,0x4(%eax)
810061c0:	8b 45 94             	mov    -0x6c(%ebp),%eax
810061c3:	83 c8 01             	or     $0x1,%eax
810061c6:	89 c2                	mov    %eax,%edx
810061c8:	8b 45 90             	mov    -0x70(%ebp),%eax
810061cb:	89 50 04             	mov    %edx,0x4(%eax)
810061ce:	8b 55 90             	mov    -0x70(%ebp),%edx
810061d1:	8b 45 94             	mov    -0x6c(%ebp),%eax
810061d4:	01 d0                	add    %edx,%eax
810061d6:	8b 50 04             	mov    0x4(%eax),%edx
810061d9:	8b 4d 90             	mov    -0x70(%ebp),%ecx
810061dc:	8b 45 94             	mov    -0x6c(%ebp),%eax
810061df:	01 c8                	add    %ecx,%eax
810061e1:	83 ca 01             	or     $0x1,%edx
810061e4:	89 50 04             	mov    %edx,0x4(%eax)
810061e7:	8b 45 90             	mov    -0x70(%ebp),%eax
810061ea:	83 c0 08             	add    $0x8,%eax
810061ed:	83 ec 08             	sub    $0x8,%esp
810061f0:	50                   	push   %eax
810061f1:	ff 75 08             	push   0x8(%ebp)
810061f4:	e8 38 ae ff ff       	call   81001031 <_free_r>
810061f9:	83 c4 10             	add    $0x10,%esp
810061fc:	eb 2d                	jmp    8100622b <_realloc_r+0x8c4>
810061fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006201:	8b 40 04             	mov    0x4(%eax),%eax
81006204:	83 e0 01             	and    $0x1,%eax
81006207:	0b 45 f0             	or     -0x10(%ebp),%eax
8100620a:	89 c2                	mov    %eax,%edx
8100620c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100620f:	89 50 04             	mov    %edx,0x4(%eax)
81006212:	8b 55 f4             	mov    -0xc(%ebp),%edx
81006215:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006218:	01 d0                	add    %edx,%eax
8100621a:	8b 50 04             	mov    0x4(%eax),%edx
8100621d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81006220:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006223:	01 c8                	add    %ecx,%eax
81006225:	83 ca 01             	or     $0x1,%edx
81006228:	89 50 04             	mov    %edx,0x4(%eax)
8100622b:	83 ec 0c             	sub    $0xc,%esp
8100622e:	ff 75 08             	push   0x8(%ebp)
81006231:	e8 58 cf ff ff       	call   8100318e <__malloc_unlock>
81006236:	83 c4 10             	add    $0x10,%esp
81006239:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100623c:	83 c0 08             	add    $0x8,%eax
8100623f:	c9                   	leave  
81006240:	c3                   	ret    

81006241 <cleanup_glue>:
81006241:	55                   	push   %ebp
81006242:	89 e5                	mov    %esp,%ebp
81006244:	83 ec 08             	sub    $0x8,%esp
81006247:	8b 45 0c             	mov    0xc(%ebp),%eax
8100624a:	8b 00                	mov    (%eax),%eax
8100624c:	85 c0                	test   %eax,%eax
8100624e:	74 14                	je     81006264 <cleanup_glue+0x23>
81006250:	8b 45 0c             	mov    0xc(%ebp),%eax
81006253:	8b 00                	mov    (%eax),%eax
81006255:	83 ec 08             	sub    $0x8,%esp
81006258:	50                   	push   %eax
81006259:	ff 75 08             	push   0x8(%ebp)
8100625c:	e8 e0 ff ff ff       	call   81006241 <cleanup_glue>
81006261:	83 c4 10             	add    $0x10,%esp
81006264:	83 ec 08             	sub    $0x8,%esp
81006267:	ff 75 0c             	push   0xc(%ebp)
8100626a:	ff 75 08             	push   0x8(%ebp)
8100626d:	e8 bf ad ff ff       	call   81001031 <_free_r>
81006272:	83 c4 10             	add    $0x10,%esp
81006275:	90                   	nop
81006276:	c9                   	leave  
81006277:	c3                   	ret    

81006278 <_reclaim_reent>:
81006278:	55                   	push   %ebp
81006279:	89 e5                	mov    %esp,%ebp
8100627b:	83 ec 28             	sub    $0x28,%esp
8100627e:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81006283:	39 45 08             	cmp    %eax,0x8(%ebp)
81006286:	0f 84 49 01 00 00    	je     810063d5 <_reclaim_reent+0x15d>
8100628c:	8b 45 08             	mov    0x8(%ebp),%eax
8100628f:	8b 40 4c             	mov    0x4c(%eax),%eax
81006292:	85 c0                	test   %eax,%eax
81006294:	74 64                	je     810062fa <_reclaim_reent+0x82>
81006296:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100629d:	eb 3e                	jmp    810062dd <_reclaim_reent+0x65>
8100629f:	8b 45 08             	mov    0x8(%ebp),%eax
810062a2:	8b 50 4c             	mov    0x4c(%eax),%edx
810062a5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810062a8:	c1 e0 02             	shl    $0x2,%eax
810062ab:	01 d0                	add    %edx,%eax
810062ad:	8b 00                	mov    (%eax),%eax
810062af:	89 45 f0             	mov    %eax,-0x10(%ebp)
810062b2:	eb 1f                	jmp    810062d3 <_reclaim_reent+0x5b>
810062b4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810062b7:	89 45 e8             	mov    %eax,-0x18(%ebp)
810062ba:	8b 45 f0             	mov    -0x10(%ebp),%eax
810062bd:	8b 00                	mov    (%eax),%eax
810062bf:	89 45 f0             	mov    %eax,-0x10(%ebp)
810062c2:	83 ec 08             	sub    $0x8,%esp
810062c5:	ff 75 e8             	push   -0x18(%ebp)
810062c8:	ff 75 08             	push   0x8(%ebp)
810062cb:	e8 61 ad ff ff       	call   81001031 <_free_r>
810062d0:	83 c4 10             	add    $0x10,%esp
810062d3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810062d7:	75 db                	jne    810062b4 <_reclaim_reent+0x3c>
810062d9:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810062dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810062e0:	83 f8 1f             	cmp    $0x1f,%eax
810062e3:	76 ba                	jbe    8100629f <_reclaim_reent+0x27>
810062e5:	8b 45 08             	mov    0x8(%ebp),%eax
810062e8:	8b 40 4c             	mov    0x4c(%eax),%eax
810062eb:	83 ec 08             	sub    $0x8,%esp
810062ee:	50                   	push   %eax
810062ef:	ff 75 08             	push   0x8(%ebp)
810062f2:	e8 3a ad ff ff       	call   81001031 <_free_r>
810062f7:	83 c4 10             	add    $0x10,%esp
810062fa:	8b 45 08             	mov    0x8(%ebp),%eax
810062fd:	8b 40 40             	mov    0x40(%eax),%eax
81006300:	85 c0                	test   %eax,%eax
81006302:	74 15                	je     81006319 <_reclaim_reent+0xa1>
81006304:	8b 45 08             	mov    0x8(%ebp),%eax
81006307:	8b 40 40             	mov    0x40(%eax),%eax
8100630a:	83 ec 08             	sub    $0x8,%esp
8100630d:	50                   	push   %eax
8100630e:	ff 75 08             	push   0x8(%ebp)
81006311:	e8 1b ad ff ff       	call   81001031 <_free_r>
81006316:	83 c4 10             	add    $0x10,%esp
81006319:	8b 45 08             	mov    0x8(%ebp),%eax
8100631c:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81006322:	85 c0                	test   %eax,%eax
81006324:	74 50                	je     81006376 <_reclaim_reent+0xfe>
81006326:	8b 45 08             	mov    0x8(%ebp),%eax
81006329:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
8100632f:	8b 55 08             	mov    0x8(%ebp),%edx
81006332:	81 c2 4c 01 00 00    	add    $0x14c,%edx
81006338:	39 d0                	cmp    %edx,%eax
8100633a:	74 3a                	je     81006376 <_reclaim_reent+0xfe>
8100633c:	8b 45 08             	mov    0x8(%ebp),%eax
8100633f:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81006345:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006348:	eb 1f                	jmp    81006369 <_reclaim_reent+0xf1>
8100634a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100634d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006350:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006353:	8b 00                	mov    (%eax),%eax
81006355:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006358:	83 ec 08             	sub    $0x8,%esp
8100635b:	ff 75 e4             	push   -0x1c(%ebp)
8100635e:	ff 75 08             	push   0x8(%ebp)
81006361:	e8 cb ac ff ff       	call   81001031 <_free_r>
81006366:	83 c4 10             	add    $0x10,%esp
81006369:	8b 45 08             	mov    0x8(%ebp),%eax
8100636c:	05 4c 01 00 00       	add    $0x14c,%eax
81006371:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81006374:	75 d4                	jne    8100634a <_reclaim_reent+0xd2>
81006376:	8b 45 08             	mov    0x8(%ebp),%eax
81006379:	8b 40 54             	mov    0x54(%eax),%eax
8100637c:	85 c0                	test   %eax,%eax
8100637e:	74 15                	je     81006395 <_reclaim_reent+0x11d>
81006380:	8b 45 08             	mov    0x8(%ebp),%eax
81006383:	8b 40 54             	mov    0x54(%eax),%eax
81006386:	83 ec 08             	sub    $0x8,%esp
81006389:	50                   	push   %eax
8100638a:	ff 75 08             	push   0x8(%ebp)
8100638d:	e8 9f ac ff ff       	call   81001031 <_free_r>
81006392:	83 c4 10             	add    $0x10,%esp
81006395:	8b 45 08             	mov    0x8(%ebp),%eax
81006398:	8b 40 38             	mov    0x38(%eax),%eax
8100639b:	85 c0                	test   %eax,%eax
8100639d:	74 36                	je     810063d5 <_reclaim_reent+0x15d>
8100639f:	8b 45 08             	mov    0x8(%ebp),%eax
810063a2:	8b 40 3c             	mov    0x3c(%eax),%eax
810063a5:	83 ec 0c             	sub    $0xc,%esp
810063a8:	ff 75 08             	push   0x8(%ebp)
810063ab:	ff d0                	call   *%eax
810063ad:	83 c4 10             	add    $0x10,%esp
810063b0:	8b 45 08             	mov    0x8(%ebp),%eax
810063b3:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810063b9:	85 c0                	test   %eax,%eax
810063bb:	74 18                	je     810063d5 <_reclaim_reent+0x15d>
810063bd:	8b 45 08             	mov    0x8(%ebp),%eax
810063c0:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810063c6:	83 ec 08             	sub    $0x8,%esp
810063c9:	50                   	push   %eax
810063ca:	ff 75 08             	push   0x8(%ebp)
810063cd:	e8 6f fe ff ff       	call   81006241 <cleanup_glue>
810063d2:	83 c4 10             	add    $0x10,%esp
810063d5:	90                   	nop
810063d6:	c9                   	leave  
810063d7:	c3                   	ret    

810063d8 <strncmp>:
810063d8:	55                   	push   %ebp
810063d9:	89 e5                	mov    %esp,%ebp
810063db:	83 ec 10             	sub    $0x10,%esp
810063de:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810063e2:	75 0a                	jne    810063ee <strncmp+0x16>
810063e4:	b8 00 00 00 00       	mov    $0x0,%eax
810063e9:	e9 cb 00 00 00       	jmp    810064b9 <strncmp+0xe1>
810063ee:	8b 55 08             	mov    0x8(%ebp),%edx
810063f1:	8b 45 0c             	mov    0xc(%ebp),%eax
810063f4:	09 d0                	or     %edx,%eax
810063f6:	83 e0 03             	and    $0x3,%eax
810063f9:	85 c0                	test   %eax,%eax
810063fb:	0f 85 85 00 00 00    	jne    81006486 <strncmp+0xae>
81006401:	8b 45 08             	mov    0x8(%ebp),%eax
81006404:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006407:	8b 45 0c             	mov    0xc(%ebp),%eax
8100640a:	89 45 f8             	mov    %eax,-0x8(%ebp)
8100640d:	eb 36                	jmp    81006445 <strncmp+0x6d>
8100640f:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
81006413:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006417:	74 1d                	je     81006436 <strncmp+0x5e>
81006419:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100641c:	8b 00                	mov    (%eax),%eax
8100641e:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81006424:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006427:	8b 00                	mov    (%eax),%eax
81006429:	f7 d0                	not    %eax
8100642b:	21 d0                	and    %edx,%eax
8100642d:	25 80 80 80 80       	and    $0x80808080,%eax
81006432:	85 c0                	test   %eax,%eax
81006434:	74 07                	je     8100643d <strncmp+0x65>
81006436:	b8 00 00 00 00       	mov    $0x0,%eax
8100643b:	eb 7c                	jmp    810064b9 <strncmp+0xe1>
8100643d:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81006441:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81006445:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
81006449:	76 0e                	jbe    81006459 <strncmp+0x81>
8100644b:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100644e:	8b 10                	mov    (%eax),%edx
81006450:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006453:	8b 00                	mov    (%eax),%eax
81006455:	39 c2                	cmp    %eax,%edx
81006457:	74 b6                	je     8100640f <strncmp+0x37>
81006459:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100645c:	89 45 08             	mov    %eax,0x8(%ebp)
8100645f:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006462:	89 45 0c             	mov    %eax,0xc(%ebp)
81006465:	eb 1f                	jmp    81006486 <strncmp+0xae>
81006467:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100646b:	74 0a                	je     81006477 <strncmp+0x9f>
8100646d:	8b 45 08             	mov    0x8(%ebp),%eax
81006470:	0f b6 00             	movzbl (%eax),%eax
81006473:	84 c0                	test   %al,%al
81006475:	75 07                	jne    8100647e <strncmp+0xa6>
81006477:	b8 00 00 00 00       	mov    $0x0,%eax
8100647c:	eb 3b                	jmp    810064b9 <strncmp+0xe1>
8100647e:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81006482:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81006486:	8b 45 10             	mov    0x10(%ebp),%eax
81006489:	8d 50 ff             	lea    -0x1(%eax),%edx
8100648c:	89 55 10             	mov    %edx,0x10(%ebp)
8100648f:	85 c0                	test   %eax,%eax
81006491:	74 10                	je     810064a3 <strncmp+0xcb>
81006493:	8b 45 08             	mov    0x8(%ebp),%eax
81006496:	0f b6 10             	movzbl (%eax),%edx
81006499:	8b 45 0c             	mov    0xc(%ebp),%eax
8100649c:	0f b6 00             	movzbl (%eax),%eax
8100649f:	38 c2                	cmp    %al,%dl
810064a1:	74 c4                	je     81006467 <strncmp+0x8f>
810064a3:	8b 45 08             	mov    0x8(%ebp),%eax
810064a6:	0f b6 00             	movzbl (%eax),%eax
810064a9:	0f b6 d0             	movzbl %al,%edx
810064ac:	8b 45 0c             	mov    0xc(%ebp),%eax
810064af:	0f b6 00             	movzbl (%eax),%eax
810064b2:	0f b6 c8             	movzbl %al,%ecx
810064b5:	89 d0                	mov    %edx,%eax
810064b7:	29 c8                	sub    %ecx,%eax
810064b9:	c9                   	leave  
810064ba:	c3                   	ret    

810064bb <__get_global_locale>:
810064bb:	55                   	push   %ebp
810064bc:	89 e5                	mov    %esp,%ebp
810064be:	b8 e0 74 00 81       	mov    $0x810074e0,%eax
810064c3:	5d                   	pop    %ebp
810064c4:	c3                   	ret    

810064c5 <__get_current_locale>:
810064c5:	55                   	push   %ebp
810064c6:	89 e5                	mov    %esp,%ebp
810064c8:	e8 ee ff ff ff       	call   810064bb <__get_global_locale>
810064cd:	5d                   	pop    %ebp
810064ce:	c3                   	ret    

810064cf <_wcrtomb_r>:
810064cf:	55                   	push   %ebp
810064d0:	89 e5                	mov    %esp,%ebp
810064d2:	83 ec 18             	sub    $0x18,%esp
810064d5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810064dc:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810064e0:	75 21                	jne    81006503 <_wcrtomb_r+0x34>
810064e2:	e8 de ff ff ff       	call   810064c5 <__get_current_locale>
810064e7:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810064ed:	ff 75 14             	push   0x14(%ebp)
810064f0:	6a 00                	push   $0x0
810064f2:	8d 55 ea             	lea    -0x16(%ebp),%edx
810064f5:	52                   	push   %edx
810064f6:	ff 75 08             	push   0x8(%ebp)
810064f9:	ff d0                	call   *%eax
810064fb:	83 c4 10             	add    $0x10,%esp
810064fe:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006501:	eb 1f                	jmp    81006522 <_wcrtomb_r+0x53>
81006503:	e8 bd ff ff ff       	call   810064c5 <__get_current_locale>
81006508:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100650e:	ff 75 14             	push   0x14(%ebp)
81006511:	ff 75 10             	push   0x10(%ebp)
81006514:	ff 75 0c             	push   0xc(%ebp)
81006517:	ff 75 08             	push   0x8(%ebp)
8100651a:	ff d0                	call   *%eax
8100651c:	83 c4 10             	add    $0x10,%esp
8100651f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006522:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006526:	75 19                	jne    81006541 <_wcrtomb_r+0x72>
81006528:	8b 45 14             	mov    0x14(%ebp),%eax
8100652b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81006531:	8b 45 08             	mov    0x8(%ebp),%eax
81006534:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
8100653a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100653f:	eb 03                	jmp    81006544 <_wcrtomb_r+0x75>
81006541:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006544:	c9                   	leave  
81006545:	c3                   	ret    

81006546 <wcrtomb>:
81006546:	55                   	push   %ebp
81006547:	89 e5                	mov    %esp,%ebp
81006549:	83 ec 28             	sub    $0x28,%esp
8100654c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81006553:	a1 a4 70 00 81       	mov    0x810070a4,%eax
81006558:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100655b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100655f:	75 21                	jne    81006582 <wcrtomb+0x3c>
81006561:	e8 5f ff ff ff       	call   810064c5 <__get_current_locale>
81006566:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100656c:	ff 75 10             	push   0x10(%ebp)
8100656f:	6a 00                	push   $0x0
81006571:	8d 55 e6             	lea    -0x1a(%ebp),%edx
81006574:	52                   	push   %edx
81006575:	ff 75 f0             	push   -0x10(%ebp)
81006578:	ff d0                	call   *%eax
8100657a:	83 c4 10             	add    $0x10,%esp
8100657d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006580:	eb 1f                	jmp    810065a1 <wcrtomb+0x5b>
81006582:	e8 3e ff ff ff       	call   810064c5 <__get_current_locale>
81006587:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100658d:	ff 75 10             	push   0x10(%ebp)
81006590:	ff 75 0c             	push   0xc(%ebp)
81006593:	ff 75 08             	push   0x8(%ebp)
81006596:	ff 75 f0             	push   -0x10(%ebp)
81006599:	ff d0                	call   *%eax
8100659b:	83 c4 10             	add    $0x10,%esp
8100659e:	89 45 f4             	mov    %eax,-0xc(%ebp)
810065a1:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810065a5:	75 19                	jne    810065c0 <wcrtomb+0x7a>
810065a7:	8b 45 10             	mov    0x10(%ebp),%eax
810065aa:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810065b0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810065b3:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810065b9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810065be:	eb 03                	jmp    810065c3 <wcrtomb+0x7d>
810065c0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810065c3:	c9                   	leave  
810065c4:	c3                   	ret    

810065c5 <__get_global_locale>:
810065c5:	55                   	push   %ebp
810065c6:	89 e5                	mov    %esp,%ebp
810065c8:	b8 e0 74 00 81       	mov    $0x810074e0,%eax
810065cd:	5d                   	pop    %ebp
810065ce:	c3                   	ret    

810065cf <__get_current_locale>:
810065cf:	55                   	push   %ebp
810065d0:	89 e5                	mov    %esp,%ebp
810065d2:	e8 ee ff ff ff       	call   810065c5 <__get_global_locale>
810065d7:	5d                   	pop    %ebp
810065d8:	c3                   	ret    

810065d9 <_wctomb_r>:
810065d9:	55                   	push   %ebp
810065da:	89 e5                	mov    %esp,%ebp
810065dc:	83 ec 08             	sub    $0x8,%esp
810065df:	e8 eb ff ff ff       	call   810065cf <__get_current_locale>
810065e4:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810065ea:	ff 75 14             	push   0x14(%ebp)
810065ed:	ff 75 10             	push   0x10(%ebp)
810065f0:	ff 75 0c             	push   0xc(%ebp)
810065f3:	ff 75 08             	push   0x8(%ebp)
810065f6:	ff d0                	call   *%eax
810065f8:	83 c4 10             	add    $0x10,%esp
810065fb:	c9                   	leave  
810065fc:	c3                   	ret    

810065fd <__ascii_wctomb>:
810065fd:	55                   	push   %ebp
810065fe:	89 e5                	mov    %esp,%ebp
81006600:	83 ec 10             	sub    $0x10,%esp
81006603:	8b 45 10             	mov    0x10(%ebp),%eax
81006606:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006609:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100660d:	75 07                	jne    81006616 <__ascii_wctomb+0x19>
8100660f:	b8 00 00 00 00       	mov    $0x0,%eax
81006614:	eb 28                	jmp    8100663e <__ascii_wctomb+0x41>
81006616:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
8100661d:	76 10                	jbe    8100662f <__ascii_wctomb+0x32>
8100661f:	8b 45 08             	mov    0x8(%ebp),%eax
81006622:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81006628:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100662d:	eb 0f                	jmp    8100663e <__ascii_wctomb+0x41>
8100662f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006632:	89 c2                	mov    %eax,%edx
81006634:	8b 45 0c             	mov    0xc(%ebp),%eax
81006637:	88 10                	mov    %dl,(%eax)
81006639:	b8 01 00 00 00       	mov    $0x1,%eax
8100663e:	c9                   	leave  
8100663f:	c3                   	ret    

81006640 <__env_lock>:
81006640:	55                   	push   %ebp
81006641:	89 e5                	mov    %esp,%ebp
81006643:	90                   	nop
81006644:	5d                   	pop    %ebp
81006645:	c3                   	ret    

81006646 <__env_unlock>:
81006646:	55                   	push   %ebp
81006647:	89 e5                	mov    %esp,%ebp
81006649:	90                   	nop
8100664a:	5d                   	pop    %ebp
8100664b:	c3                   	ret    

8100664c <_fstat_r>:
8100664c:	55                   	push   %ebp
8100664d:	89 e5                	mov    %esp,%ebp
8100664f:	83 ec 18             	sub    $0x18,%esp
81006652:	c7 05 f0 7c 00 81 00 	movl   $0x0,0x81007cf0
81006659:	00 00 00 
8100665c:	83 ec 08             	sub    $0x8,%esp
8100665f:	ff 75 10             	push   0x10(%ebp)
81006662:	ff 75 0c             	push   0xc(%ebp)
81006665:	e8 9f a0 ff ff       	call   81000709 <fstat>
8100666a:	83 c4 10             	add    $0x10,%esp
8100666d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006670:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006674:	75 14                	jne    8100668a <_fstat_r+0x3e>
81006676:	a1 f0 7c 00 81       	mov    0x81007cf0,%eax
8100667b:	85 c0                	test   %eax,%eax
8100667d:	74 0b                	je     8100668a <_fstat_r+0x3e>
8100667f:	8b 15 f0 7c 00 81    	mov    0x81007cf0,%edx
81006685:	8b 45 08             	mov    0x8(%ebp),%eax
81006688:	89 10                	mov    %edx,(%eax)
8100668a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100668d:	c9                   	leave  
8100668e:	c3                   	ret    

8100668f <_isatty_r>:
8100668f:	55                   	push   %ebp
81006690:	89 e5                	mov    %esp,%ebp
81006692:	83 ec 18             	sub    $0x18,%esp
81006695:	c7 05 f0 7c 00 81 00 	movl   $0x0,0x81007cf0
8100669c:	00 00 00 
8100669f:	83 ec 0c             	sub    $0xc,%esp
810066a2:	ff 75 0c             	push   0xc(%ebp)
810066a5:	e8 3e a0 ff ff       	call   810006e8 <isatty>
810066aa:	83 c4 10             	add    $0x10,%esp
810066ad:	89 45 f4             	mov    %eax,-0xc(%ebp)
810066b0:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810066b4:	75 14                	jne    810066ca <_isatty_r+0x3b>
810066b6:	a1 f0 7c 00 81       	mov    0x81007cf0,%eax
810066bb:	85 c0                	test   %eax,%eax
810066bd:	74 0b                	je     810066ca <_isatty_r+0x3b>
810066bf:	8b 15 f0 7c 00 81    	mov    0x81007cf0,%edx
810066c5:	8b 45 08             	mov    0x8(%ebp),%eax
810066c8:	89 10                	mov    %edx,(%eax)
810066ca:	8b 45 f4             	mov    -0xc(%ebp),%eax
810066cd:	c9                   	leave  
810066ce:	c3                   	ret    
