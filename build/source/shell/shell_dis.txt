
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x810004c5

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00007830 memsz 0x00007ee0 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000687f  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       000005ac  81006880  81006880  00007880  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  81006e40  81006e40  00007e40  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000006a0  81007840  81007840  00008830  2**5
                  ALLOC
  4 .debug_info   00021eea  00000000  00000000  00008830  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00007a48  00000000  00000000  0002a71a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 00000808  00000000  00000000  00032168  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   00004b73  00000000  00000000  00032970  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    00001586  00000000  00000000  000374e3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line_str 0000144f  00000000  00000000  00038a69  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003f  00000000  00000000  00039eb8  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00001944  00000000  00000000  00039ef8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000004e  00000000  00000000  0003b83c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
81007840 l     O .bss	00000200 cmd_buf
81006e40 l     O .data	00000004 prompt
81007a40 l     O .bss	0000040c cli
81000000 l     F .text	00000042 do_help
81000042 l     F .text	00000037 do_clear
81000079 l     F .text	000001c2 do_echo
8100023b l     F .text	00000010 do_exit
810069e0 l     O .rodata	00000030 cmd_list
8100024b l     F .text	0000003e cli_init
81000289 l     F .text	00000033 show_prompt
810002bc l     F .text	00000043 find_builtin
810002ff l     F .text	00000049 run_builtin
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
81000c77 l     F .text	000000ad std
81000d24 l     F .text	0000001b stdin_init
81000d3f l     F .text	0000001b stdout_init
81000d5a l     F .text	0000001b stderr_init
81007e4c l     O .bss	00000004 __sfp_recursive_mutex
81007e50 l     O .bss	00000004 __sinit_recursive_mutex
8100101d l     F .text	0000000a __fp_lock
81001027 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getopt.c
81007e5c l     O .bss	00000004 optwhere
81007e60 l     O .bss	00000004 permute_from
81007e64 l     O .bss	00000004 num_nonopts
810017ba l     F .text	0000007b reverse_argv_elements
81001835 l     F .text	00000036 permute
8100186b l     F .text	00000031 is_option
8100189c l     F .text	00000059 read_globals
810018f5 l     F .text	00000052 write_globals
81001947 l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 impure.c
81006e60 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 mallocr.c
810025b2 l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
810030fd l       .text	00000000 L20
810030b4 l       .text	00000000 L5
810030fa l       .text	00000000 L15
810030c0 l       .text	00000000 L8
810030e1 l       .text	00000000 L9
810030f0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
8100314f l       .text	00000000 L4
81003141 l       .text	00000000 BYTECMP
8100313c l       .text	00000000 L5
81003143 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
81007ec8 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81003310 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
81003ed7 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
8100430b l       .text	00000000 L25
810042b2 l       .text	00000000 L5
810042fe l       .text	00000000 L14
81004304 l       .text	00000000 L19
810042c3 l       .text	00000000 L10
810042f0 l       .text	00000000 L9
810042f3 l       .text	00000000 L15
8100433e l       .text	00000000 L26
81004341 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81004446 l       .text	00000000 L5
8100447e l       .text	00000000 L15
81004450 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
8100458c l     F .text	0000000a __locale_ctype_ptr_l
81004596 l     F .text	0000000a __get_global_locale
810045a0 l     F .text	0000000a __get_current_locale
810045aa l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
81007ecc l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 fputwc.c
81004e9f l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
810076b0 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 locale.c
8100563c l     F .text	0000000a __get_global_locale
81005646 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
810058a8 l     F .text	0000000a __get_global_locale
810058b2 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 putc.c
810059cd l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
8100666b l     F .text	0000000a __get_global_locale
81006675 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
81006775 l     F .text	0000000a __get_global_locale
8100677f l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
81007ed8 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
81007edc l     O .bss	00000004 __env_recursive_mutex
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
8100683f g     F .text	00000040 _isatty_r
810063f1 g     F .text	00000037 cleanup_glue
81003de5 g     F .text	000000d6 _puts_r
810056e2 g     F .text	00000046 _lseek_r
81000614 g     F .text	0000001b yield
81004572 g     F .text	0000001a strtok_r
81003db0 g     F .text	00000035 printf
8100667f g     F .text	00000077 _wcrtomb_r
810041ee g     F .text	0000004a __sseek
81000f6c g     F .text	00000099 __sinit
810047ef g     F .text	00000112 __swbuf_r
81005650 g     F .text	0000005f _setlocale_r
81000d75 g     F .text	0000006f __sfmoreglue
8100322e g     F .text	00000006 __malloc_unlock
81005940 g       .text	00000000 memmove
810024a3 g     F .text	00000049 getopt_long
81000f52 g     F .text	0000001a _cleanup
810044b2 g     F .text	000000c0 __strtok_r
81004c18 g     F .text	0000000a __errno
81005512 g     F .text	00000020 getenv
810067fc g     F .text	00000043 _fstat_r
81007ed4 g     O .bss	00000004 errno
81004189 g     F .text	0000000a __seofread
810005e7 g     F .text	0000002d execve
81000589 g     F .text	0000001b getpid
81000c58 g     F .text	0000001f fgets
81003158 g       .text	00000000 memcpy
81000f31 g     F .text	00000021 _cleanup_r
81003ebb g     F .text	0000001c puts
81003d83 g     F .text	0000002d _printf_r
810006fe g     F .text	00000021 isatty
810025a8 g     F .text	0000000a __getreent
81007e54 g     O .bss	00000004 optarg
81007e80 g     O .bss	00000004 __malloc_top_pad
81007840 g       .bss	00000000 __bss_start__
81005054 g     F .text	0000049e __sfvwrite_r
81004105 g     F .text	00000040 _sbrk_r
81006e44 g     O .data	00000004 opterr
81005ad1 g     F .text	00000046 _read_r
81004c22 g     F .text	00000107 _fclose_r
81000ac1 g     F .text	00000039 fflush
81007e84 g     O .bss	00000004 __malloc_max_sbrked_mem
810006d1 g     F .text	0000002d lseek
81006ad4 g     O .rodata	00000004 _global_impure_ptr
81005b17 g     F .text	000008da _realloc_r
810047a1 g     F .text	00000025 strtol_l
81004fb5 g     F .text	00000057 _fputwc_r
81001031 g     F .text	00000024 __fp_lock_all
810047c6 g     F .text	00000029 strtol
81006428 g     F .text	00000160 _reclaim_reent
81004d46 g     F .text	00000046 _fputc_r
81000683 g     F .text	0000002d write
81005a33 g     F .text	0000004b _putc_r
8100782c g     O .data	00000004 environ
8100071f g     F .text	00000027 fstat
810010a2 g     F .text	0000002c fprintf
81002581 g     F .text	00000027 __getopt_long_only_r
810007e5 g     F .text	0000001a _atoi_r
81000513 g     F .text	0000004c sys_call
81003376 g     F .text	000000a8 __sfputs_r
81007e58 g     O .bss	00000004 optind
81001005 g     F .text	00000006 __sfp_lock_acquire
81003070 g       .text	00000000 memchr
81007ee0 g       .bss	00000000 __bss_end__
810010ce g     F .text	000003db _free_r
810007aa g     F .text	00000021 wait
81006ba0 g     O .rodata	00000180 _ctype_b
810056af g     F .text	00000014 __locale_mb_cur_max
81004ac3 g     F .text	00000115 __call_exitprocs
810076ac g     O .data	00000004 __malloc_sbrk_base
810004c5 g       .text	00000000 _start
81000656 g     F .text	0000002d read
81006588 g     F .text	000000e3 strncmp
8100255a g     F .text	00000027 __getopt_long_r
81007ea0 g     O .bss	00000028 __malloc_current_mallinfo
81003d83 g     F .text	0000002d _iprintf_r
81004bd8 g     F .text	00000040 _close_r
81004489 g     F .text	00000029 strtok
81003105 g       .text	00000000 memcmp
810016dd g     F .text	000000b8 _fwrite_r
810005cc g     F .text	0000001b fork
81004968 g     F .text	0000015b __swsetup_r
81000de4 g     F .text	0000014d __sfp
810072a0 g     O .data	00000408 __malloc_av_
81001017 g     F .text	00000006 __sinit_lock_release
81004145 g     F .text	00000044 __sread
81003228 g     F .text	00000006 __malloc_lock
81001079 g     F .text	00000029 _fprintf_r
81000746 g     F .text	00000021 sbrk
81000a69 g     F .text	00000058 _fflush_r
810004d5 g     F .text	0000003e cstart
8100245c g     F .text	00000047 getopt
810031a0 g       .text	00000000 memset
81000348 g     F .text	0000017d main
81007e88 g     O .bss	00000004 __malloc_max_total_mem
81004901 g     F .text	00000021 __swbuf
81004238 g     F .text	00000025 __sclose
81004d29 g     F .text	0000001d fclose
8100477c g     F .text	00000025 _strtol_r
81005532 g     F .text	000000ed _findenv_r
81002845 g     F .text	00000822 _malloc_r
810067ad g     F .text	00000043 __ascii_wctomb
81001079 g     F .text	00000029 _fiprintf_r
810067f6 g     F .text	00000006 __env_unlock
810054f2 g     F .text	00000020 _findenv
8100160a g     F .text	00000068 _fwalk
81000afa g     F .text	0000015e _fgets_r
810058bc g     F .text	0000002a _mbtowc_r
81005a7e g     F .text	00000053 putc
810024ec g     F .text	00000049 getopt_long_only
810014a9 g     F .text	00000161 _malloc_trim_r
8100435c g     F .text	000000a5 strcmp
8100341e g     F .text	00000025 vfiprintf
81000767 g     F .text	00000021 dup
81003db0 g     F .text	00000035 iprintf
81007ed0 g     O .bss	00000004 _PathLocale
81004922 g     F .text	00000046 _write_r
810056c3 g     F .text	0000001f setlocale
81003799 g     F .text	0000019b _printf_common
81007284 g     O .data	00000004 _impure_ptr
81000843 g     F .text	00000226 __sflush_r
81003f04 g     F .text	00000201 __srefill_r
810058e6 g     F .text	00000058 __ascii_mbtowc
81001055 g     F .text	00000024 __fp_unlock_all
81004d8c g     F .text	0000004e fputc
810005a4 g     F .text	00000028 print_msg
81006e48 g     O .data	00000004 optopt
81005815 g     F .text	00000093 __swhatbuf_r
81001795 g     F .text	00000025 fwrite
81004f05 g     F .text	000000b0 __fputwc
81004dda g     F .text	000000a6 _fputs_r
81004193 g     F .text	0000005b __swrite
810076a8 g     O .data	00000004 __malloc_trim_threshold
810007ff g     F .text	00000044 exit
810010a2 g     F .text	0000002c fiprintf
81003443 g     F .text	00000356 _vfiprintf_r
81001672 g     F .text	0000006b _fwalk_reent
8100100b g     F .text	00000006 __sfp_lock_release
810007cb g     F .text	0000001a atoi
81006d20 g     O .rodata	00000101 _ctype_
81002535 g     F .text	00000025 __getopt_r
81000788 g     F .text	00000022 _exit
81005728 g     F .text	000000ed __smakebuf_r
81004410 g       .text	00000000 strlen
81003934 g     F .text	0000044f _printf_i
8100062f g     F .text	00000027 open
81003234 g     F .text	000000dc __sprint_r
81004260 g       .text	00000000 strchr
81004e80 g     F .text	0000001f fputs
81006789 g     F .text	00000024 _wctomb_r
810067f0 g     F .text	00000006 __env_lock
81003443 g     F .text	00000356 _vfprintf_r
8100055f g     F .text	0000002a msleep
810066f6 g     F .text	0000007f wcrtomb
810006b0 g     F .text	00000021 close
810076c0 g     O .data	0000016c __global_locale
8100341e g     F .text	00000025 vfprintf
8100500c g     F .text	00000048 fputwc
81001011 g     F .text	00000006 __sinit_lock_acquire
8100561f g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <do_help>:
 *
 * @param argc
 * @param arg
 * @return int
 */
static int do_help(int argc, const char **argv) {
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 18             	sub    $0x18,%esp
  const cli_cmd_t *start = cli.cmd_start;
81000006:	a1 40 7e 00 81       	mov    0x81007e40,%eax
8100000b:	89 45 f4             	mov    %eax,-0xc(%ebp)
  while (start < cli.cmd_end) {
8100000e:	eb 21                	jmp    81000031 <do_help+0x31>
    printf("%s\t--> %s\n", start->name, start->usage);
81000010:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000013:	8b 50 04             	mov    0x4(%eax),%edx
81000016:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000019:	8b 00                	mov    (%eax),%eax
8100001b:	83 ec 04             	sub    $0x4,%esp
8100001e:	52                   	push   %edx
8100001f:	50                   	push   %eax
81000020:	68 86 68 00 81       	push   $0x81006886
81000025:	e8 86 3d 00 00       	call   81003db0 <iprintf>
8100002a:	83 c4 10             	add    $0x10,%esp
    start++;
8100002d:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
  while (start < cli.cmd_end) {
81000031:	a1 44 7e 00 81       	mov    0x81007e44,%eax
81000036:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000039:	72 d5                	jb     81000010 <do_help+0x10>
  }

  return 0;
8100003b:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000040:	c9                   	leave  
81000041:	c3                   	ret    

81000042 <do_clear>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_clear(int argc, const char **argv) {
81000042:	55                   	push   %ebp
81000043:	89 e5                	mov    %esp,%ebp
81000045:	83 ec 08             	sub    $0x8,%esp
  printf("%s", ESC_CLEAR_SCREEN);
81000048:	83 ec 08             	sub    $0x8,%esp
8100004b:	68 91 68 00 81       	push   $0x81006891
81000050:	68 96 68 00 81       	push   $0x81006896
81000055:	e8 56 3d 00 00       	call   81003db0 <iprintf>
8100005a:	83 c4 10             	add    $0x10,%esp
  printf("%s", ESC_MOVE_CURSOR(0, 0));
8100005d:	83 ec 08             	sub    $0x8,%esp
81000060:	68 99 68 00 81       	push   $0x81006899
81000065:	68 96 68 00 81       	push   $0x81006896
8100006a:	e8 41 3d 00 00       	call   81003db0 <iprintf>
8100006f:	83 c4 10             	add    $0x10,%esp
  return 0;
81000072:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000077:	c9                   	leave  
81000078:	c3                   	ret    

81000079 <do_echo>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_echo(int argc, const char **argv) {
81000079:	55                   	push   %ebp
8100007a:	89 e5                	mov    %esp,%ebp
8100007c:	53                   	push   %ebx
8100007d:	81 ec 94 00 00 00    	sub    $0x94,%esp
  if (argc ==
81000083:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
81000087:	75 40                	jne    810000c9 <do_echo+0x50>
      1) {  // 没有指定任何参数只输入了 echo，则等待用户输入信息以进行回显
    char msg_buf[128];
    fgets(msg_buf, sizeof(msg_buf), stdin);
81000089:	e8 1a 25 00 00       	call   810025a8 <__getreent>
8100008e:	8b 40 04             	mov    0x4(%eax),%eax
81000091:	83 ec 04             	sub    $0x4,%esp
81000094:	50                   	push   %eax
81000095:	68 80 00 00 00       	push   $0x80
8100009a:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000a0:	50                   	push   %eax
810000a1:	e8 b2 0b 00 00       	call   81000c58 <fgets>
810000a6:	83 c4 10             	add    $0x10,%esp
    msg_buf[sizeof(msg_buf) - 1] = '\0';
810000a9:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
    puts(msg_buf);
810000ad:	83 ec 0c             	sub    $0xc,%esp
810000b0:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000b6:	50                   	push   %eax
810000b7:	e8 ff 3d 00 00       	call   81003ebb <puts>
810000bc:	83 c4 10             	add    $0x10,%esp
    return 0;
810000bf:	b8 00 00 00 00       	mov    $0x0,%eax
810000c4:	e9 6d 01 00 00       	jmp    81000236 <do_echo+0x1bd>
  }

  optind = 1;  // getopt每次查找都从optind处开始
810000c9:	c7 05 58 7e 00 81 01 	movl   $0x1,0x81007e58
810000d0:	00 00 00 
  int count = 1;
810000d3:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
  int ch;
  // getopt函数解析参数列表，n:表示查找-n选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
810000da:	e9 a4 00 00 00       	jmp    81000183 <do_echo+0x10a>
    switch (ch) {
810000df:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e3:	74 54                	je     81000139 <do_echo+0xc0>
810000e5:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e9:	0f 8f 93 00 00 00    	jg     81000182 <do_echo+0x109>
810000ef:	83 7d ec 3f          	cmpl   $0x3f,-0x14(%ebp)
810000f3:	74 5a                	je     8100014f <do_echo+0xd6>
810000f5:	83 7d ec 68          	cmpl   $0x68,-0x14(%ebp)
810000f9:	0f 85 83 00 00 00    	jne    81000182 <do_echo+0x109>
      case 'h':
        puts("help:");
810000ff:	83 ec 0c             	sub    $0xc,%esp
81000102:	68 a0 68 00 81       	push   $0x810068a0
81000107:	e8 af 3d 00 00       	call   81003ebb <puts>
8100010c:	83 c4 10             	add    $0x10,%esp
        puts("\techo any message");
8100010f:	83 ec 0c             	sub    $0xc,%esp
81000112:	68 a6 68 00 81       	push   $0x810068a6
81000117:	e8 9f 3d 00 00       	call   81003ebb <puts>
8100011c:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: echo [-n count] message");
8100011f:	83 ec 0c             	sub    $0xc,%esp
81000122:	68 b8 68 00 81       	push   $0x810068b8
81000127:	e8 8f 3d 00 00       	call   81003ebb <puts>
8100012c:	83 c4 10             	add    $0x10,%esp
        return 0;
8100012f:	b8 00 00 00 00       	mov    $0x0,%eax
81000134:	e9 fd 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      case 'n':
        count = atoi(optarg);  // optarg为newlib库自己声明的
81000139:	a1 54 7e 00 81       	mov    0x81007e54,%eax
8100013e:	83 ec 0c             	sub    $0xc,%esp
81000141:	50                   	push   %eax
81000142:	e8 84 06 00 00       	call   810007cb <atoi>
81000147:	83 c4 10             	add    $0x10,%esp
8100014a:	89 45 f4             	mov    %eax,-0xc(%ebp)
        break;
8100014d:	eb 34                	jmp    81000183 <do_echo+0x10a>
      case '?':  // 找到未指定选项
        if (optarg) {
8100014f:	a1 54 7e 00 81       	mov    0x81007e54,%eax
81000154:	85 c0                	test   %eax,%eax
81000156:	74 20                	je     81000178 <do_echo+0xff>
          fprintf(stderr,
81000158:	8b 1d 54 7e 00 81    	mov    0x81007e54,%ebx
8100015e:	e8 45 24 00 00       	call   810025a8 <__getreent>
81000163:	8b 40 0c             	mov    0xc(%eax),%eax
81000166:	83 ec 04             	sub    $0x4,%esp
81000169:	53                   	push   %ebx
8100016a:	68 d8 68 00 81       	push   $0x810068d8
8100016f:	50                   	push   %eax
81000170:	e8 2d 0f 00 00       	call   810010a2 <fiprintf>
81000175:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000178:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100017d:	e9 b4 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      default:
        break;
81000182:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
81000183:	83 ec 04             	sub    $0x4,%esp
81000186:	68 f7 68 00 81       	push   $0x810068f7
8100018b:	ff 75 0c             	push   0xc(%ebp)
8100018e:	ff 75 08             	push   0x8(%ebp)
81000191:	e8 c6 22 00 00       	call   8100245c <getopt>
81000196:	83 c4 10             	add    $0x10,%esp
81000199:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100019c:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810001a0:	0f 85 39 ff ff ff    	jne    810000df <do_echo+0x66>
    }
  }

    if (count == 0) {
810001a6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810001aa:	75 21                	jne    810001cd <do_echo+0x154>
    fprintf(stderr, ESC_COLOR_ERROR
810001ac:	e8 f7 23 00 00       	call   810025a8 <__getreent>
810001b1:	8b 40 0c             	mov    0xc(%eax),%eax
810001b4:	50                   	push   %eax
810001b5:	6a 32                	push   $0x32
810001b7:	6a 01                	push   $0x1
810001b9:	68 fc 68 00 81       	push   $0x810068fc
810001be:	e8 d2 15 00 00       	call   81001795 <fwrite>
810001c3:	83 c4 10             	add    $0x10,%esp
            "echo: argument required for option '-n'\n" ESC_COLOR_DEFAULT);
    return -1;
810001c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001cb:	eb 69                	jmp    81000236 <do_echo+0x1bd>
    }
  if (optind >
810001cd:	a1 58 7e 00 81       	mov    0x81007e58,%eax
810001d2:	39 45 08             	cmp    %eax,0x8(%ebp)
810001d5:	7f 21                	jg     810001f8 <do_echo+0x17f>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "message is empty\n" ESC_COLOR_DEFAULT);
810001d7:	e8 cc 23 00 00       	call   810025a8 <__getreent>
810001dc:	8b 40 0c             	mov    0xc(%eax),%eax
810001df:	50                   	push   %eax
810001e0:	6a 1b                	push   $0x1b
810001e2:	6a 01                	push   $0x1
810001e4:	68 2f 69 00 81       	push   $0x8100692f
810001e9:	e8 a7 15 00 00       	call   81001795 <fwrite>
810001ee:	83 c4 10             	add    $0x10,%esp
    return -1;
810001f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001f6:	eb 3e                	jmp    81000236 <do_echo+0x1bd>
  }
  

  const char *msg = argv[optind];
810001f8:	a1 58 7e 00 81       	mov    0x81007e58,%eax
810001fd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000204:	8b 45 0c             	mov    0xc(%ebp),%eax
81000207:	01 d0                	add    %edx,%eax
81000209:	8b 00                	mov    (%eax),%eax
8100020b:	89 45 e8             	mov    %eax,-0x18(%ebp)
  for (int i = 0; i < count; ++i) {
8100020e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81000215:	eb 12                	jmp    81000229 <do_echo+0x1b0>
    puts(msg);
81000217:	83 ec 0c             	sub    $0xc,%esp
8100021a:	ff 75 e8             	push   -0x18(%ebp)
8100021d:	e8 99 3c 00 00       	call   81003ebb <puts>
81000222:	83 c4 10             	add    $0x10,%esp
  for (int i = 0; i < count; ++i) {
81000225:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81000229:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100022c:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100022f:	7c e6                	jl     81000217 <do_echo+0x19e>
  }
  return 0;
81000231:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000236:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000239:	c9                   	leave  
8100023a:	c3                   	ret    

8100023b <do_exit>:
 * 
 * @param argc 
 * @param argv 
 * @return int 
 */
static int do_exit(int argc, const char ** argv) {
8100023b:	55                   	push   %ebp
8100023c:	89 e5                	mov    %esp,%ebp
8100023e:	83 ec 08             	sub    $0x8,%esp
  exit(0);
81000241:	83 ec 0c             	sub    $0xc,%esp
81000244:	6a 00                	push   $0x0
81000246:	e8 b4 05 00 00       	call   810007ff <exit>

8100024b <cli_init>:

/**
 * @brief 初始化终端结构
 *
 */
static void cli_init() {
8100024b:	55                   	push   %ebp
8100024c:	89 e5                	mov    %esp,%ebp
8100024e:	83 ec 08             	sub    $0x8,%esp
  cli.prompt = prompt;
81000251:	a1 40 6e 00 81       	mov    0x81006e40,%eax
81000256:	a3 48 7e 00 81       	mov    %eax,0x81007e48
  memset(cli.curr_input, 0, CLI_INPUT_SIZE);
8100025b:	83 ec 04             	sub    $0x4,%esp
8100025e:	68 00 04 00 00       	push   $0x400
81000263:	6a 00                	push   $0x0
81000265:	68 40 7a 00 81       	push   $0x81007a40
8100026a:	e8 31 2f 00 00       	call   810031a0 <memset>
8100026f:	83 c4 10             	add    $0x10,%esp
  cli.cmd_start = cmd_list;
81000272:	c7 05 40 7e 00 81 e0 	movl   $0x810069e0,0x81007e40
81000279:	69 00 81 
  cli.cmd_end = cmd_list + sizeof(cmd_list) / sizeof(cmd_list[0]);
8100027c:	b8 10 6a 00 81       	mov    $0x81006a10,%eax
81000281:	a3 44 7e 00 81       	mov    %eax,0x81007e44
}
81000286:	90                   	nop
81000287:	c9                   	leave  
81000288:	c3                   	ret    

81000289 <show_prompt>:

/**
 * @brief 打印终端每行固定的提示符
 *
 */
static void show_prompt(void) {
81000289:	55                   	push   %ebp
8100028a:	89 e5                	mov    %esp,%ebp
8100028c:	83 ec 08             	sub    $0x8,%esp
  printf("%s", cli.prompt);
8100028f:	a1 48 7e 00 81       	mov    0x81007e48,%eax
81000294:	83 ec 08             	sub    $0x8,%esp
81000297:	50                   	push   %eax
81000298:	68 96 68 00 81       	push   $0x81006896
8100029d:	e8 0e 3b 00 00       	call   81003db0 <iprintf>
810002a2:	83 c4 10             	add    $0x10,%esp
  fflush(stdout);
810002a5:	e8 fe 22 00 00       	call   810025a8 <__getreent>
810002aa:	8b 40 08             	mov    0x8(%eax),%eax
810002ad:	83 ec 0c             	sub    $0xc,%esp
810002b0:	50                   	push   %eax
810002b1:	e8 0b 08 00 00       	call   81000ac1 <fflush>
810002b6:	83 c4 10             	add    $0x10,%esp
}
810002b9:	90                   	nop
810002ba:	c9                   	leave  
810002bb:	c3                   	ret    

810002bc <find_builtin>:
 * @brief 根据命令程序名称查找并返回对应的命令结构
 *
 * @param name
 * @return const cli_cmd_t*
 */
static const cli_cmd_t *find_builtin(const char *name) {
810002bc:	55                   	push   %ebp
810002bd:	89 e5                	mov    %esp,%ebp
810002bf:	83 ec 18             	sub    $0x18,%esp
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
810002c2:	a1 40 7e 00 81       	mov    0x81007e40,%eax
810002c7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810002ca:	eb 22                	jmp    810002ee <find_builtin+0x32>
    if (strcmp(cmd->name, name) != 0) {
810002cc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810002cf:	8b 00                	mov    (%eax),%eax
810002d1:	83 ec 08             	sub    $0x8,%esp
810002d4:	ff 75 08             	push   0x8(%ebp)
810002d7:	50                   	push   %eax
810002d8:	e8 7f 40 00 00       	call   8100435c <strcmp>
810002dd:	83 c4 10             	add    $0x10,%esp
810002e0:	85 c0                	test   %eax,%eax
810002e2:	75 05                	jne    810002e9 <find_builtin+0x2d>
      continue;
    }
    return cmd;
810002e4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810002e7:	eb 14                	jmp    810002fd <find_builtin+0x41>
      continue;
810002e9:	90                   	nop
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
810002ea:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
810002ee:	a1 44 7e 00 81       	mov    0x81007e44,%eax
810002f3:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810002f6:	72 d4                	jb     810002cc <find_builtin+0x10>
  }

  return (const cli_cmd_t *)0;
810002f8:	b8 00 00 00 00       	mov    $0x0,%eax
}
810002fd:	c9                   	leave  
810002fe:	c3                   	ret    

810002ff <run_builtin>:
 *
 * @param cmd
 * @param argc
 * @param argv
 */
static void run_builtin(const cli_cmd_t *cmd, int argc, const char **argv) {
810002ff:	55                   	push   %ebp
81000300:	89 e5                	mov    %esp,%ebp
81000302:	53                   	push   %ebx
81000303:	83 ec 14             	sub    $0x14,%esp
  int ret = cmd->do_func(argc, argv);
81000306:	8b 45 08             	mov    0x8(%ebp),%eax
81000309:	8b 40 08             	mov    0x8(%eax),%eax
8100030c:	83 ec 08             	sub    $0x8,%esp
8100030f:	ff 75 10             	push   0x10(%ebp)
81000312:	ff 75 0c             	push   0xc(%ebp)
81000315:	ff d0                	call   *%eax
81000317:	83 c4 10             	add    $0x10,%esp
8100031a:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (ret < 0) {
8100031d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000321:	79 1f                	jns    81000342 <run_builtin+0x43>
    fprintf(stderr, ESC_COLOR_ERROR"%s error: %d\n"ESC_COLOR_DEFAULT, cmd->name, ret);
81000323:	8b 45 08             	mov    0x8(%ebp),%eax
81000326:	8b 18                	mov    (%eax),%ebx
81000328:	e8 7b 22 00 00       	call   810025a8 <__getreent>
8100032d:	8b 40 0c             	mov    0xc(%eax),%eax
81000330:	ff 75 f4             	push   -0xc(%ebp)
81000333:	53                   	push   %ebx
81000334:	68 10 6a 00 81       	push   $0x81006a10
81000339:	50                   	push   %eax
8100033a:	e8 63 0d 00 00       	call   810010a2 <fiprintf>
8100033f:	83 c4 10             	add    $0x10,%esp
  }
}
81000342:	90                   	nop
81000343:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000346:	c9                   	leave  
81000347:	c3                   	ret    

81000348 <main>:

int main(int argc, char **argv) {
81000348:	8d 4c 24 04          	lea    0x4(%esp),%ecx
8100034c:	83 e4 f0             	and    $0xfffffff0,%esp
8100034f:	ff 71 fc             	push   -0x4(%ecx)
81000352:	55                   	push   %ebp
81000353:	89 e5                	mov    %esp,%ebp
81000355:	51                   	push   %ecx
81000356:	83 ec 44             	sub    $0x44,%esp
81000359:	89 c8                	mov    %ecx,%eax
  // 1.打开shell对应的tty设备绑定为stdin
  open(argv[0], 0);
8100035b:	8b 40 04             	mov    0x4(%eax),%eax
8100035e:	8b 00                	mov    (%eax),%eax
81000360:	83 ec 08             	sub    $0x8,%esp
81000363:	6a 00                	push   $0x0
81000365:	50                   	push   %eax
81000366:	e8 c4 02 00 00       	call   8100062f <open>
8100036b:	83 c4 10             	add    $0x10,%esp
  // 2.复用该0号描述符的文件，打开shell的stdout和stderr
  dup(0);
8100036e:	83 ec 0c             	sub    $0xc,%esp
81000371:	6a 00                	push   $0x0
81000373:	e8 ef 03 00 00       	call   81000767 <dup>
81000378:	83 c4 10             	add    $0x10,%esp
  dup(0);
8100037b:	83 ec 0c             	sub    $0xc,%esp
8100037e:	6a 00                	push   $0x0
81000380:	e8 e2 03 00 00       	call   81000767 <dup>
81000385:	83 c4 10             	add    $0x10,%esp

  // 3.初始化终端结构
  cli_init();
81000388:	e8 be fe ff ff       	call   8100024b <cli_init>

  // 4.循环读取命令行输入并执行指令
  for (;;) {
    show_prompt();
8100038d:	e8 f7 fe ff ff       	call   81000289 <show_prompt>
    // 4.1获取命令行输入并清空末尾的"\r\n"
    char *str = fgets(cli.curr_input, CLI_INPUT_SIZE, stdin);
81000392:	e8 11 22 00 00       	call   810025a8 <__getreent>
81000397:	8b 40 04             	mov    0x4(%eax),%eax
8100039a:	83 ec 04             	sub    $0x4,%esp
8100039d:	50                   	push   %eax
8100039e:	68 00 04 00 00       	push   $0x400
810003a3:	68 40 7a 00 81       	push   $0x81007a40
810003a8:	e8 ab 08 00 00       	call   81000c58 <fgets>
810003ad:	83 c4 10             	add    $0x10,%esp
810003b0:	89 45 ec             	mov    %eax,-0x14(%ebp)
    if (!str) {
810003b3:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810003b7:	0f 84 fc 00 00 00    	je     810004b9 <main+0x171>
      continue;
    }
    char *cr = strchr(cli.curr_input, '\n');
810003bd:	83 ec 08             	sub    $0x8,%esp
810003c0:	6a 0a                	push   $0xa
810003c2:	68 40 7a 00 81       	push   $0x81007a40
810003c7:	e8 94 3e 00 00       	call   81004260 <strchr>
810003cc:	83 c4 10             	add    $0x10,%esp
810003cf:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
810003d2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810003d6:	74 06                	je     810003de <main+0x96>
      *cr = '\0';
810003d8:	8b 45 e8             	mov    -0x18(%ebp),%eax
810003db:	c6 00 00             	movb   $0x0,(%eax)
    }
    cr = strchr(cli.curr_input, '\r');
810003de:	83 ec 08             	sub    $0x8,%esp
810003e1:	6a 0d                	push   $0xd
810003e3:	68 40 7a 00 81       	push   $0x81007a40
810003e8:	e8 73 3e 00 00       	call   81004260 <strchr>
810003ed:	83 c4 10             	add    $0x10,%esp
810003f0:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
810003f3:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810003f7:	74 06                	je     810003ff <main+0xb7>
      *cr = '\0';
810003f9:	8b 45 e8             	mov    -0x18(%ebp),%eax
810003fc:	c6 00 00             	movb   $0x0,(%eax)
    }

    // 4.2解析命令行输入的程序和参数
    int argc = 0;
810003ff:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    const char *argv[CLI_MAX_ARG_COUNT];
    memset(argv, 0, sizeof(argv));
81000406:	83 ec 04             	sub    $0x4,%esp
81000409:	6a 28                	push   $0x28
8100040b:	6a 00                	push   $0x0
8100040d:	8d 45 b8             	lea    -0x48(%ebp),%eax
81000410:	50                   	push   %eax
81000411:	e8 8a 2d 00 00       	call   810031a0 <memset>
81000416:	83 c4 10             	add    $0x10,%esp
    const char *split = " ";
81000419:	c7 45 e4 28 6a 00 81 	movl   $0x81006a28,-0x1c(%ebp)
    char *token =
        strtok(cli.curr_input,
81000420:	83 ec 08             	sub    $0x8,%esp
81000423:	ff 75 e4             	push   -0x1c(%ebp)
81000426:	68 40 7a 00 81       	push   $0x81007a40
8100042b:	e8 59 40 00 00       	call   81004489 <strtok>
81000430:	83 c4 10             	add    $0x10,%esp
81000433:	89 45 f0             	mov    %eax,-0x10(%ebp)
               split);  // 将字符串中的第一个split字符换成'\0'并放回起始索引
    while (token) {
81000436:	eb 23                	jmp    8100045b <main+0x113>
      argv[argc++] = token;
81000438:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100043b:	8d 50 01             	lea    0x1(%eax),%edx
8100043e:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000441:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000444:	89 54 85 b8          	mov    %edx,-0x48(%ebp,%eax,4)
      token = strtok(NULL, split);  // 填空默认从之前找到的位置的下一个位置开始
81000448:	83 ec 08             	sub    $0x8,%esp
8100044b:	ff 75 e4             	push   -0x1c(%ebp)
8100044e:	6a 00                	push   $0x0
81000450:	e8 34 40 00 00       	call   81004489 <strtok>
81000455:	83 c4 10             	add    $0x10,%esp
81000458:	89 45 f0             	mov    %eax,-0x10(%ebp)
    while (token) {
8100045b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100045f:	75 d7                	jne    81000438 <main+0xf0>
    }

    if (argc == 0) {
81000461:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000465:	74 58                	je     810004bf <main+0x177>
      continue;
    }

    // 4.3 获取可执行的命令结构，并执行
    const cli_cmd_t *cmd = find_builtin(argv[0]);
81000467:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100046a:	83 ec 0c             	sub    $0xc,%esp
8100046d:	50                   	push   %eax
8100046e:	e8 49 fe ff ff       	call   810002bc <find_builtin>
81000473:	83 c4 10             	add    $0x10,%esp
81000476:	89 45 e0             	mov    %eax,-0x20(%ebp)
    if (cmd) {
81000479:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8100047d:	74 17                	je     81000496 <main+0x14e>
      run_builtin(cmd, argc, argv);
8100047f:	83 ec 04             	sub    $0x4,%esp
81000482:	8d 45 b8             	lea    -0x48(%ebp),%eax
81000485:	50                   	push   %eax
81000486:	ff 75 f4             	push   -0xc(%ebp)
81000489:	ff 75 e0             	push   -0x20(%ebp)
8100048c:	e8 6e fe ff ff       	call   810002ff <run_builtin>
81000491:	83 c4 10             	add    $0x10,%esp
      continue;
81000494:	eb 2a                	jmp    810004c0 <main+0x178>
    }

    fprintf(stderr, ESC_COLOR_ERROR "Unknown command: %s\n" ESC_COLOR_DEFAULT,
81000496:	e8 0d 21 00 00       	call   810025a8 <__getreent>
8100049b:	8b 40 0c             	mov    0xc(%eax),%eax
8100049e:	83 ec 04             	sub    $0x4,%esp
810004a1:	68 40 7a 00 81       	push   $0x81007a40
810004a6:	68 2c 6a 00 81       	push   $0x81006a2c
810004ab:	50                   	push   %eax
810004ac:	e8 f1 0b 00 00       	call   810010a2 <fiprintf>
810004b1:	83 c4 10             	add    $0x10,%esp
810004b4:	e9 d4 fe ff ff       	jmp    8100038d <main+0x45>
      continue;
810004b9:	90                   	nop
810004ba:	e9 ce fe ff ff       	jmp    8100038d <main+0x45>
      continue;
810004bf:	90                   	nop
  for (;;) {
810004c0:	e9 c8 fe ff ff       	jmp    8100038d <main+0x45>

810004c5 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
810004c5:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
810004c8:	8e d8                	mov    %eax,%ds
	mov %ax, %es
810004ca:	8e c0                	mov    %eax,%es
	mov %ax, %fs
810004cc:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
810004ce:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
810004d0:	e9 00 00 00 00       	jmp    810004d5 <cstart>

810004d5 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
810004d5:	55                   	push   %ebp
810004d6:	89 e5                	mov    %esp,%ebp
810004d8:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
810004db:	c7 45 f4 40 78 00 81 	movl   $0x81007840,-0xc(%ebp)
    while (start < __bss_end__) {
810004e2:	eb 0c                	jmp    810004f0 <cstart+0x1b>
        *(start++) = 0;
810004e4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810004e7:	8d 50 01             	lea    0x1(%eax),%edx
810004ea:	89 55 f4             	mov    %edx,-0xc(%ebp)
810004ed:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
810004f0:	81 7d f4 e0 7e 00 81 	cmpl   $0x81007ee0,-0xc(%ebp)
810004f7:	72 eb                	jb     810004e4 <cstart+0xf>
    }
    
    exit(main(argc, argv));
810004f9:	83 ec 08             	sub    $0x8,%esp
810004fc:	ff 75 0c             	push   0xc(%ebp)
810004ff:	ff 75 08             	push   0x8(%ebp)
81000502:	e8 41 fe ff ff       	call   81000348 <main>
81000507:	83 c4 10             	add    $0x10,%esp
8100050a:	83 ec 0c             	sub    $0xc,%esp
8100050d:	50                   	push   %eax
8100050e:	e8 ec 02 00 00       	call   810007ff <exit>

81000513 <sys_call>:
#include    "cpu/syscall.h"
#include    "os_cfg.h"
#include    "lib_syscall.h"


int sys_call(syscall_args_t *args) {
81000513:	55                   	push   %ebp
81000514:	89 e5                	mov    %esp,%ebp
81000516:	57                   	push   %edi
81000517:	56                   	push   %esi
81000518:	53                   	push   %ebx
81000519:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
8100051c:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81000523:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
8100052a:	8b 45 08             	mov    0x8(%ebp),%eax
8100052d:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
81000530:	8b 55 08             	mov    0x8(%ebp),%edx
81000533:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
81000536:	8b 4d 08             	mov    0x8(%ebp),%ecx
81000539:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
8100053c:	8b 5d 08             	mov    0x8(%ebp),%ebx
8100053f:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
81000542:	8b 75 08             	mov    0x8(%ebp),%esi
81000545:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
81000547:	8d 7d e8             	lea    -0x18(%ebp),%edi
8100054a:	50                   	push   %eax
8100054b:	52                   	push   %edx
8100054c:	51                   	push   %ecx
8100054d:	53                   	push   %ebx
8100054e:	56                   	push   %esi
8100054f:	ff 1f                	lcall  *(%edi)
81000551:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
81000554:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
81000557:	83 c4 10             	add    $0x10,%esp
8100055a:	5b                   	pop    %ebx
8100055b:	5e                   	pop    %esi
8100055c:	5f                   	pop    %edi
8100055d:	5d                   	pop    %ebp
8100055e:	c3                   	ret    

8100055f <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
8100055f:	55                   	push   %ebp
81000560:	89 e5                	mov    %esp,%ebp
81000562:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
81000565:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000569:	7e 1b                	jle    81000586 <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
8100056b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
81000572:	8b 45 08             	mov    0x8(%ebp),%eax
81000575:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
81000578:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100057b:	50                   	push   %eax
8100057c:	e8 92 ff ff ff       	call   81000513 <sys_call>
81000581:	83 c4 04             	add    $0x4,%esp
81000584:	eb 01                	jmp    81000587 <msleep+0x28>
    if (ms <= 0) return;
81000586:	90                   	nop

}
81000587:	c9                   	leave  
81000588:	c3                   	ret    

81000589 <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
81000589:	55                   	push   %ebp
8100058a:	89 e5                	mov    %esp,%ebp
8100058c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
8100058f:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
81000596:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000599:	50                   	push   %eax
8100059a:	e8 74 ff ff ff       	call   81000513 <sys_call>
8100059f:	83 c4 04             	add    $0x4,%esp
}
810005a2:	c9                   	leave  
810005a3:	c3                   	ret    

810005a4 <print_msg>:

void print_msg(const char *fmt, int arg) {
810005a4:	55                   	push   %ebp
810005a5:	89 e5                	mov    %esp,%ebp
810005a7:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
810005aa:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
810005b1:	8b 45 08             	mov    0x8(%ebp),%eax
810005b4:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
810005b7:	8b 45 0c             	mov    0xc(%ebp),%eax
810005ba:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
810005bd:	8d 45 ec             	lea    -0x14(%ebp),%eax
810005c0:	50                   	push   %eax
810005c1:	e8 4d ff ff ff       	call   81000513 <sys_call>
810005c6:	83 c4 04             	add    $0x4,%esp
}
810005c9:	90                   	nop
810005ca:	c9                   	leave  
810005cb:	c3                   	ret    

810005cc <fork>:

int fork (void) {
810005cc:	55                   	push   %ebp
810005cd:	89 e5                	mov    %esp,%ebp
810005cf:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
810005d2:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
810005d9:	8d 45 ec             	lea    -0x14(%ebp),%eax
810005dc:	50                   	push   %eax
810005dd:	e8 31 ff ff ff       	call   81000513 <sys_call>
810005e2:	83 c4 04             	add    $0x4,%esp
}
810005e5:	c9                   	leave  
810005e6:	c3                   	ret    

810005e7 <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
810005e7:	55                   	push   %ebp
810005e8:	89 e5                	mov    %esp,%ebp
810005ea:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
810005ed:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
810005f4:	8b 45 08             	mov    0x8(%ebp),%eax
810005f7:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
810005fa:	8b 45 0c             	mov    0xc(%ebp),%eax
810005fd:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
81000600:	8b 45 10             	mov    0x10(%ebp),%eax
81000603:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
81000606:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000609:	50                   	push   %eax
8100060a:	e8 04 ff ff ff       	call   81000513 <sys_call>
8100060f:	83 c4 04             	add    $0x4,%esp
}
81000612:	c9                   	leave  
81000613:	c3                   	ret    

81000614 <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
81000614:	55                   	push   %ebp
81000615:	89 e5                	mov    %esp,%ebp
81000617:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
8100061a:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
81000621:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000624:	50                   	push   %eax
81000625:	e8 e9 fe ff ff       	call   81000513 <sys_call>
8100062a:	83 c4 04             	add    $0x4,%esp
}
8100062d:	c9                   	leave  
8100062e:	c3                   	ret    

8100062f <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
8100062f:	55                   	push   %ebp
81000630:	89 e5                	mov    %esp,%ebp
81000632:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
81000635:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
8100063c:	8b 45 08             	mov    0x8(%ebp),%eax
8100063f:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
81000642:	8b 45 0c             	mov    0xc(%ebp),%eax
81000645:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000648:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100064b:	50                   	push   %eax
8100064c:	e8 c2 fe ff ff       	call   81000513 <sys_call>
81000651:	83 c4 04             	add    $0x4,%esp
}
81000654:	c9                   	leave  
81000655:	c3                   	ret    

81000656 <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
81000656:	55                   	push   %ebp
81000657:	89 e5                	mov    %esp,%ebp
81000659:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
8100065c:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
81000663:	8b 45 08             	mov    0x8(%ebp),%eax
81000666:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000669:	8b 45 0c             	mov    0xc(%ebp),%eax
8100066c:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
8100066f:	8b 45 10             	mov    0x10(%ebp),%eax
81000672:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000675:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000678:	50                   	push   %eax
81000679:	e8 95 fe ff ff       	call   81000513 <sys_call>
8100067e:	83 c4 04             	add    $0x4,%esp
}
81000681:	c9                   	leave  
81000682:	c3                   	ret    

81000683 <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
81000683:	55                   	push   %ebp
81000684:	89 e5                	mov    %esp,%ebp
81000686:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
81000689:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
81000690:	8b 45 08             	mov    0x8(%ebp),%eax
81000693:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000696:	8b 45 0c             	mov    0xc(%ebp),%eax
81000699:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
8100069c:	8b 45 10             	mov    0x10(%ebp),%eax
8100069f:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
810006a2:	8d 45 ec             	lea    -0x14(%ebp),%eax
810006a5:	50                   	push   %eax
810006a6:	e8 68 fe ff ff       	call   81000513 <sys_call>
810006ab:	83 c4 04             	add    $0x4,%esp
}
810006ae:	c9                   	leave  
810006af:	c3                   	ret    

810006b0 <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
810006b0:	55                   	push   %ebp
810006b1:	89 e5                	mov    %esp,%ebp
810006b3:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
810006b6:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
810006bd:	8b 45 08             	mov    0x8(%ebp),%eax
810006c0:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
810006c3:	8d 45 ec             	lea    -0x14(%ebp),%eax
810006c6:	50                   	push   %eax
810006c7:	e8 47 fe ff ff       	call   81000513 <sys_call>
810006cc:	83 c4 04             	add    $0x4,%esp
}
810006cf:	c9                   	leave  
810006d0:	c3                   	ret    

810006d1 <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
810006d1:	55                   	push   %ebp
810006d2:	89 e5                	mov    %esp,%ebp
810006d4:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
810006d7:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
810006de:	8b 45 08             	mov    0x8(%ebp),%eax
810006e1:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
810006e4:	8b 45 0c             	mov    0xc(%ebp),%eax
810006e7:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
810006ea:	8b 45 10             	mov    0x10(%ebp),%eax
810006ed:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
810006f0:	8d 45 ec             	lea    -0x14(%ebp),%eax
810006f3:	50                   	push   %eax
810006f4:	e8 1a fe ff ff       	call   81000513 <sys_call>
810006f9:	83 c4 04             	add    $0x4,%esp
}
810006fc:	c9                   	leave  
810006fd:	c3                   	ret    

810006fe <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
810006fe:	55                   	push   %ebp
810006ff:	89 e5                	mov    %esp,%ebp
81000701:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
81000704:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
8100070b:	8b 45 08             	mov    0x8(%ebp),%eax
8100070e:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000711:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000714:	50                   	push   %eax
81000715:	e8 f9 fd ff ff       	call   81000513 <sys_call>
8100071a:	83 c4 04             	add    $0x4,%esp
}
8100071d:	c9                   	leave  
8100071e:	c3                   	ret    

8100071f <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
8100071f:	55                   	push   %ebp
81000720:	89 e5                	mov    %esp,%ebp
81000722:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
81000725:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
8100072c:	8b 45 08             	mov    0x8(%ebp),%eax
8100072f:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
81000732:	8b 45 0c             	mov    0xc(%ebp),%eax
81000735:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000738:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100073b:	50                   	push   %eax
8100073c:	e8 d2 fd ff ff       	call   81000513 <sys_call>
81000741:	83 c4 04             	add    $0x4,%esp
}
81000744:	c9                   	leave  
81000745:	c3                   	ret    

81000746 <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
81000746:	55                   	push   %ebp
81000747:	89 e5                	mov    %esp,%ebp
81000749:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
8100074c:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)incr;
81000753:	8b 45 08             	mov    0x8(%ebp),%eax
81000756:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
81000759:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100075c:	50                   	push   %eax
8100075d:	e8 b1 fd ff ff       	call   81000513 <sys_call>
81000762:	83 c4 04             	add    $0x4,%esp
}
81000765:	c9                   	leave  
81000766:	c3                   	ret    

81000767 <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
81000767:	55                   	push   %ebp
81000768:	89 e5                	mov    %esp,%ebp
8100076a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
8100076d:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0 = file;
81000774:	8b 45 08             	mov    0x8(%ebp),%eax
81000777:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8100077a:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100077d:	50                   	push   %eax
8100077e:	e8 90 fd ff ff       	call   81000513 <sys_call>
81000783:	83 c4 04             	add    $0x4,%esp
}
81000786:	c9                   	leave  
81000787:	c3                   	ret    

81000788 <_exit>:
/**
 * @brief 进程退出的系统调用
 * 
 * @param status 
 */
void _exit(int status) {
81000788:	55                   	push   %ebp
81000789:	89 e5                	mov    %esp,%ebp
8100078b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
8100078e:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = status;
81000795:	8b 45 08             	mov    0x8(%ebp),%eax
81000798:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    sys_call(&args);
8100079b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100079e:	50                   	push   %eax
8100079f:	e8 6f fd ff ff       	call   81000513 <sys_call>
810007a4:	83 c4 04             	add    $0x4,%esp
}
810007a7:	90                   	nop
810007a8:	c9                   	leave  
810007a9:	c3                   	ret    

810007aa <wait>:
 * @brief 回收进程资源
 * 
 * @param status 
 * @return int 
 */
int wait(int *status) {
810007aa:	55                   	push   %ebp
810007ab:	89 e5                	mov    %esp,%ebp
810007ad:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
810007b0:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
810007b7:	8b 45 08             	mov    0x8(%ebp),%eax
810007ba:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    return sys_call(&args);
810007bd:	8d 45 ec             	lea    -0x14(%ebp),%eax
810007c0:	50                   	push   %eax
810007c1:	e8 4d fd ff ff       	call   81000513 <sys_call>
810007c6:	83 c4 04             	add    $0x4,%esp
810007c9:	c9                   	leave  
810007ca:	c3                   	ret    

810007cb <atoi>:
810007cb:	55                   	push   %ebp
810007cc:	89 e5                	mov    %esp,%ebp
810007ce:	83 ec 08             	sub    $0x8,%esp
810007d1:	83 ec 04             	sub    $0x4,%esp
810007d4:	6a 0a                	push   $0xa
810007d6:	6a 00                	push   $0x0
810007d8:	ff 75 08             	push   0x8(%ebp)
810007db:	e8 e6 3f 00 00       	call   810047c6 <strtol>
810007e0:	83 c4 10             	add    $0x10,%esp
810007e3:	c9                   	leave  
810007e4:	c3                   	ret    

810007e5 <_atoi_r>:
810007e5:	55                   	push   %ebp
810007e6:	89 e5                	mov    %esp,%ebp
810007e8:	83 ec 08             	sub    $0x8,%esp
810007eb:	6a 0a                	push   $0xa
810007ed:	6a 00                	push   $0x0
810007ef:	ff 75 0c             	push   0xc(%ebp)
810007f2:	ff 75 08             	push   0x8(%ebp)
810007f5:	e8 82 3f 00 00       	call   8100477c <_strtol_r>
810007fa:	83 c4 10             	add    $0x10,%esp
810007fd:	c9                   	leave  
810007fe:	c3                   	ret    

810007ff <exit>:
810007ff:	55                   	push   %ebp
81000800:	89 e5                	mov    %esp,%ebp
81000802:	83 ec 08             	sub    $0x8,%esp
81000805:	83 ec 08             	sub    $0x8,%esp
81000808:	6a 00                	push   $0x0
8100080a:	ff 75 08             	push   0x8(%ebp)
8100080d:	e8 b1 42 00 00       	call   81004ac3 <__call_exitprocs>
81000812:	83 c4 10             	add    $0x10,%esp
81000815:	a1 d4 6a 00 81       	mov    0x81006ad4,%eax
8100081a:	8b 40 3c             	mov    0x3c(%eax),%eax
8100081d:	85 c0                	test   %eax,%eax
8100081f:	74 17                	je     81000838 <exit+0x39>
81000821:	a1 d4 6a 00 81       	mov    0x81006ad4,%eax
81000826:	8b 40 3c             	mov    0x3c(%eax),%eax
81000829:	8b 15 d4 6a 00 81    	mov    0x81006ad4,%edx
8100082f:	83 ec 0c             	sub    $0xc,%esp
81000832:	52                   	push   %edx
81000833:	ff d0                	call   *%eax
81000835:	83 c4 10             	add    $0x10,%esp
81000838:	83 ec 0c             	sub    $0xc,%esp
8100083b:	ff 75 08             	push   0x8(%ebp)
8100083e:	e8 45 ff ff ff       	call   81000788 <_exit>

81000843 <__sflush_r>:
81000843:	55                   	push   %ebp
81000844:	89 e5                	mov    %esp,%ebp
81000846:	57                   	push   %edi
81000847:	56                   	push   %esi
81000848:	53                   	push   %ebx
81000849:	83 ec 1c             	sub    $0x1c,%esp
8100084c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100084f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000853:	66 89 45 de          	mov    %ax,-0x22(%ebp)
81000857:	0f bf 45 de          	movswl -0x22(%ebp),%eax
8100085b:	83 e0 08             	and    $0x8,%eax
8100085e:	85 c0                	test   %eax,%eax
81000860:	0f 85 93 01 00 00    	jne    810009f9 <__sflush_r+0x1b6>
81000866:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100086a:	80 cc 08             	or     $0x8,%ah
8100086d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000871:	8b 43 04             	mov    0x4(%ebx),%eax
81000874:	85 c0                	test   %eax,%eax
81000876:	7f 0b                	jg     81000883 <__sflush_r+0x40>
81000878:	8b 43 3c             	mov    0x3c(%ebx),%eax
8100087b:	85 c0                	test   %eax,%eax
8100087d:	0f 8e 6f 01 00 00    	jle    810009f2 <__sflush_r+0x1af>
81000883:	8b 43 28             	mov    0x28(%ebx),%eax
81000886:	85 c0                	test   %eax,%eax
81000888:	0f 84 64 01 00 00    	je     810009f2 <__sflush_r+0x1af>
8100088e:	8b 45 08             	mov    0x8(%ebp),%eax
81000891:	8b 00                	mov    (%eax),%eax
81000893:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000896:	8b 45 08             	mov    0x8(%ebp),%eax
81000899:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100089f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810008a3:	98                   	cwtl   
810008a4:	25 00 10 00 00       	and    $0x1000,%eax
810008a9:	85 c0                	test   %eax,%eax
810008ab:	74 08                	je     810008b5 <__sflush_r+0x72>
810008ad:	8b 43 50             	mov    0x50(%ebx),%eax
810008b0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810008b3:	eb 64                	jmp    81000919 <__sflush_r+0xd6>
810008b5:	8b 43 28             	mov    0x28(%ebx),%eax
810008b8:	8b 53 1c             	mov    0x1c(%ebx),%edx
810008bb:	6a 01                	push   $0x1
810008bd:	6a 00                	push   $0x0
810008bf:	52                   	push   %edx
810008c0:	ff 75 08             	push   0x8(%ebp)
810008c3:	ff d0                	call   *%eax
810008c5:	83 c4 10             	add    $0x10,%esp
810008c8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810008cb:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810008cf:	75 48                	jne    81000919 <__sflush_r+0xd6>
810008d1:	8b 45 08             	mov    0x8(%ebp),%eax
810008d4:	8b 00                	mov    (%eax),%eax
810008d6:	85 c0                	test   %eax,%eax
810008d8:	74 3f                	je     81000919 <__sflush_r+0xd6>
810008da:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
810008e1:	8b 45 08             	mov    0x8(%ebp),%eax
810008e4:	8b 00                	mov    (%eax),%eax
810008e6:	83 f8 1d             	cmp    $0x1d,%eax
810008e9:	74 0a                	je     810008f5 <__sflush_r+0xb2>
810008eb:	8b 45 08             	mov    0x8(%ebp),%eax
810008ee:	8b 00                	mov    (%eax),%eax
810008f0:	83 f8 16             	cmp    $0x16,%eax
810008f3:	75 11                	jne    81000906 <__sflush_r+0xc3>
810008f5:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
810008fc:	8b 45 08             	mov    0x8(%ebp),%eax
810008ff:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000902:	89 10                	mov    %edx,(%eax)
81000904:	eb 0b                	jmp    81000911 <__sflush_r+0xce>
81000906:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100090a:	83 c8 40             	or     $0x40,%eax
8100090d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000911:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000914:	e9 48 01 00 00       	jmp    81000a61 <__sflush_r+0x21e>
81000919:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100091d:	98                   	cwtl   
8100091e:	83 e0 04             	and    $0x4,%eax
81000921:	85 c0                	test   %eax,%eax
81000923:	74 13                	je     81000938 <__sflush_r+0xf5>
81000925:	8b 43 04             	mov    0x4(%ebx),%eax
81000928:	29 45 e4             	sub    %eax,-0x1c(%ebp)
8100092b:	8b 43 30             	mov    0x30(%ebx),%eax
8100092e:	85 c0                	test   %eax,%eax
81000930:	74 06                	je     81000938 <__sflush_r+0xf5>
81000932:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000935:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000938:	8b 43 28             	mov    0x28(%ebx),%eax
8100093b:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100093e:	6a 00                	push   $0x0
81000940:	ff 75 e4             	push   -0x1c(%ebp)
81000943:	52                   	push   %edx
81000944:	ff 75 08             	push   0x8(%ebp)
81000947:	ff d0                	call   *%eax
81000949:	83 c4 10             	add    $0x10,%esp
8100094c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100094f:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000953:	75 1d                	jne    81000972 <__sflush_r+0x12f>
81000955:	8b 45 08             	mov    0x8(%ebp),%eax
81000958:	8b 00                	mov    (%eax),%eax
8100095a:	85 c0                	test   %eax,%eax
8100095c:	74 14                	je     81000972 <__sflush_r+0x12f>
8100095e:	8b 45 08             	mov    0x8(%ebp),%eax
81000961:	8b 00                	mov    (%eax),%eax
81000963:	83 f8 1d             	cmp    $0x1d,%eax
81000966:	74 0a                	je     81000972 <__sflush_r+0x12f>
81000968:	8b 45 08             	mov    0x8(%ebp),%eax
8100096b:	8b 00                	mov    (%eax),%eax
8100096d:	83 f8 16             	cmp    $0x16,%eax
81000970:	75 6e                	jne    810009e0 <__sflush_r+0x19d>
81000972:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000976:	80 e4 f7             	and    $0xf7,%ah
81000979:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100097d:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81000984:	8b 43 10             	mov    0x10(%ebx),%eax
81000987:	89 03                	mov    %eax,(%ebx)
81000989:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100098d:	98                   	cwtl   
8100098e:	25 00 10 00 00       	and    $0x1000,%eax
81000993:	85 c0                	test   %eax,%eax
81000995:	74 15                	je     810009ac <__sflush_r+0x169>
81000997:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8100099b:	75 09                	jne    810009a6 <__sflush_r+0x163>
8100099d:	8b 45 08             	mov    0x8(%ebp),%eax
810009a0:	8b 00                	mov    (%eax),%eax
810009a2:	85 c0                	test   %eax,%eax
810009a4:	75 06                	jne    810009ac <__sflush_r+0x169>
810009a6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810009a9:	89 43 50             	mov    %eax,0x50(%ebx)
810009ac:	8b 45 08             	mov    0x8(%ebp),%eax
810009af:	8b 55 d8             	mov    -0x28(%ebp),%edx
810009b2:	89 10                	mov    %edx,(%eax)
810009b4:	8b 43 30             	mov    0x30(%ebx),%eax
810009b7:	85 c0                	test   %eax,%eax
810009b9:	74 37                	je     810009f2 <__sflush_r+0x1af>
810009bb:	8b 53 30             	mov    0x30(%ebx),%edx
810009be:	8d 43 40             	lea    0x40(%ebx),%eax
810009c1:	39 c2                	cmp    %eax,%edx
810009c3:	74 12                	je     810009d7 <__sflush_r+0x194>
810009c5:	8b 43 30             	mov    0x30(%ebx),%eax
810009c8:	83 ec 08             	sub    $0x8,%esp
810009cb:	50                   	push   %eax
810009cc:	ff 75 08             	push   0x8(%ebp)
810009cf:	e8 fa 06 00 00       	call   810010ce <_free_r>
810009d4:	83 c4 10             	add    $0x10,%esp
810009d7:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810009de:	eb 12                	jmp    810009f2 <__sflush_r+0x1af>
810009e0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810009e4:	83 c8 40             	or     $0x40,%eax
810009e7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810009eb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810009f0:	eb 6f                	jmp    81000a61 <__sflush_r+0x21e>
810009f2:	b8 00 00 00 00       	mov    $0x0,%eax
810009f7:	eb 68                	jmp    81000a61 <__sflush_r+0x21e>
810009f9:	8b 73 10             	mov    0x10(%ebx),%esi
810009fc:	85 f6                	test   %esi,%esi
810009fe:	75 07                	jne    81000a07 <__sflush_r+0x1c4>
81000a00:	b8 00 00 00 00       	mov    $0x0,%eax
81000a05:	eb 5a                	jmp    81000a61 <__sflush_r+0x21e>
81000a07:	8b 03                	mov    (%ebx),%eax
81000a09:	29 f0                	sub    %esi,%eax
81000a0b:	89 c7                	mov    %eax,%edi
81000a0d:	89 33                	mov    %esi,(%ebx)
81000a0f:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000a13:	83 e0 03             	and    $0x3,%eax
81000a16:	85 c0                	test   %eax,%eax
81000a18:	75 05                	jne    81000a1f <__sflush_r+0x1dc>
81000a1a:	8b 43 14             	mov    0x14(%ebx),%eax
81000a1d:	eb 05                	jmp    81000a24 <__sflush_r+0x1e1>
81000a1f:	b8 00 00 00 00       	mov    $0x0,%eax
81000a24:	89 43 08             	mov    %eax,0x8(%ebx)
81000a27:	eb 2f                	jmp    81000a58 <__sflush_r+0x215>
81000a29:	8b 43 24             	mov    0x24(%ebx),%eax
81000a2c:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000a2f:	57                   	push   %edi
81000a30:	56                   	push   %esi
81000a31:	52                   	push   %edx
81000a32:	ff 75 08             	push   0x8(%ebp)
81000a35:	ff d0                	call   *%eax
81000a37:	83 c4 10             	add    $0x10,%esp
81000a3a:	85 c0                	test   %eax,%eax
81000a3c:	7f 12                	jg     81000a50 <__sflush_r+0x20d>
81000a3e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a42:	83 c8 40             	or     $0x40,%eax
81000a45:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000a49:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000a4e:	eb 11                	jmp    81000a61 <__sflush_r+0x21e>
81000a50:	89 c1                	mov    %eax,%ecx
81000a52:	89 c8                	mov    %ecx,%eax
81000a54:	01 c6                	add    %eax,%esi
81000a56:	29 cf                	sub    %ecx,%edi
81000a58:	85 ff                	test   %edi,%edi
81000a5a:	7f cd                	jg     81000a29 <__sflush_r+0x1e6>
81000a5c:	b8 00 00 00 00       	mov    $0x0,%eax
81000a61:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000a64:	5b                   	pop    %ebx
81000a65:	5e                   	pop    %esi
81000a66:	5f                   	pop    %edi
81000a67:	5d                   	pop    %ebp
81000a68:	c3                   	ret    

81000a69 <_fflush_r>:
81000a69:	55                   	push   %ebp
81000a6a:	89 e5                	mov    %esp,%ebp
81000a6c:	53                   	push   %ebx
81000a6d:	83 ec 14             	sub    $0x14,%esp
81000a70:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000a73:	8b 45 08             	mov    0x8(%ebp),%eax
81000a76:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000a79:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000a7d:	74 18                	je     81000a97 <_fflush_r+0x2e>
81000a7f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000a82:	8b 40 38             	mov    0x38(%eax),%eax
81000a85:	85 c0                	test   %eax,%eax
81000a87:	75 0e                	jne    81000a97 <_fflush_r+0x2e>
81000a89:	83 ec 0c             	sub    $0xc,%esp
81000a8c:	ff 75 f4             	push   -0xc(%ebp)
81000a8f:	e8 d8 04 00 00       	call   81000f6c <__sinit>
81000a94:	83 c4 10             	add    $0x10,%esp
81000a97:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a9b:	66 85 c0             	test   %ax,%ax
81000a9e:	75 07                	jne    81000aa7 <_fflush_r+0x3e>
81000aa0:	b8 00 00 00 00       	mov    $0x0,%eax
81000aa5:	eb 15                	jmp    81000abc <_fflush_r+0x53>
81000aa7:	83 ec 08             	sub    $0x8,%esp
81000aaa:	53                   	push   %ebx
81000aab:	ff 75 08             	push   0x8(%ebp)
81000aae:	e8 90 fd ff ff       	call   81000843 <__sflush_r>
81000ab3:	83 c4 10             	add    $0x10,%esp
81000ab6:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000ab9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000abc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000abf:	c9                   	leave  
81000ac0:	c3                   	ret    

81000ac1 <fflush>:
81000ac1:	55                   	push   %ebp
81000ac2:	89 e5                	mov    %esp,%ebp
81000ac4:	83 ec 08             	sub    $0x8,%esp
81000ac7:	8b 55 08             	mov    0x8(%ebp),%edx
81000aca:	85 d2                	test   %edx,%edx
81000acc:	75 18                	jne    81000ae6 <fflush+0x25>
81000ace:	a1 d4 6a 00 81       	mov    0x81006ad4,%eax
81000ad3:	83 ec 08             	sub    $0x8,%esp
81000ad6:	68 69 0a 00 81       	push   $0x81000a69
81000adb:	50                   	push   %eax
81000adc:	e8 91 0b 00 00       	call   81001672 <_fwalk_reent>
81000ae1:	83 c4 10             	add    $0x10,%esp
81000ae4:	eb 12                	jmp    81000af8 <fflush+0x37>
81000ae6:	a1 84 72 00 81       	mov    0x81007284,%eax
81000aeb:	83 ec 08             	sub    $0x8,%esp
81000aee:	52                   	push   %edx
81000aef:	50                   	push   %eax
81000af0:	e8 74 ff ff ff       	call   81000a69 <_fflush_r>
81000af5:	83 c4 10             	add    $0x10,%esp
81000af8:	c9                   	leave  
81000af9:	c3                   	ret    

81000afa <_fgets_r>:
81000afa:	55                   	push   %ebp
81000afb:	89 e5                	mov    %esp,%ebp
81000afd:	83 ec 28             	sub    $0x28,%esp
81000b00:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
81000b04:	7f 0a                	jg     81000b10 <_fgets_r+0x16>
81000b06:	b8 00 00 00 00       	mov    $0x0,%eax
81000b0b:	e9 46 01 00 00       	jmp    81000c56 <_fgets_r+0x15c>
81000b10:	8b 45 0c             	mov    0xc(%ebp),%eax
81000b13:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000b16:	8b 45 08             	mov    0x8(%ebp),%eax
81000b19:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000b1c:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000b20:	74 18                	je     81000b3a <_fgets_r+0x40>
81000b22:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000b25:	8b 40 38             	mov    0x38(%eax),%eax
81000b28:	85 c0                	test   %eax,%eax
81000b2a:	75 0e                	jne    81000b3a <_fgets_r+0x40>
81000b2c:	83 ec 0c             	sub    $0xc,%esp
81000b2f:	ff 75 ec             	push   -0x14(%ebp)
81000b32:	e8 35 04 00 00       	call   81000f6c <__sinit>
81000b37:	83 c4 10             	add    $0x10,%esp
81000b3a:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
81000b3e:	8b 45 14             	mov    0x14(%ebp),%eax
81000b41:	8b 40 04             	mov    0x4(%eax),%eax
81000b44:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000b47:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000b4b:	75 34                	jne    81000b81 <_fgets_r+0x87>
81000b4d:	83 ec 08             	sub    $0x8,%esp
81000b50:	ff 75 14             	push   0x14(%ebp)
81000b53:	ff 75 08             	push   0x8(%ebp)
81000b56:	e8 a9 33 00 00       	call   81003f04 <__srefill_r>
81000b5b:	83 c4 10             	add    $0x10,%esp
81000b5e:	85 c0                	test   %eax,%eax
81000b60:	74 16                	je     81000b78 <_fgets_r+0x7e>
81000b62:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000b65:	3b 45 0c             	cmp    0xc(%ebp),%eax
81000b68:	0f 85 de 00 00 00    	jne    81000c4c <_fgets_r+0x152>
81000b6e:	b8 00 00 00 00       	mov    $0x0,%eax
81000b73:	e9 de 00 00 00       	jmp    81000c56 <_fgets_r+0x15c>
81000b78:	8b 45 14             	mov    0x14(%ebp),%eax
81000b7b:	8b 40 04             	mov    0x4(%eax),%eax
81000b7e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000b81:	8b 45 14             	mov    0x14(%ebp),%eax
81000b84:	8b 00                	mov    (%eax),%eax
81000b86:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000b89:	8b 45 10             	mov    0x10(%ebp),%eax
81000b8c:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000b8f:	76 06                	jbe    81000b97 <_fgets_r+0x9d>
81000b91:	8b 45 10             	mov    0x10(%ebp),%eax
81000b94:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000b97:	83 ec 04             	sub    $0x4,%esp
81000b9a:	ff 75 f4             	push   -0xc(%ebp)
81000b9d:	6a 0a                	push   $0xa
81000b9f:	ff 75 e8             	push   -0x18(%ebp)
81000ba2:	e8 c9 24 00 00       	call   81003070 <memchr>
81000ba7:	83 c4 10             	add    $0x10,%esp
81000baa:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000bad:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000bb1:	74 4a                	je     81000bfd <_fgets_r+0x103>
81000bb3:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81000bb7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000bba:	2b 45 e8             	sub    -0x18(%ebp),%eax
81000bbd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000bc0:	8b 45 14             	mov    0x14(%ebp),%eax
81000bc3:	8b 40 04             	mov    0x4(%eax),%eax
81000bc6:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000bc9:	89 c2                	mov    %eax,%edx
81000bcb:	8b 45 14             	mov    0x14(%ebp),%eax
81000bce:	89 50 04             	mov    %edx,0x4(%eax)
81000bd1:	8b 45 14             	mov    0x14(%ebp),%eax
81000bd4:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81000bd7:	89 10                	mov    %edx,(%eax)
81000bd9:	83 ec 04             	sub    $0x4,%esp
81000bdc:	ff 75 f4             	push   -0xc(%ebp)
81000bdf:	ff 75 e8             	push   -0x18(%ebp)
81000be2:	ff 75 f0             	push   -0x10(%ebp)
81000be5:	e8 6e 25 00 00       	call   81003158 <memcpy>
81000bea:	83 c4 10             	add    $0x10,%esp
81000bed:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000bf0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000bf3:	01 d0                	add    %edx,%eax
81000bf5:	c6 00 00             	movb   $0x0,(%eax)
81000bf8:	8b 45 0c             	mov    0xc(%ebp),%eax
81000bfb:	eb 59                	jmp    81000c56 <_fgets_r+0x15c>
81000bfd:	8b 45 14             	mov    0x14(%ebp),%eax
81000c00:	8b 40 04             	mov    0x4(%eax),%eax
81000c03:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000c06:	89 c2                	mov    %eax,%edx
81000c08:	8b 45 14             	mov    0x14(%ebp),%eax
81000c0b:	89 50 04             	mov    %edx,0x4(%eax)
81000c0e:	8b 45 14             	mov    0x14(%ebp),%eax
81000c11:	8b 10                	mov    (%eax),%edx
81000c13:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000c16:	01 c2                	add    %eax,%edx
81000c18:	8b 45 14             	mov    0x14(%ebp),%eax
81000c1b:	89 10                	mov    %edx,(%eax)
81000c1d:	83 ec 04             	sub    $0x4,%esp
81000c20:	ff 75 f4             	push   -0xc(%ebp)
81000c23:	ff 75 e8             	push   -0x18(%ebp)
81000c26:	ff 75 f0             	push   -0x10(%ebp)
81000c29:	e8 2a 25 00 00       	call   81003158 <memcpy>
81000c2e:	83 c4 10             	add    $0x10,%esp
81000c31:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000c34:	01 45 f0             	add    %eax,-0x10(%ebp)
81000c37:	8b 45 10             	mov    0x10(%ebp),%eax
81000c3a:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000c3d:	89 45 10             	mov    %eax,0x10(%ebp)
81000c40:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81000c44:	0f 85 f4 fe ff ff    	jne    81000b3e <_fgets_r+0x44>
81000c4a:	eb 01                	jmp    81000c4d <_fgets_r+0x153>
81000c4c:	90                   	nop
81000c4d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000c50:	c6 00 00             	movb   $0x0,(%eax)
81000c53:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c56:	c9                   	leave  
81000c57:	c3                   	ret    

81000c58 <fgets>:
81000c58:	55                   	push   %ebp
81000c59:	89 e5                	mov    %esp,%ebp
81000c5b:	83 ec 08             	sub    $0x8,%esp
81000c5e:	a1 84 72 00 81       	mov    0x81007284,%eax
81000c63:	ff 75 10             	push   0x10(%ebp)
81000c66:	ff 75 0c             	push   0xc(%ebp)
81000c69:	ff 75 08             	push   0x8(%ebp)
81000c6c:	50                   	push   %eax
81000c6d:	e8 88 fe ff ff       	call   81000afa <_fgets_r>
81000c72:	83 c4 10             	add    $0x10,%esp
81000c75:	c9                   	leave  
81000c76:	c3                   	ret    

81000c77 <std>:
81000c77:	55                   	push   %ebp
81000c78:	89 e5                	mov    %esp,%ebp
81000c7a:	83 ec 08             	sub    $0x8,%esp
81000c7d:	8b 45 08             	mov    0x8(%ebp),%eax
81000c80:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000c86:	8b 45 08             	mov    0x8(%ebp),%eax
81000c89:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000c90:	8b 45 08             	mov    0x8(%ebp),%eax
81000c93:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000c9a:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c9d:	89 c2                	mov    %eax,%edx
81000c9f:	8b 45 08             	mov    0x8(%ebp),%eax
81000ca2:	66 89 50 0c          	mov    %dx,0xc(%eax)
81000ca6:	8b 45 08             	mov    0x8(%ebp),%eax
81000ca9:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000cb0:	8b 45 10             	mov    0x10(%ebp),%eax
81000cb3:	89 c2                	mov    %eax,%edx
81000cb5:	8b 45 08             	mov    0x8(%ebp),%eax
81000cb8:	66 89 50 0e          	mov    %dx,0xe(%eax)
81000cbc:	8b 45 08             	mov    0x8(%ebp),%eax
81000cbf:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000cc6:	8b 45 08             	mov    0x8(%ebp),%eax
81000cc9:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000cd0:	8b 45 08             	mov    0x8(%ebp),%eax
81000cd3:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000cda:	8b 45 08             	mov    0x8(%ebp),%eax
81000cdd:	83 c0 5c             	add    $0x5c,%eax
81000ce0:	83 ec 04             	sub    $0x4,%esp
81000ce3:	6a 08                	push   $0x8
81000ce5:	6a 00                	push   $0x0
81000ce7:	50                   	push   %eax
81000ce8:	e8 b3 24 00 00       	call   810031a0 <memset>
81000ced:	83 c4 10             	add    $0x10,%esp
81000cf0:	8b 45 08             	mov    0x8(%ebp),%eax
81000cf3:	8b 55 08             	mov    0x8(%ebp),%edx
81000cf6:	89 50 1c             	mov    %edx,0x1c(%eax)
81000cf9:	8b 45 08             	mov    0x8(%ebp),%eax
81000cfc:	c7 40 20 45 41 00 81 	movl   $0x81004145,0x20(%eax)
81000d03:	8b 45 08             	mov    0x8(%ebp),%eax
81000d06:	c7 40 24 93 41 00 81 	movl   $0x81004193,0x24(%eax)
81000d0d:	8b 45 08             	mov    0x8(%ebp),%eax
81000d10:	c7 40 28 ee 41 00 81 	movl   $0x810041ee,0x28(%eax)
81000d17:	8b 45 08             	mov    0x8(%ebp),%eax
81000d1a:	c7 40 2c 38 42 00 81 	movl   $0x81004238,0x2c(%eax)
81000d21:	90                   	nop
81000d22:	c9                   	leave  
81000d23:	c3                   	ret    

81000d24 <stdin_init>:
81000d24:	55                   	push   %ebp
81000d25:	89 e5                	mov    %esp,%ebp
81000d27:	83 ec 08             	sub    $0x8,%esp
81000d2a:	83 ec 04             	sub    $0x4,%esp
81000d2d:	6a 00                	push   $0x0
81000d2f:	6a 04                	push   $0x4
81000d31:	ff 75 08             	push   0x8(%ebp)
81000d34:	e8 3e ff ff ff       	call   81000c77 <std>
81000d39:	83 c4 10             	add    $0x10,%esp
81000d3c:	90                   	nop
81000d3d:	c9                   	leave  
81000d3e:	c3                   	ret    

81000d3f <stdout_init>:
81000d3f:	55                   	push   %ebp
81000d40:	89 e5                	mov    %esp,%ebp
81000d42:	83 ec 08             	sub    $0x8,%esp
81000d45:	83 ec 04             	sub    $0x4,%esp
81000d48:	6a 01                	push   $0x1
81000d4a:	6a 09                	push   $0x9
81000d4c:	ff 75 08             	push   0x8(%ebp)
81000d4f:	e8 23 ff ff ff       	call   81000c77 <std>
81000d54:	83 c4 10             	add    $0x10,%esp
81000d57:	90                   	nop
81000d58:	c9                   	leave  
81000d59:	c3                   	ret    

81000d5a <stderr_init>:
81000d5a:	55                   	push   %ebp
81000d5b:	89 e5                	mov    %esp,%ebp
81000d5d:	83 ec 08             	sub    $0x8,%esp
81000d60:	83 ec 04             	sub    $0x4,%esp
81000d63:	6a 02                	push   $0x2
81000d65:	6a 12                	push   $0x12
81000d67:	ff 75 08             	push   0x8(%ebp)
81000d6a:	e8 08 ff ff ff       	call   81000c77 <std>
81000d6f:	83 c4 10             	add    $0x10,%esp
81000d72:	90                   	nop
81000d73:	c9                   	leave  
81000d74:	c3                   	ret    

81000d75 <__sfmoreglue>:
81000d75:	55                   	push   %ebp
81000d76:	89 e5                	mov    %esp,%ebp
81000d78:	53                   	push   %ebx
81000d79:	83 ec 14             	sub    $0x14,%esp
81000d7c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000d7f:	8d 43 ff             	lea    -0x1(%ebx),%eax
81000d82:	6b c0 68             	imul   $0x68,%eax,%eax
81000d85:	83 c0 74             	add    $0x74,%eax
81000d88:	83 ec 08             	sub    $0x8,%esp
81000d8b:	50                   	push   %eax
81000d8c:	ff 75 08             	push   0x8(%ebp)
81000d8f:	e8 b1 1a 00 00       	call   81002845 <_malloc_r>
81000d94:	83 c4 10             	add    $0x10,%esp
81000d97:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000d9a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000d9e:	75 07                	jne    81000da7 <__sfmoreglue+0x32>
81000da0:	b8 00 00 00 00       	mov    $0x0,%eax
81000da5:	eb 38                	jmp    81000ddf <__sfmoreglue+0x6a>
81000da7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000daa:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000db0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000db3:	89 58 04             	mov    %ebx,0x4(%eax)
81000db6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000db9:	8d 50 0c             	lea    0xc(%eax),%edx
81000dbc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000dbf:	89 50 08             	mov    %edx,0x8(%eax)
81000dc2:	89 d8                	mov    %ebx,%eax
81000dc4:	6b c0 68             	imul   $0x68,%eax,%eax
81000dc7:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000dca:	83 c2 0c             	add    $0xc,%edx
81000dcd:	83 ec 04             	sub    $0x4,%esp
81000dd0:	50                   	push   %eax
81000dd1:	6a 00                	push   $0x0
81000dd3:	52                   	push   %edx
81000dd4:	e8 c7 23 00 00       	call   810031a0 <memset>
81000dd9:	83 c4 10             	add    $0x10,%esp
81000ddc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ddf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000de2:	c9                   	leave  
81000de3:	c3                   	ret    

81000de4 <__sfp>:
81000de4:	55                   	push   %ebp
81000de5:	89 e5                	mov    %esp,%ebp
81000de7:	83 ec 18             	sub    $0x18,%esp
81000dea:	e8 16 02 00 00       	call   81001005 <__sfp_lock_acquire>
81000def:	a1 d4 6a 00 81       	mov    0x81006ad4,%eax
81000df4:	8b 40 38             	mov    0x38(%eax),%eax
81000df7:	85 c0                	test   %eax,%eax
81000df9:	75 11                	jne    81000e0c <__sfp+0x28>
81000dfb:	a1 d4 6a 00 81       	mov    0x81006ad4,%eax
81000e00:	83 ec 0c             	sub    $0xc,%esp
81000e03:	50                   	push   %eax
81000e04:	e8 63 01 00 00       	call   81000f6c <__sinit>
81000e09:	83 c4 10             	add    $0x10,%esp
81000e0c:	a1 d4 6a 00 81       	mov    0x81006ad4,%eax
81000e11:	05 e0 02 00 00       	add    $0x2e0,%eax
81000e16:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000e19:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000e1c:	8b 40 08             	mov    0x8(%eax),%eax
81000e1f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000e22:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000e25:	8b 40 04             	mov    0x4(%eax),%eax
81000e28:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000e2b:	eb 10                	jmp    81000e3d <__sfp+0x59>
81000e2d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e30:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000e34:	66 85 c0             	test   %ax,%ax
81000e37:	74 58                	je     81000e91 <__sfp+0xad>
81000e39:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
81000e3d:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81000e41:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000e45:	79 e6                	jns    81000e2d <__sfp+0x49>
81000e47:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000e4a:	8b 00                	mov    (%eax),%eax
81000e4c:	85 c0                	test   %eax,%eax
81000e4e:	75 1e                	jne    81000e6e <__sfp+0x8a>
81000e50:	83 ec 08             	sub    $0x8,%esp
81000e53:	6a 04                	push   $0x4
81000e55:	ff 75 08             	push   0x8(%ebp)
81000e58:	e8 18 ff ff ff       	call   81000d75 <__sfmoreglue>
81000e5d:	83 c4 10             	add    $0x10,%esp
81000e60:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000e63:	89 02                	mov    %eax,(%edx)
81000e65:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000e68:	8b 00                	mov    (%eax),%eax
81000e6a:	85 c0                	test   %eax,%eax
81000e6c:	74 0a                	je     81000e78 <__sfp+0x94>
81000e6e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000e71:	8b 00                	mov    (%eax),%eax
81000e73:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000e76:	eb a1                	jmp    81000e19 <__sfp+0x35>
81000e78:	90                   	nop
81000e79:	e8 8d 01 00 00       	call   8100100b <__sfp_lock_release>
81000e7e:	8b 45 08             	mov    0x8(%ebp),%eax
81000e81:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000e87:	b8 00 00 00 00       	mov    $0x0,%eax
81000e8c:	e9 9e 00 00 00       	jmp    81000f2f <__sfp+0x14b>
81000e91:	90                   	nop
81000e92:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e95:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
81000e9b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e9e:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
81000ea4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ea7:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000eae:	e8 58 01 00 00       	call   8100100b <__sfp_lock_release>
81000eb3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000eb6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000ebc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ebf:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000ec6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ec9:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000ed0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ed3:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000eda:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000edd:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000ee4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ee7:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000eee:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ef1:	83 c0 5c             	add    $0x5c,%eax
81000ef4:	83 ec 04             	sub    $0x4,%esp
81000ef7:	6a 08                	push   $0x8
81000ef9:	6a 00                	push   $0x0
81000efb:	50                   	push   %eax
81000efc:	e8 9f 22 00 00       	call   810031a0 <memset>
81000f01:	83 c4 10             	add    $0x10,%esp
81000f04:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f07:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81000f0e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f11:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
81000f18:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f1b:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81000f22:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f25:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
81000f2c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f2f:	c9                   	leave  
81000f30:	c3                   	ret    

81000f31 <_cleanup_r>:
81000f31:	55                   	push   %ebp
81000f32:	89 e5                	mov    %esp,%ebp
81000f34:	83 ec 18             	sub    $0x18,%esp
81000f37:	c7 45 f4 22 4c 00 81 	movl   $0x81004c22,-0xc(%ebp)
81000f3e:	83 ec 08             	sub    $0x8,%esp
81000f41:	ff 75 f4             	push   -0xc(%ebp)
81000f44:	ff 75 08             	push   0x8(%ebp)
81000f47:	e8 26 07 00 00       	call   81001672 <_fwalk_reent>
81000f4c:	83 c4 10             	add    $0x10,%esp
81000f4f:	90                   	nop
81000f50:	c9                   	leave  
81000f51:	c3                   	ret    

81000f52 <_cleanup>:
81000f52:	55                   	push   %ebp
81000f53:	89 e5                	mov    %esp,%ebp
81000f55:	83 ec 08             	sub    $0x8,%esp
81000f58:	a1 d4 6a 00 81       	mov    0x81006ad4,%eax
81000f5d:	83 ec 0c             	sub    $0xc,%esp
81000f60:	50                   	push   %eax
81000f61:	e8 cb ff ff ff       	call   81000f31 <_cleanup_r>
81000f66:	83 c4 10             	add    $0x10,%esp
81000f69:	90                   	nop
81000f6a:	c9                   	leave  
81000f6b:	c3                   	ret    

81000f6c <__sinit>:
81000f6c:	55                   	push   %ebp
81000f6d:	89 e5                	mov    %esp,%ebp
81000f6f:	83 ec 08             	sub    $0x8,%esp
81000f72:	e8 9a 00 00 00       	call   81001011 <__sinit_lock_acquire>
81000f77:	8b 45 08             	mov    0x8(%ebp),%eax
81000f7a:	8b 40 38             	mov    0x38(%eax),%eax
81000f7d:	85 c0                	test   %eax,%eax
81000f7f:	74 07                	je     81000f88 <__sinit+0x1c>
81000f81:	e8 91 00 00 00       	call   81001017 <__sinit_lock_release>
81000f86:	eb 7b                	jmp    81001003 <__sinit+0x97>
81000f88:	8b 45 08             	mov    0x8(%ebp),%eax
81000f8b:	c7 40 3c 31 0f 00 81 	movl   $0x81000f31,0x3c(%eax)
81000f92:	8b 45 08             	mov    0x8(%ebp),%eax
81000f95:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
81000f9c:	00 00 00 
81000f9f:	8b 45 08             	mov    0x8(%ebp),%eax
81000fa2:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
81000fa9:	00 00 00 
81000fac:	8b 45 08             	mov    0x8(%ebp),%eax
81000faf:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
81000fb5:	8b 45 08             	mov    0x8(%ebp),%eax
81000fb8:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81000fbe:	8b 45 08             	mov    0x8(%ebp),%eax
81000fc1:	8b 40 04             	mov    0x4(%eax),%eax
81000fc4:	83 ec 0c             	sub    $0xc,%esp
81000fc7:	50                   	push   %eax
81000fc8:	e8 57 fd ff ff       	call   81000d24 <stdin_init>
81000fcd:	83 c4 10             	add    $0x10,%esp
81000fd0:	8b 45 08             	mov    0x8(%ebp),%eax
81000fd3:	8b 40 08             	mov    0x8(%eax),%eax
81000fd6:	83 ec 0c             	sub    $0xc,%esp
81000fd9:	50                   	push   %eax
81000fda:	e8 60 fd ff ff       	call   81000d3f <stdout_init>
81000fdf:	83 c4 10             	add    $0x10,%esp
81000fe2:	8b 45 08             	mov    0x8(%ebp),%eax
81000fe5:	8b 40 0c             	mov    0xc(%eax),%eax
81000fe8:	83 ec 0c             	sub    $0xc,%esp
81000feb:	50                   	push   %eax
81000fec:	e8 69 fd ff ff       	call   81000d5a <stderr_init>
81000ff1:	83 c4 10             	add    $0x10,%esp
81000ff4:	8b 45 08             	mov    0x8(%ebp),%eax
81000ff7:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81000ffe:	e8 14 00 00 00       	call   81001017 <__sinit_lock_release>
81001003:	c9                   	leave  
81001004:	c3                   	ret    

81001005 <__sfp_lock_acquire>:
81001005:	55                   	push   %ebp
81001006:	89 e5                	mov    %esp,%ebp
81001008:	90                   	nop
81001009:	5d                   	pop    %ebp
8100100a:	c3                   	ret    

8100100b <__sfp_lock_release>:
8100100b:	55                   	push   %ebp
8100100c:	89 e5                	mov    %esp,%ebp
8100100e:	90                   	nop
8100100f:	5d                   	pop    %ebp
81001010:	c3                   	ret    

81001011 <__sinit_lock_acquire>:
81001011:	55                   	push   %ebp
81001012:	89 e5                	mov    %esp,%ebp
81001014:	90                   	nop
81001015:	5d                   	pop    %ebp
81001016:	c3                   	ret    

81001017 <__sinit_lock_release>:
81001017:	55                   	push   %ebp
81001018:	89 e5                	mov    %esp,%ebp
8100101a:	90                   	nop
8100101b:	5d                   	pop    %ebp
8100101c:	c3                   	ret    

8100101d <__fp_lock>:
8100101d:	55                   	push   %ebp
8100101e:	89 e5                	mov    %esp,%ebp
81001020:	b8 00 00 00 00       	mov    $0x0,%eax
81001025:	5d                   	pop    %ebp
81001026:	c3                   	ret    

81001027 <__fp_unlock>:
81001027:	55                   	push   %ebp
81001028:	89 e5                	mov    %esp,%ebp
8100102a:	b8 00 00 00 00       	mov    $0x0,%eax
8100102f:	5d                   	pop    %ebp
81001030:	c3                   	ret    

81001031 <__fp_lock_all>:
81001031:	55                   	push   %ebp
81001032:	89 e5                	mov    %esp,%ebp
81001034:	83 ec 08             	sub    $0x8,%esp
81001037:	e8 c9 ff ff ff       	call   81001005 <__sfp_lock_acquire>
8100103c:	a1 84 72 00 81       	mov    0x81007284,%eax
81001041:	83 ec 08             	sub    $0x8,%esp
81001044:	68 1d 10 00 81       	push   $0x8100101d
81001049:	50                   	push   %eax
8100104a:	e8 bb 05 00 00       	call   8100160a <_fwalk>
8100104f:	83 c4 10             	add    $0x10,%esp
81001052:	90                   	nop
81001053:	c9                   	leave  
81001054:	c3                   	ret    

81001055 <__fp_unlock_all>:
81001055:	55                   	push   %ebp
81001056:	89 e5                	mov    %esp,%ebp
81001058:	83 ec 08             	sub    $0x8,%esp
8100105b:	a1 84 72 00 81       	mov    0x81007284,%eax
81001060:	83 ec 08             	sub    $0x8,%esp
81001063:	68 27 10 00 81       	push   $0x81001027
81001068:	50                   	push   %eax
81001069:	e8 9c 05 00 00       	call   8100160a <_fwalk>
8100106e:	83 c4 10             	add    $0x10,%esp
81001071:	e8 95 ff ff ff       	call   8100100b <__sfp_lock_release>
81001076:	90                   	nop
81001077:	c9                   	leave  
81001078:	c3                   	ret    

81001079 <_fiprintf_r>:
81001079:	55                   	push   %ebp
8100107a:	89 e5                	mov    %esp,%ebp
8100107c:	83 ec 18             	sub    $0x18,%esp
8100107f:	8d 45 14             	lea    0x14(%ebp),%eax
81001082:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001085:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001088:	50                   	push   %eax
81001089:	ff 75 10             	push   0x10(%ebp)
8100108c:	ff 75 0c             	push   0xc(%ebp)
8100108f:	ff 75 08             	push   0x8(%ebp)
81001092:	e8 ac 23 00 00       	call   81003443 <_vfiprintf_r>
81001097:	83 c4 10             	add    $0x10,%esp
8100109a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100109d:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010a0:	c9                   	leave  
810010a1:	c3                   	ret    

810010a2 <fiprintf>:
810010a2:	55                   	push   %ebp
810010a3:	89 e5                	mov    %esp,%ebp
810010a5:	83 ec 18             	sub    $0x18,%esp
810010a8:	8d 45 10             	lea    0x10(%ebp),%eax
810010ab:	89 45 f0             	mov    %eax,-0x10(%ebp)
810010ae:	8b 55 f0             	mov    -0x10(%ebp),%edx
810010b1:	a1 84 72 00 81       	mov    0x81007284,%eax
810010b6:	52                   	push   %edx
810010b7:	ff 75 0c             	push   0xc(%ebp)
810010ba:	ff 75 08             	push   0x8(%ebp)
810010bd:	50                   	push   %eax
810010be:	e8 80 23 00 00       	call   81003443 <_vfiprintf_r>
810010c3:	83 c4 10             	add    $0x10,%esp
810010c6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810010c9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010cc:	c9                   	leave  
810010cd:	c3                   	ret    

810010ce <_free_r>:
810010ce:	55                   	push   %ebp
810010cf:	89 e5                	mov    %esp,%ebp
810010d1:	53                   	push   %ebx
810010d2:	83 ec 34             	sub    $0x34,%esp
810010d5:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810010d9:	0f 84 c4 03 00 00    	je     810014a3 <_free_r+0x3d5>
810010df:	83 ec 0c             	sub    $0xc,%esp
810010e2:	ff 75 08             	push   0x8(%ebp)
810010e5:	e8 3e 21 00 00       	call   81003228 <__malloc_lock>
810010ea:	83 c4 10             	add    $0x10,%esp
810010ed:	8b 45 0c             	mov    0xc(%ebp),%eax
810010f0:	83 e8 08             	sub    $0x8,%eax
810010f3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810010f6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010f9:	8b 40 04             	mov    0x4(%eax),%eax
810010fc:	89 45 e0             	mov    %eax,-0x20(%ebp)
810010ff:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001102:	83 e0 fe             	and    $0xfffffffe,%eax
81001105:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001108:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100110b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100110e:	01 d0                	add    %edx,%eax
81001110:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001113:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001116:	8b 40 04             	mov    0x4(%eax),%eax
81001119:	83 e0 fc             	and    $0xfffffffc,%eax
8100111c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100111f:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81001124:	8b 40 08             	mov    0x8(%eax),%eax
81001127:	39 45 dc             	cmp    %eax,-0x24(%ebp)
8100112a:	0f 85 94 00 00 00    	jne    810011c4 <_free_r+0xf6>
81001130:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001133:	01 45 f0             	add    %eax,-0x10(%ebp)
81001136:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001139:	83 e0 01             	and    $0x1,%eax
8100113c:	85 c0                	test   %eax,%eax
8100113e:	75 3a                	jne    8100117a <_free_r+0xac>
81001140:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001143:	8b 00                	mov    (%eax),%eax
81001145:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001148:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100114b:	f7 d8                	neg    %eax
8100114d:	01 45 f4             	add    %eax,-0xc(%ebp)
81001150:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001153:	01 45 f0             	add    %eax,-0x10(%ebp)
81001156:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001159:	8b 40 0c             	mov    0xc(%eax),%eax
8100115c:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100115f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001162:	8b 40 08             	mov    0x8(%eax),%eax
81001165:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001168:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100116b:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100116e:	89 50 0c             	mov    %edx,0xc(%eax)
81001171:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001174:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001177:	89 50 08             	mov    %edx,0x8(%eax)
8100117a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100117d:	83 c8 01             	or     $0x1,%eax
81001180:	89 c2                	mov    %eax,%edx
81001182:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001185:	89 50 04             	mov    %edx,0x4(%eax)
81001188:	ba a0 72 00 81       	mov    $0x810072a0,%edx
8100118d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001190:	89 42 08             	mov    %eax,0x8(%edx)
81001193:	a1 a8 76 00 81       	mov    0x810076a8,%eax
81001198:	39 45 f0             	cmp    %eax,-0x10(%ebp)
8100119b:	72 14                	jb     810011b1 <_free_r+0xe3>
8100119d:	a1 80 7e 00 81       	mov    0x81007e80,%eax
810011a2:	83 ec 08             	sub    $0x8,%esp
810011a5:	50                   	push   %eax
810011a6:	ff 75 08             	push   0x8(%ebp)
810011a9:	e8 fb 02 00 00       	call   810014a9 <_malloc_trim_r>
810011ae:	83 c4 10             	add    $0x10,%esp
810011b1:	83 ec 0c             	sub    $0xc,%esp
810011b4:	ff 75 08             	push   0x8(%ebp)
810011b7:	e8 72 20 00 00       	call   8100322e <__malloc_unlock>
810011bc:	83 c4 10             	add    $0x10,%esp
810011bf:	e9 e0 02 00 00       	jmp    810014a4 <_free_r+0x3d6>
810011c4:	8b 45 dc             	mov    -0x24(%ebp),%eax
810011c7:	8b 55 d8             	mov    -0x28(%ebp),%edx
810011ca:	89 50 04             	mov    %edx,0x4(%eax)
810011cd:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810011d4:	8b 45 e0             	mov    -0x20(%ebp),%eax
810011d7:	83 e0 01             	and    $0x1,%eax
810011da:	85 c0                	test   %eax,%eax
810011dc:	75 52                	jne    81001230 <_free_r+0x162>
810011de:	8b 45 f4             	mov    -0xc(%ebp),%eax
810011e1:	8b 00                	mov    (%eax),%eax
810011e3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810011e6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810011e9:	f7 d8                	neg    %eax
810011eb:	01 45 f4             	add    %eax,-0xc(%ebp)
810011ee:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810011f1:	01 45 f0             	add    %eax,-0x10(%ebp)
810011f4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810011f7:	8b 40 08             	mov    0x8(%eax),%eax
810011fa:	ba a8 72 00 81       	mov    $0x810072a8,%edx
810011ff:	39 d0                	cmp    %edx,%eax
81001201:	75 09                	jne    8100120c <_free_r+0x13e>
81001203:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100120a:	eb 24                	jmp    81001230 <_free_r+0x162>
8100120c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100120f:	8b 40 0c             	mov    0xc(%eax),%eax
81001212:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001215:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001218:	8b 40 08             	mov    0x8(%eax),%eax
8100121b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100121e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001221:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001224:	89 50 0c             	mov    %edx,0xc(%eax)
81001227:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100122a:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100122d:	89 50 08             	mov    %edx,0x8(%eax)
81001230:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001233:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001236:	01 d0                	add    %edx,%eax
81001238:	8b 40 04             	mov    0x4(%eax),%eax
8100123b:	83 e0 01             	and    $0x1,%eax
8100123e:	85 c0                	test   %eax,%eax
81001240:	75 75                	jne    810012b7 <_free_r+0x1e9>
81001242:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001245:	01 45 f0             	add    %eax,-0x10(%ebp)
81001248:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100124c:	75 45                	jne    81001293 <_free_r+0x1c5>
8100124e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001251:	8b 40 08             	mov    0x8(%eax),%eax
81001254:	ba a8 72 00 81       	mov    $0x810072a8,%edx
81001259:	39 d0                	cmp    %edx,%eax
8100125b:	75 36                	jne    81001293 <_free_r+0x1c5>
8100125d:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001264:	b8 a8 72 00 81       	mov    $0x810072a8,%eax
81001269:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100126c:	89 50 0c             	mov    %edx,0xc(%eax)
8100126f:	ba a8 72 00 81       	mov    $0x810072a8,%edx
81001274:	8b 40 0c             	mov    0xc(%eax),%eax
81001277:	89 42 08             	mov    %eax,0x8(%edx)
8100127a:	ba a8 72 00 81       	mov    $0x810072a8,%edx
8100127f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001282:	89 50 0c             	mov    %edx,0xc(%eax)
81001285:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001288:	8b 50 0c             	mov    0xc(%eax),%edx
8100128b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100128e:	89 50 08             	mov    %edx,0x8(%eax)
81001291:	eb 24                	jmp    810012b7 <_free_r+0x1e9>
81001293:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001296:	8b 40 0c             	mov    0xc(%eax),%eax
81001299:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100129c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100129f:	8b 40 08             	mov    0x8(%eax),%eax
810012a2:	89 45 e8             	mov    %eax,-0x18(%ebp)
810012a5:	8b 45 e8             	mov    -0x18(%ebp),%eax
810012a8:	8b 55 ec             	mov    -0x14(%ebp),%edx
810012ab:	89 50 0c             	mov    %edx,0xc(%eax)
810012ae:	8b 45 ec             	mov    -0x14(%ebp),%eax
810012b1:	8b 55 e8             	mov    -0x18(%ebp),%edx
810012b4:	89 50 08             	mov    %edx,0x8(%eax)
810012b7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810012ba:	83 c8 01             	or     $0x1,%eax
810012bd:	89 c2                	mov    %eax,%edx
810012bf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012c2:	89 50 04             	mov    %edx,0x4(%eax)
810012c5:	8b 55 f4             	mov    -0xc(%ebp),%edx
810012c8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810012cb:	01 c2                	add    %eax,%edx
810012cd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810012d0:	89 02                	mov    %eax,(%edx)
810012d2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810012d6:	0f 85 b7 01 00 00    	jne    81001493 <_free_r+0x3c5>
810012dc:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
810012e3:	77 7f                	ja     81001364 <_free_r+0x296>
810012e5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810012e8:	c1 e8 03             	shr    $0x3,%eax
810012eb:	89 45 d0             	mov    %eax,-0x30(%ebp)
810012ee:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
810012f3:	8b 58 04             	mov    0x4(%eax),%ebx
810012f6:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012f9:	8d 50 03             	lea    0x3(%eax),%edx
810012fc:	85 c0                	test   %eax,%eax
810012fe:	0f 48 c2             	cmovs  %edx,%eax
81001301:	c1 f8 02             	sar    $0x2,%eax
81001304:	ba 01 00 00 00       	mov    $0x1,%edx
81001309:	89 c1                	mov    %eax,%ecx
8100130b:	d3 e2                	shl    %cl,%edx
8100130d:	89 d0                	mov    %edx,%eax
8100130f:	ba a0 72 00 81       	mov    $0x810072a0,%edx
81001314:	09 d8                	or     %ebx,%eax
81001316:	89 42 04             	mov    %eax,0x4(%edx)
81001319:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100131c:	83 c0 01             	add    $0x1,%eax
8100131f:	01 c0                	add    %eax,%eax
81001321:	c1 e0 02             	shl    $0x2,%eax
81001324:	05 a0 72 00 81       	add    $0x810072a0,%eax
81001329:	83 e8 08             	sub    $0x8,%eax
8100132c:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100132f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001332:	8b 40 08             	mov    0x8(%eax),%eax
81001335:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001338:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100133b:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100133e:	89 50 0c             	mov    %edx,0xc(%eax)
81001341:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001344:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001347:	89 50 08             	mov    %edx,0x8(%eax)
8100134a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100134d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001350:	89 50 08             	mov    %edx,0x8(%eax)
81001353:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001356:	8b 50 08             	mov    0x8(%eax),%edx
81001359:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100135c:	89 50 0c             	mov    %edx,0xc(%eax)
8100135f:	e9 2f 01 00 00       	jmp    81001493 <_free_r+0x3c5>
81001364:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001367:	c1 e8 09             	shr    $0x9,%eax
8100136a:	85 c0                	test   %eax,%eax
8100136c:	75 08                	jne    81001376 <_free_r+0x2a8>
8100136e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001371:	c1 e8 03             	shr    $0x3,%eax
81001374:	eb 77                	jmp    810013ed <_free_r+0x31f>
81001376:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001379:	c1 e8 09             	shr    $0x9,%eax
8100137c:	83 f8 04             	cmp    $0x4,%eax
8100137f:	77 0b                	ja     8100138c <_free_r+0x2be>
81001381:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001384:	c1 e8 06             	shr    $0x6,%eax
81001387:	83 c0 38             	add    $0x38,%eax
8100138a:	eb 61                	jmp    810013ed <_free_r+0x31f>
8100138c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100138f:	c1 e8 09             	shr    $0x9,%eax
81001392:	83 f8 14             	cmp    $0x14,%eax
81001395:	77 0b                	ja     810013a2 <_free_r+0x2d4>
81001397:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100139a:	c1 e8 09             	shr    $0x9,%eax
8100139d:	83 c0 5b             	add    $0x5b,%eax
810013a0:	eb 4b                	jmp    810013ed <_free_r+0x31f>
810013a2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013a5:	c1 e8 09             	shr    $0x9,%eax
810013a8:	83 f8 54             	cmp    $0x54,%eax
810013ab:	77 0b                	ja     810013b8 <_free_r+0x2ea>
810013ad:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013b0:	c1 e8 0c             	shr    $0xc,%eax
810013b3:	83 c0 6e             	add    $0x6e,%eax
810013b6:	eb 35                	jmp    810013ed <_free_r+0x31f>
810013b8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013bb:	c1 e8 09             	shr    $0x9,%eax
810013be:	3d 54 01 00 00       	cmp    $0x154,%eax
810013c3:	77 0b                	ja     810013d0 <_free_r+0x302>
810013c5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013c8:	c1 e8 0f             	shr    $0xf,%eax
810013cb:	83 c0 77             	add    $0x77,%eax
810013ce:	eb 1d                	jmp    810013ed <_free_r+0x31f>
810013d0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013d3:	c1 e8 09             	shr    $0x9,%eax
810013d6:	3d 54 05 00 00       	cmp    $0x554,%eax
810013db:	77 0b                	ja     810013e8 <_free_r+0x31a>
810013dd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013e0:	c1 e8 12             	shr    $0x12,%eax
810013e3:	83 c0 7c             	add    $0x7c,%eax
810013e6:	eb 05                	jmp    810013ed <_free_r+0x31f>
810013e8:	b8 7e 00 00 00       	mov    $0x7e,%eax
810013ed:	89 45 d0             	mov    %eax,-0x30(%ebp)
810013f0:	8b 45 d0             	mov    -0x30(%ebp),%eax
810013f3:	83 c0 01             	add    $0x1,%eax
810013f6:	01 c0                	add    %eax,%eax
810013f8:	c1 e0 02             	shl    $0x2,%eax
810013fb:	05 a0 72 00 81       	add    $0x810072a0,%eax
81001400:	83 e8 08             	sub    $0x8,%eax
81001403:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001406:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001409:	8b 40 08             	mov    0x8(%eax),%eax
8100140c:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100140f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001412:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001415:	75 36                	jne    8100144d <_free_r+0x37f>
81001417:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
8100141c:	8b 58 04             	mov    0x4(%eax),%ebx
8100141f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001422:	8d 50 03             	lea    0x3(%eax),%edx
81001425:	85 c0                	test   %eax,%eax
81001427:	0f 48 c2             	cmovs  %edx,%eax
8100142a:	c1 f8 02             	sar    $0x2,%eax
8100142d:	ba 01 00 00 00       	mov    $0x1,%edx
81001432:	89 c1                	mov    %eax,%ecx
81001434:	d3 e2                	shl    %cl,%edx
81001436:	89 d0                	mov    %edx,%eax
81001438:	ba a0 72 00 81       	mov    $0x810072a0,%edx
8100143d:	09 d8                	or     %ebx,%eax
8100143f:	89 42 04             	mov    %eax,0x4(%edx)
81001442:	eb 28                	jmp    8100146c <_free_r+0x39e>
81001444:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001447:	8b 40 08             	mov    0x8(%eax),%eax
8100144a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100144d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001450:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001453:	74 0e                	je     81001463 <_free_r+0x395>
81001455:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001458:	8b 40 04             	mov    0x4(%eax),%eax
8100145b:	83 e0 fc             	and    $0xfffffffc,%eax
8100145e:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001461:	72 e1                	jb     81001444 <_free_r+0x376>
81001463:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001466:	8b 40 0c             	mov    0xc(%eax),%eax
81001469:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100146c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100146f:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001472:	89 50 0c             	mov    %edx,0xc(%eax)
81001475:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001478:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100147b:	89 50 08             	mov    %edx,0x8(%eax)
8100147e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001481:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001484:	89 50 08             	mov    %edx,0x8(%eax)
81001487:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100148a:	8b 50 08             	mov    0x8(%eax),%edx
8100148d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001490:	89 50 0c             	mov    %edx,0xc(%eax)
81001493:	83 ec 0c             	sub    $0xc,%esp
81001496:	ff 75 08             	push   0x8(%ebp)
81001499:	e8 90 1d 00 00       	call   8100322e <__malloc_unlock>
8100149e:	83 c4 10             	add    $0x10,%esp
810014a1:	eb 01                	jmp    810014a4 <_free_r+0x3d6>
810014a3:	90                   	nop
810014a4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810014a7:	c9                   	leave  
810014a8:	c3                   	ret    

810014a9 <_malloc_trim_r>:
810014a9:	55                   	push   %ebp
810014aa:	89 e5                	mov    %esp,%ebp
810014ac:	83 ec 28             	sub    $0x28,%esp
810014af:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
810014b6:	83 ec 0c             	sub    $0xc,%esp
810014b9:	ff 75 08             	push   0x8(%ebp)
810014bc:	e8 67 1d 00 00       	call   81003228 <__malloc_lock>
810014c1:	83 c4 10             	add    $0x10,%esp
810014c4:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
810014c9:	8b 40 08             	mov    0x8(%eax),%eax
810014cc:	8b 40 04             	mov    0x4(%eax),%eax
810014cf:	83 e0 fc             	and    $0xfffffffc,%eax
810014d2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810014d5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810014d8:	2b 45 0c             	sub    0xc(%ebp),%eax
810014db:	89 c2                	mov    %eax,%edx
810014dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014e0:	01 d0                	add    %edx,%eax
810014e2:	83 e8 11             	sub    $0x11,%eax
810014e5:	ba 00 00 00 00       	mov    $0x0,%edx
810014ea:	f7 75 f4             	divl   -0xc(%ebp)
810014ed:	83 e8 01             	sub    $0x1,%eax
810014f0:	0f af 45 f4          	imul   -0xc(%ebp),%eax
810014f4:	89 45 ec             	mov    %eax,-0x14(%ebp)
810014f7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014fa:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810014fd:	7d 18                	jge    81001517 <_malloc_trim_r+0x6e>
810014ff:	83 ec 0c             	sub    $0xc,%esp
81001502:	ff 75 08             	push   0x8(%ebp)
81001505:	e8 24 1d 00 00       	call   8100322e <__malloc_unlock>
8100150a:	83 c4 10             	add    $0x10,%esp
8100150d:	b8 00 00 00 00       	mov    $0x0,%eax
81001512:	e9 f1 00 00 00       	jmp    81001608 <_malloc_trim_r+0x15f>
81001517:	83 ec 08             	sub    $0x8,%esp
8100151a:	6a 00                	push   $0x0
8100151c:	ff 75 08             	push   0x8(%ebp)
8100151f:	e8 e1 2b 00 00       	call   81004105 <_sbrk_r>
81001524:	83 c4 10             	add    $0x10,%esp
81001527:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100152a:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
8100152f:	8b 50 08             	mov    0x8(%eax),%edx
81001532:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001535:	01 d0                	add    %edx,%eax
81001537:	39 45 e8             	cmp    %eax,-0x18(%ebp)
8100153a:	74 18                	je     81001554 <_malloc_trim_r+0xab>
8100153c:	83 ec 0c             	sub    $0xc,%esp
8100153f:	ff 75 08             	push   0x8(%ebp)
81001542:	e8 e7 1c 00 00       	call   8100322e <__malloc_unlock>
81001547:	83 c4 10             	add    $0x10,%esp
8100154a:	b8 00 00 00 00       	mov    $0x0,%eax
8100154f:	e9 b4 00 00 00       	jmp    81001608 <_malloc_trim_r+0x15f>
81001554:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001557:	f7 d8                	neg    %eax
81001559:	83 ec 08             	sub    $0x8,%esp
8100155c:	50                   	push   %eax
8100155d:	ff 75 08             	push   0x8(%ebp)
81001560:	e8 a0 2b 00 00       	call   81004105 <_sbrk_r>
81001565:	83 c4 10             	add    $0x10,%esp
81001568:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100156b:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8100156f:	75 61                	jne    810015d2 <_malloc_trim_r+0x129>
81001571:	83 ec 08             	sub    $0x8,%esp
81001574:	6a 00                	push   $0x0
81001576:	ff 75 08             	push   0x8(%ebp)
81001579:	e8 87 2b 00 00       	call   81004105 <_sbrk_r>
8100157e:	83 c4 10             	add    $0x10,%esp
81001581:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001584:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81001589:	8b 50 08             	mov    0x8(%eax),%edx
8100158c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100158f:	29 d0                	sub    %edx,%eax
81001591:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001594:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81001598:	7e 23                	jle    810015bd <_malloc_trim_r+0x114>
8100159a:	8b 15 ac 76 00 81    	mov    0x810076ac,%edx
810015a0:	8b 45 e8             	mov    -0x18(%ebp),%eax
810015a3:	29 d0                	sub    %edx,%eax
810015a5:	a3 a0 7e 00 81       	mov    %eax,0x81007ea0
810015aa:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015ad:	83 c8 01             	or     $0x1,%eax
810015b0:	89 c2                	mov    %eax,%edx
810015b2:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
810015b7:	8b 40 08             	mov    0x8(%eax),%eax
810015ba:	89 50 04             	mov    %edx,0x4(%eax)
810015bd:	83 ec 0c             	sub    $0xc,%esp
810015c0:	ff 75 08             	push   0x8(%ebp)
810015c3:	e8 66 1c 00 00       	call   8100322e <__malloc_unlock>
810015c8:	83 c4 10             	add    $0x10,%esp
810015cb:	b8 00 00 00 00       	mov    $0x0,%eax
810015d0:	eb 36                	jmp    81001608 <_malloc_trim_r+0x15f>
810015d2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015d5:	2b 45 ec             	sub    -0x14(%ebp),%eax
810015d8:	83 c8 01             	or     $0x1,%eax
810015db:	89 c2                	mov    %eax,%edx
810015dd:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
810015e2:	8b 40 08             	mov    0x8(%eax),%eax
810015e5:	89 50 04             	mov    %edx,0x4(%eax)
810015e8:	a1 a0 7e 00 81       	mov    0x81007ea0,%eax
810015ed:	2b 45 ec             	sub    -0x14(%ebp),%eax
810015f0:	a3 a0 7e 00 81       	mov    %eax,0x81007ea0
810015f5:	83 ec 0c             	sub    $0xc,%esp
810015f8:	ff 75 08             	push   0x8(%ebp)
810015fb:	e8 2e 1c 00 00       	call   8100322e <__malloc_unlock>
81001600:	83 c4 10             	add    $0x10,%esp
81001603:	b8 01 00 00 00       	mov    $0x1,%eax
81001608:	c9                   	leave  
81001609:	c3                   	ret    

8100160a <_fwalk>:
8100160a:	55                   	push   %ebp
8100160b:	89 e5                	mov    %esp,%ebp
8100160d:	57                   	push   %edi
8100160e:	56                   	push   %esi
8100160f:	53                   	push   %ebx
81001610:	83 ec 1c             	sub    $0x1c,%esp
81001613:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100161a:	8b 45 08             	mov    0x8(%ebp),%eax
8100161d:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81001623:	eb 3e                	jmp    81001663 <_fwalk+0x59>
81001625:	8b 5e 08             	mov    0x8(%esi),%ebx
81001628:	8b 7e 04             	mov    0x4(%esi),%edi
8100162b:	eb 2d                	jmp    8100165a <_fwalk+0x50>
8100162d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001631:	66 85 c0             	test   %ax,%ax
81001634:	74 21                	je     81001657 <_fwalk+0x4d>
81001636:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100163a:	66 83 f8 01          	cmp    $0x1,%ax
8100163e:	74 17                	je     81001657 <_fwalk+0x4d>
81001640:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001644:	66 83 f8 ff          	cmp    $0xffff,%ax
81001648:	74 0d                	je     81001657 <_fwalk+0x4d>
8100164a:	83 ec 0c             	sub    $0xc,%esp
8100164d:	53                   	push   %ebx
8100164e:	ff 55 0c             	call   *0xc(%ebp)
81001651:	83 c4 10             	add    $0x10,%esp
81001654:	09 45 e4             	or     %eax,-0x1c(%ebp)
81001657:	83 c3 68             	add    $0x68,%ebx
8100165a:	83 ef 01             	sub    $0x1,%edi
8100165d:	85 ff                	test   %edi,%edi
8100165f:	79 cc                	jns    8100162d <_fwalk+0x23>
81001661:	8b 36                	mov    (%esi),%esi
81001663:	85 f6                	test   %esi,%esi
81001665:	75 be                	jne    81001625 <_fwalk+0x1b>
81001667:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100166a:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100166d:	5b                   	pop    %ebx
8100166e:	5e                   	pop    %esi
8100166f:	5f                   	pop    %edi
81001670:	5d                   	pop    %ebp
81001671:	c3                   	ret    

81001672 <_fwalk_reent>:
81001672:	55                   	push   %ebp
81001673:	89 e5                	mov    %esp,%ebp
81001675:	57                   	push   %edi
81001676:	56                   	push   %esi
81001677:	53                   	push   %ebx
81001678:	83 ec 1c             	sub    $0x1c,%esp
8100167b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81001682:	8b 45 08             	mov    0x8(%ebp),%eax
81001685:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
8100168b:	eb 41                	jmp    810016ce <_fwalk_reent+0x5c>
8100168d:	8b 5e 08             	mov    0x8(%esi),%ebx
81001690:	8b 7e 04             	mov    0x4(%esi),%edi
81001693:	eb 30                	jmp    810016c5 <_fwalk_reent+0x53>
81001695:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001699:	66 85 c0             	test   %ax,%ax
8100169c:	74 24                	je     810016c2 <_fwalk_reent+0x50>
8100169e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810016a2:	66 83 f8 01          	cmp    $0x1,%ax
810016a6:	74 1a                	je     810016c2 <_fwalk_reent+0x50>
810016a8:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810016ac:	66 83 f8 ff          	cmp    $0xffff,%ax
810016b0:	74 10                	je     810016c2 <_fwalk_reent+0x50>
810016b2:	83 ec 08             	sub    $0x8,%esp
810016b5:	53                   	push   %ebx
810016b6:	ff 75 08             	push   0x8(%ebp)
810016b9:	ff 55 0c             	call   *0xc(%ebp)
810016bc:	83 c4 10             	add    $0x10,%esp
810016bf:	09 45 e4             	or     %eax,-0x1c(%ebp)
810016c2:	83 c3 68             	add    $0x68,%ebx
810016c5:	83 ef 01             	sub    $0x1,%edi
810016c8:	85 ff                	test   %edi,%edi
810016ca:	79 c9                	jns    81001695 <_fwalk_reent+0x23>
810016cc:	8b 36                	mov    (%esi),%esi
810016ce:	85 f6                	test   %esi,%esi
810016d0:	75 bb                	jne    8100168d <_fwalk_reent+0x1b>
810016d2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810016d5:	8d 65 f4             	lea    -0xc(%ebp),%esp
810016d8:	5b                   	pop    %ebx
810016d9:	5e                   	pop    %esi
810016da:	5f                   	pop    %edi
810016db:	5d                   	pop    %ebp
810016dc:	c3                   	ret    

810016dd <_fwrite_r>:
810016dd:	55                   	push   %ebp
810016de:	89 e5                	mov    %esp,%ebp
810016e0:	83 ec 28             	sub    $0x28,%esp
810016e3:	8b 45 0c             	mov    0xc(%ebp),%eax
810016e6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810016e9:	8b 45 14             	mov    0x14(%ebp),%eax
810016ec:	0f af 45 10          	imul   0x10(%ebp),%eax
810016f0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810016f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016f6:	89 45 e0             	mov    %eax,-0x20(%ebp)
810016f9:	8b 45 e0             	mov    -0x20(%ebp),%eax
810016fc:	89 45 ec             	mov    %eax,-0x14(%ebp)
810016ff:	8d 45 dc             	lea    -0x24(%ebp),%eax
81001702:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001705:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
8100170c:	8b 45 08             	mov    0x8(%ebp),%eax
8100170f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001712:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81001716:	74 18                	je     81001730 <_fwrite_r+0x53>
81001718:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100171b:	8b 40 38             	mov    0x38(%eax),%eax
8100171e:	85 c0                	test   %eax,%eax
81001720:	75 0e                	jne    81001730 <_fwrite_r+0x53>
81001722:	83 ec 0c             	sub    $0xc,%esp
81001725:	ff 75 f0             	push   -0x10(%ebp)
81001728:	e8 3f f8 ff ff       	call   81000f6c <__sinit>
8100172d:	83 c4 10             	add    $0x10,%esp
81001730:	8b 45 18             	mov    0x18(%ebp),%eax
81001733:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001737:	98                   	cwtl   
81001738:	25 00 20 00 00       	and    $0x2000,%eax
8100173d:	85 c0                	test   %eax,%eax
8100173f:	75 24                	jne    81001765 <_fwrite_r+0x88>
81001741:	8b 45 18             	mov    0x18(%ebp),%eax
81001744:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001748:	80 cc 20             	or     $0x20,%ah
8100174b:	89 c2                	mov    %eax,%edx
8100174d:	8b 45 18             	mov    0x18(%ebp),%eax
81001750:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001754:	8b 45 18             	mov    0x18(%ebp),%eax
81001757:	8b 40 64             	mov    0x64(%eax),%eax
8100175a:	80 e4 df             	and    $0xdf,%ah
8100175d:	89 c2                	mov    %eax,%edx
8100175f:	8b 45 18             	mov    0x18(%ebp),%eax
81001762:	89 50 64             	mov    %edx,0x64(%eax)
81001765:	83 ec 04             	sub    $0x4,%esp
81001768:	8d 45 e4             	lea    -0x1c(%ebp),%eax
8100176b:	50                   	push   %eax
8100176c:	ff 75 18             	push   0x18(%ebp)
8100176f:	ff 75 08             	push   0x8(%ebp)
81001772:	e8 dd 38 00 00       	call   81005054 <__sfvwrite_r>
81001777:	83 c4 10             	add    $0x10,%esp
8100177a:	85 c0                	test   %eax,%eax
8100177c:	75 05                	jne    81001783 <_fwrite_r+0xa6>
8100177e:	8b 45 14             	mov    0x14(%ebp),%eax
81001781:	eb 10                	jmp    81001793 <_fwrite_r+0xb6>
81001783:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001786:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001789:	29 d0                	sub    %edx,%eax
8100178b:	ba 00 00 00 00       	mov    $0x0,%edx
81001790:	f7 75 10             	divl   0x10(%ebp)
81001793:	c9                   	leave  
81001794:	c3                   	ret    

81001795 <fwrite>:
81001795:	55                   	push   %ebp
81001796:	89 e5                	mov    %esp,%ebp
81001798:	83 ec 08             	sub    $0x8,%esp
8100179b:	a1 84 72 00 81       	mov    0x81007284,%eax
810017a0:	83 ec 0c             	sub    $0xc,%esp
810017a3:	ff 75 14             	push   0x14(%ebp)
810017a6:	ff 75 10             	push   0x10(%ebp)
810017a9:	ff 75 0c             	push   0xc(%ebp)
810017ac:	ff 75 08             	push   0x8(%ebp)
810017af:	50                   	push   %eax
810017b0:	e8 28 ff ff ff       	call   810016dd <_fwrite_r>
810017b5:	83 c4 20             	add    $0x20,%esp
810017b8:	c9                   	leave  
810017b9:	c3                   	ret    

810017ba <reverse_argv_elements>:
810017ba:	55                   	push   %ebp
810017bb:	89 e5                	mov    %esp,%ebp
810017bd:	83 ec 10             	sub    $0x10,%esp
810017c0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
810017c7:	eb 5e                	jmp    81001827 <reverse_argv_elements+0x6d>
810017c9:	8b 45 fc             	mov    -0x4(%ebp),%eax
810017cc:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810017d3:	8b 45 08             	mov    0x8(%ebp),%eax
810017d6:	01 d0                	add    %edx,%eax
810017d8:	8b 00                	mov    (%eax),%eax
810017da:	89 45 f8             	mov    %eax,-0x8(%ebp)
810017dd:	8b 45 0c             	mov    0xc(%ebp),%eax
810017e0:	2b 45 fc             	sub    -0x4(%ebp),%eax
810017e3:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
810017e8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810017ef:	8b 45 08             	mov    0x8(%ebp),%eax
810017f2:	01 d0                	add    %edx,%eax
810017f4:	8b 55 fc             	mov    -0x4(%ebp),%edx
810017f7:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
810017fe:	8b 55 08             	mov    0x8(%ebp),%edx
81001801:	01 ca                	add    %ecx,%edx
81001803:	8b 00                	mov    (%eax),%eax
81001805:	89 02                	mov    %eax,(%edx)
81001807:	8b 45 0c             	mov    0xc(%ebp),%eax
8100180a:	2b 45 fc             	sub    -0x4(%ebp),%eax
8100180d:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81001812:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001819:	8b 45 08             	mov    0x8(%ebp),%eax
8100181c:	01 c2                	add    %eax,%edx
8100181e:	8b 45 f8             	mov    -0x8(%ebp),%eax
81001821:	89 02                	mov    %eax,(%edx)
81001823:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
81001827:	8b 45 0c             	mov    0xc(%ebp),%eax
8100182a:	d1 f8                	sar    %eax
8100182c:	39 45 fc             	cmp    %eax,-0x4(%ebp)
8100182f:	7c 98                	jl     810017c9 <reverse_argv_elements+0xf>
81001831:	90                   	nop
81001832:	90                   	nop
81001833:	c9                   	leave  
81001834:	c3                   	ret    

81001835 <permute>:
81001835:	55                   	push   %ebp
81001836:	89 e5                	mov    %esp,%ebp
81001838:	ff 75 0c             	push   0xc(%ebp)
8100183b:	ff 75 08             	push   0x8(%ebp)
8100183e:	e8 77 ff ff ff       	call   810017ba <reverse_argv_elements>
81001843:	83 c4 08             	add    $0x8,%esp
81001846:	8b 55 0c             	mov    0xc(%ebp),%edx
81001849:	8b 45 10             	mov    0x10(%ebp),%eax
8100184c:	01 d0                	add    %edx,%eax
8100184e:	50                   	push   %eax
8100184f:	ff 75 08             	push   0x8(%ebp)
81001852:	e8 63 ff ff ff       	call   810017ba <reverse_argv_elements>
81001857:	83 c4 08             	add    $0x8,%esp
8100185a:	ff 75 10             	push   0x10(%ebp)
8100185d:	ff 75 08             	push   0x8(%ebp)
81001860:	e8 55 ff ff ff       	call   810017ba <reverse_argv_elements>
81001865:	83 c4 08             	add    $0x8,%esp
81001868:	90                   	nop
81001869:	c9                   	leave  
8100186a:	c3                   	ret    

8100186b <is_option>:
8100186b:	55                   	push   %ebp
8100186c:	89 e5                	mov    %esp,%ebp
8100186e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81001872:	74 1a                	je     8100188e <is_option+0x23>
81001874:	8b 45 08             	mov    0x8(%ebp),%eax
81001877:	0f b6 00             	movzbl (%eax),%eax
8100187a:	3c 2d                	cmp    $0x2d,%al
8100187c:	74 10                	je     8100188e <is_option+0x23>
8100187e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001882:	74 11                	je     81001895 <is_option+0x2a>
81001884:	8b 45 08             	mov    0x8(%ebp),%eax
81001887:	0f b6 00             	movzbl (%eax),%eax
8100188a:	3c 2b                	cmp    $0x2b,%al
8100188c:	75 07                	jne    81001895 <is_option+0x2a>
8100188e:	b8 01 00 00 00       	mov    $0x1,%eax
81001893:	eb 05                	jmp    8100189a <is_option+0x2f>
81001895:	b8 00 00 00 00       	mov    $0x0,%eax
8100189a:	5d                   	pop    %ebp
8100189b:	c3                   	ret    

8100189c <read_globals>:
8100189c:	55                   	push   %ebp
8100189d:	89 e5                	mov    %esp,%ebp
8100189f:	8b 15 54 7e 00 81    	mov    0x81007e54,%edx
810018a5:	8b 45 08             	mov    0x8(%ebp),%eax
810018a8:	89 10                	mov    %edx,(%eax)
810018aa:	8b 15 58 7e 00 81    	mov    0x81007e58,%edx
810018b0:	8b 45 08             	mov    0x8(%ebp),%eax
810018b3:	89 50 04             	mov    %edx,0x4(%eax)
810018b6:	8b 15 44 6e 00 81    	mov    0x81006e44,%edx
810018bc:	8b 45 08             	mov    0x8(%ebp),%eax
810018bf:	89 50 08             	mov    %edx,0x8(%eax)
810018c2:	8b 15 48 6e 00 81    	mov    0x81006e48,%edx
810018c8:	8b 45 08             	mov    0x8(%ebp),%eax
810018cb:	89 50 0c             	mov    %edx,0xc(%eax)
810018ce:	8b 15 5c 7e 00 81    	mov    0x81007e5c,%edx
810018d4:	8b 45 08             	mov    0x8(%ebp),%eax
810018d7:	89 50 10             	mov    %edx,0x10(%eax)
810018da:	8b 15 60 7e 00 81    	mov    0x81007e60,%edx
810018e0:	8b 45 08             	mov    0x8(%ebp),%eax
810018e3:	89 50 14             	mov    %edx,0x14(%eax)
810018e6:	8b 15 64 7e 00 81    	mov    0x81007e64,%edx
810018ec:	8b 45 08             	mov    0x8(%ebp),%eax
810018ef:	89 50 18             	mov    %edx,0x18(%eax)
810018f2:	90                   	nop
810018f3:	5d                   	pop    %ebp
810018f4:	c3                   	ret    

810018f5 <write_globals>:
810018f5:	55                   	push   %ebp
810018f6:	89 e5                	mov    %esp,%ebp
810018f8:	8b 45 08             	mov    0x8(%ebp),%eax
810018fb:	8b 00                	mov    (%eax),%eax
810018fd:	a3 54 7e 00 81       	mov    %eax,0x81007e54
81001902:	8b 45 08             	mov    0x8(%ebp),%eax
81001905:	8b 40 04             	mov    0x4(%eax),%eax
81001908:	a3 58 7e 00 81       	mov    %eax,0x81007e58
8100190d:	8b 45 08             	mov    0x8(%ebp),%eax
81001910:	8b 40 08             	mov    0x8(%eax),%eax
81001913:	a3 44 6e 00 81       	mov    %eax,0x81006e44
81001918:	8b 45 08             	mov    0x8(%ebp),%eax
8100191b:	8b 40 0c             	mov    0xc(%eax),%eax
8100191e:	a3 48 6e 00 81       	mov    %eax,0x81006e48
81001923:	8b 45 08             	mov    0x8(%ebp),%eax
81001926:	8b 40 10             	mov    0x10(%eax),%eax
81001929:	a3 5c 7e 00 81       	mov    %eax,0x81007e5c
8100192e:	8b 45 08             	mov    0x8(%ebp),%eax
81001931:	8b 40 14             	mov    0x14(%eax),%eax
81001934:	a3 60 7e 00 81       	mov    %eax,0x81007e60
81001939:	8b 45 08             	mov    0x8(%ebp),%eax
8100193c:	8b 40 18             	mov    0x18(%eax),%eax
8100193f:	a3 64 7e 00 81       	mov    %eax,0x81007e64
81001944:	90                   	nop
81001945:	5d                   	pop    %ebp
81001946:	c3                   	ret    

81001947 <getopt_internal>:
81001947:	55                   	push   %ebp
81001948:	89 e5                	mov    %esp,%ebp
8100194a:	53                   	push   %ebx
8100194b:	83 ec 34             	sub    $0x34,%esp
8100194e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81001955:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100195c:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81001963:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8100196a:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81001971:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81001978:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
8100197f:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81001986:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
8100198d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81001991:	74 35                	je     810019c8 <getopt_internal+0x81>
81001993:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001997:	74 2f                	je     810019c8 <getopt_internal+0x81>
81001999:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100199d:	75 06                	jne    810019a5 <getopt_internal+0x5e>
8100199f:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810019a3:	74 23                	je     810019c8 <getopt_internal+0x81>
810019a5:	8b 45 20             	mov    0x20(%ebp),%eax
810019a8:	8b 40 04             	mov    0x4(%eax),%eax
810019ab:	39 45 08             	cmp    %eax,0x8(%ebp)
810019ae:	7e 18                	jle    810019c8 <getopt_internal+0x81>
810019b0:	8b 45 20             	mov    0x20(%ebp),%eax
810019b3:	8b 40 04             	mov    0x4(%eax),%eax
810019b6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810019bd:	8b 45 0c             	mov    0xc(%ebp),%eax
810019c0:	01 d0                	add    %edx,%eax
810019c2:	8b 00                	mov    (%eax),%eax
810019c4:	85 c0                	test   %eax,%eax
810019c6:	75 0a                	jne    810019d2 <getopt_internal+0x8b>
810019c8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810019cd:	e9 85 0a 00 00       	jmp    81002457 <getopt_internal+0xb10>
810019d2:	8b 45 20             	mov    0x20(%ebp),%eax
810019d5:	8b 40 04             	mov    0x4(%eax),%eax
810019d8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810019df:	8b 45 0c             	mov    0xc(%ebp),%eax
810019e2:	01 d0                	add    %edx,%eax
810019e4:	8b 00                	mov    (%eax),%eax
810019e6:	83 ec 08             	sub    $0x8,%esp
810019e9:	68 4c 6a 00 81       	push   $0x81006a4c
810019ee:	50                   	push   %eax
810019ef:	e8 68 29 00 00       	call   8100435c <strcmp>
810019f4:	83 c4 10             	add    $0x10,%esp
810019f7:	85 c0                	test   %eax,%eax
810019f9:	75 19                	jne    81001a14 <getopt_internal+0xcd>
810019fb:	8b 45 20             	mov    0x20(%ebp),%eax
810019fe:	8b 40 04             	mov    0x4(%eax),%eax
81001a01:	8d 50 01             	lea    0x1(%eax),%edx
81001a04:	8b 45 20             	mov    0x20(%ebp),%eax
81001a07:	89 50 04             	mov    %edx,0x4(%eax)
81001a0a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001a0f:	e9 43 0a 00 00       	jmp    81002457 <getopt_internal+0xb10>
81001a14:	8b 45 20             	mov    0x20(%ebp),%eax
81001a17:	8b 40 04             	mov    0x4(%eax),%eax
81001a1a:	85 c0                	test   %eax,%eax
81001a1c:	75 28                	jne    81001a46 <getopt_internal+0xff>
81001a1e:	8b 45 20             	mov    0x20(%ebp),%eax
81001a21:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81001a28:	8b 45 20             	mov    0x20(%ebp),%eax
81001a2b:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81001a32:	8b 45 20             	mov    0x20(%ebp),%eax
81001a35:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81001a3c:	8b 45 20             	mov    0x20(%ebp),%eax
81001a3f:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001a46:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001a4a:	74 33                	je     81001a7f <getopt_internal+0x138>
81001a4c:	8b 45 10             	mov    0x10(%ebp),%eax
81001a4f:	0f b6 00             	movzbl (%eax),%eax
81001a52:	3c 2d                	cmp    $0x2d,%al
81001a54:	74 0a                	je     81001a60 <getopt_internal+0x119>
81001a56:	8b 45 10             	mov    0x10(%ebp),%eax
81001a59:	0f b6 00             	movzbl (%eax),%eax
81001a5c:	3c 2b                	cmp    $0x2b,%al
81001a5e:	75 1f                	jne    81001a7f <getopt_internal+0x138>
81001a60:	8b 45 10             	mov    0x10(%ebp),%eax
81001a63:	0f b6 00             	movzbl (%eax),%eax
81001a66:	3c 2d                	cmp    $0x2d,%al
81001a68:	75 07                	jne    81001a71 <getopt_internal+0x12a>
81001a6a:	b8 01 00 00 00       	mov    $0x1,%eax
81001a6f:	eb 05                	jmp    81001a76 <getopt_internal+0x12f>
81001a71:	b8 02 00 00 00       	mov    $0x2,%eax
81001a76:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001a79:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81001a7d:	eb 23                	jmp    81001aa2 <getopt_internal+0x15b>
81001a7f:	83 ec 0c             	sub    $0xc,%esp
81001a82:	68 4f 6a 00 81       	push   $0x81006a4f
81001a87:	e8 86 3a 00 00       	call   81005512 <getenv>
81001a8c:	83 c4 10             	add    $0x10,%esp
81001a8f:	85 c0                	test   %eax,%eax
81001a91:	74 07                	je     81001a9a <getopt_internal+0x153>
81001a93:	b8 02 00 00 00       	mov    $0x2,%eax
81001a98:	eb 05                	jmp    81001a9f <getopt_internal+0x158>
81001a9a:	b8 00 00 00 00       	mov    $0x0,%eax
81001a9f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001aa2:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001aa6:	74 15                	je     81001abd <getopt_internal+0x176>
81001aa8:	8b 45 10             	mov    0x10(%ebp),%eax
81001aab:	0f b6 00             	movzbl (%eax),%eax
81001aae:	3c 3a                	cmp    $0x3a,%al
81001ab0:	75 0b                	jne    81001abd <getopt_internal+0x176>
81001ab2:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81001ab6:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
81001abd:	8b 45 20             	mov    0x20(%ebp),%eax
81001ac0:	8b 40 10             	mov    0x10(%eax),%eax
81001ac3:	83 f8 01             	cmp    $0x1,%eax
81001ac6:	0f 85 a2 01 00 00    	jne    81001c6e <getopt_internal+0x327>
81001acc:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
81001ad0:	0f 84 02 01 00 00    	je     81001bd8 <getopt_internal+0x291>
81001ad6:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
81001ada:	0f 84 56 01 00 00    	je     81001c36 <getopt_internal+0x2ef>
81001ae0:	8b 45 20             	mov    0x20(%ebp),%eax
81001ae3:	8b 50 04             	mov    0x4(%eax),%edx
81001ae6:	8b 45 20             	mov    0x20(%ebp),%eax
81001ae9:	89 50 14             	mov    %edx,0x14(%eax)
81001aec:	8b 45 20             	mov    0x20(%ebp),%eax
81001aef:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001af6:	eb 1e                	jmp    81001b16 <getopt_internal+0x1cf>
81001af8:	8b 45 20             	mov    0x20(%ebp),%eax
81001afb:	8b 40 04             	mov    0x4(%eax),%eax
81001afe:	8d 50 01             	lea    0x1(%eax),%edx
81001b01:	8b 45 20             	mov    0x20(%ebp),%eax
81001b04:	89 50 04             	mov    %edx,0x4(%eax)
81001b07:	8b 45 20             	mov    0x20(%ebp),%eax
81001b0a:	8b 40 18             	mov    0x18(%eax),%eax
81001b0d:	8d 50 01             	lea    0x1(%eax),%edx
81001b10:	8b 45 20             	mov    0x20(%ebp),%eax
81001b13:	89 50 18             	mov    %edx,0x18(%eax)
81001b16:	8b 45 20             	mov    0x20(%ebp),%eax
81001b19:	8b 40 04             	mov    0x4(%eax),%eax
81001b1c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001b23:	8b 45 0c             	mov    0xc(%ebp),%eax
81001b26:	01 d0                	add    %edx,%eax
81001b28:	8b 00                	mov    (%eax),%eax
81001b2a:	83 ec 08             	sub    $0x8,%esp
81001b2d:	ff 75 1c             	push   0x1c(%ebp)
81001b30:	50                   	push   %eax
81001b31:	e8 35 fd ff ff       	call   8100186b <is_option>
81001b36:	83 c4 10             	add    $0x10,%esp
81001b39:	85 c0                	test   %eax,%eax
81001b3b:	74 bb                	je     81001af8 <getopt_internal+0x1b1>
81001b3d:	8b 45 20             	mov    0x20(%ebp),%eax
81001b40:	8b 40 04             	mov    0x4(%eax),%eax
81001b43:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001b4a:	8b 45 0c             	mov    0xc(%ebp),%eax
81001b4d:	01 d0                	add    %edx,%eax
81001b4f:	8b 00                	mov    (%eax),%eax
81001b51:	85 c0                	test   %eax,%eax
81001b53:	75 16                	jne    81001b6b <getopt_internal+0x224>
81001b55:	8b 45 20             	mov    0x20(%ebp),%eax
81001b58:	8b 50 14             	mov    0x14(%eax),%edx
81001b5b:	8b 45 20             	mov    0x20(%ebp),%eax
81001b5e:	89 50 04             	mov    %edx,0x4(%eax)
81001b61:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001b66:	e9 ec 08 00 00       	jmp    81002457 <getopt_internal+0xb10>
81001b6b:	8b 45 20             	mov    0x20(%ebp),%eax
81001b6e:	8b 40 04             	mov    0x4(%eax),%eax
81001b71:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001b78:	8b 45 0c             	mov    0xc(%ebp),%eax
81001b7b:	01 d0                	add    %edx,%eax
81001b7d:	8b 00                	mov    (%eax),%eax
81001b7f:	83 ec 08             	sub    $0x8,%esp
81001b82:	68 4c 6a 00 81       	push   $0x81006a4c
81001b87:	50                   	push   %eax
81001b88:	e8 cf 27 00 00       	call   8100435c <strcmp>
81001b8d:	83 c4 10             	add    $0x10,%esp
81001b90:	85 c0                	test   %eax,%eax
81001b92:	0f 85 cf 00 00 00    	jne    81001c67 <getopt_internal+0x320>
81001b98:	8b 45 20             	mov    0x20(%ebp),%eax
81001b9b:	8b 40 18             	mov    0x18(%eax),%eax
81001b9e:	8b 55 20             	mov    0x20(%ebp),%edx
81001ba1:	8b 52 14             	mov    0x14(%edx),%edx
81001ba4:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81001bab:	8b 55 0c             	mov    0xc(%ebp),%edx
81001bae:	01 ca                	add    %ecx,%edx
81001bb0:	83 ec 04             	sub    $0x4,%esp
81001bb3:	6a 01                	push   $0x1
81001bb5:	50                   	push   %eax
81001bb6:	52                   	push   %edx
81001bb7:	e8 79 fc ff ff       	call   81001835 <permute>
81001bbc:	83 c4 10             	add    $0x10,%esp
81001bbf:	8b 45 20             	mov    0x20(%ebp),%eax
81001bc2:	8b 40 14             	mov    0x14(%eax),%eax
81001bc5:	8d 50 01             	lea    0x1(%eax),%edx
81001bc8:	8b 45 20             	mov    0x20(%ebp),%eax
81001bcb:	89 50 04             	mov    %edx,0x4(%eax)
81001bce:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001bd3:	e9 7f 08 00 00       	jmp    81002457 <getopt_internal+0xb10>
81001bd8:	8b 45 20             	mov    0x20(%ebp),%eax
81001bdb:	8b 40 04             	mov    0x4(%eax),%eax
81001bde:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001be5:	8b 45 0c             	mov    0xc(%ebp),%eax
81001be8:	01 d0                	add    %edx,%eax
81001bea:	8b 00                	mov    (%eax),%eax
81001bec:	83 ec 08             	sub    $0x8,%esp
81001bef:	ff 75 1c             	push   0x1c(%ebp)
81001bf2:	50                   	push   %eax
81001bf3:	e8 73 fc ff ff       	call   8100186b <is_option>
81001bf8:	83 c4 10             	add    $0x10,%esp
81001bfb:	85 c0                	test   %eax,%eax
81001bfd:	75 6b                	jne    81001c6a <getopt_internal+0x323>
81001bff:	8b 45 20             	mov    0x20(%ebp),%eax
81001c02:	8b 40 04             	mov    0x4(%eax),%eax
81001c05:	8d 48 01             	lea    0x1(%eax),%ecx
81001c08:	8b 55 20             	mov    0x20(%ebp),%edx
81001c0b:	89 4a 04             	mov    %ecx,0x4(%edx)
81001c0e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001c15:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c18:	01 d0                	add    %edx,%eax
81001c1a:	8b 10                	mov    (%eax),%edx
81001c1c:	8b 45 20             	mov    0x20(%ebp),%eax
81001c1f:	89 10                	mov    %edx,(%eax)
81001c21:	8b 45 20             	mov    0x20(%ebp),%eax
81001c24:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
81001c2b:	8b 45 20             	mov    0x20(%ebp),%eax
81001c2e:	8b 40 0c             	mov    0xc(%eax),%eax
81001c31:	e9 21 08 00 00       	jmp    81002457 <getopt_internal+0xb10>
81001c36:	8b 45 20             	mov    0x20(%ebp),%eax
81001c39:	8b 40 04             	mov    0x4(%eax),%eax
81001c3c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001c43:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c46:	01 d0                	add    %edx,%eax
81001c48:	8b 00                	mov    (%eax),%eax
81001c4a:	83 ec 08             	sub    $0x8,%esp
81001c4d:	ff 75 1c             	push   0x1c(%ebp)
81001c50:	50                   	push   %eax
81001c51:	e8 15 fc ff ff       	call   8100186b <is_option>
81001c56:	83 c4 10             	add    $0x10,%esp
81001c59:	85 c0                	test   %eax,%eax
81001c5b:	75 10                	jne    81001c6d <getopt_internal+0x326>
81001c5d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001c62:	e9 f0 07 00 00       	jmp    81002457 <getopt_internal+0xb10>
81001c67:	90                   	nop
81001c68:	eb 04                	jmp    81001c6e <getopt_internal+0x327>
81001c6a:	90                   	nop
81001c6b:	eb 01                	jmp    81001c6e <getopt_internal+0x327>
81001c6d:	90                   	nop
81001c6e:	8b 45 20             	mov    0x20(%ebp),%eax
81001c71:	8b 40 04             	mov    0x4(%eax),%eax
81001c74:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001c7b:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c7e:	01 d0                	add    %edx,%eax
81001c80:	8b 00                	mov    (%eax),%eax
81001c82:	85 c0                	test   %eax,%eax
81001c84:	75 0a                	jne    81001c90 <getopt_internal+0x349>
81001c86:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001c8b:	e9 c7 07 00 00       	jmp    81002457 <getopt_internal+0xb10>
81001c90:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001c94:	0f 84 15 03 00 00    	je     81001faf <getopt_internal+0x668>
81001c9a:	8b 45 20             	mov    0x20(%ebp),%eax
81001c9d:	8b 40 04             	mov    0x4(%eax),%eax
81001ca0:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001ca7:	8b 45 0c             	mov    0xc(%ebp),%eax
81001caa:	01 d0                	add    %edx,%eax
81001cac:	8b 00                	mov    (%eax),%eax
81001cae:	83 ec 04             	sub    $0x4,%esp
81001cb1:	6a 02                	push   $0x2
81001cb3:	68 4c 6a 00 81       	push   $0x81006a4c
81001cb8:	50                   	push   %eax
81001cb9:	e8 47 14 00 00       	call   81003105 <memcmp>
81001cbe:	83 c4 10             	add    $0x10,%esp
81001cc1:	85 c0                	test   %eax,%eax
81001cc3:	74 29                	je     81001cee <getopt_internal+0x3a7>
81001cc5:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
81001cc9:	0f 84 e0 02 00 00    	je     81001faf <getopt_internal+0x668>
81001ccf:	8b 45 20             	mov    0x20(%ebp),%eax
81001cd2:	8b 40 04             	mov    0x4(%eax),%eax
81001cd5:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001cdc:	8b 45 0c             	mov    0xc(%ebp),%eax
81001cdf:	01 d0                	add    %edx,%eax
81001ce1:	8b 00                	mov    (%eax),%eax
81001ce3:	0f b6 00             	movzbl (%eax),%eax
81001ce6:	3c 2b                	cmp    $0x2b,%al
81001ce8:	0f 85 c1 02 00 00    	jne    81001faf <getopt_internal+0x668>
81001cee:	8b 45 20             	mov    0x20(%ebp),%eax
81001cf1:	8b 40 10             	mov    0x10(%eax),%eax
81001cf4:	83 f8 01             	cmp    $0x1,%eax
81001cf7:	0f 85 b2 02 00 00    	jne    81001faf <getopt_internal+0x668>
81001cfd:	8b 45 20             	mov    0x20(%ebp),%eax
81001d00:	8b 40 04             	mov    0x4(%eax),%eax
81001d03:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d0a:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d0d:	01 d0                	add    %edx,%eax
81001d0f:	8b 00                	mov    (%eax),%eax
81001d11:	83 ec 04             	sub    $0x4,%esp
81001d14:	6a 02                	push   $0x2
81001d16:	68 4c 6a 00 81       	push   $0x81006a4c
81001d1b:	50                   	push   %eax
81001d1c:	e8 e4 13 00 00       	call   81003105 <memcmp>
81001d21:	83 c4 10             	add    $0x10,%esp
81001d24:	85 c0                	test   %eax,%eax
81001d26:	75 0a                	jne    81001d32 <getopt_internal+0x3eb>
81001d28:	8b 45 20             	mov    0x20(%ebp),%eax
81001d2b:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
81001d32:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81001d39:	8b 45 20             	mov    0x20(%ebp),%eax
81001d3c:	8b 40 04             	mov    0x4(%eax),%eax
81001d3f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d46:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d49:	01 d0                	add    %edx,%eax
81001d4b:	8b 10                	mov    (%eax),%edx
81001d4d:	8b 45 20             	mov    0x20(%ebp),%eax
81001d50:	8b 40 10             	mov    0x10(%eax),%eax
81001d53:	01 d0                	add    %edx,%eax
81001d55:	83 ec 08             	sub    $0x8,%esp
81001d58:	6a 3d                	push   $0x3d
81001d5a:	50                   	push   %eax
81001d5b:	e8 00 25 00 00       	call   81004260 <strchr>
81001d60:	83 c4 10             	add    $0x10,%esp
81001d63:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001d66:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001d6a:	75 4a                	jne    81001db6 <getopt_internal+0x46f>
81001d6c:	8b 45 20             	mov    0x20(%ebp),%eax
81001d6f:	8b 40 04             	mov    0x4(%eax),%eax
81001d72:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d79:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d7c:	01 d0                	add    %edx,%eax
81001d7e:	8b 00                	mov    (%eax),%eax
81001d80:	83 ec 0c             	sub    $0xc,%esp
81001d83:	50                   	push   %eax
81001d84:	e8 87 26 00 00       	call   81004410 <strlen>
81001d89:	83 c4 10             	add    $0x10,%esp
81001d8c:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001d8f:	8b 45 20             	mov    0x20(%ebp),%eax
81001d92:	8b 40 04             	mov    0x4(%eax),%eax
81001d95:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d9c:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d9f:	01 d0                	add    %edx,%eax
81001da1:	8b 10                	mov    (%eax),%edx
81001da3:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001da6:	01 d0                	add    %edx,%eax
81001da8:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001dab:	8b 45 20             	mov    0x20(%ebp),%eax
81001dae:	8b 40 10             	mov    0x10(%eax),%eax
81001db1:	29 45 ec             	sub    %eax,-0x14(%ebp)
81001db4:	eb 28                	jmp    81001dde <getopt_internal+0x497>
81001db6:	8b 45 20             	mov    0x20(%ebp),%eax
81001db9:	8b 40 04             	mov    0x4(%eax),%eax
81001dbc:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001dc3:	8b 45 0c             	mov    0xc(%ebp),%eax
81001dc6:	01 d0                	add    %edx,%eax
81001dc8:	8b 08                	mov    (%eax),%ecx
81001dca:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001dcd:	29 c8                	sub    %ecx,%eax
81001dcf:	89 c2                	mov    %eax,%edx
81001dd1:	8b 45 20             	mov    0x20(%ebp),%eax
81001dd4:	8b 48 10             	mov    0x10(%eax),%ecx
81001dd7:	89 d0                	mov    %edx,%eax
81001dd9:	29 c8                	sub    %ecx,%eax
81001ddb:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001dde:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001de5:	e9 95 01 00 00       	jmp    81001f7f <getopt_internal+0x638>
81001dea:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ded:	c1 e0 04             	shl    $0x4,%eax
81001df0:	89 c2                	mov    %eax,%edx
81001df2:	8b 45 14             	mov    0x14(%ebp),%eax
81001df5:	01 d0                	add    %edx,%eax
81001df7:	8b 00                	mov    (%eax),%eax
81001df9:	8b 55 20             	mov    0x20(%ebp),%edx
81001dfc:	8b 52 04             	mov    0x4(%edx),%edx
81001dff:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81001e06:	8b 55 0c             	mov    0xc(%ebp),%edx
81001e09:	01 ca                	add    %ecx,%edx
81001e0b:	8b 0a                	mov    (%edx),%ecx
81001e0d:	8b 55 20             	mov    0x20(%ebp),%edx
81001e10:	8b 52 10             	mov    0x10(%edx),%edx
81001e13:	01 ca                	add    %ecx,%edx
81001e15:	83 ec 04             	sub    $0x4,%esp
81001e18:	ff 75 ec             	push   -0x14(%ebp)
81001e1b:	50                   	push   %eax
81001e1c:	52                   	push   %edx
81001e1d:	e8 e3 12 00 00       	call   81003105 <memcmp>
81001e22:	83 c4 10             	add    $0x10,%esp
81001e25:	85 c0                	test   %eax,%eax
81001e27:	0f 85 4e 01 00 00    	jne    81001f7b <getopt_internal+0x634>
81001e2d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001e30:	c1 e0 04             	shl    $0x4,%eax
81001e33:	89 c2                	mov    %eax,%edx
81001e35:	8b 45 14             	mov    0x14(%ebp),%eax
81001e38:	01 d0                	add    %edx,%eax
81001e3a:	8b 00                	mov    (%eax),%eax
81001e3c:	83 ec 0c             	sub    $0xc,%esp
81001e3f:	50                   	push   %eax
81001e40:	e8 cb 25 00 00       	call   81004410 <strlen>
81001e45:	83 c4 10             	add    $0x10,%esp
81001e48:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001e4b:	75 0b                	jne    81001e58 <getopt_internal+0x511>
81001e4d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001e50:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001e53:	e9 3e 01 00 00       	jmp    81001f96 <getopt_internal+0x64f>
81001e58:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001e5c:	79 0b                	jns    81001e69 <getopt_internal+0x522>
81001e5e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001e61:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001e64:	e9 12 01 00 00       	jmp    81001f7b <getopt_internal+0x634>
81001e69:	8b 45 20             	mov    0x20(%ebp),%eax
81001e6c:	8b 40 08             	mov    0x8(%eax),%eax
81001e6f:	85 c0                	test   %eax,%eax
81001e71:	0f 84 ef 00 00 00    	je     81001f66 <getopt_internal+0x61f>
81001e77:	a1 84 72 00 81       	mov    0x81007284,%eax
81001e7c:	8b 50 0c             	mov    0xc(%eax),%edx
81001e7f:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e82:	8b 00                	mov    (%eax),%eax
81001e84:	83 ec 08             	sub    $0x8,%esp
81001e87:	52                   	push   %edx
81001e88:	50                   	push   %eax
81001e89:	e8 f2 2f 00 00       	call   81004e80 <fputs>
81001e8e:	83 c4 10             	add    $0x10,%esp
81001e91:	a1 84 72 00 81       	mov    0x81007284,%eax
81001e96:	8b 40 0c             	mov    0xc(%eax),%eax
81001e99:	83 ec 08             	sub    $0x8,%esp
81001e9c:	50                   	push   %eax
81001e9d:	68 5f 6a 00 81       	push   $0x81006a5f
81001ea2:	e8 d9 2f 00 00       	call   81004e80 <fputs>
81001ea7:	83 c4 10             	add    $0x10,%esp
81001eaa:	a1 84 72 00 81       	mov    0x81007284,%eax
81001eaf:	8b 50 0c             	mov    0xc(%eax),%edx
81001eb2:	8b 45 20             	mov    0x20(%ebp),%eax
81001eb5:	8b 40 04             	mov    0x4(%eax),%eax
81001eb8:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81001ebf:	8b 45 0c             	mov    0xc(%ebp),%eax
81001ec2:	01 c8                	add    %ecx,%eax
81001ec4:	8b 00                	mov    (%eax),%eax
81001ec6:	83 ec 08             	sub    $0x8,%esp
81001ec9:	52                   	push   %edx
81001eca:	50                   	push   %eax
81001ecb:	e8 b0 2f 00 00       	call   81004e80 <fputs>
81001ed0:	83 c4 10             	add    $0x10,%esp
81001ed3:	a1 84 72 00 81       	mov    0x81007284,%eax
81001ed8:	8b 40 0c             	mov    0xc(%eax),%eax
81001edb:	83 ec 08             	sub    $0x8,%esp
81001ede:	50                   	push   %eax
81001edf:	68 6a 6a 00 81       	push   $0x81006a6a
81001ee4:	e8 97 2f 00 00       	call   81004e80 <fputs>
81001ee9:	83 c4 10             	add    $0x10,%esp
81001eec:	a1 84 72 00 81       	mov    0x81007284,%eax
81001ef1:	8b 50 0c             	mov    0xc(%eax),%edx
81001ef4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001ef7:	c1 e0 04             	shl    $0x4,%eax
81001efa:	89 c1                	mov    %eax,%ecx
81001efc:	8b 45 14             	mov    0x14(%ebp),%eax
81001eff:	01 c8                	add    %ecx,%eax
81001f01:	8b 00                	mov    (%eax),%eax
81001f03:	83 ec 08             	sub    $0x8,%esp
81001f06:	52                   	push   %edx
81001f07:	50                   	push   %eax
81001f08:	e8 73 2f 00 00       	call   81004e80 <fputs>
81001f0d:	83 c4 10             	add    $0x10,%esp
81001f10:	a1 84 72 00 81       	mov    0x81007284,%eax
81001f15:	8b 40 0c             	mov    0xc(%eax),%eax
81001f18:	83 ec 08             	sub    $0x8,%esp
81001f1b:	50                   	push   %eax
81001f1c:	68 87 6a 00 81       	push   $0x81006a87
81001f21:	e8 5a 2f 00 00       	call   81004e80 <fputs>
81001f26:	83 c4 10             	add    $0x10,%esp
81001f29:	a1 84 72 00 81       	mov    0x81007284,%eax
81001f2e:	8b 50 0c             	mov    0xc(%eax),%edx
81001f31:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f34:	c1 e0 04             	shl    $0x4,%eax
81001f37:	89 c1                	mov    %eax,%ecx
81001f39:	8b 45 14             	mov    0x14(%ebp),%eax
81001f3c:	01 c8                	add    %ecx,%eax
81001f3e:	8b 00                	mov    (%eax),%eax
81001f40:	83 ec 08             	sub    $0x8,%esp
81001f43:	52                   	push   %edx
81001f44:	50                   	push   %eax
81001f45:	e8 36 2f 00 00       	call   81004e80 <fputs>
81001f4a:	83 c4 10             	add    $0x10,%esp
81001f4d:	a1 84 72 00 81       	mov    0x81007284,%eax
81001f52:	8b 40 0c             	mov    0xc(%eax),%eax
81001f55:	83 ec 08             	sub    $0x8,%esp
81001f58:	50                   	push   %eax
81001f59:	68 90 6a 00 81       	push   $0x81006a90
81001f5e:	e8 1d 2f 00 00       	call   81004e80 <fputs>
81001f63:	83 c4 10             	add    $0x10,%esp
81001f66:	8b 45 20             	mov    0x20(%ebp),%eax
81001f69:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81001f70:	8b 45 20             	mov    0x20(%ebp),%eax
81001f73:	8b 40 0c             	mov    0xc(%eax),%eax
81001f76:	e9 dc 04 00 00       	jmp    81002457 <getopt_internal+0xb10>
81001f7b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001f7f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f82:	c1 e0 04             	shl    $0x4,%eax
81001f85:	89 c2                	mov    %eax,%edx
81001f87:	8b 45 14             	mov    0x14(%ebp),%eax
81001f8a:	01 d0                	add    %edx,%eax
81001f8c:	8b 00                	mov    (%eax),%eax
81001f8e:	85 c0                	test   %eax,%eax
81001f90:	0f 85 54 fe ff ff    	jne    81001dea <getopt_internal+0x4a3>
81001f96:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001f9a:	78 13                	js     81001faf <getopt_internal+0x668>
81001f9c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001f9f:	c1 e0 04             	shl    $0x4,%eax
81001fa2:	89 c2                	mov    %eax,%edx
81001fa4:	8b 45 14             	mov    0x14(%ebp),%eax
81001fa7:	01 d0                	add    %edx,%eax
81001fa9:	8b 40 04             	mov    0x4(%eax),%eax
81001fac:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001faf:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001fb3:	0f 89 9a 01 00 00    	jns    81002153 <getopt_internal+0x80c>
81001fb9:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001fbd:	0f 84 90 01 00 00    	je     81002153 <getopt_internal+0x80c>
81001fc3:	8b 45 20             	mov    0x20(%ebp),%eax
81001fc6:	8b 40 04             	mov    0x4(%eax),%eax
81001fc9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001fd0:	8b 45 0c             	mov    0xc(%ebp),%eax
81001fd3:	01 d0                	add    %edx,%eax
81001fd5:	8b 10                	mov    (%eax),%edx
81001fd7:	8b 45 20             	mov    0x20(%ebp),%eax
81001fda:	8b 40 10             	mov    0x10(%eax),%eax
81001fdd:	01 d0                	add    %edx,%eax
81001fdf:	0f b6 00             	movzbl (%eax),%eax
81001fe2:	0f be c0             	movsbl %al,%eax
81001fe5:	83 ec 08             	sub    $0x8,%esp
81001fe8:	50                   	push   %eax
81001fe9:	ff 75 10             	push   0x10(%ebp)
81001fec:	e8 6f 22 00 00       	call   81004260 <strchr>
81001ff1:	83 c4 10             	add    $0x10,%esp
81001ff4:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001ff7:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81001ffb:	0f 85 f1 00 00 00    	jne    810020f2 <getopt_internal+0x7ab>
81002001:	8b 45 20             	mov    0x20(%ebp),%eax
81002004:	8b 40 08             	mov    0x8(%eax),%eax
81002007:	85 c0                	test   %eax,%eax
81002009:	0f 84 83 00 00 00    	je     81002092 <getopt_internal+0x74b>
8100200f:	a1 84 72 00 81       	mov    0x81007284,%eax
81002014:	8b 50 0c             	mov    0xc(%eax),%edx
81002017:	8b 45 0c             	mov    0xc(%ebp),%eax
8100201a:	8b 00                	mov    (%eax),%eax
8100201c:	83 ec 08             	sub    $0x8,%esp
8100201f:	52                   	push   %edx
81002020:	50                   	push   %eax
81002021:	e8 5a 2e 00 00       	call   81004e80 <fputs>
81002026:	83 c4 10             	add    $0x10,%esp
81002029:	a1 84 72 00 81       	mov    0x81007284,%eax
8100202e:	8b 40 0c             	mov    0xc(%eax),%eax
81002031:	83 ec 08             	sub    $0x8,%esp
81002034:	50                   	push   %eax
81002035:	68 94 6a 00 81       	push   $0x81006a94
8100203a:	e8 41 2e 00 00       	call   81004e80 <fputs>
8100203f:	83 c4 10             	add    $0x10,%esp
81002042:	a1 84 72 00 81       	mov    0x81007284,%eax
81002047:	8b 50 0c             	mov    0xc(%eax),%edx
8100204a:	8b 45 20             	mov    0x20(%ebp),%eax
8100204d:	8b 40 04             	mov    0x4(%eax),%eax
81002050:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81002057:	8b 45 0c             	mov    0xc(%ebp),%eax
8100205a:	01 c8                	add    %ecx,%eax
8100205c:	8b 08                	mov    (%eax),%ecx
8100205e:	8b 45 20             	mov    0x20(%ebp),%eax
81002061:	8b 40 10             	mov    0x10(%eax),%eax
81002064:	01 c8                	add    %ecx,%eax
81002066:	0f b6 00             	movzbl (%eax),%eax
81002069:	0f be c0             	movsbl %al,%eax
8100206c:	83 ec 08             	sub    $0x8,%esp
8100206f:	52                   	push   %edx
81002070:	50                   	push   %eax
81002071:	e8 16 2d 00 00       	call   81004d8c <fputc>
81002076:	83 c4 10             	add    $0x10,%esp
81002079:	a1 84 72 00 81       	mov    0x81007284,%eax
8100207e:	8b 40 0c             	mov    0xc(%eax),%eax
81002081:	83 ec 08             	sub    $0x8,%esp
81002084:	50                   	push   %eax
81002085:	68 ab 6a 00 81       	push   $0x81006aab
8100208a:	e8 f1 2d 00 00       	call   81004e80 <fputs>
8100208f:	83 c4 10             	add    $0x10,%esp
81002092:	8b 45 20             	mov    0x20(%ebp),%eax
81002095:	8b 40 10             	mov    0x10(%eax),%eax
81002098:	8d 50 01             	lea    0x1(%eax),%edx
8100209b:	8b 45 20             	mov    0x20(%ebp),%eax
8100209e:	89 50 10             	mov    %edx,0x10(%eax)
810020a1:	8b 45 20             	mov    0x20(%ebp),%eax
810020a4:	8b 40 04             	mov    0x4(%eax),%eax
810020a7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810020ae:	8b 45 0c             	mov    0xc(%ebp),%eax
810020b1:	01 d0                	add    %edx,%eax
810020b3:	8b 10                	mov    (%eax),%edx
810020b5:	8b 45 20             	mov    0x20(%ebp),%eax
810020b8:	8b 40 10             	mov    0x10(%eax),%eax
810020bb:	01 d0                	add    %edx,%eax
810020bd:	0f b6 00             	movzbl (%eax),%eax
810020c0:	84 c0                	test   %al,%al
810020c2:	75 19                	jne    810020dd <getopt_internal+0x796>
810020c4:	8b 45 20             	mov    0x20(%ebp),%eax
810020c7:	8b 40 04             	mov    0x4(%eax),%eax
810020ca:	8d 50 01             	lea    0x1(%eax),%edx
810020cd:	8b 45 20             	mov    0x20(%ebp),%eax
810020d0:	89 50 04             	mov    %edx,0x4(%eax)
810020d3:	8b 45 20             	mov    0x20(%ebp),%eax
810020d6:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810020dd:	8b 45 20             	mov    0x20(%ebp),%eax
810020e0:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
810020e7:	8b 45 20             	mov    0x20(%ebp),%eax
810020ea:	8b 40 0c             	mov    0xc(%eax),%eax
810020ed:	e9 65 03 00 00       	jmp    81002457 <getopt_internal+0xb10>
810020f2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810020f5:	83 c0 01             	add    $0x1,%eax
810020f8:	0f b6 00             	movzbl (%eax),%eax
810020fb:	3c 3a                	cmp    $0x3a,%al
810020fd:	75 1b                	jne    8100211a <getopt_internal+0x7d3>
810020ff:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002102:	83 c0 02             	add    $0x2,%eax
81002105:	0f b6 00             	movzbl (%eax),%eax
81002108:	3c 3a                	cmp    $0x3a,%al
8100210a:	75 07                	jne    81002113 <getopt_internal+0x7cc>
8100210c:	b8 02 00 00 00       	mov    $0x2,%eax
81002111:	eb 0c                	jmp    8100211f <getopt_internal+0x7d8>
81002113:	b8 01 00 00 00       	mov    $0x1,%eax
81002118:	eb 05                	jmp    8100211f <getopt_internal+0x7d8>
8100211a:	b8 00 00 00 00       	mov    $0x0,%eax
8100211f:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002122:	8b 45 20             	mov    0x20(%ebp),%eax
81002125:	8b 40 04             	mov    0x4(%eax),%eax
81002128:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100212f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002132:	01 d0                	add    %edx,%eax
81002134:	8b 10                	mov    (%eax),%edx
81002136:	8b 45 20             	mov    0x20(%ebp),%eax
81002139:	8b 40 10             	mov    0x10(%eax),%eax
8100213c:	83 c0 01             	add    $0x1,%eax
8100213f:	01 d0                	add    %edx,%eax
81002141:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002144:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002147:	0f b6 00             	movzbl (%eax),%eax
8100214a:	0f be d0             	movsbl %al,%edx
8100214d:	8b 45 20             	mov    0x20(%ebp),%eax
81002150:	89 50 0c             	mov    %edx,0xc(%eax)
81002153:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
8100215a:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
8100215e:	74 40                	je     810021a0 <getopt_internal+0x859>
81002160:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
81002164:	0f 85 b0 01 00 00    	jne    8100231a <getopt_internal+0x9d3>
8100216a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100216d:	0f b6 00             	movzbl (%eax),%eax
81002170:	3c 3d                	cmp    $0x3d,%al
81002172:	75 04                	jne    81002178 <getopt_internal+0x831>
81002174:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81002178:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100217b:	0f b6 00             	movzbl (%eax),%eax
8100217e:	84 c0                	test   %al,%al
81002180:	74 05                	je     81002187 <getopt_internal+0x840>
81002182:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002185:	eb 05                	jmp    8100218c <getopt_internal+0x845>
81002187:	b8 00 00 00 00       	mov    $0x0,%eax
8100218c:	8b 55 20             	mov    0x20(%ebp),%edx
8100218f:	89 02                	mov    %eax,(%edx)
81002191:	8b 45 20             	mov    0x20(%ebp),%eax
81002194:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100219b:	e9 d2 01 00 00       	jmp    81002372 <getopt_internal+0xa2b>
810021a0:	8b 45 e8             	mov    -0x18(%ebp),%eax
810021a3:	0f b6 00             	movzbl (%eax),%eax
810021a6:	3c 3d                	cmp    $0x3d,%al
810021a8:	75 04                	jne    810021ae <getopt_internal+0x867>
810021aa:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
810021ae:	8b 45 e8             	mov    -0x18(%ebp),%eax
810021b1:	0f b6 00             	movzbl (%eax),%eax
810021b4:	84 c0                	test   %al,%al
810021b6:	74 17                	je     810021cf <getopt_internal+0x888>
810021b8:	8b 45 20             	mov    0x20(%ebp),%eax
810021bb:	8b 55 e8             	mov    -0x18(%ebp),%edx
810021be:	89 10                	mov    %edx,(%eax)
810021c0:	8b 45 20             	mov    0x20(%ebp),%eax
810021c3:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810021ca:	e9 a3 01 00 00       	jmp    81002372 <getopt_internal+0xa2b>
810021cf:	8b 45 20             	mov    0x20(%ebp),%eax
810021d2:	8b 40 04             	mov    0x4(%eax),%eax
810021d5:	83 c0 01             	add    $0x1,%eax
810021d8:	39 45 08             	cmp    %eax,0x8(%ebp)
810021db:	0f 8f 0a 01 00 00    	jg     810022eb <getopt_internal+0x9a4>
810021e1:	8b 45 20             	mov    0x20(%ebp),%eax
810021e4:	8b 40 08             	mov    0x8(%eax),%eax
810021e7:	85 c0                	test   %eax,%eax
810021e9:	0f 84 d3 00 00 00    	je     810022c2 <getopt_internal+0x97b>
810021ef:	a1 84 72 00 81       	mov    0x81007284,%eax
810021f4:	8b 50 0c             	mov    0xc(%eax),%edx
810021f7:	8b 45 0c             	mov    0xc(%ebp),%eax
810021fa:	8b 00                	mov    (%eax),%eax
810021fc:	83 ec 08             	sub    $0x8,%esp
810021ff:	52                   	push   %edx
81002200:	50                   	push   %eax
81002201:	e8 7a 2c 00 00       	call   81004e80 <fputs>
81002206:	83 c4 10             	add    $0x10,%esp
81002209:	a1 84 72 00 81       	mov    0x81007284,%eax
8100220e:	8b 40 0c             	mov    0xc(%eax),%eax
81002211:	83 ec 08             	sub    $0x8,%esp
81002214:	50                   	push   %eax
81002215:	68 b0 6a 00 81       	push   $0x81006ab0
8100221a:	e8 61 2c 00 00       	call   81004e80 <fputs>
8100221f:	83 c4 10             	add    $0x10,%esp
81002222:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002226:	78 54                	js     8100227c <getopt_internal+0x935>
81002228:	a1 84 72 00 81       	mov    0x81007284,%eax
8100222d:	8b 40 0c             	mov    0xc(%eax),%eax
81002230:	83 ec 08             	sub    $0x8,%esp
81002233:	50                   	push   %eax
81002234:	6a 2d                	push   $0x2d
81002236:	e8 51 2b 00 00       	call   81004d8c <fputc>
8100223b:	83 c4 10             	add    $0x10,%esp
8100223e:	a1 84 72 00 81       	mov    0x81007284,%eax
81002243:	8b 50 0c             	mov    0xc(%eax),%edx
81002246:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002249:	c1 e0 04             	shl    $0x4,%eax
8100224c:	89 c1                	mov    %eax,%ecx
8100224e:	8b 45 14             	mov    0x14(%ebp),%eax
81002251:	01 c8                	add    %ecx,%eax
81002253:	8b 00                	mov    (%eax),%eax
81002255:	83 ec 08             	sub    $0x8,%esp
81002258:	52                   	push   %edx
81002259:	50                   	push   %eax
8100225a:	e8 21 2c 00 00       	call   81004e80 <fputs>
8100225f:	83 c4 10             	add    $0x10,%esp
81002262:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81002266:	74 07                	je     8100226f <getopt_internal+0x928>
81002268:	ba 3a 00 00 00       	mov    $0x3a,%edx
8100226d:	eb 05                	jmp    81002274 <getopt_internal+0x92d>
8100226f:	ba 3f 00 00 00       	mov    $0x3f,%edx
81002274:	8b 45 20             	mov    0x20(%ebp),%eax
81002277:	89 50 0c             	mov    %edx,0xc(%eax)
8100227a:	eb 2d                	jmp    810022a9 <getopt_internal+0x962>
8100227c:	a1 84 72 00 81       	mov    0x81007284,%eax
81002281:	8b 50 0c             	mov    0xc(%eax),%edx
81002284:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002287:	0f b6 00             	movzbl (%eax),%eax
8100228a:	0f be c0             	movsbl %al,%eax
8100228d:	83 ec 08             	sub    $0x8,%esp
81002290:	52                   	push   %edx
81002291:	50                   	push   %eax
81002292:	e8 f5 2a 00 00       	call   81004d8c <fputc>
81002297:	83 c4 10             	add    $0x10,%esp
8100229a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100229d:	0f b6 00             	movzbl (%eax),%eax
810022a0:	0f be d0             	movsbl %al,%edx
810022a3:	8b 45 20             	mov    0x20(%ebp),%eax
810022a6:	89 50 0c             	mov    %edx,0xc(%eax)
810022a9:	a1 84 72 00 81       	mov    0x81007284,%eax
810022ae:	8b 40 0c             	mov    0xc(%eax),%eax
810022b1:	83 ec 08             	sub    $0x8,%esp
810022b4:	50                   	push   %eax
810022b5:	68 ab 6a 00 81       	push   $0x81006aab
810022ba:	e8 c1 2b 00 00       	call   81004e80 <fputs>
810022bf:	83 c4 10             	add    $0x10,%esp
810022c2:	8b 45 20             	mov    0x20(%ebp),%eax
810022c5:	8b 40 04             	mov    0x4(%eax),%eax
810022c8:	8d 50 01             	lea    0x1(%eax),%edx
810022cb:	8b 45 20             	mov    0x20(%ebp),%eax
810022ce:	89 50 04             	mov    %edx,0x4(%eax)
810022d1:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
810022d5:	74 0a                	je     810022e1 <getopt_internal+0x99a>
810022d7:	b8 3a 00 00 00       	mov    $0x3a,%eax
810022dc:	e9 76 01 00 00       	jmp    81002457 <getopt_internal+0xb10>
810022e1:	b8 3f 00 00 00       	mov    $0x3f,%eax
810022e6:	e9 6c 01 00 00       	jmp    81002457 <getopt_internal+0xb10>
810022eb:	8b 45 20             	mov    0x20(%ebp),%eax
810022ee:	8b 40 04             	mov    0x4(%eax),%eax
810022f1:	83 c0 01             	add    $0x1,%eax
810022f4:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810022fb:	8b 45 0c             	mov    0xc(%ebp),%eax
810022fe:	01 d0                	add    %edx,%eax
81002300:	8b 10                	mov    (%eax),%edx
81002302:	8b 45 20             	mov    0x20(%ebp),%eax
81002305:	89 10                	mov    %edx,(%eax)
81002307:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
8100230e:	8b 45 20             	mov    0x20(%ebp),%eax
81002311:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002318:	eb 58                	jmp    81002372 <getopt_internal+0xa2b>
8100231a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100231e:	79 3e                	jns    8100235e <getopt_internal+0xa17>
81002320:	8b 45 20             	mov    0x20(%ebp),%eax
81002323:	8b 40 10             	mov    0x10(%eax),%eax
81002326:	8d 50 01             	lea    0x1(%eax),%edx
81002329:	8b 45 20             	mov    0x20(%ebp),%eax
8100232c:	89 50 10             	mov    %edx,0x10(%eax)
8100232f:	8b 45 20             	mov    0x20(%ebp),%eax
81002332:	8b 40 04             	mov    0x4(%eax),%eax
81002335:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100233c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100233f:	01 d0                	add    %edx,%eax
81002341:	8b 10                	mov    (%eax),%edx
81002343:	8b 45 20             	mov    0x20(%ebp),%eax
81002346:	8b 40 10             	mov    0x10(%eax),%eax
81002349:	01 d0                	add    %edx,%eax
8100234b:	0f b6 00             	movzbl (%eax),%eax
8100234e:	84 c0                	test   %al,%al
81002350:	75 16                	jne    81002368 <getopt_internal+0xa21>
81002352:	8b 45 20             	mov    0x20(%ebp),%eax
81002355:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100235c:	eb 0a                	jmp    81002368 <getopt_internal+0xa21>
8100235e:	8b 45 20             	mov    0x20(%ebp),%eax
81002361:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002368:	8b 45 20             	mov    0x20(%ebp),%eax
8100236b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81002371:	90                   	nop
81002372:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002376:	75 57                	jne    810023cf <getopt_internal+0xa88>
81002378:	8b 45 20             	mov    0x20(%ebp),%eax
8100237b:	8b 40 10             	mov    0x10(%eax),%eax
8100237e:	83 f8 01             	cmp    $0x1,%eax
81002381:	75 4c                	jne    810023cf <getopt_internal+0xa88>
81002383:	8b 45 20             	mov    0x20(%ebp),%eax
81002386:	8b 40 18             	mov    0x18(%eax),%eax
81002389:	85 c0                	test   %eax,%eax
8100238b:	74 42                	je     810023cf <getopt_internal+0xa88>
8100238d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002390:	8d 48 01             	lea    0x1(%eax),%ecx
81002393:	8b 45 20             	mov    0x20(%ebp),%eax
81002396:	8b 40 18             	mov    0x18(%eax),%eax
81002399:	8b 55 20             	mov    0x20(%ebp),%edx
8100239c:	8b 52 14             	mov    0x14(%edx),%edx
8100239f:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
810023a6:	8b 55 0c             	mov    0xc(%ebp),%edx
810023a9:	01 da                	add    %ebx,%edx
810023ab:	83 ec 04             	sub    $0x4,%esp
810023ae:	51                   	push   %ecx
810023af:	50                   	push   %eax
810023b0:	52                   	push   %edx
810023b1:	e8 7f f4 ff ff       	call   81001835 <permute>
810023b6:	83 c4 10             	add    $0x10,%esp
810023b9:	8b 45 20             	mov    0x20(%ebp),%eax
810023bc:	8b 40 14             	mov    0x14(%eax),%eax
810023bf:	8d 50 01             	lea    0x1(%eax),%edx
810023c2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810023c5:	01 c2                	add    %eax,%edx
810023c7:	8b 45 20             	mov    0x20(%ebp),%eax
810023ca:	89 50 04             	mov    %edx,0x4(%eax)
810023cd:	eb 1f                	jmp    810023ee <getopt_internal+0xaa7>
810023cf:	8b 45 20             	mov    0x20(%ebp),%eax
810023d2:	8b 40 10             	mov    0x10(%eax),%eax
810023d5:	83 f8 01             	cmp    $0x1,%eax
810023d8:	75 14                	jne    810023ee <getopt_internal+0xaa7>
810023da:	8b 45 20             	mov    0x20(%ebp),%eax
810023dd:	8b 40 04             	mov    0x4(%eax),%eax
810023e0:	8d 50 01             	lea    0x1(%eax),%edx
810023e3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810023e6:	01 c2                	add    %eax,%edx
810023e8:	8b 45 20             	mov    0x20(%ebp),%eax
810023eb:	89 50 04             	mov    %edx,0x4(%eax)
810023ee:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810023f2:	78 5d                	js     81002451 <getopt_internal+0xb0a>
810023f4:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
810023f8:	74 08                	je     81002402 <getopt_internal+0xabb>
810023fa:	8b 45 18             	mov    0x18(%ebp),%eax
810023fd:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002400:	89 10                	mov    %edx,(%eax)
81002402:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002405:	c1 e0 04             	shl    $0x4,%eax
81002408:	89 c2                	mov    %eax,%edx
8100240a:	8b 45 14             	mov    0x14(%ebp),%eax
8100240d:	01 d0                	add    %edx,%eax
8100240f:	8b 40 08             	mov    0x8(%eax),%eax
81002412:	85 c0                	test   %eax,%eax
81002414:	74 29                	je     8100243f <getopt_internal+0xaf8>
81002416:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002419:	c1 e0 04             	shl    $0x4,%eax
8100241c:	89 c2                	mov    %eax,%edx
8100241e:	8b 45 14             	mov    0x14(%ebp),%eax
81002421:	01 c2                	add    %eax,%edx
81002423:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002426:	c1 e0 04             	shl    $0x4,%eax
81002429:	89 c1                	mov    %eax,%ecx
8100242b:	8b 45 14             	mov    0x14(%ebp),%eax
8100242e:	01 c8                	add    %ecx,%eax
81002430:	8b 40 08             	mov    0x8(%eax),%eax
81002433:	8b 52 0c             	mov    0xc(%edx),%edx
81002436:	89 10                	mov    %edx,(%eax)
81002438:	b8 00 00 00 00       	mov    $0x0,%eax
8100243d:	eb 18                	jmp    81002457 <getopt_internal+0xb10>
8100243f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002442:	c1 e0 04             	shl    $0x4,%eax
81002445:	89 c2                	mov    %eax,%edx
81002447:	8b 45 14             	mov    0x14(%ebp),%eax
8100244a:	01 d0                	add    %edx,%eax
8100244c:	8b 40 0c             	mov    0xc(%eax),%eax
8100244f:	eb 06                	jmp    81002457 <getopt_internal+0xb10>
81002451:	8b 45 20             	mov    0x20(%ebp),%eax
81002454:	8b 40 0c             	mov    0xc(%eax),%eax
81002457:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100245a:	c9                   	leave  
8100245b:	c3                   	ret    

8100245c <getopt>:
8100245c:	55                   	push   %ebp
8100245d:	89 e5                	mov    %esp,%ebp
8100245f:	83 ec 28             	sub    $0x28,%esp
81002462:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002465:	50                   	push   %eax
81002466:	e8 31 f4 ff ff       	call   8100189c <read_globals>
8100246b:	83 c4 04             	add    $0x4,%esp
8100246e:	83 ec 04             	sub    $0x4,%esp
81002471:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002474:	50                   	push   %eax
81002475:	6a 00                	push   $0x0
81002477:	6a 00                	push   $0x0
81002479:	6a 00                	push   $0x0
8100247b:	ff 75 10             	push   0x10(%ebp)
8100247e:	ff 75 0c             	push   0xc(%ebp)
81002481:	ff 75 08             	push   0x8(%ebp)
81002484:	e8 be f4 ff ff       	call   81001947 <getopt_internal>
81002489:	83 c4 20             	add    $0x20,%esp
8100248c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100248f:	83 ec 0c             	sub    $0xc,%esp
81002492:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002495:	50                   	push   %eax
81002496:	e8 5a f4 ff ff       	call   810018f5 <write_globals>
8100249b:	83 c4 10             	add    $0x10,%esp
8100249e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810024a1:	c9                   	leave  
810024a2:	c3                   	ret    

810024a3 <getopt_long>:
810024a3:	55                   	push   %ebp
810024a4:	89 e5                	mov    %esp,%ebp
810024a6:	83 ec 28             	sub    $0x28,%esp
810024a9:	8d 45 d8             	lea    -0x28(%ebp),%eax
810024ac:	50                   	push   %eax
810024ad:	e8 ea f3 ff ff       	call   8100189c <read_globals>
810024b2:	83 c4 04             	add    $0x4,%esp
810024b5:	83 ec 04             	sub    $0x4,%esp
810024b8:	8d 45 d8             	lea    -0x28(%ebp),%eax
810024bb:	50                   	push   %eax
810024bc:	6a 00                	push   $0x0
810024be:	ff 75 18             	push   0x18(%ebp)
810024c1:	ff 75 14             	push   0x14(%ebp)
810024c4:	ff 75 10             	push   0x10(%ebp)
810024c7:	ff 75 0c             	push   0xc(%ebp)
810024ca:	ff 75 08             	push   0x8(%ebp)
810024cd:	e8 75 f4 ff ff       	call   81001947 <getopt_internal>
810024d2:	83 c4 20             	add    $0x20,%esp
810024d5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810024d8:	83 ec 0c             	sub    $0xc,%esp
810024db:	8d 45 d8             	lea    -0x28(%ebp),%eax
810024de:	50                   	push   %eax
810024df:	e8 11 f4 ff ff       	call   810018f5 <write_globals>
810024e4:	83 c4 10             	add    $0x10,%esp
810024e7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810024ea:	c9                   	leave  
810024eb:	c3                   	ret    

810024ec <getopt_long_only>:
810024ec:	55                   	push   %ebp
810024ed:	89 e5                	mov    %esp,%ebp
810024ef:	83 ec 28             	sub    $0x28,%esp
810024f2:	8d 45 d8             	lea    -0x28(%ebp),%eax
810024f5:	50                   	push   %eax
810024f6:	e8 a1 f3 ff ff       	call   8100189c <read_globals>
810024fb:	83 c4 04             	add    $0x4,%esp
810024fe:	83 ec 04             	sub    $0x4,%esp
81002501:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002504:	50                   	push   %eax
81002505:	6a 01                	push   $0x1
81002507:	ff 75 18             	push   0x18(%ebp)
8100250a:	ff 75 14             	push   0x14(%ebp)
8100250d:	ff 75 10             	push   0x10(%ebp)
81002510:	ff 75 0c             	push   0xc(%ebp)
81002513:	ff 75 08             	push   0x8(%ebp)
81002516:	e8 2c f4 ff ff       	call   81001947 <getopt_internal>
8100251b:	83 c4 20             	add    $0x20,%esp
8100251e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002521:	83 ec 0c             	sub    $0xc,%esp
81002524:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002527:	50                   	push   %eax
81002528:	e8 c8 f3 ff ff       	call   810018f5 <write_globals>
8100252d:	83 c4 10             	add    $0x10,%esp
81002530:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002533:	c9                   	leave  
81002534:	c3                   	ret    

81002535 <__getopt_r>:
81002535:	55                   	push   %ebp
81002536:	89 e5                	mov    %esp,%ebp
81002538:	83 ec 08             	sub    $0x8,%esp
8100253b:	83 ec 04             	sub    $0x4,%esp
8100253e:	ff 75 14             	push   0x14(%ebp)
81002541:	6a 00                	push   $0x0
81002543:	6a 00                	push   $0x0
81002545:	6a 00                	push   $0x0
81002547:	ff 75 10             	push   0x10(%ebp)
8100254a:	ff 75 0c             	push   0xc(%ebp)
8100254d:	ff 75 08             	push   0x8(%ebp)
81002550:	e8 f2 f3 ff ff       	call   81001947 <getopt_internal>
81002555:	83 c4 20             	add    $0x20,%esp
81002558:	c9                   	leave  
81002559:	c3                   	ret    

8100255a <__getopt_long_r>:
8100255a:	55                   	push   %ebp
8100255b:	89 e5                	mov    %esp,%ebp
8100255d:	83 ec 08             	sub    $0x8,%esp
81002560:	83 ec 04             	sub    $0x4,%esp
81002563:	ff 75 1c             	push   0x1c(%ebp)
81002566:	6a 00                	push   $0x0
81002568:	ff 75 18             	push   0x18(%ebp)
8100256b:	ff 75 14             	push   0x14(%ebp)
8100256e:	ff 75 10             	push   0x10(%ebp)
81002571:	ff 75 0c             	push   0xc(%ebp)
81002574:	ff 75 08             	push   0x8(%ebp)
81002577:	e8 cb f3 ff ff       	call   81001947 <getopt_internal>
8100257c:	83 c4 20             	add    $0x20,%esp
8100257f:	c9                   	leave  
81002580:	c3                   	ret    

81002581 <__getopt_long_only_r>:
81002581:	55                   	push   %ebp
81002582:	89 e5                	mov    %esp,%ebp
81002584:	83 ec 08             	sub    $0x8,%esp
81002587:	83 ec 04             	sub    $0x4,%esp
8100258a:	ff 75 1c             	push   0x1c(%ebp)
8100258d:	6a 01                	push   $0x1
8100258f:	ff 75 18             	push   0x18(%ebp)
81002592:	ff 75 14             	push   0x14(%ebp)
81002595:	ff 75 10             	push   0x10(%ebp)
81002598:	ff 75 0c             	push   0xc(%ebp)
8100259b:	ff 75 08             	push   0x8(%ebp)
8100259e:	e8 a4 f3 ff ff       	call   81001947 <getopt_internal>
810025a3:	83 c4 20             	add    $0x20,%esp
810025a6:	c9                   	leave  
810025a7:	c3                   	ret    

810025a8 <__getreent>:
810025a8:	55                   	push   %ebp
810025a9:	89 e5                	mov    %esp,%ebp
810025ab:	a1 84 72 00 81       	mov    0x81007284,%eax
810025b0:	5d                   	pop    %ebp
810025b1:	c3                   	ret    

810025b2 <malloc_extend_top>:
810025b2:	55                   	push   %ebp
810025b3:	89 e5                	mov    %esp,%ebp
810025b5:	83 ec 38             	sub    $0x38,%esp
810025b8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810025bf:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
810025c4:	8b 40 08             	mov    0x8(%eax),%eax
810025c7:	89 45 e0             	mov    %eax,-0x20(%ebp)
810025ca:	8b 45 e0             	mov    -0x20(%ebp),%eax
810025cd:	8b 40 04             	mov    0x4(%eax),%eax
810025d0:	83 e0 fc             	and    $0xfffffffc,%eax
810025d3:	89 45 dc             	mov    %eax,-0x24(%ebp)
810025d6:	8b 55 e0             	mov    -0x20(%ebp),%edx
810025d9:	8b 45 dc             	mov    -0x24(%ebp),%eax
810025dc:	01 d0                	add    %edx,%eax
810025de:	89 45 d8             	mov    %eax,-0x28(%ebp)
810025e1:	8b 15 80 7e 00 81    	mov    0x81007e80,%edx
810025e7:	8b 45 0c             	mov    0xc(%ebp),%eax
810025ea:	01 d0                	add    %edx,%eax
810025ec:	83 c0 10             	add    $0x10,%eax
810025ef:	89 45 e8             	mov    %eax,-0x18(%ebp)
810025f2:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
810025f9:	a1 ac 76 00 81       	mov    0x810076ac,%eax
810025fe:	83 f8 ff             	cmp    $0xffffffff,%eax
81002601:	74 15                	je     81002618 <malloc_extend_top+0x66>
81002603:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002606:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002609:	01 d0                	add    %edx,%eax
8100260b:	8d 50 ff             	lea    -0x1(%eax),%edx
8100260e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002611:	f7 d8                	neg    %eax
81002613:	21 d0                	and    %edx,%eax
81002615:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002618:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100261b:	83 ec 08             	sub    $0x8,%esp
8100261e:	50                   	push   %eax
8100261f:	ff 75 08             	push   0x8(%ebp)
81002622:	e8 de 1a 00 00       	call   81004105 <_sbrk_r>
81002627:	83 c4 10             	add    $0x10,%esp
8100262a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100262d:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81002631:	0f 84 0b 02 00 00    	je     81002842 <malloc_extend_top+0x290>
81002637:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100263a:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100263d:	73 0e                	jae    8100264d <malloc_extend_top+0x9b>
8100263f:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81002644:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81002647:	0f 85 f5 01 00 00    	jne    81002842 <malloc_extend_top+0x290>
8100264d:	a1 a0 7e 00 81       	mov    0x81007ea0,%eax
81002652:	89 c2                	mov    %eax,%edx
81002654:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002657:	01 d0                	add    %edx,%eax
81002659:	a3 a0 7e 00 81       	mov    %eax,0x81007ea0
8100265e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002661:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81002664:	75 30                	jne    81002696 <malloc_extend_top+0xe4>
81002666:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002669:	8d 50 ff             	lea    -0x1(%eax),%edx
8100266c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100266f:	21 d0                	and    %edx,%eax
81002671:	85 c0                	test   %eax,%eax
81002673:	75 21                	jne    81002696 <malloc_extend_top+0xe4>
81002675:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002678:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100267b:	01 d0                	add    %edx,%eax
8100267d:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002680:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81002685:	8b 40 08             	mov    0x8(%eax),%eax
81002688:	8b 55 d0             	mov    -0x30(%ebp),%edx
8100268b:	83 ca 01             	or     $0x1,%edx
8100268e:	89 50 04             	mov    %edx,0x4(%eax)
81002691:	e9 76 01 00 00       	jmp    8100280c <malloc_extend_top+0x25a>
81002696:	a1 ac 76 00 81       	mov    0x810076ac,%eax
8100269b:	83 f8 ff             	cmp    $0xffffffff,%eax
8100269e:	75 0a                	jne    810026aa <malloc_extend_top+0xf8>
810026a0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026a3:	a3 ac 76 00 81       	mov    %eax,0x810076ac
810026a8:	eb 13                	jmp    810026bd <malloc_extend_top+0x10b>
810026aa:	8b 15 a0 7e 00 81    	mov    0x81007ea0,%edx
810026b0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026b3:	2b 45 d8             	sub    -0x28(%ebp),%eax
810026b6:	01 d0                	add    %edx,%eax
810026b8:	a3 a0 7e 00 81       	mov    %eax,0x81007ea0
810026bd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026c0:	83 c0 08             	add    $0x8,%eax
810026c3:	83 e0 07             	and    $0x7,%eax
810026c6:	89 45 cc             	mov    %eax,-0x34(%ebp)
810026c9:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810026cd:	74 13                	je     810026e2 <malloc_extend_top+0x130>
810026cf:	b8 08 00 00 00       	mov    $0x8,%eax
810026d4:	2b 45 cc             	sub    -0x34(%ebp),%eax
810026d7:	89 45 f0             	mov    %eax,-0x10(%ebp)
810026da:	8b 45 f0             	mov    -0x10(%ebp),%eax
810026dd:	01 45 f4             	add    %eax,-0xc(%ebp)
810026e0:	eb 07                	jmp    810026e9 <malloc_extend_top+0x137>
810026e2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810026e9:	8b 55 f4             	mov    -0xc(%ebp),%edx
810026ec:	8b 45 e8             	mov    -0x18(%ebp),%eax
810026ef:	01 d0                	add    %edx,%eax
810026f1:	89 c2                	mov    %eax,%edx
810026f3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810026f6:	83 e8 01             	sub    $0x1,%eax
810026f9:	21 c2                	and    %eax,%edx
810026fb:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810026fe:	29 d0                	sub    %edx,%eax
81002700:	01 45 f0             	add    %eax,-0x10(%ebp)
81002703:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002706:	83 e8 01             	sub    $0x1,%eax
81002709:	21 45 f0             	and    %eax,-0x10(%ebp)
8100270c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100270f:	83 ec 08             	sub    $0x8,%esp
81002712:	50                   	push   %eax
81002713:	ff 75 08             	push   0x8(%ebp)
81002716:	e8 ea 19 00 00       	call   81004105 <_sbrk_r>
8100271b:	83 c4 10             	add    $0x10,%esp
8100271e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002721:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
81002725:	75 28                	jne    8100274f <malloc_extend_top+0x19d>
81002727:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100272e:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002735:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002738:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100273b:	01 d0                	add    %edx,%eax
8100273d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002740:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81002744:	74 09                	je     8100274f <malloc_extend_top+0x19d>
81002746:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002749:	83 e8 08             	sub    $0x8,%eax
8100274c:	01 45 ec             	add    %eax,-0x14(%ebp)
8100274f:	a1 a0 7e 00 81       	mov    0x81007ea0,%eax
81002754:	89 c2                	mov    %eax,%edx
81002756:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002759:	01 d0                	add    %edx,%eax
8100275b:	a3 a0 7e 00 81       	mov    %eax,0x81007ea0
81002760:	ba a0 72 00 81       	mov    $0x810072a0,%edx
81002765:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002768:	89 42 08             	mov    %eax,0x8(%edx)
8100276b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100276e:	2b 45 f4             	sub    -0xc(%ebp),%eax
81002771:	89 c2                	mov    %eax,%edx
81002773:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002776:	01 d0                	add    %edx,%eax
81002778:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100277b:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81002780:	8b 40 08             	mov    0x8(%eax),%eax
81002783:	8b 55 d0             	mov    -0x30(%ebp),%edx
81002786:	83 ca 01             	or     $0x1,%edx
81002789:	89 50 04             	mov    %edx,0x4(%eax)
8100278c:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81002791:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81002794:	74 76                	je     8100280c <malloc_extend_top+0x25a>
81002796:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
8100279a:	77 14                	ja     810027b0 <malloc_extend_top+0x1fe>
8100279c:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
810027a1:	8b 40 08             	mov    0x8(%eax),%eax
810027a4:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
810027ab:	e9 93 00 00 00       	jmp    81002843 <malloc_extend_top+0x291>
810027b0:	8b 45 dc             	mov    -0x24(%ebp),%eax
810027b3:	83 e8 0c             	sub    $0xc,%eax
810027b6:	83 e0 f8             	and    $0xfffffff8,%eax
810027b9:	89 45 dc             	mov    %eax,-0x24(%ebp)
810027bc:	8b 45 e0             	mov    -0x20(%ebp),%eax
810027bf:	8b 40 04             	mov    0x4(%eax),%eax
810027c2:	83 e0 01             	and    $0x1,%eax
810027c5:	0b 45 dc             	or     -0x24(%ebp),%eax
810027c8:	89 c2                	mov    %eax,%edx
810027ca:	8b 45 e0             	mov    -0x20(%ebp),%eax
810027cd:	89 50 04             	mov    %edx,0x4(%eax)
810027d0:	8b 55 e0             	mov    -0x20(%ebp),%edx
810027d3:	8b 45 dc             	mov    -0x24(%ebp),%eax
810027d6:	01 d0                	add    %edx,%eax
810027d8:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
810027df:	8b 45 dc             	mov    -0x24(%ebp),%eax
810027e2:	8d 50 04             	lea    0x4(%eax),%edx
810027e5:	8b 45 e0             	mov    -0x20(%ebp),%eax
810027e8:	01 d0                	add    %edx,%eax
810027ea:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
810027f1:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
810027f5:	76 15                	jbe    8100280c <malloc_extend_top+0x25a>
810027f7:	8b 45 e0             	mov    -0x20(%ebp),%eax
810027fa:	83 c0 08             	add    $0x8,%eax
810027fd:	83 ec 08             	sub    $0x8,%esp
81002800:	50                   	push   %eax
81002801:	ff 75 08             	push   0x8(%ebp)
81002804:	e8 c5 e8 ff ff       	call   810010ce <_free_r>
81002809:	83 c4 10             	add    $0x10,%esp
8100280c:	a1 a0 7e 00 81       	mov    0x81007ea0,%eax
81002811:	89 c2                	mov    %eax,%edx
81002813:	a1 84 7e 00 81       	mov    0x81007e84,%eax
81002818:	39 c2                	cmp    %eax,%edx
8100281a:	76 0a                	jbe    81002826 <malloc_extend_top+0x274>
8100281c:	a1 a0 7e 00 81       	mov    0x81007ea0,%eax
81002821:	a3 84 7e 00 81       	mov    %eax,0x81007e84
81002826:	a1 a0 7e 00 81       	mov    0x81007ea0,%eax
8100282b:	89 c2                	mov    %eax,%edx
8100282d:	a1 88 7e 00 81       	mov    0x81007e88,%eax
81002832:	39 c2                	cmp    %eax,%edx
81002834:	76 0d                	jbe    81002843 <malloc_extend_top+0x291>
81002836:	a1 a0 7e 00 81       	mov    0x81007ea0,%eax
8100283b:	a3 88 7e 00 81       	mov    %eax,0x81007e88
81002840:	eb 01                	jmp    81002843 <malloc_extend_top+0x291>
81002842:	90                   	nop
81002843:	c9                   	leave  
81002844:	c3                   	ret    

81002845 <_malloc_r>:
81002845:	55                   	push   %ebp
81002846:	89 e5                	mov    %esp,%ebp
81002848:	53                   	push   %ebx
81002849:	83 ec 44             	sub    $0x44,%esp
8100284c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100284f:	83 c0 0b             	add    $0xb,%eax
81002852:	83 f8 16             	cmp    $0x16,%eax
81002855:	76 0b                	jbe    81002862 <_malloc_r+0x1d>
81002857:	8b 45 0c             	mov    0xc(%ebp),%eax
8100285a:	83 c0 0b             	add    $0xb,%eax
8100285d:	83 e0 f8             	and    $0xfffffff8,%eax
81002860:	eb 05                	jmp    81002867 <_malloc_r+0x22>
81002862:	b8 10 00 00 00       	mov    $0x10,%eax
81002867:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100286a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100286d:	85 c0                	test   %eax,%eax
8100286f:	78 08                	js     81002879 <_malloc_r+0x34>
81002871:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002874:	3b 45 0c             	cmp    0xc(%ebp),%eax
81002877:	73 13                	jae    8100288c <_malloc_r+0x47>
81002879:	8b 45 08             	mov    0x8(%ebp),%eax
8100287c:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81002882:	b8 00 00 00 00       	mov    $0x0,%eax
81002887:	e9 d6 07 00 00       	jmp    81003062 <_malloc_r+0x81d>
8100288c:	83 ec 0c             	sub    $0xc,%esp
8100288f:	ff 75 08             	push   0x8(%ebp)
81002892:	e8 91 09 00 00       	call   81003228 <__malloc_lock>
81002897:	83 c4 10             	add    $0x10,%esp
8100289a:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
810028a1:	0f 87 b0 00 00 00    	ja     81002957 <_malloc_r+0x112>
810028a7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810028aa:	c1 e8 03             	shr    $0x3,%eax
810028ad:	89 45 f0             	mov    %eax,-0x10(%ebp)
810028b0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810028b3:	83 c0 01             	add    $0x1,%eax
810028b6:	01 c0                	add    %eax,%eax
810028b8:	c1 e0 02             	shl    $0x2,%eax
810028bb:	05 a0 72 00 81       	add    $0x810072a0,%eax
810028c0:	83 e8 08             	sub    $0x8,%eax
810028c3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810028c6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810028c9:	8b 40 0c             	mov    0xc(%eax),%eax
810028cc:	89 45 f4             	mov    %eax,-0xc(%ebp)
810028cf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810028d2:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
810028d5:	75 0d                	jne    810028e4 <_malloc_r+0x9f>
810028d7:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
810028db:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810028de:	8b 40 0c             	mov    0xc(%eax),%eax
810028e1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810028e4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810028e7:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
810028ea:	74 62                	je     8100294e <_malloc_r+0x109>
810028ec:	8b 45 f4             	mov    -0xc(%ebp),%eax
810028ef:	8b 40 04             	mov    0x4(%eax),%eax
810028f2:	83 e0 fc             	and    $0xfffffffc,%eax
810028f5:	89 45 cc             	mov    %eax,-0x34(%ebp)
810028f8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810028fb:	8b 40 0c             	mov    0xc(%eax),%eax
810028fe:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002901:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002904:	8b 40 08             	mov    0x8(%eax),%eax
81002907:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100290a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100290d:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002910:	89 50 0c             	mov    %edx,0xc(%eax)
81002913:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002916:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002919:	89 50 08             	mov    %edx,0x8(%eax)
8100291c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100291f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002922:	01 d0                	add    %edx,%eax
81002924:	8b 50 04             	mov    0x4(%eax),%edx
81002927:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100292a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100292d:	01 c8                	add    %ecx,%eax
8100292f:	83 ca 01             	or     $0x1,%edx
81002932:	89 50 04             	mov    %edx,0x4(%eax)
81002935:	83 ec 0c             	sub    $0xc,%esp
81002938:	ff 75 08             	push   0x8(%ebp)
8100293b:	e8 ee 08 00 00       	call   8100322e <__malloc_unlock>
81002940:	83 c4 10             	add    $0x10,%esp
81002943:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002946:	83 c0 08             	add    $0x8,%eax
81002949:	e9 14 07 00 00       	jmp    81003062 <_malloc_r+0x81d>
8100294e:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
81002952:	e9 46 01 00 00       	jmp    81002a9d <_malloc_r+0x258>
81002957:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100295a:	c1 e8 09             	shr    $0x9,%eax
8100295d:	85 c0                	test   %eax,%eax
8100295f:	75 08                	jne    81002969 <_malloc_r+0x124>
81002961:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002964:	c1 e8 03             	shr    $0x3,%eax
81002967:	eb 77                	jmp    810029e0 <_malloc_r+0x19b>
81002969:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100296c:	c1 e8 09             	shr    $0x9,%eax
8100296f:	83 f8 04             	cmp    $0x4,%eax
81002972:	77 0b                	ja     8100297f <_malloc_r+0x13a>
81002974:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002977:	c1 e8 06             	shr    $0x6,%eax
8100297a:	83 c0 38             	add    $0x38,%eax
8100297d:	eb 61                	jmp    810029e0 <_malloc_r+0x19b>
8100297f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002982:	c1 e8 09             	shr    $0x9,%eax
81002985:	83 f8 14             	cmp    $0x14,%eax
81002988:	77 0b                	ja     81002995 <_malloc_r+0x150>
8100298a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100298d:	c1 e8 09             	shr    $0x9,%eax
81002990:	83 c0 5b             	add    $0x5b,%eax
81002993:	eb 4b                	jmp    810029e0 <_malloc_r+0x19b>
81002995:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002998:	c1 e8 09             	shr    $0x9,%eax
8100299b:	83 f8 54             	cmp    $0x54,%eax
8100299e:	77 0b                	ja     810029ab <_malloc_r+0x166>
810029a0:	8b 45 d0             	mov    -0x30(%ebp),%eax
810029a3:	c1 e8 0c             	shr    $0xc,%eax
810029a6:	83 c0 6e             	add    $0x6e,%eax
810029a9:	eb 35                	jmp    810029e0 <_malloc_r+0x19b>
810029ab:	8b 45 d0             	mov    -0x30(%ebp),%eax
810029ae:	c1 e8 09             	shr    $0x9,%eax
810029b1:	3d 54 01 00 00       	cmp    $0x154,%eax
810029b6:	77 0b                	ja     810029c3 <_malloc_r+0x17e>
810029b8:	8b 45 d0             	mov    -0x30(%ebp),%eax
810029bb:	c1 e8 0f             	shr    $0xf,%eax
810029be:	83 c0 77             	add    $0x77,%eax
810029c1:	eb 1d                	jmp    810029e0 <_malloc_r+0x19b>
810029c3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810029c6:	c1 e8 09             	shr    $0x9,%eax
810029c9:	3d 54 05 00 00       	cmp    $0x554,%eax
810029ce:	77 0b                	ja     810029db <_malloc_r+0x196>
810029d0:	8b 45 d0             	mov    -0x30(%ebp),%eax
810029d3:	c1 e8 12             	shr    $0x12,%eax
810029d6:	83 c0 7c             	add    $0x7c,%eax
810029d9:	eb 05                	jmp    810029e0 <_malloc_r+0x19b>
810029db:	b8 7e 00 00 00       	mov    $0x7e,%eax
810029e0:	89 45 f0             	mov    %eax,-0x10(%ebp)
810029e3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810029e6:	83 c0 01             	add    $0x1,%eax
810029e9:	01 c0                	add    %eax,%eax
810029eb:	c1 e0 02             	shl    $0x2,%eax
810029ee:	05 a0 72 00 81       	add    $0x810072a0,%eax
810029f3:	83 e8 08             	sub    $0x8,%eax
810029f6:	89 45 ec             	mov    %eax,-0x14(%ebp)
810029f9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810029fc:	8b 40 0c             	mov    0xc(%eax),%eax
810029ff:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002a02:	e9 86 00 00 00       	jmp    81002a8d <_malloc_r+0x248>
81002a07:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a0a:	8b 40 04             	mov    0x4(%eax),%eax
81002a0d:	83 e0 fc             	and    $0xfffffffc,%eax
81002a10:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002a13:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002a16:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002a19:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002a1c:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002a20:	7e 06                	jle    81002a28 <_malloc_r+0x1e3>
81002a22:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81002a26:	eb 71                	jmp    81002a99 <_malloc_r+0x254>
81002a28:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002a2c:	78 56                	js     81002a84 <_malloc_r+0x23f>
81002a2e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a31:	8b 40 0c             	mov    0xc(%eax),%eax
81002a34:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002a37:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a3a:	8b 40 08             	mov    0x8(%eax),%eax
81002a3d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002a40:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002a43:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002a46:	89 50 0c             	mov    %edx,0xc(%eax)
81002a49:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002a4c:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002a4f:	89 50 08             	mov    %edx,0x8(%eax)
81002a52:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002a55:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002a58:	01 d0                	add    %edx,%eax
81002a5a:	8b 50 04             	mov    0x4(%eax),%edx
81002a5d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002a60:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002a63:	01 c8                	add    %ecx,%eax
81002a65:	83 ca 01             	or     $0x1,%edx
81002a68:	89 50 04             	mov    %edx,0x4(%eax)
81002a6b:	83 ec 0c             	sub    $0xc,%esp
81002a6e:	ff 75 08             	push   0x8(%ebp)
81002a71:	e8 b8 07 00 00       	call   8100322e <__malloc_unlock>
81002a76:	83 c4 10             	add    $0x10,%esp
81002a79:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a7c:	83 c0 08             	add    $0x8,%eax
81002a7f:	e9 de 05 00 00       	jmp    81003062 <_malloc_r+0x81d>
81002a84:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a87:	8b 40 0c             	mov    0xc(%eax),%eax
81002a8a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002a8d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a90:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81002a93:	0f 85 6e ff ff ff    	jne    81002a07 <_malloc_r+0x1c2>
81002a99:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81002a9d:	b8 a8 72 00 81       	mov    $0x810072a8,%eax
81002aa2:	8b 40 08             	mov    0x8(%eax),%eax
81002aa5:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002aa8:	b8 a8 72 00 81       	mov    $0x810072a8,%eax
81002aad:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81002ab0:	0f 84 9c 02 00 00    	je     81002d52 <_malloc_r+0x50d>
81002ab6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ab9:	8b 40 04             	mov    0x4(%eax),%eax
81002abc:	83 e0 fc             	and    $0xfffffffc,%eax
81002abf:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002ac2:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002ac5:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002ac8:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002acb:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002acf:	7e 7a                	jle    81002b4b <_malloc_r+0x306>
81002ad1:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002ad4:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002ad7:	01 d0                	add    %edx,%eax
81002ad9:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81002adc:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002adf:	83 c8 01             	or     $0x1,%eax
81002ae2:	89 c2                	mov    %eax,%edx
81002ae4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ae7:	89 50 04             	mov    %edx,0x4(%eax)
81002aea:	b8 a8 72 00 81       	mov    $0x810072a8,%eax
81002aef:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81002af2:	89 50 0c             	mov    %edx,0xc(%eax)
81002af5:	ba a8 72 00 81       	mov    $0x810072a8,%edx
81002afa:	8b 40 0c             	mov    0xc(%eax),%eax
81002afd:	89 42 08             	mov    %eax,0x8(%edx)
81002b00:	ba a8 72 00 81       	mov    $0x810072a8,%edx
81002b05:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002b08:	89 50 0c             	mov    %edx,0xc(%eax)
81002b0b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002b0e:	8b 50 0c             	mov    0xc(%eax),%edx
81002b11:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002b14:	89 50 08             	mov    %edx,0x8(%eax)
81002b17:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002b1a:	83 c8 01             	or     $0x1,%eax
81002b1d:	89 c2                	mov    %eax,%edx
81002b1f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002b22:	89 50 04             	mov    %edx,0x4(%eax)
81002b25:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002b28:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002b2b:	01 c2                	add    %eax,%edx
81002b2d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002b30:	89 02                	mov    %eax,(%edx)
81002b32:	83 ec 0c             	sub    $0xc,%esp
81002b35:	ff 75 08             	push   0x8(%ebp)
81002b38:	e8 f1 06 00 00       	call   8100322e <__malloc_unlock>
81002b3d:	83 c4 10             	add    $0x10,%esp
81002b40:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b43:	83 c0 08             	add    $0x8,%eax
81002b46:	e9 17 05 00 00       	jmp    81003062 <_malloc_r+0x81d>
81002b4b:	b8 a8 72 00 81       	mov    $0x810072a8,%eax
81002b50:	ba a8 72 00 81       	mov    $0x810072a8,%edx
81002b55:	89 50 0c             	mov    %edx,0xc(%eax)
81002b58:	ba a8 72 00 81       	mov    $0x810072a8,%edx
81002b5d:	8b 40 0c             	mov    0xc(%eax),%eax
81002b60:	89 42 08             	mov    %eax,0x8(%edx)
81002b63:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002b67:	78 32                	js     81002b9b <_malloc_r+0x356>
81002b69:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002b6c:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002b6f:	01 d0                	add    %edx,%eax
81002b71:	8b 50 04             	mov    0x4(%eax),%edx
81002b74:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002b77:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002b7a:	01 c8                	add    %ecx,%eax
81002b7c:	83 ca 01             	or     $0x1,%edx
81002b7f:	89 50 04             	mov    %edx,0x4(%eax)
81002b82:	83 ec 0c             	sub    $0xc,%esp
81002b85:	ff 75 08             	push   0x8(%ebp)
81002b88:	e8 a1 06 00 00       	call   8100322e <__malloc_unlock>
81002b8d:	83 c4 10             	add    $0x10,%esp
81002b90:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b93:	83 c0 08             	add    $0x8,%eax
81002b96:	e9 c7 04 00 00       	jmp    81003062 <_malloc_r+0x81d>
81002b9b:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
81002ba2:	77 7f                	ja     81002c23 <_malloc_r+0x3de>
81002ba4:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002ba7:	c1 e8 03             	shr    $0x3,%eax
81002baa:	89 45 c8             	mov    %eax,-0x38(%ebp)
81002bad:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81002bb2:	8b 58 04             	mov    0x4(%eax),%ebx
81002bb5:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002bb8:	8d 50 03             	lea    0x3(%eax),%edx
81002bbb:	85 c0                	test   %eax,%eax
81002bbd:	0f 48 c2             	cmovs  %edx,%eax
81002bc0:	c1 f8 02             	sar    $0x2,%eax
81002bc3:	ba 01 00 00 00       	mov    $0x1,%edx
81002bc8:	89 c1                	mov    %eax,%ecx
81002bca:	d3 e2                	shl    %cl,%edx
81002bcc:	89 d0                	mov    %edx,%eax
81002bce:	ba a0 72 00 81       	mov    $0x810072a0,%edx
81002bd3:	09 d8                	or     %ebx,%eax
81002bd5:	89 42 04             	mov    %eax,0x4(%edx)
81002bd8:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002bdb:	83 c0 01             	add    $0x1,%eax
81002bde:	01 c0                	add    %eax,%eax
81002be0:	c1 e0 02             	shl    $0x2,%eax
81002be3:	05 a0 72 00 81       	add    $0x810072a0,%eax
81002be8:	83 e8 08             	sub    $0x8,%eax
81002beb:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002bee:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002bf1:	8b 40 08             	mov    0x8(%eax),%eax
81002bf4:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002bf7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002bfa:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002bfd:	89 50 0c             	mov    %edx,0xc(%eax)
81002c00:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c03:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c06:	89 50 08             	mov    %edx,0x8(%eax)
81002c09:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c0c:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002c0f:	89 50 08             	mov    %edx,0x8(%eax)
81002c12:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c15:	8b 50 08             	mov    0x8(%eax),%edx
81002c18:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002c1b:	89 50 0c             	mov    %edx,0xc(%eax)
81002c1e:	e9 2f 01 00 00       	jmp    81002d52 <_malloc_r+0x50d>
81002c23:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c26:	c1 e8 09             	shr    $0x9,%eax
81002c29:	85 c0                	test   %eax,%eax
81002c2b:	75 08                	jne    81002c35 <_malloc_r+0x3f0>
81002c2d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c30:	c1 e8 03             	shr    $0x3,%eax
81002c33:	eb 77                	jmp    81002cac <_malloc_r+0x467>
81002c35:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c38:	c1 e8 09             	shr    $0x9,%eax
81002c3b:	83 f8 04             	cmp    $0x4,%eax
81002c3e:	77 0b                	ja     81002c4b <_malloc_r+0x406>
81002c40:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c43:	c1 e8 06             	shr    $0x6,%eax
81002c46:	83 c0 38             	add    $0x38,%eax
81002c49:	eb 61                	jmp    81002cac <_malloc_r+0x467>
81002c4b:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c4e:	c1 e8 09             	shr    $0x9,%eax
81002c51:	83 f8 14             	cmp    $0x14,%eax
81002c54:	77 0b                	ja     81002c61 <_malloc_r+0x41c>
81002c56:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c59:	c1 e8 09             	shr    $0x9,%eax
81002c5c:	83 c0 5b             	add    $0x5b,%eax
81002c5f:	eb 4b                	jmp    81002cac <_malloc_r+0x467>
81002c61:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c64:	c1 e8 09             	shr    $0x9,%eax
81002c67:	83 f8 54             	cmp    $0x54,%eax
81002c6a:	77 0b                	ja     81002c77 <_malloc_r+0x432>
81002c6c:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c6f:	c1 e8 0c             	shr    $0xc,%eax
81002c72:	83 c0 6e             	add    $0x6e,%eax
81002c75:	eb 35                	jmp    81002cac <_malloc_r+0x467>
81002c77:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c7a:	c1 e8 09             	shr    $0x9,%eax
81002c7d:	3d 54 01 00 00       	cmp    $0x154,%eax
81002c82:	77 0b                	ja     81002c8f <_malloc_r+0x44a>
81002c84:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c87:	c1 e8 0f             	shr    $0xf,%eax
81002c8a:	83 c0 77             	add    $0x77,%eax
81002c8d:	eb 1d                	jmp    81002cac <_malloc_r+0x467>
81002c8f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c92:	c1 e8 09             	shr    $0x9,%eax
81002c95:	3d 54 05 00 00       	cmp    $0x554,%eax
81002c9a:	77 0b                	ja     81002ca7 <_malloc_r+0x462>
81002c9c:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c9f:	c1 e8 12             	shr    $0x12,%eax
81002ca2:	83 c0 7c             	add    $0x7c,%eax
81002ca5:	eb 05                	jmp    81002cac <_malloc_r+0x467>
81002ca7:	b8 7e 00 00 00       	mov    $0x7e,%eax
81002cac:	89 45 c8             	mov    %eax,-0x38(%ebp)
81002caf:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002cb2:	83 c0 01             	add    $0x1,%eax
81002cb5:	01 c0                	add    %eax,%eax
81002cb7:	c1 e0 02             	shl    $0x2,%eax
81002cba:	05 a0 72 00 81       	add    $0x810072a0,%eax
81002cbf:	83 e8 08             	sub    $0x8,%eax
81002cc2:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002cc5:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002cc8:	8b 40 08             	mov    0x8(%eax),%eax
81002ccb:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002cce:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002cd1:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81002cd4:	75 36                	jne    81002d0c <_malloc_r+0x4c7>
81002cd6:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81002cdb:	8b 58 04             	mov    0x4(%eax),%ebx
81002cde:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002ce1:	8d 50 03             	lea    0x3(%eax),%edx
81002ce4:	85 c0                	test   %eax,%eax
81002ce6:	0f 48 c2             	cmovs  %edx,%eax
81002ce9:	c1 f8 02             	sar    $0x2,%eax
81002cec:	ba 01 00 00 00       	mov    $0x1,%edx
81002cf1:	89 c1                	mov    %eax,%ecx
81002cf3:	d3 e2                	shl    %cl,%edx
81002cf5:	89 d0                	mov    %edx,%eax
81002cf7:	ba a0 72 00 81       	mov    $0x810072a0,%edx
81002cfc:	09 d8                	or     %ebx,%eax
81002cfe:	89 42 04             	mov    %eax,0x4(%edx)
81002d01:	eb 28                	jmp    81002d2b <_malloc_r+0x4e6>
81002d03:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002d06:	8b 40 08             	mov    0x8(%eax),%eax
81002d09:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002d0c:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002d0f:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81002d12:	74 0e                	je     81002d22 <_malloc_r+0x4dd>
81002d14:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002d17:	8b 40 04             	mov    0x4(%eax),%eax
81002d1a:	83 e0 fc             	and    $0xfffffffc,%eax
81002d1d:	39 45 cc             	cmp    %eax,-0x34(%ebp)
81002d20:	72 e1                	jb     81002d03 <_malloc_r+0x4be>
81002d22:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002d25:	8b 40 0c             	mov    0xc(%eax),%eax
81002d28:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002d2b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d2e:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002d31:	89 50 0c             	mov    %edx,0xc(%eax)
81002d34:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d37:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002d3a:	89 50 08             	mov    %edx,0x8(%eax)
81002d3d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002d40:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002d43:	89 50 08             	mov    %edx,0x8(%eax)
81002d46:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002d49:	8b 50 08             	mov    0x8(%eax),%edx
81002d4c:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002d4f:	89 50 0c             	mov    %edx,0xc(%eax)
81002d52:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002d55:	8d 50 03             	lea    0x3(%eax),%edx
81002d58:	85 c0                	test   %eax,%eax
81002d5a:	0f 48 c2             	cmovs  %edx,%eax
81002d5d:	c1 f8 02             	sar    $0x2,%eax
81002d60:	ba 01 00 00 00       	mov    $0x1,%edx
81002d65:	89 c1                	mov    %eax,%ecx
81002d67:	d3 e2                	shl    %cl,%edx
81002d69:	89 d0                	mov    %edx,%eax
81002d6b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002d6e:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81002d73:	8b 40 04             	mov    0x4(%eax),%eax
81002d76:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81002d79:	0f 87 13 02 00 00    	ja     81002f92 <_malloc_r+0x74d>
81002d7f:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81002d84:	8b 40 04             	mov    0x4(%eax),%eax
81002d87:	23 45 e4             	and    -0x1c(%ebp),%eax
81002d8a:	85 c0                	test   %eax,%eax
81002d8c:	75 27                	jne    81002db5 <_malloc_r+0x570>
81002d8e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002d91:	83 e0 fc             	and    $0xfffffffc,%eax
81002d94:	83 c0 04             	add    $0x4,%eax
81002d97:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002d9a:	d1 65 e4             	shll   -0x1c(%ebp)
81002d9d:	eb 07                	jmp    81002da6 <_malloc_r+0x561>
81002d9f:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81002da3:	d1 65 e4             	shll   -0x1c(%ebp)
81002da6:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81002dab:	8b 40 04             	mov    0x4(%eax),%eax
81002dae:	23 45 e4             	and    -0x1c(%ebp),%eax
81002db1:	85 c0                	test   %eax,%eax
81002db3:	74 ea                	je     81002d9f <_malloc_r+0x55a>
81002db5:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002db8:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002dbb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002dbe:	83 c0 01             	add    $0x1,%eax
81002dc1:	01 c0                	add    %eax,%eax
81002dc3:	c1 e0 02             	shl    $0x2,%eax
81002dc6:	05 a0 72 00 81       	add    $0x810072a0,%eax
81002dcb:	83 e8 08             	sub    $0x8,%eax
81002dce:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002dd1:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002dd4:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002dd7:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002dda:	8b 40 0c             	mov    0xc(%eax),%eax
81002ddd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002de0:	e9 22 01 00 00       	jmp    81002f07 <_malloc_r+0x6c2>
81002de5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002de8:	8b 40 04             	mov    0x4(%eax),%eax
81002deb:	83 e0 fc             	and    $0xfffffffc,%eax
81002dee:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002df1:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002df4:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002df7:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002dfa:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002dfe:	0f 8e 9e 00 00 00    	jle    81002ea2 <_malloc_r+0x65d>
81002e04:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002e07:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002e0a:	01 d0                	add    %edx,%eax
81002e0c:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81002e0f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002e12:	83 c8 01             	or     $0x1,%eax
81002e15:	89 c2                	mov    %eax,%edx
81002e17:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e1a:	89 50 04             	mov    %edx,0x4(%eax)
81002e1d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e20:	8b 40 0c             	mov    0xc(%eax),%eax
81002e23:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002e26:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e29:	8b 40 08             	mov    0x8(%eax),%eax
81002e2c:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002e2f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002e32:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002e35:	89 50 0c             	mov    %edx,0xc(%eax)
81002e38:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002e3b:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002e3e:	89 50 08             	mov    %edx,0x8(%eax)
81002e41:	b8 a8 72 00 81       	mov    $0x810072a8,%eax
81002e46:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81002e49:	89 50 0c             	mov    %edx,0xc(%eax)
81002e4c:	ba a8 72 00 81       	mov    $0x810072a8,%edx
81002e51:	8b 40 0c             	mov    0xc(%eax),%eax
81002e54:	89 42 08             	mov    %eax,0x8(%edx)
81002e57:	ba a8 72 00 81       	mov    $0x810072a8,%edx
81002e5c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002e5f:	89 50 0c             	mov    %edx,0xc(%eax)
81002e62:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002e65:	8b 50 0c             	mov    0xc(%eax),%edx
81002e68:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002e6b:	89 50 08             	mov    %edx,0x8(%eax)
81002e6e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e71:	83 c8 01             	or     $0x1,%eax
81002e74:	89 c2                	mov    %eax,%edx
81002e76:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002e79:	89 50 04             	mov    %edx,0x4(%eax)
81002e7c:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002e7f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002e82:	01 c2                	add    %eax,%edx
81002e84:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e87:	89 02                	mov    %eax,(%edx)
81002e89:	83 ec 0c             	sub    $0xc,%esp
81002e8c:	ff 75 08             	push   0x8(%ebp)
81002e8f:	e8 9a 03 00 00       	call   8100322e <__malloc_unlock>
81002e94:	83 c4 10             	add    $0x10,%esp
81002e97:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e9a:	83 c0 08             	add    $0x8,%eax
81002e9d:	e9 c0 01 00 00       	jmp    81003062 <_malloc_r+0x81d>
81002ea2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002ea6:	78 56                	js     81002efe <_malloc_r+0x6b9>
81002ea8:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002eab:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002eae:	01 d0                	add    %edx,%eax
81002eb0:	8b 50 04             	mov    0x4(%eax),%edx
81002eb3:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002eb6:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002eb9:	01 c8                	add    %ecx,%eax
81002ebb:	83 ca 01             	or     $0x1,%edx
81002ebe:	89 50 04             	mov    %edx,0x4(%eax)
81002ec1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ec4:	8b 40 0c             	mov    0xc(%eax),%eax
81002ec7:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002eca:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ecd:	8b 40 08             	mov    0x8(%eax),%eax
81002ed0:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002ed3:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002ed6:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002ed9:	89 50 0c             	mov    %edx,0xc(%eax)
81002edc:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002edf:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002ee2:	89 50 08             	mov    %edx,0x8(%eax)
81002ee5:	83 ec 0c             	sub    $0xc,%esp
81002ee8:	ff 75 08             	push   0x8(%ebp)
81002eeb:	e8 3e 03 00 00       	call   8100322e <__malloc_unlock>
81002ef0:	83 c4 10             	add    $0x10,%esp
81002ef3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ef6:	83 c0 08             	add    $0x8,%eax
81002ef9:	e9 64 01 00 00       	jmp    81003062 <_malloc_r+0x81d>
81002efe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f01:	8b 40 0c             	mov    0xc(%eax),%eax
81002f04:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002f07:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f0a:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81002f0d:	0f 85 d2 fe ff ff    	jne    81002de5 <_malloc_r+0x5a0>
81002f13:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81002f17:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81002f1b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f1e:	83 e0 03             	and    $0x3,%eax
81002f21:	85 c0                	test   %eax,%eax
81002f23:	0f 85 ae fe ff ff    	jne    81002dd7 <_malloc_r+0x592>
81002f29:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002f2c:	83 e0 03             	and    $0x3,%eax
81002f2f:	85 c0                	test   %eax,%eax
81002f31:	75 19                	jne    81002f4c <_malloc_r+0x707>
81002f33:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81002f38:	8b 48 04             	mov    0x4(%eax),%ecx
81002f3b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002f3e:	f7 d0                	not    %eax
81002f40:	ba a0 72 00 81       	mov    $0x810072a0,%edx
81002f45:	21 c8                	and    %ecx,%eax
81002f47:	89 42 04             	mov    %eax,0x4(%edx)
81002f4a:	eb 13                	jmp    81002f5f <_malloc_r+0x71a>
81002f4c:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
81002f50:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
81002f54:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002f57:	8b 40 08             	mov    0x8(%eax),%eax
81002f5a:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
81002f5d:	74 ca                	je     81002f29 <_malloc_r+0x6e4>
81002f5f:	d1 65 e4             	shll   -0x1c(%ebp)
81002f62:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81002f67:	8b 40 04             	mov    0x4(%eax),%eax
81002f6a:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81002f6d:	77 23                	ja     81002f92 <_malloc_r+0x74d>
81002f6f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002f73:	74 1d                	je     81002f92 <_malloc_r+0x74d>
81002f75:	eb 07                	jmp    81002f7e <_malloc_r+0x739>
81002f77:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81002f7b:	d1 65 e4             	shll   -0x1c(%ebp)
81002f7e:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81002f83:	8b 40 04             	mov    0x4(%eax),%eax
81002f86:	23 45 e4             	and    -0x1c(%ebp),%eax
81002f89:	85 c0                	test   %eax,%eax
81002f8b:	74 ea                	je     81002f77 <_malloc_r+0x732>
81002f8d:	e9 23 fe ff ff       	jmp    81002db5 <_malloc_r+0x570>
81002f92:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81002f97:	8b 40 08             	mov    0x8(%eax),%eax
81002f9a:	8b 40 04             	mov    0x4(%eax),%eax
81002f9d:	83 e0 fc             	and    $0xfffffffc,%eax
81002fa0:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002fa3:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002fa6:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81002fab:	8b 40 08             	mov    0x8(%eax),%eax
81002fae:	8b 40 04             	mov    0x4(%eax),%eax
81002fb1:	83 e0 fc             	and    $0xfffffffc,%eax
81002fb4:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81002fb7:	77 06                	ja     81002fbf <_malloc_r+0x77a>
81002fb9:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002fbd:	7f 53                	jg     81003012 <_malloc_r+0x7cd>
81002fbf:	83 ec 08             	sub    $0x8,%esp
81002fc2:	ff 75 d0             	push   -0x30(%ebp)
81002fc5:	ff 75 08             	push   0x8(%ebp)
81002fc8:	e8 e5 f5 ff ff       	call   810025b2 <malloc_extend_top>
81002fcd:	83 c4 10             	add    $0x10,%esp
81002fd0:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81002fd5:	8b 40 08             	mov    0x8(%eax),%eax
81002fd8:	8b 40 04             	mov    0x4(%eax),%eax
81002fdb:	83 e0 fc             	and    $0xfffffffc,%eax
81002fde:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002fe1:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002fe4:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81002fe9:	8b 40 08             	mov    0x8(%eax),%eax
81002fec:	8b 40 04             	mov    0x4(%eax),%eax
81002fef:	83 e0 fc             	and    $0xfffffffc,%eax
81002ff2:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81002ff5:	77 06                	ja     81002ffd <_malloc_r+0x7b8>
81002ff7:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002ffb:	7f 15                	jg     81003012 <_malloc_r+0x7cd>
81002ffd:	83 ec 0c             	sub    $0xc,%esp
81003000:	ff 75 08             	push   0x8(%ebp)
81003003:	e8 26 02 00 00       	call   8100322e <__malloc_unlock>
81003008:	83 c4 10             	add    $0x10,%esp
8100300b:	b8 00 00 00 00       	mov    $0x0,%eax
81003010:	eb 50                	jmp    81003062 <_malloc_r+0x81d>
81003012:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81003017:	8b 40 08             	mov    0x8(%eax),%eax
8100301a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100301d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003020:	83 c8 01             	or     $0x1,%eax
81003023:	89 c2                	mov    %eax,%edx
81003025:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003028:	89 50 04             	mov    %edx,0x4(%eax)
8100302b:	ba a0 72 00 81       	mov    $0x810072a0,%edx
81003030:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003033:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003036:	01 c8                	add    %ecx,%eax
81003038:	89 42 08             	mov    %eax,0x8(%edx)
8100303b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100303e:	83 c8 01             	or     $0x1,%eax
81003041:	89 c2                	mov    %eax,%edx
81003043:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81003048:	8b 40 08             	mov    0x8(%eax),%eax
8100304b:	89 50 04             	mov    %edx,0x4(%eax)
8100304e:	83 ec 0c             	sub    $0xc,%esp
81003051:	ff 75 08             	push   0x8(%ebp)
81003054:	e8 d5 01 00 00       	call   8100322e <__malloc_unlock>
81003059:	83 c4 10             	add    $0x10,%esp
8100305c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100305f:	83 c0 08             	add    $0x8,%eax
81003062:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003065:	c9                   	leave  
81003066:	c3                   	ret    
81003067:	66 90                	xchg   %ax,%ax
81003069:	66 90                	xchg   %ax,%ax
8100306b:	66 90                	xchg   %ax,%ax
8100306d:	66 90                	xchg   %ax,%ax
8100306f:	90                   	nop

81003070 <memchr>:
81003070:	55                   	push   %ebp
81003071:	89 e5                	mov    %esp,%ebp
81003073:	57                   	push   %edi
81003074:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81003078:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100307b:	8b 7d 08             	mov    0x8(%ebp),%edi
8100307e:	31 d2                	xor    %edx,%edx
81003080:	85 c9                	test   %ecx,%ecx
81003082:	74 79                	je     810030fd <L20>
81003084:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100308a:	74 28                	je     810030b4 <L5>
8100308c:	3a 07                	cmp    (%edi),%al
8100308e:	74 6a                	je     810030fa <L15>
81003090:	47                   	inc    %edi
81003091:	49                   	dec    %ecx
81003092:	74 69                	je     810030fd <L20>
81003094:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100309a:	74 18                	je     810030b4 <L5>
8100309c:	3a 07                	cmp    (%edi),%al
8100309e:	74 5a                	je     810030fa <L15>
810030a0:	47                   	inc    %edi
810030a1:	49                   	dec    %ecx
810030a2:	74 59                	je     810030fd <L20>
810030a4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810030aa:	74 08                	je     810030b4 <L5>
810030ac:	3a 07                	cmp    (%edi),%al
810030ae:	74 4a                	je     810030fa <L15>
810030b0:	47                   	inc    %edi
810030b1:	49                   	dec    %ecx
810030b2:	74 49                	je     810030fd <L20>

810030b4 <L5>:
810030b4:	88 c4                	mov    %al,%ah
810030b6:	89 c2                	mov    %eax,%edx
810030b8:	c1 e2 10             	shl    $0x10,%edx
810030bb:	09 d0                	or     %edx,%eax
810030bd:	53                   	push   %ebx
810030be:	66 90                	xchg   %ax,%ax

810030c0 <L8>:
810030c0:	83 e9 04             	sub    $0x4,%ecx
810030c3:	72 1c                	jb     810030e1 <L9>
810030c5:	8b 17                	mov    (%edi),%edx
810030c7:	83 c7 04             	add    $0x4,%edi
810030ca:	31 c2                	xor    %eax,%edx
810030cc:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
810030d2:	f7 d2                	not    %edx
810030d4:	21 d3                	and    %edx,%ebx
810030d6:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
810030dc:	74 e2                	je     810030c0 <L8>
810030de:	83 ef 04             	sub    $0x4,%edi

810030e1 <L9>:
810030e1:	5b                   	pop    %ebx
810030e2:	31 d2                	xor    %edx,%edx
810030e4:	83 c1 04             	add    $0x4,%ecx
810030e7:	74 14                	je     810030fd <L20>
810030e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

810030f0 <L10>:
810030f0:	3a 07                	cmp    (%edi),%al
810030f2:	74 06                	je     810030fa <L15>
810030f4:	47                   	inc    %edi
810030f5:	49                   	dec    %ecx
810030f6:	75 f8                	jne    810030f0 <L10>
810030f8:	31 ff                	xor    %edi,%edi

810030fa <L15>:
810030fa:	4a                   	dec    %edx
810030fb:	21 fa                	and    %edi,%edx

810030fd <L20>:
810030fd:	89 d0                	mov    %edx,%eax
810030ff:	8d 65 fc             	lea    -0x4(%ebp),%esp
81003102:	5f                   	pop    %edi
81003103:	c9                   	leave  
81003104:	c3                   	ret    

81003105 <memcmp>:
81003105:	55                   	push   %ebp
81003106:	89 e5                	mov    %esp,%ebp
81003108:	83 ec 10             	sub    $0x10,%esp
8100310b:	53                   	push   %ebx
8100310c:	57                   	push   %edi
8100310d:	56                   	push   %esi
8100310e:	8b 7d 08             	mov    0x8(%ebp),%edi
81003111:	8b 75 0c             	mov    0xc(%ebp),%esi
81003114:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003117:	fc                   	cld    
81003118:	31 c0                	xor    %eax,%eax
8100311a:	85 c9                	test   %ecx,%ecx
8100311c:	74 31                	je     8100314f <L4>
8100311e:	89 f8                	mov    %edi,%eax
81003120:	09 f0                	or     %esi,%eax
81003122:	a8 03                	test   $0x3,%al
81003124:	75 1b                	jne    81003141 <BYTECMP>
81003126:	89 cb                	mov    %ecx,%ebx
81003128:	c1 e9 02             	shr    $0x2,%ecx
8100312b:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
8100312d:	74 0d                	je     8100313c <L5>
8100312f:	83 ee 04             	sub    $0x4,%esi
81003132:	83 ef 04             	sub    $0x4,%edi
81003135:	b9 04 00 00 00       	mov    $0x4,%ecx
8100313a:	eb 05                	jmp    81003141 <BYTECMP>

8100313c <L5>:
8100313c:	83 e3 03             	and    $0x3,%ebx
8100313f:	89 d9                	mov    %ebx,%ecx

81003141 <BYTECMP>:
81003141:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

81003143 <L3>:
81003143:	31 d2                	xor    %edx,%edx
81003145:	8a 56 ff             	mov    -0x1(%esi),%dl
81003148:	31 c0                	xor    %eax,%eax
8100314a:	8a 47 ff             	mov    -0x1(%edi),%al
8100314d:	29 d0                	sub    %edx,%eax

8100314f <L4>:
8100314f:	8d 65 e4             	lea    -0x1c(%ebp),%esp
81003152:	5e                   	pop    %esi
81003153:	5f                   	pop    %edi
81003154:	5b                   	pop    %ebx
81003155:	c9                   	leave  
81003156:	c3                   	ret    
81003157:	90                   	nop

81003158 <memcpy>:
81003158:	55                   	push   %ebp
81003159:	89 e5                	mov    %esp,%ebp
8100315b:	56                   	push   %esi
8100315c:	57                   	push   %edi
8100315d:	53                   	push   %ebx
8100315e:	8b 7d 08             	mov    0x8(%ebp),%edi
81003161:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003164:	8b 75 0c             	mov    0xc(%ebp),%esi
81003167:	fc                   	cld    
81003168:	83 f9 08             	cmp    $0x8,%ecx
8100316b:	76 26                	jbe    81003193 <memcpy+0x3b>
8100316d:	89 fa                	mov    %edi,%edx
8100316f:	89 cb                	mov    %ecx,%ebx
81003171:	83 e2 03             	and    $0x3,%edx
81003174:	74 10                	je     81003186 <memcpy+0x2e>
81003176:	b9 04 00 00 00       	mov    $0x4,%ecx
8100317b:	29 d1                	sub    %edx,%ecx
8100317d:	83 e1 03             	and    $0x3,%ecx
81003180:	29 cb                	sub    %ecx,%ebx
81003182:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003184:	89 d9                	mov    %ebx,%ecx
81003186:	c1 e9 02             	shr    $0x2,%ecx
81003189:	8d 76 00             	lea    0x0(%esi),%esi
8100318c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
8100318e:	89 d9                	mov    %ebx,%ecx
81003190:	83 e1 03             	and    $0x3,%ecx
81003193:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003195:	8b 45 08             	mov    0x8(%ebp),%eax
81003198:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100319b:	5b                   	pop    %ebx
8100319c:	5f                   	pop    %edi
8100319d:	5e                   	pop    %esi
8100319e:	c9                   	leave  
8100319f:	c3                   	ret    

810031a0 <memset>:
810031a0:	55                   	push   %ebp
810031a1:	89 e5                	mov    %esp,%ebp
810031a3:	57                   	push   %edi
810031a4:	8b 7d 08             	mov    0x8(%ebp),%edi
810031a7:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
810031ab:	8b 4d 10             	mov    0x10(%ebp),%ecx
810031ae:	fc                   	cld    
810031af:	83 f9 10             	cmp    $0x10,%ecx
810031b2:	76 69                	jbe    8100321d <memset+0x7d>
810031b4:	f7 c7 07 00 00 00    	test   $0x7,%edi
810031ba:	74 4c                	je     81003208 <memset+0x68>
810031bc:	88 07                	mov    %al,(%edi)
810031be:	47                   	inc    %edi
810031bf:	49                   	dec    %ecx
810031c0:	f7 c7 07 00 00 00    	test   $0x7,%edi
810031c6:	74 40                	je     81003208 <memset+0x68>
810031c8:	88 07                	mov    %al,(%edi)
810031ca:	47                   	inc    %edi
810031cb:	49                   	dec    %ecx
810031cc:	f7 c7 07 00 00 00    	test   $0x7,%edi
810031d2:	74 34                	je     81003208 <memset+0x68>
810031d4:	88 07                	mov    %al,(%edi)
810031d6:	47                   	inc    %edi
810031d7:	49                   	dec    %ecx
810031d8:	f7 c7 07 00 00 00    	test   $0x7,%edi
810031de:	74 28                	je     81003208 <memset+0x68>
810031e0:	88 07                	mov    %al,(%edi)
810031e2:	47                   	inc    %edi
810031e3:	49                   	dec    %ecx
810031e4:	f7 c7 07 00 00 00    	test   $0x7,%edi
810031ea:	74 1c                	je     81003208 <memset+0x68>
810031ec:	88 07                	mov    %al,(%edi)
810031ee:	47                   	inc    %edi
810031ef:	49                   	dec    %ecx
810031f0:	f7 c7 07 00 00 00    	test   $0x7,%edi
810031f6:	74 10                	je     81003208 <memset+0x68>
810031f8:	88 07                	mov    %al,(%edi)
810031fa:	47                   	inc    %edi
810031fb:	49                   	dec    %ecx
810031fc:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003202:	74 04                	je     81003208 <memset+0x68>
81003204:	88 07                	mov    %al,(%edi)
81003206:	47                   	inc    %edi
81003207:	49                   	dec    %ecx
81003208:	88 c4                	mov    %al,%ah
8100320a:	89 c2                	mov    %eax,%edx
8100320c:	c1 e2 10             	shl    $0x10,%edx
8100320f:	09 d0                	or     %edx,%eax
81003211:	89 ca                	mov    %ecx,%edx
81003213:	c1 e9 02             	shr    $0x2,%ecx
81003216:	83 e2 03             	and    $0x3,%edx
81003219:	f3 ab                	rep stos %eax,%es:(%edi)
8100321b:	89 d1                	mov    %edx,%ecx
8100321d:	f3 aa                	rep stos %al,%es:(%edi)
8100321f:	8b 45 08             	mov    0x8(%ebp),%eax
81003222:	8d 65 fc             	lea    -0x4(%ebp),%esp
81003225:	5f                   	pop    %edi
81003226:	c9                   	leave  
81003227:	c3                   	ret    

81003228 <__malloc_lock>:
81003228:	55                   	push   %ebp
81003229:	89 e5                	mov    %esp,%ebp
8100322b:	90                   	nop
8100322c:	5d                   	pop    %ebp
8100322d:	c3                   	ret    

8100322e <__malloc_unlock>:
8100322e:	55                   	push   %ebp
8100322f:	89 e5                	mov    %esp,%ebp
81003231:	90                   	nop
81003232:	5d                   	pop    %ebp
81003233:	c3                   	ret    

81003234 <__sprint_r>:
81003234:	55                   	push   %ebp
81003235:	89 e5                	mov    %esp,%ebp
81003237:	56                   	push   %esi
81003238:	53                   	push   %ebx
81003239:	83 ec 10             	sub    $0x10,%esp
8100323c:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100323f:	be 00 00 00 00       	mov    $0x0,%esi
81003244:	8b 43 08             	mov    0x8(%ebx),%eax
81003247:	85 c0                	test   %eax,%eax
81003249:	75 11                	jne    8100325c <__sprint_r+0x28>
8100324b:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81003252:	b8 00 00 00 00       	mov    $0x0,%eax
81003257:	e9 ad 00 00 00       	jmp    81003309 <__sprint_r+0xd5>
8100325c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100325f:	8b 40 64             	mov    0x64(%eax),%eax
81003262:	25 00 20 00 00       	and    $0x2000,%eax
81003267:	85 c0                	test   %eax,%eax
81003269:	74 7a                	je     810032e5 <__sprint_r+0xb1>
8100326b:	8b 03                	mov    (%ebx),%eax
8100326d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003270:	eb 6a                	jmp    810032dc <__sprint_r+0xa8>
81003272:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003275:	8b 00                	mov    (%eax),%eax
81003277:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100327a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100327d:	8b 40 04             	mov    0x4(%eax),%eax
81003280:	c1 e8 02             	shr    $0x2,%eax
81003283:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003286:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100328d:	eb 33                	jmp    810032c2 <__sprint_r+0x8e>
8100328f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003292:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003299:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100329c:	01 d0                	add    %edx,%eax
8100329e:	8b 00                	mov    (%eax),%eax
810032a0:	83 ec 04             	sub    $0x4,%esp
810032a3:	ff 75 0c             	push   0xc(%ebp)
810032a6:	50                   	push   %eax
810032a7:	ff 75 08             	push   0x8(%ebp)
810032aa:	e8 06 1d 00 00       	call   81004fb5 <_fputwc_r>
810032af:	83 c4 10             	add    $0x10,%esp
810032b2:	83 f8 ff             	cmp    $0xffffffff,%eax
810032b5:	75 07                	jne    810032be <__sprint_r+0x8a>
810032b7:	be ff ff ff ff       	mov    $0xffffffff,%esi
810032bc:	eb 3b                	jmp    810032f9 <__sprint_r+0xc5>
810032be:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810032c2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810032c5:	3b 45 e8             	cmp    -0x18(%ebp),%eax
810032c8:	7c c5                	jl     8100328f <__sprint_r+0x5b>
810032ca:	8b 43 08             	mov    0x8(%ebx),%eax
810032cd:	8b 55 e8             	mov    -0x18(%ebp),%edx
810032d0:	c1 e2 02             	shl    $0x2,%edx
810032d3:	29 d0                	sub    %edx,%eax
810032d5:	89 43 08             	mov    %eax,0x8(%ebx)
810032d8:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
810032dc:	8b 43 08             	mov    0x8(%ebx),%eax
810032df:	85 c0                	test   %eax,%eax
810032e1:	75 8f                	jne    81003272 <__sprint_r+0x3e>
810032e3:	eb 14                	jmp    810032f9 <__sprint_r+0xc5>
810032e5:	83 ec 04             	sub    $0x4,%esp
810032e8:	53                   	push   %ebx
810032e9:	ff 75 0c             	push   0xc(%ebp)
810032ec:	ff 75 08             	push   0x8(%ebp)
810032ef:	e8 60 1d 00 00       	call   81005054 <__sfvwrite_r>
810032f4:	83 c4 10             	add    $0x10,%esp
810032f7:	89 c6                	mov    %eax,%esi
810032f9:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81003300:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81003307:	89 f0                	mov    %esi,%eax
81003309:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100330c:	5b                   	pop    %ebx
8100330d:	5e                   	pop    %esi
8100330e:	5d                   	pop    %ebp
8100330f:	c3                   	ret    

81003310 <__sfputc_r>:
81003310:	55                   	push   %ebp
81003311:	89 e5                	mov    %esp,%ebp
81003313:	83 ec 08             	sub    $0x8,%esp
81003316:	8b 45 10             	mov    0x10(%ebp),%eax
81003319:	8b 40 08             	mov    0x8(%eax),%eax
8100331c:	8d 50 ff             	lea    -0x1(%eax),%edx
8100331f:	8b 45 10             	mov    0x10(%ebp),%eax
81003322:	89 50 08             	mov    %edx,0x8(%eax)
81003325:	8b 45 10             	mov    0x10(%ebp),%eax
81003328:	8b 40 08             	mov    0x8(%eax),%eax
8100332b:	85 c0                	test   %eax,%eax
8100332d:	79 17                	jns    81003346 <__sfputc_r+0x36>
8100332f:	8b 45 10             	mov    0x10(%ebp),%eax
81003332:	8b 50 08             	mov    0x8(%eax),%edx
81003335:	8b 45 10             	mov    0x10(%ebp),%eax
81003338:	8b 40 18             	mov    0x18(%eax),%eax
8100333b:	39 c2                	cmp    %eax,%edx
8100333d:	7c 21                	jl     81003360 <__sfputc_r+0x50>
8100333f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003342:	3c 0a                	cmp    $0xa,%al
81003344:	74 1a                	je     81003360 <__sfputc_r+0x50>
81003346:	8b 45 10             	mov    0x10(%ebp),%eax
81003349:	8b 00                	mov    (%eax),%eax
8100334b:	8d 48 01             	lea    0x1(%eax),%ecx
8100334e:	8b 55 10             	mov    0x10(%ebp),%edx
81003351:	89 0a                	mov    %ecx,(%edx)
81003353:	8b 55 0c             	mov    0xc(%ebp),%edx
81003356:	88 10                	mov    %dl,(%eax)
81003358:	0f b6 00             	movzbl (%eax),%eax
8100335b:	0f b6 c0             	movzbl %al,%eax
8100335e:	eb 14                	jmp    81003374 <__sfputc_r+0x64>
81003360:	83 ec 04             	sub    $0x4,%esp
81003363:	ff 75 10             	push   0x10(%ebp)
81003366:	ff 75 0c             	push   0xc(%ebp)
81003369:	ff 75 08             	push   0x8(%ebp)
8100336c:	e8 7e 14 00 00       	call   810047ef <__swbuf_r>
81003371:	83 c4 10             	add    $0x10,%esp
81003374:	c9                   	leave  
81003375:	c3                   	ret    

81003376 <__sfputs_r>:
81003376:	55                   	push   %ebp
81003377:	89 e5                	mov    %esp,%ebp
81003379:	53                   	push   %ebx
8100337a:	83 ec 14             	sub    $0x14,%esp
8100337d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003380:	8b 40 64             	mov    0x64(%eax),%eax
81003383:	25 00 20 00 00       	and    $0x2000,%eax
81003388:	85 c0                	test   %eax,%eax
8100338a:	74 4c                	je     810033d8 <__sfputs_r+0x62>
8100338c:	8b 45 10             	mov    0x10(%ebp),%eax
8100338f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003392:	bb 00 00 00 00       	mov    $0x0,%ebx
81003397:	eb 31                	jmp    810033ca <__sfputs_r+0x54>
81003399:	89 d8                	mov    %ebx,%eax
8100339b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810033a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810033a5:	01 d0                	add    %edx,%eax
810033a7:	8b 00                	mov    (%eax),%eax
810033a9:	83 ec 04             	sub    $0x4,%esp
810033ac:	ff 75 0c             	push   0xc(%ebp)
810033af:	50                   	push   %eax
810033b0:	ff 75 08             	push   0x8(%ebp)
810033b3:	e8 fd 1b 00 00       	call   81004fb5 <_fputwc_r>
810033b8:	83 c4 10             	add    $0x10,%esp
810033bb:	83 f8 ff             	cmp    $0xffffffff,%eax
810033be:	75 07                	jne    810033c7 <__sfputs_r+0x51>
810033c0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810033c5:	eb 52                	jmp    81003419 <__sfputs_r+0xa3>
810033c7:	83 c3 01             	add    $0x1,%ebx
810033ca:	8b 45 14             	mov    0x14(%ebp),%eax
810033cd:	c1 e8 02             	shr    $0x2,%eax
810033d0:	89 da                	mov    %ebx,%edx
810033d2:	39 d0                	cmp    %edx,%eax
810033d4:	77 c3                	ja     81003399 <__sfputs_r+0x23>
810033d6:	eb 3c                	jmp    81003414 <__sfputs_r+0x9e>
810033d8:	bb 00 00 00 00       	mov    $0x0,%ebx
810033dd:	eb 2e                	jmp    8100340d <__sfputs_r+0x97>
810033df:	89 da                	mov    %ebx,%edx
810033e1:	8b 45 10             	mov    0x10(%ebp),%eax
810033e4:	01 d0                	add    %edx,%eax
810033e6:	0f b6 00             	movzbl (%eax),%eax
810033e9:	0f be c0             	movsbl %al,%eax
810033ec:	83 ec 04             	sub    $0x4,%esp
810033ef:	ff 75 0c             	push   0xc(%ebp)
810033f2:	50                   	push   %eax
810033f3:	ff 75 08             	push   0x8(%ebp)
810033f6:	e8 15 ff ff ff       	call   81003310 <__sfputc_r>
810033fb:	83 c4 10             	add    $0x10,%esp
810033fe:	83 f8 ff             	cmp    $0xffffffff,%eax
81003401:	75 07                	jne    8100340a <__sfputs_r+0x94>
81003403:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003408:	eb 0f                	jmp    81003419 <__sfputs_r+0xa3>
8100340a:	83 c3 01             	add    $0x1,%ebx
8100340d:	89 d8                	mov    %ebx,%eax
8100340f:	39 45 14             	cmp    %eax,0x14(%ebp)
81003412:	77 cb                	ja     810033df <__sfputs_r+0x69>
81003414:	b8 00 00 00 00       	mov    $0x0,%eax
81003419:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100341c:	c9                   	leave  
8100341d:	c3                   	ret    

8100341e <vfiprintf>:
8100341e:	55                   	push   %ebp
8100341f:	89 e5                	mov    %esp,%ebp
81003421:	83 ec 18             	sub    $0x18,%esp
81003424:	a1 84 72 00 81       	mov    0x81007284,%eax
81003429:	ff 75 10             	push   0x10(%ebp)
8100342c:	ff 75 0c             	push   0xc(%ebp)
8100342f:	ff 75 08             	push   0x8(%ebp)
81003432:	50                   	push   %eax
81003433:	e8 0b 00 00 00       	call   81003443 <_vfiprintf_r>
81003438:	83 c4 10             	add    $0x10,%esp
8100343b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100343e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003441:	c9                   	leave  
81003442:	c3                   	ret    

81003443 <_vfiprintf_r>:
81003443:	55                   	push   %ebp
81003444:	89 e5                	mov    %esp,%ebp
81003446:	57                   	push   %edi
81003447:	56                   	push   %esi
81003448:	53                   	push   %ebx
81003449:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
8100344f:	c7 45 e4 76 33 00 81 	movl   $0x81003376,-0x1c(%ebp)
81003456:	8b 45 08             	mov    0x8(%ebp),%eax
81003459:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100345c:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81003460:	74 18                	je     8100347a <_vfiprintf_r+0x37>
81003462:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003465:	8b 40 38             	mov    0x38(%eax),%eax
81003468:	85 c0                	test   %eax,%eax
8100346a:	75 0e                	jne    8100347a <_vfiprintf_r+0x37>
8100346c:	83 ec 0c             	sub    $0xc,%esp
8100346f:	ff 75 e0             	push   -0x20(%ebp)
81003472:	e8 f5 da ff ff       	call   81000f6c <__sinit>
81003477:	83 c4 10             	add    $0x10,%esp
8100347a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100347d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003481:	98                   	cwtl   
81003482:	83 e0 08             	and    $0x8,%eax
81003485:	85 c0                	test   %eax,%eax
81003487:	74 0a                	je     81003493 <_vfiprintf_r+0x50>
81003489:	8b 45 0c             	mov    0xc(%ebp),%eax
8100348c:	8b 40 10             	mov    0x10(%eax),%eax
8100348f:	85 c0                	test   %eax,%eax
81003491:	75 1f                	jne    810034b2 <_vfiprintf_r+0x6f>
81003493:	83 ec 08             	sub    $0x8,%esp
81003496:	ff 75 0c             	push   0xc(%ebp)
81003499:	ff 75 08             	push   0x8(%ebp)
8100349c:	e8 c7 14 00 00       	call   81004968 <__swsetup_r>
810034a1:	83 c4 10             	add    $0x10,%esp
810034a4:	85 c0                	test   %eax,%eax
810034a6:	74 0a                	je     810034b2 <_vfiprintf_r+0x6f>
810034a8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810034ad:	e9 df 02 00 00       	jmp    81003791 <_vfiprintf_r+0x34e>
810034b2:	8b 5d 10             	mov    0x10(%ebp),%ebx
810034b5:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
810034bc:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
810034c0:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
810034c4:	8b 45 14             	mov    0x14(%ebp),%eax
810034c7:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810034cd:	89 de                	mov    %ebx,%esi
810034cf:	eb 03                	jmp    810034d4 <_vfiprintf_r+0x91>
810034d1:	83 c3 01             	add    $0x1,%ebx
810034d4:	0f b6 03             	movzbl (%ebx),%eax
810034d7:	84 c0                	test   %al,%al
810034d9:	74 07                	je     810034e2 <_vfiprintf_r+0x9f>
810034db:	0f b6 03             	movzbl (%ebx),%eax
810034de:	3c 25                	cmp    $0x25,%al
810034e0:	75 ef                	jne    810034d1 <_vfiprintf_r+0x8e>
810034e2:	89 d8                	mov    %ebx,%eax
810034e4:	29 f0                	sub    %esi,%eax
810034e6:	85 c0                	test   %eax,%eax
810034e8:	74 2b                	je     81003515 <_vfiprintf_r+0xd2>
810034ea:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
810034f0:	50                   	push   %eax
810034f1:	56                   	push   %esi
810034f2:	ff 75 0c             	push   0xc(%ebp)
810034f5:	ff 75 08             	push   0x8(%ebp)
810034f8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810034fb:	ff d0                	call   *%eax
810034fd:	83 c4 10             	add    $0x10,%esp
81003500:	83 f8 ff             	cmp    $0xffffffff,%eax
81003503:	0f 84 68 02 00 00    	je     81003771 <_vfiprintf_r+0x32e>
81003509:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100350c:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81003512:	89 45 94             	mov    %eax,-0x6c(%ebp)
81003515:	0f b6 03             	movzbl (%ebx),%eax
81003518:	84 c0                	test   %al,%al
8100351a:	0f 84 54 02 00 00    	je     81003774 <_vfiprintf_r+0x331>
81003520:	83 c3 01             	add    $0x1,%ebx
81003523:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
8100352a:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81003531:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81003538:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
8100353f:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81003543:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
8100354a:	c7 45 dc d8 6a 00 81 	movl   $0x81006ad8,-0x24(%ebp)
81003551:	eb 1b                	jmp    8100356e <_vfiprintf_r+0x12b>
81003553:	8b 55 80             	mov    -0x80(%ebp),%edx
81003556:	89 f0                	mov    %esi,%eax
81003558:	2b 45 dc             	sub    -0x24(%ebp),%eax
8100355b:	be 01 00 00 00       	mov    $0x1,%esi
81003560:	89 c1                	mov    %eax,%ecx
81003562:	d3 e6                	shl    %cl,%esi
81003564:	89 f0                	mov    %esi,%eax
81003566:	09 d0                	or     %edx,%eax
81003568:	89 45 80             	mov    %eax,-0x80(%ebp)
8100356b:	83 c3 01             	add    $0x1,%ebx
8100356e:	0f b6 03             	movzbl (%ebx),%eax
81003571:	0f be c0             	movsbl %al,%eax
81003574:	83 ec 04             	sub    $0x4,%esp
81003577:	6a 05                	push   $0x5
81003579:	50                   	push   %eax
8100357a:	ff 75 dc             	push   -0x24(%ebp)
8100357d:	e8 ee fa ff ff       	call   81003070 <memchr>
81003582:	83 c4 10             	add    $0x10,%esp
81003585:	89 c6                	mov    %eax,%esi
81003587:	85 f6                	test   %esi,%esi
81003589:	75 c8                	jne    81003553 <_vfiprintf_r+0x110>
8100358b:	8b 45 80             	mov    -0x80(%ebp),%eax
8100358e:	83 e0 10             	and    $0x10,%eax
81003591:	85 c0                	test   %eax,%eax
81003593:	74 04                	je     81003599 <_vfiprintf_r+0x156>
81003595:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81003599:	8b 45 80             	mov    -0x80(%ebp),%eax
8100359c:	83 e0 08             	and    $0x8,%eax
8100359f:	85 c0                	test   %eax,%eax
810035a1:	74 04                	je     810035a7 <_vfiprintf_r+0x164>
810035a3:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
810035a7:	0f b6 03             	movzbl (%ebx),%eax
810035aa:	3c 2a                	cmp    $0x2a,%al
810035ac:	75 50                	jne    810035fe <_vfiprintf_r+0x1bb>
810035ae:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810035b4:	8d 50 04             	lea    0x4(%eax),%edx
810035b7:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
810035bd:	8b 00                	mov    (%eax),%eax
810035bf:	89 45 8c             	mov    %eax,-0x74(%ebp)
810035c2:	8b 45 8c             	mov    -0x74(%ebp),%eax
810035c5:	85 c0                	test   %eax,%eax
810035c7:	79 11                	jns    810035da <_vfiprintf_r+0x197>
810035c9:	8b 45 8c             	mov    -0x74(%ebp),%eax
810035cc:	f7 d8                	neg    %eax
810035ce:	89 45 8c             	mov    %eax,-0x74(%ebp)
810035d1:	8b 45 80             	mov    -0x80(%ebp),%eax
810035d4:	83 c8 02             	or     $0x2,%eax
810035d7:	89 45 80             	mov    %eax,-0x80(%ebp)
810035da:	83 c3 01             	add    $0x1,%ebx
810035dd:	eb 2d                	jmp    8100360c <_vfiprintf_r+0x1c9>
810035df:	8b 55 8c             	mov    -0x74(%ebp),%edx
810035e2:	89 d0                	mov    %edx,%eax
810035e4:	c1 e0 02             	shl    $0x2,%eax
810035e7:	01 d0                	add    %edx,%eax
810035e9:	01 c0                	add    %eax,%eax
810035eb:	89 c2                	mov    %eax,%edx
810035ed:	0f b6 03             	movzbl (%ebx),%eax
810035f0:	0f be c0             	movsbl %al,%eax
810035f3:	83 e8 30             	sub    $0x30,%eax
810035f6:	01 d0                	add    %edx,%eax
810035f8:	89 45 8c             	mov    %eax,-0x74(%ebp)
810035fb:	83 c3 01             	add    $0x1,%ebx
810035fe:	0f b6 03             	movzbl (%ebx),%eax
81003601:	0f be c0             	movsbl %al,%eax
81003604:	83 e8 30             	sub    $0x30,%eax
81003607:	83 f8 09             	cmp    $0x9,%eax
8100360a:	76 d3                	jbe    810035df <_vfiprintf_r+0x19c>
8100360c:	0f b6 03             	movzbl (%ebx),%eax
8100360f:	3c 2e                	cmp    $0x2e,%al
81003611:	75 67                	jne    8100367a <_vfiprintf_r+0x237>
81003613:	83 c3 01             	add    $0x1,%ebx
81003616:	0f b6 03             	movzbl (%ebx),%eax
81003619:	3c 2a                	cmp    $0x2a,%al
8100361b:	75 27                	jne    81003644 <_vfiprintf_r+0x201>
8100361d:	83 c3 01             	add    $0x1,%ebx
81003620:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81003626:	8d 50 04             	lea    0x4(%eax),%edx
81003629:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100362f:	8b 00                	mov    (%eax),%eax
81003631:	89 45 84             	mov    %eax,-0x7c(%ebp)
81003634:	8b 45 84             	mov    -0x7c(%ebp),%eax
81003637:	85 c0                	test   %eax,%eax
81003639:	79 3f                	jns    8100367a <_vfiprintf_r+0x237>
8100363b:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81003642:	eb 36                	jmp    8100367a <_vfiprintf_r+0x237>
81003644:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
8100364b:	eb 1f                	jmp    8100366c <_vfiprintf_r+0x229>
8100364d:	8b 55 84             	mov    -0x7c(%ebp),%edx
81003650:	89 d0                	mov    %edx,%eax
81003652:	c1 e0 02             	shl    $0x2,%eax
81003655:	01 d0                	add    %edx,%eax
81003657:	01 c0                	add    %eax,%eax
81003659:	89 c2                	mov    %eax,%edx
8100365b:	0f b6 03             	movzbl (%ebx),%eax
8100365e:	0f be c0             	movsbl %al,%eax
81003661:	83 e8 30             	sub    $0x30,%eax
81003664:	01 d0                	add    %edx,%eax
81003666:	89 45 84             	mov    %eax,-0x7c(%ebp)
81003669:	83 c3 01             	add    $0x1,%ebx
8100366c:	0f b6 03             	movzbl (%ebx),%eax
8100366f:	0f be c0             	movsbl %al,%eax
81003672:	83 e8 30             	sub    $0x30,%eax
81003675:	83 f8 09             	cmp    $0x9,%eax
81003678:	76 d3                	jbe    8100364d <_vfiprintf_r+0x20a>
8100367a:	c7 45 dc de 6a 00 81 	movl   $0x81006ade,-0x24(%ebp)
81003681:	0f b6 03             	movzbl (%ebx),%eax
81003684:	0f be c0             	movsbl %al,%eax
81003687:	83 ec 04             	sub    $0x4,%esp
8100368a:	6a 03                	push   $0x3
8100368c:	50                   	push   %eax
8100368d:	ff 75 dc             	push   -0x24(%ebp)
81003690:	e8 db f9 ff ff       	call   81003070 <memchr>
81003695:	83 c4 10             	add    $0x10,%esp
81003698:	89 c6                	mov    %eax,%esi
8100369a:	85 f6                	test   %esi,%esi
8100369c:	74 1b                	je     810036b9 <_vfiprintf_r+0x276>
8100369e:	8b 55 80             	mov    -0x80(%ebp),%edx
810036a1:	89 f0                	mov    %esi,%eax
810036a3:	2b 45 dc             	sub    -0x24(%ebp),%eax
810036a6:	be 40 00 00 00       	mov    $0x40,%esi
810036ab:	89 c1                	mov    %eax,%ecx
810036ad:	d3 e6                	shl    %cl,%esi
810036af:	89 f0                	mov    %esi,%eax
810036b1:	09 d0                	or     %edx,%eax
810036b3:	89 45 80             	mov    %eax,-0x80(%ebp)
810036b6:	83 c3 01             	add    $0x1,%ebx
810036b9:	89 d8                	mov    %ebx,%eax
810036bb:	8d 58 01             	lea    0x1(%eax),%ebx
810036be:	0f b6 00             	movzbl (%eax),%eax
810036c1:	88 45 98             	mov    %al,-0x68(%ebp)
810036c4:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
810036c8:	0f be c0             	movsbl %al,%eax
810036cb:	83 ec 04             	sub    $0x4,%esp
810036ce:	6a 06                	push   $0x6
810036d0:	50                   	push   %eax
810036d1:	68 e2 6a 00 81       	push   $0x81006ae2
810036d6:	e8 95 f9 ff ff       	call   81003070 <memchr>
810036db:	83 c4 10             	add    $0x10,%esp
810036de:	89 c6                	mov    %eax,%esi
810036e0:	85 f6                	test   %esi,%esi
810036e2:	74 5a                	je     8100373e <_vfiprintf_r+0x2fb>
810036e4:	b8 00 00 00 00       	mov    $0x0,%eax
810036e9:	85 c0                	test   %eax,%eax
810036eb:	75 2e                	jne    8100371b <_vfiprintf_r+0x2d8>
810036ed:	8b 45 80             	mov    -0x80(%ebp),%eax
810036f0:	25 00 01 00 00       	and    $0x100,%eax
810036f5:	85 c0                	test   %eax,%eax
810036f7:	74 11                	je     8100370a <_vfiprintf_r+0x2c7>
810036f9:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810036ff:	83 c0 0c             	add    $0xc,%eax
81003702:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81003708:	eb 55                	jmp    8100375f <_vfiprintf_r+0x31c>
8100370a:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81003710:	83 c0 08             	add    $0x8,%eax
81003713:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81003719:	eb 44                	jmp    8100375f <_vfiprintf_r+0x31c>
8100371b:	83 ec 0c             	sub    $0xc,%esp
8100371e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81003724:	50                   	push   %eax
81003725:	ff 75 e4             	push   -0x1c(%ebp)
81003728:	ff 75 0c             	push   0xc(%ebp)
8100372b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100372e:	50                   	push   %eax
8100372f:	ff 75 08             	push   0x8(%ebp)
81003732:	e8 c9 c8 ff 7e       	call   0 <do_help-0x81000000>
81003737:	83 c4 20             	add    $0x20,%esp
8100373a:	89 c7                	mov    %eax,%edi
8100373c:	eb 21                	jmp    8100375f <_vfiprintf_r+0x31c>
8100373e:	83 ec 0c             	sub    $0xc,%esp
81003741:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81003747:	50                   	push   %eax
81003748:	ff 75 e4             	push   -0x1c(%ebp)
8100374b:	ff 75 0c             	push   0xc(%ebp)
8100374e:	8d 45 80             	lea    -0x80(%ebp),%eax
81003751:	50                   	push   %eax
81003752:	ff 75 08             	push   0x8(%ebp)
81003755:	e8 da 01 00 00       	call   81003934 <_printf_i>
8100375a:	83 c4 20             	add    $0x20,%esp
8100375d:	89 c7                	mov    %eax,%edi
8100375f:	83 ff ff             	cmp    $0xffffffff,%edi
81003762:	74 13                	je     81003777 <_vfiprintf_r+0x334>
81003764:	8b 45 94             	mov    -0x6c(%ebp),%eax
81003767:	01 f8                	add    %edi,%eax
81003769:	89 45 94             	mov    %eax,-0x6c(%ebp)
8100376c:	e9 5c fd ff ff       	jmp    810034cd <_vfiprintf_r+0x8a>
81003771:	90                   	nop
81003772:	eb 04                	jmp    81003778 <_vfiprintf_r+0x335>
81003774:	90                   	nop
81003775:	eb 01                	jmp    81003778 <_vfiprintf_r+0x335>
81003777:	90                   	nop
81003778:	8b 45 0c             	mov    0xc(%ebp),%eax
8100377b:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100377f:	98                   	cwtl   
81003780:	83 e0 40             	and    $0x40,%eax
81003783:	85 c0                	test   %eax,%eax
81003785:	75 05                	jne    8100378c <_vfiprintf_r+0x349>
81003787:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100378a:	eb 05                	jmp    81003791 <_vfiprintf_r+0x34e>
8100378c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003791:	8d 65 f4             	lea    -0xc(%ebp),%esp
81003794:	5b                   	pop    %ebx
81003795:	5e                   	pop    %esi
81003796:	5f                   	pop    %edi
81003797:	5d                   	pop    %ebp
81003798:	c3                   	ret    

81003799 <_printf_common>:
81003799:	55                   	push   %ebp
8100379a:	89 e5                	mov    %esp,%ebp
8100379c:	83 ec 18             	sub    $0x18,%esp
8100379f:	8b 45 0c             	mov    0xc(%ebp),%eax
810037a2:	8b 50 10             	mov    0x10(%eax),%edx
810037a5:	8b 45 0c             	mov    0xc(%ebp),%eax
810037a8:	8b 40 08             	mov    0x8(%eax),%eax
810037ab:	39 c2                	cmp    %eax,%edx
810037ad:	0f 4c d0             	cmovl  %eax,%edx
810037b0:	8b 45 10             	mov    0x10(%ebp),%eax
810037b3:	89 10                	mov    %edx,(%eax)
810037b5:	8b 45 0c             	mov    0xc(%ebp),%eax
810037b8:	0f b6 40 43          	movzbl 0x43(%eax),%eax
810037bc:	84 c0                	test   %al,%al
810037be:	74 0d                	je     810037cd <_printf_common+0x34>
810037c0:	8b 45 10             	mov    0x10(%ebp),%eax
810037c3:	8b 00                	mov    (%eax),%eax
810037c5:	8d 50 01             	lea    0x1(%eax),%edx
810037c8:	8b 45 10             	mov    0x10(%ebp),%eax
810037cb:	89 10                	mov    %edx,(%eax)
810037cd:	8b 45 0c             	mov    0xc(%ebp),%eax
810037d0:	8b 00                	mov    (%eax),%eax
810037d2:	83 e0 20             	and    $0x20,%eax
810037d5:	85 c0                	test   %eax,%eax
810037d7:	74 0d                	je     810037e6 <_printf_common+0x4d>
810037d9:	8b 45 10             	mov    0x10(%ebp),%eax
810037dc:	8b 00                	mov    (%eax),%eax
810037de:	8d 50 02             	lea    0x2(%eax),%edx
810037e1:	8b 45 10             	mov    0x10(%ebp),%eax
810037e4:	89 10                	mov    %edx,(%eax)
810037e6:	8b 45 0c             	mov    0xc(%ebp),%eax
810037e9:	8b 00                	mov    (%eax),%eax
810037eb:	83 e0 06             	and    $0x6,%eax
810037ee:	85 c0                	test   %eax,%eax
810037f0:	75 41                	jne    81003833 <_printf_common+0x9a>
810037f2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810037f9:	eb 24                	jmp    8100381f <_printf_common+0x86>
810037fb:	8b 45 0c             	mov    0xc(%ebp),%eax
810037fe:	83 c0 19             	add    $0x19,%eax
81003801:	6a 01                	push   $0x1
81003803:	50                   	push   %eax
81003804:	ff 75 14             	push   0x14(%ebp)
81003807:	ff 75 08             	push   0x8(%ebp)
8100380a:	8b 45 18             	mov    0x18(%ebp),%eax
8100380d:	ff d0                	call   *%eax
8100380f:	83 c4 10             	add    $0x10,%esp
81003812:	83 f8 ff             	cmp    $0xffffffff,%eax
81003815:	0f 84 0b 01 00 00    	je     81003926 <_printf_common+0x18d>
8100381b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8100381f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003822:	8b 50 0c             	mov    0xc(%eax),%edx
81003825:	8b 45 10             	mov    0x10(%ebp),%eax
81003828:	8b 08                	mov    (%eax),%ecx
8100382a:	89 d0                	mov    %edx,%eax
8100382c:	29 c8                	sub    %ecx,%eax
8100382e:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81003831:	7c c8                	jl     810037fb <_printf_common+0x62>
81003833:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100383a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100383d:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81003841:	84 c0                	test   %al,%al
81003843:	74 04                	je     81003849 <_printf_common+0xb0>
81003845:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81003849:	8b 45 0c             	mov    0xc(%ebp),%eax
8100384c:	8b 00                	mov    (%eax),%eax
8100384e:	83 e0 20             	and    $0x20,%eax
81003851:	85 c0                	test   %eax,%eax
81003853:	74 28                	je     8100387d <_printf_common+0xe4>
81003855:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003858:	8d 50 01             	lea    0x1(%eax),%edx
8100385b:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100385e:	8b 55 0c             	mov    0xc(%ebp),%edx
81003861:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81003866:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003869:	8d 50 01             	lea    0x1(%eax),%edx
8100386c:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100386f:	8b 55 0c             	mov    0xc(%ebp),%edx
81003872:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81003876:	8b 55 0c             	mov    0xc(%ebp),%edx
81003879:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
8100387d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003880:	8b 55 0c             	mov    0xc(%ebp),%edx
81003883:	83 c2 43             	add    $0x43,%edx
81003886:	50                   	push   %eax
81003887:	52                   	push   %edx
81003888:	ff 75 14             	push   0x14(%ebp)
8100388b:	ff 75 08             	push   0x8(%ebp)
8100388e:	8b 45 18             	mov    0x18(%ebp),%eax
81003891:	ff d0                	call   *%eax
81003893:	83 c4 10             	add    $0x10,%esp
81003896:	83 f8 ff             	cmp    $0xffffffff,%eax
81003899:	0f 84 8a 00 00 00    	je     81003929 <_printf_common+0x190>
8100389f:	8b 45 0c             	mov    0xc(%ebp),%eax
810038a2:	8b 50 0c             	mov    0xc(%eax),%edx
810038a5:	8b 45 10             	mov    0x10(%ebp),%eax
810038a8:	8b 08                	mov    (%eax),%ecx
810038aa:	89 d0                	mov    %edx,%eax
810038ac:	29 c8                	sub    %ecx,%eax
810038ae:	89 45 f4             	mov    %eax,-0xc(%ebp)
810038b1:	8b 45 0c             	mov    0xc(%ebp),%eax
810038b4:	8b 00                	mov    (%eax),%eax
810038b6:	83 e0 06             	and    $0x6,%eax
810038b9:	83 f8 04             	cmp    $0x4,%eax
810038bc:	75 06                	jne    810038c4 <_printf_common+0x12b>
810038be:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810038c2:	79 07                	jns    810038cb <_printf_common+0x132>
810038c4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810038cb:	8b 45 0c             	mov    0xc(%ebp),%eax
810038ce:	8b 50 08             	mov    0x8(%eax),%edx
810038d1:	8b 45 0c             	mov    0xc(%ebp),%eax
810038d4:	8b 40 10             	mov    0x10(%eax),%eax
810038d7:	39 c2                	cmp    %eax,%edx
810038d9:	7e 13                	jle    810038ee <_printf_common+0x155>
810038db:	8b 45 0c             	mov    0xc(%ebp),%eax
810038de:	8b 50 08             	mov    0x8(%eax),%edx
810038e1:	8b 45 0c             	mov    0xc(%ebp),%eax
810038e4:	8b 48 10             	mov    0x10(%eax),%ecx
810038e7:	89 d0                	mov    %edx,%eax
810038e9:	29 c8                	sub    %ecx,%eax
810038eb:	01 45 f4             	add    %eax,-0xc(%ebp)
810038ee:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810038f5:	eb 20                	jmp    81003917 <_printf_common+0x17e>
810038f7:	8b 45 0c             	mov    0xc(%ebp),%eax
810038fa:	83 c0 1a             	add    $0x1a,%eax
810038fd:	6a 01                	push   $0x1
810038ff:	50                   	push   %eax
81003900:	ff 75 14             	push   0x14(%ebp)
81003903:	ff 75 08             	push   0x8(%ebp)
81003906:	8b 45 18             	mov    0x18(%ebp),%eax
81003909:	ff d0                	call   *%eax
8100390b:	83 c4 10             	add    $0x10,%esp
8100390e:	83 f8 ff             	cmp    $0xffffffff,%eax
81003911:	74 19                	je     8100392c <_printf_common+0x193>
81003913:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
81003917:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100391a:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100391d:	7c d8                	jl     810038f7 <_printf_common+0x15e>
8100391f:	b8 00 00 00 00       	mov    $0x0,%eax
81003924:	eb 0c                	jmp    81003932 <_printf_common+0x199>
81003926:	90                   	nop
81003927:	eb 04                	jmp    8100392d <_printf_common+0x194>
81003929:	90                   	nop
8100392a:	eb 01                	jmp    8100392d <_printf_common+0x194>
8100392c:	90                   	nop
8100392d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003932:	c9                   	leave  
81003933:	c3                   	ret    

81003934 <_printf_i>:
81003934:	55                   	push   %ebp
81003935:	89 e5                	mov    %esp,%ebp
81003937:	53                   	push   %ebx
81003938:	83 ec 24             	sub    $0x24,%esp
8100393b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100393e:	83 c0 1b             	add    $0x1b,%eax
81003941:	83 c0 28             	add    $0x28,%eax
81003944:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003947:	c7 45 e8 ec 6a 00 81 	movl   $0x81006aec,-0x18(%ebp)
8100394e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003951:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81003955:	0f be c0             	movsbl %al,%eax
81003958:	85 c0                	test   %eax,%eax
8100395a:	0f 84 00 03 00 00    	je     81003c60 <_printf_i+0x32c>
81003960:	85 c0                	test   %eax,%eax
81003962:	0f 88 52 03 00 00    	js     81003cba <_printf_i+0x386>
81003968:	83 f8 78             	cmp    $0x78,%eax
8100396b:	0f 8f 49 03 00 00    	jg     81003cba <_printf_i+0x386>
81003971:	83 f8 58             	cmp    $0x58,%eax
81003974:	0f 8c 40 03 00 00    	jl     81003cba <_printf_i+0x386>
8100397a:	83 e8 58             	sub    $0x58,%eax
8100397d:	83 f8 20             	cmp    $0x20,%eax
81003980:	0f 87 34 03 00 00    	ja     81003cba <_printf_i+0x386>
81003986:	8b 04 85 10 6b 00 81 	mov    -0x7eff94f0(,%eax,4),%eax
8100398d:	ff e0                	jmp    *%eax
8100398f:	8b 45 18             	mov    0x18(%ebp),%eax
81003992:	8b 00                	mov    (%eax),%eax
81003994:	8d 48 04             	lea    0x4(%eax),%ecx
81003997:	8b 55 18             	mov    0x18(%ebp),%edx
8100399a:	89 0a                	mov    %ecx,(%edx)
8100399c:	8b 00                	mov    (%eax),%eax
8100399e:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810039a2:	89 c2                	mov    %eax,%edx
810039a4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810039a7:	88 10                	mov    %dl,(%eax)
810039a9:	8b 45 0c             	mov    0xc(%ebp),%eax
810039ac:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810039b3:	e9 1c 03 00 00       	jmp    81003cd4 <_printf_i+0x3a0>
810039b8:	8b 45 0c             	mov    0xc(%ebp),%eax
810039bb:	8b 00                	mov    (%eax),%eax
810039bd:	25 80 00 00 00       	and    $0x80,%eax
810039c2:	85 c0                	test   %eax,%eax
810039c4:	74 11                	je     810039d7 <_printf_i+0xa3>
810039c6:	8b 45 18             	mov    0x18(%ebp),%eax
810039c9:	8b 00                	mov    (%eax),%eax
810039cb:	8d 48 04             	lea    0x4(%eax),%ecx
810039ce:	8b 55 18             	mov    0x18(%ebp),%edx
810039d1:	89 0a                	mov    %ecx,(%edx)
810039d3:	8b 00                	mov    (%eax),%eax
810039d5:	eb 2d                	jmp    81003a04 <_printf_i+0xd0>
810039d7:	8b 45 0c             	mov    0xc(%ebp),%eax
810039da:	8b 00                	mov    (%eax),%eax
810039dc:	83 e0 40             	and    $0x40,%eax
810039df:	85 c0                	test   %eax,%eax
810039e1:	74 12                	je     810039f5 <_printf_i+0xc1>
810039e3:	8b 45 18             	mov    0x18(%ebp),%eax
810039e6:	8b 00                	mov    (%eax),%eax
810039e8:	8d 48 04             	lea    0x4(%eax),%ecx
810039eb:	8b 55 18             	mov    0x18(%ebp),%edx
810039ee:	89 0a                	mov    %ecx,(%edx)
810039f0:	8b 00                	mov    (%eax),%eax
810039f2:	98                   	cwtl   
810039f3:	eb 0f                	jmp    81003a04 <_printf_i+0xd0>
810039f5:	8b 45 18             	mov    0x18(%ebp),%eax
810039f8:	8b 00                	mov    (%eax),%eax
810039fa:	8d 48 04             	lea    0x4(%eax),%ecx
810039fd:	8b 55 18             	mov    0x18(%ebp),%edx
81003a00:	89 0a                	mov    %ecx,(%edx)
81003a02:	8b 00                	mov    (%eax),%eax
81003a04:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003a07:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a0a:	85 c0                	test   %eax,%eax
81003a0c:	79 0a                	jns    81003a18 <_printf_i+0xe4>
81003a0e:	f7 5d f4             	negl   -0xc(%ebp)
81003a11:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a14:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81003a18:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
81003a1f:	e9 28 01 00 00       	jmp    81003b4c <_printf_i+0x218>
81003a24:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a27:	8b 00                	mov    (%eax),%eax
81003a29:	25 80 00 00 00       	and    $0x80,%eax
81003a2e:	85 c0                	test   %eax,%eax
81003a30:	74 11                	je     81003a43 <_printf_i+0x10f>
81003a32:	8b 45 18             	mov    0x18(%ebp),%eax
81003a35:	8b 00                	mov    (%eax),%eax
81003a37:	8d 48 04             	lea    0x4(%eax),%ecx
81003a3a:	8b 55 18             	mov    0x18(%ebp),%edx
81003a3d:	89 0a                	mov    %ecx,(%edx)
81003a3f:	8b 00                	mov    (%eax),%eax
81003a41:	eb 2f                	jmp    81003a72 <_printf_i+0x13e>
81003a43:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a46:	8b 00                	mov    (%eax),%eax
81003a48:	83 e0 40             	and    $0x40,%eax
81003a4b:	85 c0                	test   %eax,%eax
81003a4d:	74 14                	je     81003a63 <_printf_i+0x12f>
81003a4f:	8b 45 18             	mov    0x18(%ebp),%eax
81003a52:	8b 00                	mov    (%eax),%eax
81003a54:	8d 48 04             	lea    0x4(%eax),%ecx
81003a57:	8b 55 18             	mov    0x18(%ebp),%edx
81003a5a:	89 0a                	mov    %ecx,(%edx)
81003a5c:	8b 00                	mov    (%eax),%eax
81003a5e:	0f b7 c0             	movzwl %ax,%eax
81003a61:	eb 0f                	jmp    81003a72 <_printf_i+0x13e>
81003a63:	8b 45 18             	mov    0x18(%ebp),%eax
81003a66:	8b 00                	mov    (%eax),%eax
81003a68:	8d 48 04             	lea    0x4(%eax),%ecx
81003a6b:	8b 55 18             	mov    0x18(%ebp),%edx
81003a6e:	89 0a                	mov    %ecx,(%edx)
81003a70:	8b 00                	mov    (%eax),%eax
81003a72:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003a75:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a78:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81003a7c:	3c 6f                	cmp    $0x6f,%al
81003a7e:	75 07                	jne    81003a87 <_printf_i+0x153>
81003a80:	b8 08 00 00 00       	mov    $0x8,%eax
81003a85:	eb 05                	jmp    81003a8c <_printf_i+0x158>
81003a87:	b8 0a 00 00 00       	mov    $0xa,%eax
81003a8c:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003a8f:	e9 b1 00 00 00       	jmp    81003b45 <_printf_i+0x211>
81003a94:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a97:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81003a9b:	eb 1d                	jmp    81003aba <_printf_i+0x186>
81003a9d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003aa0:	8b 00                	mov    (%eax),%eax
81003aa2:	83 c8 20             	or     $0x20,%eax
81003aa5:	89 c2                	mov    %eax,%edx
81003aa7:	8b 45 0c             	mov    0xc(%ebp),%eax
81003aaa:	89 10                	mov    %edx,(%eax)
81003aac:	8b 45 0c             	mov    0xc(%ebp),%eax
81003aaf:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81003ab3:	c7 45 e8 fd 6a 00 81 	movl   $0x81006afd,-0x18(%ebp)
81003aba:	8b 45 0c             	mov    0xc(%ebp),%eax
81003abd:	8b 00                	mov    (%eax),%eax
81003abf:	25 80 00 00 00       	and    $0x80,%eax
81003ac4:	85 c0                	test   %eax,%eax
81003ac6:	74 11                	je     81003ad9 <_printf_i+0x1a5>
81003ac8:	8b 45 18             	mov    0x18(%ebp),%eax
81003acb:	8b 00                	mov    (%eax),%eax
81003acd:	8d 48 04             	lea    0x4(%eax),%ecx
81003ad0:	8b 55 18             	mov    0x18(%ebp),%edx
81003ad3:	89 0a                	mov    %ecx,(%edx)
81003ad5:	8b 00                	mov    (%eax),%eax
81003ad7:	eb 2f                	jmp    81003b08 <_printf_i+0x1d4>
81003ad9:	8b 45 0c             	mov    0xc(%ebp),%eax
81003adc:	8b 00                	mov    (%eax),%eax
81003ade:	83 e0 40             	and    $0x40,%eax
81003ae1:	85 c0                	test   %eax,%eax
81003ae3:	74 14                	je     81003af9 <_printf_i+0x1c5>
81003ae5:	8b 45 18             	mov    0x18(%ebp),%eax
81003ae8:	8b 00                	mov    (%eax),%eax
81003aea:	8d 48 04             	lea    0x4(%eax),%ecx
81003aed:	8b 55 18             	mov    0x18(%ebp),%edx
81003af0:	89 0a                	mov    %ecx,(%edx)
81003af2:	8b 00                	mov    (%eax),%eax
81003af4:	0f b7 c0             	movzwl %ax,%eax
81003af7:	eb 0f                	jmp    81003b08 <_printf_i+0x1d4>
81003af9:	8b 45 18             	mov    0x18(%ebp),%eax
81003afc:	8b 00                	mov    (%eax),%eax
81003afe:	8d 48 04             	lea    0x4(%eax),%ecx
81003b01:	8b 55 18             	mov    0x18(%ebp),%edx
81003b04:	89 0a                	mov    %ecx,(%edx)
81003b06:	8b 00                	mov    (%eax),%eax
81003b08:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003b0b:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
81003b12:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b15:	8b 00                	mov    (%eax),%eax
81003b17:	83 e0 01             	and    $0x1,%eax
81003b1a:	85 c0                	test   %eax,%eax
81003b1c:	74 0f                	je     81003b2d <_printf_i+0x1f9>
81003b1e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b21:	8b 00                	mov    (%eax),%eax
81003b23:	83 c8 20             	or     $0x20,%eax
81003b26:	89 c2                	mov    %eax,%edx
81003b28:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b2b:	89 10                	mov    %edx,(%eax)
81003b2d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003b31:	75 11                	jne    81003b44 <_printf_i+0x210>
81003b33:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b36:	8b 00                	mov    (%eax),%eax
81003b38:	83 e0 df             	and    $0xffffffdf,%eax
81003b3b:	89 c2                	mov    %eax,%edx
81003b3d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b40:	89 10                	mov    %edx,(%eax)
81003b42:	eb 01                	jmp    81003b45 <_printf_i+0x211>
81003b44:	90                   	nop
81003b45:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b48:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81003b4c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b4f:	8b 50 04             	mov    0x4(%eax),%edx
81003b52:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b55:	89 50 08             	mov    %edx,0x8(%eax)
81003b58:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b5b:	8b 40 08             	mov    0x8(%eax),%eax
81003b5e:	85 c0                	test   %eax,%eax
81003b60:	78 0f                	js     81003b71 <_printf_i+0x23d>
81003b62:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b65:	8b 00                	mov    (%eax),%eax
81003b67:	83 e0 fb             	and    $0xfffffffb,%eax
81003b6a:	89 c2                	mov    %eax,%edx
81003b6c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b6f:	89 10                	mov    %edx,(%eax)
81003b71:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003b75:	75 0a                	jne    81003b81 <_printf_i+0x24d>
81003b77:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b7a:	8b 40 04             	mov    0x4(%eax),%eax
81003b7d:	85 c0                	test   %eax,%eax
81003b7f:	74 34                	je     81003bb5 <_printf_i+0x281>
81003b81:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81003b84:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b87:	ba 00 00 00 00       	mov    $0x0,%edx
81003b8c:	f7 f1                	div    %ecx
81003b8e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003b91:	01 d0                	add    %edx,%eax
81003b93:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003b97:	0f b6 10             	movzbl (%eax),%edx
81003b9a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003b9d:	88 10                	mov    %dl,(%eax)
81003b9f:	8b 5d f0             	mov    -0x10(%ebp),%ebx
81003ba2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ba5:	ba 00 00 00 00       	mov    $0x0,%edx
81003baa:	f7 f3                	div    %ebx
81003bac:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003baf:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003bb3:	75 cc                	jne    81003b81 <_printf_i+0x24d>
81003bb5:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81003bb9:	75 26                	jne    81003be1 <_printf_i+0x2ad>
81003bbb:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bbe:	8b 00                	mov    (%eax),%eax
81003bc0:	83 e0 01             	and    $0x1,%eax
81003bc3:	85 c0                	test   %eax,%eax
81003bc5:	74 1a                	je     81003be1 <_printf_i+0x2ad>
81003bc7:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bca:	8b 50 04             	mov    0x4(%eax),%edx
81003bcd:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bd0:	8b 40 10             	mov    0x10(%eax),%eax
81003bd3:	39 c2                	cmp    %eax,%edx
81003bd5:	7f 0a                	jg     81003be1 <_printf_i+0x2ad>
81003bd7:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003bdb:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003bde:	c6 00 30             	movb   $0x30,(%eax)
81003be1:	8b 45 0c             	mov    0xc(%ebp),%eax
81003be4:	83 c0 1b             	add    $0x1b,%eax
81003be7:	83 c0 28             	add    $0x28,%eax
81003bea:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003bed:	89 c2                	mov    %eax,%edx
81003bef:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bf2:	89 50 10             	mov    %edx,0x10(%eax)
81003bf5:	e9 e2 00 00 00       	jmp    81003cdc <_printf_i+0x3a8>
81003bfa:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bfd:	8b 00                	mov    (%eax),%eax
81003bff:	25 80 00 00 00       	and    $0x80,%eax
81003c04:	85 c0                	test   %eax,%eax
81003c06:	74 19                	je     81003c21 <_printf_i+0x2ed>
81003c08:	8b 45 18             	mov    0x18(%ebp),%eax
81003c0b:	8b 00                	mov    (%eax),%eax
81003c0d:	8d 48 04             	lea    0x4(%eax),%ecx
81003c10:	8b 55 18             	mov    0x18(%ebp),%edx
81003c13:	89 0a                	mov    %ecx,(%edx)
81003c15:	8b 00                	mov    (%eax),%eax
81003c17:	8b 55 0c             	mov    0xc(%ebp),%edx
81003c1a:	8b 52 14             	mov    0x14(%edx),%edx
81003c1d:	89 10                	mov    %edx,(%eax)
81003c1f:	eb 3f                	jmp    81003c60 <_printf_i+0x32c>
81003c21:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c24:	8b 00                	mov    (%eax),%eax
81003c26:	83 e0 40             	and    $0x40,%eax
81003c29:	85 c0                	test   %eax,%eax
81003c2b:	74 1c                	je     81003c49 <_printf_i+0x315>
81003c2d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c30:	8b 58 14             	mov    0x14(%eax),%ebx
81003c33:	8b 45 18             	mov    0x18(%ebp),%eax
81003c36:	8b 00                	mov    (%eax),%eax
81003c38:	8d 48 04             	lea    0x4(%eax),%ecx
81003c3b:	8b 55 18             	mov    0x18(%ebp),%edx
81003c3e:	89 0a                	mov    %ecx,(%edx)
81003c40:	8b 00                	mov    (%eax),%eax
81003c42:	89 da                	mov    %ebx,%edx
81003c44:	66 89 10             	mov    %dx,(%eax)
81003c47:	eb 17                	jmp    81003c60 <_printf_i+0x32c>
81003c49:	8b 45 18             	mov    0x18(%ebp),%eax
81003c4c:	8b 00                	mov    (%eax),%eax
81003c4e:	8d 48 04             	lea    0x4(%eax),%ecx
81003c51:	8b 55 18             	mov    0x18(%ebp),%edx
81003c54:	89 0a                	mov    %ecx,(%edx)
81003c56:	8b 00                	mov    (%eax),%eax
81003c58:	8b 55 0c             	mov    0xc(%ebp),%edx
81003c5b:	8b 52 14             	mov    0x14(%edx),%edx
81003c5e:	89 10                	mov    %edx,(%eax)
81003c60:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c63:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81003c6a:	eb 70                	jmp    81003cdc <_printf_i+0x3a8>
81003c6c:	8b 45 18             	mov    0x18(%ebp),%eax
81003c6f:	8b 00                	mov    (%eax),%eax
81003c71:	8d 48 04             	lea    0x4(%eax),%ecx
81003c74:	8b 55 18             	mov    0x18(%ebp),%edx
81003c77:	89 0a                	mov    %ecx,(%edx)
81003c79:	8b 00                	mov    (%eax),%eax
81003c7b:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003c7e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c81:	8b 40 04             	mov    0x4(%eax),%eax
81003c84:	83 ec 04             	sub    $0x4,%esp
81003c87:	50                   	push   %eax
81003c88:	6a 00                	push   $0x0
81003c8a:	ff 75 ec             	push   -0x14(%ebp)
81003c8d:	e8 de f3 ff ff       	call   81003070 <memchr>
81003c92:	83 c4 10             	add    $0x10,%esp
81003c95:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003c98:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81003c9c:	74 0e                	je     81003cac <_printf_i+0x378>
81003c9e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003ca1:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003ca4:	89 c2                	mov    %eax,%edx
81003ca6:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ca9:	89 50 04             	mov    %edx,0x4(%eax)
81003cac:	8b 45 0c             	mov    0xc(%ebp),%eax
81003caf:	8b 50 04             	mov    0x4(%eax),%edx
81003cb2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003cb5:	89 50 10             	mov    %edx,0x10(%eax)
81003cb8:	eb 1a                	jmp    81003cd4 <_printf_i+0x3a0>
81003cba:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003cbe:	8b 45 0c             	mov    0xc(%ebp),%eax
81003cc1:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81003cc5:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003cc8:	88 10                	mov    %dl,(%eax)
81003cca:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ccd:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003cd4:	8b 45 0c             	mov    0xc(%ebp),%eax
81003cd7:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81003cdb:	90                   	nop
81003cdc:	83 ec 0c             	sub    $0xc,%esp
81003cdf:	ff 75 14             	push   0x14(%ebp)
81003ce2:	ff 75 10             	push   0x10(%ebp)
81003ce5:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003ce8:	50                   	push   %eax
81003ce9:	ff 75 0c             	push   0xc(%ebp)
81003cec:	ff 75 08             	push   0x8(%ebp)
81003cef:	e8 a5 fa ff ff       	call   81003799 <_printf_common>
81003cf4:	83 c4 20             	add    $0x20,%esp
81003cf7:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003cfa:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
81003cfe:	74 72                	je     81003d72 <_printf_i+0x43e>
81003d00:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d03:	8b 40 10             	mov    0x10(%eax),%eax
81003d06:	50                   	push   %eax
81003d07:	ff 75 ec             	push   -0x14(%ebp)
81003d0a:	ff 75 10             	push   0x10(%ebp)
81003d0d:	ff 75 08             	push   0x8(%ebp)
81003d10:	8b 45 14             	mov    0x14(%ebp),%eax
81003d13:	ff d0                	call   *%eax
81003d15:	83 c4 10             	add    $0x10,%esp
81003d18:	83 f8 ff             	cmp    $0xffffffff,%eax
81003d1b:	74 58                	je     81003d75 <_printf_i+0x441>
81003d1d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d20:	8b 00                	mov    (%eax),%eax
81003d22:	83 e0 02             	and    $0x2,%eax
81003d25:	85 c0                	test   %eax,%eax
81003d27:	74 39                	je     81003d62 <_printf_i+0x42e>
81003d29:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003d30:	eb 20                	jmp    81003d52 <_printf_i+0x41e>
81003d32:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d35:	83 c0 19             	add    $0x19,%eax
81003d38:	6a 01                	push   $0x1
81003d3a:	50                   	push   %eax
81003d3b:	ff 75 10             	push   0x10(%ebp)
81003d3e:	ff 75 08             	push   0x8(%ebp)
81003d41:	8b 45 14             	mov    0x14(%ebp),%eax
81003d44:	ff d0                	call   *%eax
81003d46:	83 c4 10             	add    $0x10,%esp
81003d49:	83 f8 ff             	cmp    $0xffffffff,%eax
81003d4c:	74 2a                	je     81003d78 <_printf_i+0x444>
81003d4e:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81003d52:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d55:	8b 40 0c             	mov    0xc(%eax),%eax
81003d58:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003d5b:	29 d0                	sub    %edx,%eax
81003d5d:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81003d60:	7c d0                	jl     81003d32 <_printf_i+0x3fe>
81003d62:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d65:	8b 50 0c             	mov    0xc(%eax),%edx
81003d68:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003d6b:	39 c2                	cmp    %eax,%edx
81003d6d:	0f 4d c2             	cmovge %edx,%eax
81003d70:	eb 0c                	jmp    81003d7e <_printf_i+0x44a>
81003d72:	90                   	nop
81003d73:	eb 04                	jmp    81003d79 <_printf_i+0x445>
81003d75:	90                   	nop
81003d76:	eb 01                	jmp    81003d79 <_printf_i+0x445>
81003d78:	90                   	nop
81003d79:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003d7e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003d81:	c9                   	leave  
81003d82:	c3                   	ret    

81003d83 <_iprintf_r>:
81003d83:	55                   	push   %ebp
81003d84:	89 e5                	mov    %esp,%ebp
81003d86:	83 ec 18             	sub    $0x18,%esp
81003d89:	8d 45 10             	lea    0x10(%ebp),%eax
81003d8c:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003d8f:	8b 55 f0             	mov    -0x10(%ebp),%edx
81003d92:	8b 45 08             	mov    0x8(%ebp),%eax
81003d95:	8b 40 08             	mov    0x8(%eax),%eax
81003d98:	52                   	push   %edx
81003d99:	ff 75 0c             	push   0xc(%ebp)
81003d9c:	50                   	push   %eax
81003d9d:	ff 75 08             	push   0x8(%ebp)
81003da0:	e8 9e f6 ff ff       	call   81003443 <_vfiprintf_r>
81003da5:	83 c4 10             	add    $0x10,%esp
81003da8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003dab:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003dae:	c9                   	leave  
81003daf:	c3                   	ret    

81003db0 <iprintf>:
81003db0:	55                   	push   %ebp
81003db1:	89 e5                	mov    %esp,%ebp
81003db3:	83 ec 18             	sub    $0x18,%esp
81003db6:	a1 84 72 00 81       	mov    0x81007284,%eax
81003dbb:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003dbe:	8d 45 0c             	lea    0xc(%ebp),%eax
81003dc1:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003dc4:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003dc7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003dca:	8b 40 08             	mov    0x8(%eax),%eax
81003dcd:	52                   	push   %edx
81003dce:	ff 75 08             	push   0x8(%ebp)
81003dd1:	50                   	push   %eax
81003dd2:	ff 75 f4             	push   -0xc(%ebp)
81003dd5:	e8 69 f6 ff ff       	call   81003443 <_vfiprintf_r>
81003dda:	83 c4 10             	add    $0x10,%esp
81003ddd:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003de0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003de3:	c9                   	leave  
81003de4:	c3                   	ret    

81003de5 <_puts_r>:
81003de5:	55                   	push   %ebp
81003de6:	89 e5                	mov    %esp,%ebp
81003de8:	83 ec 38             	sub    $0x38,%esp
81003deb:	83 ec 0c             	sub    $0xc,%esp
81003dee:	ff 75 0c             	push   0xc(%ebp)
81003df1:	e8 1a 06 00 00       	call   81004410 <strlen>
81003df6:	83 c4 10             	add    $0x10,%esp
81003df9:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003dfc:	8b 45 0c             	mov    0xc(%ebp),%eax
81003dff:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003e02:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e05:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003e08:	c7 45 d4 94 6b 00 81 	movl   $0x81006b94,-0x2c(%ebp)
81003e0f:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81003e16:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e19:	83 c0 01             	add    $0x1,%eax
81003e1c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003e1f:	8d 45 cc             	lea    -0x34(%ebp),%eax
81003e22:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003e25:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
81003e2c:	8b 45 08             	mov    0x8(%ebp),%eax
81003e2f:	8b 40 08             	mov    0x8(%eax),%eax
81003e32:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003e35:	8b 45 08             	mov    0x8(%ebp),%eax
81003e38:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003e3b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81003e3f:	74 18                	je     81003e59 <_puts_r+0x74>
81003e41:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003e44:	8b 40 38             	mov    0x38(%eax),%eax
81003e47:	85 c0                	test   %eax,%eax
81003e49:	75 0e                	jne    81003e59 <_puts_r+0x74>
81003e4b:	83 ec 0c             	sub    $0xc,%esp
81003e4e:	ff 75 ec             	push   -0x14(%ebp)
81003e51:	e8 16 d1 ff ff       	call   81000f6c <__sinit>
81003e56:	83 c4 10             	add    $0x10,%esp
81003e59:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003e5c:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003e60:	98                   	cwtl   
81003e61:	25 00 20 00 00       	and    $0x2000,%eax
81003e66:	85 c0                	test   %eax,%eax
81003e68:	75 24                	jne    81003e8e <_puts_r+0xa9>
81003e6a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003e6d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003e71:	80 cc 20             	or     $0x20,%ah
81003e74:	89 c2                	mov    %eax,%edx
81003e76:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003e79:	66 89 50 0c          	mov    %dx,0xc(%eax)
81003e7d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003e80:	8b 40 64             	mov    0x64(%eax),%eax
81003e83:	80 e4 df             	and    $0xdf,%ah
81003e86:	89 c2                	mov    %eax,%edx
81003e88:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003e8b:	89 50 64             	mov    %edx,0x64(%eax)
81003e8e:	83 ec 04             	sub    $0x4,%esp
81003e91:	8d 45 dc             	lea    -0x24(%ebp),%eax
81003e94:	50                   	push   %eax
81003e95:	ff 75 f0             	push   -0x10(%ebp)
81003e98:	ff 75 08             	push   0x8(%ebp)
81003e9b:	e8 b4 11 00 00       	call   81005054 <__sfvwrite_r>
81003ea0:	83 c4 10             	add    $0x10,%esp
81003ea3:	85 c0                	test   %eax,%eax
81003ea5:	74 07                	je     81003eae <_puts_r+0xc9>
81003ea7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003eac:	eb 05                	jmp    81003eb3 <_puts_r+0xce>
81003eae:	b8 0a 00 00 00       	mov    $0xa,%eax
81003eb3:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003eb6:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003eb9:	c9                   	leave  
81003eba:	c3                   	ret    

81003ebb <puts>:
81003ebb:	55                   	push   %ebp
81003ebc:	89 e5                	mov    %esp,%ebp
81003ebe:	83 ec 08             	sub    $0x8,%esp
81003ec1:	a1 84 72 00 81       	mov    0x81007284,%eax
81003ec6:	83 ec 08             	sub    $0x8,%esp
81003ec9:	ff 75 08             	push   0x8(%ebp)
81003ecc:	50                   	push   %eax
81003ecd:	e8 13 ff ff ff       	call   81003de5 <_puts_r>
81003ed2:	83 c4 10             	add    $0x10,%esp
81003ed5:	c9                   	leave  
81003ed6:	c3                   	ret    

81003ed7 <lflush>:
81003ed7:	55                   	push   %ebp
81003ed8:	89 e5                	mov    %esp,%ebp
81003eda:	83 ec 08             	sub    $0x8,%esp
81003edd:	8b 45 08             	mov    0x8(%ebp),%eax
81003ee0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003ee4:	98                   	cwtl   
81003ee5:	83 e0 09             	and    $0x9,%eax
81003ee8:	83 f8 09             	cmp    $0x9,%eax
81003eeb:	75 10                	jne    81003efd <lflush+0x26>
81003eed:	83 ec 0c             	sub    $0xc,%esp
81003ef0:	ff 75 08             	push   0x8(%ebp)
81003ef3:	e8 c9 cb ff ff       	call   81000ac1 <fflush>
81003ef8:	83 c4 10             	add    $0x10,%esp
81003efb:	eb 05                	jmp    81003f02 <lflush+0x2b>
81003efd:	b8 00 00 00 00       	mov    $0x0,%eax
81003f02:	c9                   	leave  
81003f03:	c3                   	ret    

81003f04 <__srefill_r>:
81003f04:	55                   	push   %ebp
81003f05:	89 e5                	mov    %esp,%ebp
81003f07:	56                   	push   %esi
81003f08:	53                   	push   %ebx
81003f09:	83 ec 10             	sub    $0x10,%esp
81003f0c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003f0f:	8b 45 08             	mov    0x8(%ebp),%eax
81003f12:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003f15:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003f19:	74 18                	je     81003f33 <__srefill_r+0x2f>
81003f1b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003f1e:	8b 40 38             	mov    0x38(%eax),%eax
81003f21:	85 c0                	test   %eax,%eax
81003f23:	75 0e                	jne    81003f33 <__srefill_r+0x2f>
81003f25:	83 ec 0c             	sub    $0xc,%esp
81003f28:	ff 75 f4             	push   -0xc(%ebp)
81003f2b:	e8 3c d0 ff ff       	call   81000f6c <__sinit>
81003f30:	83 c4 10             	add    $0x10,%esp
81003f33:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003f37:	98                   	cwtl   
81003f38:	25 00 20 00 00       	and    $0x2000,%eax
81003f3d:	85 c0                	test   %eax,%eax
81003f3f:	75 14                	jne    81003f55 <__srefill_r+0x51>
81003f41:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003f45:	80 cc 20             	or     $0x20,%ah
81003f48:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003f4c:	8b 43 64             	mov    0x64(%ebx),%eax
81003f4f:	80 e4 df             	and    $0xdf,%ah
81003f52:	89 43 64             	mov    %eax,0x64(%ebx)
81003f55:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81003f5c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003f60:	98                   	cwtl   
81003f61:	83 e0 20             	and    $0x20,%eax
81003f64:	85 c0                	test   %eax,%eax
81003f66:	74 0a                	je     81003f72 <__srefill_r+0x6e>
81003f68:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003f6d:	e9 8c 01 00 00       	jmp    810040fe <__srefill_r+0x1fa>
81003f72:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003f76:	98                   	cwtl   
81003f77:	83 e0 04             	and    $0x4,%eax
81003f7a:	85 c0                	test   %eax,%eax
81003f7c:	75 79                	jne    81003ff7 <__srefill_r+0xf3>
81003f7e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003f82:	98                   	cwtl   
81003f83:	83 e0 10             	and    $0x10,%eax
81003f86:	85 c0                	test   %eax,%eax
81003f88:	75 1e                	jne    81003fa8 <__srefill_r+0xa4>
81003f8a:	8b 45 08             	mov    0x8(%ebp),%eax
81003f8d:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81003f93:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003f97:	83 c8 40             	or     $0x40,%eax
81003f9a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003f9e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003fa3:	e9 56 01 00 00       	jmp    810040fe <__srefill_r+0x1fa>
81003fa8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003fac:	98                   	cwtl   
81003fad:	83 e0 08             	and    $0x8,%eax
81003fb0:	85 c0                	test   %eax,%eax
81003fb2:	74 36                	je     81003fea <__srefill_r+0xe6>
81003fb4:	83 ec 08             	sub    $0x8,%esp
81003fb7:	53                   	push   %ebx
81003fb8:	ff 75 08             	push   0x8(%ebp)
81003fbb:	e8 a9 ca ff ff       	call   81000a69 <_fflush_r>
81003fc0:	83 c4 10             	add    $0x10,%esp
81003fc3:	85 c0                	test   %eax,%eax
81003fc5:	74 0a                	je     81003fd1 <__srefill_r+0xcd>
81003fc7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003fcc:	e9 2d 01 00 00       	jmp    810040fe <__srefill_r+0x1fa>
81003fd1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003fd5:	83 e0 f7             	and    $0xfffffff7,%eax
81003fd8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003fdc:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81003fe3:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
81003fea:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003fee:	83 c8 04             	or     $0x4,%eax
81003ff1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003ff5:	eb 46                	jmp    8100403d <__srefill_r+0x139>
81003ff7:	8b 43 30             	mov    0x30(%ebx),%eax
81003ffa:	85 c0                	test   %eax,%eax
81003ffc:	74 3f                	je     8100403d <__srefill_r+0x139>
81003ffe:	8b 53 30             	mov    0x30(%ebx),%edx
81004001:	8d 43 40             	lea    0x40(%ebx),%eax
81004004:	39 c2                	cmp    %eax,%edx
81004006:	74 12                	je     8100401a <__srefill_r+0x116>
81004008:	8b 43 30             	mov    0x30(%ebx),%eax
8100400b:	83 ec 08             	sub    $0x8,%esp
8100400e:	50                   	push   %eax
8100400f:	ff 75 08             	push   0x8(%ebp)
81004012:	e8 b7 d0 ff ff       	call   810010ce <_free_r>
81004017:	83 c4 10             	add    $0x10,%esp
8100401a:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81004021:	8b 43 3c             	mov    0x3c(%ebx),%eax
81004024:	89 43 04             	mov    %eax,0x4(%ebx)
81004027:	8b 43 04             	mov    0x4(%ebx),%eax
8100402a:	85 c0                	test   %eax,%eax
8100402c:	74 0f                	je     8100403d <__srefill_r+0x139>
8100402e:	8b 43 38             	mov    0x38(%ebx),%eax
81004031:	89 03                	mov    %eax,(%ebx)
81004033:	b8 00 00 00 00       	mov    $0x0,%eax
81004038:	e9 c1 00 00 00       	jmp    810040fe <__srefill_r+0x1fa>
8100403d:	8b 43 10             	mov    0x10(%ebx),%eax
81004040:	85 c0                	test   %eax,%eax
81004042:	75 0f                	jne    81004053 <__srefill_r+0x14f>
81004044:	83 ec 08             	sub    $0x8,%esp
81004047:	53                   	push   %ebx
81004048:	ff 75 08             	push   0x8(%ebp)
8100404b:	e8 d8 16 00 00       	call   81005728 <__smakebuf_r>
81004050:	83 c4 10             	add    $0x10,%esp
81004053:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004057:	98                   	cwtl   
81004058:	83 e0 03             	and    $0x3,%eax
8100405b:	85 c0                	test   %eax,%eax
8100405d:	74 48                	je     810040a7 <__srefill_r+0x1a3>
8100405f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004063:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
81004067:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
8100406d:	a1 d4 6a 00 81       	mov    0x81006ad4,%eax
81004072:	83 ec 08             	sub    $0x8,%esp
81004075:	68 d7 3e 00 81       	push   $0x81003ed7
8100407a:	50                   	push   %eax
8100407b:	e8 8a d5 ff ff       	call   8100160a <_fwalk>
81004080:	83 c4 10             	add    $0x10,%esp
81004083:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
81004087:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100408b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100408f:	98                   	cwtl   
81004090:	83 e0 09             	and    $0x9,%eax
81004093:	83 f8 09             	cmp    $0x9,%eax
81004096:	75 0f                	jne    810040a7 <__srefill_r+0x1a3>
81004098:	83 ec 08             	sub    $0x8,%esp
8100409b:	53                   	push   %ebx
8100409c:	ff 75 08             	push   0x8(%ebp)
8100409f:	e8 9f c7 ff ff       	call   81000843 <__sflush_r>
810040a4:	83 c4 10             	add    $0x10,%esp
810040a7:	8b 43 10             	mov    0x10(%ebx),%eax
810040aa:	89 03                	mov    %eax,(%ebx)
810040ac:	8b 43 20             	mov    0x20(%ebx),%eax
810040af:	8b 73 14             	mov    0x14(%ebx),%esi
810040b2:	8b 0b                	mov    (%ebx),%ecx
810040b4:	8b 53 1c             	mov    0x1c(%ebx),%edx
810040b7:	56                   	push   %esi
810040b8:	51                   	push   %ecx
810040b9:	52                   	push   %edx
810040ba:	ff 75 08             	push   0x8(%ebp)
810040bd:	ff d0                	call   *%eax
810040bf:	83 c4 10             	add    $0x10,%esp
810040c2:	89 43 04             	mov    %eax,0x4(%ebx)
810040c5:	8b 43 04             	mov    0x4(%ebx),%eax
810040c8:	85 c0                	test   %eax,%eax
810040ca:	7f 2d                	jg     810040f9 <__srefill_r+0x1f5>
810040cc:	8b 43 04             	mov    0x4(%ebx),%eax
810040cf:	85 c0                	test   %eax,%eax
810040d1:	75 0d                	jne    810040e0 <__srefill_r+0x1dc>
810040d3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810040d7:	83 c8 20             	or     $0x20,%eax
810040da:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810040de:	eb 12                	jmp    810040f2 <__srefill_r+0x1ee>
810040e0:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810040e7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810040eb:	83 c8 40             	or     $0x40,%eax
810040ee:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810040f2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810040f7:	eb 05                	jmp    810040fe <__srefill_r+0x1fa>
810040f9:	b8 00 00 00 00       	mov    $0x0,%eax
810040fe:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004101:	5b                   	pop    %ebx
81004102:	5e                   	pop    %esi
81004103:	5d                   	pop    %ebp
81004104:	c3                   	ret    

81004105 <_sbrk_r>:
81004105:	55                   	push   %ebp
81004106:	89 e5                	mov    %esp,%ebp
81004108:	83 ec 18             	sub    $0x18,%esp
8100410b:	c7 05 d4 7e 00 81 00 	movl   $0x0,0x81007ed4
81004112:	00 00 00 
81004115:	83 ec 0c             	sub    $0xc,%esp
81004118:	ff 75 0c             	push   0xc(%ebp)
8100411b:	e8 26 c6 ff ff       	call   81000746 <sbrk>
81004120:	83 c4 10             	add    $0x10,%esp
81004123:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004126:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100412a:	75 14                	jne    81004140 <_sbrk_r+0x3b>
8100412c:	a1 d4 7e 00 81       	mov    0x81007ed4,%eax
81004131:	85 c0                	test   %eax,%eax
81004133:	74 0b                	je     81004140 <_sbrk_r+0x3b>
81004135:	8b 15 d4 7e 00 81    	mov    0x81007ed4,%edx
8100413b:	8b 45 08             	mov    0x8(%ebp),%eax
8100413e:	89 10                	mov    %edx,(%eax)
81004140:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004143:	c9                   	leave  
81004144:	c3                   	ret    

81004145 <__sread>:
81004145:	55                   	push   %ebp
81004146:	89 e5                	mov    %esp,%ebp
81004148:	56                   	push   %esi
81004149:	53                   	push   %ebx
8100414a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100414d:	8b 55 14             	mov    0x14(%ebp),%edx
81004150:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81004154:	98                   	cwtl   
81004155:	52                   	push   %edx
81004156:	ff 75 10             	push   0x10(%ebp)
81004159:	50                   	push   %eax
8100415a:	ff 75 08             	push   0x8(%ebp)
8100415d:	e8 6f 19 00 00       	call   81005ad1 <_read_r>
81004162:	83 c4 10             	add    $0x10,%esp
81004165:	89 c6                	mov    %eax,%esi
81004167:	85 f6                	test   %esi,%esi
81004169:	78 0a                	js     81004175 <__sread+0x30>
8100416b:	8b 43 50             	mov    0x50(%ebx),%eax
8100416e:	01 f0                	add    %esi,%eax
81004170:	89 43 50             	mov    %eax,0x50(%ebx)
81004173:	eb 0b                	jmp    81004180 <__sread+0x3b>
81004175:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004179:	80 e4 ef             	and    $0xef,%ah
8100417c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004180:	89 f0                	mov    %esi,%eax
81004182:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004185:	5b                   	pop    %ebx
81004186:	5e                   	pop    %esi
81004187:	5d                   	pop    %ebp
81004188:	c3                   	ret    

81004189 <__seofread>:
81004189:	55                   	push   %ebp
8100418a:	89 e5                	mov    %esp,%ebp
8100418c:	b8 00 00 00 00       	mov    $0x0,%eax
81004191:	5d                   	pop    %ebp
81004192:	c3                   	ret    

81004193 <__swrite>:
81004193:	55                   	push   %ebp
81004194:	89 e5                	mov    %esp,%ebp
81004196:	53                   	push   %ebx
81004197:	83 ec 14             	sub    $0x14,%esp
8100419a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100419d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810041a1:	98                   	cwtl   
810041a2:	25 00 01 00 00       	and    $0x100,%eax
810041a7:	85 c0                	test   %eax,%eax
810041a9:	74 15                	je     810041c0 <__swrite+0x2d>
810041ab:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810041af:	98                   	cwtl   
810041b0:	6a 02                	push   $0x2
810041b2:	6a 00                	push   $0x0
810041b4:	50                   	push   %eax
810041b5:	ff 75 08             	push   0x8(%ebp)
810041b8:	e8 25 15 00 00       	call   810056e2 <_lseek_r>
810041bd:	83 c4 10             	add    $0x10,%esp
810041c0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810041c4:	80 e4 ef             	and    $0xef,%ah
810041c7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810041cb:	8b 55 14             	mov    0x14(%ebp),%edx
810041ce:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810041d2:	98                   	cwtl   
810041d3:	52                   	push   %edx
810041d4:	ff 75 10             	push   0x10(%ebp)
810041d7:	50                   	push   %eax
810041d8:	ff 75 08             	push   0x8(%ebp)
810041db:	e8 42 07 00 00       	call   81004922 <_write_r>
810041e0:	83 c4 10             	add    $0x10,%esp
810041e3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810041e6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041e9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810041ec:	c9                   	leave  
810041ed:	c3                   	ret    

810041ee <__sseek>:
810041ee:	55                   	push   %ebp
810041ef:	89 e5                	mov    %esp,%ebp
810041f1:	56                   	push   %esi
810041f2:	53                   	push   %ebx
810041f3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810041f6:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810041fa:	98                   	cwtl   
810041fb:	ff 75 14             	push   0x14(%ebp)
810041fe:	ff 75 10             	push   0x10(%ebp)
81004201:	50                   	push   %eax
81004202:	ff 75 08             	push   0x8(%ebp)
81004205:	e8 d8 14 00 00       	call   810056e2 <_lseek_r>
8100420a:	83 c4 10             	add    $0x10,%esp
8100420d:	89 c6                	mov    %eax,%esi
8100420f:	83 fe ff             	cmp    $0xffffffff,%esi
81004212:	75 0d                	jne    81004221 <__sseek+0x33>
81004214:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004218:	80 e4 ef             	and    $0xef,%ah
8100421b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100421f:	eb 0e                	jmp    8100422f <__sseek+0x41>
81004221:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004225:	80 cc 10             	or     $0x10,%ah
81004228:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100422c:	89 73 50             	mov    %esi,0x50(%ebx)
8100422f:	89 f0                	mov    %esi,%eax
81004231:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004234:	5b                   	pop    %ebx
81004235:	5e                   	pop    %esi
81004236:	5d                   	pop    %ebp
81004237:	c3                   	ret    

81004238 <__sclose>:
81004238:	55                   	push   %ebp
81004239:	89 e5                	mov    %esp,%ebp
8100423b:	83 ec 18             	sub    $0x18,%esp
8100423e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004241:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004244:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004247:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100424b:	98                   	cwtl   
8100424c:	83 ec 08             	sub    $0x8,%esp
8100424f:	50                   	push   %eax
81004250:	ff 75 08             	push   0x8(%ebp)
81004253:	e8 80 09 00 00       	call   81004bd8 <_close_r>
81004258:	83 c4 10             	add    $0x10,%esp
8100425b:	c9                   	leave  
8100425c:	c3                   	ret    
8100425d:	66 90                	xchg   %ax,%ax
8100425f:	90                   	nop

81004260 <strchr>:
81004260:	55                   	push   %ebp
81004261:	89 e5                	mov    %esp,%ebp
81004263:	57                   	push   %edi
81004264:	53                   	push   %ebx
81004265:	31 db                	xor    %ebx,%ebx
81004267:	8b 7d 08             	mov    0x8(%ebp),%edi
8100426a:	02 5d 0c             	add    0xc(%ebp),%bl
8100426d:	0f 84 98 00 00 00    	je     8100430b <L25>
81004273:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004279:	74 37                	je     810042b2 <L5>
8100427b:	89 f8                	mov    %edi,%eax
8100427d:	8a 08                	mov    (%eax),%cl
8100427f:	84 c9                	test   %cl,%cl
81004281:	74 7b                	je     810042fe <L14>
81004283:	38 d9                	cmp    %bl,%cl
81004285:	74 7d                	je     81004304 <L19>
81004287:	47                   	inc    %edi
81004288:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100428e:	74 22                	je     810042b2 <L5>
81004290:	89 f8                	mov    %edi,%eax
81004292:	8a 08                	mov    (%eax),%cl
81004294:	84 c9                	test   %cl,%cl
81004296:	74 66                	je     810042fe <L14>
81004298:	38 d9                	cmp    %bl,%cl
8100429a:	74 68                	je     81004304 <L19>
8100429c:	47                   	inc    %edi
8100429d:	f7 c7 03 00 00 00    	test   $0x3,%edi
810042a3:	74 0d                	je     810042b2 <L5>
810042a5:	89 f8                	mov    %edi,%eax
810042a7:	8a 08                	mov    (%eax),%cl
810042a9:	84 c9                	test   %cl,%cl
810042ab:	74 51                	je     810042fe <L14>
810042ad:	38 d9                	cmp    %bl,%cl
810042af:	74 53                	je     81004304 <L19>
810042b1:	47                   	inc    %edi

810042b2 <L5>:
810042b2:	89 d9                	mov    %ebx,%ecx
810042b4:	c1 e3 08             	shl    $0x8,%ebx
810042b7:	83 ef 04             	sub    $0x4,%edi
810042ba:	09 cb                	or     %ecx,%ebx
810042bc:	89 da                	mov    %ebx,%edx
810042be:	c1 e3 10             	shl    $0x10,%ebx
810042c1:	09 d3                	or     %edx,%ebx

810042c3 <L10>:
810042c3:	83 c7 04             	add    $0x4,%edi
810042c6:	8b 0f                	mov    (%edi),%ecx
810042c8:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810042ce:	89 c8                	mov    %ecx,%eax
810042d0:	f7 d0                	not    %eax
810042d2:	21 c2                	and    %eax,%edx
810042d4:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810042da:	75 14                	jne    810042f0 <L9>
810042dc:	31 d9                	xor    %ebx,%ecx
810042de:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810042e4:	f7 d1                	not    %ecx
810042e6:	21 ca                	and    %ecx,%edx
810042e8:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810042ee:	74 d3                	je     810042c3 <L10>

810042f0 <L9>:
810042f0:	8d 47 ff             	lea    -0x1(%edi),%eax

810042f3 <L15>:
810042f3:	40                   	inc    %eax
810042f4:	8a 10                	mov    (%eax),%dl
810042f6:	84 d2                	test   %dl,%dl
810042f8:	74 04                	je     810042fe <L14>
810042fa:	38 da                	cmp    %bl,%dl
810042fc:	75 f5                	jne    810042f3 <L15>

810042fe <L14>:
810042fe:	38 18                	cmp    %bl,(%eax)
81004300:	74 02                	je     81004304 <L19>
81004302:	31 c0                	xor    %eax,%eax

81004304 <L19>:
81004304:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004307:	5b                   	pop    %ebx
81004308:	5f                   	pop    %edi
81004309:	c9                   	leave  
8100430a:	c3                   	ret    

8100430b <L25>:
8100430b:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004311:	74 2b                	je     8100433e <L26>
81004313:	89 f8                	mov    %edi,%eax
81004315:	8a 08                	mov    (%eax),%cl
81004317:	84 c9                	test   %cl,%cl
81004319:	74 e9                	je     81004304 <L19>
8100431b:	47                   	inc    %edi
8100431c:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004322:	74 1a                	je     8100433e <L26>
81004324:	89 f8                	mov    %edi,%eax
81004326:	8a 08                	mov    (%eax),%cl
81004328:	84 c9                	test   %cl,%cl
8100432a:	74 d8                	je     81004304 <L19>
8100432c:	47                   	inc    %edi
8100432d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004333:	74 09                	je     8100433e <L26>
81004335:	89 f8                	mov    %edi,%eax
81004337:	8a 08                	mov    (%eax),%cl
81004339:	84 c9                	test   %cl,%cl
8100433b:	74 c7                	je     81004304 <L19>
8100433d:	47                   	inc    %edi

8100433e <L26>:
8100433e:	83 ef 04             	sub    $0x4,%edi

81004341 <L27>:
81004341:	83 c7 04             	add    $0x4,%edi
81004344:	8b 0f                	mov    (%edi),%ecx
81004346:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8100434c:	89 c8                	mov    %ecx,%eax
8100434e:	f7 d0                	not    %eax
81004350:	21 c2                	and    %eax,%edx
81004352:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81004358:	74 e7                	je     81004341 <L27>
8100435a:	eb 94                	jmp    810042f0 <L9>

8100435c <strcmp>:
8100435c:	55                   	push   %ebp
8100435d:	89 e5                	mov    %esp,%ebp
8100435f:	83 ec 10             	sub    $0x10,%esp
81004362:	8b 55 08             	mov    0x8(%ebp),%edx
81004365:	8b 45 0c             	mov    0xc(%ebp),%eax
81004368:	09 d0                	or     %edx,%eax
8100436a:	83 e0 03             	and    $0x3,%eax
8100436d:	85 c0                	test   %eax,%eax
8100436f:	75 5e                	jne    810043cf <strcmp+0x73>
81004371:	8b 45 08             	mov    0x8(%ebp),%eax
81004374:	89 45 fc             	mov    %eax,-0x4(%ebp)
81004377:	8b 45 0c             	mov    0xc(%ebp),%eax
8100437a:	89 45 f8             	mov    %eax,-0x8(%ebp)
8100437d:	eb 2c                	jmp    810043ab <strcmp+0x4f>
8100437f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004382:	8b 00                	mov    (%eax),%eax
81004384:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
8100438a:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100438d:	8b 00                	mov    (%eax),%eax
8100438f:	f7 d0                	not    %eax
81004391:	21 d0                	and    %edx,%eax
81004393:	25 80 80 80 80       	and    $0x80808080,%eax
81004398:	85 c0                	test   %eax,%eax
8100439a:	74 07                	je     810043a3 <strcmp+0x47>
8100439c:	b8 00 00 00 00       	mov    $0x0,%eax
810043a1:	eb 5c                	jmp    810043ff <strcmp+0xa3>
810043a3:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
810043a7:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
810043ab:	8b 45 fc             	mov    -0x4(%ebp),%eax
810043ae:	8b 10                	mov    (%eax),%edx
810043b0:	8b 45 f8             	mov    -0x8(%ebp),%eax
810043b3:	8b 00                	mov    (%eax),%eax
810043b5:	39 c2                	cmp    %eax,%edx
810043b7:	74 c6                	je     8100437f <strcmp+0x23>
810043b9:	8b 45 fc             	mov    -0x4(%ebp),%eax
810043bc:	89 45 08             	mov    %eax,0x8(%ebp)
810043bf:	8b 45 f8             	mov    -0x8(%ebp),%eax
810043c2:	89 45 0c             	mov    %eax,0xc(%ebp)
810043c5:	eb 08                	jmp    810043cf <strcmp+0x73>
810043c7:	83 45 08 01          	addl   $0x1,0x8(%ebp)
810043cb:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
810043cf:	8b 45 08             	mov    0x8(%ebp),%eax
810043d2:	0f b6 00             	movzbl (%eax),%eax
810043d5:	84 c0                	test   %al,%al
810043d7:	74 10                	je     810043e9 <strcmp+0x8d>
810043d9:	8b 45 08             	mov    0x8(%ebp),%eax
810043dc:	0f b6 10             	movzbl (%eax),%edx
810043df:	8b 45 0c             	mov    0xc(%ebp),%eax
810043e2:	0f b6 00             	movzbl (%eax),%eax
810043e5:	38 c2                	cmp    %al,%dl
810043e7:	74 de                	je     810043c7 <strcmp+0x6b>
810043e9:	8b 45 08             	mov    0x8(%ebp),%eax
810043ec:	0f b6 00             	movzbl (%eax),%eax
810043ef:	0f b6 d0             	movzbl %al,%edx
810043f2:	8b 45 0c             	mov    0xc(%ebp),%eax
810043f5:	0f b6 00             	movzbl (%eax),%eax
810043f8:	0f b6 c8             	movzbl %al,%ecx
810043fb:	89 d0                	mov    %edx,%eax
810043fd:	29 c8                	sub    %ecx,%eax
810043ff:	c9                   	leave  
81004400:	c3                   	ret    
81004401:	66 90                	xchg   %ax,%ax
81004403:	66 90                	xchg   %ax,%ax
81004405:	66 90                	xchg   %ax,%ax
81004407:	66 90                	xchg   %ax,%ax
81004409:	66 90                	xchg   %ax,%ax
8100440b:	66 90                	xchg   %ax,%ax
8100440d:	66 90                	xchg   %ax,%ax
8100440f:	90                   	nop

81004410 <strlen>:
81004410:	55                   	push   %ebp
81004411:	89 e5                	mov    %esp,%ebp
81004413:	57                   	push   %edi
81004414:	8b 55 08             	mov    0x8(%ebp),%edx
81004417:	89 d7                	mov    %edx,%edi
81004419:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100441f:	74 25                	je     81004446 <L5>
81004421:	8a 0f                	mov    (%edi),%cl
81004423:	47                   	inc    %edi
81004424:	84 c9                	test   %cl,%cl
81004426:	74 56                	je     8100447e <L15>
81004428:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100442e:	74 16                	je     81004446 <L5>
81004430:	8a 0f                	mov    (%edi),%cl
81004432:	47                   	inc    %edi
81004433:	84 c9                	test   %cl,%cl
81004435:	74 47                	je     8100447e <L15>
81004437:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100443d:	74 07                	je     81004446 <L5>
8100443f:	8a 0f                	mov    (%edi),%cl
81004441:	47                   	inc    %edi
81004442:	84 c9                	test   %cl,%cl
81004444:	74 38                	je     8100447e <L15>

81004446 <L5>:
81004446:	83 ef 04             	sub    $0x4,%edi
81004449:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81004450 <L10>:
81004450:	83 c7 04             	add    $0x4,%edi
81004453:	8b 0f                	mov    (%edi),%ecx
81004455:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
8100445b:	f7 d1                	not    %ecx
8100445d:	21 c8                	and    %ecx,%eax
8100445f:	a9 80 80 80 80       	test   $0x80808080,%eax
81004464:	74 ea                	je     81004450 <L10>
81004466:	f7 d1                	not    %ecx
81004468:	47                   	inc    %edi
81004469:	84 c9                	test   %cl,%cl
8100446b:	74 11                	je     8100447e <L15>
8100446d:	47                   	inc    %edi
8100446e:	c1 e9 08             	shr    $0x8,%ecx
81004471:	84 c9                	test   %cl,%cl
81004473:	74 09                	je     8100447e <L15>
81004475:	47                   	inc    %edi
81004476:	c1 e9 08             	shr    $0x8,%ecx
81004479:	84 c9                	test   %cl,%cl
8100447b:	74 01                	je     8100447e <L15>
8100447d:	47                   	inc    %edi

8100447e <L15>:
8100447e:	29 d7                	sub    %edx,%edi
81004480:	8d 47 ff             	lea    -0x1(%edi),%eax
81004483:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004486:	5f                   	pop    %edi
81004487:	c9                   	leave  
81004488:	c3                   	ret    

81004489 <strtok>:
81004489:	55                   	push   %ebp
8100448a:	89 e5                	mov    %esp,%ebp
8100448c:	83 ec 18             	sub    $0x18,%esp
8100448f:	8b 55 08             	mov    0x8(%ebp),%edx
81004492:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81004495:	a1 84 72 00 81       	mov    0x81007284,%eax
8100449a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100449d:	8b 45 f4             	mov    -0xc(%ebp),%eax
810044a0:	83 c0 5c             	add    $0x5c,%eax
810044a3:	6a 01                	push   $0x1
810044a5:	50                   	push   %eax
810044a6:	51                   	push   %ecx
810044a7:	52                   	push   %edx
810044a8:	e8 05 00 00 00       	call   810044b2 <__strtok_r>
810044ad:	83 c4 10             	add    $0x10,%esp
810044b0:	c9                   	leave  
810044b1:	c3                   	ret    

810044b2 <__strtok_r>:
810044b2:	55                   	push   %ebp
810044b3:	89 e5                	mov    %esp,%ebp
810044b5:	57                   	push   %edi
810044b6:	56                   	push   %esi
810044b7:	53                   	push   %ebx
810044b8:	83 ec 10             	sub    $0x10,%esp
810044bb:	8b 45 08             	mov    0x8(%ebp),%eax
810044be:	8b 4d 0c             	mov    0xc(%ebp),%ecx
810044c1:	85 c0                	test   %eax,%eax
810044c3:	75 13                	jne    810044d8 <__strtok_r+0x26>
810044c5:	8b 45 10             	mov    0x10(%ebp),%eax
810044c8:	8b 00                	mov    (%eax),%eax
810044ca:	85 c0                	test   %eax,%eax
810044cc:	75 0a                	jne    810044d8 <__strtok_r+0x26>
810044ce:	b8 00 00 00 00       	mov    $0x0,%eax
810044d3:	e9 92 00 00 00       	jmp    8100456a <__strtok_r+0xb8>
810044d8:	90                   	nop
810044d9:	89 c2                	mov    %eax,%edx
810044db:	8d 42 01             	lea    0x1(%edx),%eax
810044de:	0f b6 12             	movzbl (%edx),%edx
810044e1:	0f be f2             	movsbl %dl,%esi
810044e4:	89 cf                	mov    %ecx,%edi
810044e6:	eb 1c                	jmp    81004504 <__strtok_r+0x52>
810044e8:	39 de                	cmp    %ebx,%esi
810044ea:	75 18                	jne    81004504 <__strtok_r+0x52>
810044ec:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810044f0:	74 02                	je     810044f4 <__strtok_r+0x42>
810044f2:	eb e5                	jmp    810044d9 <__strtok_r+0x27>
810044f4:	8b 55 10             	mov    0x10(%ebp),%edx
810044f7:	89 02                	mov    %eax,(%edx)
810044f9:	8d 50 ff             	lea    -0x1(%eax),%edx
810044fc:	c6 02 00             	movb   $0x0,(%edx)
810044ff:	83 e8 01             	sub    $0x1,%eax
81004502:	eb 66                	jmp    8100456a <__strtok_r+0xb8>
81004504:	89 fa                	mov    %edi,%edx
81004506:	8d 7a 01             	lea    0x1(%edx),%edi
81004509:	0f b6 12             	movzbl (%edx),%edx
8100450c:	0f be da             	movsbl %dl,%ebx
8100450f:	85 db                	test   %ebx,%ebx
81004511:	75 d5                	jne    810044e8 <__strtok_r+0x36>
81004513:	85 f6                	test   %esi,%esi
81004515:	75 10                	jne    81004527 <__strtok_r+0x75>
81004517:	8b 45 10             	mov    0x10(%ebp),%eax
8100451a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81004520:	b8 00 00 00 00       	mov    $0x0,%eax
81004525:	eb 43                	jmp    8100456a <__strtok_r+0xb8>
81004527:	8d 50 ff             	lea    -0x1(%eax),%edx
8100452a:	89 55 f0             	mov    %edx,-0x10(%ebp)
8100452d:	89 c2                	mov    %eax,%edx
8100452f:	8d 42 01             	lea    0x1(%edx),%eax
81004532:	0f b6 12             	movzbl (%edx),%edx
81004535:	0f be f2             	movsbl %dl,%esi
81004538:	89 cf                	mov    %ecx,%edi
8100453a:	89 fa                	mov    %edi,%edx
8100453c:	8d 7a 01             	lea    0x1(%edx),%edi
8100453f:	0f b6 12             	movzbl (%edx),%edx
81004542:	0f be da             	movsbl %dl,%ebx
81004545:	39 f3                	cmp    %esi,%ebx
81004547:	75 1b                	jne    81004564 <__strtok_r+0xb2>
81004549:	85 f6                	test   %esi,%esi
8100454b:	75 07                	jne    81004554 <__strtok_r+0xa2>
8100454d:	b8 00 00 00 00       	mov    $0x0,%eax
81004552:	eb 06                	jmp    8100455a <__strtok_r+0xa8>
81004554:	8d 50 ff             	lea    -0x1(%eax),%edx
81004557:	c6 02 00             	movb   $0x0,(%edx)
8100455a:	8b 55 10             	mov    0x10(%ebp),%edx
8100455d:	89 02                	mov    %eax,(%edx)
8100455f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004562:	eb 06                	jmp    8100456a <__strtok_r+0xb8>
81004564:	85 db                	test   %ebx,%ebx
81004566:	75 d2                	jne    8100453a <__strtok_r+0x88>
81004568:	eb c3                	jmp    8100452d <__strtok_r+0x7b>
8100456a:	83 c4 10             	add    $0x10,%esp
8100456d:	5b                   	pop    %ebx
8100456e:	5e                   	pop    %esi
8100456f:	5f                   	pop    %edi
81004570:	5d                   	pop    %ebp
81004571:	c3                   	ret    

81004572 <strtok_r>:
81004572:	55                   	push   %ebp
81004573:	89 e5                	mov    %esp,%ebp
81004575:	8b 45 08             	mov    0x8(%ebp),%eax
81004578:	8b 55 0c             	mov    0xc(%ebp),%edx
8100457b:	6a 01                	push   $0x1
8100457d:	ff 75 10             	push   0x10(%ebp)
81004580:	52                   	push   %edx
81004581:	50                   	push   %eax
81004582:	e8 2b ff ff ff       	call   810044b2 <__strtok_r>
81004587:	83 c4 10             	add    $0x10,%esp
8100458a:	c9                   	leave  
8100458b:	c3                   	ret    

8100458c <__locale_ctype_ptr_l>:
8100458c:	55                   	push   %ebp
8100458d:	89 e5                	mov    %esp,%ebp
8100458f:	b8 20 6d 00 81       	mov    $0x81006d20,%eax
81004594:	5d                   	pop    %ebp
81004595:	c3                   	ret    

81004596 <__get_global_locale>:
81004596:	55                   	push   %ebp
81004597:	89 e5                	mov    %esp,%ebp
81004599:	b8 c0 76 00 81       	mov    $0x810076c0,%eax
8100459e:	5d                   	pop    %ebp
8100459f:	c3                   	ret    

810045a0 <__get_current_locale>:
810045a0:	55                   	push   %ebp
810045a1:	89 e5                	mov    %esp,%ebp
810045a3:	e8 ee ff ff ff       	call   81004596 <__get_global_locale>
810045a8:	5d                   	pop    %ebp
810045a9:	c3                   	ret    

810045aa <_strtol_l>:
810045aa:	55                   	push   %ebp
810045ab:	89 e5                	mov    %esp,%ebp
810045ad:	57                   	push   %edi
810045ae:	56                   	push   %esi
810045af:	53                   	push   %ebx
810045b0:	83 ec 1c             	sub    $0x1c,%esp
810045b3:	8b 75 0c             	mov    0xc(%ebp),%esi
810045b6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810045bd:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810045c1:	78 0c                	js     810045cf <_strtol_l+0x25>
810045c3:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
810045c7:	74 06                	je     810045cf <_strtol_l+0x25>
810045c9:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
810045cd:	7e 15                	jle    810045e4 <_strtol_l+0x3a>
810045cf:	e8 44 06 00 00       	call   81004c18 <__errno>
810045d4:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
810045da:	b8 00 00 00 00       	mov    $0x0,%eax
810045df:	e9 90 01 00 00       	jmp    81004774 <_strtol_l+0x1ca>
810045e4:	89 f0                	mov    %esi,%eax
810045e6:	8d 70 01             	lea    0x1(%eax),%esi
810045e9:	0f b6 00             	movzbl (%eax),%eax
810045ec:	0f b6 d8             	movzbl %al,%ebx
810045ef:	83 ec 0c             	sub    $0xc,%esp
810045f2:	ff 75 18             	push   0x18(%ebp)
810045f5:	e8 92 ff ff ff       	call   8100458c <__locale_ctype_ptr_l>
810045fa:	83 c4 10             	add    $0x10,%esp
810045fd:	89 da                	mov    %ebx,%edx
810045ff:	83 c2 01             	add    $0x1,%edx
81004602:	01 d0                	add    %edx,%eax
81004604:	0f b6 00             	movzbl (%eax),%eax
81004607:	0f be c0             	movsbl %al,%eax
8100460a:	83 e0 08             	and    $0x8,%eax
8100460d:	85 c0                	test   %eax,%eax
8100460f:	75 d3                	jne    810045e4 <_strtol_l+0x3a>
81004611:	83 fb 2d             	cmp    $0x2d,%ebx
81004614:	75 14                	jne    8100462a <_strtol_l+0x80>
81004616:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100461d:	89 f0                	mov    %esi,%eax
8100461f:	8d 70 01             	lea    0x1(%eax),%esi
81004622:	0f b6 00             	movzbl (%eax),%eax
81004625:	0f b6 d8             	movzbl %al,%ebx
81004628:	eb 10                	jmp    8100463a <_strtol_l+0x90>
8100462a:	83 fb 2b             	cmp    $0x2b,%ebx
8100462d:	75 0b                	jne    8100463a <_strtol_l+0x90>
8100462f:	89 f0                	mov    %esi,%eax
81004631:	8d 70 01             	lea    0x1(%eax),%esi
81004634:	0f b6 00             	movzbl (%eax),%eax
81004637:	0f b6 d8             	movzbl %al,%ebx
8100463a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100463e:	74 06                	je     81004646 <_strtol_l+0x9c>
81004640:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
81004644:	75 26                	jne    8100466c <_strtol_l+0xc2>
81004646:	83 fb 30             	cmp    $0x30,%ebx
81004649:	75 21                	jne    8100466c <_strtol_l+0xc2>
8100464b:	0f b6 06             	movzbl (%esi),%eax
8100464e:	3c 78                	cmp    $0x78,%al
81004650:	74 07                	je     81004659 <_strtol_l+0xaf>
81004652:	0f b6 06             	movzbl (%esi),%eax
81004655:	3c 58                	cmp    $0x58,%al
81004657:	75 13                	jne    8100466c <_strtol_l+0xc2>
81004659:	8d 46 01             	lea    0x1(%esi),%eax
8100465c:	0f b6 00             	movzbl (%eax),%eax
8100465f:	0f b6 d8             	movzbl %al,%ebx
81004662:	83 c6 02             	add    $0x2,%esi
81004665:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
8100466c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81004670:	75 14                	jne    81004686 <_strtol_l+0xdc>
81004672:	83 fb 30             	cmp    $0x30,%ebx
81004675:	75 07                	jne    8100467e <_strtol_l+0xd4>
81004677:	b8 08 00 00 00       	mov    $0x8,%eax
8100467c:	eb 05                	jmp    81004683 <_strtol_l+0xd9>
8100467e:	b8 0a 00 00 00       	mov    $0xa,%eax
81004683:	89 45 14             	mov    %eax,0x14(%ebp)
81004686:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100468a:	74 07                	je     81004693 <_strtol_l+0xe9>
8100468c:	b8 00 00 00 80       	mov    $0x80000000,%eax
81004691:	eb 05                	jmp    81004698 <_strtol_l+0xee>
81004693:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81004698:	89 c7                	mov    %eax,%edi
8100469a:	8b 4d 14             	mov    0x14(%ebp),%ecx
8100469d:	89 f8                	mov    %edi,%eax
8100469f:	ba 00 00 00 00       	mov    $0x0,%edx
810046a4:	f7 f1                	div    %ecx
810046a6:	89 d0                	mov    %edx,%eax
810046a8:	89 45 e0             	mov    %eax,-0x20(%ebp)
810046ab:	8b 4d 14             	mov    0x14(%ebp),%ecx
810046ae:	89 f8                	mov    %edi,%eax
810046b0:	ba 00 00 00 00       	mov    $0x0,%edx
810046b5:	f7 f1                	div    %ecx
810046b7:	89 c2                	mov    %eax,%edx
810046b9:	bf 00 00 00 00       	mov    $0x0,%edi
810046be:	b9 00 00 00 00       	mov    $0x0,%ecx
810046c3:	83 fb 2f             	cmp    $0x2f,%ebx
810046c6:	7e 0a                	jle    810046d2 <_strtol_l+0x128>
810046c8:	83 fb 39             	cmp    $0x39,%ebx
810046cb:	7f 05                	jg     810046d2 <_strtol_l+0x128>
810046cd:	83 eb 30             	sub    $0x30,%ebx
810046d0:	eb 1c                	jmp    810046ee <_strtol_l+0x144>
810046d2:	83 fb 40             	cmp    $0x40,%ebx
810046d5:	7e 0a                	jle    810046e1 <_strtol_l+0x137>
810046d7:	83 fb 5a             	cmp    $0x5a,%ebx
810046da:	7f 05                	jg     810046e1 <_strtol_l+0x137>
810046dc:	83 eb 37             	sub    $0x37,%ebx
810046df:	eb 0d                	jmp    810046ee <_strtol_l+0x144>
810046e1:	83 fb 60             	cmp    $0x60,%ebx
810046e4:	7e 46                	jle    8100472c <_strtol_l+0x182>
810046e6:	83 fb 7a             	cmp    $0x7a,%ebx
810046e9:	7f 41                	jg     8100472c <_strtol_l+0x182>
810046eb:	83 eb 57             	sub    $0x57,%ebx
810046ee:	3b 5d 14             	cmp    0x14(%ebp),%ebx
810046f1:	7d 38                	jge    8100472b <_strtol_l+0x181>
810046f3:	89 c8                	mov    %ecx,%eax
810046f5:	85 c0                	test   %eax,%eax
810046f7:	78 0f                	js     81004708 <_strtol_l+0x15e>
810046f9:	89 d0                	mov    %edx,%eax
810046fb:	39 c7                	cmp    %eax,%edi
810046fd:	77 09                	ja     81004708 <_strtol_l+0x15e>
810046ff:	39 c7                	cmp    %eax,%edi
81004701:	75 0c                	jne    8100470f <_strtol_l+0x165>
81004703:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
81004706:	7e 07                	jle    8100470f <_strtol_l+0x165>
81004708:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
8100470d:	eb 0f                	jmp    8100471e <_strtol_l+0x174>
8100470f:	b9 01 00 00 00       	mov    $0x1,%ecx
81004714:	8b 45 14             	mov    0x14(%ebp),%eax
81004717:	0f af f8             	imul   %eax,%edi
8100471a:	89 d8                	mov    %ebx,%eax
8100471c:	01 c7                	add    %eax,%edi
8100471e:	89 f0                	mov    %esi,%eax
81004720:	8d 70 01             	lea    0x1(%eax),%esi
81004723:	0f b6 00             	movzbl (%eax),%eax
81004726:	0f b6 d8             	movzbl %al,%ebx
81004729:	eb 98                	jmp    810046c3 <_strtol_l+0x119>
8100472b:	90                   	nop
8100472c:	89 c8                	mov    %ecx,%eax
8100472e:	85 c0                	test   %eax,%eax
81004730:	79 1f                	jns    81004751 <_strtol_l+0x1a7>
81004732:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81004736:	74 07                	je     8100473f <_strtol_l+0x195>
81004738:	b8 00 00 00 80       	mov    $0x80000000,%eax
8100473d:	eb 05                	jmp    81004744 <_strtol_l+0x19a>
8100473f:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81004744:	89 c7                	mov    %eax,%edi
81004746:	8b 45 08             	mov    0x8(%ebp),%eax
81004749:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
8100474f:	eb 08                	jmp    81004759 <_strtol_l+0x1af>
81004751:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81004755:	74 02                	je     81004759 <_strtol_l+0x1af>
81004757:	f7 df                	neg    %edi
81004759:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100475d:	74 13                	je     81004772 <_strtol_l+0x1c8>
8100475f:	89 c8                	mov    %ecx,%eax
81004761:	85 c0                	test   %eax,%eax
81004763:	74 05                	je     8100476a <_strtol_l+0x1c0>
81004765:	8d 46 ff             	lea    -0x1(%esi),%eax
81004768:	eb 03                	jmp    8100476d <_strtol_l+0x1c3>
8100476a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100476d:	8b 55 10             	mov    0x10(%ebp),%edx
81004770:	89 02                	mov    %eax,(%edx)
81004772:	89 f8                	mov    %edi,%eax
81004774:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004777:	5b                   	pop    %ebx
81004778:	5e                   	pop    %esi
81004779:	5f                   	pop    %edi
8100477a:	5d                   	pop    %ebp
8100477b:	c3                   	ret    

8100477c <_strtol_r>:
8100477c:	55                   	push   %ebp
8100477d:	89 e5                	mov    %esp,%ebp
8100477f:	83 ec 08             	sub    $0x8,%esp
81004782:	e8 19 fe ff ff       	call   810045a0 <__get_current_locale>
81004787:	83 ec 0c             	sub    $0xc,%esp
8100478a:	50                   	push   %eax
8100478b:	ff 75 14             	push   0x14(%ebp)
8100478e:	ff 75 10             	push   0x10(%ebp)
81004791:	ff 75 0c             	push   0xc(%ebp)
81004794:	ff 75 08             	push   0x8(%ebp)
81004797:	e8 0e fe ff ff       	call   810045aa <_strtol_l>
8100479c:	83 c4 20             	add    $0x20,%esp
8100479f:	c9                   	leave  
810047a0:	c3                   	ret    

810047a1 <strtol_l>:
810047a1:	55                   	push   %ebp
810047a2:	89 e5                	mov    %esp,%ebp
810047a4:	83 ec 08             	sub    $0x8,%esp
810047a7:	a1 84 72 00 81       	mov    0x81007284,%eax
810047ac:	83 ec 0c             	sub    $0xc,%esp
810047af:	ff 75 14             	push   0x14(%ebp)
810047b2:	ff 75 10             	push   0x10(%ebp)
810047b5:	ff 75 0c             	push   0xc(%ebp)
810047b8:	ff 75 08             	push   0x8(%ebp)
810047bb:	50                   	push   %eax
810047bc:	e8 e9 fd ff ff       	call   810045aa <_strtol_l>
810047c1:	83 c4 20             	add    $0x20,%esp
810047c4:	c9                   	leave  
810047c5:	c3                   	ret    

810047c6 <strtol>:
810047c6:	55                   	push   %ebp
810047c7:	89 e5                	mov    %esp,%ebp
810047c9:	83 ec 08             	sub    $0x8,%esp
810047cc:	e8 cf fd ff ff       	call   810045a0 <__get_current_locale>
810047d1:	8b 15 84 72 00 81    	mov    0x81007284,%edx
810047d7:	83 ec 0c             	sub    $0xc,%esp
810047da:	50                   	push   %eax
810047db:	ff 75 10             	push   0x10(%ebp)
810047de:	ff 75 0c             	push   0xc(%ebp)
810047e1:	ff 75 08             	push   0x8(%ebp)
810047e4:	52                   	push   %edx
810047e5:	e8 c0 fd ff ff       	call   810045aa <_strtol_l>
810047ea:	83 c4 20             	add    $0x20,%esp
810047ed:	c9                   	leave  
810047ee:	c3                   	ret    

810047ef <__swbuf_r>:
810047ef:	55                   	push   %ebp
810047f0:	89 e5                	mov    %esp,%ebp
810047f2:	57                   	push   %edi
810047f3:	56                   	push   %esi
810047f4:	53                   	push   %ebx
810047f5:	83 ec 1c             	sub    $0x1c,%esp
810047f8:	8b 7d 0c             	mov    0xc(%ebp),%edi
810047fb:	8b 5d 10             	mov    0x10(%ebp),%ebx
810047fe:	8b 45 08             	mov    0x8(%ebp),%eax
81004801:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004804:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81004808:	74 18                	je     81004822 <__swbuf_r+0x33>
8100480a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100480d:	8b 40 38             	mov    0x38(%eax),%eax
81004810:	85 c0                	test   %eax,%eax
81004812:	75 0e                	jne    81004822 <__swbuf_r+0x33>
81004814:	83 ec 0c             	sub    $0xc,%esp
81004817:	ff 75 e4             	push   -0x1c(%ebp)
8100481a:	e8 4d c7 ff ff       	call   81000f6c <__sinit>
8100481f:	83 c4 10             	add    $0x10,%esp
81004822:	8b 43 18             	mov    0x18(%ebx),%eax
81004825:	89 43 08             	mov    %eax,0x8(%ebx)
81004828:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100482c:	98                   	cwtl   
8100482d:	83 e0 08             	and    $0x8,%eax
81004830:	85 c0                	test   %eax,%eax
81004832:	74 07                	je     8100483b <__swbuf_r+0x4c>
81004834:	8b 43 10             	mov    0x10(%ebx),%eax
81004837:	85 c0                	test   %eax,%eax
81004839:	75 1d                	jne    81004858 <__swbuf_r+0x69>
8100483b:	83 ec 08             	sub    $0x8,%esp
8100483e:	53                   	push   %ebx
8100483f:	ff 75 08             	push   0x8(%ebp)
81004842:	e8 21 01 00 00       	call   81004968 <__swsetup_r>
81004847:	83 c4 10             	add    $0x10,%esp
8100484a:	85 c0                	test   %eax,%eax
8100484c:	74 0a                	je     81004858 <__swbuf_r+0x69>
8100484e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004853:	e9 a1 00 00 00       	jmp    810048f9 <__swbuf_r+0x10a>
81004858:	89 f8                	mov    %edi,%eax
8100485a:	0f b6 f8             	movzbl %al,%edi
8100485d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004861:	98                   	cwtl   
81004862:	25 00 20 00 00       	and    $0x2000,%eax
81004867:	85 c0                	test   %eax,%eax
81004869:	75 14                	jne    8100487f <__swbuf_r+0x90>
8100486b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100486f:	80 cc 20             	or     $0x20,%ah
81004872:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004876:	8b 43 64             	mov    0x64(%ebx),%eax
81004879:	80 e4 df             	and    $0xdf,%ah
8100487c:	89 43 64             	mov    %eax,0x64(%ebx)
8100487f:	8b 03                	mov    (%ebx),%eax
81004881:	8b 53 10             	mov    0x10(%ebx),%edx
81004884:	29 d0                	sub    %edx,%eax
81004886:	89 c6                	mov    %eax,%esi
81004888:	8b 43 14             	mov    0x14(%ebx),%eax
8100488b:	39 c6                	cmp    %eax,%esi
8100488d:	7c 1f                	jl     810048ae <__swbuf_r+0xbf>
8100488f:	83 ec 08             	sub    $0x8,%esp
81004892:	53                   	push   %ebx
81004893:	ff 75 08             	push   0x8(%ebp)
81004896:	e8 ce c1 ff ff       	call   81000a69 <_fflush_r>
8100489b:	83 c4 10             	add    $0x10,%esp
8100489e:	85 c0                	test   %eax,%eax
810048a0:	74 07                	je     810048a9 <__swbuf_r+0xba>
810048a2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810048a7:	eb 50                	jmp    810048f9 <__swbuf_r+0x10a>
810048a9:	be 00 00 00 00       	mov    $0x0,%esi
810048ae:	8b 43 08             	mov    0x8(%ebx),%eax
810048b1:	83 e8 01             	sub    $0x1,%eax
810048b4:	89 43 08             	mov    %eax,0x8(%ebx)
810048b7:	8b 03                	mov    (%ebx),%eax
810048b9:	8d 50 01             	lea    0x1(%eax),%edx
810048bc:	89 13                	mov    %edx,(%ebx)
810048be:	89 fa                	mov    %edi,%edx
810048c0:	88 10                	mov    %dl,(%eax)
810048c2:	83 c6 01             	add    $0x1,%esi
810048c5:	8b 43 14             	mov    0x14(%ebx),%eax
810048c8:	39 c6                	cmp    %eax,%esi
810048ca:	74 11                	je     810048dd <__swbuf_r+0xee>
810048cc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810048d0:	98                   	cwtl   
810048d1:	83 e0 01             	and    $0x1,%eax
810048d4:	85 c0                	test   %eax,%eax
810048d6:	74 1f                	je     810048f7 <__swbuf_r+0x108>
810048d8:	83 ff 0a             	cmp    $0xa,%edi
810048db:	75 1a                	jne    810048f7 <__swbuf_r+0x108>
810048dd:	83 ec 08             	sub    $0x8,%esp
810048e0:	53                   	push   %ebx
810048e1:	ff 75 08             	push   0x8(%ebp)
810048e4:	e8 80 c1 ff ff       	call   81000a69 <_fflush_r>
810048e9:	83 c4 10             	add    $0x10,%esp
810048ec:	85 c0                	test   %eax,%eax
810048ee:	74 07                	je     810048f7 <__swbuf_r+0x108>
810048f0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810048f5:	eb 02                	jmp    810048f9 <__swbuf_r+0x10a>
810048f7:	89 f8                	mov    %edi,%eax
810048f9:	8d 65 f4             	lea    -0xc(%ebp),%esp
810048fc:	5b                   	pop    %ebx
810048fd:	5e                   	pop    %esi
810048fe:	5f                   	pop    %edi
810048ff:	5d                   	pop    %ebp
81004900:	c3                   	ret    

81004901 <__swbuf>:
81004901:	55                   	push   %ebp
81004902:	89 e5                	mov    %esp,%ebp
81004904:	83 ec 08             	sub    $0x8,%esp
81004907:	8b 55 08             	mov    0x8(%ebp),%edx
8100490a:	8b 4d 0c             	mov    0xc(%ebp),%ecx
8100490d:	a1 84 72 00 81       	mov    0x81007284,%eax
81004912:	83 ec 04             	sub    $0x4,%esp
81004915:	51                   	push   %ecx
81004916:	52                   	push   %edx
81004917:	50                   	push   %eax
81004918:	e8 d2 fe ff ff       	call   810047ef <__swbuf_r>
8100491d:	83 c4 10             	add    $0x10,%esp
81004920:	c9                   	leave  
81004921:	c3                   	ret    

81004922 <_write_r>:
81004922:	55                   	push   %ebp
81004923:	89 e5                	mov    %esp,%ebp
81004925:	83 ec 18             	sub    $0x18,%esp
81004928:	c7 05 d4 7e 00 81 00 	movl   $0x0,0x81007ed4
8100492f:	00 00 00 
81004932:	83 ec 04             	sub    $0x4,%esp
81004935:	ff 75 14             	push   0x14(%ebp)
81004938:	ff 75 10             	push   0x10(%ebp)
8100493b:	ff 75 0c             	push   0xc(%ebp)
8100493e:	e8 40 bd ff ff       	call   81000683 <write>
81004943:	83 c4 10             	add    $0x10,%esp
81004946:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004949:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100494d:	75 14                	jne    81004963 <_write_r+0x41>
8100494f:	a1 d4 7e 00 81       	mov    0x81007ed4,%eax
81004954:	85 c0                	test   %eax,%eax
81004956:	74 0b                	je     81004963 <_write_r+0x41>
81004958:	8b 15 d4 7e 00 81    	mov    0x81007ed4,%edx
8100495e:	8b 45 08             	mov    0x8(%ebp),%eax
81004961:	89 10                	mov    %edx,(%eax)
81004963:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004966:	c9                   	leave  
81004967:	c3                   	ret    

81004968 <__swsetup_r>:
81004968:	55                   	push   %ebp
81004969:	89 e5                	mov    %esp,%ebp
8100496b:	53                   	push   %ebx
8100496c:	83 ec 14             	sub    $0x14,%esp
8100496f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004972:	a1 84 72 00 81       	mov    0x81007284,%eax
81004977:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100497a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100497e:	74 18                	je     81004998 <__swsetup_r+0x30>
81004980:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004983:	8b 40 38             	mov    0x38(%eax),%eax
81004986:	85 c0                	test   %eax,%eax
81004988:	75 0e                	jne    81004998 <__swsetup_r+0x30>
8100498a:	83 ec 0c             	sub    $0xc,%esp
8100498d:	ff 75 f4             	push   -0xc(%ebp)
81004990:	e8 d7 c5 ff ff       	call   81000f6c <__sinit>
81004995:	83 c4 10             	add    $0x10,%esp
81004998:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100499c:	98                   	cwtl   
8100499d:	83 e0 08             	and    $0x8,%eax
810049a0:	85 c0                	test   %eax,%eax
810049a2:	0f 85 82 00 00 00    	jne    81004a2a <__swsetup_r+0xc2>
810049a8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810049ac:	98                   	cwtl   
810049ad:	83 e0 10             	and    $0x10,%eax
810049b0:	85 c0                	test   %eax,%eax
810049b2:	75 1e                	jne    810049d2 <__swsetup_r+0x6a>
810049b4:	8b 45 08             	mov    0x8(%ebp),%eax
810049b7:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
810049bd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810049c1:	83 c8 40             	or     $0x40,%eax
810049c4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810049c8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810049cd:	e9 ec 00 00 00       	jmp    81004abe <__swsetup_r+0x156>
810049d2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810049d6:	98                   	cwtl   
810049d7:	83 e0 04             	and    $0x4,%eax
810049da:	85 c0                	test   %eax,%eax
810049dc:	74 41                	je     81004a1f <__swsetup_r+0xb7>
810049de:	8b 43 30             	mov    0x30(%ebx),%eax
810049e1:	85 c0                	test   %eax,%eax
810049e3:	74 23                	je     81004a08 <__swsetup_r+0xa0>
810049e5:	8b 53 30             	mov    0x30(%ebx),%edx
810049e8:	8d 43 40             	lea    0x40(%ebx),%eax
810049eb:	39 c2                	cmp    %eax,%edx
810049ed:	74 12                	je     81004a01 <__swsetup_r+0x99>
810049ef:	8b 43 30             	mov    0x30(%ebx),%eax
810049f2:	83 ec 08             	sub    $0x8,%esp
810049f5:	50                   	push   %eax
810049f6:	ff 75 08             	push   0x8(%ebp)
810049f9:	e8 d0 c6 ff ff       	call   810010ce <_free_r>
810049fe:	83 c4 10             	add    $0x10,%esp
81004a01:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81004a08:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004a0c:	83 e0 db             	and    $0xffffffdb,%eax
81004a0f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004a13:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004a1a:	8b 43 10             	mov    0x10(%ebx),%eax
81004a1d:	89 03                	mov    %eax,(%ebx)
81004a1f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004a23:	83 c8 08             	or     $0x8,%eax
81004a26:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004a2a:	8b 43 10             	mov    0x10(%ebx),%eax
81004a2d:	85 c0                	test   %eax,%eax
81004a2f:	75 2b                	jne    81004a5c <__swsetup_r+0xf4>
81004a31:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004a35:	98                   	cwtl   
81004a36:	25 00 02 00 00       	and    $0x200,%eax
81004a3b:	85 c0                	test   %eax,%eax
81004a3d:	74 0e                	je     81004a4d <__swsetup_r+0xe5>
81004a3f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004a43:	98                   	cwtl   
81004a44:	25 80 00 00 00       	and    $0x80,%eax
81004a49:	85 c0                	test   %eax,%eax
81004a4b:	74 0f                	je     81004a5c <__swsetup_r+0xf4>
81004a4d:	83 ec 08             	sub    $0x8,%esp
81004a50:	53                   	push   %ebx
81004a51:	ff 75 08             	push   0x8(%ebp)
81004a54:	e8 cf 0c 00 00       	call   81005728 <__smakebuf_r>
81004a59:	83 c4 10             	add    $0x10,%esp
81004a5c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004a60:	98                   	cwtl   
81004a61:	83 e0 01             	and    $0x1,%eax
81004a64:	85 c0                	test   %eax,%eax
81004a66:	74 11                	je     81004a79 <__swsetup_r+0x111>
81004a68:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81004a6f:	8b 43 14             	mov    0x14(%ebx),%eax
81004a72:	f7 d8                	neg    %eax
81004a74:	89 43 18             	mov    %eax,0x18(%ebx)
81004a77:	eb 19                	jmp    81004a92 <__swsetup_r+0x12a>
81004a79:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004a7d:	98                   	cwtl   
81004a7e:	83 e0 02             	and    $0x2,%eax
81004a81:	85 c0                	test   %eax,%eax
81004a83:	75 05                	jne    81004a8a <__swsetup_r+0x122>
81004a85:	8b 43 14             	mov    0x14(%ebx),%eax
81004a88:	eb 05                	jmp    81004a8f <__swsetup_r+0x127>
81004a8a:	b8 00 00 00 00       	mov    $0x0,%eax
81004a8f:	89 43 08             	mov    %eax,0x8(%ebx)
81004a92:	8b 43 10             	mov    0x10(%ebx),%eax
81004a95:	85 c0                	test   %eax,%eax
81004a97:	75 20                	jne    81004ab9 <__swsetup_r+0x151>
81004a99:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004a9d:	98                   	cwtl   
81004a9e:	25 80 00 00 00       	and    $0x80,%eax
81004aa3:	85 c0                	test   %eax,%eax
81004aa5:	74 12                	je     81004ab9 <__swsetup_r+0x151>
81004aa7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004aab:	83 c8 40             	or     $0x40,%eax
81004aae:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004ab2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004ab7:	eb 05                	jmp    81004abe <__swsetup_r+0x156>
81004ab9:	b8 00 00 00 00       	mov    $0x0,%eax
81004abe:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004ac1:	c9                   	leave  
81004ac2:	c3                   	ret    

81004ac3 <__call_exitprocs>:
81004ac3:	55                   	push   %ebp
81004ac4:	89 e5                	mov    %esp,%ebp
81004ac6:	57                   	push   %edi
81004ac7:	56                   	push   %esi
81004ac8:	53                   	push   %ebx
81004ac9:	83 ec 1c             	sub    $0x1c,%esp
81004acc:	a1 d4 6a 00 81       	mov    0x81006ad4,%eax
81004ad1:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
81004ad7:	a1 d4 6a 00 81       	mov    0x81006ad4,%eax
81004adc:	05 48 01 00 00       	add    $0x148,%eax
81004ae1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004ae4:	90                   	nop
81004ae5:	85 db                	test   %ebx,%ebx
81004ae7:	0f 84 e1 00 00 00    	je     81004bce <__call_exitprocs+0x10b>
81004aed:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
81004af3:	8b 43 04             	mov    0x4(%ebx),%eax
81004af6:	8d 70 ff             	lea    -0x1(%eax),%esi
81004af9:	e9 c6 00 00 00       	jmp    81004bc4 <__call_exitprocs+0x101>
81004afe:	b8 01 00 00 00       	mov    $0x1,%eax
81004b03:	89 f1                	mov    %esi,%ecx
81004b05:	d3 e0                	shl    %cl,%eax
81004b07:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004b0a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81004b0e:	74 17                	je     81004b27 <__call_exitprocs+0x64>
81004b10:	85 ff                	test   %edi,%edi
81004b12:	0f 84 a5 00 00 00    	je     81004bbd <__call_exitprocs+0xfa>
81004b18:	8d 46 20             	lea    0x20(%esi),%eax
81004b1b:	8b 04 87             	mov    (%edi,%eax,4),%eax
81004b1e:	39 45 0c             	cmp    %eax,0xc(%ebp)
81004b21:	0f 85 96 00 00 00    	jne    81004bbd <__call_exitprocs+0xfa>
81004b27:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
81004b2b:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004b2e:	8b 43 04             	mov    0x4(%ebx),%eax
81004b31:	83 e8 01             	sub    $0x1,%eax
81004b34:	39 c6                	cmp    %eax,%esi
81004b36:	75 0b                	jne    81004b43 <__call_exitprocs+0x80>
81004b38:	8b 43 04             	mov    0x4(%ebx),%eax
81004b3b:	83 e8 01             	sub    $0x1,%eax
81004b3e:	89 43 04             	mov    %eax,0x4(%ebx)
81004b41:	eb 08                	jmp    81004b4b <__call_exitprocs+0x88>
81004b43:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
81004b4a:	00 
81004b4b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81004b4f:	74 6f                	je     81004bc0 <__call_exitprocs+0xfd>
81004b51:	8b 43 04             	mov    0x4(%ebx),%eax
81004b54:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004b57:	85 ff                	test   %edi,%edi
81004b59:	74 0f                	je     81004b6a <__call_exitprocs+0xa7>
81004b5b:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
81004b61:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004b64:	21 d0                	and    %edx,%eax
81004b66:	85 c0                	test   %eax,%eax
81004b68:	75 07                	jne    81004b71 <__call_exitprocs+0xae>
81004b6a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004b6d:	ff d0                	call   *%eax
81004b6f:	eb 32                	jmp    81004ba3 <__call_exitprocs+0xe0>
81004b71:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
81004b77:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004b7a:	21 d0                	and    %edx,%eax
81004b7c:	85 c0                	test   %eax,%eax
81004b7e:	75 14                	jne    81004b94 <__call_exitprocs+0xd1>
81004b80:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81004b83:	83 ec 08             	sub    $0x8,%esp
81004b86:	50                   	push   %eax
81004b87:	ff 75 08             	push   0x8(%ebp)
81004b8a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004b8d:	ff d0                	call   *%eax
81004b8f:	83 c4 10             	add    $0x10,%esp
81004b92:	eb 0f                	jmp    81004ba3 <__call_exitprocs+0xe0>
81004b94:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81004b97:	83 ec 0c             	sub    $0xc,%esp
81004b9a:	50                   	push   %eax
81004b9b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004b9e:	ff d0                	call   *%eax
81004ba0:	83 c4 10             	add    $0x10,%esp
81004ba3:	8b 43 04             	mov    0x4(%ebx),%eax
81004ba6:	39 45 d8             	cmp    %eax,-0x28(%ebp)
81004ba9:	0f 85 1d ff ff ff    	jne    81004acc <__call_exitprocs+0x9>
81004baf:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004bb2:	8b 00                	mov    (%eax),%eax
81004bb4:	39 c3                	cmp    %eax,%ebx
81004bb6:	74 09                	je     81004bc1 <__call_exitprocs+0xfe>
81004bb8:	e9 0f ff ff ff       	jmp    81004acc <__call_exitprocs+0x9>
81004bbd:	90                   	nop
81004bbe:	eb 01                	jmp    81004bc1 <__call_exitprocs+0xfe>
81004bc0:	90                   	nop
81004bc1:	83 ee 01             	sub    $0x1,%esi
81004bc4:	85 f6                	test   %esi,%esi
81004bc6:	0f 89 32 ff ff ff    	jns    81004afe <__call_exitprocs+0x3b>
81004bcc:	eb 01                	jmp    81004bcf <__call_exitprocs+0x10c>
81004bce:	90                   	nop
81004bcf:	90                   	nop
81004bd0:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004bd3:	5b                   	pop    %ebx
81004bd4:	5e                   	pop    %esi
81004bd5:	5f                   	pop    %edi
81004bd6:	5d                   	pop    %ebp
81004bd7:	c3                   	ret    

81004bd8 <_close_r>:
81004bd8:	55                   	push   %ebp
81004bd9:	89 e5                	mov    %esp,%ebp
81004bdb:	83 ec 18             	sub    $0x18,%esp
81004bde:	c7 05 d4 7e 00 81 00 	movl   $0x0,0x81007ed4
81004be5:	00 00 00 
81004be8:	83 ec 0c             	sub    $0xc,%esp
81004beb:	ff 75 0c             	push   0xc(%ebp)
81004bee:	e8 bd ba ff ff       	call   810006b0 <close>
81004bf3:	83 c4 10             	add    $0x10,%esp
81004bf6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004bf9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004bfd:	75 14                	jne    81004c13 <_close_r+0x3b>
81004bff:	a1 d4 7e 00 81       	mov    0x81007ed4,%eax
81004c04:	85 c0                	test   %eax,%eax
81004c06:	74 0b                	je     81004c13 <_close_r+0x3b>
81004c08:	8b 15 d4 7e 00 81    	mov    0x81007ed4,%edx
81004c0e:	8b 45 08             	mov    0x8(%ebp),%eax
81004c11:	89 10                	mov    %edx,(%eax)
81004c13:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c16:	c9                   	leave  
81004c17:	c3                   	ret    

81004c18 <__errno>:
81004c18:	55                   	push   %ebp
81004c19:	89 e5                	mov    %esp,%ebp
81004c1b:	a1 84 72 00 81       	mov    0x81007284,%eax
81004c20:	5d                   	pop    %ebp
81004c21:	c3                   	ret    

81004c22 <_fclose_r>:
81004c22:	55                   	push   %ebp
81004c23:	89 e5                	mov    %esp,%ebp
81004c25:	53                   	push   %ebx
81004c26:	83 ec 14             	sub    $0x14,%esp
81004c29:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004c2c:	85 db                	test   %ebx,%ebx
81004c2e:	75 0a                	jne    81004c3a <_fclose_r+0x18>
81004c30:	b8 00 00 00 00       	mov    $0x0,%eax
81004c35:	e9 ea 00 00 00       	jmp    81004d24 <_fclose_r+0x102>
81004c3a:	8b 45 08             	mov    0x8(%ebp),%eax
81004c3d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004c40:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004c44:	74 18                	je     81004c5e <_fclose_r+0x3c>
81004c46:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004c49:	8b 40 38             	mov    0x38(%eax),%eax
81004c4c:	85 c0                	test   %eax,%eax
81004c4e:	75 0e                	jne    81004c5e <_fclose_r+0x3c>
81004c50:	83 ec 0c             	sub    $0xc,%esp
81004c53:	ff 75 f0             	push   -0x10(%ebp)
81004c56:	e8 11 c3 ff ff       	call   81000f6c <__sinit>
81004c5b:	83 c4 10             	add    $0x10,%esp
81004c5e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c62:	66 85 c0             	test   %ax,%ax
81004c65:	75 0a                	jne    81004c71 <_fclose_r+0x4f>
81004c67:	b8 00 00 00 00       	mov    $0x0,%eax
81004c6c:	e9 b3 00 00 00       	jmp    81004d24 <_fclose_r+0x102>
81004c71:	83 ec 08             	sub    $0x8,%esp
81004c74:	53                   	push   %ebx
81004c75:	ff 75 08             	push   0x8(%ebp)
81004c78:	e8 c6 bb ff ff       	call   81000843 <__sflush_r>
81004c7d:	83 c4 10             	add    $0x10,%esp
81004c80:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004c83:	8b 43 2c             	mov    0x2c(%ebx),%eax
81004c86:	85 c0                	test   %eax,%eax
81004c88:	74 1d                	je     81004ca7 <_fclose_r+0x85>
81004c8a:	8b 43 2c             	mov    0x2c(%ebx),%eax
81004c8d:	8b 53 1c             	mov    0x1c(%ebx),%edx
81004c90:	83 ec 08             	sub    $0x8,%esp
81004c93:	52                   	push   %edx
81004c94:	ff 75 08             	push   0x8(%ebp)
81004c97:	ff d0                	call   *%eax
81004c99:	83 c4 10             	add    $0x10,%esp
81004c9c:	85 c0                	test   %eax,%eax
81004c9e:	79 07                	jns    81004ca7 <_fclose_r+0x85>
81004ca0:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81004ca7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004cab:	98                   	cwtl   
81004cac:	25 80 00 00 00       	and    $0x80,%eax
81004cb1:	85 c0                	test   %eax,%eax
81004cb3:	74 12                	je     81004cc7 <_fclose_r+0xa5>
81004cb5:	8b 43 10             	mov    0x10(%ebx),%eax
81004cb8:	83 ec 08             	sub    $0x8,%esp
81004cbb:	50                   	push   %eax
81004cbc:	ff 75 08             	push   0x8(%ebp)
81004cbf:	e8 0a c4 ff ff       	call   810010ce <_free_r>
81004cc4:	83 c4 10             	add    $0x10,%esp
81004cc7:	8b 43 30             	mov    0x30(%ebx),%eax
81004cca:	85 c0                	test   %eax,%eax
81004ccc:	74 23                	je     81004cf1 <_fclose_r+0xcf>
81004cce:	8b 53 30             	mov    0x30(%ebx),%edx
81004cd1:	8d 43 40             	lea    0x40(%ebx),%eax
81004cd4:	39 c2                	cmp    %eax,%edx
81004cd6:	74 12                	je     81004cea <_fclose_r+0xc8>
81004cd8:	8b 43 30             	mov    0x30(%ebx),%eax
81004cdb:	83 ec 08             	sub    $0x8,%esp
81004cde:	50                   	push   %eax
81004cdf:	ff 75 08             	push   0x8(%ebp)
81004ce2:	e8 e7 c3 ff ff       	call   810010ce <_free_r>
81004ce7:	83 c4 10             	add    $0x10,%esp
81004cea:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81004cf1:	8b 43 44             	mov    0x44(%ebx),%eax
81004cf4:	85 c0                	test   %eax,%eax
81004cf6:	74 19                	je     81004d11 <_fclose_r+0xef>
81004cf8:	8b 43 44             	mov    0x44(%ebx),%eax
81004cfb:	83 ec 08             	sub    $0x8,%esp
81004cfe:	50                   	push   %eax
81004cff:	ff 75 08             	push   0x8(%ebp)
81004d02:	e8 c7 c3 ff ff       	call   810010ce <_free_r>
81004d07:	83 c4 10             	add    $0x10,%esp
81004d0a:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81004d11:	e8 ef c2 ff ff       	call   81001005 <__sfp_lock_acquire>
81004d16:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81004d1c:	e8 ea c2 ff ff       	call   8100100b <__sfp_lock_release>
81004d21:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004d24:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004d27:	c9                   	leave  
81004d28:	c3                   	ret    

81004d29 <fclose>:
81004d29:	55                   	push   %ebp
81004d2a:	89 e5                	mov    %esp,%ebp
81004d2c:	83 ec 08             	sub    $0x8,%esp
81004d2f:	8b 55 08             	mov    0x8(%ebp),%edx
81004d32:	a1 84 72 00 81       	mov    0x81007284,%eax
81004d37:	83 ec 08             	sub    $0x8,%esp
81004d3a:	52                   	push   %edx
81004d3b:	50                   	push   %eax
81004d3c:	e8 e1 fe ff ff       	call   81004c22 <_fclose_r>
81004d41:	83 c4 10             	add    $0x10,%esp
81004d44:	c9                   	leave  
81004d45:	c3                   	ret    

81004d46 <_fputc_r>:
81004d46:	55                   	push   %ebp
81004d47:	89 e5                	mov    %esp,%ebp
81004d49:	83 ec 18             	sub    $0x18,%esp
81004d4c:	8b 45 08             	mov    0x8(%ebp),%eax
81004d4f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004d52:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004d56:	74 18                	je     81004d70 <_fputc_r+0x2a>
81004d58:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004d5b:	8b 40 38             	mov    0x38(%eax),%eax
81004d5e:	85 c0                	test   %eax,%eax
81004d60:	75 0e                	jne    81004d70 <_fputc_r+0x2a>
81004d62:	83 ec 0c             	sub    $0xc,%esp
81004d65:	ff 75 f4             	push   -0xc(%ebp)
81004d68:	e8 ff c1 ff ff       	call   81000f6c <__sinit>
81004d6d:	83 c4 10             	add    $0x10,%esp
81004d70:	83 ec 04             	sub    $0x4,%esp
81004d73:	ff 75 10             	push   0x10(%ebp)
81004d76:	ff 75 0c             	push   0xc(%ebp)
81004d79:	ff 75 08             	push   0x8(%ebp)
81004d7c:	e8 b2 0c 00 00       	call   81005a33 <_putc_r>
81004d81:	83 c4 10             	add    $0x10,%esp
81004d84:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004d87:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004d8a:	c9                   	leave  
81004d8b:	c3                   	ret    

81004d8c <fputc>:
81004d8c:	55                   	push   %ebp
81004d8d:	89 e5                	mov    %esp,%ebp
81004d8f:	83 ec 18             	sub    $0x18,%esp
81004d92:	a1 84 72 00 81       	mov    0x81007284,%eax
81004d97:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004d9a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004d9d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004da0:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004da4:	74 18                	je     81004dbe <fputc+0x32>
81004da6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004da9:	8b 40 38             	mov    0x38(%eax),%eax
81004dac:	85 c0                	test   %eax,%eax
81004dae:	75 0e                	jne    81004dbe <fputc+0x32>
81004db0:	83 ec 0c             	sub    $0xc,%esp
81004db3:	ff 75 f0             	push   -0x10(%ebp)
81004db6:	e8 b1 c1 ff ff       	call   81000f6c <__sinit>
81004dbb:	83 c4 10             	add    $0x10,%esp
81004dbe:	83 ec 04             	sub    $0x4,%esp
81004dc1:	ff 75 0c             	push   0xc(%ebp)
81004dc4:	ff 75 08             	push   0x8(%ebp)
81004dc7:	ff 75 f4             	push   -0xc(%ebp)
81004dca:	e8 64 0c 00 00       	call   81005a33 <_putc_r>
81004dcf:	83 c4 10             	add    $0x10,%esp
81004dd2:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004dd5:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004dd8:	c9                   	leave  
81004dd9:	c3                   	ret    

81004dda <_fputs_r>:
81004dda:	55                   	push   %ebp
81004ddb:	89 e5                	mov    %esp,%ebp
81004ddd:	83 ec 28             	sub    $0x28,%esp
81004de0:	8b 45 0c             	mov    0xc(%ebp),%eax
81004de3:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004de6:	83 ec 0c             	sub    $0xc,%esp
81004de9:	ff 75 0c             	push   0xc(%ebp)
81004dec:	e8 1f f6 ff ff       	call   81004410 <strlen>
81004df1:	83 c4 10             	add    $0x10,%esp
81004df4:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004df7:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004dfa:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004dfd:	8d 45 dc             	lea    -0x24(%ebp),%eax
81004e00:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004e03:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81004e0a:	8b 45 08             	mov    0x8(%ebp),%eax
81004e0d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e10:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004e14:	74 18                	je     81004e2e <_fputs_r+0x54>
81004e16:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004e19:	8b 40 38             	mov    0x38(%eax),%eax
81004e1c:	85 c0                	test   %eax,%eax
81004e1e:	75 0e                	jne    81004e2e <_fputs_r+0x54>
81004e20:	83 ec 0c             	sub    $0xc,%esp
81004e23:	ff 75 f4             	push   -0xc(%ebp)
81004e26:	e8 41 c1 ff ff       	call   81000f6c <__sinit>
81004e2b:	83 c4 10             	add    $0x10,%esp
81004e2e:	8b 45 10             	mov    0x10(%ebp),%eax
81004e31:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004e35:	98                   	cwtl   
81004e36:	25 00 20 00 00       	and    $0x2000,%eax
81004e3b:	85 c0                	test   %eax,%eax
81004e3d:	75 24                	jne    81004e63 <_fputs_r+0x89>
81004e3f:	8b 45 10             	mov    0x10(%ebp),%eax
81004e42:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004e46:	80 cc 20             	or     $0x20,%ah
81004e49:	89 c2                	mov    %eax,%edx
81004e4b:	8b 45 10             	mov    0x10(%ebp),%eax
81004e4e:	66 89 50 0c          	mov    %dx,0xc(%eax)
81004e52:	8b 45 10             	mov    0x10(%ebp),%eax
81004e55:	8b 40 64             	mov    0x64(%eax),%eax
81004e58:	80 e4 df             	and    $0xdf,%ah
81004e5b:	89 c2                	mov    %eax,%edx
81004e5d:	8b 45 10             	mov    0x10(%ebp),%eax
81004e60:	89 50 64             	mov    %edx,0x64(%eax)
81004e63:	83 ec 04             	sub    $0x4,%esp
81004e66:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81004e69:	50                   	push   %eax
81004e6a:	ff 75 10             	push   0x10(%ebp)
81004e6d:	ff 75 08             	push   0x8(%ebp)
81004e70:	e8 df 01 00 00       	call   81005054 <__sfvwrite_r>
81004e75:	83 c4 10             	add    $0x10,%esp
81004e78:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004e7b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004e7e:	c9                   	leave  
81004e7f:	c3                   	ret    

81004e80 <fputs>:
81004e80:	55                   	push   %ebp
81004e81:	89 e5                	mov    %esp,%ebp
81004e83:	83 ec 08             	sub    $0x8,%esp
81004e86:	a1 84 72 00 81       	mov    0x81007284,%eax
81004e8b:	83 ec 04             	sub    $0x4,%esp
81004e8e:	ff 75 0c             	push   0xc(%ebp)
81004e91:	ff 75 08             	push   0x8(%ebp)
81004e94:	50                   	push   %eax
81004e95:	e8 40 ff ff ff       	call   81004dda <_fputs_r>
81004e9a:	83 c4 10             	add    $0x10,%esp
81004e9d:	c9                   	leave  
81004e9e:	c3                   	ret    

81004e9f <__sputc_r>:
81004e9f:	55                   	push   %ebp
81004ea0:	89 e5                	mov    %esp,%ebp
81004ea2:	83 ec 08             	sub    $0x8,%esp
81004ea5:	8b 45 10             	mov    0x10(%ebp),%eax
81004ea8:	8b 40 08             	mov    0x8(%eax),%eax
81004eab:	8d 50 ff             	lea    -0x1(%eax),%edx
81004eae:	8b 45 10             	mov    0x10(%ebp),%eax
81004eb1:	89 50 08             	mov    %edx,0x8(%eax)
81004eb4:	8b 45 10             	mov    0x10(%ebp),%eax
81004eb7:	8b 40 08             	mov    0x8(%eax),%eax
81004eba:	85 c0                	test   %eax,%eax
81004ebc:	79 17                	jns    81004ed5 <__sputc_r+0x36>
81004ebe:	8b 45 10             	mov    0x10(%ebp),%eax
81004ec1:	8b 50 08             	mov    0x8(%eax),%edx
81004ec4:	8b 45 10             	mov    0x10(%ebp),%eax
81004ec7:	8b 40 18             	mov    0x18(%eax),%eax
81004eca:	39 c2                	cmp    %eax,%edx
81004ecc:	7c 21                	jl     81004eef <__sputc_r+0x50>
81004ece:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ed1:	3c 0a                	cmp    $0xa,%al
81004ed3:	74 1a                	je     81004eef <__sputc_r+0x50>
81004ed5:	8b 45 10             	mov    0x10(%ebp),%eax
81004ed8:	8b 00                	mov    (%eax),%eax
81004eda:	8d 48 01             	lea    0x1(%eax),%ecx
81004edd:	8b 55 10             	mov    0x10(%ebp),%edx
81004ee0:	89 0a                	mov    %ecx,(%edx)
81004ee2:	8b 55 0c             	mov    0xc(%ebp),%edx
81004ee5:	88 10                	mov    %dl,(%eax)
81004ee7:	0f b6 00             	movzbl (%eax),%eax
81004eea:	0f b6 c0             	movzbl %al,%eax
81004eed:	eb 14                	jmp    81004f03 <__sputc_r+0x64>
81004eef:	83 ec 04             	sub    $0x4,%esp
81004ef2:	ff 75 10             	push   0x10(%ebp)
81004ef5:	ff 75 0c             	push   0xc(%ebp)
81004ef8:	ff 75 08             	push   0x8(%ebp)
81004efb:	e8 ef f8 ff ff       	call   810047ef <__swbuf_r>
81004f00:	83 c4 10             	add    $0x10,%esp
81004f03:	c9                   	leave  
81004f04:	c3                   	ret    

81004f05 <__fputwc>:
81004f05:	55                   	push   %ebp
81004f06:	89 e5                	mov    %esp,%ebp
81004f08:	83 ec 18             	sub    $0x18,%esp
81004f0b:	e8 9f 07 00 00       	call   810056af <__locale_mb_cur_max>
81004f10:	83 f8 01             	cmp    $0x1,%eax
81004f13:	75 1e                	jne    81004f33 <__fputwc+0x2e>
81004f15:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81004f19:	7e 18                	jle    81004f33 <__fputwc+0x2e>
81004f1b:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
81004f22:	7f 0f                	jg     81004f33 <__fputwc+0x2e>
81004f24:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f27:	88 45 ef             	mov    %al,-0x11(%ebp)
81004f2a:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
81004f31:	eb 3c                	jmp    81004f6f <__fputwc+0x6a>
81004f33:	8b 45 10             	mov    0x10(%ebp),%eax
81004f36:	83 c0 5c             	add    $0x5c,%eax
81004f39:	50                   	push   %eax
81004f3a:	ff 75 0c             	push   0xc(%ebp)
81004f3d:	8d 45 ef             	lea    -0x11(%ebp),%eax
81004f40:	50                   	push   %eax
81004f41:	ff 75 08             	push   0x8(%ebp)
81004f44:	e8 36 17 00 00       	call   8100667f <_wcrtomb_r>
81004f49:	83 c4 10             	add    $0x10,%esp
81004f4c:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004f4f:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81004f53:	75 1a                	jne    81004f6f <__fputwc+0x6a>
81004f55:	8b 45 10             	mov    0x10(%ebp),%eax
81004f58:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004f5c:	83 c8 40             	or     $0x40,%eax
81004f5f:	89 c2                	mov    %eax,%edx
81004f61:	8b 45 10             	mov    0x10(%ebp),%eax
81004f64:	66 89 50 0c          	mov    %dx,0xc(%eax)
81004f68:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004f6d:	eb 44                	jmp    81004fb3 <__fputwc+0xae>
81004f6f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004f76:	eb 30                	jmp    81004fa8 <__fputwc+0xa3>
81004f78:	8d 55 ef             	lea    -0x11(%ebp),%edx
81004f7b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004f7e:	01 d0                	add    %edx,%eax
81004f80:	0f b6 00             	movzbl (%eax),%eax
81004f83:	0f b6 c0             	movzbl %al,%eax
81004f86:	83 ec 04             	sub    $0x4,%esp
81004f89:	ff 75 10             	push   0x10(%ebp)
81004f8c:	50                   	push   %eax
81004f8d:	ff 75 08             	push   0x8(%ebp)
81004f90:	e8 0a ff ff ff       	call   81004e9f <__sputc_r>
81004f95:	83 c4 10             	add    $0x10,%esp
81004f98:	83 f8 ff             	cmp    $0xffffffff,%eax
81004f9b:	75 07                	jne    81004fa4 <__fputwc+0x9f>
81004f9d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004fa2:	eb 0f                	jmp    81004fb3 <__fputwc+0xae>
81004fa4:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81004fa8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004fab:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81004fae:	72 c8                	jb     81004f78 <__fputwc+0x73>
81004fb0:	8b 45 0c             	mov    0xc(%ebp),%eax
81004fb3:	c9                   	leave  
81004fb4:	c3                   	ret    

81004fb5 <_fputwc_r>:
81004fb5:	55                   	push   %ebp
81004fb6:	89 e5                	mov    %esp,%ebp
81004fb8:	83 ec 18             	sub    $0x18,%esp
81004fbb:	8b 45 10             	mov    0x10(%ebp),%eax
81004fbe:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004fc2:	98                   	cwtl   
81004fc3:	25 00 20 00 00       	and    $0x2000,%eax
81004fc8:	85 c0                	test   %eax,%eax
81004fca:	75 24                	jne    81004ff0 <_fputwc_r+0x3b>
81004fcc:	8b 45 10             	mov    0x10(%ebp),%eax
81004fcf:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004fd3:	80 cc 20             	or     $0x20,%ah
81004fd6:	89 c2                	mov    %eax,%edx
81004fd8:	8b 45 10             	mov    0x10(%ebp),%eax
81004fdb:	66 89 50 0c          	mov    %dx,0xc(%eax)
81004fdf:	8b 45 10             	mov    0x10(%ebp),%eax
81004fe2:	8b 40 64             	mov    0x64(%eax),%eax
81004fe5:	80 cc 20             	or     $0x20,%ah
81004fe8:	89 c2                	mov    %eax,%edx
81004fea:	8b 45 10             	mov    0x10(%ebp),%eax
81004fed:	89 50 64             	mov    %edx,0x64(%eax)
81004ff0:	83 ec 04             	sub    $0x4,%esp
81004ff3:	ff 75 10             	push   0x10(%ebp)
81004ff6:	ff 75 0c             	push   0xc(%ebp)
81004ff9:	ff 75 08             	push   0x8(%ebp)
81004ffc:	e8 04 ff ff ff       	call   81004f05 <__fputwc>
81005001:	83 c4 10             	add    $0x10,%esp
81005004:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005007:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100500a:	c9                   	leave  
8100500b:	c3                   	ret    

8100500c <fputwc>:
8100500c:	55                   	push   %ebp
8100500d:	89 e5                	mov    %esp,%ebp
8100500f:	83 ec 18             	sub    $0x18,%esp
81005012:	a1 84 72 00 81       	mov    0x81007284,%eax
81005017:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100501a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100501d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005020:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81005024:	74 18                	je     8100503e <fputwc+0x32>
81005026:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005029:	8b 40 38             	mov    0x38(%eax),%eax
8100502c:	85 c0                	test   %eax,%eax
8100502e:	75 0e                	jne    8100503e <fputwc+0x32>
81005030:	83 ec 0c             	sub    $0xc,%esp
81005033:	ff 75 f0             	push   -0x10(%ebp)
81005036:	e8 31 bf ff ff       	call   81000f6c <__sinit>
8100503b:	83 c4 10             	add    $0x10,%esp
8100503e:	83 ec 04             	sub    $0x4,%esp
81005041:	ff 75 0c             	push   0xc(%ebp)
81005044:	ff 75 08             	push   0x8(%ebp)
81005047:	ff 75 f4             	push   -0xc(%ebp)
8100504a:	e8 66 ff ff ff       	call   81004fb5 <_fputwc_r>
8100504f:	83 c4 10             	add    $0x10,%esp
81005052:	c9                   	leave  
81005053:	c3                   	ret    

81005054 <__sfvwrite_r>:
81005054:	55                   	push   %ebp
81005055:	89 e5                	mov    %esp,%ebp
81005057:	57                   	push   %edi
81005058:	56                   	push   %esi
81005059:	53                   	push   %ebx
8100505a:	83 ec 3c             	sub    $0x3c,%esp
8100505d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005060:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
81005067:	8b 45 10             	mov    0x10(%ebp),%eax
8100506a:	8b 78 08             	mov    0x8(%eax),%edi
8100506d:	85 ff                	test   %edi,%edi
8100506f:	75 0a                	jne    8100507b <__sfvwrite_r+0x27>
81005071:	b8 00 00 00 00       	mov    $0x0,%eax
81005076:	e9 6f 04 00 00       	jmp    810054ea <__sfvwrite_r+0x496>
8100507b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100507f:	98                   	cwtl   
81005080:	83 e0 08             	and    $0x8,%eax
81005083:	85 c0                	test   %eax,%eax
81005085:	74 07                	je     8100508e <__sfvwrite_r+0x3a>
81005087:	8b 43 10             	mov    0x10(%ebx),%eax
8100508a:	85 c0                	test   %eax,%eax
8100508c:	75 1d                	jne    810050ab <__sfvwrite_r+0x57>
8100508e:	83 ec 08             	sub    $0x8,%esp
81005091:	53                   	push   %ebx
81005092:	ff 75 08             	push   0x8(%ebp)
81005095:	e8 ce f8 ff ff       	call   81004968 <__swsetup_r>
8100509a:	83 c4 10             	add    $0x10,%esp
8100509d:	85 c0                	test   %eax,%eax
8100509f:	74 0a                	je     810050ab <__sfvwrite_r+0x57>
810050a1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810050a6:	e9 3f 04 00 00       	jmp    810054ea <__sfvwrite_r+0x496>
810050ab:	8b 45 10             	mov    0x10(%ebp),%eax
810050ae:	8b 00                	mov    (%eax),%eax
810050b0:	89 45 c0             	mov    %eax,-0x40(%ebp)
810050b3:	bf 00 00 00 00       	mov    $0x0,%edi
810050b8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810050bc:	98                   	cwtl   
810050bd:	83 e0 02             	and    $0x2,%eax
810050c0:	85 c0                	test   %eax,%eax
810050c2:	74 68                	je     8100512c <__sfvwrite_r+0xd8>
810050c4:	eb 11                	jmp    810050d7 <__sfvwrite_r+0x83>
810050c6:	8b 45 c0             	mov    -0x40(%ebp),%eax
810050c9:	8b 08                	mov    (%eax),%ecx
810050cb:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810050ce:	8b 78 04             	mov    0x4(%eax),%edi
810050d1:	83 c0 08             	add    $0x8,%eax
810050d4:	89 45 c0             	mov    %eax,-0x40(%ebp)
810050d7:	85 ff                	test   %edi,%edi
810050d9:	74 eb                	je     810050c6 <__sfvwrite_r+0x72>
810050db:	8b 4b 24             	mov    0x24(%ebx),%ecx
810050de:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
810050e3:	39 c7                	cmp    %eax,%edi
810050e5:	0f 46 c7             	cmovbe %edi,%eax
810050e8:	89 c2                	mov    %eax,%edx
810050ea:	8b 43 1c             	mov    0x1c(%ebx),%eax
810050ed:	52                   	push   %edx
810050ee:	ff 75 c4             	push   -0x3c(%ebp)
810050f1:	50                   	push   %eax
810050f2:	ff 75 08             	push   0x8(%ebp)
810050f5:	ff d1                	call   *%ecx
810050f7:	83 c4 10             	add    $0x10,%esp
810050fa:	89 c6                	mov    %eax,%esi
810050fc:	85 f6                	test   %esi,%esi
810050fe:	0f 8e cf 03 00 00    	jle    810054d3 <__sfvwrite_r+0x47f>
81005104:	89 f0                	mov    %esi,%eax
81005106:	01 45 c4             	add    %eax,-0x3c(%ebp)
81005109:	89 f0                	mov    %esi,%eax
8100510b:	29 c7                	sub    %eax,%edi
8100510d:	8b 45 10             	mov    0x10(%ebp),%eax
81005110:	8b 40 08             	mov    0x8(%eax),%eax
81005113:	89 f2                	mov    %esi,%edx
81005115:	29 d0                	sub    %edx,%eax
81005117:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100511a:	89 41 08             	mov    %eax,0x8(%ecx)
8100511d:	8b 45 10             	mov    0x10(%ebp),%eax
81005120:	8b 40 08             	mov    0x8(%eax),%eax
81005123:	85 c0                	test   %eax,%eax
81005125:	75 b0                	jne    810050d7 <__sfvwrite_r+0x83>
81005127:	e9 a0 03 00 00       	jmp    810054cc <__sfvwrite_r+0x478>
8100512c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005130:	98                   	cwtl   
81005131:	83 e0 01             	and    $0x1,%eax
81005134:	85 c0                	test   %eax,%eax
81005136:	0f 85 44 02 00 00    	jne    81005380 <__sfvwrite_r+0x32c>
8100513c:	eb 11                	jmp    8100514f <__sfvwrite_r+0xfb>
8100513e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005141:	8b 08                	mov    (%eax),%ecx
81005143:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81005146:	8b 78 04             	mov    0x4(%eax),%edi
81005149:	83 c0 08             	add    $0x8,%eax
8100514c:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100514f:	85 ff                	test   %edi,%edi
81005151:	74 eb                	je     8100513e <__sfvwrite_r+0xea>
81005153:	8b 73 08             	mov    0x8(%ebx),%esi
81005156:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100515a:	98                   	cwtl   
8100515b:	25 00 02 00 00       	and    $0x200,%eax
81005160:	85 c0                	test   %eax,%eax
81005162:	0f 84 4f 01 00 00    	je     810052b7 <__sfvwrite_r+0x263>
81005168:	89 f0                	mov    %esi,%eax
8100516a:	39 c7                	cmp    %eax,%edi
8100516c:	0f 82 12 01 00 00    	jb     81005284 <__sfvwrite_r+0x230>
81005172:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005176:	98                   	cwtl   
81005177:	25 80 04 00 00       	and    $0x480,%eax
8100517c:	85 c0                	test   %eax,%eax
8100517e:	0f 84 00 01 00 00    	je     81005284 <__sfvwrite_r+0x230>
81005184:	8b 03                	mov    (%ebx),%eax
81005186:	8b 53 10             	mov    0x10(%ebx),%edx
81005189:	29 d0                	sub    %edx,%eax
8100518b:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100518e:	8b 53 14             	mov    0x14(%ebx),%edx
81005191:	89 d0                	mov    %edx,%eax
81005193:	01 c0                	add    %eax,%eax
81005195:	01 d0                	add    %edx,%eax
81005197:	89 c2                	mov    %eax,%edx
81005199:	c1 ea 1f             	shr    $0x1f,%edx
8100519c:	01 d0                	add    %edx,%eax
8100519e:	d1 f8                	sar    %eax
810051a0:	89 45 d8             	mov    %eax,-0x28(%ebp)
810051a3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810051a6:	01 f8                	add    %edi,%eax
810051a8:	8d 50 01             	lea    0x1(%eax),%edx
810051ab:	8b 45 d8             	mov    -0x28(%ebp),%eax
810051ae:	39 c2                	cmp    %eax,%edx
810051b0:	76 0b                	jbe    810051bd <__sfvwrite_r+0x169>
810051b2:	8b 45 d0             	mov    -0x30(%ebp),%eax
810051b5:	01 f8                	add    %edi,%eax
810051b7:	83 c0 01             	add    $0x1,%eax
810051ba:	89 45 d8             	mov    %eax,-0x28(%ebp)
810051bd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810051c1:	98                   	cwtl   
810051c2:	25 00 04 00 00       	and    $0x400,%eax
810051c7:	85 c0                	test   %eax,%eax
810051c9:	74 4f                	je     8100521a <__sfvwrite_r+0x1c6>
810051cb:	8b 45 d8             	mov    -0x28(%ebp),%eax
810051ce:	83 ec 08             	sub    $0x8,%esp
810051d1:	50                   	push   %eax
810051d2:	ff 75 08             	push   0x8(%ebp)
810051d5:	e8 6b d6 ff ff       	call   81002845 <_malloc_r>
810051da:	83 c4 10             	add    $0x10,%esp
810051dd:	89 45 dc             	mov    %eax,-0x24(%ebp)
810051e0:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810051e4:	75 0e                	jne    810051f4 <__sfvwrite_r+0x1a0>
810051e6:	8b 45 08             	mov    0x8(%ebp),%eax
810051e9:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810051ef:	e9 e6 02 00 00       	jmp    810054da <__sfvwrite_r+0x486>
810051f4:	8b 55 d0             	mov    -0x30(%ebp),%edx
810051f7:	8b 43 10             	mov    0x10(%ebx),%eax
810051fa:	83 ec 04             	sub    $0x4,%esp
810051fd:	52                   	push   %edx
810051fe:	50                   	push   %eax
810051ff:	ff 75 dc             	push   -0x24(%ebp)
81005202:	e8 51 df ff ff       	call   81003158 <memcpy>
81005207:	83 c4 10             	add    $0x10,%esp
8100520a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100520e:	66 25 7f fb          	and    $0xfb7f,%ax
81005212:	0c 80                	or     $0x80,%al
81005214:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005218:	eb 49                	jmp    81005263 <__sfvwrite_r+0x20f>
8100521a:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100521d:	8b 43 10             	mov    0x10(%ebx),%eax
81005220:	83 ec 04             	sub    $0x4,%esp
81005223:	52                   	push   %edx
81005224:	50                   	push   %eax
81005225:	ff 75 08             	push   0x8(%ebp)
81005228:	e8 ea 08 00 00       	call   81005b17 <_realloc_r>
8100522d:	83 c4 10             	add    $0x10,%esp
81005230:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005233:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81005237:	75 2a                	jne    81005263 <__sfvwrite_r+0x20f>
81005239:	8b 43 10             	mov    0x10(%ebx),%eax
8100523c:	83 ec 08             	sub    $0x8,%esp
8100523f:	50                   	push   %eax
81005240:	ff 75 08             	push   0x8(%ebp)
81005243:	e8 86 be ff ff       	call   810010ce <_free_r>
81005248:	83 c4 10             	add    $0x10,%esp
8100524b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100524f:	24 7f                	and    $0x7f,%al
81005251:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005255:	8b 45 08             	mov    0x8(%ebp),%eax
81005258:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100525e:	e9 77 02 00 00       	jmp    810054da <__sfvwrite_r+0x486>
81005263:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005266:	89 43 10             	mov    %eax,0x10(%ebx)
81005269:	8b 55 d0             	mov    -0x30(%ebp),%edx
8100526c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100526f:	01 d0                	add    %edx,%eax
81005271:	89 03                	mov    %eax,(%ebx)
81005273:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005276:	89 43 14             	mov    %eax,0x14(%ebx)
81005279:	89 fe                	mov    %edi,%esi
8100527b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100527e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81005281:	89 43 08             	mov    %eax,0x8(%ebx)
81005284:	89 f0                	mov    %esi,%eax
81005286:	39 c7                	cmp    %eax,%edi
81005288:	73 02                	jae    8100528c <__sfvwrite_r+0x238>
8100528a:	89 fe                	mov    %edi,%esi
8100528c:	89 f2                	mov    %esi,%edx
8100528e:	8b 03                	mov    (%ebx),%eax
81005290:	83 ec 04             	sub    $0x4,%esp
81005293:	52                   	push   %edx
81005294:	ff 75 c4             	push   -0x3c(%ebp)
81005297:	50                   	push   %eax
81005298:	e8 a3 06 00 00       	call   81005940 <memmove>
8100529d:	83 c4 10             	add    $0x10,%esp
810052a0:	8b 43 08             	mov    0x8(%ebx),%eax
810052a3:	29 f0                	sub    %esi,%eax
810052a5:	89 43 08             	mov    %eax,0x8(%ebx)
810052a8:	8b 03                	mov    (%ebx),%eax
810052aa:	89 f2                	mov    %esi,%edx
810052ac:	01 d0                	add    %edx,%eax
810052ae:	89 03                	mov    %eax,(%ebx)
810052b0:	89 fe                	mov    %edi,%esi
810052b2:	e9 9d 00 00 00       	jmp    81005354 <__sfvwrite_r+0x300>
810052b7:	8b 13                	mov    (%ebx),%edx
810052b9:	8b 43 10             	mov    0x10(%ebx),%eax
810052bc:	39 c2                	cmp    %eax,%edx
810052be:	77 07                	ja     810052c7 <__sfvwrite_r+0x273>
810052c0:	8b 43 14             	mov    0x14(%ebx),%eax
810052c3:	39 c7                	cmp    %eax,%edi
810052c5:	73 4c                	jae    81005313 <__sfvwrite_r+0x2bf>
810052c7:	89 f0                	mov    %esi,%eax
810052c9:	39 c7                	cmp    %eax,%edi
810052cb:	0f 46 c7             	cmovbe %edi,%eax
810052ce:	89 c6                	mov    %eax,%esi
810052d0:	89 f2                	mov    %esi,%edx
810052d2:	8b 03                	mov    (%ebx),%eax
810052d4:	83 ec 04             	sub    $0x4,%esp
810052d7:	52                   	push   %edx
810052d8:	ff 75 c4             	push   -0x3c(%ebp)
810052db:	50                   	push   %eax
810052dc:	e8 5f 06 00 00       	call   81005940 <memmove>
810052e1:	83 c4 10             	add    $0x10,%esp
810052e4:	8b 43 08             	mov    0x8(%ebx),%eax
810052e7:	29 f0                	sub    %esi,%eax
810052e9:	89 43 08             	mov    %eax,0x8(%ebx)
810052ec:	8b 03                	mov    (%ebx),%eax
810052ee:	89 f2                	mov    %esi,%edx
810052f0:	01 d0                	add    %edx,%eax
810052f2:	89 03                	mov    %eax,(%ebx)
810052f4:	8b 43 08             	mov    0x8(%ebx),%eax
810052f7:	85 c0                	test   %eax,%eax
810052f9:	75 58                	jne    81005353 <__sfvwrite_r+0x2ff>
810052fb:	83 ec 08             	sub    $0x8,%esp
810052fe:	53                   	push   %ebx
810052ff:	ff 75 08             	push   0x8(%ebp)
81005302:	e8 62 b7 ff ff       	call   81000a69 <_fflush_r>
81005307:	83 c4 10             	add    $0x10,%esp
8100530a:	85 c0                	test   %eax,%eax
8100530c:	74 45                	je     81005353 <__sfvwrite_r+0x2ff>
8100530e:	e9 c7 01 00 00       	jmp    810054da <__sfvwrite_r+0x486>
81005313:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81005319:	77 04                	ja     8100531f <__sfvwrite_r+0x2cb>
8100531b:	89 f8                	mov    %edi,%eax
8100531d:	eb 05                	jmp    81005324 <__sfvwrite_r+0x2d0>
8100531f:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81005324:	8b 4b 14             	mov    0x14(%ebx),%ecx
81005327:	99                   	cltd   
81005328:	f7 f9                	idiv   %ecx
8100532a:	89 c2                	mov    %eax,%edx
8100532c:	8b 43 14             	mov    0x14(%ebx),%eax
8100532f:	89 d6                	mov    %edx,%esi
81005331:	0f af f0             	imul   %eax,%esi
81005334:	8b 53 24             	mov    0x24(%ebx),%edx
81005337:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100533a:	56                   	push   %esi
8100533b:	ff 75 c4             	push   -0x3c(%ebp)
8100533e:	50                   	push   %eax
8100533f:	ff 75 08             	push   0x8(%ebp)
81005342:	ff d2                	call   *%edx
81005344:	83 c4 10             	add    $0x10,%esp
81005347:	89 c6                	mov    %eax,%esi
81005349:	85 f6                	test   %esi,%esi
8100534b:	0f 8e 85 01 00 00    	jle    810054d6 <__sfvwrite_r+0x482>
81005351:	eb 01                	jmp    81005354 <__sfvwrite_r+0x300>
81005353:	90                   	nop
81005354:	89 f0                	mov    %esi,%eax
81005356:	01 45 c4             	add    %eax,-0x3c(%ebp)
81005359:	89 f0                	mov    %esi,%eax
8100535b:	29 c7                	sub    %eax,%edi
8100535d:	8b 45 10             	mov    0x10(%ebp),%eax
81005360:	8b 40 08             	mov    0x8(%eax),%eax
81005363:	89 f2                	mov    %esi,%edx
81005365:	29 d0                	sub    %edx,%eax
81005367:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100536a:	89 41 08             	mov    %eax,0x8(%ecx)
8100536d:	8b 45 10             	mov    0x10(%ebp),%eax
81005370:	8b 40 08             	mov    0x8(%eax),%eax
81005373:	85 c0                	test   %eax,%eax
81005375:	0f 85 d4 fd ff ff    	jne    8100514f <__sfvwrite_r+0xfb>
8100537b:	e9 4c 01 00 00       	jmp    810054cc <__sfvwrite_r+0x478>
81005380:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81005387:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
8100538e:	eb 18                	jmp    810053a8 <__sfvwrite_r+0x354>
81005390:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81005397:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100539a:	8b 08                	mov    (%eax),%ecx
8100539c:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
8100539f:	8b 78 04             	mov    0x4(%eax),%edi
810053a2:	83 c0 08             	add    $0x8,%eax
810053a5:	89 45 c0             	mov    %eax,-0x40(%ebp)
810053a8:	85 ff                	test   %edi,%edi
810053aa:	74 e4                	je     81005390 <__sfvwrite_r+0x33c>
810053ac:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810053b0:	75 32                	jne    810053e4 <__sfvwrite_r+0x390>
810053b2:	83 ec 04             	sub    $0x4,%esp
810053b5:	57                   	push   %edi
810053b6:	6a 0a                	push   $0xa
810053b8:	8b 75 c4             	mov    -0x3c(%ebp),%esi
810053bb:	56                   	push   %esi
810053bc:	e8 af dc ff ff       	call   81003070 <memchr>
810053c1:	83 c4 10             	add    $0x10,%esp
810053c4:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810053c7:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
810053cb:	74 0a                	je     810053d7 <__sfvwrite_r+0x383>
810053cd:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810053d0:	83 c0 01             	add    $0x1,%eax
810053d3:	29 f0                	sub    %esi,%eax
810053d5:	eb 03                	jmp    810053da <__sfvwrite_r+0x386>
810053d7:	8d 47 01             	lea    0x1(%edi),%eax
810053da:	89 45 e0             	mov    %eax,-0x20(%ebp)
810053dd:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810053e4:	8b 45 e0             	mov    -0x20(%ebp),%eax
810053e7:	39 c7                	cmp    %eax,%edi
810053e9:	0f 46 c7             	cmovbe %edi,%eax
810053ec:	89 c1                	mov    %eax,%ecx
810053ee:	8b 53 08             	mov    0x8(%ebx),%edx
810053f1:	8b 43 14             	mov    0x14(%ebx),%eax
810053f4:	8d 34 02             	lea    (%edx,%eax,1),%esi
810053f7:	8b 13                	mov    (%ebx),%edx
810053f9:	8b 43 10             	mov    0x10(%ebx),%eax
810053fc:	39 c2                	cmp    %eax,%edx
810053fe:	76 38                	jbe    81005438 <__sfvwrite_r+0x3e4>
81005400:	39 f1                	cmp    %esi,%ecx
81005402:	7e 34                	jle    81005438 <__sfvwrite_r+0x3e4>
81005404:	89 f2                	mov    %esi,%edx
81005406:	8b 03                	mov    (%ebx),%eax
81005408:	83 ec 04             	sub    $0x4,%esp
8100540b:	52                   	push   %edx
8100540c:	ff 75 c4             	push   -0x3c(%ebp)
8100540f:	50                   	push   %eax
81005410:	e8 2b 05 00 00       	call   81005940 <memmove>
81005415:	83 c4 10             	add    $0x10,%esp
81005418:	8b 03                	mov    (%ebx),%eax
8100541a:	89 f2                	mov    %esi,%edx
8100541c:	01 d0                	add    %edx,%eax
8100541e:	89 03                	mov    %eax,(%ebx)
81005420:	83 ec 08             	sub    $0x8,%esp
81005423:	53                   	push   %ebx
81005424:	ff 75 08             	push   0x8(%ebp)
81005427:	e8 3d b6 ff ff       	call   81000a69 <_fflush_r>
8100542c:	83 c4 10             	add    $0x10,%esp
8100542f:	85 c0                	test   %eax,%eax
81005431:	74 4f                	je     81005482 <__sfvwrite_r+0x42e>
81005433:	e9 a2 00 00 00       	jmp    810054da <__sfvwrite_r+0x486>
81005438:	8b 73 14             	mov    0x14(%ebx),%esi
8100543b:	89 c8                	mov    %ecx,%eax
8100543d:	39 c6                	cmp    %eax,%esi
8100543f:	7f 1b                	jg     8100545c <__sfvwrite_r+0x408>
81005441:	8b 53 24             	mov    0x24(%ebx),%edx
81005444:	8b 43 1c             	mov    0x1c(%ebx),%eax
81005447:	56                   	push   %esi
81005448:	ff 75 c4             	push   -0x3c(%ebp)
8100544b:	50                   	push   %eax
8100544c:	ff 75 08             	push   0x8(%ebp)
8100544f:	ff d2                	call   *%edx
81005451:	83 c4 10             	add    $0x10,%esp
81005454:	89 c6                	mov    %eax,%esi
81005456:	85 f6                	test   %esi,%esi
81005458:	7f 28                	jg     81005482 <__sfvwrite_r+0x42e>
8100545a:	eb 7e                	jmp    810054da <__sfvwrite_r+0x486>
8100545c:	89 ce                	mov    %ecx,%esi
8100545e:	89 f2                	mov    %esi,%edx
81005460:	8b 03                	mov    (%ebx),%eax
81005462:	83 ec 04             	sub    $0x4,%esp
81005465:	52                   	push   %edx
81005466:	ff 75 c4             	push   -0x3c(%ebp)
81005469:	50                   	push   %eax
8100546a:	e8 d1 04 00 00       	call   81005940 <memmove>
8100546f:	83 c4 10             	add    $0x10,%esp
81005472:	8b 43 08             	mov    0x8(%ebx),%eax
81005475:	29 f0                	sub    %esi,%eax
81005477:	89 43 08             	mov    %eax,0x8(%ebx)
8100547a:	8b 03                	mov    (%ebx),%eax
8100547c:	89 f2                	mov    %esi,%edx
8100547e:	01 d0                	add    %edx,%eax
81005480:	89 03                	mov    %eax,(%ebx)
81005482:	29 75 e0             	sub    %esi,-0x20(%ebp)
81005485:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81005489:	75 1a                	jne    810054a5 <__sfvwrite_r+0x451>
8100548b:	83 ec 08             	sub    $0x8,%esp
8100548e:	53                   	push   %ebx
8100548f:	ff 75 08             	push   0x8(%ebp)
81005492:	e8 d2 b5 ff ff       	call   81000a69 <_fflush_r>
81005497:	83 c4 10             	add    $0x10,%esp
8100549a:	85 c0                	test   %eax,%eax
8100549c:	75 3b                	jne    810054d9 <__sfvwrite_r+0x485>
8100549e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810054a5:	89 f0                	mov    %esi,%eax
810054a7:	01 45 c4             	add    %eax,-0x3c(%ebp)
810054aa:	89 f0                	mov    %esi,%eax
810054ac:	29 c7                	sub    %eax,%edi
810054ae:	8b 45 10             	mov    0x10(%ebp),%eax
810054b1:	8b 40 08             	mov    0x8(%eax),%eax
810054b4:	89 f2                	mov    %esi,%edx
810054b6:	29 d0                	sub    %edx,%eax
810054b8:	8b 4d 10             	mov    0x10(%ebp),%ecx
810054bb:	89 41 08             	mov    %eax,0x8(%ecx)
810054be:	8b 45 10             	mov    0x10(%ebp),%eax
810054c1:	8b 40 08             	mov    0x8(%eax),%eax
810054c4:	85 c0                	test   %eax,%eax
810054c6:	0f 85 dc fe ff ff    	jne    810053a8 <__sfvwrite_r+0x354>
810054cc:	b8 00 00 00 00       	mov    $0x0,%eax
810054d1:	eb 17                	jmp    810054ea <__sfvwrite_r+0x496>
810054d3:	90                   	nop
810054d4:	eb 04                	jmp    810054da <__sfvwrite_r+0x486>
810054d6:	90                   	nop
810054d7:	eb 01                	jmp    810054da <__sfvwrite_r+0x486>
810054d9:	90                   	nop
810054da:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810054de:	83 c8 40             	or     $0x40,%eax
810054e1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810054e5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810054ea:	8d 65 f4             	lea    -0xc(%ebp),%esp
810054ed:	5b                   	pop    %ebx
810054ee:	5e                   	pop    %esi
810054ef:	5f                   	pop    %edi
810054f0:	5d                   	pop    %ebp
810054f1:	c3                   	ret    

810054f2 <_findenv>:
810054f2:	55                   	push   %ebp
810054f3:	89 e5                	mov    %esp,%ebp
810054f5:	83 ec 08             	sub    $0x8,%esp
810054f8:	8b 55 08             	mov    0x8(%ebp),%edx
810054fb:	a1 84 72 00 81       	mov    0x81007284,%eax
81005500:	83 ec 04             	sub    $0x4,%esp
81005503:	ff 75 0c             	push   0xc(%ebp)
81005506:	52                   	push   %edx
81005507:	50                   	push   %eax
81005508:	e8 25 00 00 00       	call   81005532 <_findenv_r>
8100550d:	83 c4 10             	add    $0x10,%esp
81005510:	c9                   	leave  
81005511:	c3                   	ret    

81005512 <getenv>:
81005512:	55                   	push   %ebp
81005513:	89 e5                	mov    %esp,%ebp
81005515:	83 ec 18             	sub    $0x18,%esp
81005518:	a1 84 72 00 81       	mov    0x81007284,%eax
8100551d:	83 ec 04             	sub    $0x4,%esp
81005520:	8d 55 f4             	lea    -0xc(%ebp),%edx
81005523:	52                   	push   %edx
81005524:	ff 75 08             	push   0x8(%ebp)
81005527:	50                   	push   %eax
81005528:	e8 05 00 00 00       	call   81005532 <_findenv_r>
8100552d:	83 c4 10             	add    $0x10,%esp
81005530:	c9                   	leave  
81005531:	c3                   	ret    

81005532 <_findenv_r>:
81005532:	55                   	push   %ebp
81005533:	89 e5                	mov    %esp,%ebp
81005535:	57                   	push   %edi
81005536:	56                   	push   %esi
81005537:	53                   	push   %ebx
81005538:	83 ec 1c             	sub    $0x1c,%esp
8100553b:	8b 7d 0c             	mov    0xc(%ebp),%edi
8100553e:	83 ec 0c             	sub    $0xc,%esp
81005541:	ff 75 08             	push   0x8(%ebp)
81005544:	e8 a7 12 00 00       	call   810067f0 <__env_lock>
81005549:	83 c4 10             	add    $0x10,%esp
8100554c:	a1 b0 76 00 81       	mov    0x810076b0,%eax
81005551:	8b 00                	mov    (%eax),%eax
81005553:	85 c0                	test   %eax,%eax
81005555:	75 18                	jne    8100556f <_findenv_r+0x3d>
81005557:	83 ec 0c             	sub    $0xc,%esp
8100555a:	ff 75 08             	push   0x8(%ebp)
8100555d:	e8 94 12 00 00       	call   810067f6 <__env_unlock>
81005562:	83 c4 10             	add    $0x10,%esp
81005565:	b8 00 00 00 00       	mov    $0x0,%eax
8100556a:	e9 a8 00 00 00       	jmp    81005617 <_findenv_r+0xe5>
8100556f:	89 7d e4             	mov    %edi,-0x1c(%ebp)
81005572:	eb 04                	jmp    81005578 <_findenv_r+0x46>
81005574:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81005578:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100557b:	0f b6 00             	movzbl (%eax),%eax
8100557e:	84 c0                	test   %al,%al
81005580:	74 0a                	je     8100558c <_findenv_r+0x5a>
81005582:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005585:	0f b6 00             	movzbl (%eax),%eax
81005588:	3c 3d                	cmp    $0x3d,%al
8100558a:	75 e8                	jne    81005574 <_findenv_r+0x42>
8100558c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100558f:	0f b6 00             	movzbl (%eax),%eax
81005592:	3c 3d                	cmp    $0x3d,%al
81005594:	74 6e                	je     81005604 <_findenv_r+0xd2>
81005596:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005599:	29 f8                	sub    %edi,%eax
8100559b:	89 c6                	mov    %eax,%esi
8100559d:	a1 b0 76 00 81       	mov    0x810076b0,%eax
810055a2:	8b 18                	mov    (%eax),%ebx
810055a4:	eb 58                	jmp    810055fe <_findenv_r+0xcc>
810055a6:	89 f2                	mov    %esi,%edx
810055a8:	8b 03                	mov    (%ebx),%eax
810055aa:	83 ec 04             	sub    $0x4,%esp
810055ad:	52                   	push   %edx
810055ae:	57                   	push   %edi
810055af:	50                   	push   %eax
810055b0:	e8 d3 0f 00 00       	call   81006588 <strncmp>
810055b5:	83 c4 10             	add    $0x10,%esp
810055b8:	85 c0                	test   %eax,%eax
810055ba:	75 3f                	jne    810055fb <_findenv_r+0xc9>
810055bc:	8b 03                	mov    (%ebx),%eax
810055be:	89 f2                	mov    %esi,%edx
810055c0:	01 d0                	add    %edx,%eax
810055c2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810055c5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810055c8:	0f b6 00             	movzbl (%eax),%eax
810055cb:	3c 3d                	cmp    $0x3d,%al
810055cd:	75 2c                	jne    810055fb <_findenv_r+0xc9>
810055cf:	a1 b0 76 00 81       	mov    0x810076b0,%eax
810055d4:	8b 10                	mov    (%eax),%edx
810055d6:	89 d8                	mov    %ebx,%eax
810055d8:	29 d0                	sub    %edx,%eax
810055da:	c1 f8 02             	sar    $0x2,%eax
810055dd:	89 c2                	mov    %eax,%edx
810055df:	8b 45 10             	mov    0x10(%ebp),%eax
810055e2:	89 10                	mov    %edx,(%eax)
810055e4:	83 ec 0c             	sub    $0xc,%esp
810055e7:	ff 75 08             	push   0x8(%ebp)
810055ea:	e8 07 12 00 00       	call   810067f6 <__env_unlock>
810055ef:	83 c4 10             	add    $0x10,%esp
810055f2:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810055f6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810055f9:	eb 1c                	jmp    81005617 <_findenv_r+0xe5>
810055fb:	83 c3 04             	add    $0x4,%ebx
810055fe:	8b 03                	mov    (%ebx),%eax
81005600:	85 c0                	test   %eax,%eax
81005602:	75 a2                	jne    810055a6 <_findenv_r+0x74>
81005604:	83 ec 0c             	sub    $0xc,%esp
81005607:	ff 75 08             	push   0x8(%ebp)
8100560a:	e8 e7 11 00 00       	call   810067f6 <__env_unlock>
8100560f:	83 c4 10             	add    $0x10,%esp
81005612:	b8 00 00 00 00       	mov    $0x0,%eax
81005617:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100561a:	5b                   	pop    %ebx
8100561b:	5e                   	pop    %esi
8100561c:	5f                   	pop    %edi
8100561d:	5d                   	pop    %ebp
8100561e:	c3                   	ret    

8100561f <_getenv_r>:
8100561f:	55                   	push   %ebp
81005620:	89 e5                	mov    %esp,%ebp
81005622:	83 ec 18             	sub    $0x18,%esp
81005625:	83 ec 04             	sub    $0x4,%esp
81005628:	8d 45 f4             	lea    -0xc(%ebp),%eax
8100562b:	50                   	push   %eax
8100562c:	ff 75 0c             	push   0xc(%ebp)
8100562f:	ff 75 08             	push   0x8(%ebp)
81005632:	e8 fb fe ff ff       	call   81005532 <_findenv_r>
81005637:	83 c4 10             	add    $0x10,%esp
8100563a:	c9                   	leave  
8100563b:	c3                   	ret    

8100563c <__get_global_locale>:
8100563c:	55                   	push   %ebp
8100563d:	89 e5                	mov    %esp,%ebp
8100563f:	b8 c0 76 00 81       	mov    $0x810076c0,%eax
81005644:	5d                   	pop    %ebp
81005645:	c3                   	ret    

81005646 <__get_current_locale>:
81005646:	55                   	push   %ebp
81005647:	89 e5                	mov    %esp,%ebp
81005649:	e8 ee ff ff ff       	call   8100563c <__get_global_locale>
8100564e:	5d                   	pop    %ebp
8100564f:	c3                   	ret    

81005650 <_setlocale_r>:
81005650:	55                   	push   %ebp
81005651:	89 e5                	mov    %esp,%ebp
81005653:	83 ec 08             	sub    $0x8,%esp
81005656:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100565a:	74 4c                	je     810056a8 <_setlocale_r+0x58>
8100565c:	83 ec 08             	sub    $0x8,%esp
8100565f:	68 24 6e 00 81       	push   $0x81006e24
81005664:	ff 75 10             	push   0x10(%ebp)
81005667:	e8 f0 ec ff ff       	call   8100435c <strcmp>
8100566c:	83 c4 10             	add    $0x10,%esp
8100566f:	85 c0                	test   %eax,%eax
81005671:	74 35                	je     810056a8 <_setlocale_r+0x58>
81005673:	83 ec 08             	sub    $0x8,%esp
81005676:	68 2a 6e 00 81       	push   $0x81006e2a
8100567b:	ff 75 10             	push   0x10(%ebp)
8100567e:	e8 d9 ec ff ff       	call   8100435c <strcmp>
81005683:	83 c4 10             	add    $0x10,%esp
81005686:	85 c0                	test   %eax,%eax
81005688:	74 1e                	je     810056a8 <_setlocale_r+0x58>
8100568a:	83 ec 08             	sub    $0x8,%esp
8100568d:	68 23 6e 00 81       	push   $0x81006e23
81005692:	ff 75 10             	push   0x10(%ebp)
81005695:	e8 c2 ec ff ff       	call   8100435c <strcmp>
8100569a:	83 c4 10             	add    $0x10,%esp
8100569d:	85 c0                	test   %eax,%eax
8100569f:	74 07                	je     810056a8 <_setlocale_r+0x58>
810056a1:	b8 00 00 00 00       	mov    $0x0,%eax
810056a6:	eb 05                	jmp    810056ad <_setlocale_r+0x5d>
810056a8:	b8 2a 6e 00 81       	mov    $0x81006e2a,%eax
810056ad:	c9                   	leave  
810056ae:	c3                   	ret    

810056af <__locale_mb_cur_max>:
810056af:	55                   	push   %ebp
810056b0:	89 e5                	mov    %esp,%ebp
810056b2:	e8 8f ff ff ff       	call   81005646 <__get_current_locale>
810056b7:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
810056be:	0f be c0             	movsbl %al,%eax
810056c1:	5d                   	pop    %ebp
810056c2:	c3                   	ret    

810056c3 <setlocale>:
810056c3:	55                   	push   %ebp
810056c4:	89 e5                	mov    %esp,%ebp
810056c6:	83 ec 08             	sub    $0x8,%esp
810056c9:	a1 84 72 00 81       	mov    0x81007284,%eax
810056ce:	83 ec 04             	sub    $0x4,%esp
810056d1:	ff 75 0c             	push   0xc(%ebp)
810056d4:	ff 75 08             	push   0x8(%ebp)
810056d7:	50                   	push   %eax
810056d8:	e8 73 ff ff ff       	call   81005650 <_setlocale_r>
810056dd:	83 c4 10             	add    $0x10,%esp
810056e0:	c9                   	leave  
810056e1:	c3                   	ret    

810056e2 <_lseek_r>:
810056e2:	55                   	push   %ebp
810056e3:	89 e5                	mov    %esp,%ebp
810056e5:	83 ec 18             	sub    $0x18,%esp
810056e8:	c7 05 d4 7e 00 81 00 	movl   $0x0,0x81007ed4
810056ef:	00 00 00 
810056f2:	83 ec 04             	sub    $0x4,%esp
810056f5:	ff 75 14             	push   0x14(%ebp)
810056f8:	ff 75 10             	push   0x10(%ebp)
810056fb:	ff 75 0c             	push   0xc(%ebp)
810056fe:	e8 ce af ff ff       	call   810006d1 <lseek>
81005703:	83 c4 10             	add    $0x10,%esp
81005706:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005709:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100570d:	75 14                	jne    81005723 <_lseek_r+0x41>
8100570f:	a1 d4 7e 00 81       	mov    0x81007ed4,%eax
81005714:	85 c0                	test   %eax,%eax
81005716:	74 0b                	je     81005723 <_lseek_r+0x41>
81005718:	8b 15 d4 7e 00 81    	mov    0x81007ed4,%edx
8100571e:	8b 45 08             	mov    0x8(%ebp),%eax
81005721:	89 10                	mov    %edx,(%eax)
81005723:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005726:	c9                   	leave  
81005727:	c3                   	ret    

81005728 <__smakebuf_r>:
81005728:	55                   	push   %ebp
81005729:	89 e5                	mov    %esp,%ebp
8100572b:	56                   	push   %esi
8100572c:	53                   	push   %ebx
8100572d:	83 ec 10             	sub    $0x10,%esp
81005730:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005733:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005737:	98                   	cwtl   
81005738:	83 e0 02             	and    $0x2,%eax
8100573b:	85 c0                	test   %eax,%eax
8100573d:	74 16                	je     81005755 <__smakebuf_r+0x2d>
8100573f:	8d 43 43             	lea    0x43(%ebx),%eax
81005742:	89 03                	mov    %eax,(%ebx)
81005744:	8b 03                	mov    (%ebx),%eax
81005746:	89 43 10             	mov    %eax,0x10(%ebx)
81005749:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81005750:	e9 b9 00 00 00       	jmp    8100580e <__smakebuf_r+0xe6>
81005755:	8d 45 ec             	lea    -0x14(%ebp),%eax
81005758:	50                   	push   %eax
81005759:	8d 45 f0             	lea    -0x10(%ebp),%eax
8100575c:	50                   	push   %eax
8100575d:	53                   	push   %ebx
8100575e:	ff 75 08             	push   0x8(%ebp)
81005761:	e8 af 00 00 00       	call   81005815 <__swhatbuf_r>
81005766:	83 c4 10             	add    $0x10,%esp
81005769:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100576c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100576f:	83 ec 08             	sub    $0x8,%esp
81005772:	50                   	push   %eax
81005773:	ff 75 08             	push   0x8(%ebp)
81005776:	e8 ca d0 ff ff       	call   81002845 <_malloc_r>
8100577b:	83 c4 10             	add    $0x10,%esp
8100577e:	89 c6                	mov    %eax,%esi
81005780:	85 f6                	test   %esi,%esi
81005782:	75 2f                	jne    810057b3 <__smakebuf_r+0x8b>
81005784:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005788:	98                   	cwtl   
81005789:	25 00 02 00 00       	and    $0x200,%eax
8100578e:	85 c0                	test   %eax,%eax
81005790:	75 7c                	jne    8100580e <__smakebuf_r+0xe6>
81005792:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005796:	83 e0 fc             	and    $0xfffffffc,%eax
81005799:	83 c8 02             	or     $0x2,%eax
8100579c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810057a0:	8d 43 43             	lea    0x43(%ebx),%eax
810057a3:	89 03                	mov    %eax,(%ebx)
810057a5:	8b 03                	mov    (%ebx),%eax
810057a7:	89 43 10             	mov    %eax,0x10(%ebx)
810057aa:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810057b1:	eb 5b                	jmp    8100580e <__smakebuf_r+0xe6>
810057b3:	8b 45 08             	mov    0x8(%ebp),%eax
810057b6:	c7 40 3c 31 0f 00 81 	movl   $0x81000f31,0x3c(%eax)
810057bd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810057c1:	0c 80                	or     $0x80,%al
810057c3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810057c7:	89 33                	mov    %esi,(%ebx)
810057c9:	8b 03                	mov    (%ebx),%eax
810057cb:	89 43 10             	mov    %eax,0x10(%ebx)
810057ce:	8b 45 f0             	mov    -0x10(%ebp),%eax
810057d1:	89 43 14             	mov    %eax,0x14(%ebx)
810057d4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810057d7:	85 c0                	test   %eax,%eax
810057d9:	74 26                	je     81005801 <__smakebuf_r+0xd9>
810057db:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810057df:	98                   	cwtl   
810057e0:	83 ec 08             	sub    $0x8,%esp
810057e3:	50                   	push   %eax
810057e4:	ff 75 08             	push   0x8(%ebp)
810057e7:	e8 53 10 00 00       	call   8100683f <_isatty_r>
810057ec:	83 c4 10             	add    $0x10,%esp
810057ef:	85 c0                	test   %eax,%eax
810057f1:	74 0e                	je     81005801 <__smakebuf_r+0xd9>
810057f3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810057f7:	83 e0 fc             	and    $0xfffffffc,%eax
810057fa:	83 c8 01             	or     $0x1,%eax
810057fd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005801:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81005805:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005808:	09 d0                	or     %edx,%eax
8100580a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100580e:	8d 65 f8             	lea    -0x8(%ebp),%esp
81005811:	5b                   	pop    %ebx
81005812:	5e                   	pop    %esi
81005813:	5d                   	pop    %ebp
81005814:	c3                   	ret    

81005815 <__swhatbuf_r>:
81005815:	55                   	push   %ebp
81005816:	89 e5                	mov    %esp,%ebp
81005818:	83 ec 58             	sub    $0x58,%esp
8100581b:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81005822:	8b 45 0c             	mov    0xc(%ebp),%eax
81005825:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81005829:	66 85 c0             	test   %ax,%ax
8100582c:	78 1f                	js     8100584d <__swhatbuf_r+0x38>
8100582e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005831:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81005835:	98                   	cwtl   
81005836:	83 ec 04             	sub    $0x4,%esp
81005839:	8d 55 ac             	lea    -0x54(%ebp),%edx
8100583c:	52                   	push   %edx
8100583d:	50                   	push   %eax
8100583e:	ff 75 08             	push   0x8(%ebp)
81005841:	e8 b6 0f 00 00       	call   810067fc <_fstat_r>
81005846:	83 c4 10             	add    $0x10,%esp
81005849:	85 c0                	test   %eax,%eax
8100584b:	79 35                	jns    81005882 <__swhatbuf_r+0x6d>
8100584d:	8b 45 14             	mov    0x14(%ebp),%eax
81005850:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81005856:	8b 45 0c             	mov    0xc(%ebp),%eax
81005859:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100585d:	98                   	cwtl   
8100585e:	25 80 00 00 00       	and    $0x80,%eax
81005863:	85 c0                	test   %eax,%eax
81005865:	74 0b                	je     81005872 <__swhatbuf_r+0x5d>
81005867:	8b 45 10             	mov    0x10(%ebp),%eax
8100586a:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81005870:	eb 09                	jmp    8100587b <__swhatbuf_r+0x66>
81005872:	8b 45 10             	mov    0x10(%ebp),%eax
81005875:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
8100587b:	b8 00 00 00 00       	mov    $0x0,%eax
81005880:	eb 24                	jmp    810058a6 <__swhatbuf_r+0x91>
81005882:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005885:	25 00 f0 00 00       	and    $0xf000,%eax
8100588a:	3d 00 20 00 00       	cmp    $0x2000,%eax
8100588f:	0f 94 c0             	sete   %al
81005892:	0f b6 d0             	movzbl %al,%edx
81005895:	8b 45 14             	mov    0x14(%ebp),%eax
81005898:	89 10                	mov    %edx,(%eax)
8100589a:	8b 45 10             	mov    0x10(%ebp),%eax
8100589d:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810058a3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810058a6:	c9                   	leave  
810058a7:	c3                   	ret    

810058a8 <__get_global_locale>:
810058a8:	55                   	push   %ebp
810058a9:	89 e5                	mov    %esp,%ebp
810058ab:	b8 c0 76 00 81       	mov    $0x810076c0,%eax
810058b0:	5d                   	pop    %ebp
810058b1:	c3                   	ret    

810058b2 <__get_current_locale>:
810058b2:	55                   	push   %ebp
810058b3:	89 e5                	mov    %esp,%ebp
810058b5:	e8 ee ff ff ff       	call   810058a8 <__get_global_locale>
810058ba:	5d                   	pop    %ebp
810058bb:	c3                   	ret    

810058bc <_mbtowc_r>:
810058bc:	55                   	push   %ebp
810058bd:	89 e5                	mov    %esp,%ebp
810058bf:	83 ec 08             	sub    $0x8,%esp
810058c2:	e8 eb ff ff ff       	call   810058b2 <__get_current_locale>
810058c7:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
810058cd:	83 ec 0c             	sub    $0xc,%esp
810058d0:	ff 75 18             	push   0x18(%ebp)
810058d3:	ff 75 14             	push   0x14(%ebp)
810058d6:	ff 75 10             	push   0x10(%ebp)
810058d9:	ff 75 0c             	push   0xc(%ebp)
810058dc:	ff 75 08             	push   0x8(%ebp)
810058df:	ff d0                	call   *%eax
810058e1:	83 c4 20             	add    $0x20,%esp
810058e4:	c9                   	leave  
810058e5:	c3                   	ret    

810058e6 <__ascii_mbtowc>:
810058e6:	55                   	push   %ebp
810058e7:	89 e5                	mov    %esp,%ebp
810058e9:	83 ec 10             	sub    $0x10,%esp
810058ec:	8b 45 10             	mov    0x10(%ebp),%eax
810058ef:	89 45 fc             	mov    %eax,-0x4(%ebp)
810058f2:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810058f6:	75 06                	jne    810058fe <__ascii_mbtowc+0x18>
810058f8:	8d 45 f8             	lea    -0x8(%ebp),%eax
810058fb:	89 45 0c             	mov    %eax,0xc(%ebp)
810058fe:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81005902:	75 07                	jne    8100590b <__ascii_mbtowc+0x25>
81005904:	b8 00 00 00 00       	mov    $0x0,%eax
81005909:	eb 31                	jmp    8100593c <__ascii_mbtowc+0x56>
8100590b:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100590f:	75 07                	jne    81005918 <__ascii_mbtowc+0x32>
81005911:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
81005916:	eb 24                	jmp    8100593c <__ascii_mbtowc+0x56>
81005918:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100591b:	0f b6 00             	movzbl (%eax),%eax
8100591e:	0f b6 d0             	movzbl %al,%edx
81005921:	8b 45 0c             	mov    0xc(%ebp),%eax
81005924:	89 10                	mov    %edx,(%eax)
81005926:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005929:	0f b6 00             	movzbl (%eax),%eax
8100592c:	84 c0                	test   %al,%al
8100592e:	75 07                	jne    81005937 <__ascii_mbtowc+0x51>
81005930:	b8 00 00 00 00       	mov    $0x0,%eax
81005935:	eb 05                	jmp    8100593c <__ascii_mbtowc+0x56>
81005937:	b8 01 00 00 00       	mov    $0x1,%eax
8100593c:	c9                   	leave  
8100593d:	c3                   	ret    
8100593e:	66 90                	xchg   %ax,%ax

81005940 <memmove>:
81005940:	55                   	push   %ebp
81005941:	89 e5                	mov    %esp,%ebp
81005943:	56                   	push   %esi
81005944:	57                   	push   %edi
81005945:	53                   	push   %ebx
81005946:	8b 7d 08             	mov    0x8(%ebp),%edi
81005949:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100594c:	8b 75 0c             	mov    0xc(%ebp),%esi
8100594f:	fc                   	cld    
81005950:	39 fe                	cmp    %edi,%esi
81005952:	73 43                	jae    81005997 <memmove+0x57>
81005954:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81005958:	39 df                	cmp    %ebx,%edi
8100595a:	77 3b                	ja     81005997 <memmove+0x57>
8100595c:	01 ce                	add    %ecx,%esi
8100595e:	01 cf                	add    %ecx,%edi
81005960:	fd                   	std    
81005961:	83 f9 08             	cmp    $0x8,%ecx
81005964:	76 2b                	jbe    81005991 <memmove+0x51>
81005966:	89 fa                	mov    %edi,%edx
81005968:	89 cb                	mov    %ecx,%ebx
8100596a:	83 e2 03             	and    $0x3,%edx
8100596d:	74 0c                	je     8100597b <memmove+0x3b>
8100596f:	89 d1                	mov    %edx,%ecx
81005971:	4e                   	dec    %esi
81005972:	4f                   	dec    %edi
81005973:	29 cb                	sub    %ecx,%ebx
81005975:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005977:	89 d9                	mov    %ebx,%ecx
81005979:	46                   	inc    %esi
8100597a:	47                   	inc    %edi
8100597b:	c1 e9 02             	shr    $0x2,%ecx
8100597e:	83 ee 04             	sub    $0x4,%esi
81005981:	83 ef 04             	sub    $0x4,%edi
81005984:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81005986:	83 c6 04             	add    $0x4,%esi
81005989:	83 c7 04             	add    $0x4,%edi
8100598c:	89 d9                	mov    %ebx,%ecx
8100598e:	83 e1 03             	and    $0x3,%ecx
81005991:	4e                   	dec    %esi
81005992:	4f                   	dec    %edi
81005993:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005995:	eb 2a                	jmp    810059c1 <memmove+0x81>
81005997:	83 f9 08             	cmp    $0x8,%ecx
8100599a:	76 23                	jbe    810059bf <memmove+0x7f>
8100599c:	89 fa                	mov    %edi,%edx
8100599e:	89 cb                	mov    %ecx,%ebx
810059a0:	83 e2 03             	and    $0x3,%edx
810059a3:	74 10                	je     810059b5 <memmove+0x75>
810059a5:	b9 04 00 00 00       	mov    $0x4,%ecx
810059aa:	29 d1                	sub    %edx,%ecx
810059ac:	83 e1 03             	and    $0x3,%ecx
810059af:	29 cb                	sub    %ecx,%ebx
810059b1:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810059b3:	89 d9                	mov    %ebx,%ecx
810059b5:	c1 e9 02             	shr    $0x2,%ecx
810059b8:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
810059ba:	89 d9                	mov    %ebx,%ecx
810059bc:	83 e1 03             	and    $0x3,%ecx
810059bf:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810059c1:	8b 45 08             	mov    0x8(%ebp),%eax
810059c4:	fc                   	cld    
810059c5:	8d 65 f4             	lea    -0xc(%ebp),%esp
810059c8:	5b                   	pop    %ebx
810059c9:	5f                   	pop    %edi
810059ca:	5e                   	pop    %esi
810059cb:	c9                   	leave  
810059cc:	c3                   	ret    

810059cd <__sputc_r>:
810059cd:	55                   	push   %ebp
810059ce:	89 e5                	mov    %esp,%ebp
810059d0:	83 ec 08             	sub    $0x8,%esp
810059d3:	8b 45 10             	mov    0x10(%ebp),%eax
810059d6:	8b 40 08             	mov    0x8(%eax),%eax
810059d9:	8d 50 ff             	lea    -0x1(%eax),%edx
810059dc:	8b 45 10             	mov    0x10(%ebp),%eax
810059df:	89 50 08             	mov    %edx,0x8(%eax)
810059e2:	8b 45 10             	mov    0x10(%ebp),%eax
810059e5:	8b 40 08             	mov    0x8(%eax),%eax
810059e8:	85 c0                	test   %eax,%eax
810059ea:	79 17                	jns    81005a03 <__sputc_r+0x36>
810059ec:	8b 45 10             	mov    0x10(%ebp),%eax
810059ef:	8b 50 08             	mov    0x8(%eax),%edx
810059f2:	8b 45 10             	mov    0x10(%ebp),%eax
810059f5:	8b 40 18             	mov    0x18(%eax),%eax
810059f8:	39 c2                	cmp    %eax,%edx
810059fa:	7c 21                	jl     81005a1d <__sputc_r+0x50>
810059fc:	8b 45 0c             	mov    0xc(%ebp),%eax
810059ff:	3c 0a                	cmp    $0xa,%al
81005a01:	74 1a                	je     81005a1d <__sputc_r+0x50>
81005a03:	8b 45 10             	mov    0x10(%ebp),%eax
81005a06:	8b 00                	mov    (%eax),%eax
81005a08:	8d 48 01             	lea    0x1(%eax),%ecx
81005a0b:	8b 55 10             	mov    0x10(%ebp),%edx
81005a0e:	89 0a                	mov    %ecx,(%edx)
81005a10:	8b 55 0c             	mov    0xc(%ebp),%edx
81005a13:	88 10                	mov    %dl,(%eax)
81005a15:	0f b6 00             	movzbl (%eax),%eax
81005a18:	0f b6 c0             	movzbl %al,%eax
81005a1b:	eb 14                	jmp    81005a31 <__sputc_r+0x64>
81005a1d:	83 ec 04             	sub    $0x4,%esp
81005a20:	ff 75 10             	push   0x10(%ebp)
81005a23:	ff 75 0c             	push   0xc(%ebp)
81005a26:	ff 75 08             	push   0x8(%ebp)
81005a29:	e8 c1 ed ff ff       	call   810047ef <__swbuf_r>
81005a2e:	83 c4 10             	add    $0x10,%esp
81005a31:	c9                   	leave  
81005a32:	c3                   	ret    

81005a33 <_putc_r>:
81005a33:	55                   	push   %ebp
81005a34:	89 e5                	mov    %esp,%ebp
81005a36:	53                   	push   %ebx
81005a37:	83 ec 14             	sub    $0x14,%esp
81005a3a:	8b 5d 10             	mov    0x10(%ebp),%ebx
81005a3d:	8b 45 08             	mov    0x8(%ebp),%eax
81005a40:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005a43:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005a47:	74 18                	je     81005a61 <_putc_r+0x2e>
81005a49:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005a4c:	8b 40 38             	mov    0x38(%eax),%eax
81005a4f:	85 c0                	test   %eax,%eax
81005a51:	75 0e                	jne    81005a61 <_putc_r+0x2e>
81005a53:	83 ec 0c             	sub    $0xc,%esp
81005a56:	ff 75 f4             	push   -0xc(%ebp)
81005a59:	e8 0e b5 ff ff       	call   81000f6c <__sinit>
81005a5e:	83 c4 10             	add    $0x10,%esp
81005a61:	83 ec 04             	sub    $0x4,%esp
81005a64:	53                   	push   %ebx
81005a65:	ff 75 0c             	push   0xc(%ebp)
81005a68:	ff 75 08             	push   0x8(%ebp)
81005a6b:	e8 5d ff ff ff       	call   810059cd <__sputc_r>
81005a70:	83 c4 10             	add    $0x10,%esp
81005a73:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005a76:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005a79:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005a7c:	c9                   	leave  
81005a7d:	c3                   	ret    

81005a7e <putc>:
81005a7e:	55                   	push   %ebp
81005a7f:	89 e5                	mov    %esp,%ebp
81005a81:	53                   	push   %ebx
81005a82:	83 ec 14             	sub    $0x14,%esp
81005a85:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005a88:	a1 84 72 00 81       	mov    0x81007284,%eax
81005a8d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005a90:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005a93:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005a96:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81005a9a:	74 18                	je     81005ab4 <putc+0x36>
81005a9c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005a9f:	8b 40 38             	mov    0x38(%eax),%eax
81005aa2:	85 c0                	test   %eax,%eax
81005aa4:	75 0e                	jne    81005ab4 <putc+0x36>
81005aa6:	83 ec 0c             	sub    $0xc,%esp
81005aa9:	ff 75 f0             	push   -0x10(%ebp)
81005aac:	e8 bb b4 ff ff       	call   81000f6c <__sinit>
81005ab1:	83 c4 10             	add    $0x10,%esp
81005ab4:	83 ec 04             	sub    $0x4,%esp
81005ab7:	53                   	push   %ebx
81005ab8:	ff 75 08             	push   0x8(%ebp)
81005abb:	ff 75 f4             	push   -0xc(%ebp)
81005abe:	e8 0a ff ff ff       	call   810059cd <__sputc_r>
81005ac3:	83 c4 10             	add    $0x10,%esp
81005ac6:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005ac9:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005acc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005acf:	c9                   	leave  
81005ad0:	c3                   	ret    

81005ad1 <_read_r>:
81005ad1:	55                   	push   %ebp
81005ad2:	89 e5                	mov    %esp,%ebp
81005ad4:	83 ec 18             	sub    $0x18,%esp
81005ad7:	c7 05 d4 7e 00 81 00 	movl   $0x0,0x81007ed4
81005ade:	00 00 00 
81005ae1:	83 ec 04             	sub    $0x4,%esp
81005ae4:	ff 75 14             	push   0x14(%ebp)
81005ae7:	ff 75 10             	push   0x10(%ebp)
81005aea:	ff 75 0c             	push   0xc(%ebp)
81005aed:	e8 64 ab ff ff       	call   81000656 <read>
81005af2:	83 c4 10             	add    $0x10,%esp
81005af5:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005af8:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81005afc:	75 14                	jne    81005b12 <_read_r+0x41>
81005afe:	a1 d4 7e 00 81       	mov    0x81007ed4,%eax
81005b03:	85 c0                	test   %eax,%eax
81005b05:	74 0b                	je     81005b12 <_read_r+0x41>
81005b07:	8b 15 d4 7e 00 81    	mov    0x81007ed4,%edx
81005b0d:	8b 45 08             	mov    0x8(%ebp),%eax
81005b10:	89 10                	mov    %edx,(%eax)
81005b12:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005b15:	c9                   	leave  
81005b16:	c3                   	ret    

81005b17 <_realloc_r>:
81005b17:	55                   	push   %ebp
81005b18:	89 e5                	mov    %esp,%ebp
81005b1a:	83 ec 78             	sub    $0x78,%esp
81005b1d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005b21:	75 16                	jne    81005b39 <_realloc_r+0x22>
81005b23:	83 ec 08             	sub    $0x8,%esp
81005b26:	ff 75 10             	push   0x10(%ebp)
81005b29:	ff 75 08             	push   0x8(%ebp)
81005b2c:	e8 14 cd ff ff       	call   81002845 <_malloc_r>
81005b31:	83 c4 10             	add    $0x10,%esp
81005b34:	e9 b6 08 00 00       	jmp    810063ef <_realloc_r+0x8d8>
81005b39:	83 ec 0c             	sub    $0xc,%esp
81005b3c:	ff 75 08             	push   0x8(%ebp)
81005b3f:	e8 e4 d6 ff ff       	call   81003228 <__malloc_lock>
81005b44:	83 c4 10             	add    $0x10,%esp
81005b47:	8b 45 0c             	mov    0xc(%ebp),%eax
81005b4a:	83 e8 08             	sub    $0x8,%eax
81005b4d:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81005b50:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005b53:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005b56:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005b59:	8b 40 04             	mov    0x4(%eax),%eax
81005b5c:	83 e0 fc             	and    $0xfffffffc,%eax
81005b5f:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005b62:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005b65:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005b68:	8b 45 10             	mov    0x10(%ebp),%eax
81005b6b:	83 c0 0b             	add    $0xb,%eax
81005b6e:	83 f8 16             	cmp    $0x16,%eax
81005b71:	76 0b                	jbe    81005b7e <_realloc_r+0x67>
81005b73:	8b 45 10             	mov    0x10(%ebp),%eax
81005b76:	83 c0 0b             	add    $0xb,%eax
81005b79:	83 e0 f8             	and    $0xfffffff8,%eax
81005b7c:	eb 05                	jmp    81005b83 <_realloc_r+0x6c>
81005b7e:	b8 10 00 00 00       	mov    $0x10,%eax
81005b83:	89 45 bc             	mov    %eax,-0x44(%ebp)
81005b86:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005b89:	85 c0                	test   %eax,%eax
81005b8b:	78 08                	js     81005b95 <_realloc_r+0x7e>
81005b8d:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005b90:	3b 45 10             	cmp    0x10(%ebp),%eax
81005b93:	73 13                	jae    81005ba8 <_realloc_r+0x91>
81005b95:	8b 45 08             	mov    0x8(%ebp),%eax
81005b98:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81005b9e:	b8 00 00 00 00       	mov    $0x0,%eax
81005ba3:	e9 47 08 00 00       	jmp    810063ef <_realloc_r+0x8d8>
81005ba8:	8b 55 c0             	mov    -0x40(%ebp),%edx
81005bab:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005bae:	39 c2                	cmp    %eax,%edx
81005bb0:	0f 8d 8b 07 00 00    	jge    81006341 <_realloc_r+0x82a>
81005bb6:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81005bb9:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005bbc:	01 d0                	add    %edx,%eax
81005bbe:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005bc1:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81005bc6:	8b 40 08             	mov    0x8(%eax),%eax
81005bc9:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005bcc:	74 1e                	je     81005bec <_realloc_r+0xd5>
81005bce:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005bd1:	8b 40 04             	mov    0x4(%eax),%eax
81005bd4:	83 e0 fe             	and    $0xfffffffe,%eax
81005bd7:	89 c2                	mov    %eax,%edx
81005bd9:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005bdc:	01 d0                	add    %edx,%eax
81005bde:	8b 40 04             	mov    0x4(%eax),%eax
81005be1:	83 e0 01             	and    $0x1,%eax
81005be4:	85 c0                	test   %eax,%eax
81005be6:	0f 85 ca 00 00 00    	jne    81005cb6 <_realloc_r+0x19f>
81005bec:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005bef:	8b 40 04             	mov    0x4(%eax),%eax
81005bf2:	83 e0 fc             	and    $0xfffffffc,%eax
81005bf5:	89 45 e8             	mov    %eax,-0x18(%ebp)
81005bf8:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81005bfd:	8b 40 08             	mov    0x8(%eax),%eax
81005c00:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005c03:	75 71                	jne    81005c76 <_realloc_r+0x15f>
81005c05:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005c08:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005c0b:	01 d0                	add    %edx,%eax
81005c0d:	89 c2                	mov    %eax,%edx
81005c0f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005c12:	83 c0 10             	add    $0x10,%eax
81005c15:	39 c2                	cmp    %eax,%edx
81005c17:	0f 8c a9 00 00 00    	jl     81005cc6 <_realloc_r+0x1af>
81005c1d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005c20:	01 45 f0             	add    %eax,-0x10(%ebp)
81005c23:	ba a0 72 00 81       	mov    $0x810072a0,%edx
81005c28:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81005c2b:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005c2e:	01 c8                	add    %ecx,%eax
81005c30:	89 42 08             	mov    %eax,0x8(%edx)
81005c33:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005c36:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005c39:	89 c2                	mov    %eax,%edx
81005c3b:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81005c40:	8b 40 08             	mov    0x8(%eax),%eax
81005c43:	83 ca 01             	or     $0x1,%edx
81005c46:	89 50 04             	mov    %edx,0x4(%eax)
81005c49:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005c4c:	8b 40 04             	mov    0x4(%eax),%eax
81005c4f:	83 e0 01             	and    $0x1,%eax
81005c52:	0b 45 bc             	or     -0x44(%ebp),%eax
81005c55:	89 c2                	mov    %eax,%edx
81005c57:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005c5a:	89 50 04             	mov    %edx,0x4(%eax)
81005c5d:	83 ec 0c             	sub    $0xc,%esp
81005c60:	ff 75 08             	push   0x8(%ebp)
81005c63:	e8 c6 d5 ff ff       	call   8100322e <__malloc_unlock>
81005c68:	83 c4 10             	add    $0x10,%esp
81005c6b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005c6e:	83 c0 08             	add    $0x8,%eax
81005c71:	e9 79 07 00 00       	jmp    810063ef <_realloc_r+0x8d8>
81005c76:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005c79:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005c7c:	01 d0                	add    %edx,%eax
81005c7e:	89 c2                	mov    %eax,%edx
81005c80:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005c83:	39 c2                	cmp    %eax,%edx
81005c85:	7c 3f                	jl     81005cc6 <_realloc_r+0x1af>
81005c87:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005c8a:	8b 40 0c             	mov    0xc(%eax),%eax
81005c8d:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005c90:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005c93:	8b 40 08             	mov    0x8(%eax),%eax
81005c96:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005c99:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005c9c:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005c9f:	89 50 0c             	mov    %edx,0xc(%eax)
81005ca2:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005ca5:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005ca8:	89 50 08             	mov    %edx,0x8(%eax)
81005cab:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005cae:	01 45 f0             	add    %eax,-0x10(%ebp)
81005cb1:	e9 8c 06 00 00       	jmp    81006342 <_realloc_r+0x82b>
81005cb6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81005cbd:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81005cc4:	eb 01                	jmp    81005cc7 <_realloc_r+0x1b0>
81005cc6:	90                   	nop
81005cc7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005cca:	8b 40 04             	mov    0x4(%eax),%eax
81005ccd:	83 e0 01             	and    $0x1,%eax
81005cd0:	85 c0                	test   %eax,%eax
81005cd2:	0f 85 d6 04 00 00    	jne    810061ae <_realloc_r+0x697>
81005cd8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005cdb:	8b 00                	mov    (%eax),%eax
81005cdd:	f7 d8                	neg    %eax
81005cdf:	89 c2                	mov    %eax,%edx
81005ce1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005ce4:	01 d0                	add    %edx,%eax
81005ce6:	89 45 b0             	mov    %eax,-0x50(%ebp)
81005ce9:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005cec:	8b 40 04             	mov    0x4(%eax),%eax
81005cef:	83 e0 fc             	and    $0xfffffffc,%eax
81005cf2:	89 45 ac             	mov    %eax,-0x54(%ebp)
81005cf5:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81005cf9:	0f 84 4a 03 00 00    	je     81006049 <_realloc_r+0x532>
81005cff:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81005d04:	8b 40 08             	mov    0x8(%eax),%eax
81005d07:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005d0a:	0f 85 b0 01 00 00    	jne    81005ec0 <_realloc_r+0x3a9>
81005d10:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005d13:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005d16:	01 c2                	add    %eax,%edx
81005d18:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005d1b:	01 d0                	add    %edx,%eax
81005d1d:	89 c2                	mov    %eax,%edx
81005d1f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005d22:	83 c0 10             	add    $0x10,%eax
81005d25:	39 c2                	cmp    %eax,%edx
81005d27:	0f 8c 1c 03 00 00    	jl     81006049 <_realloc_r+0x532>
81005d2d:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005d30:	8b 40 0c             	mov    0xc(%eax),%eax
81005d33:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005d36:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005d39:	8b 40 08             	mov    0x8(%eax),%eax
81005d3c:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005d3f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005d42:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005d45:	89 50 0c             	mov    %edx,0xc(%eax)
81005d48:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005d4b:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005d4e:	89 50 08             	mov    %edx,0x8(%eax)
81005d51:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005d54:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005d57:	8b 55 ac             	mov    -0x54(%ebp),%edx
81005d5a:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005d5d:	01 d0                	add    %edx,%eax
81005d5f:	01 45 f0             	add    %eax,-0x10(%ebp)
81005d62:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005d65:	83 c0 08             	add    $0x8,%eax
81005d68:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005d6b:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005d6e:	83 e8 04             	sub    $0x4,%eax
81005d71:	89 45 a0             	mov    %eax,-0x60(%ebp)
81005d74:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81005d78:	0f 87 de 00 00 00    	ja     81005e5c <_realloc_r+0x345>
81005d7e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005d81:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005d84:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005d87:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005d8a:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81005d8e:	0f 86 90 00 00 00    	jbe    81005e24 <_realloc_r+0x30d>
81005d94:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005d97:	8d 42 04             	lea    0x4(%edx),%eax
81005d9a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005d9d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005da0:	8d 48 04             	lea    0x4(%eax),%ecx
81005da3:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005da6:	8b 12                	mov    (%edx),%edx
81005da8:	89 10                	mov    %edx,(%eax)
81005daa:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005dad:	8d 42 04             	lea    0x4(%edx),%eax
81005db0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005db3:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005db6:	8d 48 04             	lea    0x4(%eax),%ecx
81005db9:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005dbc:	8b 12                	mov    (%edx),%edx
81005dbe:	89 10                	mov    %edx,(%eax)
81005dc0:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81005dc4:	76 5e                	jbe    81005e24 <_realloc_r+0x30d>
81005dc6:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005dc9:	8d 42 04             	lea    0x4(%edx),%eax
81005dcc:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005dcf:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005dd2:	8d 48 04             	lea    0x4(%eax),%ecx
81005dd5:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005dd8:	8b 12                	mov    (%edx),%edx
81005dda:	89 10                	mov    %edx,(%eax)
81005ddc:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005ddf:	8d 42 04             	lea    0x4(%edx),%eax
81005de2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005de5:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005de8:	8d 48 04             	lea    0x4(%eax),%ecx
81005deb:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005dee:	8b 12                	mov    (%edx),%edx
81005df0:	89 10                	mov    %edx,(%eax)
81005df2:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81005df6:	76 2c                	jbe    81005e24 <_realloc_r+0x30d>
81005df8:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005dfb:	8d 42 04             	lea    0x4(%edx),%eax
81005dfe:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005e01:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005e04:	8d 48 04             	lea    0x4(%eax),%ecx
81005e07:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005e0a:	8b 12                	mov    (%edx),%edx
81005e0c:	89 10                	mov    %edx,(%eax)
81005e0e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005e11:	8d 42 04             	lea    0x4(%edx),%eax
81005e14:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005e17:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005e1a:	8d 48 04             	lea    0x4(%eax),%ecx
81005e1d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005e20:	8b 12                	mov    (%edx),%edx
81005e22:	89 10                	mov    %edx,(%eax)
81005e24:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005e27:	8d 42 04             	lea    0x4(%edx),%eax
81005e2a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005e2d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005e30:	8d 48 04             	lea    0x4(%eax),%ecx
81005e33:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005e36:	8b 12                	mov    (%edx),%edx
81005e38:	89 10                	mov    %edx,(%eax)
81005e3a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005e3d:	8d 42 04             	lea    0x4(%edx),%eax
81005e40:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005e43:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005e46:	8d 48 04             	lea    0x4(%eax),%ecx
81005e49:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005e4c:	8b 12                	mov    (%edx),%edx
81005e4e:	89 10                	mov    %edx,(%eax)
81005e50:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005e53:	8b 10                	mov    (%eax),%edx
81005e55:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005e58:	89 10                	mov    %edx,(%eax)
81005e5a:	eb 14                	jmp    81005e70 <_realloc_r+0x359>
81005e5c:	83 ec 04             	sub    $0x4,%esp
81005e5f:	ff 75 a0             	push   -0x60(%ebp)
81005e62:	ff 75 0c             	push   0xc(%ebp)
81005e65:	ff 75 a8             	push   -0x58(%ebp)
81005e68:	e8 d3 fa ff ff       	call   81005940 <memmove>
81005e6d:	83 c4 10             	add    $0x10,%esp
81005e70:	ba a0 72 00 81       	mov    $0x810072a0,%edx
81005e75:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81005e78:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005e7b:	01 c8                	add    %ecx,%eax
81005e7d:	89 42 08             	mov    %eax,0x8(%edx)
81005e80:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005e83:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005e86:	89 c2                	mov    %eax,%edx
81005e88:	b8 a0 72 00 81       	mov    $0x810072a0,%eax
81005e8d:	8b 40 08             	mov    0x8(%eax),%eax
81005e90:	83 ca 01             	or     $0x1,%edx
81005e93:	89 50 04             	mov    %edx,0x4(%eax)
81005e96:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005e99:	8b 40 04             	mov    0x4(%eax),%eax
81005e9c:	83 e0 01             	and    $0x1,%eax
81005e9f:	0b 45 bc             	or     -0x44(%ebp),%eax
81005ea2:	89 c2                	mov    %eax,%edx
81005ea4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005ea7:	89 50 04             	mov    %edx,0x4(%eax)
81005eaa:	83 ec 0c             	sub    $0xc,%esp
81005ead:	ff 75 08             	push   0x8(%ebp)
81005eb0:	e8 79 d3 ff ff       	call   8100322e <__malloc_unlock>
81005eb5:	83 c4 10             	add    $0x10,%esp
81005eb8:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005ebb:	e9 2f 05 00 00       	jmp    810063ef <_realloc_r+0x8d8>
81005ec0:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005ec3:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005ec6:	01 c2                	add    %eax,%edx
81005ec8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005ecb:	01 d0                	add    %edx,%eax
81005ecd:	89 c2                	mov    %eax,%edx
81005ecf:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005ed2:	39 c2                	cmp    %eax,%edx
81005ed4:	0f 8c 6f 01 00 00    	jl     81006049 <_realloc_r+0x532>
81005eda:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005edd:	8b 40 0c             	mov    0xc(%eax),%eax
81005ee0:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005ee3:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005ee6:	8b 40 08             	mov    0x8(%eax),%eax
81005ee9:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005eec:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005eef:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005ef2:	89 50 0c             	mov    %edx,0xc(%eax)
81005ef5:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005ef8:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005efb:	89 50 08             	mov    %edx,0x8(%eax)
81005efe:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005f01:	8b 40 0c             	mov    0xc(%eax),%eax
81005f04:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005f07:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005f0a:	8b 40 08             	mov    0x8(%eax),%eax
81005f0d:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005f10:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005f13:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005f16:	89 50 0c             	mov    %edx,0xc(%eax)
81005f19:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005f1c:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005f1f:	89 50 08             	mov    %edx,0x8(%eax)
81005f22:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005f25:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005f28:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005f2b:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005f2e:	01 d0                	add    %edx,%eax
81005f30:	01 45 f0             	add    %eax,-0x10(%ebp)
81005f33:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005f36:	83 c0 08             	add    $0x8,%eax
81005f39:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005f3c:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005f3f:	83 e8 04             	sub    $0x4,%eax
81005f42:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81005f45:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81005f49:	0f 87 e1 00 00 00    	ja     81006030 <_realloc_r+0x519>
81005f4f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005f52:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005f55:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005f58:	89 45 d8             	mov    %eax,-0x28(%ebp)
81005f5b:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81005f5f:	0f 86 90 00 00 00    	jbe    81005ff5 <_realloc_r+0x4de>
81005f65:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005f68:	8d 42 04             	lea    0x4(%edx),%eax
81005f6b:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005f6e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005f71:	8d 48 04             	lea    0x4(%eax),%ecx
81005f74:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005f77:	8b 12                	mov    (%edx),%edx
81005f79:	89 10                	mov    %edx,(%eax)
81005f7b:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005f7e:	8d 42 04             	lea    0x4(%edx),%eax
81005f81:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005f84:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005f87:	8d 48 04             	lea    0x4(%eax),%ecx
81005f8a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005f8d:	8b 12                	mov    (%edx),%edx
81005f8f:	89 10                	mov    %edx,(%eax)
81005f91:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81005f95:	76 5e                	jbe    81005ff5 <_realloc_r+0x4de>
81005f97:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005f9a:	8d 42 04             	lea    0x4(%edx),%eax
81005f9d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005fa0:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005fa3:	8d 48 04             	lea    0x4(%eax),%ecx
81005fa6:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005fa9:	8b 12                	mov    (%edx),%edx
81005fab:	89 10                	mov    %edx,(%eax)
81005fad:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005fb0:	8d 42 04             	lea    0x4(%edx),%eax
81005fb3:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005fb6:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005fb9:	8d 48 04             	lea    0x4(%eax),%ecx
81005fbc:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005fbf:	8b 12                	mov    (%edx),%edx
81005fc1:	89 10                	mov    %edx,(%eax)
81005fc3:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81005fc7:	76 2c                	jbe    81005ff5 <_realloc_r+0x4de>
81005fc9:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005fcc:	8d 42 04             	lea    0x4(%edx),%eax
81005fcf:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005fd2:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005fd5:	8d 48 04             	lea    0x4(%eax),%ecx
81005fd8:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005fdb:	8b 12                	mov    (%edx),%edx
81005fdd:	89 10                	mov    %edx,(%eax)
81005fdf:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005fe2:	8d 42 04             	lea    0x4(%edx),%eax
81005fe5:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005fe8:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005feb:	8d 48 04             	lea    0x4(%eax),%ecx
81005fee:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005ff1:	8b 12                	mov    (%edx),%edx
81005ff3:	89 10                	mov    %edx,(%eax)
81005ff5:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005ff8:	8d 42 04             	lea    0x4(%edx),%eax
81005ffb:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005ffe:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006001:	8d 48 04             	lea    0x4(%eax),%ecx
81006004:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81006007:	8b 12                	mov    (%edx),%edx
81006009:	89 10                	mov    %edx,(%eax)
8100600b:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100600e:	8d 42 04             	lea    0x4(%edx),%eax
81006011:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006014:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006017:	8d 48 04             	lea    0x4(%eax),%ecx
8100601a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100601d:	8b 12                	mov    (%edx),%edx
8100601f:	89 10                	mov    %edx,(%eax)
81006021:	8b 45 dc             	mov    -0x24(%ebp),%eax
81006024:	8b 10                	mov    (%eax),%edx
81006026:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006029:	89 10                	mov    %edx,(%eax)
8100602b:	e9 12 03 00 00       	jmp    81006342 <_realloc_r+0x82b>
81006030:	83 ec 04             	sub    $0x4,%esp
81006033:	ff 75 a4             	push   -0x5c(%ebp)
81006036:	ff 75 0c             	push   0xc(%ebp)
81006039:	ff 75 a8             	push   -0x58(%ebp)
8100603c:	e8 ff f8 ff ff       	call   81005940 <memmove>
81006041:	83 c4 10             	add    $0x10,%esp
81006044:	e9 f9 02 00 00       	jmp    81006342 <_realloc_r+0x82b>
81006049:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
8100604d:	0f 84 5b 01 00 00    	je     810061ae <_realloc_r+0x697>
81006053:	8b 55 ac             	mov    -0x54(%ebp),%edx
81006056:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006059:	01 d0                	add    %edx,%eax
8100605b:	89 c2                	mov    %eax,%edx
8100605d:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006060:	39 c2                	cmp    %eax,%edx
81006062:	0f 8c 46 01 00 00    	jl     810061ae <_realloc_r+0x697>
81006068:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100606b:	8b 40 0c             	mov    0xc(%eax),%eax
8100606e:	89 45 b8             	mov    %eax,-0x48(%ebp)
81006071:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006074:	8b 40 08             	mov    0x8(%eax),%eax
81006077:	89 45 b4             	mov    %eax,-0x4c(%ebp)
8100607a:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8100607d:	8b 55 b8             	mov    -0x48(%ebp),%edx
81006080:	89 50 0c             	mov    %edx,0xc(%eax)
81006083:	8b 45 b8             	mov    -0x48(%ebp),%eax
81006086:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81006089:	89 50 08             	mov    %edx,0x8(%eax)
8100608c:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100608f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006092:	8b 45 ac             	mov    -0x54(%ebp),%eax
81006095:	01 45 f0             	add    %eax,-0x10(%ebp)
81006098:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100609b:	83 c0 08             	add    $0x8,%eax
8100609e:	89 45 a8             	mov    %eax,-0x58(%ebp)
810060a1:	8b 45 c0             	mov    -0x40(%ebp),%eax
810060a4:	83 e8 04             	sub    $0x4,%eax
810060a7:	89 45 9c             	mov    %eax,-0x64(%ebp)
810060aa:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
810060ae:	0f 87 e1 00 00 00    	ja     81006195 <_realloc_r+0x67e>
810060b4:	8b 45 0c             	mov    0xc(%ebp),%eax
810060b7:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810060ba:	8b 45 a8             	mov    -0x58(%ebp),%eax
810060bd:	89 45 d0             	mov    %eax,-0x30(%ebp)
810060c0:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
810060c4:	0f 86 90 00 00 00    	jbe    8100615a <_realloc_r+0x643>
810060ca:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810060cd:	8d 42 04             	lea    0x4(%edx),%eax
810060d0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810060d3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810060d6:	8d 48 04             	lea    0x4(%eax),%ecx
810060d9:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810060dc:	8b 12                	mov    (%edx),%edx
810060de:	89 10                	mov    %edx,(%eax)
810060e0:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810060e3:	8d 42 04             	lea    0x4(%edx),%eax
810060e6:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810060e9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810060ec:	8d 48 04             	lea    0x4(%eax),%ecx
810060ef:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810060f2:	8b 12                	mov    (%edx),%edx
810060f4:	89 10                	mov    %edx,(%eax)
810060f6:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
810060fa:	76 5e                	jbe    8100615a <_realloc_r+0x643>
810060fc:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810060ff:	8d 42 04             	lea    0x4(%edx),%eax
81006102:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006105:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006108:	8d 48 04             	lea    0x4(%eax),%ecx
8100610b:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100610e:	8b 12                	mov    (%edx),%edx
81006110:	89 10                	mov    %edx,(%eax)
81006112:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006115:	8d 42 04             	lea    0x4(%edx),%eax
81006118:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100611b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100611e:	8d 48 04             	lea    0x4(%eax),%ecx
81006121:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006124:	8b 12                	mov    (%edx),%edx
81006126:	89 10                	mov    %edx,(%eax)
81006128:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
8100612c:	76 2c                	jbe    8100615a <_realloc_r+0x643>
8100612e:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006131:	8d 42 04             	lea    0x4(%edx),%eax
81006134:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006137:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100613a:	8d 48 04             	lea    0x4(%eax),%ecx
8100613d:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006140:	8b 12                	mov    (%edx),%edx
81006142:	89 10                	mov    %edx,(%eax)
81006144:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006147:	8d 42 04             	lea    0x4(%edx),%eax
8100614a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100614d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006150:	8d 48 04             	lea    0x4(%eax),%ecx
81006153:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006156:	8b 12                	mov    (%edx),%edx
81006158:	89 10                	mov    %edx,(%eax)
8100615a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100615d:	8d 42 04             	lea    0x4(%edx),%eax
81006160:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006163:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006166:	8d 48 04             	lea    0x4(%eax),%ecx
81006169:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100616c:	8b 12                	mov    (%edx),%edx
8100616e:	89 10                	mov    %edx,(%eax)
81006170:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006173:	8d 42 04             	lea    0x4(%edx),%eax
81006176:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006179:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100617c:	8d 48 04             	lea    0x4(%eax),%ecx
8100617f:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006182:	8b 12                	mov    (%edx),%edx
81006184:	89 10                	mov    %edx,(%eax)
81006186:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81006189:	8b 10                	mov    (%eax),%edx
8100618b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100618e:	89 10                	mov    %edx,(%eax)
81006190:	e9 ad 01 00 00       	jmp    81006342 <_realloc_r+0x82b>
81006195:	83 ec 04             	sub    $0x4,%esp
81006198:	ff 75 9c             	push   -0x64(%ebp)
8100619b:	ff 75 0c             	push   0xc(%ebp)
8100619e:	ff 75 a8             	push   -0x58(%ebp)
810061a1:	e8 9a f7 ff ff       	call   81005940 <memmove>
810061a6:	83 c4 10             	add    $0x10,%esp
810061a9:	e9 94 01 00 00       	jmp    81006342 <_realloc_r+0x82b>
810061ae:	83 ec 08             	sub    $0x8,%esp
810061b1:	ff 75 10             	push   0x10(%ebp)
810061b4:	ff 75 08             	push   0x8(%ebp)
810061b7:	e8 89 c6 ff ff       	call   81002845 <_malloc_r>
810061bc:	83 c4 10             	add    $0x10,%esp
810061bf:	89 45 a8             	mov    %eax,-0x58(%ebp)
810061c2:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
810061c6:	75 18                	jne    810061e0 <_realloc_r+0x6c9>
810061c8:	83 ec 0c             	sub    $0xc,%esp
810061cb:	ff 75 08             	push   0x8(%ebp)
810061ce:	e8 5b d0 ff ff       	call   8100322e <__malloc_unlock>
810061d3:	83 c4 10             	add    $0x10,%esp
810061d6:	b8 00 00 00 00       	mov    $0x0,%eax
810061db:	e9 0f 02 00 00       	jmp    810063ef <_realloc_r+0x8d8>
810061e0:	8b 45 a8             	mov    -0x58(%ebp),%eax
810061e3:	83 e8 08             	sub    $0x8,%eax
810061e6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810061e9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810061ec:	8b 40 04             	mov    0x4(%eax),%eax
810061ef:	83 e0 fe             	and    $0xfffffffe,%eax
810061f2:	89 c2                	mov    %eax,%edx
810061f4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810061f7:	01 d0                	add    %edx,%eax
810061f9:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810061fc:	75 17                	jne    81006215 <_realloc_r+0x6fe>
810061fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006201:	8b 40 04             	mov    0x4(%eax),%eax
81006204:	83 e0 fc             	and    $0xfffffffc,%eax
81006207:	01 45 f0             	add    %eax,-0x10(%ebp)
8100620a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100620d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006210:	e9 2d 01 00 00       	jmp    81006342 <_realloc_r+0x82b>
81006215:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006218:	83 e8 04             	sub    $0x4,%eax
8100621b:	89 45 98             	mov    %eax,-0x68(%ebp)
8100621e:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81006222:	0f 87 de 00 00 00    	ja     81006306 <_realloc_r+0x7ef>
81006228:	8b 45 0c             	mov    0xc(%ebp),%eax
8100622b:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100622e:	8b 45 a8             	mov    -0x58(%ebp),%eax
81006231:	89 45 c8             	mov    %eax,-0x38(%ebp)
81006234:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81006238:	0f 86 90 00 00 00    	jbe    810062ce <_realloc_r+0x7b7>
8100623e:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006241:	8d 42 04             	lea    0x4(%edx),%eax
81006244:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006247:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100624a:	8d 48 04             	lea    0x4(%eax),%ecx
8100624d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006250:	8b 12                	mov    (%edx),%edx
81006252:	89 10                	mov    %edx,(%eax)
81006254:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006257:	8d 42 04             	lea    0x4(%edx),%eax
8100625a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100625d:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006260:	8d 48 04             	lea    0x4(%eax),%ecx
81006263:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006266:	8b 12                	mov    (%edx),%edx
81006268:	89 10                	mov    %edx,(%eax)
8100626a:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
8100626e:	76 5e                	jbe    810062ce <_realloc_r+0x7b7>
81006270:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006273:	8d 42 04             	lea    0x4(%edx),%eax
81006276:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006279:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100627c:	8d 48 04             	lea    0x4(%eax),%ecx
8100627f:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006282:	8b 12                	mov    (%edx),%edx
81006284:	89 10                	mov    %edx,(%eax)
81006286:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006289:	8d 42 04             	lea    0x4(%edx),%eax
8100628c:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100628f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006292:	8d 48 04             	lea    0x4(%eax),%ecx
81006295:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006298:	8b 12                	mov    (%edx),%edx
8100629a:	89 10                	mov    %edx,(%eax)
8100629c:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
810062a0:	76 2c                	jbe    810062ce <_realloc_r+0x7b7>
810062a2:	8b 55 cc             	mov    -0x34(%ebp),%edx
810062a5:	8d 42 04             	lea    0x4(%edx),%eax
810062a8:	89 45 cc             	mov    %eax,-0x34(%ebp)
810062ab:	8b 45 c8             	mov    -0x38(%ebp),%eax
810062ae:	8d 48 04             	lea    0x4(%eax),%ecx
810062b1:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810062b4:	8b 12                	mov    (%edx),%edx
810062b6:	89 10                	mov    %edx,(%eax)
810062b8:	8b 55 cc             	mov    -0x34(%ebp),%edx
810062bb:	8d 42 04             	lea    0x4(%edx),%eax
810062be:	89 45 cc             	mov    %eax,-0x34(%ebp)
810062c1:	8b 45 c8             	mov    -0x38(%ebp),%eax
810062c4:	8d 48 04             	lea    0x4(%eax),%ecx
810062c7:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810062ca:	8b 12                	mov    (%edx),%edx
810062cc:	89 10                	mov    %edx,(%eax)
810062ce:	8b 55 cc             	mov    -0x34(%ebp),%edx
810062d1:	8d 42 04             	lea    0x4(%edx),%eax
810062d4:	89 45 cc             	mov    %eax,-0x34(%ebp)
810062d7:	8b 45 c8             	mov    -0x38(%ebp),%eax
810062da:	8d 48 04             	lea    0x4(%eax),%ecx
810062dd:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810062e0:	8b 12                	mov    (%edx),%edx
810062e2:	89 10                	mov    %edx,(%eax)
810062e4:	8b 55 cc             	mov    -0x34(%ebp),%edx
810062e7:	8d 42 04             	lea    0x4(%edx),%eax
810062ea:	89 45 cc             	mov    %eax,-0x34(%ebp)
810062ed:	8b 45 c8             	mov    -0x38(%ebp),%eax
810062f0:	8d 48 04             	lea    0x4(%eax),%ecx
810062f3:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810062f6:	8b 12                	mov    (%edx),%edx
810062f8:	89 10                	mov    %edx,(%eax)
810062fa:	8b 45 cc             	mov    -0x34(%ebp),%eax
810062fd:	8b 10                	mov    (%eax),%edx
810062ff:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006302:	89 10                	mov    %edx,(%eax)
81006304:	eb 14                	jmp    8100631a <_realloc_r+0x803>
81006306:	83 ec 04             	sub    $0x4,%esp
81006309:	ff 75 98             	push   -0x68(%ebp)
8100630c:	ff 75 0c             	push   0xc(%ebp)
8100630f:	ff 75 a8             	push   -0x58(%ebp)
81006312:	e8 29 f6 ff ff       	call   81005940 <memmove>
81006317:	83 c4 10             	add    $0x10,%esp
8100631a:	83 ec 08             	sub    $0x8,%esp
8100631d:	ff 75 0c             	push   0xc(%ebp)
81006320:	ff 75 08             	push   0x8(%ebp)
81006323:	e8 a6 ad ff ff       	call   810010ce <_free_r>
81006328:	83 c4 10             	add    $0x10,%esp
8100632b:	83 ec 0c             	sub    $0xc,%esp
8100632e:	ff 75 08             	push   0x8(%ebp)
81006331:	e8 f8 ce ff ff       	call   8100322e <__malloc_unlock>
81006336:	83 c4 10             	add    $0x10,%esp
81006339:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100633c:	e9 ae 00 00 00       	jmp    810063ef <_realloc_r+0x8d8>
81006341:	90                   	nop
81006342:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006345:	2b 45 bc             	sub    -0x44(%ebp),%eax
81006348:	89 45 94             	mov    %eax,-0x6c(%ebp)
8100634b:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
8100634f:	76 5d                	jbe    810063ae <_realloc_r+0x897>
81006351:	8b 55 f4             	mov    -0xc(%ebp),%edx
81006354:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006357:	01 d0                	add    %edx,%eax
81006359:	89 45 90             	mov    %eax,-0x70(%ebp)
8100635c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100635f:	8b 40 04             	mov    0x4(%eax),%eax
81006362:	83 e0 01             	and    $0x1,%eax
81006365:	0b 45 bc             	or     -0x44(%ebp),%eax
81006368:	89 c2                	mov    %eax,%edx
8100636a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100636d:	89 50 04             	mov    %edx,0x4(%eax)
81006370:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006373:	83 c8 01             	or     $0x1,%eax
81006376:	89 c2                	mov    %eax,%edx
81006378:	8b 45 90             	mov    -0x70(%ebp),%eax
8100637b:	89 50 04             	mov    %edx,0x4(%eax)
8100637e:	8b 55 90             	mov    -0x70(%ebp),%edx
81006381:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006384:	01 d0                	add    %edx,%eax
81006386:	8b 50 04             	mov    0x4(%eax),%edx
81006389:	8b 4d 90             	mov    -0x70(%ebp),%ecx
8100638c:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100638f:	01 c8                	add    %ecx,%eax
81006391:	83 ca 01             	or     $0x1,%edx
81006394:	89 50 04             	mov    %edx,0x4(%eax)
81006397:	8b 45 90             	mov    -0x70(%ebp),%eax
8100639a:	83 c0 08             	add    $0x8,%eax
8100639d:	83 ec 08             	sub    $0x8,%esp
810063a0:	50                   	push   %eax
810063a1:	ff 75 08             	push   0x8(%ebp)
810063a4:	e8 25 ad ff ff       	call   810010ce <_free_r>
810063a9:	83 c4 10             	add    $0x10,%esp
810063ac:	eb 2d                	jmp    810063db <_realloc_r+0x8c4>
810063ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
810063b1:	8b 40 04             	mov    0x4(%eax),%eax
810063b4:	83 e0 01             	and    $0x1,%eax
810063b7:	0b 45 f0             	or     -0x10(%ebp),%eax
810063ba:	89 c2                	mov    %eax,%edx
810063bc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810063bf:	89 50 04             	mov    %edx,0x4(%eax)
810063c2:	8b 55 f4             	mov    -0xc(%ebp),%edx
810063c5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810063c8:	01 d0                	add    %edx,%eax
810063ca:	8b 50 04             	mov    0x4(%eax),%edx
810063cd:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810063d0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810063d3:	01 c8                	add    %ecx,%eax
810063d5:	83 ca 01             	or     $0x1,%edx
810063d8:	89 50 04             	mov    %edx,0x4(%eax)
810063db:	83 ec 0c             	sub    $0xc,%esp
810063de:	ff 75 08             	push   0x8(%ebp)
810063e1:	e8 48 ce ff ff       	call   8100322e <__malloc_unlock>
810063e6:	83 c4 10             	add    $0x10,%esp
810063e9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810063ec:	83 c0 08             	add    $0x8,%eax
810063ef:	c9                   	leave  
810063f0:	c3                   	ret    

810063f1 <cleanup_glue>:
810063f1:	55                   	push   %ebp
810063f2:	89 e5                	mov    %esp,%ebp
810063f4:	83 ec 08             	sub    $0x8,%esp
810063f7:	8b 45 0c             	mov    0xc(%ebp),%eax
810063fa:	8b 00                	mov    (%eax),%eax
810063fc:	85 c0                	test   %eax,%eax
810063fe:	74 14                	je     81006414 <cleanup_glue+0x23>
81006400:	8b 45 0c             	mov    0xc(%ebp),%eax
81006403:	8b 00                	mov    (%eax),%eax
81006405:	83 ec 08             	sub    $0x8,%esp
81006408:	50                   	push   %eax
81006409:	ff 75 08             	push   0x8(%ebp)
8100640c:	e8 e0 ff ff ff       	call   810063f1 <cleanup_glue>
81006411:	83 c4 10             	add    $0x10,%esp
81006414:	83 ec 08             	sub    $0x8,%esp
81006417:	ff 75 0c             	push   0xc(%ebp)
8100641a:	ff 75 08             	push   0x8(%ebp)
8100641d:	e8 ac ac ff ff       	call   810010ce <_free_r>
81006422:	83 c4 10             	add    $0x10,%esp
81006425:	90                   	nop
81006426:	c9                   	leave  
81006427:	c3                   	ret    

81006428 <_reclaim_reent>:
81006428:	55                   	push   %ebp
81006429:	89 e5                	mov    %esp,%ebp
8100642b:	83 ec 28             	sub    $0x28,%esp
8100642e:	a1 84 72 00 81       	mov    0x81007284,%eax
81006433:	39 45 08             	cmp    %eax,0x8(%ebp)
81006436:	0f 84 49 01 00 00    	je     81006585 <_reclaim_reent+0x15d>
8100643c:	8b 45 08             	mov    0x8(%ebp),%eax
8100643f:	8b 40 4c             	mov    0x4c(%eax),%eax
81006442:	85 c0                	test   %eax,%eax
81006444:	74 64                	je     810064aa <_reclaim_reent+0x82>
81006446:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100644d:	eb 3e                	jmp    8100648d <_reclaim_reent+0x65>
8100644f:	8b 45 08             	mov    0x8(%ebp),%eax
81006452:	8b 50 4c             	mov    0x4c(%eax),%edx
81006455:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006458:	c1 e0 02             	shl    $0x2,%eax
8100645b:	01 d0                	add    %edx,%eax
8100645d:	8b 00                	mov    (%eax),%eax
8100645f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006462:	eb 1f                	jmp    81006483 <_reclaim_reent+0x5b>
81006464:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006467:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100646a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100646d:	8b 00                	mov    (%eax),%eax
8100646f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006472:	83 ec 08             	sub    $0x8,%esp
81006475:	ff 75 e8             	push   -0x18(%ebp)
81006478:	ff 75 08             	push   0x8(%ebp)
8100647b:	e8 4e ac ff ff       	call   810010ce <_free_r>
81006480:	83 c4 10             	add    $0x10,%esp
81006483:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81006487:	75 db                	jne    81006464 <_reclaim_reent+0x3c>
81006489:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8100648d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006490:	83 f8 1f             	cmp    $0x1f,%eax
81006493:	76 ba                	jbe    8100644f <_reclaim_reent+0x27>
81006495:	8b 45 08             	mov    0x8(%ebp),%eax
81006498:	8b 40 4c             	mov    0x4c(%eax),%eax
8100649b:	83 ec 08             	sub    $0x8,%esp
8100649e:	50                   	push   %eax
8100649f:	ff 75 08             	push   0x8(%ebp)
810064a2:	e8 27 ac ff ff       	call   810010ce <_free_r>
810064a7:	83 c4 10             	add    $0x10,%esp
810064aa:	8b 45 08             	mov    0x8(%ebp),%eax
810064ad:	8b 40 40             	mov    0x40(%eax),%eax
810064b0:	85 c0                	test   %eax,%eax
810064b2:	74 15                	je     810064c9 <_reclaim_reent+0xa1>
810064b4:	8b 45 08             	mov    0x8(%ebp),%eax
810064b7:	8b 40 40             	mov    0x40(%eax),%eax
810064ba:	83 ec 08             	sub    $0x8,%esp
810064bd:	50                   	push   %eax
810064be:	ff 75 08             	push   0x8(%ebp)
810064c1:	e8 08 ac ff ff       	call   810010ce <_free_r>
810064c6:	83 c4 10             	add    $0x10,%esp
810064c9:	8b 45 08             	mov    0x8(%ebp),%eax
810064cc:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810064d2:	85 c0                	test   %eax,%eax
810064d4:	74 50                	je     81006526 <_reclaim_reent+0xfe>
810064d6:	8b 45 08             	mov    0x8(%ebp),%eax
810064d9:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810064df:	8b 55 08             	mov    0x8(%ebp),%edx
810064e2:	81 c2 4c 01 00 00    	add    $0x14c,%edx
810064e8:	39 d0                	cmp    %edx,%eax
810064ea:	74 3a                	je     81006526 <_reclaim_reent+0xfe>
810064ec:	8b 45 08             	mov    0x8(%ebp),%eax
810064ef:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810064f5:	89 45 ec             	mov    %eax,-0x14(%ebp)
810064f8:	eb 1f                	jmp    81006519 <_reclaim_reent+0xf1>
810064fa:	8b 45 ec             	mov    -0x14(%ebp),%eax
810064fd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006500:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006503:	8b 00                	mov    (%eax),%eax
81006505:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006508:	83 ec 08             	sub    $0x8,%esp
8100650b:	ff 75 e4             	push   -0x1c(%ebp)
8100650e:	ff 75 08             	push   0x8(%ebp)
81006511:	e8 b8 ab ff ff       	call   810010ce <_free_r>
81006516:	83 c4 10             	add    $0x10,%esp
81006519:	8b 45 08             	mov    0x8(%ebp),%eax
8100651c:	05 4c 01 00 00       	add    $0x14c,%eax
81006521:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81006524:	75 d4                	jne    810064fa <_reclaim_reent+0xd2>
81006526:	8b 45 08             	mov    0x8(%ebp),%eax
81006529:	8b 40 54             	mov    0x54(%eax),%eax
8100652c:	85 c0                	test   %eax,%eax
8100652e:	74 15                	je     81006545 <_reclaim_reent+0x11d>
81006530:	8b 45 08             	mov    0x8(%ebp),%eax
81006533:	8b 40 54             	mov    0x54(%eax),%eax
81006536:	83 ec 08             	sub    $0x8,%esp
81006539:	50                   	push   %eax
8100653a:	ff 75 08             	push   0x8(%ebp)
8100653d:	e8 8c ab ff ff       	call   810010ce <_free_r>
81006542:	83 c4 10             	add    $0x10,%esp
81006545:	8b 45 08             	mov    0x8(%ebp),%eax
81006548:	8b 40 38             	mov    0x38(%eax),%eax
8100654b:	85 c0                	test   %eax,%eax
8100654d:	74 36                	je     81006585 <_reclaim_reent+0x15d>
8100654f:	8b 45 08             	mov    0x8(%ebp),%eax
81006552:	8b 40 3c             	mov    0x3c(%eax),%eax
81006555:	83 ec 0c             	sub    $0xc,%esp
81006558:	ff 75 08             	push   0x8(%ebp)
8100655b:	ff d0                	call   *%eax
8100655d:	83 c4 10             	add    $0x10,%esp
81006560:	8b 45 08             	mov    0x8(%ebp),%eax
81006563:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81006569:	85 c0                	test   %eax,%eax
8100656b:	74 18                	je     81006585 <_reclaim_reent+0x15d>
8100656d:	8b 45 08             	mov    0x8(%ebp),%eax
81006570:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81006576:	83 ec 08             	sub    $0x8,%esp
81006579:	50                   	push   %eax
8100657a:	ff 75 08             	push   0x8(%ebp)
8100657d:	e8 6f fe ff ff       	call   810063f1 <cleanup_glue>
81006582:	83 c4 10             	add    $0x10,%esp
81006585:	90                   	nop
81006586:	c9                   	leave  
81006587:	c3                   	ret    

81006588 <strncmp>:
81006588:	55                   	push   %ebp
81006589:	89 e5                	mov    %esp,%ebp
8100658b:	83 ec 10             	sub    $0x10,%esp
8100658e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006592:	75 0a                	jne    8100659e <strncmp+0x16>
81006594:	b8 00 00 00 00       	mov    $0x0,%eax
81006599:	e9 cb 00 00 00       	jmp    81006669 <strncmp+0xe1>
8100659e:	8b 55 08             	mov    0x8(%ebp),%edx
810065a1:	8b 45 0c             	mov    0xc(%ebp),%eax
810065a4:	09 d0                	or     %edx,%eax
810065a6:	83 e0 03             	and    $0x3,%eax
810065a9:	85 c0                	test   %eax,%eax
810065ab:	0f 85 85 00 00 00    	jne    81006636 <strncmp+0xae>
810065b1:	8b 45 08             	mov    0x8(%ebp),%eax
810065b4:	89 45 fc             	mov    %eax,-0x4(%ebp)
810065b7:	8b 45 0c             	mov    0xc(%ebp),%eax
810065ba:	89 45 f8             	mov    %eax,-0x8(%ebp)
810065bd:	eb 36                	jmp    810065f5 <strncmp+0x6d>
810065bf:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
810065c3:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810065c7:	74 1d                	je     810065e6 <strncmp+0x5e>
810065c9:	8b 45 fc             	mov    -0x4(%ebp),%eax
810065cc:	8b 00                	mov    (%eax),%eax
810065ce:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
810065d4:	8b 45 fc             	mov    -0x4(%ebp),%eax
810065d7:	8b 00                	mov    (%eax),%eax
810065d9:	f7 d0                	not    %eax
810065db:	21 d0                	and    %edx,%eax
810065dd:	25 80 80 80 80       	and    $0x80808080,%eax
810065e2:	85 c0                	test   %eax,%eax
810065e4:	74 07                	je     810065ed <strncmp+0x65>
810065e6:	b8 00 00 00 00       	mov    $0x0,%eax
810065eb:	eb 7c                	jmp    81006669 <strncmp+0xe1>
810065ed:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
810065f1:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
810065f5:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
810065f9:	76 0e                	jbe    81006609 <strncmp+0x81>
810065fb:	8b 45 fc             	mov    -0x4(%ebp),%eax
810065fe:	8b 10                	mov    (%eax),%edx
81006600:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006603:	8b 00                	mov    (%eax),%eax
81006605:	39 c2                	cmp    %eax,%edx
81006607:	74 b6                	je     810065bf <strncmp+0x37>
81006609:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100660c:	89 45 08             	mov    %eax,0x8(%ebp)
8100660f:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006612:	89 45 0c             	mov    %eax,0xc(%ebp)
81006615:	eb 1f                	jmp    81006636 <strncmp+0xae>
81006617:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100661b:	74 0a                	je     81006627 <strncmp+0x9f>
8100661d:	8b 45 08             	mov    0x8(%ebp),%eax
81006620:	0f b6 00             	movzbl (%eax),%eax
81006623:	84 c0                	test   %al,%al
81006625:	75 07                	jne    8100662e <strncmp+0xa6>
81006627:	b8 00 00 00 00       	mov    $0x0,%eax
8100662c:	eb 3b                	jmp    81006669 <strncmp+0xe1>
8100662e:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81006632:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81006636:	8b 45 10             	mov    0x10(%ebp),%eax
81006639:	8d 50 ff             	lea    -0x1(%eax),%edx
8100663c:	89 55 10             	mov    %edx,0x10(%ebp)
8100663f:	85 c0                	test   %eax,%eax
81006641:	74 10                	je     81006653 <strncmp+0xcb>
81006643:	8b 45 08             	mov    0x8(%ebp),%eax
81006646:	0f b6 10             	movzbl (%eax),%edx
81006649:	8b 45 0c             	mov    0xc(%ebp),%eax
8100664c:	0f b6 00             	movzbl (%eax),%eax
8100664f:	38 c2                	cmp    %al,%dl
81006651:	74 c4                	je     81006617 <strncmp+0x8f>
81006653:	8b 45 08             	mov    0x8(%ebp),%eax
81006656:	0f b6 00             	movzbl (%eax),%eax
81006659:	0f b6 d0             	movzbl %al,%edx
8100665c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100665f:	0f b6 00             	movzbl (%eax),%eax
81006662:	0f b6 c8             	movzbl %al,%ecx
81006665:	89 d0                	mov    %edx,%eax
81006667:	29 c8                	sub    %ecx,%eax
81006669:	c9                   	leave  
8100666a:	c3                   	ret    

8100666b <__get_global_locale>:
8100666b:	55                   	push   %ebp
8100666c:	89 e5                	mov    %esp,%ebp
8100666e:	b8 c0 76 00 81       	mov    $0x810076c0,%eax
81006673:	5d                   	pop    %ebp
81006674:	c3                   	ret    

81006675 <__get_current_locale>:
81006675:	55                   	push   %ebp
81006676:	89 e5                	mov    %esp,%ebp
81006678:	e8 ee ff ff ff       	call   8100666b <__get_global_locale>
8100667d:	5d                   	pop    %ebp
8100667e:	c3                   	ret    

8100667f <_wcrtomb_r>:
8100667f:	55                   	push   %ebp
81006680:	89 e5                	mov    %esp,%ebp
81006682:	83 ec 18             	sub    $0x18,%esp
81006685:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100668c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006690:	75 21                	jne    810066b3 <_wcrtomb_r+0x34>
81006692:	e8 de ff ff ff       	call   81006675 <__get_current_locale>
81006697:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100669d:	ff 75 14             	push   0x14(%ebp)
810066a0:	6a 00                	push   $0x0
810066a2:	8d 55 ea             	lea    -0x16(%ebp),%edx
810066a5:	52                   	push   %edx
810066a6:	ff 75 08             	push   0x8(%ebp)
810066a9:	ff d0                	call   *%eax
810066ab:	83 c4 10             	add    $0x10,%esp
810066ae:	89 45 f4             	mov    %eax,-0xc(%ebp)
810066b1:	eb 1f                	jmp    810066d2 <_wcrtomb_r+0x53>
810066b3:	e8 bd ff ff ff       	call   81006675 <__get_current_locale>
810066b8:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810066be:	ff 75 14             	push   0x14(%ebp)
810066c1:	ff 75 10             	push   0x10(%ebp)
810066c4:	ff 75 0c             	push   0xc(%ebp)
810066c7:	ff 75 08             	push   0x8(%ebp)
810066ca:	ff d0                	call   *%eax
810066cc:	83 c4 10             	add    $0x10,%esp
810066cf:	89 45 f4             	mov    %eax,-0xc(%ebp)
810066d2:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810066d6:	75 19                	jne    810066f1 <_wcrtomb_r+0x72>
810066d8:	8b 45 14             	mov    0x14(%ebp),%eax
810066db:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810066e1:	8b 45 08             	mov    0x8(%ebp),%eax
810066e4:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810066ea:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810066ef:	eb 03                	jmp    810066f4 <_wcrtomb_r+0x75>
810066f1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810066f4:	c9                   	leave  
810066f5:	c3                   	ret    

810066f6 <wcrtomb>:
810066f6:	55                   	push   %ebp
810066f7:	89 e5                	mov    %esp,%ebp
810066f9:	83 ec 28             	sub    $0x28,%esp
810066fc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81006703:	a1 84 72 00 81       	mov    0x81007284,%eax
81006708:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100670b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100670f:	75 21                	jne    81006732 <wcrtomb+0x3c>
81006711:	e8 5f ff ff ff       	call   81006675 <__get_current_locale>
81006716:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100671c:	ff 75 10             	push   0x10(%ebp)
8100671f:	6a 00                	push   $0x0
81006721:	8d 55 e6             	lea    -0x1a(%ebp),%edx
81006724:	52                   	push   %edx
81006725:	ff 75 f0             	push   -0x10(%ebp)
81006728:	ff d0                	call   *%eax
8100672a:	83 c4 10             	add    $0x10,%esp
8100672d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006730:	eb 1f                	jmp    81006751 <wcrtomb+0x5b>
81006732:	e8 3e ff ff ff       	call   81006675 <__get_current_locale>
81006737:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100673d:	ff 75 10             	push   0x10(%ebp)
81006740:	ff 75 0c             	push   0xc(%ebp)
81006743:	ff 75 08             	push   0x8(%ebp)
81006746:	ff 75 f0             	push   -0x10(%ebp)
81006749:	ff d0                	call   *%eax
8100674b:	83 c4 10             	add    $0x10,%esp
8100674e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006751:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006755:	75 19                	jne    81006770 <wcrtomb+0x7a>
81006757:	8b 45 10             	mov    0x10(%ebp),%eax
8100675a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81006760:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006763:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81006769:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100676e:	eb 03                	jmp    81006773 <wcrtomb+0x7d>
81006770:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006773:	c9                   	leave  
81006774:	c3                   	ret    

81006775 <__get_global_locale>:
81006775:	55                   	push   %ebp
81006776:	89 e5                	mov    %esp,%ebp
81006778:	b8 c0 76 00 81       	mov    $0x810076c0,%eax
8100677d:	5d                   	pop    %ebp
8100677e:	c3                   	ret    

8100677f <__get_current_locale>:
8100677f:	55                   	push   %ebp
81006780:	89 e5                	mov    %esp,%ebp
81006782:	e8 ee ff ff ff       	call   81006775 <__get_global_locale>
81006787:	5d                   	pop    %ebp
81006788:	c3                   	ret    

81006789 <_wctomb_r>:
81006789:	55                   	push   %ebp
8100678a:	89 e5                	mov    %esp,%ebp
8100678c:	83 ec 08             	sub    $0x8,%esp
8100678f:	e8 eb ff ff ff       	call   8100677f <__get_current_locale>
81006794:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100679a:	ff 75 14             	push   0x14(%ebp)
8100679d:	ff 75 10             	push   0x10(%ebp)
810067a0:	ff 75 0c             	push   0xc(%ebp)
810067a3:	ff 75 08             	push   0x8(%ebp)
810067a6:	ff d0                	call   *%eax
810067a8:	83 c4 10             	add    $0x10,%esp
810067ab:	c9                   	leave  
810067ac:	c3                   	ret    

810067ad <__ascii_wctomb>:
810067ad:	55                   	push   %ebp
810067ae:	89 e5                	mov    %esp,%ebp
810067b0:	83 ec 10             	sub    $0x10,%esp
810067b3:	8b 45 10             	mov    0x10(%ebp),%eax
810067b6:	89 45 fc             	mov    %eax,-0x4(%ebp)
810067b9:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810067bd:	75 07                	jne    810067c6 <__ascii_wctomb+0x19>
810067bf:	b8 00 00 00 00       	mov    $0x0,%eax
810067c4:	eb 28                	jmp    810067ee <__ascii_wctomb+0x41>
810067c6:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
810067cd:	76 10                	jbe    810067df <__ascii_wctomb+0x32>
810067cf:	8b 45 08             	mov    0x8(%ebp),%eax
810067d2:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810067d8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810067dd:	eb 0f                	jmp    810067ee <__ascii_wctomb+0x41>
810067df:	8b 45 fc             	mov    -0x4(%ebp),%eax
810067e2:	89 c2                	mov    %eax,%edx
810067e4:	8b 45 0c             	mov    0xc(%ebp),%eax
810067e7:	88 10                	mov    %dl,(%eax)
810067e9:	b8 01 00 00 00       	mov    $0x1,%eax
810067ee:	c9                   	leave  
810067ef:	c3                   	ret    

810067f0 <__env_lock>:
810067f0:	55                   	push   %ebp
810067f1:	89 e5                	mov    %esp,%ebp
810067f3:	90                   	nop
810067f4:	5d                   	pop    %ebp
810067f5:	c3                   	ret    

810067f6 <__env_unlock>:
810067f6:	55                   	push   %ebp
810067f7:	89 e5                	mov    %esp,%ebp
810067f9:	90                   	nop
810067fa:	5d                   	pop    %ebp
810067fb:	c3                   	ret    

810067fc <_fstat_r>:
810067fc:	55                   	push   %ebp
810067fd:	89 e5                	mov    %esp,%ebp
810067ff:	83 ec 18             	sub    $0x18,%esp
81006802:	c7 05 d4 7e 00 81 00 	movl   $0x0,0x81007ed4
81006809:	00 00 00 
8100680c:	83 ec 08             	sub    $0x8,%esp
8100680f:	ff 75 10             	push   0x10(%ebp)
81006812:	ff 75 0c             	push   0xc(%ebp)
81006815:	e8 05 9f ff ff       	call   8100071f <fstat>
8100681a:	83 c4 10             	add    $0x10,%esp
8100681d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006820:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006824:	75 14                	jne    8100683a <_fstat_r+0x3e>
81006826:	a1 d4 7e 00 81       	mov    0x81007ed4,%eax
8100682b:	85 c0                	test   %eax,%eax
8100682d:	74 0b                	je     8100683a <_fstat_r+0x3e>
8100682f:	8b 15 d4 7e 00 81    	mov    0x81007ed4,%edx
81006835:	8b 45 08             	mov    0x8(%ebp),%eax
81006838:	89 10                	mov    %edx,(%eax)
8100683a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100683d:	c9                   	leave  
8100683e:	c3                   	ret    

8100683f <_isatty_r>:
8100683f:	55                   	push   %ebp
81006840:	89 e5                	mov    %esp,%ebp
81006842:	83 ec 18             	sub    $0x18,%esp
81006845:	c7 05 d4 7e 00 81 00 	movl   $0x0,0x81007ed4
8100684c:	00 00 00 
8100684f:	83 ec 0c             	sub    $0xc,%esp
81006852:	ff 75 0c             	push   0xc(%ebp)
81006855:	e8 a4 9e ff ff       	call   810006fe <isatty>
8100685a:	83 c4 10             	add    $0x10,%esp
8100685d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006860:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006864:	75 14                	jne    8100687a <_isatty_r+0x3b>
81006866:	a1 d4 7e 00 81       	mov    0x81007ed4,%eax
8100686b:	85 c0                	test   %eax,%eax
8100686d:	74 0b                	je     8100687a <_isatty_r+0x3b>
8100686f:	8b 15 d4 7e 00 81    	mov    0x81007ed4,%edx
81006875:	8b 45 08             	mov    0x8(%ebp),%eax
81006878:	89 10                	mov    %edx,(%eax)
8100687a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100687d:	c9                   	leave  
8100687e:	c3                   	ret    
