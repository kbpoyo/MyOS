
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x8100018f

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x000059ac memsz 0x00006034 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004bef  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       000003a1  81004c00  81004c00  00005c00  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009ec  81004fc0  81004fc0  00005fc0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000674  810059c0  810059c0  000069ac  2**5
                  ALLOC
  4 .debug_info   000180e3  00000000  00000000  000069ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00005571  00000000  00000000  0001ea8f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 000005b0  00000000  00000000  00024000  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   000035a6  00000000  00000000  000245b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    000011f2  00000000  00000000  00027b56  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line_str 00000fb4  00000000  00000000  00028d48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003f  00000000  00000000  00029cfc  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00001144  00000000  00000000  00029d3c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000004e  00000000  00000000  0002ae80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
810059c0 l     O .bss	00000200 cmd_buf
81004fc0 l     O .data	00000004 prompt
81005bc0 l     O .bss	0000040c cli
81000000 l     F .text	00000042 do_help
81004c34 l     O .rodata	0000000c cmd_list
81000042 l     F .text	0000003e cli_init
81000080 l     F .text	00000033 show_prompt
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
81000880 l     F .text	000000ad std
8100092d l     F .text	0000001b stdin_init
81000948 l     F .text	0000001b stdout_init
81000963 l     F .text	0000001b stderr_init
81005fcc l     O .bss	00000004 __sfp_recursive_mutex
81005fd0 l     O .bss	00000004 __sinit_recursive_mutex
81000c26 l     F .text	0000000a __fp_lock
81000c30 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 impure.c
81004fe0 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 mallocr.c
8100129b l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
81001ddd l       .text	00000000 L20
81001d94 l       .text	00000000 L5
81001dda l       .text	00000000 L15
81001da0 l       .text	00000000 L8
81001dc1 l       .text	00000000 L9
81001dd0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 mlock.c
81006028 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
81002018 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
8100244b l       .text	00000000 L25
810023f2 l       .text	00000000 L5
8100243e l       .text	00000000 L14
81002444 l       .text	00000000 L19
81002403 l       .text	00000000 L10
81002430 l       .text	00000000 L9
81002433 l       .text	00000000 L15
8100247e l       .text	00000000 L26
81002481 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 lib_a-strlen.o
810024d6 l       .text	00000000 L5
8100250e l       .text	00000000 L15
810024e0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81002e99 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fputwc.c
81004651 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
81004889 l     F .text	0000000a __get_global_locale
81004893 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 mbtowc_r.c
8100492f l     F .text	0000000a __get_global_locale
81004939 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
81004a6a l     F .text	0000000a __get_global_locale
81004a74 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
81004b74 l     F .text	0000000a __get_global_locale
81004b7e l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 ctype_.c
81004849 g     F .text	00000040 _isatty_r
8100422c g     F .text	00000037 cleanup_glue
81001f26 g     F .text	000000d6 _puts_r
81002b61 g     F .text	00000046 _lseek_r
810002d8 g     F .text	0000001b yield
81001ef1 g     F .text	00000035 printf
81004a7e g     F .text	00000077 _wcrtomb_r
8100232f g     F .text	0000004a __sseek
81000b75 g     F .text	00000099 __sinit
810043c3 g     F .text	00000112 __swbuf_r
8100489d g     F .text	0000005f _setlocale_r
8100097e g     F .text	0000006f __sfmoreglue
81001ebe g     F .text	00000006 __malloc_unlock
81002d30 g       .text	00000000 memmove
81000b5b g     F .text	0000001a _cleanup
81004806 g     F .text	00000043 _fstat_r
8100602c g     O .bss	00000004 errno
810022ca g     F .text	0000000a __seofread
810002ab g     F .text	0000002d execve
8100024d g     F .text	0000001b getpid
81000861 g     F .text	0000001f fgets
81001de8 g       .text	00000000 memcpy
81000b3a g     F .text	00000021 _cleanup_r
81001ffc g     F .text	0000001c puts
81001ec4 g     F .text	0000002d _printf_r
810003c2 g     F .text	00000021 isatty
81001291 g     F .text	0000000a __getreent
81005fe0 g     O .bss	00000004 __malloc_top_pad
810059c0 g       .bss	00000000 __bss_start__
810026c3 g     F .text	0000049e __sfvwrite_r
81002246 g     F .text	00000040 _sbrk_r
8100390c g     F .text	00000046 _read_r
8100259f g     F .text	00000107 _fclose_r
810006ca g     F .text	00000039 fflush
81005fe4 g     O .bss	00000004 __malloc_max_sbrked_mem
81000395 g     F .text	0000002d lseek
81004c44 g     O .rodata	00000004 _global_impure_ptr
81003952 g     F .text	000008da _realloc_r
81004767 g     F .text	00000057 _fputwc_r
81000c3a g     F .text	00000024 __fp_lock_all
81004263 g     F .text	00000160 _reclaim_reent
81000347 g     F .text	0000002d write
810003e3 g     F .text	00000027 fstat
810001d7 g     F .text	0000004c sys_call
81002eff g     F .text	000000a8 __sfputs_r
81000c0e g     F .text	00000006 __sfp_lock_acquire
81001d50 g       .text	00000000 memchr
81006034 g       .bss	00000000 __bss_end__
81000c82 g     F .text	000003db _free_r
81004d20 g     O .rodata	00000180 _ctype_b
810048fc g     F .text	00000014 __locale_mb_cur_max
8100582c g     O .data	00000004 __malloc_sbrk_base
8100018f g       .text	00000000 _start
8100031a g     F .text	0000002d read
81006000 g     O .bss	00000028 __malloc_current_mallinfo
81001ec4 g     F .text	0000002d _iprintf_r
8100255f g     F .text	00000040 _close_r
81000290 g     F .text	0000001b fork
810044f6 g     F .text	0000015b __swsetup_r
810009ed g     F .text	0000014d __sfp
81005420 g     O .data	00000408 __malloc_av_
81000c20 g     F .text	00000006 __sinit_lock_release
81002286 g     F .text	00000044 __sread
81001eb8 g     F .text	00000006 __malloc_lock
8100040a g     F .text	00000021 sbrk
81000672 g     F .text	00000058 _fflush_r
8100019f g     F .text	00000038 cstart
81001e30 g       .text	00000000 memset
810000b3 g     F .text	000000dc main
81005fe8 g     O .bss	00000004 __malloc_max_total_mem
810044d5 g     F .text	00000021 __swbuf
81002379 g     F .text	00000025 __sclose
810026a6 g     F .text	0000001d fclose
8100152e g     F .text	00000822 _malloc_r
81004bac g     F .text	00000043 __ascii_wctomb
810011be g     F .text	00000068 _fwalk
81000703 g     F .text	0000015e _fgets_r
81004943 g     F .text	0000002a _mbtowc_r
8100105d g     F .text	00000161 _malloc_trim_r
810049c5 g     F .text	000000a5 strcmp
81002fa7 g     F .text	00000025 vfiprintf
8100042b g     F .text	00000021 dup
81001ef1 g     F .text	00000035 iprintf
81006030 g     O .bss	00000004 _PathLocale
81002519 g     F .text	00000046 _write_r
81004910 g     F .text	0000001f setlocale
81003322 g     F .text	0000019b _printf_common
81005404 g     O .data	00000004 _impure_ptr
8100044c g     F .text	00000226 __sflush_r
81002045 g     F .text	00000201 __srefill_r
8100496d g     F .text	00000058 __ascii_mbtowc
81000c5e g     F .text	00000024 __fp_unlock_all
81000268 g     F .text	00000028 print_msg
81002c94 g     F .text	00000093 __swhatbuf_r
810046b7 g     F .text	000000b0 __fputwc
810022d4 g     F .text	0000005b __swrite
81005828 g     O .data	00000004 __malloc_trim_threshold
81002fcc g     F .text	00000356 _vfiprintf_r
81001226 g     F .text	0000006b _fwalk_reent
81000c14 g     F .text	00000006 __sfp_lock_release
81004ea0 g     O .rodata	00000101 _ctype_
81002ba7 g     F .text	000000ed __smakebuf_r
810024a0 g       .text	00000000 strlen
810034bd g     F .text	0000044f _printf_i
810002f3 g     F .text	00000027 open
81002dbd g     F .text	000000dc __sprint_r
810023a0 g       .text	00000000 strchr
81004b88 g     F .text	00000024 _wctomb_r
81002fcc g     F .text	00000356 _vfprintf_r
81000223 g     F .text	0000002a msleep
81004af5 g     F .text	0000007f wcrtomb
81000374 g     F .text	00000021 close
81005840 g     O .data	0000016c __global_locale
81002fa7 g     F .text	00000025 vfprintf
810047be g     F .text	00000048 fputwc
81000c1a g     F .text	00000006 __sinit_lock_acquire



Disassembly of section .text:

81000000 <do_help>:
 * 
 * @param argc 
 * @param arg 
 * @return int 
 */
static int do_help(int argc, char **arg) {
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 18             	sub    $0x18,%esp
    const cli_cmd_t *start = cli.cmd_start;
81000006:	a1 c0 5f 00 81       	mov    0x81005fc0,%eax
8100000b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    while (start < cli.cmd_end) {
8100000e:	eb 21                	jmp    81000031 <do_help+0x31>
        printf("%s --> %s\n", start->name, start->usage);
81000010:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000013:	8b 50 04             	mov    0x4(%eax),%edx
81000016:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000019:	8b 00                	mov    (%eax),%eax
8100001b:	83 ec 04             	sub    $0x4,%esp
8100001e:	52                   	push   %edx
8100001f:	50                   	push   %eax
81000020:	68 06 4c 00 81       	push   $0x81004c06
81000025:	e8 c7 1e 00 00       	call   81001ef1 <iprintf>
8100002a:	83 c4 10             	add    $0x10,%esp
        start++;
8100002d:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
    while (start < cli.cmd_end) {
81000031:	a1 c4 5f 00 81       	mov    0x81005fc4,%eax
81000036:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000039:	72 d5                	jb     81000010 <do_help+0x10>
    }
    
    
    return  0;   
8100003b:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000040:	c9                   	leave  
81000041:	c3                   	ret    

81000042 <cli_init>:

/**
 * @brief 初始化终端结构
 * 
 */
static void cli_init() {
81000042:	55                   	push   %ebp
81000043:	89 e5                	mov    %esp,%ebp
81000045:	83 ec 08             	sub    $0x8,%esp
    cli.prompt = prompt;
81000048:	a1 c0 4f 00 81       	mov    0x81004fc0,%eax
8100004d:	a3 c8 5f 00 81       	mov    %eax,0x81005fc8
    memset(cli.curr_input, 0, CLI_INPUT_SIZE);
81000052:	83 ec 04             	sub    $0x4,%esp
81000055:	68 00 04 00 00       	push   $0x400
8100005a:	6a 00                	push   $0x0
8100005c:	68 c0 5b 00 81       	push   $0x81005bc0
81000061:	e8 ca 1d 00 00       	call   81001e30 <memset>
81000066:	83 c4 10             	add    $0x10,%esp
    cli.cmd_start = cmd_list;
81000069:	c7 05 c0 5f 00 81 34 	movl   $0x81004c34,0x81005fc0
81000070:	4c 00 81 
    cli.cmd_end = cmd_list + sizeof(cmd_list) / sizeof(cmd_list[0]);
81000073:	b8 40 4c 00 81       	mov    $0x81004c40,%eax
81000078:	a3 c4 5f 00 81       	mov    %eax,0x81005fc4
}
8100007d:	90                   	nop
8100007e:	c9                   	leave  
8100007f:	c3                   	ret    

81000080 <show_prompt>:

/**
 * @brief 打印终端每行固定的提示符
 * 
 */
static void show_prompt(void) {
81000080:	55                   	push   %ebp
81000081:	89 e5                	mov    %esp,%ebp
81000083:	83 ec 08             	sub    $0x8,%esp
    printf("%s", cli.prompt);
81000086:	a1 c8 5f 00 81       	mov    0x81005fc8,%eax
8100008b:	83 ec 08             	sub    $0x8,%esp
8100008e:	50                   	push   %eax
8100008f:	68 40 4c 00 81       	push   $0x81004c40
81000094:	e8 58 1e 00 00       	call   81001ef1 <iprintf>
81000099:	83 c4 10             	add    $0x10,%esp
    fflush(stdout);
8100009c:	e8 f0 11 00 00       	call   81001291 <__getreent>
810000a1:	8b 40 08             	mov    0x8(%eax),%eax
810000a4:	83 ec 0c             	sub    $0xc,%esp
810000a7:	50                   	push   %eax
810000a8:	e8 1d 06 00 00       	call   810006ca <fflush>
810000ad:	83 c4 10             	add    $0x10,%esp
}
810000b0:	90                   	nop
810000b1:	c9                   	leave  
810000b2:	c3                   	ret    

810000b3 <main>:

int main(int argc, char** argv) {
810000b3:	8d 4c 24 04          	lea    0x4(%esp),%ecx
810000b7:	83 e4 f0             	and    $0xfffffff0,%esp
810000ba:	ff 71 fc             	push   -0x4(%ecx)
810000bd:	55                   	push   %ebp
810000be:	89 e5                	mov    %esp,%ebp
810000c0:	51                   	push   %ecx
810000c1:	83 ec 14             	sub    $0x14,%esp
810000c4:	89 c8                	mov    %ecx,%eax

    open(argv[0], 0);
810000c6:	8b 40 04             	mov    0x4(%eax),%eax
810000c9:	8b 00                	mov    (%eax),%eax
810000cb:	83 ec 08             	sub    $0x8,%esp
810000ce:	6a 00                	push   $0x0
810000d0:	50                   	push   %eax
810000d1:	e8 1d 02 00 00       	call   810002f3 <open>
810000d6:	83 c4 10             	add    $0x10,%esp
    dup(0);
810000d9:	83 ec 0c             	sub    $0xc,%esp
810000dc:	6a 00                	push   $0x0
810000de:	e8 48 03 00 00       	call   8100042b <dup>
810000e3:	83 c4 10             	add    $0x10,%esp
    dup(0);
810000e6:	83 ec 0c             	sub    $0xc,%esp
810000e9:	6a 00                	push   $0x0
810000eb:	e8 3b 03 00 00       	call   8100042b <dup>
810000f0:	83 c4 10             	add    $0x10,%esp

    cli_init();
810000f3:	e8 4a ff ff ff       	call   81000042 <cli_init>
    // printf("hello from shell\n");

    for (;;) {
        //printf("shell pid=%d\n", getpid());
        //msleep(1000);
        show_prompt();
810000f8:	e8 83 ff ff ff       	call   81000080 <show_prompt>
        char * str = fgets(cli.curr_input, CLI_INPUT_SIZE, stdin);
810000fd:	e8 8f 11 00 00       	call   81001291 <__getreent>
81000102:	8b 40 04             	mov    0x4(%eax),%eax
81000105:	83 ec 04             	sub    $0x4,%esp
81000108:	50                   	push   %eax
81000109:	68 00 04 00 00       	push   $0x400
8100010e:	68 c0 5b 00 81       	push   $0x81005bc0
81000113:	e8 49 07 00 00       	call   81000861 <fgets>
81000118:	83 c4 10             	add    $0x10,%esp
8100011b:	89 45 f4             	mov    %eax,-0xc(%ebp)
        if (!str) {
8100011e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000122:	74 65                	je     81000189 <main+0xd6>
            continue;
        }
        char *cr = strchr(cli.curr_input, '\n');
81000124:	83 ec 08             	sub    $0x8,%esp
81000127:	6a 0a                	push   $0xa
81000129:	68 c0 5b 00 81       	push   $0x81005bc0
8100012e:	e8 6d 22 00 00       	call   810023a0 <strchr>
81000133:	83 c4 10             	add    $0x10,%esp
81000136:	89 45 f0             	mov    %eax,-0x10(%ebp)
        if (cr) {
81000139:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100013d:	74 06                	je     81000145 <main+0x92>
            *cr = '\0'; 
8100013f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000142:	c6 00 00             	movb   $0x0,(%eax)
        }
        cr = strchr(cli.curr_input, '\r');
81000145:	83 ec 08             	sub    $0x8,%esp
81000148:	6a 0d                	push   $0xd
8100014a:	68 c0 5b 00 81       	push   $0x81005bc0
8100014f:	e8 4c 22 00 00       	call   810023a0 <strchr>
81000154:	83 c4 10             	add    $0x10,%esp
81000157:	89 45 f0             	mov    %eax,-0x10(%ebp)
        if (cr) {
8100015a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100015e:	74 06                	je     81000166 <main+0xb3>
            *cr = '\0';
81000160:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000163:	c6 00 00             	movb   $0x0,(%eax)
        }

        puts(str);
81000166:	83 ec 0c             	sub    $0xc,%esp
81000169:	ff 75 f4             	push   -0xc(%ebp)
8100016c:	e8 8b 1e 00 00       	call   81001ffc <puts>
81000171:	83 c4 10             	add    $0x10,%esp
        puts(cli.curr_input);
81000174:	83 ec 0c             	sub    $0xc,%esp
81000177:	68 c0 5b 00 81       	push   $0x81005bc0
8100017c:	e8 7b 1e 00 00       	call   81001ffc <puts>
81000181:	83 c4 10             	add    $0x10,%esp
81000184:	e9 6f ff ff ff       	jmp    810000f8 <main+0x45>
            continue;
81000189:	90                   	nop
    for (;;) {
8100018a:	e9 69 ff ff ff       	jmp    810000f8 <main+0x45>

8100018f <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
8100018f:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
81000192:	8e d8                	mov    %eax,%ds
	mov %ax, %es
81000194:	8e c0                	mov    %eax,%es
	mov %ax, %fs
81000196:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
81000198:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
8100019a:	e9 00 00 00 00       	jmp    8100019f <cstart>

8100019f <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
8100019f:	55                   	push   %ebp
810001a0:	89 e5                	mov    %esp,%ebp
810001a2:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
810001a5:	c7 45 f4 c0 59 00 81 	movl   $0x810059c0,-0xc(%ebp)
    while (start < __bss_end__) {
810001ac:	eb 0c                	jmp    810001ba <cstart+0x1b>
        *(start++) = 0;
810001ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
810001b1:	8d 50 01             	lea    0x1(%eax),%edx
810001b4:	89 55 f4             	mov    %edx,-0xc(%ebp)
810001b7:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
810001ba:	81 7d f4 34 60 00 81 	cmpl   $0x81006034,-0xc(%ebp)
810001c1:	72 eb                	jb     810001ae <cstart+0xf>
    }
    
    main(argc, argv);
810001c3:	83 ec 08             	sub    $0x8,%esp
810001c6:	ff 75 0c             	push   0xc(%ebp)
810001c9:	ff 75 08             	push   0x8(%ebp)
810001cc:	e8 e2 fe ff ff       	call   810000b3 <main>
810001d1:	83 c4 10             	add    $0x10,%esp
}
810001d4:	90                   	nop
810001d5:	c9                   	leave  
810001d6:	c3                   	ret    

810001d7 <sys_call>:
#include    "cpu/syscall.h"
#include    "os_cfg.h"
#include    "lib_syscall.h"


int sys_call(syscall_args_t *args) {
810001d7:	55                   	push   %ebp
810001d8:	89 e5                	mov    %esp,%ebp
810001da:	57                   	push   %edi
810001db:	56                   	push   %esi
810001dc:	53                   	push   %ebx
810001dd:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
810001e0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810001e7:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
810001ee:	8b 45 08             	mov    0x8(%ebp),%eax
810001f1:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
810001f4:	8b 55 08             	mov    0x8(%ebp),%edx
810001f7:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
810001fa:	8b 4d 08             	mov    0x8(%ebp),%ecx
810001fd:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
81000200:	8b 5d 08             	mov    0x8(%ebp),%ebx
81000203:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
81000206:	8b 75 08             	mov    0x8(%ebp),%esi
81000209:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
8100020b:	8d 7d e8             	lea    -0x18(%ebp),%edi
8100020e:	50                   	push   %eax
8100020f:	52                   	push   %edx
81000210:	51                   	push   %ecx
81000211:	53                   	push   %ebx
81000212:	56                   	push   %esi
81000213:	ff 1f                	lcall  *(%edi)
81000215:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
81000218:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
8100021b:	83 c4 10             	add    $0x10,%esp
8100021e:	5b                   	pop    %ebx
8100021f:	5e                   	pop    %esi
81000220:	5f                   	pop    %edi
81000221:	5d                   	pop    %ebp
81000222:	c3                   	ret    

81000223 <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
81000223:	55                   	push   %ebp
81000224:	89 e5                	mov    %esp,%ebp
81000226:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
81000229:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100022d:	7e 1b                	jle    8100024a <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
8100022f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
81000236:	8b 45 08             	mov    0x8(%ebp),%eax
81000239:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
8100023c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100023f:	50                   	push   %eax
81000240:	e8 92 ff ff ff       	call   810001d7 <sys_call>
81000245:	83 c4 04             	add    $0x4,%esp
81000248:	eb 01                	jmp    8100024b <msleep+0x28>
    if (ms <= 0) return;
8100024a:	90                   	nop

}
8100024b:	c9                   	leave  
8100024c:	c3                   	ret    

8100024d <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
8100024d:	55                   	push   %ebp
8100024e:	89 e5                	mov    %esp,%ebp
81000250:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000253:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
8100025a:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100025d:	50                   	push   %eax
8100025e:	e8 74 ff ff ff       	call   810001d7 <sys_call>
81000263:	83 c4 04             	add    $0x4,%esp
}
81000266:	c9                   	leave  
81000267:	c3                   	ret    

81000268 <print_msg>:

void print_msg(const char *fmt, int arg) {
81000268:	55                   	push   %ebp
81000269:	89 e5                	mov    %esp,%ebp
8100026b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
8100026e:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
81000275:	8b 45 08             	mov    0x8(%ebp),%eax
81000278:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
8100027b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100027e:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
81000281:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000284:	50                   	push   %eax
81000285:	e8 4d ff ff ff       	call   810001d7 <sys_call>
8100028a:	83 c4 04             	add    $0x4,%esp
}
8100028d:	90                   	nop
8100028e:	c9                   	leave  
8100028f:	c3                   	ret    

81000290 <fork>:

int fork (void) {
81000290:	55                   	push   %ebp
81000291:	89 e5                	mov    %esp,%ebp
81000293:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
81000296:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
8100029d:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002a0:	50                   	push   %eax
810002a1:	e8 31 ff ff ff       	call   810001d7 <sys_call>
810002a6:	83 c4 04             	add    $0x4,%esp
}
810002a9:	c9                   	leave  
810002aa:	c3                   	ret    

810002ab <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
810002ab:	55                   	push   %ebp
810002ac:	89 e5                	mov    %esp,%ebp
810002ae:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
810002b1:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
810002b8:	8b 45 08             	mov    0x8(%ebp),%eax
810002bb:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
810002be:	8b 45 0c             	mov    0xc(%ebp),%eax
810002c1:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
810002c4:	8b 45 10             	mov    0x10(%ebp),%eax
810002c7:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
810002ca:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002cd:	50                   	push   %eax
810002ce:	e8 04 ff ff ff       	call   810001d7 <sys_call>
810002d3:	83 c4 04             	add    $0x4,%esp
}
810002d6:	c9                   	leave  
810002d7:	c3                   	ret    

810002d8 <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
810002d8:	55                   	push   %ebp
810002d9:	89 e5                	mov    %esp,%ebp
810002db:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
810002de:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
810002e5:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002e8:	50                   	push   %eax
810002e9:	e8 e9 fe ff ff       	call   810001d7 <sys_call>
810002ee:	83 c4 04             	add    $0x4,%esp
}
810002f1:	c9                   	leave  
810002f2:	c3                   	ret    

810002f3 <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
810002f3:	55                   	push   %ebp
810002f4:	89 e5                	mov    %esp,%ebp
810002f6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
810002f9:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
81000300:	8b 45 08             	mov    0x8(%ebp),%eax
81000303:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
81000306:	8b 45 0c             	mov    0xc(%ebp),%eax
81000309:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
8100030c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100030f:	50                   	push   %eax
81000310:	e8 c2 fe ff ff       	call   810001d7 <sys_call>
81000315:	83 c4 04             	add    $0x4,%esp
}
81000318:	c9                   	leave  
81000319:	c3                   	ret    

8100031a <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
8100031a:	55                   	push   %ebp
8100031b:	89 e5                	mov    %esp,%ebp
8100031d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
81000320:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
81000327:	8b 45 08             	mov    0x8(%ebp),%eax
8100032a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
8100032d:	8b 45 0c             	mov    0xc(%ebp),%eax
81000330:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000333:	8b 45 10             	mov    0x10(%ebp),%eax
81000336:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000339:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100033c:	50                   	push   %eax
8100033d:	e8 95 fe ff ff       	call   810001d7 <sys_call>
81000342:	83 c4 04             	add    $0x4,%esp
}
81000345:	c9                   	leave  
81000346:	c3                   	ret    

81000347 <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
81000347:	55                   	push   %ebp
81000348:	89 e5                	mov    %esp,%ebp
8100034a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
8100034d:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
81000354:	8b 45 08             	mov    0x8(%ebp),%eax
81000357:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
8100035a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100035d:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000360:	8b 45 10             	mov    0x10(%ebp),%eax
81000363:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000366:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000369:	50                   	push   %eax
8100036a:	e8 68 fe ff ff       	call   810001d7 <sys_call>
8100036f:	83 c4 04             	add    $0x4,%esp
}
81000372:	c9                   	leave  
81000373:	c3                   	ret    

81000374 <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
81000374:	55                   	push   %ebp
81000375:	89 e5                	mov    %esp,%ebp
81000377:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
8100037a:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
81000381:	8b 45 08             	mov    0x8(%ebp),%eax
81000384:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000387:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100038a:	50                   	push   %eax
8100038b:	e8 47 fe ff ff       	call   810001d7 <sys_call>
81000390:	83 c4 04             	add    $0x4,%esp
}
81000393:	c9                   	leave  
81000394:	c3                   	ret    

81000395 <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
81000395:	55                   	push   %ebp
81000396:	89 e5                	mov    %esp,%ebp
81000398:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
8100039b:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
810003a2:	8b 45 08             	mov    0x8(%ebp),%eax
810003a5:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
810003a8:	8b 45 0c             	mov    0xc(%ebp),%eax
810003ab:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
810003ae:	8b 45 10             	mov    0x10(%ebp),%eax
810003b1:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
810003b4:	8d 45 ec             	lea    -0x14(%ebp),%eax
810003b7:	50                   	push   %eax
810003b8:	e8 1a fe ff ff       	call   810001d7 <sys_call>
810003bd:	83 c4 04             	add    $0x4,%esp
}
810003c0:	c9                   	leave  
810003c1:	c3                   	ret    

810003c2 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
810003c2:	55                   	push   %ebp
810003c3:	89 e5                	mov    %esp,%ebp
810003c5:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
810003c8:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
810003cf:	8b 45 08             	mov    0x8(%ebp),%eax
810003d2:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
810003d5:	8d 45 ec             	lea    -0x14(%ebp),%eax
810003d8:	50                   	push   %eax
810003d9:	e8 f9 fd ff ff       	call   810001d7 <sys_call>
810003de:	83 c4 04             	add    $0x4,%esp
}
810003e1:	c9                   	leave  
810003e2:	c3                   	ret    

810003e3 <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
810003e3:	55                   	push   %ebp
810003e4:	89 e5                	mov    %esp,%ebp
810003e6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
810003e9:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
810003f0:	8b 45 08             	mov    0x8(%ebp),%eax
810003f3:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
810003f6:	8b 45 0c             	mov    0xc(%ebp),%eax
810003f9:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
810003fc:	8d 45 ec             	lea    -0x14(%ebp),%eax
810003ff:	50                   	push   %eax
81000400:	e8 d2 fd ff ff       	call   810001d7 <sys_call>
81000405:	83 c4 04             	add    $0x4,%esp
}
81000408:	c9                   	leave  
81000409:	c3                   	ret    

8100040a <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
8100040a:	55                   	push   %ebp
8100040b:	89 e5                	mov    %esp,%ebp
8100040d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
81000410:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)incr;
81000417:	8b 45 08             	mov    0x8(%ebp),%eax
8100041a:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
8100041d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000420:	50                   	push   %eax
81000421:	e8 b1 fd ff ff       	call   810001d7 <sys_call>
81000426:	83 c4 04             	add    $0x4,%esp
}
81000429:	c9                   	leave  
8100042a:	c3                   	ret    

8100042b <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
8100042b:	55                   	push   %ebp
8100042c:	89 e5                	mov    %esp,%ebp
8100042e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
81000431:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0 = file;
81000438:	8b 45 08             	mov    0x8(%ebp),%eax
8100043b:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8100043e:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000441:	50                   	push   %eax
81000442:	e8 90 fd ff ff       	call   810001d7 <sys_call>
81000447:	83 c4 04             	add    $0x4,%esp
8100044a:	c9                   	leave  
8100044b:	c3                   	ret    

8100044c <__sflush_r>:
8100044c:	55                   	push   %ebp
8100044d:	89 e5                	mov    %esp,%ebp
8100044f:	57                   	push   %edi
81000450:	56                   	push   %esi
81000451:	53                   	push   %ebx
81000452:	83 ec 1c             	sub    $0x1c,%esp
81000455:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000458:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100045c:	66 89 45 de          	mov    %ax,-0x22(%ebp)
81000460:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000464:	83 e0 08             	and    $0x8,%eax
81000467:	85 c0                	test   %eax,%eax
81000469:	0f 85 93 01 00 00    	jne    81000602 <__sflush_r+0x1b6>
8100046f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000473:	80 cc 08             	or     $0x8,%ah
81000476:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100047a:	8b 43 04             	mov    0x4(%ebx),%eax
8100047d:	85 c0                	test   %eax,%eax
8100047f:	7f 0b                	jg     8100048c <__sflush_r+0x40>
81000481:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000484:	85 c0                	test   %eax,%eax
81000486:	0f 8e 6f 01 00 00    	jle    810005fb <__sflush_r+0x1af>
8100048c:	8b 43 28             	mov    0x28(%ebx),%eax
8100048f:	85 c0                	test   %eax,%eax
81000491:	0f 84 64 01 00 00    	je     810005fb <__sflush_r+0x1af>
81000497:	8b 45 08             	mov    0x8(%ebp),%eax
8100049a:	8b 00                	mov    (%eax),%eax
8100049c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100049f:	8b 45 08             	mov    0x8(%ebp),%eax
810004a2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810004a8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810004ac:	98                   	cwtl   
810004ad:	25 00 10 00 00       	and    $0x1000,%eax
810004b2:	85 c0                	test   %eax,%eax
810004b4:	74 08                	je     810004be <__sflush_r+0x72>
810004b6:	8b 43 50             	mov    0x50(%ebx),%eax
810004b9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810004bc:	eb 64                	jmp    81000522 <__sflush_r+0xd6>
810004be:	8b 43 28             	mov    0x28(%ebx),%eax
810004c1:	8b 53 1c             	mov    0x1c(%ebx),%edx
810004c4:	6a 01                	push   $0x1
810004c6:	6a 00                	push   $0x0
810004c8:	52                   	push   %edx
810004c9:	ff 75 08             	push   0x8(%ebp)
810004cc:	ff d0                	call   *%eax
810004ce:	83 c4 10             	add    $0x10,%esp
810004d1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810004d4:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810004d8:	75 48                	jne    81000522 <__sflush_r+0xd6>
810004da:	8b 45 08             	mov    0x8(%ebp),%eax
810004dd:	8b 00                	mov    (%eax),%eax
810004df:	85 c0                	test   %eax,%eax
810004e1:	74 3f                	je     81000522 <__sflush_r+0xd6>
810004e3:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
810004ea:	8b 45 08             	mov    0x8(%ebp),%eax
810004ed:	8b 00                	mov    (%eax),%eax
810004ef:	83 f8 1d             	cmp    $0x1d,%eax
810004f2:	74 0a                	je     810004fe <__sflush_r+0xb2>
810004f4:	8b 45 08             	mov    0x8(%ebp),%eax
810004f7:	8b 00                	mov    (%eax),%eax
810004f9:	83 f8 16             	cmp    $0x16,%eax
810004fc:	75 11                	jne    8100050f <__sflush_r+0xc3>
810004fe:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000505:	8b 45 08             	mov    0x8(%ebp),%eax
81000508:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100050b:	89 10                	mov    %edx,(%eax)
8100050d:	eb 0b                	jmp    8100051a <__sflush_r+0xce>
8100050f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000513:	83 c8 40             	or     $0x40,%eax
81000516:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100051a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100051d:	e9 48 01 00 00       	jmp    8100066a <__sflush_r+0x21e>
81000522:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000526:	98                   	cwtl   
81000527:	83 e0 04             	and    $0x4,%eax
8100052a:	85 c0                	test   %eax,%eax
8100052c:	74 13                	je     81000541 <__sflush_r+0xf5>
8100052e:	8b 43 04             	mov    0x4(%ebx),%eax
81000531:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000534:	8b 43 30             	mov    0x30(%ebx),%eax
81000537:	85 c0                	test   %eax,%eax
81000539:	74 06                	je     81000541 <__sflush_r+0xf5>
8100053b:	8b 43 3c             	mov    0x3c(%ebx),%eax
8100053e:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000541:	8b 43 28             	mov    0x28(%ebx),%eax
81000544:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000547:	6a 00                	push   $0x0
81000549:	ff 75 e4             	push   -0x1c(%ebp)
8100054c:	52                   	push   %edx
8100054d:	ff 75 08             	push   0x8(%ebp)
81000550:	ff d0                	call   *%eax
81000552:	83 c4 10             	add    $0x10,%esp
81000555:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000558:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8100055c:	75 1d                	jne    8100057b <__sflush_r+0x12f>
8100055e:	8b 45 08             	mov    0x8(%ebp),%eax
81000561:	8b 00                	mov    (%eax),%eax
81000563:	85 c0                	test   %eax,%eax
81000565:	74 14                	je     8100057b <__sflush_r+0x12f>
81000567:	8b 45 08             	mov    0x8(%ebp),%eax
8100056a:	8b 00                	mov    (%eax),%eax
8100056c:	83 f8 1d             	cmp    $0x1d,%eax
8100056f:	74 0a                	je     8100057b <__sflush_r+0x12f>
81000571:	8b 45 08             	mov    0x8(%ebp),%eax
81000574:	8b 00                	mov    (%eax),%eax
81000576:	83 f8 16             	cmp    $0x16,%eax
81000579:	75 6e                	jne    810005e9 <__sflush_r+0x19d>
8100057b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100057f:	80 e4 f7             	and    $0xf7,%ah
81000582:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000586:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100058d:	8b 43 10             	mov    0x10(%ebx),%eax
81000590:	89 03                	mov    %eax,(%ebx)
81000592:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000596:	98                   	cwtl   
81000597:	25 00 10 00 00       	and    $0x1000,%eax
8100059c:	85 c0                	test   %eax,%eax
8100059e:	74 15                	je     810005b5 <__sflush_r+0x169>
810005a0:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810005a4:	75 09                	jne    810005af <__sflush_r+0x163>
810005a6:	8b 45 08             	mov    0x8(%ebp),%eax
810005a9:	8b 00                	mov    (%eax),%eax
810005ab:	85 c0                	test   %eax,%eax
810005ad:	75 06                	jne    810005b5 <__sflush_r+0x169>
810005af:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810005b2:	89 43 50             	mov    %eax,0x50(%ebx)
810005b5:	8b 45 08             	mov    0x8(%ebp),%eax
810005b8:	8b 55 d8             	mov    -0x28(%ebp),%edx
810005bb:	89 10                	mov    %edx,(%eax)
810005bd:	8b 43 30             	mov    0x30(%ebx),%eax
810005c0:	85 c0                	test   %eax,%eax
810005c2:	74 37                	je     810005fb <__sflush_r+0x1af>
810005c4:	8b 53 30             	mov    0x30(%ebx),%edx
810005c7:	8d 43 40             	lea    0x40(%ebx),%eax
810005ca:	39 c2                	cmp    %eax,%edx
810005cc:	74 12                	je     810005e0 <__sflush_r+0x194>
810005ce:	8b 43 30             	mov    0x30(%ebx),%eax
810005d1:	83 ec 08             	sub    $0x8,%esp
810005d4:	50                   	push   %eax
810005d5:	ff 75 08             	push   0x8(%ebp)
810005d8:	e8 a5 06 00 00       	call   81000c82 <_free_r>
810005dd:	83 c4 10             	add    $0x10,%esp
810005e0:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810005e7:	eb 12                	jmp    810005fb <__sflush_r+0x1af>
810005e9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810005ed:	83 c8 40             	or     $0x40,%eax
810005f0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810005f4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810005f9:	eb 6f                	jmp    8100066a <__sflush_r+0x21e>
810005fb:	b8 00 00 00 00       	mov    $0x0,%eax
81000600:	eb 68                	jmp    8100066a <__sflush_r+0x21e>
81000602:	8b 73 10             	mov    0x10(%ebx),%esi
81000605:	85 f6                	test   %esi,%esi
81000607:	75 07                	jne    81000610 <__sflush_r+0x1c4>
81000609:	b8 00 00 00 00       	mov    $0x0,%eax
8100060e:	eb 5a                	jmp    8100066a <__sflush_r+0x21e>
81000610:	8b 03                	mov    (%ebx),%eax
81000612:	29 f0                	sub    %esi,%eax
81000614:	89 c7                	mov    %eax,%edi
81000616:	89 33                	mov    %esi,(%ebx)
81000618:	0f bf 45 de          	movswl -0x22(%ebp),%eax
8100061c:	83 e0 03             	and    $0x3,%eax
8100061f:	85 c0                	test   %eax,%eax
81000621:	75 05                	jne    81000628 <__sflush_r+0x1dc>
81000623:	8b 43 14             	mov    0x14(%ebx),%eax
81000626:	eb 05                	jmp    8100062d <__sflush_r+0x1e1>
81000628:	b8 00 00 00 00       	mov    $0x0,%eax
8100062d:	89 43 08             	mov    %eax,0x8(%ebx)
81000630:	eb 2f                	jmp    81000661 <__sflush_r+0x215>
81000632:	8b 43 24             	mov    0x24(%ebx),%eax
81000635:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000638:	57                   	push   %edi
81000639:	56                   	push   %esi
8100063a:	52                   	push   %edx
8100063b:	ff 75 08             	push   0x8(%ebp)
8100063e:	ff d0                	call   *%eax
81000640:	83 c4 10             	add    $0x10,%esp
81000643:	85 c0                	test   %eax,%eax
81000645:	7f 12                	jg     81000659 <__sflush_r+0x20d>
81000647:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100064b:	83 c8 40             	or     $0x40,%eax
8100064e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000652:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000657:	eb 11                	jmp    8100066a <__sflush_r+0x21e>
81000659:	89 c1                	mov    %eax,%ecx
8100065b:	89 c8                	mov    %ecx,%eax
8100065d:	01 c6                	add    %eax,%esi
8100065f:	29 cf                	sub    %ecx,%edi
81000661:	85 ff                	test   %edi,%edi
81000663:	7f cd                	jg     81000632 <__sflush_r+0x1e6>
81000665:	b8 00 00 00 00       	mov    $0x0,%eax
8100066a:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100066d:	5b                   	pop    %ebx
8100066e:	5e                   	pop    %esi
8100066f:	5f                   	pop    %edi
81000670:	5d                   	pop    %ebp
81000671:	c3                   	ret    

81000672 <_fflush_r>:
81000672:	55                   	push   %ebp
81000673:	89 e5                	mov    %esp,%ebp
81000675:	53                   	push   %ebx
81000676:	83 ec 14             	sub    $0x14,%esp
81000679:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100067c:	8b 45 08             	mov    0x8(%ebp),%eax
8100067f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000682:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000686:	74 18                	je     810006a0 <_fflush_r+0x2e>
81000688:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100068b:	8b 40 38             	mov    0x38(%eax),%eax
8100068e:	85 c0                	test   %eax,%eax
81000690:	75 0e                	jne    810006a0 <_fflush_r+0x2e>
81000692:	83 ec 0c             	sub    $0xc,%esp
81000695:	ff 75 f4             	push   -0xc(%ebp)
81000698:	e8 d8 04 00 00       	call   81000b75 <__sinit>
8100069d:	83 c4 10             	add    $0x10,%esp
810006a0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810006a4:	66 85 c0             	test   %ax,%ax
810006a7:	75 07                	jne    810006b0 <_fflush_r+0x3e>
810006a9:	b8 00 00 00 00       	mov    $0x0,%eax
810006ae:	eb 15                	jmp    810006c5 <_fflush_r+0x53>
810006b0:	83 ec 08             	sub    $0x8,%esp
810006b3:	53                   	push   %ebx
810006b4:	ff 75 08             	push   0x8(%ebp)
810006b7:	e8 90 fd ff ff       	call   8100044c <__sflush_r>
810006bc:	83 c4 10             	add    $0x10,%esp
810006bf:	89 45 f0             	mov    %eax,-0x10(%ebp)
810006c2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810006c5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810006c8:	c9                   	leave  
810006c9:	c3                   	ret    

810006ca <fflush>:
810006ca:	55                   	push   %ebp
810006cb:	89 e5                	mov    %esp,%ebp
810006cd:	83 ec 08             	sub    $0x8,%esp
810006d0:	8b 55 08             	mov    0x8(%ebp),%edx
810006d3:	85 d2                	test   %edx,%edx
810006d5:	75 18                	jne    810006ef <fflush+0x25>
810006d7:	a1 44 4c 00 81       	mov    0x81004c44,%eax
810006dc:	83 ec 08             	sub    $0x8,%esp
810006df:	68 72 06 00 81       	push   $0x81000672
810006e4:	50                   	push   %eax
810006e5:	e8 3c 0b 00 00       	call   81001226 <_fwalk_reent>
810006ea:	83 c4 10             	add    $0x10,%esp
810006ed:	eb 12                	jmp    81000701 <fflush+0x37>
810006ef:	a1 04 54 00 81       	mov    0x81005404,%eax
810006f4:	83 ec 08             	sub    $0x8,%esp
810006f7:	52                   	push   %edx
810006f8:	50                   	push   %eax
810006f9:	e8 74 ff ff ff       	call   81000672 <_fflush_r>
810006fe:	83 c4 10             	add    $0x10,%esp
81000701:	c9                   	leave  
81000702:	c3                   	ret    

81000703 <_fgets_r>:
81000703:	55                   	push   %ebp
81000704:	89 e5                	mov    %esp,%ebp
81000706:	83 ec 28             	sub    $0x28,%esp
81000709:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
8100070d:	7f 0a                	jg     81000719 <_fgets_r+0x16>
8100070f:	b8 00 00 00 00       	mov    $0x0,%eax
81000714:	e9 46 01 00 00       	jmp    8100085f <_fgets_r+0x15c>
81000719:	8b 45 0c             	mov    0xc(%ebp),%eax
8100071c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100071f:	8b 45 08             	mov    0x8(%ebp),%eax
81000722:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000725:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000729:	74 18                	je     81000743 <_fgets_r+0x40>
8100072b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100072e:	8b 40 38             	mov    0x38(%eax),%eax
81000731:	85 c0                	test   %eax,%eax
81000733:	75 0e                	jne    81000743 <_fgets_r+0x40>
81000735:	83 ec 0c             	sub    $0xc,%esp
81000738:	ff 75 ec             	push   -0x14(%ebp)
8100073b:	e8 35 04 00 00       	call   81000b75 <__sinit>
81000740:	83 c4 10             	add    $0x10,%esp
81000743:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
81000747:	8b 45 14             	mov    0x14(%ebp),%eax
8100074a:	8b 40 04             	mov    0x4(%eax),%eax
8100074d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000750:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000754:	75 34                	jne    8100078a <_fgets_r+0x87>
81000756:	83 ec 08             	sub    $0x8,%esp
81000759:	ff 75 14             	push   0x14(%ebp)
8100075c:	ff 75 08             	push   0x8(%ebp)
8100075f:	e8 e1 18 00 00       	call   81002045 <__srefill_r>
81000764:	83 c4 10             	add    $0x10,%esp
81000767:	85 c0                	test   %eax,%eax
81000769:	74 16                	je     81000781 <_fgets_r+0x7e>
8100076b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100076e:	3b 45 0c             	cmp    0xc(%ebp),%eax
81000771:	0f 85 de 00 00 00    	jne    81000855 <_fgets_r+0x152>
81000777:	b8 00 00 00 00       	mov    $0x0,%eax
8100077c:	e9 de 00 00 00       	jmp    8100085f <_fgets_r+0x15c>
81000781:	8b 45 14             	mov    0x14(%ebp),%eax
81000784:	8b 40 04             	mov    0x4(%eax),%eax
81000787:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100078a:	8b 45 14             	mov    0x14(%ebp),%eax
8100078d:	8b 00                	mov    (%eax),%eax
8100078f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000792:	8b 45 10             	mov    0x10(%ebp),%eax
81000795:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000798:	76 06                	jbe    810007a0 <_fgets_r+0x9d>
8100079a:	8b 45 10             	mov    0x10(%ebp),%eax
8100079d:	89 45 f4             	mov    %eax,-0xc(%ebp)
810007a0:	83 ec 04             	sub    $0x4,%esp
810007a3:	ff 75 f4             	push   -0xc(%ebp)
810007a6:	6a 0a                	push   $0xa
810007a8:	ff 75 e8             	push   -0x18(%ebp)
810007ab:	e8 a0 15 00 00       	call   81001d50 <memchr>
810007b0:	83 c4 10             	add    $0x10,%esp
810007b3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810007b6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810007ba:	74 4a                	je     81000806 <_fgets_r+0x103>
810007bc:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810007c0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810007c3:	2b 45 e8             	sub    -0x18(%ebp),%eax
810007c6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810007c9:	8b 45 14             	mov    0x14(%ebp),%eax
810007cc:	8b 40 04             	mov    0x4(%eax),%eax
810007cf:	2b 45 f4             	sub    -0xc(%ebp),%eax
810007d2:	89 c2                	mov    %eax,%edx
810007d4:	8b 45 14             	mov    0x14(%ebp),%eax
810007d7:	89 50 04             	mov    %edx,0x4(%eax)
810007da:	8b 45 14             	mov    0x14(%ebp),%eax
810007dd:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810007e0:	89 10                	mov    %edx,(%eax)
810007e2:	83 ec 04             	sub    $0x4,%esp
810007e5:	ff 75 f4             	push   -0xc(%ebp)
810007e8:	ff 75 e8             	push   -0x18(%ebp)
810007eb:	ff 75 f0             	push   -0x10(%ebp)
810007ee:	e8 f5 15 00 00       	call   81001de8 <memcpy>
810007f3:	83 c4 10             	add    $0x10,%esp
810007f6:	8b 55 f0             	mov    -0x10(%ebp),%edx
810007f9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007fc:	01 d0                	add    %edx,%eax
810007fe:	c6 00 00             	movb   $0x0,(%eax)
81000801:	8b 45 0c             	mov    0xc(%ebp),%eax
81000804:	eb 59                	jmp    8100085f <_fgets_r+0x15c>
81000806:	8b 45 14             	mov    0x14(%ebp),%eax
81000809:	8b 40 04             	mov    0x4(%eax),%eax
8100080c:	2b 45 f4             	sub    -0xc(%ebp),%eax
8100080f:	89 c2                	mov    %eax,%edx
81000811:	8b 45 14             	mov    0x14(%ebp),%eax
81000814:	89 50 04             	mov    %edx,0x4(%eax)
81000817:	8b 45 14             	mov    0x14(%ebp),%eax
8100081a:	8b 10                	mov    (%eax),%edx
8100081c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100081f:	01 c2                	add    %eax,%edx
81000821:	8b 45 14             	mov    0x14(%ebp),%eax
81000824:	89 10                	mov    %edx,(%eax)
81000826:	83 ec 04             	sub    $0x4,%esp
81000829:	ff 75 f4             	push   -0xc(%ebp)
8100082c:	ff 75 e8             	push   -0x18(%ebp)
8100082f:	ff 75 f0             	push   -0x10(%ebp)
81000832:	e8 b1 15 00 00       	call   81001de8 <memcpy>
81000837:	83 c4 10             	add    $0x10,%esp
8100083a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100083d:	01 45 f0             	add    %eax,-0x10(%ebp)
81000840:	8b 45 10             	mov    0x10(%ebp),%eax
81000843:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000846:	89 45 10             	mov    %eax,0x10(%ebp)
81000849:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100084d:	0f 85 f4 fe ff ff    	jne    81000747 <_fgets_r+0x44>
81000853:	eb 01                	jmp    81000856 <_fgets_r+0x153>
81000855:	90                   	nop
81000856:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000859:	c6 00 00             	movb   $0x0,(%eax)
8100085c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100085f:	c9                   	leave  
81000860:	c3                   	ret    

81000861 <fgets>:
81000861:	55                   	push   %ebp
81000862:	89 e5                	mov    %esp,%ebp
81000864:	83 ec 08             	sub    $0x8,%esp
81000867:	a1 04 54 00 81       	mov    0x81005404,%eax
8100086c:	ff 75 10             	push   0x10(%ebp)
8100086f:	ff 75 0c             	push   0xc(%ebp)
81000872:	ff 75 08             	push   0x8(%ebp)
81000875:	50                   	push   %eax
81000876:	e8 88 fe ff ff       	call   81000703 <_fgets_r>
8100087b:	83 c4 10             	add    $0x10,%esp
8100087e:	c9                   	leave  
8100087f:	c3                   	ret    

81000880 <std>:
81000880:	55                   	push   %ebp
81000881:	89 e5                	mov    %esp,%ebp
81000883:	83 ec 08             	sub    $0x8,%esp
81000886:	8b 45 08             	mov    0x8(%ebp),%eax
81000889:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100088f:	8b 45 08             	mov    0x8(%ebp),%eax
81000892:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000899:	8b 45 08             	mov    0x8(%ebp),%eax
8100089c:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810008a3:	8b 45 0c             	mov    0xc(%ebp),%eax
810008a6:	89 c2                	mov    %eax,%edx
810008a8:	8b 45 08             	mov    0x8(%ebp),%eax
810008ab:	66 89 50 0c          	mov    %dx,0xc(%eax)
810008af:	8b 45 08             	mov    0x8(%ebp),%eax
810008b2:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
810008b9:	8b 45 10             	mov    0x10(%ebp),%eax
810008bc:	89 c2                	mov    %eax,%edx
810008be:	8b 45 08             	mov    0x8(%ebp),%eax
810008c1:	66 89 50 0e          	mov    %dx,0xe(%eax)
810008c5:	8b 45 08             	mov    0x8(%ebp),%eax
810008c8:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
810008cf:	8b 45 08             	mov    0x8(%ebp),%eax
810008d2:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810008d9:	8b 45 08             	mov    0x8(%ebp),%eax
810008dc:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810008e3:	8b 45 08             	mov    0x8(%ebp),%eax
810008e6:	83 c0 5c             	add    $0x5c,%eax
810008e9:	83 ec 04             	sub    $0x4,%esp
810008ec:	6a 08                	push   $0x8
810008ee:	6a 00                	push   $0x0
810008f0:	50                   	push   %eax
810008f1:	e8 3a 15 00 00       	call   81001e30 <memset>
810008f6:	83 c4 10             	add    $0x10,%esp
810008f9:	8b 45 08             	mov    0x8(%ebp),%eax
810008fc:	8b 55 08             	mov    0x8(%ebp),%edx
810008ff:	89 50 1c             	mov    %edx,0x1c(%eax)
81000902:	8b 45 08             	mov    0x8(%ebp),%eax
81000905:	c7 40 20 86 22 00 81 	movl   $0x81002286,0x20(%eax)
8100090c:	8b 45 08             	mov    0x8(%ebp),%eax
8100090f:	c7 40 24 d4 22 00 81 	movl   $0x810022d4,0x24(%eax)
81000916:	8b 45 08             	mov    0x8(%ebp),%eax
81000919:	c7 40 28 2f 23 00 81 	movl   $0x8100232f,0x28(%eax)
81000920:	8b 45 08             	mov    0x8(%ebp),%eax
81000923:	c7 40 2c 79 23 00 81 	movl   $0x81002379,0x2c(%eax)
8100092a:	90                   	nop
8100092b:	c9                   	leave  
8100092c:	c3                   	ret    

8100092d <stdin_init>:
8100092d:	55                   	push   %ebp
8100092e:	89 e5                	mov    %esp,%ebp
81000930:	83 ec 08             	sub    $0x8,%esp
81000933:	83 ec 04             	sub    $0x4,%esp
81000936:	6a 00                	push   $0x0
81000938:	6a 04                	push   $0x4
8100093a:	ff 75 08             	push   0x8(%ebp)
8100093d:	e8 3e ff ff ff       	call   81000880 <std>
81000942:	83 c4 10             	add    $0x10,%esp
81000945:	90                   	nop
81000946:	c9                   	leave  
81000947:	c3                   	ret    

81000948 <stdout_init>:
81000948:	55                   	push   %ebp
81000949:	89 e5                	mov    %esp,%ebp
8100094b:	83 ec 08             	sub    $0x8,%esp
8100094e:	83 ec 04             	sub    $0x4,%esp
81000951:	6a 01                	push   $0x1
81000953:	6a 09                	push   $0x9
81000955:	ff 75 08             	push   0x8(%ebp)
81000958:	e8 23 ff ff ff       	call   81000880 <std>
8100095d:	83 c4 10             	add    $0x10,%esp
81000960:	90                   	nop
81000961:	c9                   	leave  
81000962:	c3                   	ret    

81000963 <stderr_init>:
81000963:	55                   	push   %ebp
81000964:	89 e5                	mov    %esp,%ebp
81000966:	83 ec 08             	sub    $0x8,%esp
81000969:	83 ec 04             	sub    $0x4,%esp
8100096c:	6a 02                	push   $0x2
8100096e:	6a 12                	push   $0x12
81000970:	ff 75 08             	push   0x8(%ebp)
81000973:	e8 08 ff ff ff       	call   81000880 <std>
81000978:	83 c4 10             	add    $0x10,%esp
8100097b:	90                   	nop
8100097c:	c9                   	leave  
8100097d:	c3                   	ret    

8100097e <__sfmoreglue>:
8100097e:	55                   	push   %ebp
8100097f:	89 e5                	mov    %esp,%ebp
81000981:	53                   	push   %ebx
81000982:	83 ec 14             	sub    $0x14,%esp
81000985:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000988:	8d 43 ff             	lea    -0x1(%ebx),%eax
8100098b:	6b c0 68             	imul   $0x68,%eax,%eax
8100098e:	83 c0 74             	add    $0x74,%eax
81000991:	83 ec 08             	sub    $0x8,%esp
81000994:	50                   	push   %eax
81000995:	ff 75 08             	push   0x8(%ebp)
81000998:	e8 91 0b 00 00       	call   8100152e <_malloc_r>
8100099d:	83 c4 10             	add    $0x10,%esp
810009a0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810009a3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810009a7:	75 07                	jne    810009b0 <__sfmoreglue+0x32>
810009a9:	b8 00 00 00 00       	mov    $0x0,%eax
810009ae:	eb 38                	jmp    810009e8 <__sfmoreglue+0x6a>
810009b0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810009b3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810009b9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810009bc:	89 58 04             	mov    %ebx,0x4(%eax)
810009bf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810009c2:	8d 50 0c             	lea    0xc(%eax),%edx
810009c5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810009c8:	89 50 08             	mov    %edx,0x8(%eax)
810009cb:	89 d8                	mov    %ebx,%eax
810009cd:	6b c0 68             	imul   $0x68,%eax,%eax
810009d0:	8b 55 f4             	mov    -0xc(%ebp),%edx
810009d3:	83 c2 0c             	add    $0xc,%edx
810009d6:	83 ec 04             	sub    $0x4,%esp
810009d9:	50                   	push   %eax
810009da:	6a 00                	push   $0x0
810009dc:	52                   	push   %edx
810009dd:	e8 4e 14 00 00       	call   81001e30 <memset>
810009e2:	83 c4 10             	add    $0x10,%esp
810009e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810009e8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810009eb:	c9                   	leave  
810009ec:	c3                   	ret    

810009ed <__sfp>:
810009ed:	55                   	push   %ebp
810009ee:	89 e5                	mov    %esp,%ebp
810009f0:	83 ec 18             	sub    $0x18,%esp
810009f3:	e8 16 02 00 00       	call   81000c0e <__sfp_lock_acquire>
810009f8:	a1 44 4c 00 81       	mov    0x81004c44,%eax
810009fd:	8b 40 38             	mov    0x38(%eax),%eax
81000a00:	85 c0                	test   %eax,%eax
81000a02:	75 11                	jne    81000a15 <__sfp+0x28>
81000a04:	a1 44 4c 00 81       	mov    0x81004c44,%eax
81000a09:	83 ec 0c             	sub    $0xc,%esp
81000a0c:	50                   	push   %eax
81000a0d:	e8 63 01 00 00       	call   81000b75 <__sinit>
81000a12:	83 c4 10             	add    $0x10,%esp
81000a15:	a1 44 4c 00 81       	mov    0x81004c44,%eax
81000a1a:	05 e0 02 00 00       	add    $0x2e0,%eax
81000a1f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000a22:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000a25:	8b 40 08             	mov    0x8(%eax),%eax
81000a28:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000a2b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000a2e:	8b 40 04             	mov    0x4(%eax),%eax
81000a31:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000a34:	eb 10                	jmp    81000a46 <__sfp+0x59>
81000a36:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000a39:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000a3d:	66 85 c0             	test   %ax,%ax
81000a40:	74 58                	je     81000a9a <__sfp+0xad>
81000a42:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
81000a46:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81000a4a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000a4e:	79 e6                	jns    81000a36 <__sfp+0x49>
81000a50:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000a53:	8b 00                	mov    (%eax),%eax
81000a55:	85 c0                	test   %eax,%eax
81000a57:	75 1e                	jne    81000a77 <__sfp+0x8a>
81000a59:	83 ec 08             	sub    $0x8,%esp
81000a5c:	6a 04                	push   $0x4
81000a5e:	ff 75 08             	push   0x8(%ebp)
81000a61:	e8 18 ff ff ff       	call   8100097e <__sfmoreglue>
81000a66:	83 c4 10             	add    $0x10,%esp
81000a69:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000a6c:	89 02                	mov    %eax,(%edx)
81000a6e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000a71:	8b 00                	mov    (%eax),%eax
81000a73:	85 c0                	test   %eax,%eax
81000a75:	74 0a                	je     81000a81 <__sfp+0x94>
81000a77:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000a7a:	8b 00                	mov    (%eax),%eax
81000a7c:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000a7f:	eb a1                	jmp    81000a22 <__sfp+0x35>
81000a81:	90                   	nop
81000a82:	e8 8d 01 00 00       	call   81000c14 <__sfp_lock_release>
81000a87:	8b 45 08             	mov    0x8(%ebp),%eax
81000a8a:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000a90:	b8 00 00 00 00       	mov    $0x0,%eax
81000a95:	e9 9e 00 00 00       	jmp    81000b38 <__sfp+0x14b>
81000a9a:	90                   	nop
81000a9b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000a9e:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
81000aa4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000aa7:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
81000aad:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ab0:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000ab7:	e8 58 01 00 00       	call   81000c14 <__sfp_lock_release>
81000abc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000abf:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000ac5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ac8:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000acf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ad2:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000ad9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000adc:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000ae3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ae6:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000aed:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000af0:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000af7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000afa:	83 c0 5c             	add    $0x5c,%eax
81000afd:	83 ec 04             	sub    $0x4,%esp
81000b00:	6a 08                	push   $0x8
81000b02:	6a 00                	push   $0x0
81000b04:	50                   	push   %eax
81000b05:	e8 26 13 00 00       	call   81001e30 <memset>
81000b0a:	83 c4 10             	add    $0x10,%esp
81000b0d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000b10:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81000b17:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000b1a:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
81000b21:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000b24:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81000b2b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000b2e:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
81000b35:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000b38:	c9                   	leave  
81000b39:	c3                   	ret    

81000b3a <_cleanup_r>:
81000b3a:	55                   	push   %ebp
81000b3b:	89 e5                	mov    %esp,%ebp
81000b3d:	83 ec 18             	sub    $0x18,%esp
81000b40:	c7 45 f4 9f 25 00 81 	movl   $0x8100259f,-0xc(%ebp)
81000b47:	83 ec 08             	sub    $0x8,%esp
81000b4a:	ff 75 f4             	push   -0xc(%ebp)
81000b4d:	ff 75 08             	push   0x8(%ebp)
81000b50:	e8 d1 06 00 00       	call   81001226 <_fwalk_reent>
81000b55:	83 c4 10             	add    $0x10,%esp
81000b58:	90                   	nop
81000b59:	c9                   	leave  
81000b5a:	c3                   	ret    

81000b5b <_cleanup>:
81000b5b:	55                   	push   %ebp
81000b5c:	89 e5                	mov    %esp,%ebp
81000b5e:	83 ec 08             	sub    $0x8,%esp
81000b61:	a1 44 4c 00 81       	mov    0x81004c44,%eax
81000b66:	83 ec 0c             	sub    $0xc,%esp
81000b69:	50                   	push   %eax
81000b6a:	e8 cb ff ff ff       	call   81000b3a <_cleanup_r>
81000b6f:	83 c4 10             	add    $0x10,%esp
81000b72:	90                   	nop
81000b73:	c9                   	leave  
81000b74:	c3                   	ret    

81000b75 <__sinit>:
81000b75:	55                   	push   %ebp
81000b76:	89 e5                	mov    %esp,%ebp
81000b78:	83 ec 08             	sub    $0x8,%esp
81000b7b:	e8 9a 00 00 00       	call   81000c1a <__sinit_lock_acquire>
81000b80:	8b 45 08             	mov    0x8(%ebp),%eax
81000b83:	8b 40 38             	mov    0x38(%eax),%eax
81000b86:	85 c0                	test   %eax,%eax
81000b88:	74 07                	je     81000b91 <__sinit+0x1c>
81000b8a:	e8 91 00 00 00       	call   81000c20 <__sinit_lock_release>
81000b8f:	eb 7b                	jmp    81000c0c <__sinit+0x97>
81000b91:	8b 45 08             	mov    0x8(%ebp),%eax
81000b94:	c7 40 3c 3a 0b 00 81 	movl   $0x81000b3a,0x3c(%eax)
81000b9b:	8b 45 08             	mov    0x8(%ebp),%eax
81000b9e:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
81000ba5:	00 00 00 
81000ba8:	8b 45 08             	mov    0x8(%ebp),%eax
81000bab:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
81000bb2:	00 00 00 
81000bb5:	8b 45 08             	mov    0x8(%ebp),%eax
81000bb8:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
81000bbe:	8b 45 08             	mov    0x8(%ebp),%eax
81000bc1:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81000bc7:	8b 45 08             	mov    0x8(%ebp),%eax
81000bca:	8b 40 04             	mov    0x4(%eax),%eax
81000bcd:	83 ec 0c             	sub    $0xc,%esp
81000bd0:	50                   	push   %eax
81000bd1:	e8 57 fd ff ff       	call   8100092d <stdin_init>
81000bd6:	83 c4 10             	add    $0x10,%esp
81000bd9:	8b 45 08             	mov    0x8(%ebp),%eax
81000bdc:	8b 40 08             	mov    0x8(%eax),%eax
81000bdf:	83 ec 0c             	sub    $0xc,%esp
81000be2:	50                   	push   %eax
81000be3:	e8 60 fd ff ff       	call   81000948 <stdout_init>
81000be8:	83 c4 10             	add    $0x10,%esp
81000beb:	8b 45 08             	mov    0x8(%ebp),%eax
81000bee:	8b 40 0c             	mov    0xc(%eax),%eax
81000bf1:	83 ec 0c             	sub    $0xc,%esp
81000bf4:	50                   	push   %eax
81000bf5:	e8 69 fd ff ff       	call   81000963 <stderr_init>
81000bfa:	83 c4 10             	add    $0x10,%esp
81000bfd:	8b 45 08             	mov    0x8(%ebp),%eax
81000c00:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81000c07:	e8 14 00 00 00       	call   81000c20 <__sinit_lock_release>
81000c0c:	c9                   	leave  
81000c0d:	c3                   	ret    

81000c0e <__sfp_lock_acquire>:
81000c0e:	55                   	push   %ebp
81000c0f:	89 e5                	mov    %esp,%ebp
81000c11:	90                   	nop
81000c12:	5d                   	pop    %ebp
81000c13:	c3                   	ret    

81000c14 <__sfp_lock_release>:
81000c14:	55                   	push   %ebp
81000c15:	89 e5                	mov    %esp,%ebp
81000c17:	90                   	nop
81000c18:	5d                   	pop    %ebp
81000c19:	c3                   	ret    

81000c1a <__sinit_lock_acquire>:
81000c1a:	55                   	push   %ebp
81000c1b:	89 e5                	mov    %esp,%ebp
81000c1d:	90                   	nop
81000c1e:	5d                   	pop    %ebp
81000c1f:	c3                   	ret    

81000c20 <__sinit_lock_release>:
81000c20:	55                   	push   %ebp
81000c21:	89 e5                	mov    %esp,%ebp
81000c23:	90                   	nop
81000c24:	5d                   	pop    %ebp
81000c25:	c3                   	ret    

81000c26 <__fp_lock>:
81000c26:	55                   	push   %ebp
81000c27:	89 e5                	mov    %esp,%ebp
81000c29:	b8 00 00 00 00       	mov    $0x0,%eax
81000c2e:	5d                   	pop    %ebp
81000c2f:	c3                   	ret    

81000c30 <__fp_unlock>:
81000c30:	55                   	push   %ebp
81000c31:	89 e5                	mov    %esp,%ebp
81000c33:	b8 00 00 00 00       	mov    $0x0,%eax
81000c38:	5d                   	pop    %ebp
81000c39:	c3                   	ret    

81000c3a <__fp_lock_all>:
81000c3a:	55                   	push   %ebp
81000c3b:	89 e5                	mov    %esp,%ebp
81000c3d:	83 ec 08             	sub    $0x8,%esp
81000c40:	e8 c9 ff ff ff       	call   81000c0e <__sfp_lock_acquire>
81000c45:	a1 04 54 00 81       	mov    0x81005404,%eax
81000c4a:	83 ec 08             	sub    $0x8,%esp
81000c4d:	68 26 0c 00 81       	push   $0x81000c26
81000c52:	50                   	push   %eax
81000c53:	e8 66 05 00 00       	call   810011be <_fwalk>
81000c58:	83 c4 10             	add    $0x10,%esp
81000c5b:	90                   	nop
81000c5c:	c9                   	leave  
81000c5d:	c3                   	ret    

81000c5e <__fp_unlock_all>:
81000c5e:	55                   	push   %ebp
81000c5f:	89 e5                	mov    %esp,%ebp
81000c61:	83 ec 08             	sub    $0x8,%esp
81000c64:	a1 04 54 00 81       	mov    0x81005404,%eax
81000c69:	83 ec 08             	sub    $0x8,%esp
81000c6c:	68 30 0c 00 81       	push   $0x81000c30
81000c71:	50                   	push   %eax
81000c72:	e8 47 05 00 00       	call   810011be <_fwalk>
81000c77:	83 c4 10             	add    $0x10,%esp
81000c7a:	e8 95 ff ff ff       	call   81000c14 <__sfp_lock_release>
81000c7f:	90                   	nop
81000c80:	c9                   	leave  
81000c81:	c3                   	ret    

81000c82 <_free_r>:
81000c82:	55                   	push   %ebp
81000c83:	89 e5                	mov    %esp,%ebp
81000c85:	53                   	push   %ebx
81000c86:	83 ec 34             	sub    $0x34,%esp
81000c89:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81000c8d:	0f 84 c4 03 00 00    	je     81001057 <_free_r+0x3d5>
81000c93:	83 ec 0c             	sub    $0xc,%esp
81000c96:	ff 75 08             	push   0x8(%ebp)
81000c99:	e8 1a 12 00 00       	call   81001eb8 <__malloc_lock>
81000c9e:	83 c4 10             	add    $0x10,%esp
81000ca1:	8b 45 0c             	mov    0xc(%ebp),%eax
81000ca4:	83 e8 08             	sub    $0x8,%eax
81000ca7:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000caa:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000cad:	8b 40 04             	mov    0x4(%eax),%eax
81000cb0:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000cb3:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000cb6:	83 e0 fe             	and    $0xfffffffe,%eax
81000cb9:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000cbc:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000cbf:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000cc2:	01 d0                	add    %edx,%eax
81000cc4:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000cc7:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000cca:	8b 40 04             	mov    0x4(%eax),%eax
81000ccd:	83 e0 fc             	and    $0xfffffffc,%eax
81000cd0:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000cd3:	b8 20 54 00 81       	mov    $0x81005420,%eax
81000cd8:	8b 40 08             	mov    0x8(%eax),%eax
81000cdb:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81000cde:	0f 85 94 00 00 00    	jne    81000d78 <_free_r+0xf6>
81000ce4:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000ce7:	01 45 f0             	add    %eax,-0x10(%ebp)
81000cea:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000ced:	83 e0 01             	and    $0x1,%eax
81000cf0:	85 c0                	test   %eax,%eax
81000cf2:	75 3a                	jne    81000d2e <_free_r+0xac>
81000cf4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000cf7:	8b 00                	mov    (%eax),%eax
81000cf9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81000cfc:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000cff:	f7 d8                	neg    %eax
81000d01:	01 45 f4             	add    %eax,-0xc(%ebp)
81000d04:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000d07:	01 45 f0             	add    %eax,-0x10(%ebp)
81000d0a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000d0d:	8b 40 0c             	mov    0xc(%eax),%eax
81000d10:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000d13:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000d16:	8b 40 08             	mov    0x8(%eax),%eax
81000d19:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000d1c:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000d1f:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000d22:	89 50 0c             	mov    %edx,0xc(%eax)
81000d25:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000d28:	8b 55 e8             	mov    -0x18(%ebp),%edx
81000d2b:	89 50 08             	mov    %edx,0x8(%eax)
81000d2e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000d31:	83 c8 01             	or     $0x1,%eax
81000d34:	89 c2                	mov    %eax,%edx
81000d36:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000d39:	89 50 04             	mov    %edx,0x4(%eax)
81000d3c:	ba 20 54 00 81       	mov    $0x81005420,%edx
81000d41:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000d44:	89 42 08             	mov    %eax,0x8(%edx)
81000d47:	a1 28 58 00 81       	mov    0x81005828,%eax
81000d4c:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81000d4f:	72 14                	jb     81000d65 <_free_r+0xe3>
81000d51:	a1 e0 5f 00 81       	mov    0x81005fe0,%eax
81000d56:	83 ec 08             	sub    $0x8,%esp
81000d59:	50                   	push   %eax
81000d5a:	ff 75 08             	push   0x8(%ebp)
81000d5d:	e8 fb 02 00 00       	call   8100105d <_malloc_trim_r>
81000d62:	83 c4 10             	add    $0x10,%esp
81000d65:	83 ec 0c             	sub    $0xc,%esp
81000d68:	ff 75 08             	push   0x8(%ebp)
81000d6b:	e8 4e 11 00 00       	call   81001ebe <__malloc_unlock>
81000d70:	83 c4 10             	add    $0x10,%esp
81000d73:	e9 e0 02 00 00       	jmp    81001058 <_free_r+0x3d6>
81000d78:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000d7b:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000d7e:	89 50 04             	mov    %edx,0x4(%eax)
81000d81:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000d88:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000d8b:	83 e0 01             	and    $0x1,%eax
81000d8e:	85 c0                	test   %eax,%eax
81000d90:	75 52                	jne    81000de4 <_free_r+0x162>
81000d92:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000d95:	8b 00                	mov    (%eax),%eax
81000d97:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81000d9a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000d9d:	f7 d8                	neg    %eax
81000d9f:	01 45 f4             	add    %eax,-0xc(%ebp)
81000da2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000da5:	01 45 f0             	add    %eax,-0x10(%ebp)
81000da8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000dab:	8b 40 08             	mov    0x8(%eax),%eax
81000dae:	ba 28 54 00 81       	mov    $0x81005428,%edx
81000db3:	39 d0                	cmp    %edx,%eax
81000db5:	75 09                	jne    81000dc0 <_free_r+0x13e>
81000db7:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81000dbe:	eb 24                	jmp    81000de4 <_free_r+0x162>
81000dc0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000dc3:	8b 40 0c             	mov    0xc(%eax),%eax
81000dc6:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000dc9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000dcc:	8b 40 08             	mov    0x8(%eax),%eax
81000dcf:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000dd2:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000dd5:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000dd8:	89 50 0c             	mov    %edx,0xc(%eax)
81000ddb:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000dde:	8b 55 e8             	mov    -0x18(%ebp),%edx
81000de1:	89 50 08             	mov    %edx,0x8(%eax)
81000de4:	8b 55 dc             	mov    -0x24(%ebp),%edx
81000de7:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000dea:	01 d0                	add    %edx,%eax
81000dec:	8b 40 04             	mov    0x4(%eax),%eax
81000def:	83 e0 01             	and    $0x1,%eax
81000df2:	85 c0                	test   %eax,%eax
81000df4:	75 75                	jne    81000e6b <_free_r+0x1e9>
81000df6:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000df9:	01 45 f0             	add    %eax,-0x10(%ebp)
81000dfc:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000e00:	75 45                	jne    81000e47 <_free_r+0x1c5>
81000e02:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000e05:	8b 40 08             	mov    0x8(%eax),%eax
81000e08:	ba 28 54 00 81       	mov    $0x81005428,%edx
81000e0d:	39 d0                	cmp    %edx,%eax
81000e0f:	75 36                	jne    81000e47 <_free_r+0x1c5>
81000e11:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81000e18:	b8 28 54 00 81       	mov    $0x81005428,%eax
81000e1d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000e20:	89 50 0c             	mov    %edx,0xc(%eax)
81000e23:	ba 28 54 00 81       	mov    $0x81005428,%edx
81000e28:	8b 40 0c             	mov    0xc(%eax),%eax
81000e2b:	89 42 08             	mov    %eax,0x8(%edx)
81000e2e:	ba 28 54 00 81       	mov    $0x81005428,%edx
81000e33:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e36:	89 50 0c             	mov    %edx,0xc(%eax)
81000e39:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e3c:	8b 50 0c             	mov    0xc(%eax),%edx
81000e3f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e42:	89 50 08             	mov    %edx,0x8(%eax)
81000e45:	eb 24                	jmp    81000e6b <_free_r+0x1e9>
81000e47:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000e4a:	8b 40 0c             	mov    0xc(%eax),%eax
81000e4d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000e50:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000e53:	8b 40 08             	mov    0x8(%eax),%eax
81000e56:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000e59:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000e5c:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000e5f:	89 50 0c             	mov    %edx,0xc(%eax)
81000e62:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000e65:	8b 55 e8             	mov    -0x18(%ebp),%edx
81000e68:	89 50 08             	mov    %edx,0x8(%eax)
81000e6b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000e6e:	83 c8 01             	or     $0x1,%eax
81000e71:	89 c2                	mov    %eax,%edx
81000e73:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e76:	89 50 04             	mov    %edx,0x4(%eax)
81000e79:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000e7c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000e7f:	01 c2                	add    %eax,%edx
81000e81:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000e84:	89 02                	mov    %eax,(%edx)
81000e86:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000e8a:	0f 85 b7 01 00 00    	jne    81001047 <_free_r+0x3c5>
81000e90:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81000e97:	77 7f                	ja     81000f18 <_free_r+0x296>
81000e99:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000e9c:	c1 e8 03             	shr    $0x3,%eax
81000e9f:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000ea2:	b8 20 54 00 81       	mov    $0x81005420,%eax
81000ea7:	8b 58 04             	mov    0x4(%eax),%ebx
81000eaa:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000ead:	8d 50 03             	lea    0x3(%eax),%edx
81000eb0:	85 c0                	test   %eax,%eax
81000eb2:	0f 48 c2             	cmovs  %edx,%eax
81000eb5:	c1 f8 02             	sar    $0x2,%eax
81000eb8:	ba 01 00 00 00       	mov    $0x1,%edx
81000ebd:	89 c1                	mov    %eax,%ecx
81000ebf:	d3 e2                	shl    %cl,%edx
81000ec1:	89 d0                	mov    %edx,%eax
81000ec3:	ba 20 54 00 81       	mov    $0x81005420,%edx
81000ec8:	09 d8                	or     %ebx,%eax
81000eca:	89 42 04             	mov    %eax,0x4(%edx)
81000ecd:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000ed0:	83 c0 01             	add    $0x1,%eax
81000ed3:	01 c0                	add    %eax,%eax
81000ed5:	c1 e0 02             	shl    $0x2,%eax
81000ed8:	05 20 54 00 81       	add    $0x81005420,%eax
81000edd:	83 e8 08             	sub    $0x8,%eax
81000ee0:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000ee3:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000ee6:	8b 40 08             	mov    0x8(%eax),%eax
81000ee9:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000eec:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000eef:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000ef2:	89 50 0c             	mov    %edx,0xc(%eax)
81000ef5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ef8:	8b 55 e8             	mov    -0x18(%ebp),%edx
81000efb:	89 50 08             	mov    %edx,0x8(%eax)
81000efe:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000f01:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000f04:	89 50 08             	mov    %edx,0x8(%eax)
81000f07:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000f0a:	8b 50 08             	mov    0x8(%eax),%edx
81000f0d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000f10:	89 50 0c             	mov    %edx,0xc(%eax)
81000f13:	e9 2f 01 00 00       	jmp    81001047 <_free_r+0x3c5>
81000f18:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000f1b:	c1 e8 09             	shr    $0x9,%eax
81000f1e:	85 c0                	test   %eax,%eax
81000f20:	75 08                	jne    81000f2a <_free_r+0x2a8>
81000f22:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000f25:	c1 e8 03             	shr    $0x3,%eax
81000f28:	eb 77                	jmp    81000fa1 <_free_r+0x31f>
81000f2a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000f2d:	c1 e8 09             	shr    $0x9,%eax
81000f30:	83 f8 04             	cmp    $0x4,%eax
81000f33:	77 0b                	ja     81000f40 <_free_r+0x2be>
81000f35:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000f38:	c1 e8 06             	shr    $0x6,%eax
81000f3b:	83 c0 38             	add    $0x38,%eax
81000f3e:	eb 61                	jmp    81000fa1 <_free_r+0x31f>
81000f40:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000f43:	c1 e8 09             	shr    $0x9,%eax
81000f46:	83 f8 14             	cmp    $0x14,%eax
81000f49:	77 0b                	ja     81000f56 <_free_r+0x2d4>
81000f4b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000f4e:	c1 e8 09             	shr    $0x9,%eax
81000f51:	83 c0 5b             	add    $0x5b,%eax
81000f54:	eb 4b                	jmp    81000fa1 <_free_r+0x31f>
81000f56:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000f59:	c1 e8 09             	shr    $0x9,%eax
81000f5c:	83 f8 54             	cmp    $0x54,%eax
81000f5f:	77 0b                	ja     81000f6c <_free_r+0x2ea>
81000f61:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000f64:	c1 e8 0c             	shr    $0xc,%eax
81000f67:	83 c0 6e             	add    $0x6e,%eax
81000f6a:	eb 35                	jmp    81000fa1 <_free_r+0x31f>
81000f6c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000f6f:	c1 e8 09             	shr    $0x9,%eax
81000f72:	3d 54 01 00 00       	cmp    $0x154,%eax
81000f77:	77 0b                	ja     81000f84 <_free_r+0x302>
81000f79:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000f7c:	c1 e8 0f             	shr    $0xf,%eax
81000f7f:	83 c0 77             	add    $0x77,%eax
81000f82:	eb 1d                	jmp    81000fa1 <_free_r+0x31f>
81000f84:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000f87:	c1 e8 09             	shr    $0x9,%eax
81000f8a:	3d 54 05 00 00       	cmp    $0x554,%eax
81000f8f:	77 0b                	ja     81000f9c <_free_r+0x31a>
81000f91:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000f94:	c1 e8 12             	shr    $0x12,%eax
81000f97:	83 c0 7c             	add    $0x7c,%eax
81000f9a:	eb 05                	jmp    81000fa1 <_free_r+0x31f>
81000f9c:	b8 7e 00 00 00       	mov    $0x7e,%eax
81000fa1:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000fa4:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000fa7:	83 c0 01             	add    $0x1,%eax
81000faa:	01 c0                	add    %eax,%eax
81000fac:	c1 e0 02             	shl    $0x2,%eax
81000faf:	05 20 54 00 81       	add    $0x81005420,%eax
81000fb4:	83 e8 08             	sub    $0x8,%eax
81000fb7:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000fba:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000fbd:	8b 40 08             	mov    0x8(%eax),%eax
81000fc0:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000fc3:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000fc6:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81000fc9:	75 36                	jne    81001001 <_free_r+0x37f>
81000fcb:	b8 20 54 00 81       	mov    $0x81005420,%eax
81000fd0:	8b 58 04             	mov    0x4(%eax),%ebx
81000fd3:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000fd6:	8d 50 03             	lea    0x3(%eax),%edx
81000fd9:	85 c0                	test   %eax,%eax
81000fdb:	0f 48 c2             	cmovs  %edx,%eax
81000fde:	c1 f8 02             	sar    $0x2,%eax
81000fe1:	ba 01 00 00 00       	mov    $0x1,%edx
81000fe6:	89 c1                	mov    %eax,%ecx
81000fe8:	d3 e2                	shl    %cl,%edx
81000fea:	89 d0                	mov    %edx,%eax
81000fec:	ba 20 54 00 81       	mov    $0x81005420,%edx
81000ff1:	09 d8                	or     %ebx,%eax
81000ff3:	89 42 04             	mov    %eax,0x4(%edx)
81000ff6:	eb 28                	jmp    81001020 <_free_r+0x39e>
81000ff8:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000ffb:	8b 40 08             	mov    0x8(%eax),%eax
81000ffe:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001001:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001004:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001007:	74 0e                	je     81001017 <_free_r+0x395>
81001009:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100100c:	8b 40 04             	mov    0x4(%eax),%eax
8100100f:	83 e0 fc             	and    $0xfffffffc,%eax
81001012:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001015:	72 e1                	jb     81000ff8 <_free_r+0x376>
81001017:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100101a:	8b 40 0c             	mov    0xc(%eax),%eax
8100101d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001020:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001023:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001026:	89 50 0c             	mov    %edx,0xc(%eax)
81001029:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100102c:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100102f:	89 50 08             	mov    %edx,0x8(%eax)
81001032:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001035:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001038:	89 50 08             	mov    %edx,0x8(%eax)
8100103b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100103e:	8b 50 08             	mov    0x8(%eax),%edx
81001041:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001044:	89 50 0c             	mov    %edx,0xc(%eax)
81001047:	83 ec 0c             	sub    $0xc,%esp
8100104a:	ff 75 08             	push   0x8(%ebp)
8100104d:	e8 6c 0e 00 00       	call   81001ebe <__malloc_unlock>
81001052:	83 c4 10             	add    $0x10,%esp
81001055:	eb 01                	jmp    81001058 <_free_r+0x3d6>
81001057:	90                   	nop
81001058:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100105b:	c9                   	leave  
8100105c:	c3                   	ret    

8100105d <_malloc_trim_r>:
8100105d:	55                   	push   %ebp
8100105e:	89 e5                	mov    %esp,%ebp
81001060:	83 ec 28             	sub    $0x28,%esp
81001063:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
8100106a:	83 ec 0c             	sub    $0xc,%esp
8100106d:	ff 75 08             	push   0x8(%ebp)
81001070:	e8 43 0e 00 00       	call   81001eb8 <__malloc_lock>
81001075:	83 c4 10             	add    $0x10,%esp
81001078:	b8 20 54 00 81       	mov    $0x81005420,%eax
8100107d:	8b 40 08             	mov    0x8(%eax),%eax
81001080:	8b 40 04             	mov    0x4(%eax),%eax
81001083:	83 e0 fc             	and    $0xfffffffc,%eax
81001086:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001089:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100108c:	2b 45 0c             	sub    0xc(%ebp),%eax
8100108f:	89 c2                	mov    %eax,%edx
81001091:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001094:	01 d0                	add    %edx,%eax
81001096:	83 e8 11             	sub    $0x11,%eax
81001099:	ba 00 00 00 00       	mov    $0x0,%edx
8100109e:	f7 75 f4             	divl   -0xc(%ebp)
810010a1:	83 e8 01             	sub    $0x1,%eax
810010a4:	0f af 45 f4          	imul   -0xc(%ebp),%eax
810010a8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810010ab:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010ae:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810010b1:	7d 18                	jge    810010cb <_malloc_trim_r+0x6e>
810010b3:	83 ec 0c             	sub    $0xc,%esp
810010b6:	ff 75 08             	push   0x8(%ebp)
810010b9:	e8 00 0e 00 00       	call   81001ebe <__malloc_unlock>
810010be:	83 c4 10             	add    $0x10,%esp
810010c1:	b8 00 00 00 00       	mov    $0x0,%eax
810010c6:	e9 f1 00 00 00       	jmp    810011bc <_malloc_trim_r+0x15f>
810010cb:	83 ec 08             	sub    $0x8,%esp
810010ce:	6a 00                	push   $0x0
810010d0:	ff 75 08             	push   0x8(%ebp)
810010d3:	e8 6e 11 00 00       	call   81002246 <_sbrk_r>
810010d8:	83 c4 10             	add    $0x10,%esp
810010db:	89 45 e8             	mov    %eax,-0x18(%ebp)
810010de:	b8 20 54 00 81       	mov    $0x81005420,%eax
810010e3:	8b 50 08             	mov    0x8(%eax),%edx
810010e6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010e9:	01 d0                	add    %edx,%eax
810010eb:	39 45 e8             	cmp    %eax,-0x18(%ebp)
810010ee:	74 18                	je     81001108 <_malloc_trim_r+0xab>
810010f0:	83 ec 0c             	sub    $0xc,%esp
810010f3:	ff 75 08             	push   0x8(%ebp)
810010f6:	e8 c3 0d 00 00       	call   81001ebe <__malloc_unlock>
810010fb:	83 c4 10             	add    $0x10,%esp
810010fe:	b8 00 00 00 00       	mov    $0x0,%eax
81001103:	e9 b4 00 00 00       	jmp    810011bc <_malloc_trim_r+0x15f>
81001108:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100110b:	f7 d8                	neg    %eax
8100110d:	83 ec 08             	sub    $0x8,%esp
81001110:	50                   	push   %eax
81001111:	ff 75 08             	push   0x8(%ebp)
81001114:	e8 2d 11 00 00       	call   81002246 <_sbrk_r>
81001119:	83 c4 10             	add    $0x10,%esp
8100111c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100111f:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81001123:	75 61                	jne    81001186 <_malloc_trim_r+0x129>
81001125:	83 ec 08             	sub    $0x8,%esp
81001128:	6a 00                	push   $0x0
8100112a:	ff 75 08             	push   0x8(%ebp)
8100112d:	e8 14 11 00 00       	call   81002246 <_sbrk_r>
81001132:	83 c4 10             	add    $0x10,%esp
81001135:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001138:	b8 20 54 00 81       	mov    $0x81005420,%eax
8100113d:	8b 50 08             	mov    0x8(%eax),%edx
81001140:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001143:	29 d0                	sub    %edx,%eax
81001145:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001148:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
8100114c:	7e 23                	jle    81001171 <_malloc_trim_r+0x114>
8100114e:	8b 15 2c 58 00 81    	mov    0x8100582c,%edx
81001154:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001157:	29 d0                	sub    %edx,%eax
81001159:	a3 00 60 00 81       	mov    %eax,0x81006000
8100115e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001161:	83 c8 01             	or     $0x1,%eax
81001164:	89 c2                	mov    %eax,%edx
81001166:	b8 20 54 00 81       	mov    $0x81005420,%eax
8100116b:	8b 40 08             	mov    0x8(%eax),%eax
8100116e:	89 50 04             	mov    %edx,0x4(%eax)
81001171:	83 ec 0c             	sub    $0xc,%esp
81001174:	ff 75 08             	push   0x8(%ebp)
81001177:	e8 42 0d 00 00       	call   81001ebe <__malloc_unlock>
8100117c:	83 c4 10             	add    $0x10,%esp
8100117f:	b8 00 00 00 00       	mov    $0x0,%eax
81001184:	eb 36                	jmp    810011bc <_malloc_trim_r+0x15f>
81001186:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001189:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100118c:	83 c8 01             	or     $0x1,%eax
8100118f:	89 c2                	mov    %eax,%edx
81001191:	b8 20 54 00 81       	mov    $0x81005420,%eax
81001196:	8b 40 08             	mov    0x8(%eax),%eax
81001199:	89 50 04             	mov    %edx,0x4(%eax)
8100119c:	a1 00 60 00 81       	mov    0x81006000,%eax
810011a1:	2b 45 ec             	sub    -0x14(%ebp),%eax
810011a4:	a3 00 60 00 81       	mov    %eax,0x81006000
810011a9:	83 ec 0c             	sub    $0xc,%esp
810011ac:	ff 75 08             	push   0x8(%ebp)
810011af:	e8 0a 0d 00 00       	call   81001ebe <__malloc_unlock>
810011b4:	83 c4 10             	add    $0x10,%esp
810011b7:	b8 01 00 00 00       	mov    $0x1,%eax
810011bc:	c9                   	leave  
810011bd:	c3                   	ret    

810011be <_fwalk>:
810011be:	55                   	push   %ebp
810011bf:	89 e5                	mov    %esp,%ebp
810011c1:	57                   	push   %edi
810011c2:	56                   	push   %esi
810011c3:	53                   	push   %ebx
810011c4:	83 ec 1c             	sub    $0x1c,%esp
810011c7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810011ce:	8b 45 08             	mov    0x8(%ebp),%eax
810011d1:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
810011d7:	eb 3e                	jmp    81001217 <_fwalk+0x59>
810011d9:	8b 5e 08             	mov    0x8(%esi),%ebx
810011dc:	8b 7e 04             	mov    0x4(%esi),%edi
810011df:	eb 2d                	jmp    8100120e <_fwalk+0x50>
810011e1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810011e5:	66 85 c0             	test   %ax,%ax
810011e8:	74 21                	je     8100120b <_fwalk+0x4d>
810011ea:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810011ee:	66 83 f8 01          	cmp    $0x1,%ax
810011f2:	74 17                	je     8100120b <_fwalk+0x4d>
810011f4:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810011f8:	66 83 f8 ff          	cmp    $0xffff,%ax
810011fc:	74 0d                	je     8100120b <_fwalk+0x4d>
810011fe:	83 ec 0c             	sub    $0xc,%esp
81001201:	53                   	push   %ebx
81001202:	ff 55 0c             	call   *0xc(%ebp)
81001205:	83 c4 10             	add    $0x10,%esp
81001208:	09 45 e4             	or     %eax,-0x1c(%ebp)
8100120b:	83 c3 68             	add    $0x68,%ebx
8100120e:	83 ef 01             	sub    $0x1,%edi
81001211:	85 ff                	test   %edi,%edi
81001213:	79 cc                	jns    810011e1 <_fwalk+0x23>
81001215:	8b 36                	mov    (%esi),%esi
81001217:	85 f6                	test   %esi,%esi
81001219:	75 be                	jne    810011d9 <_fwalk+0x1b>
8100121b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100121e:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001221:	5b                   	pop    %ebx
81001222:	5e                   	pop    %esi
81001223:	5f                   	pop    %edi
81001224:	5d                   	pop    %ebp
81001225:	c3                   	ret    

81001226 <_fwalk_reent>:
81001226:	55                   	push   %ebp
81001227:	89 e5                	mov    %esp,%ebp
81001229:	57                   	push   %edi
8100122a:	56                   	push   %esi
8100122b:	53                   	push   %ebx
8100122c:	83 ec 1c             	sub    $0x1c,%esp
8100122f:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81001236:	8b 45 08             	mov    0x8(%ebp),%eax
81001239:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
8100123f:	eb 41                	jmp    81001282 <_fwalk_reent+0x5c>
81001241:	8b 5e 08             	mov    0x8(%esi),%ebx
81001244:	8b 7e 04             	mov    0x4(%esi),%edi
81001247:	eb 30                	jmp    81001279 <_fwalk_reent+0x53>
81001249:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100124d:	66 85 c0             	test   %ax,%ax
81001250:	74 24                	je     81001276 <_fwalk_reent+0x50>
81001252:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001256:	66 83 f8 01          	cmp    $0x1,%ax
8100125a:	74 1a                	je     81001276 <_fwalk_reent+0x50>
8100125c:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001260:	66 83 f8 ff          	cmp    $0xffff,%ax
81001264:	74 10                	je     81001276 <_fwalk_reent+0x50>
81001266:	83 ec 08             	sub    $0x8,%esp
81001269:	53                   	push   %ebx
8100126a:	ff 75 08             	push   0x8(%ebp)
8100126d:	ff 55 0c             	call   *0xc(%ebp)
81001270:	83 c4 10             	add    $0x10,%esp
81001273:	09 45 e4             	or     %eax,-0x1c(%ebp)
81001276:	83 c3 68             	add    $0x68,%ebx
81001279:	83 ef 01             	sub    $0x1,%edi
8100127c:	85 ff                	test   %edi,%edi
8100127e:	79 c9                	jns    81001249 <_fwalk_reent+0x23>
81001280:	8b 36                	mov    (%esi),%esi
81001282:	85 f6                	test   %esi,%esi
81001284:	75 bb                	jne    81001241 <_fwalk_reent+0x1b>
81001286:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001289:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100128c:	5b                   	pop    %ebx
8100128d:	5e                   	pop    %esi
8100128e:	5f                   	pop    %edi
8100128f:	5d                   	pop    %ebp
81001290:	c3                   	ret    

81001291 <__getreent>:
81001291:	55                   	push   %ebp
81001292:	89 e5                	mov    %esp,%ebp
81001294:	a1 04 54 00 81       	mov    0x81005404,%eax
81001299:	5d                   	pop    %ebp
8100129a:	c3                   	ret    

8100129b <malloc_extend_top>:
8100129b:	55                   	push   %ebp
8100129c:	89 e5                	mov    %esp,%ebp
8100129e:	83 ec 38             	sub    $0x38,%esp
810012a1:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810012a8:	b8 20 54 00 81       	mov    $0x81005420,%eax
810012ad:	8b 40 08             	mov    0x8(%eax),%eax
810012b0:	89 45 e0             	mov    %eax,-0x20(%ebp)
810012b3:	8b 45 e0             	mov    -0x20(%ebp),%eax
810012b6:	8b 40 04             	mov    0x4(%eax),%eax
810012b9:	83 e0 fc             	and    $0xfffffffc,%eax
810012bc:	89 45 dc             	mov    %eax,-0x24(%ebp)
810012bf:	8b 55 e0             	mov    -0x20(%ebp),%edx
810012c2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810012c5:	01 d0                	add    %edx,%eax
810012c7:	89 45 d8             	mov    %eax,-0x28(%ebp)
810012ca:	8b 15 e0 5f 00 81    	mov    0x81005fe0,%edx
810012d0:	8b 45 0c             	mov    0xc(%ebp),%eax
810012d3:	01 d0                	add    %edx,%eax
810012d5:	83 c0 10             	add    $0x10,%eax
810012d8:	89 45 e8             	mov    %eax,-0x18(%ebp)
810012db:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
810012e2:	a1 2c 58 00 81       	mov    0x8100582c,%eax
810012e7:	83 f8 ff             	cmp    $0xffffffff,%eax
810012ea:	74 15                	je     81001301 <malloc_extend_top+0x66>
810012ec:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810012ef:	8b 45 e8             	mov    -0x18(%ebp),%eax
810012f2:	01 d0                	add    %edx,%eax
810012f4:	8d 50 ff             	lea    -0x1(%eax),%edx
810012f7:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810012fa:	f7 d8                	neg    %eax
810012fc:	21 d0                	and    %edx,%eax
810012fe:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001301:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001304:	83 ec 08             	sub    $0x8,%esp
81001307:	50                   	push   %eax
81001308:	ff 75 08             	push   0x8(%ebp)
8100130b:	e8 36 0f 00 00       	call   81002246 <_sbrk_r>
81001310:	83 c4 10             	add    $0x10,%esp
81001313:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001316:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100131a:	0f 84 0b 02 00 00    	je     8100152b <malloc_extend_top+0x290>
81001320:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001323:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81001326:	73 0e                	jae    81001336 <malloc_extend_top+0x9b>
81001328:	b8 20 54 00 81       	mov    $0x81005420,%eax
8100132d:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81001330:	0f 85 f5 01 00 00    	jne    8100152b <malloc_extend_top+0x290>
81001336:	a1 00 60 00 81       	mov    0x81006000,%eax
8100133b:	89 c2                	mov    %eax,%edx
8100133d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001340:	01 d0                	add    %edx,%eax
81001342:	a3 00 60 00 81       	mov    %eax,0x81006000
81001347:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100134a:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100134d:	75 30                	jne    8100137f <malloc_extend_top+0xe4>
8100134f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001352:	8d 50 ff             	lea    -0x1(%eax),%edx
81001355:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001358:	21 d0                	and    %edx,%eax
8100135a:	85 c0                	test   %eax,%eax
8100135c:	75 21                	jne    8100137f <malloc_extend_top+0xe4>
8100135e:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001361:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001364:	01 d0                	add    %edx,%eax
81001366:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001369:	b8 20 54 00 81       	mov    $0x81005420,%eax
8100136e:	8b 40 08             	mov    0x8(%eax),%eax
81001371:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001374:	83 ca 01             	or     $0x1,%edx
81001377:	89 50 04             	mov    %edx,0x4(%eax)
8100137a:	e9 76 01 00 00       	jmp    810014f5 <malloc_extend_top+0x25a>
8100137f:	a1 2c 58 00 81       	mov    0x8100582c,%eax
81001384:	83 f8 ff             	cmp    $0xffffffff,%eax
81001387:	75 0a                	jne    81001393 <malloc_extend_top+0xf8>
81001389:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100138c:	a3 2c 58 00 81       	mov    %eax,0x8100582c
81001391:	eb 13                	jmp    810013a6 <malloc_extend_top+0x10b>
81001393:	8b 15 00 60 00 81    	mov    0x81006000,%edx
81001399:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100139c:	2b 45 d8             	sub    -0x28(%ebp),%eax
8100139f:	01 d0                	add    %edx,%eax
810013a1:	a3 00 60 00 81       	mov    %eax,0x81006000
810013a6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013a9:	83 c0 08             	add    $0x8,%eax
810013ac:	83 e0 07             	and    $0x7,%eax
810013af:	89 45 cc             	mov    %eax,-0x34(%ebp)
810013b2:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810013b6:	74 13                	je     810013cb <malloc_extend_top+0x130>
810013b8:	b8 08 00 00 00       	mov    $0x8,%eax
810013bd:	2b 45 cc             	sub    -0x34(%ebp),%eax
810013c0:	89 45 f0             	mov    %eax,-0x10(%ebp)
810013c3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013c6:	01 45 f4             	add    %eax,-0xc(%ebp)
810013c9:	eb 07                	jmp    810013d2 <malloc_extend_top+0x137>
810013cb:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810013d2:	8b 55 f4             	mov    -0xc(%ebp),%edx
810013d5:	8b 45 e8             	mov    -0x18(%ebp),%eax
810013d8:	01 d0                	add    %edx,%eax
810013da:	89 c2                	mov    %eax,%edx
810013dc:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810013df:	83 e8 01             	sub    $0x1,%eax
810013e2:	21 c2                	and    %eax,%edx
810013e4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810013e7:	29 d0                	sub    %edx,%eax
810013e9:	01 45 f0             	add    %eax,-0x10(%ebp)
810013ec:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810013ef:	83 e8 01             	sub    $0x1,%eax
810013f2:	21 45 f0             	and    %eax,-0x10(%ebp)
810013f5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013f8:	83 ec 08             	sub    $0x8,%esp
810013fb:	50                   	push   %eax
810013fc:	ff 75 08             	push   0x8(%ebp)
810013ff:	e8 42 0e 00 00       	call   81002246 <_sbrk_r>
81001404:	83 c4 10             	add    $0x10,%esp
81001407:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100140a:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
8100140e:	75 28                	jne    81001438 <malloc_extend_top+0x19d>
81001410:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001417:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100141e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001421:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001424:	01 d0                	add    %edx,%eax
81001426:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001429:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
8100142d:	74 09                	je     81001438 <malloc_extend_top+0x19d>
8100142f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001432:	83 e8 08             	sub    $0x8,%eax
81001435:	01 45 ec             	add    %eax,-0x14(%ebp)
81001438:	a1 00 60 00 81       	mov    0x81006000,%eax
8100143d:	89 c2                	mov    %eax,%edx
8100143f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001442:	01 d0                	add    %edx,%eax
81001444:	a3 00 60 00 81       	mov    %eax,0x81006000
81001449:	ba 20 54 00 81       	mov    $0x81005420,%edx
8100144e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001451:	89 42 08             	mov    %eax,0x8(%edx)
81001454:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001457:	2b 45 f4             	sub    -0xc(%ebp),%eax
8100145a:	89 c2                	mov    %eax,%edx
8100145c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100145f:	01 d0                	add    %edx,%eax
81001461:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001464:	b8 20 54 00 81       	mov    $0x81005420,%eax
81001469:	8b 40 08             	mov    0x8(%eax),%eax
8100146c:	8b 55 d0             	mov    -0x30(%ebp),%edx
8100146f:	83 ca 01             	or     $0x1,%edx
81001472:	89 50 04             	mov    %edx,0x4(%eax)
81001475:	b8 20 54 00 81       	mov    $0x81005420,%eax
8100147a:	39 45 e0             	cmp    %eax,-0x20(%ebp)
8100147d:	74 76                	je     810014f5 <malloc_extend_top+0x25a>
8100147f:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81001483:	77 14                	ja     81001499 <malloc_extend_top+0x1fe>
81001485:	b8 20 54 00 81       	mov    $0x81005420,%eax
8100148a:	8b 40 08             	mov    0x8(%eax),%eax
8100148d:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81001494:	e9 93 00 00 00       	jmp    8100152c <malloc_extend_top+0x291>
81001499:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100149c:	83 e8 0c             	sub    $0xc,%eax
8100149f:	83 e0 f8             	and    $0xfffffff8,%eax
810014a2:	89 45 dc             	mov    %eax,-0x24(%ebp)
810014a5:	8b 45 e0             	mov    -0x20(%ebp),%eax
810014a8:	8b 40 04             	mov    0x4(%eax),%eax
810014ab:	83 e0 01             	and    $0x1,%eax
810014ae:	0b 45 dc             	or     -0x24(%ebp),%eax
810014b1:	89 c2                	mov    %eax,%edx
810014b3:	8b 45 e0             	mov    -0x20(%ebp),%eax
810014b6:	89 50 04             	mov    %edx,0x4(%eax)
810014b9:	8b 55 e0             	mov    -0x20(%ebp),%edx
810014bc:	8b 45 dc             	mov    -0x24(%ebp),%eax
810014bf:	01 d0                	add    %edx,%eax
810014c1:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
810014c8:	8b 45 dc             	mov    -0x24(%ebp),%eax
810014cb:	8d 50 04             	lea    0x4(%eax),%edx
810014ce:	8b 45 e0             	mov    -0x20(%ebp),%eax
810014d1:	01 d0                	add    %edx,%eax
810014d3:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
810014da:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
810014de:	76 15                	jbe    810014f5 <malloc_extend_top+0x25a>
810014e0:	8b 45 e0             	mov    -0x20(%ebp),%eax
810014e3:	83 c0 08             	add    $0x8,%eax
810014e6:	83 ec 08             	sub    $0x8,%esp
810014e9:	50                   	push   %eax
810014ea:	ff 75 08             	push   0x8(%ebp)
810014ed:	e8 90 f7 ff ff       	call   81000c82 <_free_r>
810014f2:	83 c4 10             	add    $0x10,%esp
810014f5:	a1 00 60 00 81       	mov    0x81006000,%eax
810014fa:	89 c2                	mov    %eax,%edx
810014fc:	a1 e4 5f 00 81       	mov    0x81005fe4,%eax
81001501:	39 c2                	cmp    %eax,%edx
81001503:	76 0a                	jbe    8100150f <malloc_extend_top+0x274>
81001505:	a1 00 60 00 81       	mov    0x81006000,%eax
8100150a:	a3 e4 5f 00 81       	mov    %eax,0x81005fe4
8100150f:	a1 00 60 00 81       	mov    0x81006000,%eax
81001514:	89 c2                	mov    %eax,%edx
81001516:	a1 e8 5f 00 81       	mov    0x81005fe8,%eax
8100151b:	39 c2                	cmp    %eax,%edx
8100151d:	76 0d                	jbe    8100152c <malloc_extend_top+0x291>
8100151f:	a1 00 60 00 81       	mov    0x81006000,%eax
81001524:	a3 e8 5f 00 81       	mov    %eax,0x81005fe8
81001529:	eb 01                	jmp    8100152c <malloc_extend_top+0x291>
8100152b:	90                   	nop
8100152c:	c9                   	leave  
8100152d:	c3                   	ret    

8100152e <_malloc_r>:
8100152e:	55                   	push   %ebp
8100152f:	89 e5                	mov    %esp,%ebp
81001531:	53                   	push   %ebx
81001532:	83 ec 44             	sub    $0x44,%esp
81001535:	8b 45 0c             	mov    0xc(%ebp),%eax
81001538:	83 c0 0b             	add    $0xb,%eax
8100153b:	83 f8 16             	cmp    $0x16,%eax
8100153e:	76 0b                	jbe    8100154b <_malloc_r+0x1d>
81001540:	8b 45 0c             	mov    0xc(%ebp),%eax
81001543:	83 c0 0b             	add    $0xb,%eax
81001546:	83 e0 f8             	and    $0xfffffff8,%eax
81001549:	eb 05                	jmp    81001550 <_malloc_r+0x22>
8100154b:	b8 10 00 00 00       	mov    $0x10,%eax
81001550:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001553:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001556:	85 c0                	test   %eax,%eax
81001558:	78 08                	js     81001562 <_malloc_r+0x34>
8100155a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100155d:	3b 45 0c             	cmp    0xc(%ebp),%eax
81001560:	73 13                	jae    81001575 <_malloc_r+0x47>
81001562:	8b 45 08             	mov    0x8(%ebp),%eax
81001565:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100156b:	b8 00 00 00 00       	mov    $0x0,%eax
81001570:	e9 d6 07 00 00       	jmp    81001d4b <_malloc_r+0x81d>
81001575:	83 ec 0c             	sub    $0xc,%esp
81001578:	ff 75 08             	push   0x8(%ebp)
8100157b:	e8 38 09 00 00       	call   81001eb8 <__malloc_lock>
81001580:	83 c4 10             	add    $0x10,%esp
81001583:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
8100158a:	0f 87 b0 00 00 00    	ja     81001640 <_malloc_r+0x112>
81001590:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001593:	c1 e8 03             	shr    $0x3,%eax
81001596:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001599:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100159c:	83 c0 01             	add    $0x1,%eax
8100159f:	01 c0                	add    %eax,%eax
810015a1:	c1 e0 02             	shl    $0x2,%eax
810015a4:	05 20 54 00 81       	add    $0x81005420,%eax
810015a9:	83 e8 08             	sub    $0x8,%eax
810015ac:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810015af:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810015b2:	8b 40 0c             	mov    0xc(%eax),%eax
810015b5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810015b8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015bb:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
810015be:	75 0d                	jne    810015cd <_malloc_r+0x9f>
810015c0:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
810015c4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810015c7:	8b 40 0c             	mov    0xc(%eax),%eax
810015ca:	89 45 f4             	mov    %eax,-0xc(%ebp)
810015cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015d0:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
810015d3:	74 62                	je     81001637 <_malloc_r+0x109>
810015d5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015d8:	8b 40 04             	mov    0x4(%eax),%eax
810015db:	83 e0 fc             	and    $0xfffffffc,%eax
810015de:	89 45 cc             	mov    %eax,-0x34(%ebp)
810015e1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015e4:	8b 40 0c             	mov    0xc(%eax),%eax
810015e7:	89 45 d8             	mov    %eax,-0x28(%ebp)
810015ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015ed:	8b 40 08             	mov    0x8(%eax),%eax
810015f0:	89 45 dc             	mov    %eax,-0x24(%ebp)
810015f3:	8b 45 dc             	mov    -0x24(%ebp),%eax
810015f6:	8b 55 d8             	mov    -0x28(%ebp),%edx
810015f9:	89 50 0c             	mov    %edx,0xc(%eax)
810015fc:	8b 45 d8             	mov    -0x28(%ebp),%eax
810015ff:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001602:	89 50 08             	mov    %edx,0x8(%eax)
81001605:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001608:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100160b:	01 d0                	add    %edx,%eax
8100160d:	8b 50 04             	mov    0x4(%eax),%edx
81001610:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001613:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001616:	01 c8                	add    %ecx,%eax
81001618:	83 ca 01             	or     $0x1,%edx
8100161b:	89 50 04             	mov    %edx,0x4(%eax)
8100161e:	83 ec 0c             	sub    $0xc,%esp
81001621:	ff 75 08             	push   0x8(%ebp)
81001624:	e8 95 08 00 00       	call   81001ebe <__malloc_unlock>
81001629:	83 c4 10             	add    $0x10,%esp
8100162c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100162f:	83 c0 08             	add    $0x8,%eax
81001632:	e9 14 07 00 00       	jmp    81001d4b <_malloc_r+0x81d>
81001637:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
8100163b:	e9 46 01 00 00       	jmp    81001786 <_malloc_r+0x258>
81001640:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001643:	c1 e8 09             	shr    $0x9,%eax
81001646:	85 c0                	test   %eax,%eax
81001648:	75 08                	jne    81001652 <_malloc_r+0x124>
8100164a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100164d:	c1 e8 03             	shr    $0x3,%eax
81001650:	eb 77                	jmp    810016c9 <_malloc_r+0x19b>
81001652:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001655:	c1 e8 09             	shr    $0x9,%eax
81001658:	83 f8 04             	cmp    $0x4,%eax
8100165b:	77 0b                	ja     81001668 <_malloc_r+0x13a>
8100165d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001660:	c1 e8 06             	shr    $0x6,%eax
81001663:	83 c0 38             	add    $0x38,%eax
81001666:	eb 61                	jmp    810016c9 <_malloc_r+0x19b>
81001668:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100166b:	c1 e8 09             	shr    $0x9,%eax
8100166e:	83 f8 14             	cmp    $0x14,%eax
81001671:	77 0b                	ja     8100167e <_malloc_r+0x150>
81001673:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001676:	c1 e8 09             	shr    $0x9,%eax
81001679:	83 c0 5b             	add    $0x5b,%eax
8100167c:	eb 4b                	jmp    810016c9 <_malloc_r+0x19b>
8100167e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001681:	c1 e8 09             	shr    $0x9,%eax
81001684:	83 f8 54             	cmp    $0x54,%eax
81001687:	77 0b                	ja     81001694 <_malloc_r+0x166>
81001689:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100168c:	c1 e8 0c             	shr    $0xc,%eax
8100168f:	83 c0 6e             	add    $0x6e,%eax
81001692:	eb 35                	jmp    810016c9 <_malloc_r+0x19b>
81001694:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001697:	c1 e8 09             	shr    $0x9,%eax
8100169a:	3d 54 01 00 00       	cmp    $0x154,%eax
8100169f:	77 0b                	ja     810016ac <_malloc_r+0x17e>
810016a1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810016a4:	c1 e8 0f             	shr    $0xf,%eax
810016a7:	83 c0 77             	add    $0x77,%eax
810016aa:	eb 1d                	jmp    810016c9 <_malloc_r+0x19b>
810016ac:	8b 45 d0             	mov    -0x30(%ebp),%eax
810016af:	c1 e8 09             	shr    $0x9,%eax
810016b2:	3d 54 05 00 00       	cmp    $0x554,%eax
810016b7:	77 0b                	ja     810016c4 <_malloc_r+0x196>
810016b9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810016bc:	c1 e8 12             	shr    $0x12,%eax
810016bf:	83 c0 7c             	add    $0x7c,%eax
810016c2:	eb 05                	jmp    810016c9 <_malloc_r+0x19b>
810016c4:	b8 7e 00 00 00       	mov    $0x7e,%eax
810016c9:	89 45 f0             	mov    %eax,-0x10(%ebp)
810016cc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810016cf:	83 c0 01             	add    $0x1,%eax
810016d2:	01 c0                	add    %eax,%eax
810016d4:	c1 e0 02             	shl    $0x2,%eax
810016d7:	05 20 54 00 81       	add    $0x81005420,%eax
810016dc:	83 e8 08             	sub    $0x8,%eax
810016df:	89 45 ec             	mov    %eax,-0x14(%ebp)
810016e2:	8b 45 ec             	mov    -0x14(%ebp),%eax
810016e5:	8b 40 0c             	mov    0xc(%eax),%eax
810016e8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810016eb:	e9 86 00 00 00       	jmp    81001776 <_malloc_r+0x248>
810016f0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016f3:	8b 40 04             	mov    0x4(%eax),%eax
810016f6:	83 e0 fc             	and    $0xfffffffc,%eax
810016f9:	89 45 cc             	mov    %eax,-0x34(%ebp)
810016fc:	8b 45 cc             	mov    -0x34(%ebp),%eax
810016ff:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001702:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001705:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001709:	7e 06                	jle    81001711 <_malloc_r+0x1e3>
8100170b:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
8100170f:	eb 71                	jmp    81001782 <_malloc_r+0x254>
81001711:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001715:	78 56                	js     8100176d <_malloc_r+0x23f>
81001717:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100171a:	8b 40 0c             	mov    0xc(%eax),%eax
8100171d:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001720:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001723:	8b 40 08             	mov    0x8(%eax),%eax
81001726:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001729:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100172c:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100172f:	89 50 0c             	mov    %edx,0xc(%eax)
81001732:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001735:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001738:	89 50 08             	mov    %edx,0x8(%eax)
8100173b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100173e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001741:	01 d0                	add    %edx,%eax
81001743:	8b 50 04             	mov    0x4(%eax),%edx
81001746:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001749:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100174c:	01 c8                	add    %ecx,%eax
8100174e:	83 ca 01             	or     $0x1,%edx
81001751:	89 50 04             	mov    %edx,0x4(%eax)
81001754:	83 ec 0c             	sub    $0xc,%esp
81001757:	ff 75 08             	push   0x8(%ebp)
8100175a:	e8 5f 07 00 00       	call   81001ebe <__malloc_unlock>
8100175f:	83 c4 10             	add    $0x10,%esp
81001762:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001765:	83 c0 08             	add    $0x8,%eax
81001768:	e9 de 05 00 00       	jmp    81001d4b <_malloc_r+0x81d>
8100176d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001770:	8b 40 0c             	mov    0xc(%eax),%eax
81001773:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001776:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001779:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100177c:	0f 85 6e ff ff ff    	jne    810016f0 <_malloc_r+0x1c2>
81001782:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001786:	b8 28 54 00 81       	mov    $0x81005428,%eax
8100178b:	8b 40 08             	mov    0x8(%eax),%eax
8100178e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001791:	b8 28 54 00 81       	mov    $0x81005428,%eax
81001796:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81001799:	0f 84 9c 02 00 00    	je     81001a3b <_malloc_r+0x50d>
8100179f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017a2:	8b 40 04             	mov    0x4(%eax),%eax
810017a5:	83 e0 fc             	and    $0xfffffffc,%eax
810017a8:	89 45 cc             	mov    %eax,-0x34(%ebp)
810017ab:	8b 45 cc             	mov    -0x34(%ebp),%eax
810017ae:	2b 45 d0             	sub    -0x30(%ebp),%eax
810017b1:	89 45 e8             	mov    %eax,-0x18(%ebp)
810017b4:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810017b8:	7e 7a                	jle    81001834 <_malloc_r+0x306>
810017ba:	8b 55 f4             	mov    -0xc(%ebp),%edx
810017bd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810017c0:	01 d0                	add    %edx,%eax
810017c2:	89 45 c4             	mov    %eax,-0x3c(%ebp)
810017c5:	8b 45 d0             	mov    -0x30(%ebp),%eax
810017c8:	83 c8 01             	or     $0x1,%eax
810017cb:	89 c2                	mov    %eax,%edx
810017cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017d0:	89 50 04             	mov    %edx,0x4(%eax)
810017d3:	b8 28 54 00 81       	mov    $0x81005428,%eax
810017d8:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810017db:	89 50 0c             	mov    %edx,0xc(%eax)
810017de:	ba 28 54 00 81       	mov    $0x81005428,%edx
810017e3:	8b 40 0c             	mov    0xc(%eax),%eax
810017e6:	89 42 08             	mov    %eax,0x8(%edx)
810017e9:	ba 28 54 00 81       	mov    $0x81005428,%edx
810017ee:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017f1:	89 50 0c             	mov    %edx,0xc(%eax)
810017f4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017f7:	8b 50 0c             	mov    0xc(%eax),%edx
810017fa:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017fd:	89 50 08             	mov    %edx,0x8(%eax)
81001800:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001803:	83 c8 01             	or     $0x1,%eax
81001806:	89 c2                	mov    %eax,%edx
81001808:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100180b:	89 50 04             	mov    %edx,0x4(%eax)
8100180e:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001811:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001814:	01 c2                	add    %eax,%edx
81001816:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001819:	89 02                	mov    %eax,(%edx)
8100181b:	83 ec 0c             	sub    $0xc,%esp
8100181e:	ff 75 08             	push   0x8(%ebp)
81001821:	e8 98 06 00 00       	call   81001ebe <__malloc_unlock>
81001826:	83 c4 10             	add    $0x10,%esp
81001829:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100182c:	83 c0 08             	add    $0x8,%eax
8100182f:	e9 17 05 00 00       	jmp    81001d4b <_malloc_r+0x81d>
81001834:	b8 28 54 00 81       	mov    $0x81005428,%eax
81001839:	ba 28 54 00 81       	mov    $0x81005428,%edx
8100183e:	89 50 0c             	mov    %edx,0xc(%eax)
81001841:	ba 28 54 00 81       	mov    $0x81005428,%edx
81001846:	8b 40 0c             	mov    0xc(%eax),%eax
81001849:	89 42 08             	mov    %eax,0x8(%edx)
8100184c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001850:	78 32                	js     81001884 <_malloc_r+0x356>
81001852:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001855:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001858:	01 d0                	add    %edx,%eax
8100185a:	8b 50 04             	mov    0x4(%eax),%edx
8100185d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001860:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001863:	01 c8                	add    %ecx,%eax
81001865:	83 ca 01             	or     $0x1,%edx
81001868:	89 50 04             	mov    %edx,0x4(%eax)
8100186b:	83 ec 0c             	sub    $0xc,%esp
8100186e:	ff 75 08             	push   0x8(%ebp)
81001871:	e8 48 06 00 00       	call   81001ebe <__malloc_unlock>
81001876:	83 c4 10             	add    $0x10,%esp
81001879:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100187c:	83 c0 08             	add    $0x8,%eax
8100187f:	e9 c7 04 00 00       	jmp    81001d4b <_malloc_r+0x81d>
81001884:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
8100188b:	77 7f                	ja     8100190c <_malloc_r+0x3de>
8100188d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001890:	c1 e8 03             	shr    $0x3,%eax
81001893:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001896:	b8 20 54 00 81       	mov    $0x81005420,%eax
8100189b:	8b 58 04             	mov    0x4(%eax),%ebx
8100189e:	8b 45 c8             	mov    -0x38(%ebp),%eax
810018a1:	8d 50 03             	lea    0x3(%eax),%edx
810018a4:	85 c0                	test   %eax,%eax
810018a6:	0f 48 c2             	cmovs  %edx,%eax
810018a9:	c1 f8 02             	sar    $0x2,%eax
810018ac:	ba 01 00 00 00       	mov    $0x1,%edx
810018b1:	89 c1                	mov    %eax,%ecx
810018b3:	d3 e2                	shl    %cl,%edx
810018b5:	89 d0                	mov    %edx,%eax
810018b7:	ba 20 54 00 81       	mov    $0x81005420,%edx
810018bc:	09 d8                	or     %ebx,%eax
810018be:	89 42 04             	mov    %eax,0x4(%edx)
810018c1:	8b 45 c8             	mov    -0x38(%ebp),%eax
810018c4:	83 c0 01             	add    $0x1,%eax
810018c7:	01 c0                	add    %eax,%eax
810018c9:	c1 e0 02             	shl    $0x2,%eax
810018cc:	05 20 54 00 81       	add    $0x81005420,%eax
810018d1:	83 e8 08             	sub    $0x8,%eax
810018d4:	89 45 d8             	mov    %eax,-0x28(%ebp)
810018d7:	8b 45 d8             	mov    -0x28(%ebp),%eax
810018da:	8b 40 08             	mov    0x8(%eax),%eax
810018dd:	89 45 dc             	mov    %eax,-0x24(%ebp)
810018e0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018e3:	8b 55 d8             	mov    -0x28(%ebp),%edx
810018e6:	89 50 0c             	mov    %edx,0xc(%eax)
810018e9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018ec:	8b 55 dc             	mov    -0x24(%ebp),%edx
810018ef:	89 50 08             	mov    %edx,0x8(%eax)
810018f2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810018f5:	8b 55 f4             	mov    -0xc(%ebp),%edx
810018f8:	89 50 08             	mov    %edx,0x8(%eax)
810018fb:	8b 45 d8             	mov    -0x28(%ebp),%eax
810018fe:	8b 50 08             	mov    0x8(%eax),%edx
81001901:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001904:	89 50 0c             	mov    %edx,0xc(%eax)
81001907:	e9 2f 01 00 00       	jmp    81001a3b <_malloc_r+0x50d>
8100190c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100190f:	c1 e8 09             	shr    $0x9,%eax
81001912:	85 c0                	test   %eax,%eax
81001914:	75 08                	jne    8100191e <_malloc_r+0x3f0>
81001916:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001919:	c1 e8 03             	shr    $0x3,%eax
8100191c:	eb 77                	jmp    81001995 <_malloc_r+0x467>
8100191e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001921:	c1 e8 09             	shr    $0x9,%eax
81001924:	83 f8 04             	cmp    $0x4,%eax
81001927:	77 0b                	ja     81001934 <_malloc_r+0x406>
81001929:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100192c:	c1 e8 06             	shr    $0x6,%eax
8100192f:	83 c0 38             	add    $0x38,%eax
81001932:	eb 61                	jmp    81001995 <_malloc_r+0x467>
81001934:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001937:	c1 e8 09             	shr    $0x9,%eax
8100193a:	83 f8 14             	cmp    $0x14,%eax
8100193d:	77 0b                	ja     8100194a <_malloc_r+0x41c>
8100193f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001942:	c1 e8 09             	shr    $0x9,%eax
81001945:	83 c0 5b             	add    $0x5b,%eax
81001948:	eb 4b                	jmp    81001995 <_malloc_r+0x467>
8100194a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100194d:	c1 e8 09             	shr    $0x9,%eax
81001950:	83 f8 54             	cmp    $0x54,%eax
81001953:	77 0b                	ja     81001960 <_malloc_r+0x432>
81001955:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001958:	c1 e8 0c             	shr    $0xc,%eax
8100195b:	83 c0 6e             	add    $0x6e,%eax
8100195e:	eb 35                	jmp    81001995 <_malloc_r+0x467>
81001960:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001963:	c1 e8 09             	shr    $0x9,%eax
81001966:	3d 54 01 00 00       	cmp    $0x154,%eax
8100196b:	77 0b                	ja     81001978 <_malloc_r+0x44a>
8100196d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001970:	c1 e8 0f             	shr    $0xf,%eax
81001973:	83 c0 77             	add    $0x77,%eax
81001976:	eb 1d                	jmp    81001995 <_malloc_r+0x467>
81001978:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100197b:	c1 e8 09             	shr    $0x9,%eax
8100197e:	3d 54 05 00 00       	cmp    $0x554,%eax
81001983:	77 0b                	ja     81001990 <_malloc_r+0x462>
81001985:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001988:	c1 e8 12             	shr    $0x12,%eax
8100198b:	83 c0 7c             	add    $0x7c,%eax
8100198e:	eb 05                	jmp    81001995 <_malloc_r+0x467>
81001990:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001995:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001998:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100199b:	83 c0 01             	add    $0x1,%eax
8100199e:	01 c0                	add    %eax,%eax
810019a0:	c1 e0 02             	shl    $0x2,%eax
810019a3:	05 20 54 00 81       	add    $0x81005420,%eax
810019a8:	83 e8 08             	sub    $0x8,%eax
810019ab:	89 45 d8             	mov    %eax,-0x28(%ebp)
810019ae:	8b 45 d8             	mov    -0x28(%ebp),%eax
810019b1:	8b 40 08             	mov    0x8(%eax),%eax
810019b4:	89 45 dc             	mov    %eax,-0x24(%ebp)
810019b7:	8b 45 dc             	mov    -0x24(%ebp),%eax
810019ba:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810019bd:	75 36                	jne    810019f5 <_malloc_r+0x4c7>
810019bf:	b8 20 54 00 81       	mov    $0x81005420,%eax
810019c4:	8b 58 04             	mov    0x4(%eax),%ebx
810019c7:	8b 45 c8             	mov    -0x38(%ebp),%eax
810019ca:	8d 50 03             	lea    0x3(%eax),%edx
810019cd:	85 c0                	test   %eax,%eax
810019cf:	0f 48 c2             	cmovs  %edx,%eax
810019d2:	c1 f8 02             	sar    $0x2,%eax
810019d5:	ba 01 00 00 00       	mov    $0x1,%edx
810019da:	89 c1                	mov    %eax,%ecx
810019dc:	d3 e2                	shl    %cl,%edx
810019de:	89 d0                	mov    %edx,%eax
810019e0:	ba 20 54 00 81       	mov    $0x81005420,%edx
810019e5:	09 d8                	or     %ebx,%eax
810019e7:	89 42 04             	mov    %eax,0x4(%edx)
810019ea:	eb 28                	jmp    81001a14 <_malloc_r+0x4e6>
810019ec:	8b 45 dc             	mov    -0x24(%ebp),%eax
810019ef:	8b 40 08             	mov    0x8(%eax),%eax
810019f2:	89 45 dc             	mov    %eax,-0x24(%ebp)
810019f5:	8b 45 dc             	mov    -0x24(%ebp),%eax
810019f8:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810019fb:	74 0e                	je     81001a0b <_malloc_r+0x4dd>
810019fd:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001a00:	8b 40 04             	mov    0x4(%eax),%eax
81001a03:	83 e0 fc             	and    $0xfffffffc,%eax
81001a06:	39 45 cc             	cmp    %eax,-0x34(%ebp)
81001a09:	72 e1                	jb     810019ec <_malloc_r+0x4be>
81001a0b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001a0e:	8b 40 0c             	mov    0xc(%eax),%eax
81001a11:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001a14:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a17:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001a1a:	89 50 0c             	mov    %edx,0xc(%eax)
81001a1d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a20:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001a23:	89 50 08             	mov    %edx,0x8(%eax)
81001a26:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001a29:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001a2c:	89 50 08             	mov    %edx,0x8(%eax)
81001a2f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001a32:	8b 50 08             	mov    0x8(%eax),%edx
81001a35:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001a38:	89 50 0c             	mov    %edx,0xc(%eax)
81001a3b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a3e:	8d 50 03             	lea    0x3(%eax),%edx
81001a41:	85 c0                	test   %eax,%eax
81001a43:	0f 48 c2             	cmovs  %edx,%eax
81001a46:	c1 f8 02             	sar    $0x2,%eax
81001a49:	ba 01 00 00 00       	mov    $0x1,%edx
81001a4e:	89 c1                	mov    %eax,%ecx
81001a50:	d3 e2                	shl    %cl,%edx
81001a52:	89 d0                	mov    %edx,%eax
81001a54:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001a57:	b8 20 54 00 81       	mov    $0x81005420,%eax
81001a5c:	8b 40 04             	mov    0x4(%eax),%eax
81001a5f:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81001a62:	0f 87 13 02 00 00    	ja     81001c7b <_malloc_r+0x74d>
81001a68:	b8 20 54 00 81       	mov    $0x81005420,%eax
81001a6d:	8b 40 04             	mov    0x4(%eax),%eax
81001a70:	23 45 e4             	and    -0x1c(%ebp),%eax
81001a73:	85 c0                	test   %eax,%eax
81001a75:	75 27                	jne    81001a9e <_malloc_r+0x570>
81001a77:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a7a:	83 e0 fc             	and    $0xfffffffc,%eax
81001a7d:	83 c0 04             	add    $0x4,%eax
81001a80:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001a83:	d1 65 e4             	shll   -0x1c(%ebp)
81001a86:	eb 07                	jmp    81001a8f <_malloc_r+0x561>
81001a88:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81001a8c:	d1 65 e4             	shll   -0x1c(%ebp)
81001a8f:	b8 20 54 00 81       	mov    $0x81005420,%eax
81001a94:	8b 40 04             	mov    0x4(%eax),%eax
81001a97:	23 45 e4             	and    -0x1c(%ebp),%eax
81001a9a:	85 c0                	test   %eax,%eax
81001a9c:	74 ea                	je     81001a88 <_malloc_r+0x55a>
81001a9e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001aa1:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001aa4:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001aa7:	83 c0 01             	add    $0x1,%eax
81001aaa:	01 c0                	add    %eax,%eax
81001aac:	c1 e0 02             	shl    $0x2,%eax
81001aaf:	05 20 54 00 81       	add    $0x81005420,%eax
81001ab4:	83 e8 08             	sub    $0x8,%eax
81001ab7:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001aba:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001abd:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001ac0:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001ac3:	8b 40 0c             	mov    0xc(%eax),%eax
81001ac6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001ac9:	e9 22 01 00 00       	jmp    81001bf0 <_malloc_r+0x6c2>
81001ace:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ad1:	8b 40 04             	mov    0x4(%eax),%eax
81001ad4:	83 e0 fc             	and    $0xfffffffc,%eax
81001ad7:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001ada:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001add:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001ae0:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001ae3:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001ae7:	0f 8e 9e 00 00 00    	jle    81001b8b <_malloc_r+0x65d>
81001aed:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001af0:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001af3:	01 d0                	add    %edx,%eax
81001af5:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001af8:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001afb:	83 c8 01             	or     $0x1,%eax
81001afe:	89 c2                	mov    %eax,%edx
81001b00:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b03:	89 50 04             	mov    %edx,0x4(%eax)
81001b06:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b09:	8b 40 0c             	mov    0xc(%eax),%eax
81001b0c:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001b0f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b12:	8b 40 08             	mov    0x8(%eax),%eax
81001b15:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001b18:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001b1b:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001b1e:	89 50 0c             	mov    %edx,0xc(%eax)
81001b21:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001b24:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001b27:	89 50 08             	mov    %edx,0x8(%eax)
81001b2a:	b8 28 54 00 81       	mov    $0x81005428,%eax
81001b2f:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81001b32:	89 50 0c             	mov    %edx,0xc(%eax)
81001b35:	ba 28 54 00 81       	mov    $0x81005428,%edx
81001b3a:	8b 40 0c             	mov    0xc(%eax),%eax
81001b3d:	89 42 08             	mov    %eax,0x8(%edx)
81001b40:	ba 28 54 00 81       	mov    $0x81005428,%edx
81001b45:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001b48:	89 50 0c             	mov    %edx,0xc(%eax)
81001b4b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001b4e:	8b 50 0c             	mov    0xc(%eax),%edx
81001b51:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001b54:	89 50 08             	mov    %edx,0x8(%eax)
81001b57:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b5a:	83 c8 01             	or     $0x1,%eax
81001b5d:	89 c2                	mov    %eax,%edx
81001b5f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001b62:	89 50 04             	mov    %edx,0x4(%eax)
81001b65:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001b68:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001b6b:	01 c2                	add    %eax,%edx
81001b6d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b70:	89 02                	mov    %eax,(%edx)
81001b72:	83 ec 0c             	sub    $0xc,%esp
81001b75:	ff 75 08             	push   0x8(%ebp)
81001b78:	e8 41 03 00 00       	call   81001ebe <__malloc_unlock>
81001b7d:	83 c4 10             	add    $0x10,%esp
81001b80:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b83:	83 c0 08             	add    $0x8,%eax
81001b86:	e9 c0 01 00 00       	jmp    81001d4b <_malloc_r+0x81d>
81001b8b:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001b8f:	78 56                	js     81001be7 <_malloc_r+0x6b9>
81001b91:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001b94:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001b97:	01 d0                	add    %edx,%eax
81001b99:	8b 50 04             	mov    0x4(%eax),%edx
81001b9c:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001b9f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001ba2:	01 c8                	add    %ecx,%eax
81001ba4:	83 ca 01             	or     $0x1,%edx
81001ba7:	89 50 04             	mov    %edx,0x4(%eax)
81001baa:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001bad:	8b 40 0c             	mov    0xc(%eax),%eax
81001bb0:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001bb3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001bb6:	8b 40 08             	mov    0x8(%eax),%eax
81001bb9:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001bbc:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001bbf:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001bc2:	89 50 0c             	mov    %edx,0xc(%eax)
81001bc5:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001bc8:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001bcb:	89 50 08             	mov    %edx,0x8(%eax)
81001bce:	83 ec 0c             	sub    $0xc,%esp
81001bd1:	ff 75 08             	push   0x8(%ebp)
81001bd4:	e8 e5 02 00 00       	call   81001ebe <__malloc_unlock>
81001bd9:	83 c4 10             	add    $0x10,%esp
81001bdc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001bdf:	83 c0 08             	add    $0x8,%eax
81001be2:	e9 64 01 00 00       	jmp    81001d4b <_malloc_r+0x81d>
81001be7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001bea:	8b 40 0c             	mov    0xc(%eax),%eax
81001bed:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001bf0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001bf3:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001bf6:	0f 85 d2 fe ff ff    	jne    81001ace <_malloc_r+0x5a0>
81001bfc:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81001c00:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001c04:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001c07:	83 e0 03             	and    $0x3,%eax
81001c0a:	85 c0                	test   %eax,%eax
81001c0c:	0f 85 ae fe ff ff    	jne    81001ac0 <_malloc_r+0x592>
81001c12:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001c15:	83 e0 03             	and    $0x3,%eax
81001c18:	85 c0                	test   %eax,%eax
81001c1a:	75 19                	jne    81001c35 <_malloc_r+0x707>
81001c1c:	b8 20 54 00 81       	mov    $0x81005420,%eax
81001c21:	8b 48 04             	mov    0x4(%eax),%ecx
81001c24:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001c27:	f7 d0                	not    %eax
81001c29:	ba 20 54 00 81       	mov    $0x81005420,%edx
81001c2e:	21 c8                	and    %ecx,%eax
81001c30:	89 42 04             	mov    %eax,0x4(%edx)
81001c33:	eb 13                	jmp    81001c48 <_malloc_r+0x71a>
81001c35:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
81001c39:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
81001c3d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001c40:	8b 40 08             	mov    0x8(%eax),%eax
81001c43:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
81001c46:	74 ca                	je     81001c12 <_malloc_r+0x6e4>
81001c48:	d1 65 e4             	shll   -0x1c(%ebp)
81001c4b:	b8 20 54 00 81       	mov    $0x81005420,%eax
81001c50:	8b 40 04             	mov    0x4(%eax),%eax
81001c53:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81001c56:	77 23                	ja     81001c7b <_malloc_r+0x74d>
81001c58:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001c5c:	74 1d                	je     81001c7b <_malloc_r+0x74d>
81001c5e:	eb 07                	jmp    81001c67 <_malloc_r+0x739>
81001c60:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81001c64:	d1 65 e4             	shll   -0x1c(%ebp)
81001c67:	b8 20 54 00 81       	mov    $0x81005420,%eax
81001c6c:	8b 40 04             	mov    0x4(%eax),%eax
81001c6f:	23 45 e4             	and    -0x1c(%ebp),%eax
81001c72:	85 c0                	test   %eax,%eax
81001c74:	74 ea                	je     81001c60 <_malloc_r+0x732>
81001c76:	e9 23 fe ff ff       	jmp    81001a9e <_malloc_r+0x570>
81001c7b:	b8 20 54 00 81       	mov    $0x81005420,%eax
81001c80:	8b 40 08             	mov    0x8(%eax),%eax
81001c83:	8b 40 04             	mov    0x4(%eax),%eax
81001c86:	83 e0 fc             	and    $0xfffffffc,%eax
81001c89:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001c8c:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001c8f:	b8 20 54 00 81       	mov    $0x81005420,%eax
81001c94:	8b 40 08             	mov    0x8(%eax),%eax
81001c97:	8b 40 04             	mov    0x4(%eax),%eax
81001c9a:	83 e0 fc             	and    $0xfffffffc,%eax
81001c9d:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81001ca0:	77 06                	ja     81001ca8 <_malloc_r+0x77a>
81001ca2:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001ca6:	7f 53                	jg     81001cfb <_malloc_r+0x7cd>
81001ca8:	83 ec 08             	sub    $0x8,%esp
81001cab:	ff 75 d0             	push   -0x30(%ebp)
81001cae:	ff 75 08             	push   0x8(%ebp)
81001cb1:	e8 e5 f5 ff ff       	call   8100129b <malloc_extend_top>
81001cb6:	83 c4 10             	add    $0x10,%esp
81001cb9:	b8 20 54 00 81       	mov    $0x81005420,%eax
81001cbe:	8b 40 08             	mov    0x8(%eax),%eax
81001cc1:	8b 40 04             	mov    0x4(%eax),%eax
81001cc4:	83 e0 fc             	and    $0xfffffffc,%eax
81001cc7:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001cca:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001ccd:	b8 20 54 00 81       	mov    $0x81005420,%eax
81001cd2:	8b 40 08             	mov    0x8(%eax),%eax
81001cd5:	8b 40 04             	mov    0x4(%eax),%eax
81001cd8:	83 e0 fc             	and    $0xfffffffc,%eax
81001cdb:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81001cde:	77 06                	ja     81001ce6 <_malloc_r+0x7b8>
81001ce0:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001ce4:	7f 15                	jg     81001cfb <_malloc_r+0x7cd>
81001ce6:	83 ec 0c             	sub    $0xc,%esp
81001ce9:	ff 75 08             	push   0x8(%ebp)
81001cec:	e8 cd 01 00 00       	call   81001ebe <__malloc_unlock>
81001cf1:	83 c4 10             	add    $0x10,%esp
81001cf4:	b8 00 00 00 00       	mov    $0x0,%eax
81001cf9:	eb 50                	jmp    81001d4b <_malloc_r+0x81d>
81001cfb:	b8 20 54 00 81       	mov    $0x81005420,%eax
81001d00:	8b 40 08             	mov    0x8(%eax),%eax
81001d03:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001d06:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001d09:	83 c8 01             	or     $0x1,%eax
81001d0c:	89 c2                	mov    %eax,%edx
81001d0e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d11:	89 50 04             	mov    %edx,0x4(%eax)
81001d14:	ba 20 54 00 81       	mov    $0x81005420,%edx
81001d19:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001d1c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001d1f:	01 c8                	add    %ecx,%eax
81001d21:	89 42 08             	mov    %eax,0x8(%edx)
81001d24:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001d27:	83 c8 01             	or     $0x1,%eax
81001d2a:	89 c2                	mov    %eax,%edx
81001d2c:	b8 20 54 00 81       	mov    $0x81005420,%eax
81001d31:	8b 40 08             	mov    0x8(%eax),%eax
81001d34:	89 50 04             	mov    %edx,0x4(%eax)
81001d37:	83 ec 0c             	sub    $0xc,%esp
81001d3a:	ff 75 08             	push   0x8(%ebp)
81001d3d:	e8 7c 01 00 00       	call   81001ebe <__malloc_unlock>
81001d42:	83 c4 10             	add    $0x10,%esp
81001d45:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d48:	83 c0 08             	add    $0x8,%eax
81001d4b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001d4e:	c9                   	leave  
81001d4f:	c3                   	ret    

81001d50 <memchr>:
81001d50:	55                   	push   %ebp
81001d51:	89 e5                	mov    %esp,%ebp
81001d53:	57                   	push   %edi
81001d54:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001d58:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001d5b:	8b 7d 08             	mov    0x8(%ebp),%edi
81001d5e:	31 d2                	xor    %edx,%edx
81001d60:	85 c9                	test   %ecx,%ecx
81001d62:	74 79                	je     81001ddd <L20>
81001d64:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001d6a:	74 28                	je     81001d94 <L5>
81001d6c:	3a 07                	cmp    (%edi),%al
81001d6e:	74 6a                	je     81001dda <L15>
81001d70:	47                   	inc    %edi
81001d71:	49                   	dec    %ecx
81001d72:	74 69                	je     81001ddd <L20>
81001d74:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001d7a:	74 18                	je     81001d94 <L5>
81001d7c:	3a 07                	cmp    (%edi),%al
81001d7e:	74 5a                	je     81001dda <L15>
81001d80:	47                   	inc    %edi
81001d81:	49                   	dec    %ecx
81001d82:	74 59                	je     81001ddd <L20>
81001d84:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001d8a:	74 08                	je     81001d94 <L5>
81001d8c:	3a 07                	cmp    (%edi),%al
81001d8e:	74 4a                	je     81001dda <L15>
81001d90:	47                   	inc    %edi
81001d91:	49                   	dec    %ecx
81001d92:	74 49                	je     81001ddd <L20>

81001d94 <L5>:
81001d94:	88 c4                	mov    %al,%ah
81001d96:	89 c2                	mov    %eax,%edx
81001d98:	c1 e2 10             	shl    $0x10,%edx
81001d9b:	09 d0                	or     %edx,%eax
81001d9d:	53                   	push   %ebx
81001d9e:	66 90                	xchg   %ax,%ax

81001da0 <L8>:
81001da0:	83 e9 04             	sub    $0x4,%ecx
81001da3:	72 1c                	jb     81001dc1 <L9>
81001da5:	8b 17                	mov    (%edi),%edx
81001da7:	83 c7 04             	add    $0x4,%edi
81001daa:	31 c2                	xor    %eax,%edx
81001dac:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81001db2:	f7 d2                	not    %edx
81001db4:	21 d3                	and    %edx,%ebx
81001db6:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
81001dbc:	74 e2                	je     81001da0 <L8>
81001dbe:	83 ef 04             	sub    $0x4,%edi

81001dc1 <L9>:
81001dc1:	5b                   	pop    %ebx
81001dc2:	31 d2                	xor    %edx,%edx
81001dc4:	83 c1 04             	add    $0x4,%ecx
81001dc7:	74 14                	je     81001ddd <L20>
81001dc9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81001dd0 <L10>:
81001dd0:	3a 07                	cmp    (%edi),%al
81001dd2:	74 06                	je     81001dda <L15>
81001dd4:	47                   	inc    %edi
81001dd5:	49                   	dec    %ecx
81001dd6:	75 f8                	jne    81001dd0 <L10>
81001dd8:	31 ff                	xor    %edi,%edi

81001dda <L15>:
81001dda:	4a                   	dec    %edx
81001ddb:	21 fa                	and    %edi,%edx

81001ddd <L20>:
81001ddd:	89 d0                	mov    %edx,%eax
81001ddf:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001de2:	5f                   	pop    %edi
81001de3:	c9                   	leave  
81001de4:	c3                   	ret    
81001de5:	66 90                	xchg   %ax,%ax
81001de7:	90                   	nop

81001de8 <memcpy>:
81001de8:	55                   	push   %ebp
81001de9:	89 e5                	mov    %esp,%ebp
81001deb:	56                   	push   %esi
81001dec:	57                   	push   %edi
81001ded:	53                   	push   %ebx
81001dee:	8b 7d 08             	mov    0x8(%ebp),%edi
81001df1:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001df4:	8b 75 0c             	mov    0xc(%ebp),%esi
81001df7:	fc                   	cld    
81001df8:	83 f9 08             	cmp    $0x8,%ecx
81001dfb:	76 26                	jbe    81001e23 <memcpy+0x3b>
81001dfd:	89 fa                	mov    %edi,%edx
81001dff:	89 cb                	mov    %ecx,%ebx
81001e01:	83 e2 03             	and    $0x3,%edx
81001e04:	74 10                	je     81001e16 <memcpy+0x2e>
81001e06:	b9 04 00 00 00       	mov    $0x4,%ecx
81001e0b:	29 d1                	sub    %edx,%ecx
81001e0d:	83 e1 03             	and    $0x3,%ecx
81001e10:	29 cb                	sub    %ecx,%ebx
81001e12:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001e14:	89 d9                	mov    %ebx,%ecx
81001e16:	c1 e9 02             	shr    $0x2,%ecx
81001e19:	8d 76 00             	lea    0x0(%esi),%esi
81001e1c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001e1e:	89 d9                	mov    %ebx,%ecx
81001e20:	83 e1 03             	and    $0x3,%ecx
81001e23:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001e25:	8b 45 08             	mov    0x8(%ebp),%eax
81001e28:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001e2b:	5b                   	pop    %ebx
81001e2c:	5f                   	pop    %edi
81001e2d:	5e                   	pop    %esi
81001e2e:	c9                   	leave  
81001e2f:	c3                   	ret    

81001e30 <memset>:
81001e30:	55                   	push   %ebp
81001e31:	89 e5                	mov    %esp,%ebp
81001e33:	57                   	push   %edi
81001e34:	8b 7d 08             	mov    0x8(%ebp),%edi
81001e37:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001e3b:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001e3e:	fc                   	cld    
81001e3f:	83 f9 10             	cmp    $0x10,%ecx
81001e42:	76 69                	jbe    81001ead <memset+0x7d>
81001e44:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001e4a:	74 4c                	je     81001e98 <memset+0x68>
81001e4c:	88 07                	mov    %al,(%edi)
81001e4e:	47                   	inc    %edi
81001e4f:	49                   	dec    %ecx
81001e50:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001e56:	74 40                	je     81001e98 <memset+0x68>
81001e58:	88 07                	mov    %al,(%edi)
81001e5a:	47                   	inc    %edi
81001e5b:	49                   	dec    %ecx
81001e5c:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001e62:	74 34                	je     81001e98 <memset+0x68>
81001e64:	88 07                	mov    %al,(%edi)
81001e66:	47                   	inc    %edi
81001e67:	49                   	dec    %ecx
81001e68:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001e6e:	74 28                	je     81001e98 <memset+0x68>
81001e70:	88 07                	mov    %al,(%edi)
81001e72:	47                   	inc    %edi
81001e73:	49                   	dec    %ecx
81001e74:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001e7a:	74 1c                	je     81001e98 <memset+0x68>
81001e7c:	88 07                	mov    %al,(%edi)
81001e7e:	47                   	inc    %edi
81001e7f:	49                   	dec    %ecx
81001e80:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001e86:	74 10                	je     81001e98 <memset+0x68>
81001e88:	88 07                	mov    %al,(%edi)
81001e8a:	47                   	inc    %edi
81001e8b:	49                   	dec    %ecx
81001e8c:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001e92:	74 04                	je     81001e98 <memset+0x68>
81001e94:	88 07                	mov    %al,(%edi)
81001e96:	47                   	inc    %edi
81001e97:	49                   	dec    %ecx
81001e98:	88 c4                	mov    %al,%ah
81001e9a:	89 c2                	mov    %eax,%edx
81001e9c:	c1 e2 10             	shl    $0x10,%edx
81001e9f:	09 d0                	or     %edx,%eax
81001ea1:	89 ca                	mov    %ecx,%edx
81001ea3:	c1 e9 02             	shr    $0x2,%ecx
81001ea6:	83 e2 03             	and    $0x3,%edx
81001ea9:	f3 ab                	rep stos %eax,%es:(%edi)
81001eab:	89 d1                	mov    %edx,%ecx
81001ead:	f3 aa                	rep stos %al,%es:(%edi)
81001eaf:	8b 45 08             	mov    0x8(%ebp),%eax
81001eb2:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001eb5:	5f                   	pop    %edi
81001eb6:	c9                   	leave  
81001eb7:	c3                   	ret    

81001eb8 <__malloc_lock>:
81001eb8:	55                   	push   %ebp
81001eb9:	89 e5                	mov    %esp,%ebp
81001ebb:	90                   	nop
81001ebc:	5d                   	pop    %ebp
81001ebd:	c3                   	ret    

81001ebe <__malloc_unlock>:
81001ebe:	55                   	push   %ebp
81001ebf:	89 e5                	mov    %esp,%ebp
81001ec1:	90                   	nop
81001ec2:	5d                   	pop    %ebp
81001ec3:	c3                   	ret    

81001ec4 <_iprintf_r>:
81001ec4:	55                   	push   %ebp
81001ec5:	89 e5                	mov    %esp,%ebp
81001ec7:	83 ec 18             	sub    $0x18,%esp
81001eca:	8d 45 10             	lea    0x10(%ebp),%eax
81001ecd:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001ed0:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001ed3:	8b 45 08             	mov    0x8(%ebp),%eax
81001ed6:	8b 40 08             	mov    0x8(%eax),%eax
81001ed9:	52                   	push   %edx
81001eda:	ff 75 0c             	push   0xc(%ebp)
81001edd:	50                   	push   %eax
81001ede:	ff 75 08             	push   0x8(%ebp)
81001ee1:	e8 e6 10 00 00       	call   81002fcc <_vfiprintf_r>
81001ee6:	83 c4 10             	add    $0x10,%esp
81001ee9:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001eec:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001eef:	c9                   	leave  
81001ef0:	c3                   	ret    

81001ef1 <iprintf>:
81001ef1:	55                   	push   %ebp
81001ef2:	89 e5                	mov    %esp,%ebp
81001ef4:	83 ec 18             	sub    $0x18,%esp
81001ef7:	a1 04 54 00 81       	mov    0x81005404,%eax
81001efc:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001eff:	8d 45 0c             	lea    0xc(%ebp),%eax
81001f02:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001f05:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001f08:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f0b:	8b 40 08             	mov    0x8(%eax),%eax
81001f0e:	52                   	push   %edx
81001f0f:	ff 75 08             	push   0x8(%ebp)
81001f12:	50                   	push   %eax
81001f13:	ff 75 f4             	push   -0xc(%ebp)
81001f16:	e8 b1 10 00 00       	call   81002fcc <_vfiprintf_r>
81001f1b:	83 c4 10             	add    $0x10,%esp
81001f1e:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001f21:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f24:	c9                   	leave  
81001f25:	c3                   	ret    

81001f26 <_puts_r>:
81001f26:	55                   	push   %ebp
81001f27:	89 e5                	mov    %esp,%ebp
81001f29:	83 ec 38             	sub    $0x38,%esp
81001f2c:	83 ec 0c             	sub    $0xc,%esp
81001f2f:	ff 75 0c             	push   0xc(%ebp)
81001f32:	e8 69 05 00 00       	call   810024a0 <strlen>
81001f37:	83 c4 10             	add    $0x10,%esp
81001f3a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001f3d:	8b 45 0c             	mov    0xc(%ebp),%eax
81001f40:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001f43:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f46:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001f49:	c7 45 d4 48 4c 00 81 	movl   $0x81004c48,-0x2c(%ebp)
81001f50:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81001f57:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f5a:	83 c0 01             	add    $0x1,%eax
81001f5d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001f60:	8d 45 cc             	lea    -0x34(%ebp),%eax
81001f63:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001f66:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
81001f6d:	8b 45 08             	mov    0x8(%ebp),%eax
81001f70:	8b 40 08             	mov    0x8(%eax),%eax
81001f73:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001f76:	8b 45 08             	mov    0x8(%ebp),%eax
81001f79:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001f7c:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81001f80:	74 18                	je     81001f9a <_puts_r+0x74>
81001f82:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001f85:	8b 40 38             	mov    0x38(%eax),%eax
81001f88:	85 c0                	test   %eax,%eax
81001f8a:	75 0e                	jne    81001f9a <_puts_r+0x74>
81001f8c:	83 ec 0c             	sub    $0xc,%esp
81001f8f:	ff 75 ec             	push   -0x14(%ebp)
81001f92:	e8 de eb ff ff       	call   81000b75 <__sinit>
81001f97:	83 c4 10             	add    $0x10,%esp
81001f9a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f9d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001fa1:	98                   	cwtl   
81001fa2:	25 00 20 00 00       	and    $0x2000,%eax
81001fa7:	85 c0                	test   %eax,%eax
81001fa9:	75 24                	jne    81001fcf <_puts_r+0xa9>
81001fab:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fae:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001fb2:	80 cc 20             	or     $0x20,%ah
81001fb5:	89 c2                	mov    %eax,%edx
81001fb7:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fba:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001fbe:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fc1:	8b 40 64             	mov    0x64(%eax),%eax
81001fc4:	80 e4 df             	and    $0xdf,%ah
81001fc7:	89 c2                	mov    %eax,%edx
81001fc9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fcc:	89 50 64             	mov    %edx,0x64(%eax)
81001fcf:	83 ec 04             	sub    $0x4,%esp
81001fd2:	8d 45 dc             	lea    -0x24(%ebp),%eax
81001fd5:	50                   	push   %eax
81001fd6:	ff 75 f0             	push   -0x10(%ebp)
81001fd9:	ff 75 08             	push   0x8(%ebp)
81001fdc:	e8 e2 06 00 00       	call   810026c3 <__sfvwrite_r>
81001fe1:	83 c4 10             	add    $0x10,%esp
81001fe4:	85 c0                	test   %eax,%eax
81001fe6:	74 07                	je     81001fef <_puts_r+0xc9>
81001fe8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001fed:	eb 05                	jmp    81001ff4 <_puts_r+0xce>
81001fef:	b8 0a 00 00 00       	mov    $0xa,%eax
81001ff4:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001ff7:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001ffa:	c9                   	leave  
81001ffb:	c3                   	ret    

81001ffc <puts>:
81001ffc:	55                   	push   %ebp
81001ffd:	89 e5                	mov    %esp,%ebp
81001fff:	83 ec 08             	sub    $0x8,%esp
81002002:	a1 04 54 00 81       	mov    0x81005404,%eax
81002007:	83 ec 08             	sub    $0x8,%esp
8100200a:	ff 75 08             	push   0x8(%ebp)
8100200d:	50                   	push   %eax
8100200e:	e8 13 ff ff ff       	call   81001f26 <_puts_r>
81002013:	83 c4 10             	add    $0x10,%esp
81002016:	c9                   	leave  
81002017:	c3                   	ret    

81002018 <lflush>:
81002018:	55                   	push   %ebp
81002019:	89 e5                	mov    %esp,%ebp
8100201b:	83 ec 08             	sub    $0x8,%esp
8100201e:	8b 45 08             	mov    0x8(%ebp),%eax
81002021:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002025:	98                   	cwtl   
81002026:	83 e0 09             	and    $0x9,%eax
81002029:	83 f8 09             	cmp    $0x9,%eax
8100202c:	75 10                	jne    8100203e <lflush+0x26>
8100202e:	83 ec 0c             	sub    $0xc,%esp
81002031:	ff 75 08             	push   0x8(%ebp)
81002034:	e8 91 e6 ff ff       	call   810006ca <fflush>
81002039:	83 c4 10             	add    $0x10,%esp
8100203c:	eb 05                	jmp    81002043 <lflush+0x2b>
8100203e:	b8 00 00 00 00       	mov    $0x0,%eax
81002043:	c9                   	leave  
81002044:	c3                   	ret    

81002045 <__srefill_r>:
81002045:	55                   	push   %ebp
81002046:	89 e5                	mov    %esp,%ebp
81002048:	56                   	push   %esi
81002049:	53                   	push   %ebx
8100204a:	83 ec 10             	sub    $0x10,%esp
8100204d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002050:	8b 45 08             	mov    0x8(%ebp),%eax
81002053:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002056:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100205a:	74 18                	je     81002074 <__srefill_r+0x2f>
8100205c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100205f:	8b 40 38             	mov    0x38(%eax),%eax
81002062:	85 c0                	test   %eax,%eax
81002064:	75 0e                	jne    81002074 <__srefill_r+0x2f>
81002066:	83 ec 0c             	sub    $0xc,%esp
81002069:	ff 75 f4             	push   -0xc(%ebp)
8100206c:	e8 04 eb ff ff       	call   81000b75 <__sinit>
81002071:	83 c4 10             	add    $0x10,%esp
81002074:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002078:	98                   	cwtl   
81002079:	25 00 20 00 00       	and    $0x2000,%eax
8100207e:	85 c0                	test   %eax,%eax
81002080:	75 14                	jne    81002096 <__srefill_r+0x51>
81002082:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002086:	80 cc 20             	or     $0x20,%ah
81002089:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100208d:	8b 43 64             	mov    0x64(%ebx),%eax
81002090:	80 e4 df             	and    $0xdf,%ah
81002093:	89 43 64             	mov    %eax,0x64(%ebx)
81002096:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100209d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810020a1:	98                   	cwtl   
810020a2:	83 e0 20             	and    $0x20,%eax
810020a5:	85 c0                	test   %eax,%eax
810020a7:	74 0a                	je     810020b3 <__srefill_r+0x6e>
810020a9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810020ae:	e9 8c 01 00 00       	jmp    8100223f <__srefill_r+0x1fa>
810020b3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810020b7:	98                   	cwtl   
810020b8:	83 e0 04             	and    $0x4,%eax
810020bb:	85 c0                	test   %eax,%eax
810020bd:	75 79                	jne    81002138 <__srefill_r+0xf3>
810020bf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810020c3:	98                   	cwtl   
810020c4:	83 e0 10             	and    $0x10,%eax
810020c7:	85 c0                	test   %eax,%eax
810020c9:	75 1e                	jne    810020e9 <__srefill_r+0xa4>
810020cb:	8b 45 08             	mov    0x8(%ebp),%eax
810020ce:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
810020d4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810020d8:	83 c8 40             	or     $0x40,%eax
810020db:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810020df:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810020e4:	e9 56 01 00 00       	jmp    8100223f <__srefill_r+0x1fa>
810020e9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810020ed:	98                   	cwtl   
810020ee:	83 e0 08             	and    $0x8,%eax
810020f1:	85 c0                	test   %eax,%eax
810020f3:	74 36                	je     8100212b <__srefill_r+0xe6>
810020f5:	83 ec 08             	sub    $0x8,%esp
810020f8:	53                   	push   %ebx
810020f9:	ff 75 08             	push   0x8(%ebp)
810020fc:	e8 71 e5 ff ff       	call   81000672 <_fflush_r>
81002101:	83 c4 10             	add    $0x10,%esp
81002104:	85 c0                	test   %eax,%eax
81002106:	74 0a                	je     81002112 <__srefill_r+0xcd>
81002108:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100210d:	e9 2d 01 00 00       	jmp    8100223f <__srefill_r+0x1fa>
81002112:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002116:	83 e0 f7             	and    $0xfffffff7,%eax
81002119:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100211d:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81002124:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
8100212b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100212f:	83 c8 04             	or     $0x4,%eax
81002132:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002136:	eb 46                	jmp    8100217e <__srefill_r+0x139>
81002138:	8b 43 30             	mov    0x30(%ebx),%eax
8100213b:	85 c0                	test   %eax,%eax
8100213d:	74 3f                	je     8100217e <__srefill_r+0x139>
8100213f:	8b 53 30             	mov    0x30(%ebx),%edx
81002142:	8d 43 40             	lea    0x40(%ebx),%eax
81002145:	39 c2                	cmp    %eax,%edx
81002147:	74 12                	je     8100215b <__srefill_r+0x116>
81002149:	8b 43 30             	mov    0x30(%ebx),%eax
8100214c:	83 ec 08             	sub    $0x8,%esp
8100214f:	50                   	push   %eax
81002150:	ff 75 08             	push   0x8(%ebp)
81002153:	e8 2a eb ff ff       	call   81000c82 <_free_r>
81002158:	83 c4 10             	add    $0x10,%esp
8100215b:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002162:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002165:	89 43 04             	mov    %eax,0x4(%ebx)
81002168:	8b 43 04             	mov    0x4(%ebx),%eax
8100216b:	85 c0                	test   %eax,%eax
8100216d:	74 0f                	je     8100217e <__srefill_r+0x139>
8100216f:	8b 43 38             	mov    0x38(%ebx),%eax
81002172:	89 03                	mov    %eax,(%ebx)
81002174:	b8 00 00 00 00       	mov    $0x0,%eax
81002179:	e9 c1 00 00 00       	jmp    8100223f <__srefill_r+0x1fa>
8100217e:	8b 43 10             	mov    0x10(%ebx),%eax
81002181:	85 c0                	test   %eax,%eax
81002183:	75 0f                	jne    81002194 <__srefill_r+0x14f>
81002185:	83 ec 08             	sub    $0x8,%esp
81002188:	53                   	push   %ebx
81002189:	ff 75 08             	push   0x8(%ebp)
8100218c:	e8 16 0a 00 00       	call   81002ba7 <__smakebuf_r>
81002191:	83 c4 10             	add    $0x10,%esp
81002194:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002198:	98                   	cwtl   
81002199:	83 e0 03             	and    $0x3,%eax
8100219c:	85 c0                	test   %eax,%eax
8100219e:	74 48                	je     810021e8 <__srefill_r+0x1a3>
810021a0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810021a4:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
810021a8:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
810021ae:	a1 44 4c 00 81       	mov    0x81004c44,%eax
810021b3:	83 ec 08             	sub    $0x8,%esp
810021b6:	68 18 20 00 81       	push   $0x81002018
810021bb:	50                   	push   %eax
810021bc:	e8 fd ef ff ff       	call   810011be <_fwalk>
810021c1:	83 c4 10             	add    $0x10,%esp
810021c4:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
810021c8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810021cc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810021d0:	98                   	cwtl   
810021d1:	83 e0 09             	and    $0x9,%eax
810021d4:	83 f8 09             	cmp    $0x9,%eax
810021d7:	75 0f                	jne    810021e8 <__srefill_r+0x1a3>
810021d9:	83 ec 08             	sub    $0x8,%esp
810021dc:	53                   	push   %ebx
810021dd:	ff 75 08             	push   0x8(%ebp)
810021e0:	e8 67 e2 ff ff       	call   8100044c <__sflush_r>
810021e5:	83 c4 10             	add    $0x10,%esp
810021e8:	8b 43 10             	mov    0x10(%ebx),%eax
810021eb:	89 03                	mov    %eax,(%ebx)
810021ed:	8b 43 20             	mov    0x20(%ebx),%eax
810021f0:	8b 73 14             	mov    0x14(%ebx),%esi
810021f3:	8b 0b                	mov    (%ebx),%ecx
810021f5:	8b 53 1c             	mov    0x1c(%ebx),%edx
810021f8:	56                   	push   %esi
810021f9:	51                   	push   %ecx
810021fa:	52                   	push   %edx
810021fb:	ff 75 08             	push   0x8(%ebp)
810021fe:	ff d0                	call   *%eax
81002200:	83 c4 10             	add    $0x10,%esp
81002203:	89 43 04             	mov    %eax,0x4(%ebx)
81002206:	8b 43 04             	mov    0x4(%ebx),%eax
81002209:	85 c0                	test   %eax,%eax
8100220b:	7f 2d                	jg     8100223a <__srefill_r+0x1f5>
8100220d:	8b 43 04             	mov    0x4(%ebx),%eax
81002210:	85 c0                	test   %eax,%eax
81002212:	75 0d                	jne    81002221 <__srefill_r+0x1dc>
81002214:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002218:	83 c8 20             	or     $0x20,%eax
8100221b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100221f:	eb 12                	jmp    81002233 <__srefill_r+0x1ee>
81002221:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002228:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100222c:	83 c8 40             	or     $0x40,%eax
8100222f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002233:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002238:	eb 05                	jmp    8100223f <__srefill_r+0x1fa>
8100223a:	b8 00 00 00 00       	mov    $0x0,%eax
8100223f:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002242:	5b                   	pop    %ebx
81002243:	5e                   	pop    %esi
81002244:	5d                   	pop    %ebp
81002245:	c3                   	ret    

81002246 <_sbrk_r>:
81002246:	55                   	push   %ebp
81002247:	89 e5                	mov    %esp,%ebp
81002249:	83 ec 18             	sub    $0x18,%esp
8100224c:	c7 05 2c 60 00 81 00 	movl   $0x0,0x8100602c
81002253:	00 00 00 
81002256:	83 ec 0c             	sub    $0xc,%esp
81002259:	ff 75 0c             	push   0xc(%ebp)
8100225c:	e8 a9 e1 ff ff       	call   8100040a <sbrk>
81002261:	83 c4 10             	add    $0x10,%esp
81002264:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002267:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100226b:	75 14                	jne    81002281 <_sbrk_r+0x3b>
8100226d:	a1 2c 60 00 81       	mov    0x8100602c,%eax
81002272:	85 c0                	test   %eax,%eax
81002274:	74 0b                	je     81002281 <_sbrk_r+0x3b>
81002276:	8b 15 2c 60 00 81    	mov    0x8100602c,%edx
8100227c:	8b 45 08             	mov    0x8(%ebp),%eax
8100227f:	89 10                	mov    %edx,(%eax)
81002281:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002284:	c9                   	leave  
81002285:	c3                   	ret    

81002286 <__sread>:
81002286:	55                   	push   %ebp
81002287:	89 e5                	mov    %esp,%ebp
81002289:	56                   	push   %esi
8100228a:	53                   	push   %ebx
8100228b:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100228e:	8b 55 14             	mov    0x14(%ebp),%edx
81002291:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002295:	98                   	cwtl   
81002296:	52                   	push   %edx
81002297:	ff 75 10             	push   0x10(%ebp)
8100229a:	50                   	push   %eax
8100229b:	ff 75 08             	push   0x8(%ebp)
8100229e:	e8 69 16 00 00       	call   8100390c <_read_r>
810022a3:	83 c4 10             	add    $0x10,%esp
810022a6:	89 c6                	mov    %eax,%esi
810022a8:	85 f6                	test   %esi,%esi
810022aa:	78 0a                	js     810022b6 <__sread+0x30>
810022ac:	8b 43 50             	mov    0x50(%ebx),%eax
810022af:	01 f0                	add    %esi,%eax
810022b1:	89 43 50             	mov    %eax,0x50(%ebx)
810022b4:	eb 0b                	jmp    810022c1 <__sread+0x3b>
810022b6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810022ba:	80 e4 ef             	and    $0xef,%ah
810022bd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810022c1:	89 f0                	mov    %esi,%eax
810022c3:	8d 65 f8             	lea    -0x8(%ebp),%esp
810022c6:	5b                   	pop    %ebx
810022c7:	5e                   	pop    %esi
810022c8:	5d                   	pop    %ebp
810022c9:	c3                   	ret    

810022ca <__seofread>:
810022ca:	55                   	push   %ebp
810022cb:	89 e5                	mov    %esp,%ebp
810022cd:	b8 00 00 00 00       	mov    $0x0,%eax
810022d2:	5d                   	pop    %ebp
810022d3:	c3                   	ret    

810022d4 <__swrite>:
810022d4:	55                   	push   %ebp
810022d5:	89 e5                	mov    %esp,%ebp
810022d7:	53                   	push   %ebx
810022d8:	83 ec 14             	sub    $0x14,%esp
810022db:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810022de:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810022e2:	98                   	cwtl   
810022e3:	25 00 01 00 00       	and    $0x100,%eax
810022e8:	85 c0                	test   %eax,%eax
810022ea:	74 15                	je     81002301 <__swrite+0x2d>
810022ec:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810022f0:	98                   	cwtl   
810022f1:	6a 02                	push   $0x2
810022f3:	6a 00                	push   $0x0
810022f5:	50                   	push   %eax
810022f6:	ff 75 08             	push   0x8(%ebp)
810022f9:	e8 63 08 00 00       	call   81002b61 <_lseek_r>
810022fe:	83 c4 10             	add    $0x10,%esp
81002301:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002305:	80 e4 ef             	and    $0xef,%ah
81002308:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100230c:	8b 55 14             	mov    0x14(%ebp),%edx
8100230f:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002313:	98                   	cwtl   
81002314:	52                   	push   %edx
81002315:	ff 75 10             	push   0x10(%ebp)
81002318:	50                   	push   %eax
81002319:	ff 75 08             	push   0x8(%ebp)
8100231c:	e8 f8 01 00 00       	call   81002519 <_write_r>
81002321:	83 c4 10             	add    $0x10,%esp
81002324:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002327:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100232a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100232d:	c9                   	leave  
8100232e:	c3                   	ret    

8100232f <__sseek>:
8100232f:	55                   	push   %ebp
81002330:	89 e5                	mov    %esp,%ebp
81002332:	56                   	push   %esi
81002333:	53                   	push   %ebx
81002334:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002337:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100233b:	98                   	cwtl   
8100233c:	ff 75 14             	push   0x14(%ebp)
8100233f:	ff 75 10             	push   0x10(%ebp)
81002342:	50                   	push   %eax
81002343:	ff 75 08             	push   0x8(%ebp)
81002346:	e8 16 08 00 00       	call   81002b61 <_lseek_r>
8100234b:	83 c4 10             	add    $0x10,%esp
8100234e:	89 c6                	mov    %eax,%esi
81002350:	83 fe ff             	cmp    $0xffffffff,%esi
81002353:	75 0d                	jne    81002362 <__sseek+0x33>
81002355:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002359:	80 e4 ef             	and    $0xef,%ah
8100235c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002360:	eb 0e                	jmp    81002370 <__sseek+0x41>
81002362:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002366:	80 cc 10             	or     $0x10,%ah
81002369:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100236d:	89 73 50             	mov    %esi,0x50(%ebx)
81002370:	89 f0                	mov    %esi,%eax
81002372:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002375:	5b                   	pop    %ebx
81002376:	5e                   	pop    %esi
81002377:	5d                   	pop    %ebp
81002378:	c3                   	ret    

81002379 <__sclose>:
81002379:	55                   	push   %ebp
8100237a:	89 e5                	mov    %esp,%ebp
8100237c:	83 ec 18             	sub    $0x18,%esp
8100237f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002382:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002385:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002388:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100238c:	98                   	cwtl   
8100238d:	83 ec 08             	sub    $0x8,%esp
81002390:	50                   	push   %eax
81002391:	ff 75 08             	push   0x8(%ebp)
81002394:	e8 c6 01 00 00       	call   8100255f <_close_r>
81002399:	83 c4 10             	add    $0x10,%esp
8100239c:	c9                   	leave  
8100239d:	c3                   	ret    
8100239e:	66 90                	xchg   %ax,%ax

810023a0 <strchr>:
810023a0:	55                   	push   %ebp
810023a1:	89 e5                	mov    %esp,%ebp
810023a3:	57                   	push   %edi
810023a4:	53                   	push   %ebx
810023a5:	31 db                	xor    %ebx,%ebx
810023a7:	8b 7d 08             	mov    0x8(%ebp),%edi
810023aa:	02 5d 0c             	add    0xc(%ebp),%bl
810023ad:	0f 84 98 00 00 00    	je     8100244b <L25>
810023b3:	f7 c7 03 00 00 00    	test   $0x3,%edi
810023b9:	74 37                	je     810023f2 <L5>
810023bb:	89 f8                	mov    %edi,%eax
810023bd:	8a 08                	mov    (%eax),%cl
810023bf:	84 c9                	test   %cl,%cl
810023c1:	74 7b                	je     8100243e <L14>
810023c3:	38 d9                	cmp    %bl,%cl
810023c5:	74 7d                	je     81002444 <L19>
810023c7:	47                   	inc    %edi
810023c8:	f7 c7 03 00 00 00    	test   $0x3,%edi
810023ce:	74 22                	je     810023f2 <L5>
810023d0:	89 f8                	mov    %edi,%eax
810023d2:	8a 08                	mov    (%eax),%cl
810023d4:	84 c9                	test   %cl,%cl
810023d6:	74 66                	je     8100243e <L14>
810023d8:	38 d9                	cmp    %bl,%cl
810023da:	74 68                	je     81002444 <L19>
810023dc:	47                   	inc    %edi
810023dd:	f7 c7 03 00 00 00    	test   $0x3,%edi
810023e3:	74 0d                	je     810023f2 <L5>
810023e5:	89 f8                	mov    %edi,%eax
810023e7:	8a 08                	mov    (%eax),%cl
810023e9:	84 c9                	test   %cl,%cl
810023eb:	74 51                	je     8100243e <L14>
810023ed:	38 d9                	cmp    %bl,%cl
810023ef:	74 53                	je     81002444 <L19>
810023f1:	47                   	inc    %edi

810023f2 <L5>:
810023f2:	89 d9                	mov    %ebx,%ecx
810023f4:	c1 e3 08             	shl    $0x8,%ebx
810023f7:	83 ef 04             	sub    $0x4,%edi
810023fa:	09 cb                	or     %ecx,%ebx
810023fc:	89 da                	mov    %ebx,%edx
810023fe:	c1 e3 10             	shl    $0x10,%ebx
81002401:	09 d3                	or     %edx,%ebx

81002403 <L10>:
81002403:	83 c7 04             	add    $0x4,%edi
81002406:	8b 0f                	mov    (%edi),%ecx
81002408:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8100240e:	89 c8                	mov    %ecx,%eax
81002410:	f7 d0                	not    %eax
81002412:	21 c2                	and    %eax,%edx
81002414:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
8100241a:	75 14                	jne    81002430 <L9>
8100241c:	31 d9                	xor    %ebx,%ecx
8100241e:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81002424:	f7 d1                	not    %ecx
81002426:	21 ca                	and    %ecx,%edx
81002428:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
8100242e:	74 d3                	je     81002403 <L10>

81002430 <L9>:
81002430:	8d 47 ff             	lea    -0x1(%edi),%eax

81002433 <L15>:
81002433:	40                   	inc    %eax
81002434:	8a 10                	mov    (%eax),%dl
81002436:	84 d2                	test   %dl,%dl
81002438:	74 04                	je     8100243e <L14>
8100243a:	38 da                	cmp    %bl,%dl
8100243c:	75 f5                	jne    81002433 <L15>

8100243e <L14>:
8100243e:	38 18                	cmp    %bl,(%eax)
81002440:	74 02                	je     81002444 <L19>
81002442:	31 c0                	xor    %eax,%eax

81002444 <L19>:
81002444:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002447:	5b                   	pop    %ebx
81002448:	5f                   	pop    %edi
81002449:	c9                   	leave  
8100244a:	c3                   	ret    

8100244b <L25>:
8100244b:	f7 c7 03 00 00 00    	test   $0x3,%edi
81002451:	74 2b                	je     8100247e <L26>
81002453:	89 f8                	mov    %edi,%eax
81002455:	8a 08                	mov    (%eax),%cl
81002457:	84 c9                	test   %cl,%cl
81002459:	74 e9                	je     81002444 <L19>
8100245b:	47                   	inc    %edi
8100245c:	f7 c7 03 00 00 00    	test   $0x3,%edi
81002462:	74 1a                	je     8100247e <L26>
81002464:	89 f8                	mov    %edi,%eax
81002466:	8a 08                	mov    (%eax),%cl
81002468:	84 c9                	test   %cl,%cl
8100246a:	74 d8                	je     81002444 <L19>
8100246c:	47                   	inc    %edi
8100246d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81002473:	74 09                	je     8100247e <L26>
81002475:	89 f8                	mov    %edi,%eax
81002477:	8a 08                	mov    (%eax),%cl
81002479:	84 c9                	test   %cl,%cl
8100247b:	74 c7                	je     81002444 <L19>
8100247d:	47                   	inc    %edi

8100247e <L26>:
8100247e:	83 ef 04             	sub    $0x4,%edi

81002481 <L27>:
81002481:	83 c7 04             	add    $0x4,%edi
81002484:	8b 0f                	mov    (%edi),%ecx
81002486:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8100248c:	89 c8                	mov    %ecx,%eax
8100248e:	f7 d0                	not    %eax
81002490:	21 c2                	and    %eax,%edx
81002492:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81002498:	74 e7                	je     81002481 <L27>
8100249a:	eb 94                	jmp    81002430 <L9>
8100249c:	66 90                	xchg   %ax,%ax
8100249e:	66 90                	xchg   %ax,%ax

810024a0 <strlen>:
810024a0:	55                   	push   %ebp
810024a1:	89 e5                	mov    %esp,%ebp
810024a3:	57                   	push   %edi
810024a4:	8b 55 08             	mov    0x8(%ebp),%edx
810024a7:	89 d7                	mov    %edx,%edi
810024a9:	f7 c7 03 00 00 00    	test   $0x3,%edi
810024af:	74 25                	je     810024d6 <L5>
810024b1:	8a 0f                	mov    (%edi),%cl
810024b3:	47                   	inc    %edi
810024b4:	84 c9                	test   %cl,%cl
810024b6:	74 56                	je     8100250e <L15>
810024b8:	f7 c7 03 00 00 00    	test   $0x3,%edi
810024be:	74 16                	je     810024d6 <L5>
810024c0:	8a 0f                	mov    (%edi),%cl
810024c2:	47                   	inc    %edi
810024c3:	84 c9                	test   %cl,%cl
810024c5:	74 47                	je     8100250e <L15>
810024c7:	f7 c7 03 00 00 00    	test   $0x3,%edi
810024cd:	74 07                	je     810024d6 <L5>
810024cf:	8a 0f                	mov    (%edi),%cl
810024d1:	47                   	inc    %edi
810024d2:	84 c9                	test   %cl,%cl
810024d4:	74 38                	je     8100250e <L15>

810024d6 <L5>:
810024d6:	83 ef 04             	sub    $0x4,%edi
810024d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

810024e0 <L10>:
810024e0:	83 c7 04             	add    $0x4,%edi
810024e3:	8b 0f                	mov    (%edi),%ecx
810024e5:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
810024eb:	f7 d1                	not    %ecx
810024ed:	21 c8                	and    %ecx,%eax
810024ef:	a9 80 80 80 80       	test   $0x80808080,%eax
810024f4:	74 ea                	je     810024e0 <L10>
810024f6:	f7 d1                	not    %ecx
810024f8:	47                   	inc    %edi
810024f9:	84 c9                	test   %cl,%cl
810024fb:	74 11                	je     8100250e <L15>
810024fd:	47                   	inc    %edi
810024fe:	c1 e9 08             	shr    $0x8,%ecx
81002501:	84 c9                	test   %cl,%cl
81002503:	74 09                	je     8100250e <L15>
81002505:	47                   	inc    %edi
81002506:	c1 e9 08             	shr    $0x8,%ecx
81002509:	84 c9                	test   %cl,%cl
8100250b:	74 01                	je     8100250e <L15>
8100250d:	47                   	inc    %edi

8100250e <L15>:
8100250e:	29 d7                	sub    %edx,%edi
81002510:	8d 47 ff             	lea    -0x1(%edi),%eax
81002513:	8d 65 fc             	lea    -0x4(%ebp),%esp
81002516:	5f                   	pop    %edi
81002517:	c9                   	leave  
81002518:	c3                   	ret    

81002519 <_write_r>:
81002519:	55                   	push   %ebp
8100251a:	89 e5                	mov    %esp,%ebp
8100251c:	83 ec 18             	sub    $0x18,%esp
8100251f:	c7 05 2c 60 00 81 00 	movl   $0x0,0x8100602c
81002526:	00 00 00 
81002529:	83 ec 04             	sub    $0x4,%esp
8100252c:	ff 75 14             	push   0x14(%ebp)
8100252f:	ff 75 10             	push   0x10(%ebp)
81002532:	ff 75 0c             	push   0xc(%ebp)
81002535:	e8 0d de ff ff       	call   81000347 <write>
8100253a:	83 c4 10             	add    $0x10,%esp
8100253d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002540:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81002544:	75 14                	jne    8100255a <_write_r+0x41>
81002546:	a1 2c 60 00 81       	mov    0x8100602c,%eax
8100254b:	85 c0                	test   %eax,%eax
8100254d:	74 0b                	je     8100255a <_write_r+0x41>
8100254f:	8b 15 2c 60 00 81    	mov    0x8100602c,%edx
81002555:	8b 45 08             	mov    0x8(%ebp),%eax
81002558:	89 10                	mov    %edx,(%eax)
8100255a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100255d:	c9                   	leave  
8100255e:	c3                   	ret    

8100255f <_close_r>:
8100255f:	55                   	push   %ebp
81002560:	89 e5                	mov    %esp,%ebp
81002562:	83 ec 18             	sub    $0x18,%esp
81002565:	c7 05 2c 60 00 81 00 	movl   $0x0,0x8100602c
8100256c:	00 00 00 
8100256f:	83 ec 0c             	sub    $0xc,%esp
81002572:	ff 75 0c             	push   0xc(%ebp)
81002575:	e8 fa dd ff ff       	call   81000374 <close>
8100257a:	83 c4 10             	add    $0x10,%esp
8100257d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002580:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81002584:	75 14                	jne    8100259a <_close_r+0x3b>
81002586:	a1 2c 60 00 81       	mov    0x8100602c,%eax
8100258b:	85 c0                	test   %eax,%eax
8100258d:	74 0b                	je     8100259a <_close_r+0x3b>
8100258f:	8b 15 2c 60 00 81    	mov    0x8100602c,%edx
81002595:	8b 45 08             	mov    0x8(%ebp),%eax
81002598:	89 10                	mov    %edx,(%eax)
8100259a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100259d:	c9                   	leave  
8100259e:	c3                   	ret    

8100259f <_fclose_r>:
8100259f:	55                   	push   %ebp
810025a0:	89 e5                	mov    %esp,%ebp
810025a2:	53                   	push   %ebx
810025a3:	83 ec 14             	sub    $0x14,%esp
810025a6:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810025a9:	85 db                	test   %ebx,%ebx
810025ab:	75 0a                	jne    810025b7 <_fclose_r+0x18>
810025ad:	b8 00 00 00 00       	mov    $0x0,%eax
810025b2:	e9 ea 00 00 00       	jmp    810026a1 <_fclose_r+0x102>
810025b7:	8b 45 08             	mov    0x8(%ebp),%eax
810025ba:	89 45 f0             	mov    %eax,-0x10(%ebp)
810025bd:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810025c1:	74 18                	je     810025db <_fclose_r+0x3c>
810025c3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810025c6:	8b 40 38             	mov    0x38(%eax),%eax
810025c9:	85 c0                	test   %eax,%eax
810025cb:	75 0e                	jne    810025db <_fclose_r+0x3c>
810025cd:	83 ec 0c             	sub    $0xc,%esp
810025d0:	ff 75 f0             	push   -0x10(%ebp)
810025d3:	e8 9d e5 ff ff       	call   81000b75 <__sinit>
810025d8:	83 c4 10             	add    $0x10,%esp
810025db:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025df:	66 85 c0             	test   %ax,%ax
810025e2:	75 0a                	jne    810025ee <_fclose_r+0x4f>
810025e4:	b8 00 00 00 00       	mov    $0x0,%eax
810025e9:	e9 b3 00 00 00       	jmp    810026a1 <_fclose_r+0x102>
810025ee:	83 ec 08             	sub    $0x8,%esp
810025f1:	53                   	push   %ebx
810025f2:	ff 75 08             	push   0x8(%ebp)
810025f5:	e8 52 de ff ff       	call   8100044c <__sflush_r>
810025fa:	83 c4 10             	add    $0x10,%esp
810025fd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002600:	8b 43 2c             	mov    0x2c(%ebx),%eax
81002603:	85 c0                	test   %eax,%eax
81002605:	74 1d                	je     81002624 <_fclose_r+0x85>
81002607:	8b 43 2c             	mov    0x2c(%ebx),%eax
8100260a:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100260d:	83 ec 08             	sub    $0x8,%esp
81002610:	52                   	push   %edx
81002611:	ff 75 08             	push   0x8(%ebp)
81002614:	ff d0                	call   *%eax
81002616:	83 c4 10             	add    $0x10,%esp
81002619:	85 c0                	test   %eax,%eax
8100261b:	79 07                	jns    81002624 <_fclose_r+0x85>
8100261d:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81002624:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002628:	98                   	cwtl   
81002629:	25 80 00 00 00       	and    $0x80,%eax
8100262e:	85 c0                	test   %eax,%eax
81002630:	74 12                	je     81002644 <_fclose_r+0xa5>
81002632:	8b 43 10             	mov    0x10(%ebx),%eax
81002635:	83 ec 08             	sub    $0x8,%esp
81002638:	50                   	push   %eax
81002639:	ff 75 08             	push   0x8(%ebp)
8100263c:	e8 41 e6 ff ff       	call   81000c82 <_free_r>
81002641:	83 c4 10             	add    $0x10,%esp
81002644:	8b 43 30             	mov    0x30(%ebx),%eax
81002647:	85 c0                	test   %eax,%eax
81002649:	74 23                	je     8100266e <_fclose_r+0xcf>
8100264b:	8b 53 30             	mov    0x30(%ebx),%edx
8100264e:	8d 43 40             	lea    0x40(%ebx),%eax
81002651:	39 c2                	cmp    %eax,%edx
81002653:	74 12                	je     81002667 <_fclose_r+0xc8>
81002655:	8b 43 30             	mov    0x30(%ebx),%eax
81002658:	83 ec 08             	sub    $0x8,%esp
8100265b:	50                   	push   %eax
8100265c:	ff 75 08             	push   0x8(%ebp)
8100265f:	e8 1e e6 ff ff       	call   81000c82 <_free_r>
81002664:	83 c4 10             	add    $0x10,%esp
81002667:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100266e:	8b 43 44             	mov    0x44(%ebx),%eax
81002671:	85 c0                	test   %eax,%eax
81002673:	74 19                	je     8100268e <_fclose_r+0xef>
81002675:	8b 43 44             	mov    0x44(%ebx),%eax
81002678:	83 ec 08             	sub    $0x8,%esp
8100267b:	50                   	push   %eax
8100267c:	ff 75 08             	push   0x8(%ebp)
8100267f:	e8 fe e5 ff ff       	call   81000c82 <_free_r>
81002684:	83 c4 10             	add    $0x10,%esp
81002687:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
8100268e:	e8 7b e5 ff ff       	call   81000c0e <__sfp_lock_acquire>
81002693:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81002699:	e8 76 e5 ff ff       	call   81000c14 <__sfp_lock_release>
8100269e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026a1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810026a4:	c9                   	leave  
810026a5:	c3                   	ret    

810026a6 <fclose>:
810026a6:	55                   	push   %ebp
810026a7:	89 e5                	mov    %esp,%ebp
810026a9:	83 ec 08             	sub    $0x8,%esp
810026ac:	8b 55 08             	mov    0x8(%ebp),%edx
810026af:	a1 04 54 00 81       	mov    0x81005404,%eax
810026b4:	83 ec 08             	sub    $0x8,%esp
810026b7:	52                   	push   %edx
810026b8:	50                   	push   %eax
810026b9:	e8 e1 fe ff ff       	call   8100259f <_fclose_r>
810026be:	83 c4 10             	add    $0x10,%esp
810026c1:	c9                   	leave  
810026c2:	c3                   	ret    

810026c3 <__sfvwrite_r>:
810026c3:	55                   	push   %ebp
810026c4:	89 e5                	mov    %esp,%ebp
810026c6:	57                   	push   %edi
810026c7:	56                   	push   %esi
810026c8:	53                   	push   %ebx
810026c9:	83 ec 3c             	sub    $0x3c,%esp
810026cc:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810026cf:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
810026d6:	8b 45 10             	mov    0x10(%ebp),%eax
810026d9:	8b 78 08             	mov    0x8(%eax),%edi
810026dc:	85 ff                	test   %edi,%edi
810026de:	75 0a                	jne    810026ea <__sfvwrite_r+0x27>
810026e0:	b8 00 00 00 00       	mov    $0x0,%eax
810026e5:	e9 6f 04 00 00       	jmp    81002b59 <__sfvwrite_r+0x496>
810026ea:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026ee:	98                   	cwtl   
810026ef:	83 e0 08             	and    $0x8,%eax
810026f2:	85 c0                	test   %eax,%eax
810026f4:	74 07                	je     810026fd <__sfvwrite_r+0x3a>
810026f6:	8b 43 10             	mov    0x10(%ebx),%eax
810026f9:	85 c0                	test   %eax,%eax
810026fb:	75 1d                	jne    8100271a <__sfvwrite_r+0x57>
810026fd:	83 ec 08             	sub    $0x8,%esp
81002700:	53                   	push   %ebx
81002701:	ff 75 08             	push   0x8(%ebp)
81002704:	e8 ed 1d 00 00       	call   810044f6 <__swsetup_r>
81002709:	83 c4 10             	add    $0x10,%esp
8100270c:	85 c0                	test   %eax,%eax
8100270e:	74 0a                	je     8100271a <__sfvwrite_r+0x57>
81002710:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002715:	e9 3f 04 00 00       	jmp    81002b59 <__sfvwrite_r+0x496>
8100271a:	8b 45 10             	mov    0x10(%ebp),%eax
8100271d:	8b 00                	mov    (%eax),%eax
8100271f:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002722:	bf 00 00 00 00       	mov    $0x0,%edi
81002727:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100272b:	98                   	cwtl   
8100272c:	83 e0 02             	and    $0x2,%eax
8100272f:	85 c0                	test   %eax,%eax
81002731:	74 68                	je     8100279b <__sfvwrite_r+0xd8>
81002733:	eb 11                	jmp    81002746 <__sfvwrite_r+0x83>
81002735:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002738:	8b 08                	mov    (%eax),%ecx
8100273a:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
8100273d:	8b 78 04             	mov    0x4(%eax),%edi
81002740:	83 c0 08             	add    $0x8,%eax
81002743:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002746:	85 ff                	test   %edi,%edi
81002748:	74 eb                	je     81002735 <__sfvwrite_r+0x72>
8100274a:	8b 4b 24             	mov    0x24(%ebx),%ecx
8100274d:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
81002752:	39 c7                	cmp    %eax,%edi
81002754:	0f 46 c7             	cmovbe %edi,%eax
81002757:	89 c2                	mov    %eax,%edx
81002759:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100275c:	52                   	push   %edx
8100275d:	ff 75 c4             	push   -0x3c(%ebp)
81002760:	50                   	push   %eax
81002761:	ff 75 08             	push   0x8(%ebp)
81002764:	ff d1                	call   *%ecx
81002766:	83 c4 10             	add    $0x10,%esp
81002769:	89 c6                	mov    %eax,%esi
8100276b:	85 f6                	test   %esi,%esi
8100276d:	0f 8e cf 03 00 00    	jle    81002b42 <__sfvwrite_r+0x47f>
81002773:	89 f0                	mov    %esi,%eax
81002775:	01 45 c4             	add    %eax,-0x3c(%ebp)
81002778:	89 f0                	mov    %esi,%eax
8100277a:	29 c7                	sub    %eax,%edi
8100277c:	8b 45 10             	mov    0x10(%ebp),%eax
8100277f:	8b 40 08             	mov    0x8(%eax),%eax
81002782:	89 f2                	mov    %esi,%edx
81002784:	29 d0                	sub    %edx,%eax
81002786:	8b 4d 10             	mov    0x10(%ebp),%ecx
81002789:	89 41 08             	mov    %eax,0x8(%ecx)
8100278c:	8b 45 10             	mov    0x10(%ebp),%eax
8100278f:	8b 40 08             	mov    0x8(%eax),%eax
81002792:	85 c0                	test   %eax,%eax
81002794:	75 b0                	jne    81002746 <__sfvwrite_r+0x83>
81002796:	e9 a0 03 00 00       	jmp    81002b3b <__sfvwrite_r+0x478>
8100279b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100279f:	98                   	cwtl   
810027a0:	83 e0 01             	and    $0x1,%eax
810027a3:	85 c0                	test   %eax,%eax
810027a5:	0f 85 44 02 00 00    	jne    810029ef <__sfvwrite_r+0x32c>
810027ab:	eb 11                	jmp    810027be <__sfvwrite_r+0xfb>
810027ad:	8b 45 c0             	mov    -0x40(%ebp),%eax
810027b0:	8b 08                	mov    (%eax),%ecx
810027b2:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810027b5:	8b 78 04             	mov    0x4(%eax),%edi
810027b8:	83 c0 08             	add    $0x8,%eax
810027bb:	89 45 c0             	mov    %eax,-0x40(%ebp)
810027be:	85 ff                	test   %edi,%edi
810027c0:	74 eb                	je     810027ad <__sfvwrite_r+0xea>
810027c2:	8b 73 08             	mov    0x8(%ebx),%esi
810027c5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810027c9:	98                   	cwtl   
810027ca:	25 00 02 00 00       	and    $0x200,%eax
810027cf:	85 c0                	test   %eax,%eax
810027d1:	0f 84 4f 01 00 00    	je     81002926 <__sfvwrite_r+0x263>
810027d7:	89 f0                	mov    %esi,%eax
810027d9:	39 c7                	cmp    %eax,%edi
810027db:	0f 82 12 01 00 00    	jb     810028f3 <__sfvwrite_r+0x230>
810027e1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810027e5:	98                   	cwtl   
810027e6:	25 80 04 00 00       	and    $0x480,%eax
810027eb:	85 c0                	test   %eax,%eax
810027ed:	0f 84 00 01 00 00    	je     810028f3 <__sfvwrite_r+0x230>
810027f3:	8b 03                	mov    (%ebx),%eax
810027f5:	8b 53 10             	mov    0x10(%ebx),%edx
810027f8:	29 d0                	sub    %edx,%eax
810027fa:	89 45 d0             	mov    %eax,-0x30(%ebp)
810027fd:	8b 53 14             	mov    0x14(%ebx),%edx
81002800:	89 d0                	mov    %edx,%eax
81002802:	01 c0                	add    %eax,%eax
81002804:	01 d0                	add    %edx,%eax
81002806:	89 c2                	mov    %eax,%edx
81002808:	c1 ea 1f             	shr    $0x1f,%edx
8100280b:	01 d0                	add    %edx,%eax
8100280d:	d1 f8                	sar    %eax
8100280f:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002812:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002815:	01 f8                	add    %edi,%eax
81002817:	8d 50 01             	lea    0x1(%eax),%edx
8100281a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100281d:	39 c2                	cmp    %eax,%edx
8100281f:	76 0b                	jbe    8100282c <__sfvwrite_r+0x169>
81002821:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002824:	01 f8                	add    %edi,%eax
81002826:	83 c0 01             	add    $0x1,%eax
81002829:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100282c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002830:	98                   	cwtl   
81002831:	25 00 04 00 00       	and    $0x400,%eax
81002836:	85 c0                	test   %eax,%eax
81002838:	74 4f                	je     81002889 <__sfvwrite_r+0x1c6>
8100283a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100283d:	83 ec 08             	sub    $0x8,%esp
81002840:	50                   	push   %eax
81002841:	ff 75 08             	push   0x8(%ebp)
81002844:	e8 e5 ec ff ff       	call   8100152e <_malloc_r>
81002849:	83 c4 10             	add    $0x10,%esp
8100284c:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100284f:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81002853:	75 0e                	jne    81002863 <__sfvwrite_r+0x1a0>
81002855:	8b 45 08             	mov    0x8(%ebp),%eax
81002858:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100285e:	e9 e6 02 00 00       	jmp    81002b49 <__sfvwrite_r+0x486>
81002863:	8b 55 d0             	mov    -0x30(%ebp),%edx
81002866:	8b 43 10             	mov    0x10(%ebx),%eax
81002869:	83 ec 04             	sub    $0x4,%esp
8100286c:	52                   	push   %edx
8100286d:	50                   	push   %eax
8100286e:	ff 75 dc             	push   -0x24(%ebp)
81002871:	e8 72 f5 ff ff       	call   81001de8 <memcpy>
81002876:	83 c4 10             	add    $0x10,%esp
81002879:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100287d:	66 25 7f fb          	and    $0xfb7f,%ax
81002881:	0c 80                	or     $0x80,%al
81002883:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002887:	eb 49                	jmp    810028d2 <__sfvwrite_r+0x20f>
81002889:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100288c:	8b 43 10             	mov    0x10(%ebx),%eax
8100288f:	83 ec 04             	sub    $0x4,%esp
81002892:	52                   	push   %edx
81002893:	50                   	push   %eax
81002894:	ff 75 08             	push   0x8(%ebp)
81002897:	e8 b6 10 00 00       	call   81003952 <_realloc_r>
8100289c:	83 c4 10             	add    $0x10,%esp
8100289f:	89 45 dc             	mov    %eax,-0x24(%ebp)
810028a2:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810028a6:	75 2a                	jne    810028d2 <__sfvwrite_r+0x20f>
810028a8:	8b 43 10             	mov    0x10(%ebx),%eax
810028ab:	83 ec 08             	sub    $0x8,%esp
810028ae:	50                   	push   %eax
810028af:	ff 75 08             	push   0x8(%ebp)
810028b2:	e8 cb e3 ff ff       	call   81000c82 <_free_r>
810028b7:	83 c4 10             	add    $0x10,%esp
810028ba:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810028be:	24 7f                	and    $0x7f,%al
810028c0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810028c4:	8b 45 08             	mov    0x8(%ebp),%eax
810028c7:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810028cd:	e9 77 02 00 00       	jmp    81002b49 <__sfvwrite_r+0x486>
810028d2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810028d5:	89 43 10             	mov    %eax,0x10(%ebx)
810028d8:	8b 55 d0             	mov    -0x30(%ebp),%edx
810028db:	8b 45 dc             	mov    -0x24(%ebp),%eax
810028de:	01 d0                	add    %edx,%eax
810028e0:	89 03                	mov    %eax,(%ebx)
810028e2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810028e5:	89 43 14             	mov    %eax,0x14(%ebx)
810028e8:	89 fe                	mov    %edi,%esi
810028ea:	8b 45 d8             	mov    -0x28(%ebp),%eax
810028ed:	2b 45 d0             	sub    -0x30(%ebp),%eax
810028f0:	89 43 08             	mov    %eax,0x8(%ebx)
810028f3:	89 f0                	mov    %esi,%eax
810028f5:	39 c7                	cmp    %eax,%edi
810028f7:	73 02                	jae    810028fb <__sfvwrite_r+0x238>
810028f9:	89 fe                	mov    %edi,%esi
810028fb:	89 f2                	mov    %esi,%edx
810028fd:	8b 03                	mov    (%ebx),%eax
810028ff:	83 ec 04             	sub    $0x4,%esp
81002902:	52                   	push   %edx
81002903:	ff 75 c4             	push   -0x3c(%ebp)
81002906:	50                   	push   %eax
81002907:	e8 24 04 00 00       	call   81002d30 <memmove>
8100290c:	83 c4 10             	add    $0x10,%esp
8100290f:	8b 43 08             	mov    0x8(%ebx),%eax
81002912:	29 f0                	sub    %esi,%eax
81002914:	89 43 08             	mov    %eax,0x8(%ebx)
81002917:	8b 03                	mov    (%ebx),%eax
81002919:	89 f2                	mov    %esi,%edx
8100291b:	01 d0                	add    %edx,%eax
8100291d:	89 03                	mov    %eax,(%ebx)
8100291f:	89 fe                	mov    %edi,%esi
81002921:	e9 9d 00 00 00       	jmp    810029c3 <__sfvwrite_r+0x300>
81002926:	8b 13                	mov    (%ebx),%edx
81002928:	8b 43 10             	mov    0x10(%ebx),%eax
8100292b:	39 c2                	cmp    %eax,%edx
8100292d:	77 07                	ja     81002936 <__sfvwrite_r+0x273>
8100292f:	8b 43 14             	mov    0x14(%ebx),%eax
81002932:	39 c7                	cmp    %eax,%edi
81002934:	73 4c                	jae    81002982 <__sfvwrite_r+0x2bf>
81002936:	89 f0                	mov    %esi,%eax
81002938:	39 c7                	cmp    %eax,%edi
8100293a:	0f 46 c7             	cmovbe %edi,%eax
8100293d:	89 c6                	mov    %eax,%esi
8100293f:	89 f2                	mov    %esi,%edx
81002941:	8b 03                	mov    (%ebx),%eax
81002943:	83 ec 04             	sub    $0x4,%esp
81002946:	52                   	push   %edx
81002947:	ff 75 c4             	push   -0x3c(%ebp)
8100294a:	50                   	push   %eax
8100294b:	e8 e0 03 00 00       	call   81002d30 <memmove>
81002950:	83 c4 10             	add    $0x10,%esp
81002953:	8b 43 08             	mov    0x8(%ebx),%eax
81002956:	29 f0                	sub    %esi,%eax
81002958:	89 43 08             	mov    %eax,0x8(%ebx)
8100295b:	8b 03                	mov    (%ebx),%eax
8100295d:	89 f2                	mov    %esi,%edx
8100295f:	01 d0                	add    %edx,%eax
81002961:	89 03                	mov    %eax,(%ebx)
81002963:	8b 43 08             	mov    0x8(%ebx),%eax
81002966:	85 c0                	test   %eax,%eax
81002968:	75 58                	jne    810029c2 <__sfvwrite_r+0x2ff>
8100296a:	83 ec 08             	sub    $0x8,%esp
8100296d:	53                   	push   %ebx
8100296e:	ff 75 08             	push   0x8(%ebp)
81002971:	e8 fc dc ff ff       	call   81000672 <_fflush_r>
81002976:	83 c4 10             	add    $0x10,%esp
81002979:	85 c0                	test   %eax,%eax
8100297b:	74 45                	je     810029c2 <__sfvwrite_r+0x2ff>
8100297d:	e9 c7 01 00 00       	jmp    81002b49 <__sfvwrite_r+0x486>
81002982:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81002988:	77 04                	ja     8100298e <__sfvwrite_r+0x2cb>
8100298a:	89 f8                	mov    %edi,%eax
8100298c:	eb 05                	jmp    81002993 <__sfvwrite_r+0x2d0>
8100298e:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81002993:	8b 4b 14             	mov    0x14(%ebx),%ecx
81002996:	99                   	cltd   
81002997:	f7 f9                	idiv   %ecx
81002999:	89 c2                	mov    %eax,%edx
8100299b:	8b 43 14             	mov    0x14(%ebx),%eax
8100299e:	89 d6                	mov    %edx,%esi
810029a0:	0f af f0             	imul   %eax,%esi
810029a3:	8b 53 24             	mov    0x24(%ebx),%edx
810029a6:	8b 43 1c             	mov    0x1c(%ebx),%eax
810029a9:	56                   	push   %esi
810029aa:	ff 75 c4             	push   -0x3c(%ebp)
810029ad:	50                   	push   %eax
810029ae:	ff 75 08             	push   0x8(%ebp)
810029b1:	ff d2                	call   *%edx
810029b3:	83 c4 10             	add    $0x10,%esp
810029b6:	89 c6                	mov    %eax,%esi
810029b8:	85 f6                	test   %esi,%esi
810029ba:	0f 8e 85 01 00 00    	jle    81002b45 <__sfvwrite_r+0x482>
810029c0:	eb 01                	jmp    810029c3 <__sfvwrite_r+0x300>
810029c2:	90                   	nop
810029c3:	89 f0                	mov    %esi,%eax
810029c5:	01 45 c4             	add    %eax,-0x3c(%ebp)
810029c8:	89 f0                	mov    %esi,%eax
810029ca:	29 c7                	sub    %eax,%edi
810029cc:	8b 45 10             	mov    0x10(%ebp),%eax
810029cf:	8b 40 08             	mov    0x8(%eax),%eax
810029d2:	89 f2                	mov    %esi,%edx
810029d4:	29 d0                	sub    %edx,%eax
810029d6:	8b 4d 10             	mov    0x10(%ebp),%ecx
810029d9:	89 41 08             	mov    %eax,0x8(%ecx)
810029dc:	8b 45 10             	mov    0x10(%ebp),%eax
810029df:	8b 40 08             	mov    0x8(%eax),%eax
810029e2:	85 c0                	test   %eax,%eax
810029e4:	0f 85 d4 fd ff ff    	jne    810027be <__sfvwrite_r+0xfb>
810029ea:	e9 4c 01 00 00       	jmp    81002b3b <__sfvwrite_r+0x478>
810029ef:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810029f6:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
810029fd:	eb 18                	jmp    81002a17 <__sfvwrite_r+0x354>
810029ff:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002a06:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002a09:	8b 08                	mov    (%eax),%ecx
81002a0b:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81002a0e:	8b 78 04             	mov    0x4(%eax),%edi
81002a11:	83 c0 08             	add    $0x8,%eax
81002a14:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002a17:	85 ff                	test   %edi,%edi
81002a19:	74 e4                	je     810029ff <__sfvwrite_r+0x33c>
81002a1b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002a1f:	75 32                	jne    81002a53 <__sfvwrite_r+0x390>
81002a21:	83 ec 04             	sub    $0x4,%esp
81002a24:	57                   	push   %edi
81002a25:	6a 0a                	push   $0xa
81002a27:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81002a2a:	56                   	push   %esi
81002a2b:	e8 20 f3 ff ff       	call   81001d50 <memchr>
81002a30:	83 c4 10             	add    $0x10,%esp
81002a33:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002a36:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81002a3a:	74 0a                	je     81002a46 <__sfvwrite_r+0x383>
81002a3c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002a3f:	83 c0 01             	add    $0x1,%eax
81002a42:	29 f0                	sub    %esi,%eax
81002a44:	eb 03                	jmp    81002a49 <__sfvwrite_r+0x386>
81002a46:	8d 47 01             	lea    0x1(%edi),%eax
81002a49:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002a4c:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002a53:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a56:	39 c7                	cmp    %eax,%edi
81002a58:	0f 46 c7             	cmovbe %edi,%eax
81002a5b:	89 c1                	mov    %eax,%ecx
81002a5d:	8b 53 08             	mov    0x8(%ebx),%edx
81002a60:	8b 43 14             	mov    0x14(%ebx),%eax
81002a63:	8d 34 02             	lea    (%edx,%eax,1),%esi
81002a66:	8b 13                	mov    (%ebx),%edx
81002a68:	8b 43 10             	mov    0x10(%ebx),%eax
81002a6b:	39 c2                	cmp    %eax,%edx
81002a6d:	76 38                	jbe    81002aa7 <__sfvwrite_r+0x3e4>
81002a6f:	39 f1                	cmp    %esi,%ecx
81002a71:	7e 34                	jle    81002aa7 <__sfvwrite_r+0x3e4>
81002a73:	89 f2                	mov    %esi,%edx
81002a75:	8b 03                	mov    (%ebx),%eax
81002a77:	83 ec 04             	sub    $0x4,%esp
81002a7a:	52                   	push   %edx
81002a7b:	ff 75 c4             	push   -0x3c(%ebp)
81002a7e:	50                   	push   %eax
81002a7f:	e8 ac 02 00 00       	call   81002d30 <memmove>
81002a84:	83 c4 10             	add    $0x10,%esp
81002a87:	8b 03                	mov    (%ebx),%eax
81002a89:	89 f2                	mov    %esi,%edx
81002a8b:	01 d0                	add    %edx,%eax
81002a8d:	89 03                	mov    %eax,(%ebx)
81002a8f:	83 ec 08             	sub    $0x8,%esp
81002a92:	53                   	push   %ebx
81002a93:	ff 75 08             	push   0x8(%ebp)
81002a96:	e8 d7 db ff ff       	call   81000672 <_fflush_r>
81002a9b:	83 c4 10             	add    $0x10,%esp
81002a9e:	85 c0                	test   %eax,%eax
81002aa0:	74 4f                	je     81002af1 <__sfvwrite_r+0x42e>
81002aa2:	e9 a2 00 00 00       	jmp    81002b49 <__sfvwrite_r+0x486>
81002aa7:	8b 73 14             	mov    0x14(%ebx),%esi
81002aaa:	89 c8                	mov    %ecx,%eax
81002aac:	39 c6                	cmp    %eax,%esi
81002aae:	7f 1b                	jg     81002acb <__sfvwrite_r+0x408>
81002ab0:	8b 53 24             	mov    0x24(%ebx),%edx
81002ab3:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002ab6:	56                   	push   %esi
81002ab7:	ff 75 c4             	push   -0x3c(%ebp)
81002aba:	50                   	push   %eax
81002abb:	ff 75 08             	push   0x8(%ebp)
81002abe:	ff d2                	call   *%edx
81002ac0:	83 c4 10             	add    $0x10,%esp
81002ac3:	89 c6                	mov    %eax,%esi
81002ac5:	85 f6                	test   %esi,%esi
81002ac7:	7f 28                	jg     81002af1 <__sfvwrite_r+0x42e>
81002ac9:	eb 7e                	jmp    81002b49 <__sfvwrite_r+0x486>
81002acb:	89 ce                	mov    %ecx,%esi
81002acd:	89 f2                	mov    %esi,%edx
81002acf:	8b 03                	mov    (%ebx),%eax
81002ad1:	83 ec 04             	sub    $0x4,%esp
81002ad4:	52                   	push   %edx
81002ad5:	ff 75 c4             	push   -0x3c(%ebp)
81002ad8:	50                   	push   %eax
81002ad9:	e8 52 02 00 00       	call   81002d30 <memmove>
81002ade:	83 c4 10             	add    $0x10,%esp
81002ae1:	8b 43 08             	mov    0x8(%ebx),%eax
81002ae4:	29 f0                	sub    %esi,%eax
81002ae6:	89 43 08             	mov    %eax,0x8(%ebx)
81002ae9:	8b 03                	mov    (%ebx),%eax
81002aeb:	89 f2                	mov    %esi,%edx
81002aed:	01 d0                	add    %edx,%eax
81002aef:	89 03                	mov    %eax,(%ebx)
81002af1:	29 75 e0             	sub    %esi,-0x20(%ebp)
81002af4:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81002af8:	75 1a                	jne    81002b14 <__sfvwrite_r+0x451>
81002afa:	83 ec 08             	sub    $0x8,%esp
81002afd:	53                   	push   %ebx
81002afe:	ff 75 08             	push   0x8(%ebp)
81002b01:	e8 6c db ff ff       	call   81000672 <_fflush_r>
81002b06:	83 c4 10             	add    $0x10,%esp
81002b09:	85 c0                	test   %eax,%eax
81002b0b:	75 3b                	jne    81002b48 <__sfvwrite_r+0x485>
81002b0d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002b14:	89 f0                	mov    %esi,%eax
81002b16:	01 45 c4             	add    %eax,-0x3c(%ebp)
81002b19:	89 f0                	mov    %esi,%eax
81002b1b:	29 c7                	sub    %eax,%edi
81002b1d:	8b 45 10             	mov    0x10(%ebp),%eax
81002b20:	8b 40 08             	mov    0x8(%eax),%eax
81002b23:	89 f2                	mov    %esi,%edx
81002b25:	29 d0                	sub    %edx,%eax
81002b27:	8b 4d 10             	mov    0x10(%ebp),%ecx
81002b2a:	89 41 08             	mov    %eax,0x8(%ecx)
81002b2d:	8b 45 10             	mov    0x10(%ebp),%eax
81002b30:	8b 40 08             	mov    0x8(%eax),%eax
81002b33:	85 c0                	test   %eax,%eax
81002b35:	0f 85 dc fe ff ff    	jne    81002a17 <__sfvwrite_r+0x354>
81002b3b:	b8 00 00 00 00       	mov    $0x0,%eax
81002b40:	eb 17                	jmp    81002b59 <__sfvwrite_r+0x496>
81002b42:	90                   	nop
81002b43:	eb 04                	jmp    81002b49 <__sfvwrite_r+0x486>
81002b45:	90                   	nop
81002b46:	eb 01                	jmp    81002b49 <__sfvwrite_r+0x486>
81002b48:	90                   	nop
81002b49:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002b4d:	83 c8 40             	or     $0x40,%eax
81002b50:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002b54:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002b59:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002b5c:	5b                   	pop    %ebx
81002b5d:	5e                   	pop    %esi
81002b5e:	5f                   	pop    %edi
81002b5f:	5d                   	pop    %ebp
81002b60:	c3                   	ret    

81002b61 <_lseek_r>:
81002b61:	55                   	push   %ebp
81002b62:	89 e5                	mov    %esp,%ebp
81002b64:	83 ec 18             	sub    $0x18,%esp
81002b67:	c7 05 2c 60 00 81 00 	movl   $0x0,0x8100602c
81002b6e:	00 00 00 
81002b71:	83 ec 04             	sub    $0x4,%esp
81002b74:	ff 75 14             	push   0x14(%ebp)
81002b77:	ff 75 10             	push   0x10(%ebp)
81002b7a:	ff 75 0c             	push   0xc(%ebp)
81002b7d:	e8 13 d8 ff ff       	call   81000395 <lseek>
81002b82:	83 c4 10             	add    $0x10,%esp
81002b85:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002b88:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81002b8c:	75 14                	jne    81002ba2 <_lseek_r+0x41>
81002b8e:	a1 2c 60 00 81       	mov    0x8100602c,%eax
81002b93:	85 c0                	test   %eax,%eax
81002b95:	74 0b                	je     81002ba2 <_lseek_r+0x41>
81002b97:	8b 15 2c 60 00 81    	mov    0x8100602c,%edx
81002b9d:	8b 45 08             	mov    0x8(%ebp),%eax
81002ba0:	89 10                	mov    %edx,(%eax)
81002ba2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ba5:	c9                   	leave  
81002ba6:	c3                   	ret    

81002ba7 <__smakebuf_r>:
81002ba7:	55                   	push   %ebp
81002ba8:	89 e5                	mov    %esp,%ebp
81002baa:	56                   	push   %esi
81002bab:	53                   	push   %ebx
81002bac:	83 ec 10             	sub    $0x10,%esp
81002baf:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002bb2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002bb6:	98                   	cwtl   
81002bb7:	83 e0 02             	and    $0x2,%eax
81002bba:	85 c0                	test   %eax,%eax
81002bbc:	74 16                	je     81002bd4 <__smakebuf_r+0x2d>
81002bbe:	8d 43 43             	lea    0x43(%ebx),%eax
81002bc1:	89 03                	mov    %eax,(%ebx)
81002bc3:	8b 03                	mov    (%ebx),%eax
81002bc5:	89 43 10             	mov    %eax,0x10(%ebx)
81002bc8:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81002bcf:	e9 b9 00 00 00       	jmp    81002c8d <__smakebuf_r+0xe6>
81002bd4:	8d 45 ec             	lea    -0x14(%ebp),%eax
81002bd7:	50                   	push   %eax
81002bd8:	8d 45 f0             	lea    -0x10(%ebp),%eax
81002bdb:	50                   	push   %eax
81002bdc:	53                   	push   %ebx
81002bdd:	ff 75 08             	push   0x8(%ebp)
81002be0:	e8 af 00 00 00       	call   81002c94 <__swhatbuf_r>
81002be5:	83 c4 10             	add    $0x10,%esp
81002be8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002beb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002bee:	83 ec 08             	sub    $0x8,%esp
81002bf1:	50                   	push   %eax
81002bf2:	ff 75 08             	push   0x8(%ebp)
81002bf5:	e8 34 e9 ff ff       	call   8100152e <_malloc_r>
81002bfa:	83 c4 10             	add    $0x10,%esp
81002bfd:	89 c6                	mov    %eax,%esi
81002bff:	85 f6                	test   %esi,%esi
81002c01:	75 2f                	jne    81002c32 <__smakebuf_r+0x8b>
81002c03:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002c07:	98                   	cwtl   
81002c08:	25 00 02 00 00       	and    $0x200,%eax
81002c0d:	85 c0                	test   %eax,%eax
81002c0f:	75 7c                	jne    81002c8d <__smakebuf_r+0xe6>
81002c11:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002c15:	83 e0 fc             	and    $0xfffffffc,%eax
81002c18:	83 c8 02             	or     $0x2,%eax
81002c1b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002c1f:	8d 43 43             	lea    0x43(%ebx),%eax
81002c22:	89 03                	mov    %eax,(%ebx)
81002c24:	8b 03                	mov    (%ebx),%eax
81002c26:	89 43 10             	mov    %eax,0x10(%ebx)
81002c29:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81002c30:	eb 5b                	jmp    81002c8d <__smakebuf_r+0xe6>
81002c32:	8b 45 08             	mov    0x8(%ebp),%eax
81002c35:	c7 40 3c 3a 0b 00 81 	movl   $0x81000b3a,0x3c(%eax)
81002c3c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002c40:	0c 80                	or     $0x80,%al
81002c42:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002c46:	89 33                	mov    %esi,(%ebx)
81002c48:	8b 03                	mov    (%ebx),%eax
81002c4a:	89 43 10             	mov    %eax,0x10(%ebx)
81002c4d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002c50:	89 43 14             	mov    %eax,0x14(%ebx)
81002c53:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002c56:	85 c0                	test   %eax,%eax
81002c58:	74 26                	je     81002c80 <__smakebuf_r+0xd9>
81002c5a:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002c5e:	98                   	cwtl   
81002c5f:	83 ec 08             	sub    $0x8,%esp
81002c62:	50                   	push   %eax
81002c63:	ff 75 08             	push   0x8(%ebp)
81002c66:	e8 de 1b 00 00       	call   81004849 <_isatty_r>
81002c6b:	83 c4 10             	add    $0x10,%esp
81002c6e:	85 c0                	test   %eax,%eax
81002c70:	74 0e                	je     81002c80 <__smakebuf_r+0xd9>
81002c72:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002c76:	83 e0 fc             	and    $0xfffffffc,%eax
81002c79:	83 c8 01             	or     $0x1,%eax
81002c7c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002c80:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81002c84:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c87:	09 d0                	or     %edx,%eax
81002c89:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002c8d:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002c90:	5b                   	pop    %ebx
81002c91:	5e                   	pop    %esi
81002c92:	5d                   	pop    %ebp
81002c93:	c3                   	ret    

81002c94 <__swhatbuf_r>:
81002c94:	55                   	push   %ebp
81002c95:	89 e5                	mov    %esp,%ebp
81002c97:	83 ec 58             	sub    $0x58,%esp
81002c9a:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81002ca1:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ca4:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81002ca8:	66 85 c0             	test   %ax,%ax
81002cab:	78 1f                	js     81002ccc <__swhatbuf_r+0x38>
81002cad:	8b 45 0c             	mov    0xc(%ebp),%eax
81002cb0:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81002cb4:	98                   	cwtl   
81002cb5:	83 ec 04             	sub    $0x4,%esp
81002cb8:	8d 55 ac             	lea    -0x54(%ebp),%edx
81002cbb:	52                   	push   %edx
81002cbc:	50                   	push   %eax
81002cbd:	ff 75 08             	push   0x8(%ebp)
81002cc0:	e8 41 1b 00 00       	call   81004806 <_fstat_r>
81002cc5:	83 c4 10             	add    $0x10,%esp
81002cc8:	85 c0                	test   %eax,%eax
81002cca:	79 35                	jns    81002d01 <__swhatbuf_r+0x6d>
81002ccc:	8b 45 14             	mov    0x14(%ebp),%eax
81002ccf:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81002cd5:	8b 45 0c             	mov    0xc(%ebp),%eax
81002cd8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002cdc:	98                   	cwtl   
81002cdd:	25 80 00 00 00       	and    $0x80,%eax
81002ce2:	85 c0                	test   %eax,%eax
81002ce4:	74 0b                	je     81002cf1 <__swhatbuf_r+0x5d>
81002ce6:	8b 45 10             	mov    0x10(%ebp),%eax
81002ce9:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81002cef:	eb 09                	jmp    81002cfa <__swhatbuf_r+0x66>
81002cf1:	8b 45 10             	mov    0x10(%ebp),%eax
81002cf4:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81002cfa:	b8 00 00 00 00       	mov    $0x0,%eax
81002cff:	eb 24                	jmp    81002d25 <__swhatbuf_r+0x91>
81002d01:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002d04:	25 00 f0 00 00       	and    $0xf000,%eax
81002d09:	3d 00 20 00 00       	cmp    $0x2000,%eax
81002d0e:	0f 94 c0             	sete   %al
81002d11:	0f b6 d0             	movzbl %al,%edx
81002d14:	8b 45 14             	mov    0x14(%ebp),%eax
81002d17:	89 10                	mov    %edx,(%eax)
81002d19:	8b 45 10             	mov    0x10(%ebp),%eax
81002d1c:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81002d22:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d25:	c9                   	leave  
81002d26:	c3                   	ret    
81002d27:	66 90                	xchg   %ax,%ax
81002d29:	66 90                	xchg   %ax,%ax
81002d2b:	66 90                	xchg   %ax,%ax
81002d2d:	66 90                	xchg   %ax,%ax
81002d2f:	90                   	nop

81002d30 <memmove>:
81002d30:	55                   	push   %ebp
81002d31:	89 e5                	mov    %esp,%ebp
81002d33:	56                   	push   %esi
81002d34:	57                   	push   %edi
81002d35:	53                   	push   %ebx
81002d36:	8b 7d 08             	mov    0x8(%ebp),%edi
81002d39:	8b 4d 10             	mov    0x10(%ebp),%ecx
81002d3c:	8b 75 0c             	mov    0xc(%ebp),%esi
81002d3f:	fc                   	cld    
81002d40:	39 fe                	cmp    %edi,%esi
81002d42:	73 43                	jae    81002d87 <memmove+0x57>
81002d44:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81002d48:	39 df                	cmp    %ebx,%edi
81002d4a:	77 3b                	ja     81002d87 <memmove+0x57>
81002d4c:	01 ce                	add    %ecx,%esi
81002d4e:	01 cf                	add    %ecx,%edi
81002d50:	fd                   	std    
81002d51:	83 f9 08             	cmp    $0x8,%ecx
81002d54:	76 2b                	jbe    81002d81 <memmove+0x51>
81002d56:	89 fa                	mov    %edi,%edx
81002d58:	89 cb                	mov    %ecx,%ebx
81002d5a:	83 e2 03             	and    $0x3,%edx
81002d5d:	74 0c                	je     81002d6b <memmove+0x3b>
81002d5f:	89 d1                	mov    %edx,%ecx
81002d61:	4e                   	dec    %esi
81002d62:	4f                   	dec    %edi
81002d63:	29 cb                	sub    %ecx,%ebx
81002d65:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81002d67:	89 d9                	mov    %ebx,%ecx
81002d69:	46                   	inc    %esi
81002d6a:	47                   	inc    %edi
81002d6b:	c1 e9 02             	shr    $0x2,%ecx
81002d6e:	83 ee 04             	sub    $0x4,%esi
81002d71:	83 ef 04             	sub    $0x4,%edi
81002d74:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81002d76:	83 c6 04             	add    $0x4,%esi
81002d79:	83 c7 04             	add    $0x4,%edi
81002d7c:	89 d9                	mov    %ebx,%ecx
81002d7e:	83 e1 03             	and    $0x3,%ecx
81002d81:	4e                   	dec    %esi
81002d82:	4f                   	dec    %edi
81002d83:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81002d85:	eb 2a                	jmp    81002db1 <memmove+0x81>
81002d87:	83 f9 08             	cmp    $0x8,%ecx
81002d8a:	76 23                	jbe    81002daf <memmove+0x7f>
81002d8c:	89 fa                	mov    %edi,%edx
81002d8e:	89 cb                	mov    %ecx,%ebx
81002d90:	83 e2 03             	and    $0x3,%edx
81002d93:	74 10                	je     81002da5 <memmove+0x75>
81002d95:	b9 04 00 00 00       	mov    $0x4,%ecx
81002d9a:	29 d1                	sub    %edx,%ecx
81002d9c:	83 e1 03             	and    $0x3,%ecx
81002d9f:	29 cb                	sub    %ecx,%ebx
81002da1:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81002da3:	89 d9                	mov    %ebx,%ecx
81002da5:	c1 e9 02             	shr    $0x2,%ecx
81002da8:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81002daa:	89 d9                	mov    %ebx,%ecx
81002dac:	83 e1 03             	and    $0x3,%ecx
81002daf:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81002db1:	8b 45 08             	mov    0x8(%ebp),%eax
81002db4:	fc                   	cld    
81002db5:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002db8:	5b                   	pop    %ebx
81002db9:	5f                   	pop    %edi
81002dba:	5e                   	pop    %esi
81002dbb:	c9                   	leave  
81002dbc:	c3                   	ret    

81002dbd <__sprint_r>:
81002dbd:	55                   	push   %ebp
81002dbe:	89 e5                	mov    %esp,%ebp
81002dc0:	56                   	push   %esi
81002dc1:	53                   	push   %ebx
81002dc2:	83 ec 10             	sub    $0x10,%esp
81002dc5:	8b 5d 10             	mov    0x10(%ebp),%ebx
81002dc8:	be 00 00 00 00       	mov    $0x0,%esi
81002dcd:	8b 43 08             	mov    0x8(%ebx),%eax
81002dd0:	85 c0                	test   %eax,%eax
81002dd2:	75 11                	jne    81002de5 <__sprint_r+0x28>
81002dd4:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002ddb:	b8 00 00 00 00       	mov    $0x0,%eax
81002de0:	e9 ad 00 00 00       	jmp    81002e92 <__sprint_r+0xd5>
81002de5:	8b 45 0c             	mov    0xc(%ebp),%eax
81002de8:	8b 40 64             	mov    0x64(%eax),%eax
81002deb:	25 00 20 00 00       	and    $0x2000,%eax
81002df0:	85 c0                	test   %eax,%eax
81002df2:	74 7a                	je     81002e6e <__sprint_r+0xb1>
81002df4:	8b 03                	mov    (%ebx),%eax
81002df6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002df9:	eb 6a                	jmp    81002e65 <__sprint_r+0xa8>
81002dfb:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002dfe:	8b 00                	mov    (%eax),%eax
81002e00:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002e03:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e06:	8b 40 04             	mov    0x4(%eax),%eax
81002e09:	c1 e8 02             	shr    $0x2,%eax
81002e0c:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002e0f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002e16:	eb 33                	jmp    81002e4b <__sprint_r+0x8e>
81002e18:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002e1b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002e22:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002e25:	01 d0                	add    %edx,%eax
81002e27:	8b 00                	mov    (%eax),%eax
81002e29:	83 ec 04             	sub    $0x4,%esp
81002e2c:	ff 75 0c             	push   0xc(%ebp)
81002e2f:	50                   	push   %eax
81002e30:	ff 75 08             	push   0x8(%ebp)
81002e33:	e8 2f 19 00 00       	call   81004767 <_fputwc_r>
81002e38:	83 c4 10             	add    $0x10,%esp
81002e3b:	83 f8 ff             	cmp    $0xffffffff,%eax
81002e3e:	75 07                	jne    81002e47 <__sprint_r+0x8a>
81002e40:	be ff ff ff ff       	mov    $0xffffffff,%esi
81002e45:	eb 3b                	jmp    81002e82 <__sprint_r+0xc5>
81002e47:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81002e4b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002e4e:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81002e51:	7c c5                	jl     81002e18 <__sprint_r+0x5b>
81002e53:	8b 43 08             	mov    0x8(%ebx),%eax
81002e56:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002e59:	c1 e2 02             	shl    $0x2,%edx
81002e5c:	29 d0                	sub    %edx,%eax
81002e5e:	89 43 08             	mov    %eax,0x8(%ebx)
81002e61:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
81002e65:	8b 43 08             	mov    0x8(%ebx),%eax
81002e68:	85 c0                	test   %eax,%eax
81002e6a:	75 8f                	jne    81002dfb <__sprint_r+0x3e>
81002e6c:	eb 14                	jmp    81002e82 <__sprint_r+0xc5>
81002e6e:	83 ec 04             	sub    $0x4,%esp
81002e71:	53                   	push   %ebx
81002e72:	ff 75 0c             	push   0xc(%ebp)
81002e75:	ff 75 08             	push   0x8(%ebp)
81002e78:	e8 46 f8 ff ff       	call   810026c3 <__sfvwrite_r>
81002e7d:	83 c4 10             	add    $0x10,%esp
81002e80:	89 c6                	mov    %eax,%esi
81002e82:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81002e89:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002e90:	89 f0                	mov    %esi,%eax
81002e92:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002e95:	5b                   	pop    %ebx
81002e96:	5e                   	pop    %esi
81002e97:	5d                   	pop    %ebp
81002e98:	c3                   	ret    

81002e99 <__sfputc_r>:
81002e99:	55                   	push   %ebp
81002e9a:	89 e5                	mov    %esp,%ebp
81002e9c:	83 ec 08             	sub    $0x8,%esp
81002e9f:	8b 45 10             	mov    0x10(%ebp),%eax
81002ea2:	8b 40 08             	mov    0x8(%eax),%eax
81002ea5:	8d 50 ff             	lea    -0x1(%eax),%edx
81002ea8:	8b 45 10             	mov    0x10(%ebp),%eax
81002eab:	89 50 08             	mov    %edx,0x8(%eax)
81002eae:	8b 45 10             	mov    0x10(%ebp),%eax
81002eb1:	8b 40 08             	mov    0x8(%eax),%eax
81002eb4:	85 c0                	test   %eax,%eax
81002eb6:	79 17                	jns    81002ecf <__sfputc_r+0x36>
81002eb8:	8b 45 10             	mov    0x10(%ebp),%eax
81002ebb:	8b 50 08             	mov    0x8(%eax),%edx
81002ebe:	8b 45 10             	mov    0x10(%ebp),%eax
81002ec1:	8b 40 18             	mov    0x18(%eax),%eax
81002ec4:	39 c2                	cmp    %eax,%edx
81002ec6:	7c 21                	jl     81002ee9 <__sfputc_r+0x50>
81002ec8:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ecb:	3c 0a                	cmp    $0xa,%al
81002ecd:	74 1a                	je     81002ee9 <__sfputc_r+0x50>
81002ecf:	8b 45 10             	mov    0x10(%ebp),%eax
81002ed2:	8b 00                	mov    (%eax),%eax
81002ed4:	8d 48 01             	lea    0x1(%eax),%ecx
81002ed7:	8b 55 10             	mov    0x10(%ebp),%edx
81002eda:	89 0a                	mov    %ecx,(%edx)
81002edc:	8b 55 0c             	mov    0xc(%ebp),%edx
81002edf:	88 10                	mov    %dl,(%eax)
81002ee1:	0f b6 00             	movzbl (%eax),%eax
81002ee4:	0f b6 c0             	movzbl %al,%eax
81002ee7:	eb 14                	jmp    81002efd <__sfputc_r+0x64>
81002ee9:	83 ec 04             	sub    $0x4,%esp
81002eec:	ff 75 10             	push   0x10(%ebp)
81002eef:	ff 75 0c             	push   0xc(%ebp)
81002ef2:	ff 75 08             	push   0x8(%ebp)
81002ef5:	e8 c9 14 00 00       	call   810043c3 <__swbuf_r>
81002efa:	83 c4 10             	add    $0x10,%esp
81002efd:	c9                   	leave  
81002efe:	c3                   	ret    

81002eff <__sfputs_r>:
81002eff:	55                   	push   %ebp
81002f00:	89 e5                	mov    %esp,%ebp
81002f02:	53                   	push   %ebx
81002f03:	83 ec 14             	sub    $0x14,%esp
81002f06:	8b 45 0c             	mov    0xc(%ebp),%eax
81002f09:	8b 40 64             	mov    0x64(%eax),%eax
81002f0c:	25 00 20 00 00       	and    $0x2000,%eax
81002f11:	85 c0                	test   %eax,%eax
81002f13:	74 4c                	je     81002f61 <__sfputs_r+0x62>
81002f15:	8b 45 10             	mov    0x10(%ebp),%eax
81002f18:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002f1b:	bb 00 00 00 00       	mov    $0x0,%ebx
81002f20:	eb 31                	jmp    81002f53 <__sfputs_r+0x54>
81002f22:	89 d8                	mov    %ebx,%eax
81002f24:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002f2b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f2e:	01 d0                	add    %edx,%eax
81002f30:	8b 00                	mov    (%eax),%eax
81002f32:	83 ec 04             	sub    $0x4,%esp
81002f35:	ff 75 0c             	push   0xc(%ebp)
81002f38:	50                   	push   %eax
81002f39:	ff 75 08             	push   0x8(%ebp)
81002f3c:	e8 26 18 00 00       	call   81004767 <_fputwc_r>
81002f41:	83 c4 10             	add    $0x10,%esp
81002f44:	83 f8 ff             	cmp    $0xffffffff,%eax
81002f47:	75 07                	jne    81002f50 <__sfputs_r+0x51>
81002f49:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002f4e:	eb 52                	jmp    81002fa2 <__sfputs_r+0xa3>
81002f50:	83 c3 01             	add    $0x1,%ebx
81002f53:	8b 45 14             	mov    0x14(%ebp),%eax
81002f56:	c1 e8 02             	shr    $0x2,%eax
81002f59:	89 da                	mov    %ebx,%edx
81002f5b:	39 d0                	cmp    %edx,%eax
81002f5d:	77 c3                	ja     81002f22 <__sfputs_r+0x23>
81002f5f:	eb 3c                	jmp    81002f9d <__sfputs_r+0x9e>
81002f61:	bb 00 00 00 00       	mov    $0x0,%ebx
81002f66:	eb 2e                	jmp    81002f96 <__sfputs_r+0x97>
81002f68:	89 da                	mov    %ebx,%edx
81002f6a:	8b 45 10             	mov    0x10(%ebp),%eax
81002f6d:	01 d0                	add    %edx,%eax
81002f6f:	0f b6 00             	movzbl (%eax),%eax
81002f72:	0f be c0             	movsbl %al,%eax
81002f75:	83 ec 04             	sub    $0x4,%esp
81002f78:	ff 75 0c             	push   0xc(%ebp)
81002f7b:	50                   	push   %eax
81002f7c:	ff 75 08             	push   0x8(%ebp)
81002f7f:	e8 15 ff ff ff       	call   81002e99 <__sfputc_r>
81002f84:	83 c4 10             	add    $0x10,%esp
81002f87:	83 f8 ff             	cmp    $0xffffffff,%eax
81002f8a:	75 07                	jne    81002f93 <__sfputs_r+0x94>
81002f8c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002f91:	eb 0f                	jmp    81002fa2 <__sfputs_r+0xa3>
81002f93:	83 c3 01             	add    $0x1,%ebx
81002f96:	89 d8                	mov    %ebx,%eax
81002f98:	39 45 14             	cmp    %eax,0x14(%ebp)
81002f9b:	77 cb                	ja     81002f68 <__sfputs_r+0x69>
81002f9d:	b8 00 00 00 00       	mov    $0x0,%eax
81002fa2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002fa5:	c9                   	leave  
81002fa6:	c3                   	ret    

81002fa7 <vfiprintf>:
81002fa7:	55                   	push   %ebp
81002fa8:	89 e5                	mov    %esp,%ebp
81002faa:	83 ec 18             	sub    $0x18,%esp
81002fad:	a1 04 54 00 81       	mov    0x81005404,%eax
81002fb2:	ff 75 10             	push   0x10(%ebp)
81002fb5:	ff 75 0c             	push   0xc(%ebp)
81002fb8:	ff 75 08             	push   0x8(%ebp)
81002fbb:	50                   	push   %eax
81002fbc:	e8 0b 00 00 00       	call   81002fcc <_vfiprintf_r>
81002fc1:	83 c4 10             	add    $0x10,%esp
81002fc4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002fc7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fca:	c9                   	leave  
81002fcb:	c3                   	ret    

81002fcc <_vfiprintf_r>:
81002fcc:	55                   	push   %ebp
81002fcd:	89 e5                	mov    %esp,%ebp
81002fcf:	57                   	push   %edi
81002fd0:	56                   	push   %esi
81002fd1:	53                   	push   %ebx
81002fd2:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
81002fd8:	c7 45 e4 ff 2e 00 81 	movl   $0x81002eff,-0x1c(%ebp)
81002fdf:	8b 45 08             	mov    0x8(%ebp),%eax
81002fe2:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002fe5:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81002fe9:	74 18                	je     81003003 <_vfiprintf_r+0x37>
81002feb:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002fee:	8b 40 38             	mov    0x38(%eax),%eax
81002ff1:	85 c0                	test   %eax,%eax
81002ff3:	75 0e                	jne    81003003 <_vfiprintf_r+0x37>
81002ff5:	83 ec 0c             	sub    $0xc,%esp
81002ff8:	ff 75 e0             	push   -0x20(%ebp)
81002ffb:	e8 75 db ff ff       	call   81000b75 <__sinit>
81003000:	83 c4 10             	add    $0x10,%esp
81003003:	8b 45 0c             	mov    0xc(%ebp),%eax
81003006:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100300a:	98                   	cwtl   
8100300b:	83 e0 08             	and    $0x8,%eax
8100300e:	85 c0                	test   %eax,%eax
81003010:	74 0a                	je     8100301c <_vfiprintf_r+0x50>
81003012:	8b 45 0c             	mov    0xc(%ebp),%eax
81003015:	8b 40 10             	mov    0x10(%eax),%eax
81003018:	85 c0                	test   %eax,%eax
8100301a:	75 1f                	jne    8100303b <_vfiprintf_r+0x6f>
8100301c:	83 ec 08             	sub    $0x8,%esp
8100301f:	ff 75 0c             	push   0xc(%ebp)
81003022:	ff 75 08             	push   0x8(%ebp)
81003025:	e8 cc 14 00 00       	call   810044f6 <__swsetup_r>
8100302a:	83 c4 10             	add    $0x10,%esp
8100302d:	85 c0                	test   %eax,%eax
8100302f:	74 0a                	je     8100303b <_vfiprintf_r+0x6f>
81003031:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003036:	e9 df 02 00 00       	jmp    8100331a <_vfiprintf_r+0x34e>
8100303b:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100303e:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
81003045:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81003049:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
8100304d:	8b 45 14             	mov    0x14(%ebp),%eax
81003050:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81003056:	89 de                	mov    %ebx,%esi
81003058:	eb 03                	jmp    8100305d <_vfiprintf_r+0x91>
8100305a:	83 c3 01             	add    $0x1,%ebx
8100305d:	0f b6 03             	movzbl (%ebx),%eax
81003060:	84 c0                	test   %al,%al
81003062:	74 07                	je     8100306b <_vfiprintf_r+0x9f>
81003064:	0f b6 03             	movzbl (%ebx),%eax
81003067:	3c 25                	cmp    $0x25,%al
81003069:	75 ef                	jne    8100305a <_vfiprintf_r+0x8e>
8100306b:	89 d8                	mov    %ebx,%eax
8100306d:	29 f0                	sub    %esi,%eax
8100306f:	85 c0                	test   %eax,%eax
81003071:	74 2b                	je     8100309e <_vfiprintf_r+0xd2>
81003073:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81003079:	50                   	push   %eax
8100307a:	56                   	push   %esi
8100307b:	ff 75 0c             	push   0xc(%ebp)
8100307e:	ff 75 08             	push   0x8(%ebp)
81003081:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003084:	ff d0                	call   *%eax
81003086:	83 c4 10             	add    $0x10,%esp
81003089:	83 f8 ff             	cmp    $0xffffffff,%eax
8100308c:	0f 84 68 02 00 00    	je     810032fa <_vfiprintf_r+0x32e>
81003092:	8b 45 94             	mov    -0x6c(%ebp),%eax
81003095:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
8100309b:	89 45 94             	mov    %eax,-0x6c(%ebp)
8100309e:	0f b6 03             	movzbl (%ebx),%eax
810030a1:	84 c0                	test   %al,%al
810030a3:	0f 84 54 02 00 00    	je     810032fd <_vfiprintf_r+0x331>
810030a9:	83 c3 01             	add    $0x1,%ebx
810030ac:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
810030b3:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
810030ba:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
810030c1:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
810030c8:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
810030cc:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
810030d3:	c7 45 dc 4a 4c 00 81 	movl   $0x81004c4a,-0x24(%ebp)
810030da:	eb 1b                	jmp    810030f7 <_vfiprintf_r+0x12b>
810030dc:	8b 55 80             	mov    -0x80(%ebp),%edx
810030df:	89 f0                	mov    %esi,%eax
810030e1:	2b 45 dc             	sub    -0x24(%ebp),%eax
810030e4:	be 01 00 00 00       	mov    $0x1,%esi
810030e9:	89 c1                	mov    %eax,%ecx
810030eb:	d3 e6                	shl    %cl,%esi
810030ed:	89 f0                	mov    %esi,%eax
810030ef:	09 d0                	or     %edx,%eax
810030f1:	89 45 80             	mov    %eax,-0x80(%ebp)
810030f4:	83 c3 01             	add    $0x1,%ebx
810030f7:	0f b6 03             	movzbl (%ebx),%eax
810030fa:	0f be c0             	movsbl %al,%eax
810030fd:	83 ec 04             	sub    $0x4,%esp
81003100:	6a 05                	push   $0x5
81003102:	50                   	push   %eax
81003103:	ff 75 dc             	push   -0x24(%ebp)
81003106:	e8 45 ec ff ff       	call   81001d50 <memchr>
8100310b:	83 c4 10             	add    $0x10,%esp
8100310e:	89 c6                	mov    %eax,%esi
81003110:	85 f6                	test   %esi,%esi
81003112:	75 c8                	jne    810030dc <_vfiprintf_r+0x110>
81003114:	8b 45 80             	mov    -0x80(%ebp),%eax
81003117:	83 e0 10             	and    $0x10,%eax
8100311a:	85 c0                	test   %eax,%eax
8100311c:	74 04                	je     81003122 <_vfiprintf_r+0x156>
8100311e:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81003122:	8b 45 80             	mov    -0x80(%ebp),%eax
81003125:	83 e0 08             	and    $0x8,%eax
81003128:	85 c0                	test   %eax,%eax
8100312a:	74 04                	je     81003130 <_vfiprintf_r+0x164>
8100312c:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81003130:	0f b6 03             	movzbl (%ebx),%eax
81003133:	3c 2a                	cmp    $0x2a,%al
81003135:	75 50                	jne    81003187 <_vfiprintf_r+0x1bb>
81003137:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
8100313d:	8d 50 04             	lea    0x4(%eax),%edx
81003140:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
81003146:	8b 00                	mov    (%eax),%eax
81003148:	89 45 8c             	mov    %eax,-0x74(%ebp)
8100314b:	8b 45 8c             	mov    -0x74(%ebp),%eax
8100314e:	85 c0                	test   %eax,%eax
81003150:	79 11                	jns    81003163 <_vfiprintf_r+0x197>
81003152:	8b 45 8c             	mov    -0x74(%ebp),%eax
81003155:	f7 d8                	neg    %eax
81003157:	89 45 8c             	mov    %eax,-0x74(%ebp)
8100315a:	8b 45 80             	mov    -0x80(%ebp),%eax
8100315d:	83 c8 02             	or     $0x2,%eax
81003160:	89 45 80             	mov    %eax,-0x80(%ebp)
81003163:	83 c3 01             	add    $0x1,%ebx
81003166:	eb 2d                	jmp    81003195 <_vfiprintf_r+0x1c9>
81003168:	8b 55 8c             	mov    -0x74(%ebp),%edx
8100316b:	89 d0                	mov    %edx,%eax
8100316d:	c1 e0 02             	shl    $0x2,%eax
81003170:	01 d0                	add    %edx,%eax
81003172:	01 c0                	add    %eax,%eax
81003174:	89 c2                	mov    %eax,%edx
81003176:	0f b6 03             	movzbl (%ebx),%eax
81003179:	0f be c0             	movsbl %al,%eax
8100317c:	83 e8 30             	sub    $0x30,%eax
8100317f:	01 d0                	add    %edx,%eax
81003181:	89 45 8c             	mov    %eax,-0x74(%ebp)
81003184:	83 c3 01             	add    $0x1,%ebx
81003187:	0f b6 03             	movzbl (%ebx),%eax
8100318a:	0f be c0             	movsbl %al,%eax
8100318d:	83 e8 30             	sub    $0x30,%eax
81003190:	83 f8 09             	cmp    $0x9,%eax
81003193:	76 d3                	jbe    81003168 <_vfiprintf_r+0x19c>
81003195:	0f b6 03             	movzbl (%ebx),%eax
81003198:	3c 2e                	cmp    $0x2e,%al
8100319a:	75 67                	jne    81003203 <_vfiprintf_r+0x237>
8100319c:	83 c3 01             	add    $0x1,%ebx
8100319f:	0f b6 03             	movzbl (%ebx),%eax
810031a2:	3c 2a                	cmp    $0x2a,%al
810031a4:	75 27                	jne    810031cd <_vfiprintf_r+0x201>
810031a6:	83 c3 01             	add    $0x1,%ebx
810031a9:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810031af:	8d 50 04             	lea    0x4(%eax),%edx
810031b2:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
810031b8:	8b 00                	mov    (%eax),%eax
810031ba:	89 45 84             	mov    %eax,-0x7c(%ebp)
810031bd:	8b 45 84             	mov    -0x7c(%ebp),%eax
810031c0:	85 c0                	test   %eax,%eax
810031c2:	79 3f                	jns    81003203 <_vfiprintf_r+0x237>
810031c4:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
810031cb:	eb 36                	jmp    81003203 <_vfiprintf_r+0x237>
810031cd:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
810031d4:	eb 1f                	jmp    810031f5 <_vfiprintf_r+0x229>
810031d6:	8b 55 84             	mov    -0x7c(%ebp),%edx
810031d9:	89 d0                	mov    %edx,%eax
810031db:	c1 e0 02             	shl    $0x2,%eax
810031de:	01 d0                	add    %edx,%eax
810031e0:	01 c0                	add    %eax,%eax
810031e2:	89 c2                	mov    %eax,%edx
810031e4:	0f b6 03             	movzbl (%ebx),%eax
810031e7:	0f be c0             	movsbl %al,%eax
810031ea:	83 e8 30             	sub    $0x30,%eax
810031ed:	01 d0                	add    %edx,%eax
810031ef:	89 45 84             	mov    %eax,-0x7c(%ebp)
810031f2:	83 c3 01             	add    $0x1,%ebx
810031f5:	0f b6 03             	movzbl (%ebx),%eax
810031f8:	0f be c0             	movsbl %al,%eax
810031fb:	83 e8 30             	sub    $0x30,%eax
810031fe:	83 f8 09             	cmp    $0x9,%eax
81003201:	76 d3                	jbe    810031d6 <_vfiprintf_r+0x20a>
81003203:	c7 45 dc 50 4c 00 81 	movl   $0x81004c50,-0x24(%ebp)
8100320a:	0f b6 03             	movzbl (%ebx),%eax
8100320d:	0f be c0             	movsbl %al,%eax
81003210:	83 ec 04             	sub    $0x4,%esp
81003213:	6a 03                	push   $0x3
81003215:	50                   	push   %eax
81003216:	ff 75 dc             	push   -0x24(%ebp)
81003219:	e8 32 eb ff ff       	call   81001d50 <memchr>
8100321e:	83 c4 10             	add    $0x10,%esp
81003221:	89 c6                	mov    %eax,%esi
81003223:	85 f6                	test   %esi,%esi
81003225:	74 1b                	je     81003242 <_vfiprintf_r+0x276>
81003227:	8b 55 80             	mov    -0x80(%ebp),%edx
8100322a:	89 f0                	mov    %esi,%eax
8100322c:	2b 45 dc             	sub    -0x24(%ebp),%eax
8100322f:	be 40 00 00 00       	mov    $0x40,%esi
81003234:	89 c1                	mov    %eax,%ecx
81003236:	d3 e6                	shl    %cl,%esi
81003238:	89 f0                	mov    %esi,%eax
8100323a:	09 d0                	or     %edx,%eax
8100323c:	89 45 80             	mov    %eax,-0x80(%ebp)
8100323f:	83 c3 01             	add    $0x1,%ebx
81003242:	89 d8                	mov    %ebx,%eax
81003244:	8d 58 01             	lea    0x1(%eax),%ebx
81003247:	0f b6 00             	movzbl (%eax),%eax
8100324a:	88 45 98             	mov    %al,-0x68(%ebp)
8100324d:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
81003251:	0f be c0             	movsbl %al,%eax
81003254:	83 ec 04             	sub    $0x4,%esp
81003257:	6a 06                	push   $0x6
81003259:	50                   	push   %eax
8100325a:	68 54 4c 00 81       	push   $0x81004c54
8100325f:	e8 ec ea ff ff       	call   81001d50 <memchr>
81003264:	83 c4 10             	add    $0x10,%esp
81003267:	89 c6                	mov    %eax,%esi
81003269:	85 f6                	test   %esi,%esi
8100326b:	74 5a                	je     810032c7 <_vfiprintf_r+0x2fb>
8100326d:	b8 00 00 00 00       	mov    $0x0,%eax
81003272:	85 c0                	test   %eax,%eax
81003274:	75 2e                	jne    810032a4 <_vfiprintf_r+0x2d8>
81003276:	8b 45 80             	mov    -0x80(%ebp),%eax
81003279:	25 00 01 00 00       	and    $0x100,%eax
8100327e:	85 c0                	test   %eax,%eax
81003280:	74 11                	je     81003293 <_vfiprintf_r+0x2c7>
81003282:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81003288:	83 c0 0c             	add    $0xc,%eax
8100328b:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81003291:	eb 55                	jmp    810032e8 <_vfiprintf_r+0x31c>
81003293:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81003299:	83 c0 08             	add    $0x8,%eax
8100329c:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810032a2:	eb 44                	jmp    810032e8 <_vfiprintf_r+0x31c>
810032a4:	83 ec 0c             	sub    $0xc,%esp
810032a7:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
810032ad:	50                   	push   %eax
810032ae:	ff 75 e4             	push   -0x1c(%ebp)
810032b1:	ff 75 0c             	push   0xc(%ebp)
810032b4:	8d 45 80             	lea    -0x80(%ebp),%eax
810032b7:	50                   	push   %eax
810032b8:	ff 75 08             	push   0x8(%ebp)
810032bb:	e8 40 cd ff 7e       	call   0 <do_help-0x81000000>
810032c0:	83 c4 20             	add    $0x20,%esp
810032c3:	89 c7                	mov    %eax,%edi
810032c5:	eb 21                	jmp    810032e8 <_vfiprintf_r+0x31c>
810032c7:	83 ec 0c             	sub    $0xc,%esp
810032ca:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
810032d0:	50                   	push   %eax
810032d1:	ff 75 e4             	push   -0x1c(%ebp)
810032d4:	ff 75 0c             	push   0xc(%ebp)
810032d7:	8d 45 80             	lea    -0x80(%ebp),%eax
810032da:	50                   	push   %eax
810032db:	ff 75 08             	push   0x8(%ebp)
810032de:	e8 da 01 00 00       	call   810034bd <_printf_i>
810032e3:	83 c4 20             	add    $0x20,%esp
810032e6:	89 c7                	mov    %eax,%edi
810032e8:	83 ff ff             	cmp    $0xffffffff,%edi
810032eb:	74 13                	je     81003300 <_vfiprintf_r+0x334>
810032ed:	8b 45 94             	mov    -0x6c(%ebp),%eax
810032f0:	01 f8                	add    %edi,%eax
810032f2:	89 45 94             	mov    %eax,-0x6c(%ebp)
810032f5:	e9 5c fd ff ff       	jmp    81003056 <_vfiprintf_r+0x8a>
810032fa:	90                   	nop
810032fb:	eb 04                	jmp    81003301 <_vfiprintf_r+0x335>
810032fd:	90                   	nop
810032fe:	eb 01                	jmp    81003301 <_vfiprintf_r+0x335>
81003300:	90                   	nop
81003301:	8b 45 0c             	mov    0xc(%ebp),%eax
81003304:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003308:	98                   	cwtl   
81003309:	83 e0 40             	and    $0x40,%eax
8100330c:	85 c0                	test   %eax,%eax
8100330e:	75 05                	jne    81003315 <_vfiprintf_r+0x349>
81003310:	8b 45 94             	mov    -0x6c(%ebp),%eax
81003313:	eb 05                	jmp    8100331a <_vfiprintf_r+0x34e>
81003315:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100331a:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100331d:	5b                   	pop    %ebx
8100331e:	5e                   	pop    %esi
8100331f:	5f                   	pop    %edi
81003320:	5d                   	pop    %ebp
81003321:	c3                   	ret    

81003322 <_printf_common>:
81003322:	55                   	push   %ebp
81003323:	89 e5                	mov    %esp,%ebp
81003325:	83 ec 18             	sub    $0x18,%esp
81003328:	8b 45 0c             	mov    0xc(%ebp),%eax
8100332b:	8b 50 10             	mov    0x10(%eax),%edx
8100332e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003331:	8b 40 08             	mov    0x8(%eax),%eax
81003334:	39 c2                	cmp    %eax,%edx
81003336:	0f 4c d0             	cmovl  %eax,%edx
81003339:	8b 45 10             	mov    0x10(%ebp),%eax
8100333c:	89 10                	mov    %edx,(%eax)
8100333e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003341:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81003345:	84 c0                	test   %al,%al
81003347:	74 0d                	je     81003356 <_printf_common+0x34>
81003349:	8b 45 10             	mov    0x10(%ebp),%eax
8100334c:	8b 00                	mov    (%eax),%eax
8100334e:	8d 50 01             	lea    0x1(%eax),%edx
81003351:	8b 45 10             	mov    0x10(%ebp),%eax
81003354:	89 10                	mov    %edx,(%eax)
81003356:	8b 45 0c             	mov    0xc(%ebp),%eax
81003359:	8b 00                	mov    (%eax),%eax
8100335b:	83 e0 20             	and    $0x20,%eax
8100335e:	85 c0                	test   %eax,%eax
81003360:	74 0d                	je     8100336f <_printf_common+0x4d>
81003362:	8b 45 10             	mov    0x10(%ebp),%eax
81003365:	8b 00                	mov    (%eax),%eax
81003367:	8d 50 02             	lea    0x2(%eax),%edx
8100336a:	8b 45 10             	mov    0x10(%ebp),%eax
8100336d:	89 10                	mov    %edx,(%eax)
8100336f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003372:	8b 00                	mov    (%eax),%eax
81003374:	83 e0 06             	and    $0x6,%eax
81003377:	85 c0                	test   %eax,%eax
81003379:	75 41                	jne    810033bc <_printf_common+0x9a>
8100337b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003382:	eb 24                	jmp    810033a8 <_printf_common+0x86>
81003384:	8b 45 0c             	mov    0xc(%ebp),%eax
81003387:	83 c0 19             	add    $0x19,%eax
8100338a:	6a 01                	push   $0x1
8100338c:	50                   	push   %eax
8100338d:	ff 75 14             	push   0x14(%ebp)
81003390:	ff 75 08             	push   0x8(%ebp)
81003393:	8b 45 18             	mov    0x18(%ebp),%eax
81003396:	ff d0                	call   *%eax
81003398:	83 c4 10             	add    $0x10,%esp
8100339b:	83 f8 ff             	cmp    $0xffffffff,%eax
8100339e:	0f 84 0b 01 00 00    	je     810034af <_printf_common+0x18d>
810033a4:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810033a8:	8b 45 0c             	mov    0xc(%ebp),%eax
810033ab:	8b 50 0c             	mov    0xc(%eax),%edx
810033ae:	8b 45 10             	mov    0x10(%ebp),%eax
810033b1:	8b 08                	mov    (%eax),%ecx
810033b3:	89 d0                	mov    %edx,%eax
810033b5:	29 c8                	sub    %ecx,%eax
810033b7:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810033ba:	7c c8                	jl     81003384 <_printf_common+0x62>
810033bc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810033c3:	8b 45 0c             	mov    0xc(%ebp),%eax
810033c6:	0f b6 40 43          	movzbl 0x43(%eax),%eax
810033ca:	84 c0                	test   %al,%al
810033cc:	74 04                	je     810033d2 <_printf_common+0xb0>
810033ce:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810033d2:	8b 45 0c             	mov    0xc(%ebp),%eax
810033d5:	8b 00                	mov    (%eax),%eax
810033d7:	83 e0 20             	and    $0x20,%eax
810033da:	85 c0                	test   %eax,%eax
810033dc:	74 28                	je     81003406 <_printf_common+0xe4>
810033de:	8b 45 f4             	mov    -0xc(%ebp),%eax
810033e1:	8d 50 01             	lea    0x1(%eax),%edx
810033e4:	89 55 f4             	mov    %edx,-0xc(%ebp)
810033e7:	8b 55 0c             	mov    0xc(%ebp),%edx
810033ea:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
810033ef:	8b 45 f4             	mov    -0xc(%ebp),%eax
810033f2:	8d 50 01             	lea    0x1(%eax),%edx
810033f5:	89 55 f4             	mov    %edx,-0xc(%ebp)
810033f8:	8b 55 0c             	mov    0xc(%ebp),%edx
810033fb:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
810033ff:	8b 55 0c             	mov    0xc(%ebp),%edx
81003402:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
81003406:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003409:	8b 55 0c             	mov    0xc(%ebp),%edx
8100340c:	83 c2 43             	add    $0x43,%edx
8100340f:	50                   	push   %eax
81003410:	52                   	push   %edx
81003411:	ff 75 14             	push   0x14(%ebp)
81003414:	ff 75 08             	push   0x8(%ebp)
81003417:	8b 45 18             	mov    0x18(%ebp),%eax
8100341a:	ff d0                	call   *%eax
8100341c:	83 c4 10             	add    $0x10,%esp
8100341f:	83 f8 ff             	cmp    $0xffffffff,%eax
81003422:	0f 84 8a 00 00 00    	je     810034b2 <_printf_common+0x190>
81003428:	8b 45 0c             	mov    0xc(%ebp),%eax
8100342b:	8b 50 0c             	mov    0xc(%eax),%edx
8100342e:	8b 45 10             	mov    0x10(%ebp),%eax
81003431:	8b 08                	mov    (%eax),%ecx
81003433:	89 d0                	mov    %edx,%eax
81003435:	29 c8                	sub    %ecx,%eax
81003437:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100343a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100343d:	8b 00                	mov    (%eax),%eax
8100343f:	83 e0 06             	and    $0x6,%eax
81003442:	83 f8 04             	cmp    $0x4,%eax
81003445:	75 06                	jne    8100344d <_printf_common+0x12b>
81003447:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100344b:	79 07                	jns    81003454 <_printf_common+0x132>
8100344d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81003454:	8b 45 0c             	mov    0xc(%ebp),%eax
81003457:	8b 50 08             	mov    0x8(%eax),%edx
8100345a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100345d:	8b 40 10             	mov    0x10(%eax),%eax
81003460:	39 c2                	cmp    %eax,%edx
81003462:	7e 13                	jle    81003477 <_printf_common+0x155>
81003464:	8b 45 0c             	mov    0xc(%ebp),%eax
81003467:	8b 50 08             	mov    0x8(%eax),%edx
8100346a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100346d:	8b 48 10             	mov    0x10(%eax),%ecx
81003470:	89 d0                	mov    %edx,%eax
81003472:	29 c8                	sub    %ecx,%eax
81003474:	01 45 f4             	add    %eax,-0xc(%ebp)
81003477:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
8100347e:	eb 20                	jmp    810034a0 <_printf_common+0x17e>
81003480:	8b 45 0c             	mov    0xc(%ebp),%eax
81003483:	83 c0 1a             	add    $0x1a,%eax
81003486:	6a 01                	push   $0x1
81003488:	50                   	push   %eax
81003489:	ff 75 14             	push   0x14(%ebp)
8100348c:	ff 75 08             	push   0x8(%ebp)
8100348f:	8b 45 18             	mov    0x18(%ebp),%eax
81003492:	ff d0                	call   *%eax
81003494:	83 c4 10             	add    $0x10,%esp
81003497:	83 f8 ff             	cmp    $0xffffffff,%eax
8100349a:	74 19                	je     810034b5 <_printf_common+0x193>
8100349c:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
810034a0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810034a3:	3b 45 f4             	cmp    -0xc(%ebp),%eax
810034a6:	7c d8                	jl     81003480 <_printf_common+0x15e>
810034a8:	b8 00 00 00 00       	mov    $0x0,%eax
810034ad:	eb 0c                	jmp    810034bb <_printf_common+0x199>
810034af:	90                   	nop
810034b0:	eb 04                	jmp    810034b6 <_printf_common+0x194>
810034b2:	90                   	nop
810034b3:	eb 01                	jmp    810034b6 <_printf_common+0x194>
810034b5:	90                   	nop
810034b6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810034bb:	c9                   	leave  
810034bc:	c3                   	ret    

810034bd <_printf_i>:
810034bd:	55                   	push   %ebp
810034be:	89 e5                	mov    %esp,%ebp
810034c0:	53                   	push   %ebx
810034c1:	83 ec 24             	sub    $0x24,%esp
810034c4:	8b 45 0c             	mov    0xc(%ebp),%eax
810034c7:	83 c0 1b             	add    $0x1b,%eax
810034ca:	83 c0 28             	add    $0x28,%eax
810034cd:	89 45 ec             	mov    %eax,-0x14(%ebp)
810034d0:	c7 45 e8 5c 4c 00 81 	movl   $0x81004c5c,-0x18(%ebp)
810034d7:	8b 45 0c             	mov    0xc(%ebp),%eax
810034da:	0f b6 40 18          	movzbl 0x18(%eax),%eax
810034de:	0f be c0             	movsbl %al,%eax
810034e1:	85 c0                	test   %eax,%eax
810034e3:	0f 84 00 03 00 00    	je     810037e9 <_printf_i+0x32c>
810034e9:	85 c0                	test   %eax,%eax
810034eb:	0f 88 52 03 00 00    	js     81003843 <_printf_i+0x386>
810034f1:	83 f8 78             	cmp    $0x78,%eax
810034f4:	0f 8f 49 03 00 00    	jg     81003843 <_printf_i+0x386>
810034fa:	83 f8 58             	cmp    $0x58,%eax
810034fd:	0f 8c 40 03 00 00    	jl     81003843 <_printf_i+0x386>
81003503:	83 e8 58             	sub    $0x58,%eax
81003506:	83 f8 20             	cmp    $0x20,%eax
81003509:	0f 87 34 03 00 00    	ja     81003843 <_printf_i+0x386>
8100350f:	8b 04 85 80 4c 00 81 	mov    -0x7effb380(,%eax,4),%eax
81003516:	ff e0                	jmp    *%eax
81003518:	8b 45 18             	mov    0x18(%ebp),%eax
8100351b:	8b 00                	mov    (%eax),%eax
8100351d:	8d 48 04             	lea    0x4(%eax),%ecx
81003520:	8b 55 18             	mov    0x18(%ebp),%edx
81003523:	89 0a                	mov    %ecx,(%edx)
81003525:	8b 00                	mov    (%eax),%eax
81003527:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8100352b:	89 c2                	mov    %eax,%edx
8100352d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003530:	88 10                	mov    %dl,(%eax)
81003532:	8b 45 0c             	mov    0xc(%ebp),%eax
81003535:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100353c:	e9 1c 03 00 00       	jmp    8100385d <_printf_i+0x3a0>
81003541:	8b 45 0c             	mov    0xc(%ebp),%eax
81003544:	8b 00                	mov    (%eax),%eax
81003546:	25 80 00 00 00       	and    $0x80,%eax
8100354b:	85 c0                	test   %eax,%eax
8100354d:	74 11                	je     81003560 <_printf_i+0xa3>
8100354f:	8b 45 18             	mov    0x18(%ebp),%eax
81003552:	8b 00                	mov    (%eax),%eax
81003554:	8d 48 04             	lea    0x4(%eax),%ecx
81003557:	8b 55 18             	mov    0x18(%ebp),%edx
8100355a:	89 0a                	mov    %ecx,(%edx)
8100355c:	8b 00                	mov    (%eax),%eax
8100355e:	eb 2d                	jmp    8100358d <_printf_i+0xd0>
81003560:	8b 45 0c             	mov    0xc(%ebp),%eax
81003563:	8b 00                	mov    (%eax),%eax
81003565:	83 e0 40             	and    $0x40,%eax
81003568:	85 c0                	test   %eax,%eax
8100356a:	74 12                	je     8100357e <_printf_i+0xc1>
8100356c:	8b 45 18             	mov    0x18(%ebp),%eax
8100356f:	8b 00                	mov    (%eax),%eax
81003571:	8d 48 04             	lea    0x4(%eax),%ecx
81003574:	8b 55 18             	mov    0x18(%ebp),%edx
81003577:	89 0a                	mov    %ecx,(%edx)
81003579:	8b 00                	mov    (%eax),%eax
8100357b:	98                   	cwtl   
8100357c:	eb 0f                	jmp    8100358d <_printf_i+0xd0>
8100357e:	8b 45 18             	mov    0x18(%ebp),%eax
81003581:	8b 00                	mov    (%eax),%eax
81003583:	8d 48 04             	lea    0x4(%eax),%ecx
81003586:	8b 55 18             	mov    0x18(%ebp),%edx
81003589:	89 0a                	mov    %ecx,(%edx)
8100358b:	8b 00                	mov    (%eax),%eax
8100358d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003590:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003593:	85 c0                	test   %eax,%eax
81003595:	79 0a                	jns    810035a1 <_printf_i+0xe4>
81003597:	f7 5d f4             	negl   -0xc(%ebp)
8100359a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100359d:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
810035a1:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
810035a8:	e9 28 01 00 00       	jmp    810036d5 <_printf_i+0x218>
810035ad:	8b 45 0c             	mov    0xc(%ebp),%eax
810035b0:	8b 00                	mov    (%eax),%eax
810035b2:	25 80 00 00 00       	and    $0x80,%eax
810035b7:	85 c0                	test   %eax,%eax
810035b9:	74 11                	je     810035cc <_printf_i+0x10f>
810035bb:	8b 45 18             	mov    0x18(%ebp),%eax
810035be:	8b 00                	mov    (%eax),%eax
810035c0:	8d 48 04             	lea    0x4(%eax),%ecx
810035c3:	8b 55 18             	mov    0x18(%ebp),%edx
810035c6:	89 0a                	mov    %ecx,(%edx)
810035c8:	8b 00                	mov    (%eax),%eax
810035ca:	eb 2f                	jmp    810035fb <_printf_i+0x13e>
810035cc:	8b 45 0c             	mov    0xc(%ebp),%eax
810035cf:	8b 00                	mov    (%eax),%eax
810035d1:	83 e0 40             	and    $0x40,%eax
810035d4:	85 c0                	test   %eax,%eax
810035d6:	74 14                	je     810035ec <_printf_i+0x12f>
810035d8:	8b 45 18             	mov    0x18(%ebp),%eax
810035db:	8b 00                	mov    (%eax),%eax
810035dd:	8d 48 04             	lea    0x4(%eax),%ecx
810035e0:	8b 55 18             	mov    0x18(%ebp),%edx
810035e3:	89 0a                	mov    %ecx,(%edx)
810035e5:	8b 00                	mov    (%eax),%eax
810035e7:	0f b7 c0             	movzwl %ax,%eax
810035ea:	eb 0f                	jmp    810035fb <_printf_i+0x13e>
810035ec:	8b 45 18             	mov    0x18(%ebp),%eax
810035ef:	8b 00                	mov    (%eax),%eax
810035f1:	8d 48 04             	lea    0x4(%eax),%ecx
810035f4:	8b 55 18             	mov    0x18(%ebp),%edx
810035f7:	89 0a                	mov    %ecx,(%edx)
810035f9:	8b 00                	mov    (%eax),%eax
810035fb:	89 45 f4             	mov    %eax,-0xc(%ebp)
810035fe:	8b 45 0c             	mov    0xc(%ebp),%eax
81003601:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81003605:	3c 6f                	cmp    $0x6f,%al
81003607:	75 07                	jne    81003610 <_printf_i+0x153>
81003609:	b8 08 00 00 00       	mov    $0x8,%eax
8100360e:	eb 05                	jmp    81003615 <_printf_i+0x158>
81003610:	b8 0a 00 00 00       	mov    $0xa,%eax
81003615:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003618:	e9 b1 00 00 00       	jmp    810036ce <_printf_i+0x211>
8100361d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003620:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81003624:	eb 1d                	jmp    81003643 <_printf_i+0x186>
81003626:	8b 45 0c             	mov    0xc(%ebp),%eax
81003629:	8b 00                	mov    (%eax),%eax
8100362b:	83 c8 20             	or     $0x20,%eax
8100362e:	89 c2                	mov    %eax,%edx
81003630:	8b 45 0c             	mov    0xc(%ebp),%eax
81003633:	89 10                	mov    %edx,(%eax)
81003635:	8b 45 0c             	mov    0xc(%ebp),%eax
81003638:	c6 40 45 78          	movb   $0x78,0x45(%eax)
8100363c:	c7 45 e8 6d 4c 00 81 	movl   $0x81004c6d,-0x18(%ebp)
81003643:	8b 45 0c             	mov    0xc(%ebp),%eax
81003646:	8b 00                	mov    (%eax),%eax
81003648:	25 80 00 00 00       	and    $0x80,%eax
8100364d:	85 c0                	test   %eax,%eax
8100364f:	74 11                	je     81003662 <_printf_i+0x1a5>
81003651:	8b 45 18             	mov    0x18(%ebp),%eax
81003654:	8b 00                	mov    (%eax),%eax
81003656:	8d 48 04             	lea    0x4(%eax),%ecx
81003659:	8b 55 18             	mov    0x18(%ebp),%edx
8100365c:	89 0a                	mov    %ecx,(%edx)
8100365e:	8b 00                	mov    (%eax),%eax
81003660:	eb 2f                	jmp    81003691 <_printf_i+0x1d4>
81003662:	8b 45 0c             	mov    0xc(%ebp),%eax
81003665:	8b 00                	mov    (%eax),%eax
81003667:	83 e0 40             	and    $0x40,%eax
8100366a:	85 c0                	test   %eax,%eax
8100366c:	74 14                	je     81003682 <_printf_i+0x1c5>
8100366e:	8b 45 18             	mov    0x18(%ebp),%eax
81003671:	8b 00                	mov    (%eax),%eax
81003673:	8d 48 04             	lea    0x4(%eax),%ecx
81003676:	8b 55 18             	mov    0x18(%ebp),%edx
81003679:	89 0a                	mov    %ecx,(%edx)
8100367b:	8b 00                	mov    (%eax),%eax
8100367d:	0f b7 c0             	movzwl %ax,%eax
81003680:	eb 0f                	jmp    81003691 <_printf_i+0x1d4>
81003682:	8b 45 18             	mov    0x18(%ebp),%eax
81003685:	8b 00                	mov    (%eax),%eax
81003687:	8d 48 04             	lea    0x4(%eax),%ecx
8100368a:	8b 55 18             	mov    0x18(%ebp),%edx
8100368d:	89 0a                	mov    %ecx,(%edx)
8100368f:	8b 00                	mov    (%eax),%eax
81003691:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003694:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
8100369b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100369e:	8b 00                	mov    (%eax),%eax
810036a0:	83 e0 01             	and    $0x1,%eax
810036a3:	85 c0                	test   %eax,%eax
810036a5:	74 0f                	je     810036b6 <_printf_i+0x1f9>
810036a7:	8b 45 0c             	mov    0xc(%ebp),%eax
810036aa:	8b 00                	mov    (%eax),%eax
810036ac:	83 c8 20             	or     $0x20,%eax
810036af:	89 c2                	mov    %eax,%edx
810036b1:	8b 45 0c             	mov    0xc(%ebp),%eax
810036b4:	89 10                	mov    %edx,(%eax)
810036b6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810036ba:	75 11                	jne    810036cd <_printf_i+0x210>
810036bc:	8b 45 0c             	mov    0xc(%ebp),%eax
810036bf:	8b 00                	mov    (%eax),%eax
810036c1:	83 e0 df             	and    $0xffffffdf,%eax
810036c4:	89 c2                	mov    %eax,%edx
810036c6:	8b 45 0c             	mov    0xc(%ebp),%eax
810036c9:	89 10                	mov    %edx,(%eax)
810036cb:	eb 01                	jmp    810036ce <_printf_i+0x211>
810036cd:	90                   	nop
810036ce:	8b 45 0c             	mov    0xc(%ebp),%eax
810036d1:	c6 40 43 00          	movb   $0x0,0x43(%eax)
810036d5:	8b 45 0c             	mov    0xc(%ebp),%eax
810036d8:	8b 50 04             	mov    0x4(%eax),%edx
810036db:	8b 45 0c             	mov    0xc(%ebp),%eax
810036de:	89 50 08             	mov    %edx,0x8(%eax)
810036e1:	8b 45 0c             	mov    0xc(%ebp),%eax
810036e4:	8b 40 08             	mov    0x8(%eax),%eax
810036e7:	85 c0                	test   %eax,%eax
810036e9:	78 0f                	js     810036fa <_printf_i+0x23d>
810036eb:	8b 45 0c             	mov    0xc(%ebp),%eax
810036ee:	8b 00                	mov    (%eax),%eax
810036f0:	83 e0 fb             	and    $0xfffffffb,%eax
810036f3:	89 c2                	mov    %eax,%edx
810036f5:	8b 45 0c             	mov    0xc(%ebp),%eax
810036f8:	89 10                	mov    %edx,(%eax)
810036fa:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810036fe:	75 0a                	jne    8100370a <_printf_i+0x24d>
81003700:	8b 45 0c             	mov    0xc(%ebp),%eax
81003703:	8b 40 04             	mov    0x4(%eax),%eax
81003706:	85 c0                	test   %eax,%eax
81003708:	74 34                	je     8100373e <_printf_i+0x281>
8100370a:	8b 4d f0             	mov    -0x10(%ebp),%ecx
8100370d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003710:	ba 00 00 00 00       	mov    $0x0,%edx
81003715:	f7 f1                	div    %ecx
81003717:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100371a:	01 d0                	add    %edx,%eax
8100371c:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003720:	0f b6 10             	movzbl (%eax),%edx
81003723:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003726:	88 10                	mov    %dl,(%eax)
81003728:	8b 5d f0             	mov    -0x10(%ebp),%ebx
8100372b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100372e:	ba 00 00 00 00       	mov    $0x0,%edx
81003733:	f7 f3                	div    %ebx
81003735:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003738:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100373c:	75 cc                	jne    8100370a <_printf_i+0x24d>
8100373e:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81003742:	75 26                	jne    8100376a <_printf_i+0x2ad>
81003744:	8b 45 0c             	mov    0xc(%ebp),%eax
81003747:	8b 00                	mov    (%eax),%eax
81003749:	83 e0 01             	and    $0x1,%eax
8100374c:	85 c0                	test   %eax,%eax
8100374e:	74 1a                	je     8100376a <_printf_i+0x2ad>
81003750:	8b 45 0c             	mov    0xc(%ebp),%eax
81003753:	8b 50 04             	mov    0x4(%eax),%edx
81003756:	8b 45 0c             	mov    0xc(%ebp),%eax
81003759:	8b 40 10             	mov    0x10(%eax),%eax
8100375c:	39 c2                	cmp    %eax,%edx
8100375e:	7f 0a                	jg     8100376a <_printf_i+0x2ad>
81003760:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003764:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003767:	c6 00 30             	movb   $0x30,(%eax)
8100376a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100376d:	83 c0 1b             	add    $0x1b,%eax
81003770:	83 c0 28             	add    $0x28,%eax
81003773:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003776:	89 c2                	mov    %eax,%edx
81003778:	8b 45 0c             	mov    0xc(%ebp),%eax
8100377b:	89 50 10             	mov    %edx,0x10(%eax)
8100377e:	e9 e2 00 00 00       	jmp    81003865 <_printf_i+0x3a8>
81003783:	8b 45 0c             	mov    0xc(%ebp),%eax
81003786:	8b 00                	mov    (%eax),%eax
81003788:	25 80 00 00 00       	and    $0x80,%eax
8100378d:	85 c0                	test   %eax,%eax
8100378f:	74 19                	je     810037aa <_printf_i+0x2ed>
81003791:	8b 45 18             	mov    0x18(%ebp),%eax
81003794:	8b 00                	mov    (%eax),%eax
81003796:	8d 48 04             	lea    0x4(%eax),%ecx
81003799:	8b 55 18             	mov    0x18(%ebp),%edx
8100379c:	89 0a                	mov    %ecx,(%edx)
8100379e:	8b 00                	mov    (%eax),%eax
810037a0:	8b 55 0c             	mov    0xc(%ebp),%edx
810037a3:	8b 52 14             	mov    0x14(%edx),%edx
810037a6:	89 10                	mov    %edx,(%eax)
810037a8:	eb 3f                	jmp    810037e9 <_printf_i+0x32c>
810037aa:	8b 45 0c             	mov    0xc(%ebp),%eax
810037ad:	8b 00                	mov    (%eax),%eax
810037af:	83 e0 40             	and    $0x40,%eax
810037b2:	85 c0                	test   %eax,%eax
810037b4:	74 1c                	je     810037d2 <_printf_i+0x315>
810037b6:	8b 45 0c             	mov    0xc(%ebp),%eax
810037b9:	8b 58 14             	mov    0x14(%eax),%ebx
810037bc:	8b 45 18             	mov    0x18(%ebp),%eax
810037bf:	8b 00                	mov    (%eax),%eax
810037c1:	8d 48 04             	lea    0x4(%eax),%ecx
810037c4:	8b 55 18             	mov    0x18(%ebp),%edx
810037c7:	89 0a                	mov    %ecx,(%edx)
810037c9:	8b 00                	mov    (%eax),%eax
810037cb:	89 da                	mov    %ebx,%edx
810037cd:	66 89 10             	mov    %dx,(%eax)
810037d0:	eb 17                	jmp    810037e9 <_printf_i+0x32c>
810037d2:	8b 45 18             	mov    0x18(%ebp),%eax
810037d5:	8b 00                	mov    (%eax),%eax
810037d7:	8d 48 04             	lea    0x4(%eax),%ecx
810037da:	8b 55 18             	mov    0x18(%ebp),%edx
810037dd:	89 0a                	mov    %ecx,(%edx)
810037df:	8b 00                	mov    (%eax),%eax
810037e1:	8b 55 0c             	mov    0xc(%ebp),%edx
810037e4:	8b 52 14             	mov    0x14(%edx),%edx
810037e7:	89 10                	mov    %edx,(%eax)
810037e9:	8b 45 0c             	mov    0xc(%ebp),%eax
810037ec:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
810037f3:	eb 70                	jmp    81003865 <_printf_i+0x3a8>
810037f5:	8b 45 18             	mov    0x18(%ebp),%eax
810037f8:	8b 00                	mov    (%eax),%eax
810037fa:	8d 48 04             	lea    0x4(%eax),%ecx
810037fd:	8b 55 18             	mov    0x18(%ebp),%edx
81003800:	89 0a                	mov    %ecx,(%edx)
81003802:	8b 00                	mov    (%eax),%eax
81003804:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003807:	8b 45 0c             	mov    0xc(%ebp),%eax
8100380a:	8b 40 04             	mov    0x4(%eax),%eax
8100380d:	83 ec 04             	sub    $0x4,%esp
81003810:	50                   	push   %eax
81003811:	6a 00                	push   $0x0
81003813:	ff 75 ec             	push   -0x14(%ebp)
81003816:	e8 35 e5 ff ff       	call   81001d50 <memchr>
8100381b:	83 c4 10             	add    $0x10,%esp
8100381e:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003821:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81003825:	74 0e                	je     81003835 <_printf_i+0x378>
81003827:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100382a:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100382d:	89 c2                	mov    %eax,%edx
8100382f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003832:	89 50 04             	mov    %edx,0x4(%eax)
81003835:	8b 45 0c             	mov    0xc(%ebp),%eax
81003838:	8b 50 04             	mov    0x4(%eax),%edx
8100383b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100383e:	89 50 10             	mov    %edx,0x10(%eax)
81003841:	eb 1a                	jmp    8100385d <_printf_i+0x3a0>
81003843:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003847:	8b 45 0c             	mov    0xc(%ebp),%eax
8100384a:	0f b6 50 18          	movzbl 0x18(%eax),%edx
8100384e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003851:	88 10                	mov    %dl,(%eax)
81003853:	8b 45 0c             	mov    0xc(%ebp),%eax
81003856:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100385d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003860:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81003864:	90                   	nop
81003865:	83 ec 0c             	sub    $0xc,%esp
81003868:	ff 75 14             	push   0x14(%ebp)
8100386b:	ff 75 10             	push   0x10(%ebp)
8100386e:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003871:	50                   	push   %eax
81003872:	ff 75 0c             	push   0xc(%ebp)
81003875:	ff 75 08             	push   0x8(%ebp)
81003878:	e8 a5 fa ff ff       	call   81003322 <_printf_common>
8100387d:	83 c4 20             	add    $0x20,%esp
81003880:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003883:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
81003887:	74 72                	je     810038fb <_printf_i+0x43e>
81003889:	8b 45 0c             	mov    0xc(%ebp),%eax
8100388c:	8b 40 10             	mov    0x10(%eax),%eax
8100388f:	50                   	push   %eax
81003890:	ff 75 ec             	push   -0x14(%ebp)
81003893:	ff 75 10             	push   0x10(%ebp)
81003896:	ff 75 08             	push   0x8(%ebp)
81003899:	8b 45 14             	mov    0x14(%ebp),%eax
8100389c:	ff d0                	call   *%eax
8100389e:	83 c4 10             	add    $0x10,%esp
810038a1:	83 f8 ff             	cmp    $0xffffffff,%eax
810038a4:	74 58                	je     810038fe <_printf_i+0x441>
810038a6:	8b 45 0c             	mov    0xc(%ebp),%eax
810038a9:	8b 00                	mov    (%eax),%eax
810038ab:	83 e0 02             	and    $0x2,%eax
810038ae:	85 c0                	test   %eax,%eax
810038b0:	74 39                	je     810038eb <_printf_i+0x42e>
810038b2:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810038b9:	eb 20                	jmp    810038db <_printf_i+0x41e>
810038bb:	8b 45 0c             	mov    0xc(%ebp),%eax
810038be:	83 c0 19             	add    $0x19,%eax
810038c1:	6a 01                	push   $0x1
810038c3:	50                   	push   %eax
810038c4:	ff 75 10             	push   0x10(%ebp)
810038c7:	ff 75 08             	push   0x8(%ebp)
810038ca:	8b 45 14             	mov    0x14(%ebp),%eax
810038cd:	ff d0                	call   *%eax
810038cf:	83 c4 10             	add    $0x10,%esp
810038d2:	83 f8 ff             	cmp    $0xffffffff,%eax
810038d5:	74 2a                	je     81003901 <_printf_i+0x444>
810038d7:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810038db:	8b 45 0c             	mov    0xc(%ebp),%eax
810038de:	8b 40 0c             	mov    0xc(%eax),%eax
810038e1:	8b 55 d8             	mov    -0x28(%ebp),%edx
810038e4:	29 d0                	sub    %edx,%eax
810038e6:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810038e9:	7c d0                	jl     810038bb <_printf_i+0x3fe>
810038eb:	8b 45 0c             	mov    0xc(%ebp),%eax
810038ee:	8b 50 0c             	mov    0xc(%eax),%edx
810038f1:	8b 45 d8             	mov    -0x28(%ebp),%eax
810038f4:	39 c2                	cmp    %eax,%edx
810038f6:	0f 4d c2             	cmovge %edx,%eax
810038f9:	eb 0c                	jmp    81003907 <_printf_i+0x44a>
810038fb:	90                   	nop
810038fc:	eb 04                	jmp    81003902 <_printf_i+0x445>
810038fe:	90                   	nop
810038ff:	eb 01                	jmp    81003902 <_printf_i+0x445>
81003901:	90                   	nop
81003902:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003907:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100390a:	c9                   	leave  
8100390b:	c3                   	ret    

8100390c <_read_r>:
8100390c:	55                   	push   %ebp
8100390d:	89 e5                	mov    %esp,%ebp
8100390f:	83 ec 18             	sub    $0x18,%esp
81003912:	c7 05 2c 60 00 81 00 	movl   $0x0,0x8100602c
81003919:	00 00 00 
8100391c:	83 ec 04             	sub    $0x4,%esp
8100391f:	ff 75 14             	push   0x14(%ebp)
81003922:	ff 75 10             	push   0x10(%ebp)
81003925:	ff 75 0c             	push   0xc(%ebp)
81003928:	e8 ed c9 ff ff       	call   8100031a <read>
8100392d:	83 c4 10             	add    $0x10,%esp
81003930:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003933:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003937:	75 14                	jne    8100394d <_read_r+0x41>
81003939:	a1 2c 60 00 81       	mov    0x8100602c,%eax
8100393e:	85 c0                	test   %eax,%eax
81003940:	74 0b                	je     8100394d <_read_r+0x41>
81003942:	8b 15 2c 60 00 81    	mov    0x8100602c,%edx
81003948:	8b 45 08             	mov    0x8(%ebp),%eax
8100394b:	89 10                	mov    %edx,(%eax)
8100394d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003950:	c9                   	leave  
81003951:	c3                   	ret    

81003952 <_realloc_r>:
81003952:	55                   	push   %ebp
81003953:	89 e5                	mov    %esp,%ebp
81003955:	83 ec 78             	sub    $0x78,%esp
81003958:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100395c:	75 16                	jne    81003974 <_realloc_r+0x22>
8100395e:	83 ec 08             	sub    $0x8,%esp
81003961:	ff 75 10             	push   0x10(%ebp)
81003964:	ff 75 08             	push   0x8(%ebp)
81003967:	e8 c2 db ff ff       	call   8100152e <_malloc_r>
8100396c:	83 c4 10             	add    $0x10,%esp
8100396f:	e9 b6 08 00 00       	jmp    8100422a <_realloc_r+0x8d8>
81003974:	83 ec 0c             	sub    $0xc,%esp
81003977:	ff 75 08             	push   0x8(%ebp)
8100397a:	e8 39 e5 ff ff       	call   81001eb8 <__malloc_lock>
8100397f:	83 c4 10             	add    $0x10,%esp
81003982:	8b 45 0c             	mov    0xc(%ebp),%eax
81003985:	83 e8 08             	sub    $0x8,%eax
81003988:	89 45 c4             	mov    %eax,-0x3c(%ebp)
8100398b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100398e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003991:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003994:	8b 40 04             	mov    0x4(%eax),%eax
81003997:	83 e0 fc             	and    $0xfffffffc,%eax
8100399a:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100399d:	8b 45 c0             	mov    -0x40(%ebp),%eax
810039a0:	89 45 f0             	mov    %eax,-0x10(%ebp)
810039a3:	8b 45 10             	mov    0x10(%ebp),%eax
810039a6:	83 c0 0b             	add    $0xb,%eax
810039a9:	83 f8 16             	cmp    $0x16,%eax
810039ac:	76 0b                	jbe    810039b9 <_realloc_r+0x67>
810039ae:	8b 45 10             	mov    0x10(%ebp),%eax
810039b1:	83 c0 0b             	add    $0xb,%eax
810039b4:	83 e0 f8             	and    $0xfffffff8,%eax
810039b7:	eb 05                	jmp    810039be <_realloc_r+0x6c>
810039b9:	b8 10 00 00 00       	mov    $0x10,%eax
810039be:	89 45 bc             	mov    %eax,-0x44(%ebp)
810039c1:	8b 45 bc             	mov    -0x44(%ebp),%eax
810039c4:	85 c0                	test   %eax,%eax
810039c6:	78 08                	js     810039d0 <_realloc_r+0x7e>
810039c8:	8b 45 bc             	mov    -0x44(%ebp),%eax
810039cb:	3b 45 10             	cmp    0x10(%ebp),%eax
810039ce:	73 13                	jae    810039e3 <_realloc_r+0x91>
810039d0:	8b 45 08             	mov    0x8(%ebp),%eax
810039d3:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810039d9:	b8 00 00 00 00       	mov    $0x0,%eax
810039de:	e9 47 08 00 00       	jmp    8100422a <_realloc_r+0x8d8>
810039e3:	8b 55 c0             	mov    -0x40(%ebp),%edx
810039e6:	8b 45 bc             	mov    -0x44(%ebp),%eax
810039e9:	39 c2                	cmp    %eax,%edx
810039eb:	0f 8d 8b 07 00 00    	jge    8100417c <_realloc_r+0x82a>
810039f1:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810039f4:	8b 45 c0             	mov    -0x40(%ebp),%eax
810039f7:	01 d0                	add    %edx,%eax
810039f9:	89 45 ec             	mov    %eax,-0x14(%ebp)
810039fc:	b8 20 54 00 81       	mov    $0x81005420,%eax
81003a01:	8b 40 08             	mov    0x8(%eax),%eax
81003a04:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81003a07:	74 1e                	je     81003a27 <_realloc_r+0xd5>
81003a09:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003a0c:	8b 40 04             	mov    0x4(%eax),%eax
81003a0f:	83 e0 fe             	and    $0xfffffffe,%eax
81003a12:	89 c2                	mov    %eax,%edx
81003a14:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003a17:	01 d0                	add    %edx,%eax
81003a19:	8b 40 04             	mov    0x4(%eax),%eax
81003a1c:	83 e0 01             	and    $0x1,%eax
81003a1f:	85 c0                	test   %eax,%eax
81003a21:	0f 85 ca 00 00 00    	jne    81003af1 <_realloc_r+0x19f>
81003a27:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003a2a:	8b 40 04             	mov    0x4(%eax),%eax
81003a2d:	83 e0 fc             	and    $0xfffffffc,%eax
81003a30:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003a33:	b8 20 54 00 81       	mov    $0x81005420,%eax
81003a38:	8b 40 08             	mov    0x8(%eax),%eax
81003a3b:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81003a3e:	75 71                	jne    81003ab1 <_realloc_r+0x15f>
81003a40:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003a43:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003a46:	01 d0                	add    %edx,%eax
81003a48:	89 c2                	mov    %eax,%edx
81003a4a:	8b 45 bc             	mov    -0x44(%ebp),%eax
81003a4d:	83 c0 10             	add    $0x10,%eax
81003a50:	39 c2                	cmp    %eax,%edx
81003a52:	0f 8c a9 00 00 00    	jl     81003b01 <_realloc_r+0x1af>
81003a58:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003a5b:	01 45 f0             	add    %eax,-0x10(%ebp)
81003a5e:	ba 20 54 00 81       	mov    $0x81005420,%edx
81003a63:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81003a66:	8b 45 bc             	mov    -0x44(%ebp),%eax
81003a69:	01 c8                	add    %ecx,%eax
81003a6b:	89 42 08             	mov    %eax,0x8(%edx)
81003a6e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003a71:	2b 45 bc             	sub    -0x44(%ebp),%eax
81003a74:	89 c2                	mov    %eax,%edx
81003a76:	b8 20 54 00 81       	mov    $0x81005420,%eax
81003a7b:	8b 40 08             	mov    0x8(%eax),%eax
81003a7e:	83 ca 01             	or     $0x1,%edx
81003a81:	89 50 04             	mov    %edx,0x4(%eax)
81003a84:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003a87:	8b 40 04             	mov    0x4(%eax),%eax
81003a8a:	83 e0 01             	and    $0x1,%eax
81003a8d:	0b 45 bc             	or     -0x44(%ebp),%eax
81003a90:	89 c2                	mov    %eax,%edx
81003a92:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003a95:	89 50 04             	mov    %edx,0x4(%eax)
81003a98:	83 ec 0c             	sub    $0xc,%esp
81003a9b:	ff 75 08             	push   0x8(%ebp)
81003a9e:	e8 1b e4 ff ff       	call   81001ebe <__malloc_unlock>
81003aa3:	83 c4 10             	add    $0x10,%esp
81003aa6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003aa9:	83 c0 08             	add    $0x8,%eax
81003aac:	e9 79 07 00 00       	jmp    8100422a <_realloc_r+0x8d8>
81003ab1:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003ab4:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003ab7:	01 d0                	add    %edx,%eax
81003ab9:	89 c2                	mov    %eax,%edx
81003abb:	8b 45 bc             	mov    -0x44(%ebp),%eax
81003abe:	39 c2                	cmp    %eax,%edx
81003ac0:	7c 3f                	jl     81003b01 <_realloc_r+0x1af>
81003ac2:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003ac5:	8b 40 0c             	mov    0xc(%eax),%eax
81003ac8:	89 45 b8             	mov    %eax,-0x48(%ebp)
81003acb:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003ace:	8b 40 08             	mov    0x8(%eax),%eax
81003ad1:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81003ad4:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81003ad7:	8b 55 b8             	mov    -0x48(%ebp),%edx
81003ada:	89 50 0c             	mov    %edx,0xc(%eax)
81003add:	8b 45 b8             	mov    -0x48(%ebp),%eax
81003ae0:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81003ae3:	89 50 08             	mov    %edx,0x8(%eax)
81003ae6:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003ae9:	01 45 f0             	add    %eax,-0x10(%ebp)
81003aec:	e9 8c 06 00 00       	jmp    8100417d <_realloc_r+0x82b>
81003af1:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81003af8:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81003aff:	eb 01                	jmp    81003b02 <_realloc_r+0x1b0>
81003b01:	90                   	nop
81003b02:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003b05:	8b 40 04             	mov    0x4(%eax),%eax
81003b08:	83 e0 01             	and    $0x1,%eax
81003b0b:	85 c0                	test   %eax,%eax
81003b0d:	0f 85 d6 04 00 00    	jne    81003fe9 <_realloc_r+0x697>
81003b13:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003b16:	8b 00                	mov    (%eax),%eax
81003b18:	f7 d8                	neg    %eax
81003b1a:	89 c2                	mov    %eax,%edx
81003b1c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003b1f:	01 d0                	add    %edx,%eax
81003b21:	89 45 b0             	mov    %eax,-0x50(%ebp)
81003b24:	8b 45 b0             	mov    -0x50(%ebp),%eax
81003b27:	8b 40 04             	mov    0x4(%eax),%eax
81003b2a:	83 e0 fc             	and    $0xfffffffc,%eax
81003b2d:	89 45 ac             	mov    %eax,-0x54(%ebp)
81003b30:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81003b34:	0f 84 4a 03 00 00    	je     81003e84 <_realloc_r+0x532>
81003b3a:	b8 20 54 00 81       	mov    $0x81005420,%eax
81003b3f:	8b 40 08             	mov    0x8(%eax),%eax
81003b42:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81003b45:	0f 85 b0 01 00 00    	jne    81003cfb <_realloc_r+0x3a9>
81003b4b:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003b4e:	8b 45 ac             	mov    -0x54(%ebp),%eax
81003b51:	01 c2                	add    %eax,%edx
81003b53:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003b56:	01 d0                	add    %edx,%eax
81003b58:	89 c2                	mov    %eax,%edx
81003b5a:	8b 45 bc             	mov    -0x44(%ebp),%eax
81003b5d:	83 c0 10             	add    $0x10,%eax
81003b60:	39 c2                	cmp    %eax,%edx
81003b62:	0f 8c 1c 03 00 00    	jl     81003e84 <_realloc_r+0x532>
81003b68:	8b 45 b0             	mov    -0x50(%ebp),%eax
81003b6b:	8b 40 0c             	mov    0xc(%eax),%eax
81003b6e:	89 45 b8             	mov    %eax,-0x48(%ebp)
81003b71:	8b 45 b0             	mov    -0x50(%ebp),%eax
81003b74:	8b 40 08             	mov    0x8(%eax),%eax
81003b77:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81003b7a:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81003b7d:	8b 55 b8             	mov    -0x48(%ebp),%edx
81003b80:	89 50 0c             	mov    %edx,0xc(%eax)
81003b83:	8b 45 b8             	mov    -0x48(%ebp),%eax
81003b86:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81003b89:	89 50 08             	mov    %edx,0x8(%eax)
81003b8c:	8b 45 b0             	mov    -0x50(%ebp),%eax
81003b8f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003b92:	8b 55 ac             	mov    -0x54(%ebp),%edx
81003b95:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003b98:	01 d0                	add    %edx,%eax
81003b9a:	01 45 f0             	add    %eax,-0x10(%ebp)
81003b9d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ba0:	83 c0 08             	add    $0x8,%eax
81003ba3:	89 45 a8             	mov    %eax,-0x58(%ebp)
81003ba6:	8b 45 c0             	mov    -0x40(%ebp),%eax
81003ba9:	83 e8 04             	sub    $0x4,%eax
81003bac:	89 45 a0             	mov    %eax,-0x60(%ebp)
81003baf:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81003bb3:	0f 87 de 00 00 00    	ja     81003c97 <_realloc_r+0x345>
81003bb9:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bbc:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003bbf:	8b 45 a8             	mov    -0x58(%ebp),%eax
81003bc2:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003bc5:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81003bc9:	0f 86 90 00 00 00    	jbe    81003c5f <_realloc_r+0x30d>
81003bcf:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81003bd2:	8d 42 04             	lea    0x4(%edx),%eax
81003bd5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003bd8:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003bdb:	8d 48 04             	lea    0x4(%eax),%ecx
81003bde:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81003be1:	8b 12                	mov    (%edx),%edx
81003be3:	89 10                	mov    %edx,(%eax)
81003be5:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81003be8:	8d 42 04             	lea    0x4(%edx),%eax
81003beb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003bee:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003bf1:	8d 48 04             	lea    0x4(%eax),%ecx
81003bf4:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81003bf7:	8b 12                	mov    (%edx),%edx
81003bf9:	89 10                	mov    %edx,(%eax)
81003bfb:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81003bff:	76 5e                	jbe    81003c5f <_realloc_r+0x30d>
81003c01:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81003c04:	8d 42 04             	lea    0x4(%edx),%eax
81003c07:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003c0a:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003c0d:	8d 48 04             	lea    0x4(%eax),%ecx
81003c10:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81003c13:	8b 12                	mov    (%edx),%edx
81003c15:	89 10                	mov    %edx,(%eax)
81003c17:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81003c1a:	8d 42 04             	lea    0x4(%edx),%eax
81003c1d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003c20:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003c23:	8d 48 04             	lea    0x4(%eax),%ecx
81003c26:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81003c29:	8b 12                	mov    (%edx),%edx
81003c2b:	89 10                	mov    %edx,(%eax)
81003c2d:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81003c31:	76 2c                	jbe    81003c5f <_realloc_r+0x30d>
81003c33:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81003c36:	8d 42 04             	lea    0x4(%edx),%eax
81003c39:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003c3c:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003c3f:	8d 48 04             	lea    0x4(%eax),%ecx
81003c42:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81003c45:	8b 12                	mov    (%edx),%edx
81003c47:	89 10                	mov    %edx,(%eax)
81003c49:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81003c4c:	8d 42 04             	lea    0x4(%edx),%eax
81003c4f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003c52:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003c55:	8d 48 04             	lea    0x4(%eax),%ecx
81003c58:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81003c5b:	8b 12                	mov    (%edx),%edx
81003c5d:	89 10                	mov    %edx,(%eax)
81003c5f:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81003c62:	8d 42 04             	lea    0x4(%edx),%eax
81003c65:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003c68:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003c6b:	8d 48 04             	lea    0x4(%eax),%ecx
81003c6e:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81003c71:	8b 12                	mov    (%edx),%edx
81003c73:	89 10                	mov    %edx,(%eax)
81003c75:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81003c78:	8d 42 04             	lea    0x4(%edx),%eax
81003c7b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003c7e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003c81:	8d 48 04             	lea    0x4(%eax),%ecx
81003c84:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81003c87:	8b 12                	mov    (%edx),%edx
81003c89:	89 10                	mov    %edx,(%eax)
81003c8b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003c8e:	8b 10                	mov    (%eax),%edx
81003c90:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003c93:	89 10                	mov    %edx,(%eax)
81003c95:	eb 14                	jmp    81003cab <_realloc_r+0x359>
81003c97:	83 ec 04             	sub    $0x4,%esp
81003c9a:	ff 75 a0             	push   -0x60(%ebp)
81003c9d:	ff 75 0c             	push   0xc(%ebp)
81003ca0:	ff 75 a8             	push   -0x58(%ebp)
81003ca3:	e8 88 f0 ff ff       	call   81002d30 <memmove>
81003ca8:	83 c4 10             	add    $0x10,%esp
81003cab:	ba 20 54 00 81       	mov    $0x81005420,%edx
81003cb0:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003cb3:	8b 45 bc             	mov    -0x44(%ebp),%eax
81003cb6:	01 c8                	add    %ecx,%eax
81003cb8:	89 42 08             	mov    %eax,0x8(%edx)
81003cbb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003cbe:	2b 45 bc             	sub    -0x44(%ebp),%eax
81003cc1:	89 c2                	mov    %eax,%edx
81003cc3:	b8 20 54 00 81       	mov    $0x81005420,%eax
81003cc8:	8b 40 08             	mov    0x8(%eax),%eax
81003ccb:	83 ca 01             	or     $0x1,%edx
81003cce:	89 50 04             	mov    %edx,0x4(%eax)
81003cd1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003cd4:	8b 40 04             	mov    0x4(%eax),%eax
81003cd7:	83 e0 01             	and    $0x1,%eax
81003cda:	0b 45 bc             	or     -0x44(%ebp),%eax
81003cdd:	89 c2                	mov    %eax,%edx
81003cdf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ce2:	89 50 04             	mov    %edx,0x4(%eax)
81003ce5:	83 ec 0c             	sub    $0xc,%esp
81003ce8:	ff 75 08             	push   0x8(%ebp)
81003ceb:	e8 ce e1 ff ff       	call   81001ebe <__malloc_unlock>
81003cf0:	83 c4 10             	add    $0x10,%esp
81003cf3:	8b 45 a8             	mov    -0x58(%ebp),%eax
81003cf6:	e9 2f 05 00 00       	jmp    8100422a <_realloc_r+0x8d8>
81003cfb:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003cfe:	8b 45 ac             	mov    -0x54(%ebp),%eax
81003d01:	01 c2                	add    %eax,%edx
81003d03:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d06:	01 d0                	add    %edx,%eax
81003d08:	89 c2                	mov    %eax,%edx
81003d0a:	8b 45 bc             	mov    -0x44(%ebp),%eax
81003d0d:	39 c2                	cmp    %eax,%edx
81003d0f:	0f 8c 6f 01 00 00    	jl     81003e84 <_realloc_r+0x532>
81003d15:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003d18:	8b 40 0c             	mov    0xc(%eax),%eax
81003d1b:	89 45 b8             	mov    %eax,-0x48(%ebp)
81003d1e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003d21:	8b 40 08             	mov    0x8(%eax),%eax
81003d24:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81003d27:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81003d2a:	8b 55 b8             	mov    -0x48(%ebp),%edx
81003d2d:	89 50 0c             	mov    %edx,0xc(%eax)
81003d30:	8b 45 b8             	mov    -0x48(%ebp),%eax
81003d33:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81003d36:	89 50 08             	mov    %edx,0x8(%eax)
81003d39:	8b 45 b0             	mov    -0x50(%ebp),%eax
81003d3c:	8b 40 0c             	mov    0xc(%eax),%eax
81003d3f:	89 45 b8             	mov    %eax,-0x48(%ebp)
81003d42:	8b 45 b0             	mov    -0x50(%ebp),%eax
81003d45:	8b 40 08             	mov    0x8(%eax),%eax
81003d48:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81003d4b:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81003d4e:	8b 55 b8             	mov    -0x48(%ebp),%edx
81003d51:	89 50 0c             	mov    %edx,0xc(%eax)
81003d54:	8b 45 b8             	mov    -0x48(%ebp),%eax
81003d57:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81003d5a:	89 50 08             	mov    %edx,0x8(%eax)
81003d5d:	8b 45 b0             	mov    -0x50(%ebp),%eax
81003d60:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d63:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003d66:	8b 45 ac             	mov    -0x54(%ebp),%eax
81003d69:	01 d0                	add    %edx,%eax
81003d6b:	01 45 f0             	add    %eax,-0x10(%ebp)
81003d6e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d71:	83 c0 08             	add    $0x8,%eax
81003d74:	89 45 a8             	mov    %eax,-0x58(%ebp)
81003d77:	8b 45 c0             	mov    -0x40(%ebp),%eax
81003d7a:	83 e8 04             	sub    $0x4,%eax
81003d7d:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81003d80:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81003d84:	0f 87 e1 00 00 00    	ja     81003e6b <_realloc_r+0x519>
81003d8a:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d8d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003d90:	8b 45 a8             	mov    -0x58(%ebp),%eax
81003d93:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003d96:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81003d9a:	0f 86 90 00 00 00    	jbe    81003e30 <_realloc_r+0x4de>
81003da0:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003da3:	8d 42 04             	lea    0x4(%edx),%eax
81003da6:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003da9:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003dac:	8d 48 04             	lea    0x4(%eax),%ecx
81003daf:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81003db2:	8b 12                	mov    (%edx),%edx
81003db4:	89 10                	mov    %edx,(%eax)
81003db6:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003db9:	8d 42 04             	lea    0x4(%edx),%eax
81003dbc:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003dbf:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003dc2:	8d 48 04             	lea    0x4(%eax),%ecx
81003dc5:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81003dc8:	8b 12                	mov    (%edx),%edx
81003dca:	89 10                	mov    %edx,(%eax)
81003dcc:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81003dd0:	76 5e                	jbe    81003e30 <_realloc_r+0x4de>
81003dd2:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003dd5:	8d 42 04             	lea    0x4(%edx),%eax
81003dd8:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003ddb:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003dde:	8d 48 04             	lea    0x4(%eax),%ecx
81003de1:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81003de4:	8b 12                	mov    (%edx),%edx
81003de6:	89 10                	mov    %edx,(%eax)
81003de8:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003deb:	8d 42 04             	lea    0x4(%edx),%eax
81003dee:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003df1:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003df4:	8d 48 04             	lea    0x4(%eax),%ecx
81003df7:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81003dfa:	8b 12                	mov    (%edx),%edx
81003dfc:	89 10                	mov    %edx,(%eax)
81003dfe:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81003e02:	76 2c                	jbe    81003e30 <_realloc_r+0x4de>
81003e04:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003e07:	8d 42 04             	lea    0x4(%edx),%eax
81003e0a:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003e0d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003e10:	8d 48 04             	lea    0x4(%eax),%ecx
81003e13:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81003e16:	8b 12                	mov    (%edx),%edx
81003e18:	89 10                	mov    %edx,(%eax)
81003e1a:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003e1d:	8d 42 04             	lea    0x4(%edx),%eax
81003e20:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003e23:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003e26:	8d 48 04             	lea    0x4(%eax),%ecx
81003e29:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81003e2c:	8b 12                	mov    (%edx),%edx
81003e2e:	89 10                	mov    %edx,(%eax)
81003e30:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003e33:	8d 42 04             	lea    0x4(%edx),%eax
81003e36:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003e39:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003e3c:	8d 48 04             	lea    0x4(%eax),%ecx
81003e3f:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81003e42:	8b 12                	mov    (%edx),%edx
81003e44:	89 10                	mov    %edx,(%eax)
81003e46:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003e49:	8d 42 04             	lea    0x4(%edx),%eax
81003e4c:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003e4f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003e52:	8d 48 04             	lea    0x4(%eax),%ecx
81003e55:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81003e58:	8b 12                	mov    (%edx),%edx
81003e5a:	89 10                	mov    %edx,(%eax)
81003e5c:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003e5f:	8b 10                	mov    (%eax),%edx
81003e61:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003e64:	89 10                	mov    %edx,(%eax)
81003e66:	e9 12 03 00 00       	jmp    8100417d <_realloc_r+0x82b>
81003e6b:	83 ec 04             	sub    $0x4,%esp
81003e6e:	ff 75 a4             	push   -0x5c(%ebp)
81003e71:	ff 75 0c             	push   0xc(%ebp)
81003e74:	ff 75 a8             	push   -0x58(%ebp)
81003e77:	e8 b4 ee ff ff       	call   81002d30 <memmove>
81003e7c:	83 c4 10             	add    $0x10,%esp
81003e7f:	e9 f9 02 00 00       	jmp    8100417d <_realloc_r+0x82b>
81003e84:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81003e88:	0f 84 5b 01 00 00    	je     81003fe9 <_realloc_r+0x697>
81003e8e:	8b 55 ac             	mov    -0x54(%ebp),%edx
81003e91:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003e94:	01 d0                	add    %edx,%eax
81003e96:	89 c2                	mov    %eax,%edx
81003e98:	8b 45 bc             	mov    -0x44(%ebp),%eax
81003e9b:	39 c2                	cmp    %eax,%edx
81003e9d:	0f 8c 46 01 00 00    	jl     81003fe9 <_realloc_r+0x697>
81003ea3:	8b 45 b0             	mov    -0x50(%ebp),%eax
81003ea6:	8b 40 0c             	mov    0xc(%eax),%eax
81003ea9:	89 45 b8             	mov    %eax,-0x48(%ebp)
81003eac:	8b 45 b0             	mov    -0x50(%ebp),%eax
81003eaf:	8b 40 08             	mov    0x8(%eax),%eax
81003eb2:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81003eb5:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81003eb8:	8b 55 b8             	mov    -0x48(%ebp),%edx
81003ebb:	89 50 0c             	mov    %edx,0xc(%eax)
81003ebe:	8b 45 b8             	mov    -0x48(%ebp),%eax
81003ec1:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81003ec4:	89 50 08             	mov    %edx,0x8(%eax)
81003ec7:	8b 45 b0             	mov    -0x50(%ebp),%eax
81003eca:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003ecd:	8b 45 ac             	mov    -0x54(%ebp),%eax
81003ed0:	01 45 f0             	add    %eax,-0x10(%ebp)
81003ed3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ed6:	83 c0 08             	add    $0x8,%eax
81003ed9:	89 45 a8             	mov    %eax,-0x58(%ebp)
81003edc:	8b 45 c0             	mov    -0x40(%ebp),%eax
81003edf:	83 e8 04             	sub    $0x4,%eax
81003ee2:	89 45 9c             	mov    %eax,-0x64(%ebp)
81003ee5:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
81003ee9:	0f 87 e1 00 00 00    	ja     81003fd0 <_realloc_r+0x67e>
81003eef:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ef2:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003ef5:	8b 45 a8             	mov    -0x58(%ebp),%eax
81003ef8:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003efb:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81003eff:	0f 86 90 00 00 00    	jbe    81003f95 <_realloc_r+0x643>
81003f05:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81003f08:	8d 42 04             	lea    0x4(%edx),%eax
81003f0b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003f0e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003f11:	8d 48 04             	lea    0x4(%eax),%ecx
81003f14:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81003f17:	8b 12                	mov    (%edx),%edx
81003f19:	89 10                	mov    %edx,(%eax)
81003f1b:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81003f1e:	8d 42 04             	lea    0x4(%edx),%eax
81003f21:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003f24:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003f27:	8d 48 04             	lea    0x4(%eax),%ecx
81003f2a:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81003f2d:	8b 12                	mov    (%edx),%edx
81003f2f:	89 10                	mov    %edx,(%eax)
81003f31:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
81003f35:	76 5e                	jbe    81003f95 <_realloc_r+0x643>
81003f37:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81003f3a:	8d 42 04             	lea    0x4(%edx),%eax
81003f3d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003f40:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003f43:	8d 48 04             	lea    0x4(%eax),%ecx
81003f46:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81003f49:	8b 12                	mov    (%edx),%edx
81003f4b:	89 10                	mov    %edx,(%eax)
81003f4d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81003f50:	8d 42 04             	lea    0x4(%edx),%eax
81003f53:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003f56:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003f59:	8d 48 04             	lea    0x4(%eax),%ecx
81003f5c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81003f5f:	8b 12                	mov    (%edx),%edx
81003f61:	89 10                	mov    %edx,(%eax)
81003f63:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81003f67:	76 2c                	jbe    81003f95 <_realloc_r+0x643>
81003f69:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81003f6c:	8d 42 04             	lea    0x4(%edx),%eax
81003f6f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003f72:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003f75:	8d 48 04             	lea    0x4(%eax),%ecx
81003f78:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81003f7b:	8b 12                	mov    (%edx),%edx
81003f7d:	89 10                	mov    %edx,(%eax)
81003f7f:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81003f82:	8d 42 04             	lea    0x4(%edx),%eax
81003f85:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003f88:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003f8b:	8d 48 04             	lea    0x4(%eax),%ecx
81003f8e:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81003f91:	8b 12                	mov    (%edx),%edx
81003f93:	89 10                	mov    %edx,(%eax)
81003f95:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81003f98:	8d 42 04             	lea    0x4(%edx),%eax
81003f9b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003f9e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003fa1:	8d 48 04             	lea    0x4(%eax),%ecx
81003fa4:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81003fa7:	8b 12                	mov    (%edx),%edx
81003fa9:	89 10                	mov    %edx,(%eax)
81003fab:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81003fae:	8d 42 04             	lea    0x4(%edx),%eax
81003fb1:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003fb4:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003fb7:	8d 48 04             	lea    0x4(%eax),%ecx
81003fba:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81003fbd:	8b 12                	mov    (%edx),%edx
81003fbf:	89 10                	mov    %edx,(%eax)
81003fc1:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003fc4:	8b 10                	mov    (%eax),%edx
81003fc6:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003fc9:	89 10                	mov    %edx,(%eax)
81003fcb:	e9 ad 01 00 00       	jmp    8100417d <_realloc_r+0x82b>
81003fd0:	83 ec 04             	sub    $0x4,%esp
81003fd3:	ff 75 9c             	push   -0x64(%ebp)
81003fd6:	ff 75 0c             	push   0xc(%ebp)
81003fd9:	ff 75 a8             	push   -0x58(%ebp)
81003fdc:	e8 4f ed ff ff       	call   81002d30 <memmove>
81003fe1:	83 c4 10             	add    $0x10,%esp
81003fe4:	e9 94 01 00 00       	jmp    8100417d <_realloc_r+0x82b>
81003fe9:	83 ec 08             	sub    $0x8,%esp
81003fec:	ff 75 10             	push   0x10(%ebp)
81003fef:	ff 75 08             	push   0x8(%ebp)
81003ff2:	e8 37 d5 ff ff       	call   8100152e <_malloc_r>
81003ff7:	83 c4 10             	add    $0x10,%esp
81003ffa:	89 45 a8             	mov    %eax,-0x58(%ebp)
81003ffd:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81004001:	75 18                	jne    8100401b <_realloc_r+0x6c9>
81004003:	83 ec 0c             	sub    $0xc,%esp
81004006:	ff 75 08             	push   0x8(%ebp)
81004009:	e8 b0 de ff ff       	call   81001ebe <__malloc_unlock>
8100400e:	83 c4 10             	add    $0x10,%esp
81004011:	b8 00 00 00 00       	mov    $0x0,%eax
81004016:	e9 0f 02 00 00       	jmp    8100422a <_realloc_r+0x8d8>
8100401b:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100401e:	83 e8 08             	sub    $0x8,%eax
81004021:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004024:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004027:	8b 40 04             	mov    0x4(%eax),%eax
8100402a:	83 e0 fe             	and    $0xfffffffe,%eax
8100402d:	89 c2                	mov    %eax,%edx
8100402f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004032:	01 d0                	add    %edx,%eax
81004034:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81004037:	75 17                	jne    81004050 <_realloc_r+0x6fe>
81004039:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100403c:	8b 40 04             	mov    0x4(%eax),%eax
8100403f:	83 e0 fc             	and    $0xfffffffc,%eax
81004042:	01 45 f0             	add    %eax,-0x10(%ebp)
81004045:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004048:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100404b:	e9 2d 01 00 00       	jmp    8100417d <_realloc_r+0x82b>
81004050:	8b 45 c0             	mov    -0x40(%ebp),%eax
81004053:	83 e8 04             	sub    $0x4,%eax
81004056:	89 45 98             	mov    %eax,-0x68(%ebp)
81004059:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
8100405d:	0f 87 de 00 00 00    	ja     81004141 <_realloc_r+0x7ef>
81004063:	8b 45 0c             	mov    0xc(%ebp),%eax
81004066:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004069:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100406c:	89 45 c8             	mov    %eax,-0x38(%ebp)
8100406f:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81004073:	0f 86 90 00 00 00    	jbe    81004109 <_realloc_r+0x7b7>
81004079:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100407c:	8d 42 04             	lea    0x4(%edx),%eax
8100407f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004082:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004085:	8d 48 04             	lea    0x4(%eax),%ecx
81004088:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100408b:	8b 12                	mov    (%edx),%edx
8100408d:	89 10                	mov    %edx,(%eax)
8100408f:	8b 55 cc             	mov    -0x34(%ebp),%edx
81004092:	8d 42 04             	lea    0x4(%edx),%eax
81004095:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004098:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100409b:	8d 48 04             	lea    0x4(%eax),%ecx
8100409e:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810040a1:	8b 12                	mov    (%edx),%edx
810040a3:	89 10                	mov    %edx,(%eax)
810040a5:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
810040a9:	76 5e                	jbe    81004109 <_realloc_r+0x7b7>
810040ab:	8b 55 cc             	mov    -0x34(%ebp),%edx
810040ae:	8d 42 04             	lea    0x4(%edx),%eax
810040b1:	89 45 cc             	mov    %eax,-0x34(%ebp)
810040b4:	8b 45 c8             	mov    -0x38(%ebp),%eax
810040b7:	8d 48 04             	lea    0x4(%eax),%ecx
810040ba:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810040bd:	8b 12                	mov    (%edx),%edx
810040bf:	89 10                	mov    %edx,(%eax)
810040c1:	8b 55 cc             	mov    -0x34(%ebp),%edx
810040c4:	8d 42 04             	lea    0x4(%edx),%eax
810040c7:	89 45 cc             	mov    %eax,-0x34(%ebp)
810040ca:	8b 45 c8             	mov    -0x38(%ebp),%eax
810040cd:	8d 48 04             	lea    0x4(%eax),%ecx
810040d0:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810040d3:	8b 12                	mov    (%edx),%edx
810040d5:	89 10                	mov    %edx,(%eax)
810040d7:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
810040db:	76 2c                	jbe    81004109 <_realloc_r+0x7b7>
810040dd:	8b 55 cc             	mov    -0x34(%ebp),%edx
810040e0:	8d 42 04             	lea    0x4(%edx),%eax
810040e3:	89 45 cc             	mov    %eax,-0x34(%ebp)
810040e6:	8b 45 c8             	mov    -0x38(%ebp),%eax
810040e9:	8d 48 04             	lea    0x4(%eax),%ecx
810040ec:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810040ef:	8b 12                	mov    (%edx),%edx
810040f1:	89 10                	mov    %edx,(%eax)
810040f3:	8b 55 cc             	mov    -0x34(%ebp),%edx
810040f6:	8d 42 04             	lea    0x4(%edx),%eax
810040f9:	89 45 cc             	mov    %eax,-0x34(%ebp)
810040fc:	8b 45 c8             	mov    -0x38(%ebp),%eax
810040ff:	8d 48 04             	lea    0x4(%eax),%ecx
81004102:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81004105:	8b 12                	mov    (%edx),%edx
81004107:	89 10                	mov    %edx,(%eax)
81004109:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100410c:	8d 42 04             	lea    0x4(%edx),%eax
8100410f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004112:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004115:	8d 48 04             	lea    0x4(%eax),%ecx
81004118:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100411b:	8b 12                	mov    (%edx),%edx
8100411d:	89 10                	mov    %edx,(%eax)
8100411f:	8b 55 cc             	mov    -0x34(%ebp),%edx
81004122:	8d 42 04             	lea    0x4(%edx),%eax
81004125:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004128:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100412b:	8d 48 04             	lea    0x4(%eax),%ecx
8100412e:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81004131:	8b 12                	mov    (%edx),%edx
81004133:	89 10                	mov    %edx,(%eax)
81004135:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004138:	8b 10                	mov    (%eax),%edx
8100413a:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100413d:	89 10                	mov    %edx,(%eax)
8100413f:	eb 14                	jmp    81004155 <_realloc_r+0x803>
81004141:	83 ec 04             	sub    $0x4,%esp
81004144:	ff 75 98             	push   -0x68(%ebp)
81004147:	ff 75 0c             	push   0xc(%ebp)
8100414a:	ff 75 a8             	push   -0x58(%ebp)
8100414d:	e8 de eb ff ff       	call   81002d30 <memmove>
81004152:	83 c4 10             	add    $0x10,%esp
81004155:	83 ec 08             	sub    $0x8,%esp
81004158:	ff 75 0c             	push   0xc(%ebp)
8100415b:	ff 75 08             	push   0x8(%ebp)
8100415e:	e8 1f cb ff ff       	call   81000c82 <_free_r>
81004163:	83 c4 10             	add    $0x10,%esp
81004166:	83 ec 0c             	sub    $0xc,%esp
81004169:	ff 75 08             	push   0x8(%ebp)
8100416c:	e8 4d dd ff ff       	call   81001ebe <__malloc_unlock>
81004171:	83 c4 10             	add    $0x10,%esp
81004174:	8b 45 a8             	mov    -0x58(%ebp),%eax
81004177:	e9 ae 00 00 00       	jmp    8100422a <_realloc_r+0x8d8>
8100417c:	90                   	nop
8100417d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004180:	2b 45 bc             	sub    -0x44(%ebp),%eax
81004183:	89 45 94             	mov    %eax,-0x6c(%ebp)
81004186:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
8100418a:	76 5d                	jbe    810041e9 <_realloc_r+0x897>
8100418c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100418f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81004192:	01 d0                	add    %edx,%eax
81004194:	89 45 90             	mov    %eax,-0x70(%ebp)
81004197:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100419a:	8b 40 04             	mov    0x4(%eax),%eax
8100419d:	83 e0 01             	and    $0x1,%eax
810041a0:	0b 45 bc             	or     -0x44(%ebp),%eax
810041a3:	89 c2                	mov    %eax,%edx
810041a5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041a8:	89 50 04             	mov    %edx,0x4(%eax)
810041ab:	8b 45 94             	mov    -0x6c(%ebp),%eax
810041ae:	83 c8 01             	or     $0x1,%eax
810041b1:	89 c2                	mov    %eax,%edx
810041b3:	8b 45 90             	mov    -0x70(%ebp),%eax
810041b6:	89 50 04             	mov    %edx,0x4(%eax)
810041b9:	8b 55 90             	mov    -0x70(%ebp),%edx
810041bc:	8b 45 94             	mov    -0x6c(%ebp),%eax
810041bf:	01 d0                	add    %edx,%eax
810041c1:	8b 50 04             	mov    0x4(%eax),%edx
810041c4:	8b 4d 90             	mov    -0x70(%ebp),%ecx
810041c7:	8b 45 94             	mov    -0x6c(%ebp),%eax
810041ca:	01 c8                	add    %ecx,%eax
810041cc:	83 ca 01             	or     $0x1,%edx
810041cf:	89 50 04             	mov    %edx,0x4(%eax)
810041d2:	8b 45 90             	mov    -0x70(%ebp),%eax
810041d5:	83 c0 08             	add    $0x8,%eax
810041d8:	83 ec 08             	sub    $0x8,%esp
810041db:	50                   	push   %eax
810041dc:	ff 75 08             	push   0x8(%ebp)
810041df:	e8 9e ca ff ff       	call   81000c82 <_free_r>
810041e4:	83 c4 10             	add    $0x10,%esp
810041e7:	eb 2d                	jmp    81004216 <_realloc_r+0x8c4>
810041e9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041ec:	8b 40 04             	mov    0x4(%eax),%eax
810041ef:	83 e0 01             	and    $0x1,%eax
810041f2:	0b 45 f0             	or     -0x10(%ebp),%eax
810041f5:	89 c2                	mov    %eax,%edx
810041f7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041fa:	89 50 04             	mov    %edx,0x4(%eax)
810041fd:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004200:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004203:	01 d0                	add    %edx,%eax
81004205:	8b 50 04             	mov    0x4(%eax),%edx
81004208:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100420b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100420e:	01 c8                	add    %ecx,%eax
81004210:	83 ca 01             	or     $0x1,%edx
81004213:	89 50 04             	mov    %edx,0x4(%eax)
81004216:	83 ec 0c             	sub    $0xc,%esp
81004219:	ff 75 08             	push   0x8(%ebp)
8100421c:	e8 9d dc ff ff       	call   81001ebe <__malloc_unlock>
81004221:	83 c4 10             	add    $0x10,%esp
81004224:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004227:	83 c0 08             	add    $0x8,%eax
8100422a:	c9                   	leave  
8100422b:	c3                   	ret    

8100422c <cleanup_glue>:
8100422c:	55                   	push   %ebp
8100422d:	89 e5                	mov    %esp,%ebp
8100422f:	83 ec 08             	sub    $0x8,%esp
81004232:	8b 45 0c             	mov    0xc(%ebp),%eax
81004235:	8b 00                	mov    (%eax),%eax
81004237:	85 c0                	test   %eax,%eax
81004239:	74 14                	je     8100424f <cleanup_glue+0x23>
8100423b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100423e:	8b 00                	mov    (%eax),%eax
81004240:	83 ec 08             	sub    $0x8,%esp
81004243:	50                   	push   %eax
81004244:	ff 75 08             	push   0x8(%ebp)
81004247:	e8 e0 ff ff ff       	call   8100422c <cleanup_glue>
8100424c:	83 c4 10             	add    $0x10,%esp
8100424f:	83 ec 08             	sub    $0x8,%esp
81004252:	ff 75 0c             	push   0xc(%ebp)
81004255:	ff 75 08             	push   0x8(%ebp)
81004258:	e8 25 ca ff ff       	call   81000c82 <_free_r>
8100425d:	83 c4 10             	add    $0x10,%esp
81004260:	90                   	nop
81004261:	c9                   	leave  
81004262:	c3                   	ret    

81004263 <_reclaim_reent>:
81004263:	55                   	push   %ebp
81004264:	89 e5                	mov    %esp,%ebp
81004266:	83 ec 28             	sub    $0x28,%esp
81004269:	a1 04 54 00 81       	mov    0x81005404,%eax
8100426e:	39 45 08             	cmp    %eax,0x8(%ebp)
81004271:	0f 84 49 01 00 00    	je     810043c0 <_reclaim_reent+0x15d>
81004277:	8b 45 08             	mov    0x8(%ebp),%eax
8100427a:	8b 40 4c             	mov    0x4c(%eax),%eax
8100427d:	85 c0                	test   %eax,%eax
8100427f:	74 64                	je     810042e5 <_reclaim_reent+0x82>
81004281:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004288:	eb 3e                	jmp    810042c8 <_reclaim_reent+0x65>
8100428a:	8b 45 08             	mov    0x8(%ebp),%eax
8100428d:	8b 50 4c             	mov    0x4c(%eax),%edx
81004290:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004293:	c1 e0 02             	shl    $0x2,%eax
81004296:	01 d0                	add    %edx,%eax
81004298:	8b 00                	mov    (%eax),%eax
8100429a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100429d:	eb 1f                	jmp    810042be <_reclaim_reent+0x5b>
8100429f:	8b 45 f0             	mov    -0x10(%ebp),%eax
810042a2:	89 45 e8             	mov    %eax,-0x18(%ebp)
810042a5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810042a8:	8b 00                	mov    (%eax),%eax
810042aa:	89 45 f0             	mov    %eax,-0x10(%ebp)
810042ad:	83 ec 08             	sub    $0x8,%esp
810042b0:	ff 75 e8             	push   -0x18(%ebp)
810042b3:	ff 75 08             	push   0x8(%ebp)
810042b6:	e8 c7 c9 ff ff       	call   81000c82 <_free_r>
810042bb:	83 c4 10             	add    $0x10,%esp
810042be:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810042c2:	75 db                	jne    8100429f <_reclaim_reent+0x3c>
810042c4:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810042c8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810042cb:	83 f8 1f             	cmp    $0x1f,%eax
810042ce:	76 ba                	jbe    8100428a <_reclaim_reent+0x27>
810042d0:	8b 45 08             	mov    0x8(%ebp),%eax
810042d3:	8b 40 4c             	mov    0x4c(%eax),%eax
810042d6:	83 ec 08             	sub    $0x8,%esp
810042d9:	50                   	push   %eax
810042da:	ff 75 08             	push   0x8(%ebp)
810042dd:	e8 a0 c9 ff ff       	call   81000c82 <_free_r>
810042e2:	83 c4 10             	add    $0x10,%esp
810042e5:	8b 45 08             	mov    0x8(%ebp),%eax
810042e8:	8b 40 40             	mov    0x40(%eax),%eax
810042eb:	85 c0                	test   %eax,%eax
810042ed:	74 15                	je     81004304 <_reclaim_reent+0xa1>
810042ef:	8b 45 08             	mov    0x8(%ebp),%eax
810042f2:	8b 40 40             	mov    0x40(%eax),%eax
810042f5:	83 ec 08             	sub    $0x8,%esp
810042f8:	50                   	push   %eax
810042f9:	ff 75 08             	push   0x8(%ebp)
810042fc:	e8 81 c9 ff ff       	call   81000c82 <_free_r>
81004301:	83 c4 10             	add    $0x10,%esp
81004304:	8b 45 08             	mov    0x8(%ebp),%eax
81004307:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
8100430d:	85 c0                	test   %eax,%eax
8100430f:	74 50                	je     81004361 <_reclaim_reent+0xfe>
81004311:	8b 45 08             	mov    0x8(%ebp),%eax
81004314:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
8100431a:	8b 55 08             	mov    0x8(%ebp),%edx
8100431d:	81 c2 4c 01 00 00    	add    $0x14c,%edx
81004323:	39 d0                	cmp    %edx,%eax
81004325:	74 3a                	je     81004361 <_reclaim_reent+0xfe>
81004327:	8b 45 08             	mov    0x8(%ebp),%eax
8100432a:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81004330:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004333:	eb 1f                	jmp    81004354 <_reclaim_reent+0xf1>
81004335:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004338:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100433b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100433e:	8b 00                	mov    (%eax),%eax
81004340:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004343:	83 ec 08             	sub    $0x8,%esp
81004346:	ff 75 e4             	push   -0x1c(%ebp)
81004349:	ff 75 08             	push   0x8(%ebp)
8100434c:	e8 31 c9 ff ff       	call   81000c82 <_free_r>
81004351:	83 c4 10             	add    $0x10,%esp
81004354:	8b 45 08             	mov    0x8(%ebp),%eax
81004357:	05 4c 01 00 00       	add    $0x14c,%eax
8100435c:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100435f:	75 d4                	jne    81004335 <_reclaim_reent+0xd2>
81004361:	8b 45 08             	mov    0x8(%ebp),%eax
81004364:	8b 40 54             	mov    0x54(%eax),%eax
81004367:	85 c0                	test   %eax,%eax
81004369:	74 15                	je     81004380 <_reclaim_reent+0x11d>
8100436b:	8b 45 08             	mov    0x8(%ebp),%eax
8100436e:	8b 40 54             	mov    0x54(%eax),%eax
81004371:	83 ec 08             	sub    $0x8,%esp
81004374:	50                   	push   %eax
81004375:	ff 75 08             	push   0x8(%ebp)
81004378:	e8 05 c9 ff ff       	call   81000c82 <_free_r>
8100437d:	83 c4 10             	add    $0x10,%esp
81004380:	8b 45 08             	mov    0x8(%ebp),%eax
81004383:	8b 40 38             	mov    0x38(%eax),%eax
81004386:	85 c0                	test   %eax,%eax
81004388:	74 36                	je     810043c0 <_reclaim_reent+0x15d>
8100438a:	8b 45 08             	mov    0x8(%ebp),%eax
8100438d:	8b 40 3c             	mov    0x3c(%eax),%eax
81004390:	83 ec 0c             	sub    $0xc,%esp
81004393:	ff 75 08             	push   0x8(%ebp)
81004396:	ff d0                	call   *%eax
81004398:	83 c4 10             	add    $0x10,%esp
8100439b:	8b 45 08             	mov    0x8(%ebp),%eax
8100439e:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810043a4:	85 c0                	test   %eax,%eax
810043a6:	74 18                	je     810043c0 <_reclaim_reent+0x15d>
810043a8:	8b 45 08             	mov    0x8(%ebp),%eax
810043ab:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810043b1:	83 ec 08             	sub    $0x8,%esp
810043b4:	50                   	push   %eax
810043b5:	ff 75 08             	push   0x8(%ebp)
810043b8:	e8 6f fe ff ff       	call   8100422c <cleanup_glue>
810043bd:	83 c4 10             	add    $0x10,%esp
810043c0:	90                   	nop
810043c1:	c9                   	leave  
810043c2:	c3                   	ret    

810043c3 <__swbuf_r>:
810043c3:	55                   	push   %ebp
810043c4:	89 e5                	mov    %esp,%ebp
810043c6:	57                   	push   %edi
810043c7:	56                   	push   %esi
810043c8:	53                   	push   %ebx
810043c9:	83 ec 1c             	sub    $0x1c,%esp
810043cc:	8b 7d 0c             	mov    0xc(%ebp),%edi
810043cf:	8b 5d 10             	mov    0x10(%ebp),%ebx
810043d2:	8b 45 08             	mov    0x8(%ebp),%eax
810043d5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810043d8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810043dc:	74 18                	je     810043f6 <__swbuf_r+0x33>
810043de:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810043e1:	8b 40 38             	mov    0x38(%eax),%eax
810043e4:	85 c0                	test   %eax,%eax
810043e6:	75 0e                	jne    810043f6 <__swbuf_r+0x33>
810043e8:	83 ec 0c             	sub    $0xc,%esp
810043eb:	ff 75 e4             	push   -0x1c(%ebp)
810043ee:	e8 82 c7 ff ff       	call   81000b75 <__sinit>
810043f3:	83 c4 10             	add    $0x10,%esp
810043f6:	8b 43 18             	mov    0x18(%ebx),%eax
810043f9:	89 43 08             	mov    %eax,0x8(%ebx)
810043fc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004400:	98                   	cwtl   
81004401:	83 e0 08             	and    $0x8,%eax
81004404:	85 c0                	test   %eax,%eax
81004406:	74 07                	je     8100440f <__swbuf_r+0x4c>
81004408:	8b 43 10             	mov    0x10(%ebx),%eax
8100440b:	85 c0                	test   %eax,%eax
8100440d:	75 1d                	jne    8100442c <__swbuf_r+0x69>
8100440f:	83 ec 08             	sub    $0x8,%esp
81004412:	53                   	push   %ebx
81004413:	ff 75 08             	push   0x8(%ebp)
81004416:	e8 db 00 00 00       	call   810044f6 <__swsetup_r>
8100441b:	83 c4 10             	add    $0x10,%esp
8100441e:	85 c0                	test   %eax,%eax
81004420:	74 0a                	je     8100442c <__swbuf_r+0x69>
81004422:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004427:	e9 a1 00 00 00       	jmp    810044cd <__swbuf_r+0x10a>
8100442c:	89 f8                	mov    %edi,%eax
8100442e:	0f b6 f8             	movzbl %al,%edi
81004431:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004435:	98                   	cwtl   
81004436:	25 00 20 00 00       	and    $0x2000,%eax
8100443b:	85 c0                	test   %eax,%eax
8100443d:	75 14                	jne    81004453 <__swbuf_r+0x90>
8100443f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004443:	80 cc 20             	or     $0x20,%ah
81004446:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100444a:	8b 43 64             	mov    0x64(%ebx),%eax
8100444d:	80 e4 df             	and    $0xdf,%ah
81004450:	89 43 64             	mov    %eax,0x64(%ebx)
81004453:	8b 03                	mov    (%ebx),%eax
81004455:	8b 53 10             	mov    0x10(%ebx),%edx
81004458:	29 d0                	sub    %edx,%eax
8100445a:	89 c6                	mov    %eax,%esi
8100445c:	8b 43 14             	mov    0x14(%ebx),%eax
8100445f:	39 c6                	cmp    %eax,%esi
81004461:	7c 1f                	jl     81004482 <__swbuf_r+0xbf>
81004463:	83 ec 08             	sub    $0x8,%esp
81004466:	53                   	push   %ebx
81004467:	ff 75 08             	push   0x8(%ebp)
8100446a:	e8 03 c2 ff ff       	call   81000672 <_fflush_r>
8100446f:	83 c4 10             	add    $0x10,%esp
81004472:	85 c0                	test   %eax,%eax
81004474:	74 07                	je     8100447d <__swbuf_r+0xba>
81004476:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100447b:	eb 50                	jmp    810044cd <__swbuf_r+0x10a>
8100447d:	be 00 00 00 00       	mov    $0x0,%esi
81004482:	8b 43 08             	mov    0x8(%ebx),%eax
81004485:	83 e8 01             	sub    $0x1,%eax
81004488:	89 43 08             	mov    %eax,0x8(%ebx)
8100448b:	8b 03                	mov    (%ebx),%eax
8100448d:	8d 50 01             	lea    0x1(%eax),%edx
81004490:	89 13                	mov    %edx,(%ebx)
81004492:	89 fa                	mov    %edi,%edx
81004494:	88 10                	mov    %dl,(%eax)
81004496:	83 c6 01             	add    $0x1,%esi
81004499:	8b 43 14             	mov    0x14(%ebx),%eax
8100449c:	39 c6                	cmp    %eax,%esi
8100449e:	74 11                	je     810044b1 <__swbuf_r+0xee>
810044a0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810044a4:	98                   	cwtl   
810044a5:	83 e0 01             	and    $0x1,%eax
810044a8:	85 c0                	test   %eax,%eax
810044aa:	74 1f                	je     810044cb <__swbuf_r+0x108>
810044ac:	83 ff 0a             	cmp    $0xa,%edi
810044af:	75 1a                	jne    810044cb <__swbuf_r+0x108>
810044b1:	83 ec 08             	sub    $0x8,%esp
810044b4:	53                   	push   %ebx
810044b5:	ff 75 08             	push   0x8(%ebp)
810044b8:	e8 b5 c1 ff ff       	call   81000672 <_fflush_r>
810044bd:	83 c4 10             	add    $0x10,%esp
810044c0:	85 c0                	test   %eax,%eax
810044c2:	74 07                	je     810044cb <__swbuf_r+0x108>
810044c4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810044c9:	eb 02                	jmp    810044cd <__swbuf_r+0x10a>
810044cb:	89 f8                	mov    %edi,%eax
810044cd:	8d 65 f4             	lea    -0xc(%ebp),%esp
810044d0:	5b                   	pop    %ebx
810044d1:	5e                   	pop    %esi
810044d2:	5f                   	pop    %edi
810044d3:	5d                   	pop    %ebp
810044d4:	c3                   	ret    

810044d5 <__swbuf>:
810044d5:	55                   	push   %ebp
810044d6:	89 e5                	mov    %esp,%ebp
810044d8:	83 ec 08             	sub    $0x8,%esp
810044db:	8b 55 08             	mov    0x8(%ebp),%edx
810044de:	8b 4d 0c             	mov    0xc(%ebp),%ecx
810044e1:	a1 04 54 00 81       	mov    0x81005404,%eax
810044e6:	83 ec 04             	sub    $0x4,%esp
810044e9:	51                   	push   %ecx
810044ea:	52                   	push   %edx
810044eb:	50                   	push   %eax
810044ec:	e8 d2 fe ff ff       	call   810043c3 <__swbuf_r>
810044f1:	83 c4 10             	add    $0x10,%esp
810044f4:	c9                   	leave  
810044f5:	c3                   	ret    

810044f6 <__swsetup_r>:
810044f6:	55                   	push   %ebp
810044f7:	89 e5                	mov    %esp,%ebp
810044f9:	53                   	push   %ebx
810044fa:	83 ec 14             	sub    $0x14,%esp
810044fd:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004500:	a1 04 54 00 81       	mov    0x81005404,%eax
81004505:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004508:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100450c:	74 18                	je     81004526 <__swsetup_r+0x30>
8100450e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004511:	8b 40 38             	mov    0x38(%eax),%eax
81004514:	85 c0                	test   %eax,%eax
81004516:	75 0e                	jne    81004526 <__swsetup_r+0x30>
81004518:	83 ec 0c             	sub    $0xc,%esp
8100451b:	ff 75 f4             	push   -0xc(%ebp)
8100451e:	e8 52 c6 ff ff       	call   81000b75 <__sinit>
81004523:	83 c4 10             	add    $0x10,%esp
81004526:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100452a:	98                   	cwtl   
8100452b:	83 e0 08             	and    $0x8,%eax
8100452e:	85 c0                	test   %eax,%eax
81004530:	0f 85 82 00 00 00    	jne    810045b8 <__swsetup_r+0xc2>
81004536:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100453a:	98                   	cwtl   
8100453b:	83 e0 10             	and    $0x10,%eax
8100453e:	85 c0                	test   %eax,%eax
81004540:	75 1e                	jne    81004560 <__swsetup_r+0x6a>
81004542:	8b 45 08             	mov    0x8(%ebp),%eax
81004545:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
8100454b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100454f:	83 c8 40             	or     $0x40,%eax
81004552:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004556:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100455b:	e9 ec 00 00 00       	jmp    8100464c <__swsetup_r+0x156>
81004560:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004564:	98                   	cwtl   
81004565:	83 e0 04             	and    $0x4,%eax
81004568:	85 c0                	test   %eax,%eax
8100456a:	74 41                	je     810045ad <__swsetup_r+0xb7>
8100456c:	8b 43 30             	mov    0x30(%ebx),%eax
8100456f:	85 c0                	test   %eax,%eax
81004571:	74 23                	je     81004596 <__swsetup_r+0xa0>
81004573:	8b 53 30             	mov    0x30(%ebx),%edx
81004576:	8d 43 40             	lea    0x40(%ebx),%eax
81004579:	39 c2                	cmp    %eax,%edx
8100457b:	74 12                	je     8100458f <__swsetup_r+0x99>
8100457d:	8b 43 30             	mov    0x30(%ebx),%eax
81004580:	83 ec 08             	sub    $0x8,%esp
81004583:	50                   	push   %eax
81004584:	ff 75 08             	push   0x8(%ebp)
81004587:	e8 f6 c6 ff ff       	call   81000c82 <_free_r>
8100458c:	83 c4 10             	add    $0x10,%esp
8100458f:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81004596:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100459a:	83 e0 db             	and    $0xffffffdb,%eax
8100459d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810045a1:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810045a8:	8b 43 10             	mov    0x10(%ebx),%eax
810045ab:	89 03                	mov    %eax,(%ebx)
810045ad:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810045b1:	83 c8 08             	or     $0x8,%eax
810045b4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810045b8:	8b 43 10             	mov    0x10(%ebx),%eax
810045bb:	85 c0                	test   %eax,%eax
810045bd:	75 2b                	jne    810045ea <__swsetup_r+0xf4>
810045bf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810045c3:	98                   	cwtl   
810045c4:	25 00 02 00 00       	and    $0x200,%eax
810045c9:	85 c0                	test   %eax,%eax
810045cb:	74 0e                	je     810045db <__swsetup_r+0xe5>
810045cd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810045d1:	98                   	cwtl   
810045d2:	25 80 00 00 00       	and    $0x80,%eax
810045d7:	85 c0                	test   %eax,%eax
810045d9:	74 0f                	je     810045ea <__swsetup_r+0xf4>
810045db:	83 ec 08             	sub    $0x8,%esp
810045de:	53                   	push   %ebx
810045df:	ff 75 08             	push   0x8(%ebp)
810045e2:	e8 c0 e5 ff ff       	call   81002ba7 <__smakebuf_r>
810045e7:	83 c4 10             	add    $0x10,%esp
810045ea:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810045ee:	98                   	cwtl   
810045ef:	83 e0 01             	and    $0x1,%eax
810045f2:	85 c0                	test   %eax,%eax
810045f4:	74 11                	je     81004607 <__swsetup_r+0x111>
810045f6:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810045fd:	8b 43 14             	mov    0x14(%ebx),%eax
81004600:	f7 d8                	neg    %eax
81004602:	89 43 18             	mov    %eax,0x18(%ebx)
81004605:	eb 19                	jmp    81004620 <__swsetup_r+0x12a>
81004607:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100460b:	98                   	cwtl   
8100460c:	83 e0 02             	and    $0x2,%eax
8100460f:	85 c0                	test   %eax,%eax
81004611:	75 05                	jne    81004618 <__swsetup_r+0x122>
81004613:	8b 43 14             	mov    0x14(%ebx),%eax
81004616:	eb 05                	jmp    8100461d <__swsetup_r+0x127>
81004618:	b8 00 00 00 00       	mov    $0x0,%eax
8100461d:	89 43 08             	mov    %eax,0x8(%ebx)
81004620:	8b 43 10             	mov    0x10(%ebx),%eax
81004623:	85 c0                	test   %eax,%eax
81004625:	75 20                	jne    81004647 <__swsetup_r+0x151>
81004627:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100462b:	98                   	cwtl   
8100462c:	25 80 00 00 00       	and    $0x80,%eax
81004631:	85 c0                	test   %eax,%eax
81004633:	74 12                	je     81004647 <__swsetup_r+0x151>
81004635:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004639:	83 c8 40             	or     $0x40,%eax
8100463c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004640:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004645:	eb 05                	jmp    8100464c <__swsetup_r+0x156>
81004647:	b8 00 00 00 00       	mov    $0x0,%eax
8100464c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100464f:	c9                   	leave  
81004650:	c3                   	ret    

81004651 <__sputc_r>:
81004651:	55                   	push   %ebp
81004652:	89 e5                	mov    %esp,%ebp
81004654:	83 ec 08             	sub    $0x8,%esp
81004657:	8b 45 10             	mov    0x10(%ebp),%eax
8100465a:	8b 40 08             	mov    0x8(%eax),%eax
8100465d:	8d 50 ff             	lea    -0x1(%eax),%edx
81004660:	8b 45 10             	mov    0x10(%ebp),%eax
81004663:	89 50 08             	mov    %edx,0x8(%eax)
81004666:	8b 45 10             	mov    0x10(%ebp),%eax
81004669:	8b 40 08             	mov    0x8(%eax),%eax
8100466c:	85 c0                	test   %eax,%eax
8100466e:	79 17                	jns    81004687 <__sputc_r+0x36>
81004670:	8b 45 10             	mov    0x10(%ebp),%eax
81004673:	8b 50 08             	mov    0x8(%eax),%edx
81004676:	8b 45 10             	mov    0x10(%ebp),%eax
81004679:	8b 40 18             	mov    0x18(%eax),%eax
8100467c:	39 c2                	cmp    %eax,%edx
8100467e:	7c 21                	jl     810046a1 <__sputc_r+0x50>
81004680:	8b 45 0c             	mov    0xc(%ebp),%eax
81004683:	3c 0a                	cmp    $0xa,%al
81004685:	74 1a                	je     810046a1 <__sputc_r+0x50>
81004687:	8b 45 10             	mov    0x10(%ebp),%eax
8100468a:	8b 00                	mov    (%eax),%eax
8100468c:	8d 48 01             	lea    0x1(%eax),%ecx
8100468f:	8b 55 10             	mov    0x10(%ebp),%edx
81004692:	89 0a                	mov    %ecx,(%edx)
81004694:	8b 55 0c             	mov    0xc(%ebp),%edx
81004697:	88 10                	mov    %dl,(%eax)
81004699:	0f b6 00             	movzbl (%eax),%eax
8100469c:	0f b6 c0             	movzbl %al,%eax
8100469f:	eb 14                	jmp    810046b5 <__sputc_r+0x64>
810046a1:	83 ec 04             	sub    $0x4,%esp
810046a4:	ff 75 10             	push   0x10(%ebp)
810046a7:	ff 75 0c             	push   0xc(%ebp)
810046aa:	ff 75 08             	push   0x8(%ebp)
810046ad:	e8 11 fd ff ff       	call   810043c3 <__swbuf_r>
810046b2:	83 c4 10             	add    $0x10,%esp
810046b5:	c9                   	leave  
810046b6:	c3                   	ret    

810046b7 <__fputwc>:
810046b7:	55                   	push   %ebp
810046b8:	89 e5                	mov    %esp,%ebp
810046ba:	83 ec 18             	sub    $0x18,%esp
810046bd:	e8 3a 02 00 00       	call   810048fc <__locale_mb_cur_max>
810046c2:	83 f8 01             	cmp    $0x1,%eax
810046c5:	75 1e                	jne    810046e5 <__fputwc+0x2e>
810046c7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810046cb:	7e 18                	jle    810046e5 <__fputwc+0x2e>
810046cd:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
810046d4:	7f 0f                	jg     810046e5 <__fputwc+0x2e>
810046d6:	8b 45 0c             	mov    0xc(%ebp),%eax
810046d9:	88 45 ef             	mov    %al,-0x11(%ebp)
810046dc:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
810046e3:	eb 3c                	jmp    81004721 <__fputwc+0x6a>
810046e5:	8b 45 10             	mov    0x10(%ebp),%eax
810046e8:	83 c0 5c             	add    $0x5c,%eax
810046eb:	50                   	push   %eax
810046ec:	ff 75 0c             	push   0xc(%ebp)
810046ef:	8d 45 ef             	lea    -0x11(%ebp),%eax
810046f2:	50                   	push   %eax
810046f3:	ff 75 08             	push   0x8(%ebp)
810046f6:	e8 83 03 00 00       	call   81004a7e <_wcrtomb_r>
810046fb:	83 c4 10             	add    $0x10,%esp
810046fe:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004701:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81004705:	75 1a                	jne    81004721 <__fputwc+0x6a>
81004707:	8b 45 10             	mov    0x10(%ebp),%eax
8100470a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100470e:	83 c8 40             	or     $0x40,%eax
81004711:	89 c2                	mov    %eax,%edx
81004713:	8b 45 10             	mov    0x10(%ebp),%eax
81004716:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100471a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100471f:	eb 44                	jmp    81004765 <__fputwc+0xae>
81004721:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004728:	eb 30                	jmp    8100475a <__fputwc+0xa3>
8100472a:	8d 55 ef             	lea    -0x11(%ebp),%edx
8100472d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004730:	01 d0                	add    %edx,%eax
81004732:	0f b6 00             	movzbl (%eax),%eax
81004735:	0f b6 c0             	movzbl %al,%eax
81004738:	83 ec 04             	sub    $0x4,%esp
8100473b:	ff 75 10             	push   0x10(%ebp)
8100473e:	50                   	push   %eax
8100473f:	ff 75 08             	push   0x8(%ebp)
81004742:	e8 0a ff ff ff       	call   81004651 <__sputc_r>
81004747:	83 c4 10             	add    $0x10,%esp
8100474a:	83 f8 ff             	cmp    $0xffffffff,%eax
8100474d:	75 07                	jne    81004756 <__fputwc+0x9f>
8100474f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004754:	eb 0f                	jmp    81004765 <__fputwc+0xae>
81004756:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8100475a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100475d:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81004760:	72 c8                	jb     8100472a <__fputwc+0x73>
81004762:	8b 45 0c             	mov    0xc(%ebp),%eax
81004765:	c9                   	leave  
81004766:	c3                   	ret    

81004767 <_fputwc_r>:
81004767:	55                   	push   %ebp
81004768:	89 e5                	mov    %esp,%ebp
8100476a:	83 ec 18             	sub    $0x18,%esp
8100476d:	8b 45 10             	mov    0x10(%ebp),%eax
81004770:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004774:	98                   	cwtl   
81004775:	25 00 20 00 00       	and    $0x2000,%eax
8100477a:	85 c0                	test   %eax,%eax
8100477c:	75 24                	jne    810047a2 <_fputwc_r+0x3b>
8100477e:	8b 45 10             	mov    0x10(%ebp),%eax
81004781:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004785:	80 cc 20             	or     $0x20,%ah
81004788:	89 c2                	mov    %eax,%edx
8100478a:	8b 45 10             	mov    0x10(%ebp),%eax
8100478d:	66 89 50 0c          	mov    %dx,0xc(%eax)
81004791:	8b 45 10             	mov    0x10(%ebp),%eax
81004794:	8b 40 64             	mov    0x64(%eax),%eax
81004797:	80 cc 20             	or     $0x20,%ah
8100479a:	89 c2                	mov    %eax,%edx
8100479c:	8b 45 10             	mov    0x10(%ebp),%eax
8100479f:	89 50 64             	mov    %edx,0x64(%eax)
810047a2:	83 ec 04             	sub    $0x4,%esp
810047a5:	ff 75 10             	push   0x10(%ebp)
810047a8:	ff 75 0c             	push   0xc(%ebp)
810047ab:	ff 75 08             	push   0x8(%ebp)
810047ae:	e8 04 ff ff ff       	call   810046b7 <__fputwc>
810047b3:	83 c4 10             	add    $0x10,%esp
810047b6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810047b9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810047bc:	c9                   	leave  
810047bd:	c3                   	ret    

810047be <fputwc>:
810047be:	55                   	push   %ebp
810047bf:	89 e5                	mov    %esp,%ebp
810047c1:	83 ec 18             	sub    $0x18,%esp
810047c4:	a1 04 54 00 81       	mov    0x81005404,%eax
810047c9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810047cc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810047cf:	89 45 f0             	mov    %eax,-0x10(%ebp)
810047d2:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810047d6:	74 18                	je     810047f0 <fputwc+0x32>
810047d8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810047db:	8b 40 38             	mov    0x38(%eax),%eax
810047de:	85 c0                	test   %eax,%eax
810047e0:	75 0e                	jne    810047f0 <fputwc+0x32>
810047e2:	83 ec 0c             	sub    $0xc,%esp
810047e5:	ff 75 f0             	push   -0x10(%ebp)
810047e8:	e8 88 c3 ff ff       	call   81000b75 <__sinit>
810047ed:	83 c4 10             	add    $0x10,%esp
810047f0:	83 ec 04             	sub    $0x4,%esp
810047f3:	ff 75 0c             	push   0xc(%ebp)
810047f6:	ff 75 08             	push   0x8(%ebp)
810047f9:	ff 75 f4             	push   -0xc(%ebp)
810047fc:	e8 66 ff ff ff       	call   81004767 <_fputwc_r>
81004801:	83 c4 10             	add    $0x10,%esp
81004804:	c9                   	leave  
81004805:	c3                   	ret    

81004806 <_fstat_r>:
81004806:	55                   	push   %ebp
81004807:	89 e5                	mov    %esp,%ebp
81004809:	83 ec 18             	sub    $0x18,%esp
8100480c:	c7 05 2c 60 00 81 00 	movl   $0x0,0x8100602c
81004813:	00 00 00 
81004816:	83 ec 08             	sub    $0x8,%esp
81004819:	ff 75 10             	push   0x10(%ebp)
8100481c:	ff 75 0c             	push   0xc(%ebp)
8100481f:	e8 bf bb ff ff       	call   810003e3 <fstat>
81004824:	83 c4 10             	add    $0x10,%esp
81004827:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100482a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100482e:	75 14                	jne    81004844 <_fstat_r+0x3e>
81004830:	a1 2c 60 00 81       	mov    0x8100602c,%eax
81004835:	85 c0                	test   %eax,%eax
81004837:	74 0b                	je     81004844 <_fstat_r+0x3e>
81004839:	8b 15 2c 60 00 81    	mov    0x8100602c,%edx
8100483f:	8b 45 08             	mov    0x8(%ebp),%eax
81004842:	89 10                	mov    %edx,(%eax)
81004844:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004847:	c9                   	leave  
81004848:	c3                   	ret    

81004849 <_isatty_r>:
81004849:	55                   	push   %ebp
8100484a:	89 e5                	mov    %esp,%ebp
8100484c:	83 ec 18             	sub    $0x18,%esp
8100484f:	c7 05 2c 60 00 81 00 	movl   $0x0,0x8100602c
81004856:	00 00 00 
81004859:	83 ec 0c             	sub    $0xc,%esp
8100485c:	ff 75 0c             	push   0xc(%ebp)
8100485f:	e8 5e bb ff ff       	call   810003c2 <isatty>
81004864:	83 c4 10             	add    $0x10,%esp
81004867:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100486a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100486e:	75 14                	jne    81004884 <_isatty_r+0x3b>
81004870:	a1 2c 60 00 81       	mov    0x8100602c,%eax
81004875:	85 c0                	test   %eax,%eax
81004877:	74 0b                	je     81004884 <_isatty_r+0x3b>
81004879:	8b 15 2c 60 00 81    	mov    0x8100602c,%edx
8100487f:	8b 45 08             	mov    0x8(%ebp),%eax
81004882:	89 10                	mov    %edx,(%eax)
81004884:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004887:	c9                   	leave  
81004888:	c3                   	ret    

81004889 <__get_global_locale>:
81004889:	55                   	push   %ebp
8100488a:	89 e5                	mov    %esp,%ebp
8100488c:	b8 40 58 00 81       	mov    $0x81005840,%eax
81004891:	5d                   	pop    %ebp
81004892:	c3                   	ret    

81004893 <__get_current_locale>:
81004893:	55                   	push   %ebp
81004894:	89 e5                	mov    %esp,%ebp
81004896:	e8 ee ff ff ff       	call   81004889 <__get_global_locale>
8100489b:	5d                   	pop    %ebp
8100489c:	c3                   	ret    

8100489d <_setlocale_r>:
8100489d:	55                   	push   %ebp
8100489e:	89 e5                	mov    %esp,%ebp
810048a0:	83 ec 08             	sub    $0x8,%esp
810048a3:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810048a7:	74 4c                	je     810048f5 <_setlocale_r+0x58>
810048a9:	83 ec 08             	sub    $0x8,%esp
810048ac:	68 07 4d 00 81       	push   $0x81004d07
810048b1:	ff 75 10             	push   0x10(%ebp)
810048b4:	e8 0c 01 00 00       	call   810049c5 <strcmp>
810048b9:	83 c4 10             	add    $0x10,%esp
810048bc:	85 c0                	test   %eax,%eax
810048be:	74 35                	je     810048f5 <_setlocale_r+0x58>
810048c0:	83 ec 08             	sub    $0x8,%esp
810048c3:	68 0d 4d 00 81       	push   $0x81004d0d
810048c8:	ff 75 10             	push   0x10(%ebp)
810048cb:	e8 f5 00 00 00       	call   810049c5 <strcmp>
810048d0:	83 c4 10             	add    $0x10,%esp
810048d3:	85 c0                	test   %eax,%eax
810048d5:	74 1e                	je     810048f5 <_setlocale_r+0x58>
810048d7:	83 ec 08             	sub    $0x8,%esp
810048da:	68 06 4d 00 81       	push   $0x81004d06
810048df:	ff 75 10             	push   0x10(%ebp)
810048e2:	e8 de 00 00 00       	call   810049c5 <strcmp>
810048e7:	83 c4 10             	add    $0x10,%esp
810048ea:	85 c0                	test   %eax,%eax
810048ec:	74 07                	je     810048f5 <_setlocale_r+0x58>
810048ee:	b8 00 00 00 00       	mov    $0x0,%eax
810048f3:	eb 05                	jmp    810048fa <_setlocale_r+0x5d>
810048f5:	b8 0d 4d 00 81       	mov    $0x81004d0d,%eax
810048fa:	c9                   	leave  
810048fb:	c3                   	ret    

810048fc <__locale_mb_cur_max>:
810048fc:	55                   	push   %ebp
810048fd:	89 e5                	mov    %esp,%ebp
810048ff:	e8 8f ff ff ff       	call   81004893 <__get_current_locale>
81004904:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
8100490b:	0f be c0             	movsbl %al,%eax
8100490e:	5d                   	pop    %ebp
8100490f:	c3                   	ret    

81004910 <setlocale>:
81004910:	55                   	push   %ebp
81004911:	89 e5                	mov    %esp,%ebp
81004913:	83 ec 08             	sub    $0x8,%esp
81004916:	a1 04 54 00 81       	mov    0x81005404,%eax
8100491b:	83 ec 04             	sub    $0x4,%esp
8100491e:	ff 75 0c             	push   0xc(%ebp)
81004921:	ff 75 08             	push   0x8(%ebp)
81004924:	50                   	push   %eax
81004925:	e8 73 ff ff ff       	call   8100489d <_setlocale_r>
8100492a:	83 c4 10             	add    $0x10,%esp
8100492d:	c9                   	leave  
8100492e:	c3                   	ret    

8100492f <__get_global_locale>:
8100492f:	55                   	push   %ebp
81004930:	89 e5                	mov    %esp,%ebp
81004932:	b8 40 58 00 81       	mov    $0x81005840,%eax
81004937:	5d                   	pop    %ebp
81004938:	c3                   	ret    

81004939 <__get_current_locale>:
81004939:	55                   	push   %ebp
8100493a:	89 e5                	mov    %esp,%ebp
8100493c:	e8 ee ff ff ff       	call   8100492f <__get_global_locale>
81004941:	5d                   	pop    %ebp
81004942:	c3                   	ret    

81004943 <_mbtowc_r>:
81004943:	55                   	push   %ebp
81004944:	89 e5                	mov    %esp,%ebp
81004946:	83 ec 08             	sub    $0x8,%esp
81004949:	e8 eb ff ff ff       	call   81004939 <__get_current_locale>
8100494e:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
81004954:	83 ec 0c             	sub    $0xc,%esp
81004957:	ff 75 18             	push   0x18(%ebp)
8100495a:	ff 75 14             	push   0x14(%ebp)
8100495d:	ff 75 10             	push   0x10(%ebp)
81004960:	ff 75 0c             	push   0xc(%ebp)
81004963:	ff 75 08             	push   0x8(%ebp)
81004966:	ff d0                	call   *%eax
81004968:	83 c4 20             	add    $0x20,%esp
8100496b:	c9                   	leave  
8100496c:	c3                   	ret    

8100496d <__ascii_mbtowc>:
8100496d:	55                   	push   %ebp
8100496e:	89 e5                	mov    %esp,%ebp
81004970:	83 ec 10             	sub    $0x10,%esp
81004973:	8b 45 10             	mov    0x10(%ebp),%eax
81004976:	89 45 fc             	mov    %eax,-0x4(%ebp)
81004979:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100497d:	75 06                	jne    81004985 <__ascii_mbtowc+0x18>
8100497f:	8d 45 f8             	lea    -0x8(%ebp),%eax
81004982:	89 45 0c             	mov    %eax,0xc(%ebp)
81004985:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81004989:	75 07                	jne    81004992 <__ascii_mbtowc+0x25>
8100498b:	b8 00 00 00 00       	mov    $0x0,%eax
81004990:	eb 31                	jmp    810049c3 <__ascii_mbtowc+0x56>
81004992:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81004996:	75 07                	jne    8100499f <__ascii_mbtowc+0x32>
81004998:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
8100499d:	eb 24                	jmp    810049c3 <__ascii_mbtowc+0x56>
8100499f:	8b 45 fc             	mov    -0x4(%ebp),%eax
810049a2:	0f b6 00             	movzbl (%eax),%eax
810049a5:	0f b6 d0             	movzbl %al,%edx
810049a8:	8b 45 0c             	mov    0xc(%ebp),%eax
810049ab:	89 10                	mov    %edx,(%eax)
810049ad:	8b 45 fc             	mov    -0x4(%ebp),%eax
810049b0:	0f b6 00             	movzbl (%eax),%eax
810049b3:	84 c0                	test   %al,%al
810049b5:	75 07                	jne    810049be <__ascii_mbtowc+0x51>
810049b7:	b8 00 00 00 00       	mov    $0x0,%eax
810049bc:	eb 05                	jmp    810049c3 <__ascii_mbtowc+0x56>
810049be:	b8 01 00 00 00       	mov    $0x1,%eax
810049c3:	c9                   	leave  
810049c4:	c3                   	ret    

810049c5 <strcmp>:
810049c5:	55                   	push   %ebp
810049c6:	89 e5                	mov    %esp,%ebp
810049c8:	83 ec 10             	sub    $0x10,%esp
810049cb:	8b 55 08             	mov    0x8(%ebp),%edx
810049ce:	8b 45 0c             	mov    0xc(%ebp),%eax
810049d1:	09 d0                	or     %edx,%eax
810049d3:	83 e0 03             	and    $0x3,%eax
810049d6:	85 c0                	test   %eax,%eax
810049d8:	75 5e                	jne    81004a38 <strcmp+0x73>
810049da:	8b 45 08             	mov    0x8(%ebp),%eax
810049dd:	89 45 fc             	mov    %eax,-0x4(%ebp)
810049e0:	8b 45 0c             	mov    0xc(%ebp),%eax
810049e3:	89 45 f8             	mov    %eax,-0x8(%ebp)
810049e6:	eb 2c                	jmp    81004a14 <strcmp+0x4f>
810049e8:	8b 45 fc             	mov    -0x4(%ebp),%eax
810049eb:	8b 00                	mov    (%eax),%eax
810049ed:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
810049f3:	8b 45 fc             	mov    -0x4(%ebp),%eax
810049f6:	8b 00                	mov    (%eax),%eax
810049f8:	f7 d0                	not    %eax
810049fa:	21 d0                	and    %edx,%eax
810049fc:	25 80 80 80 80       	and    $0x80808080,%eax
81004a01:	85 c0                	test   %eax,%eax
81004a03:	74 07                	je     81004a0c <strcmp+0x47>
81004a05:	b8 00 00 00 00       	mov    $0x0,%eax
81004a0a:	eb 5c                	jmp    81004a68 <strcmp+0xa3>
81004a0c:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81004a10:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81004a14:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004a17:	8b 10                	mov    (%eax),%edx
81004a19:	8b 45 f8             	mov    -0x8(%ebp),%eax
81004a1c:	8b 00                	mov    (%eax),%eax
81004a1e:	39 c2                	cmp    %eax,%edx
81004a20:	74 c6                	je     810049e8 <strcmp+0x23>
81004a22:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004a25:	89 45 08             	mov    %eax,0x8(%ebp)
81004a28:	8b 45 f8             	mov    -0x8(%ebp),%eax
81004a2b:	89 45 0c             	mov    %eax,0xc(%ebp)
81004a2e:	eb 08                	jmp    81004a38 <strcmp+0x73>
81004a30:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81004a34:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81004a38:	8b 45 08             	mov    0x8(%ebp),%eax
81004a3b:	0f b6 00             	movzbl (%eax),%eax
81004a3e:	84 c0                	test   %al,%al
81004a40:	74 10                	je     81004a52 <strcmp+0x8d>
81004a42:	8b 45 08             	mov    0x8(%ebp),%eax
81004a45:	0f b6 10             	movzbl (%eax),%edx
81004a48:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a4b:	0f b6 00             	movzbl (%eax),%eax
81004a4e:	38 c2                	cmp    %al,%dl
81004a50:	74 de                	je     81004a30 <strcmp+0x6b>
81004a52:	8b 45 08             	mov    0x8(%ebp),%eax
81004a55:	0f b6 00             	movzbl (%eax),%eax
81004a58:	0f b6 d0             	movzbl %al,%edx
81004a5b:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a5e:	0f b6 00             	movzbl (%eax),%eax
81004a61:	0f b6 c8             	movzbl %al,%ecx
81004a64:	89 d0                	mov    %edx,%eax
81004a66:	29 c8                	sub    %ecx,%eax
81004a68:	c9                   	leave  
81004a69:	c3                   	ret    

81004a6a <__get_global_locale>:
81004a6a:	55                   	push   %ebp
81004a6b:	89 e5                	mov    %esp,%ebp
81004a6d:	b8 40 58 00 81       	mov    $0x81005840,%eax
81004a72:	5d                   	pop    %ebp
81004a73:	c3                   	ret    

81004a74 <__get_current_locale>:
81004a74:	55                   	push   %ebp
81004a75:	89 e5                	mov    %esp,%ebp
81004a77:	e8 ee ff ff ff       	call   81004a6a <__get_global_locale>
81004a7c:	5d                   	pop    %ebp
81004a7d:	c3                   	ret    

81004a7e <_wcrtomb_r>:
81004a7e:	55                   	push   %ebp
81004a7f:	89 e5                	mov    %esp,%ebp
81004a81:	83 ec 18             	sub    $0x18,%esp
81004a84:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004a8b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81004a8f:	75 21                	jne    81004ab2 <_wcrtomb_r+0x34>
81004a91:	e8 de ff ff ff       	call   81004a74 <__get_current_locale>
81004a96:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004a9c:	ff 75 14             	push   0x14(%ebp)
81004a9f:	6a 00                	push   $0x0
81004aa1:	8d 55 ea             	lea    -0x16(%ebp),%edx
81004aa4:	52                   	push   %edx
81004aa5:	ff 75 08             	push   0x8(%ebp)
81004aa8:	ff d0                	call   *%eax
81004aaa:	83 c4 10             	add    $0x10,%esp
81004aad:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004ab0:	eb 1f                	jmp    81004ad1 <_wcrtomb_r+0x53>
81004ab2:	e8 bd ff ff ff       	call   81004a74 <__get_current_locale>
81004ab7:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004abd:	ff 75 14             	push   0x14(%ebp)
81004ac0:	ff 75 10             	push   0x10(%ebp)
81004ac3:	ff 75 0c             	push   0xc(%ebp)
81004ac6:	ff 75 08             	push   0x8(%ebp)
81004ac9:	ff d0                	call   *%eax
81004acb:	83 c4 10             	add    $0x10,%esp
81004ace:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004ad1:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004ad5:	75 19                	jne    81004af0 <_wcrtomb_r+0x72>
81004ad7:	8b 45 14             	mov    0x14(%ebp),%eax
81004ada:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81004ae0:	8b 45 08             	mov    0x8(%ebp),%eax
81004ae3:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81004ae9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004aee:	eb 03                	jmp    81004af3 <_wcrtomb_r+0x75>
81004af0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004af3:	c9                   	leave  
81004af4:	c3                   	ret    

81004af5 <wcrtomb>:
81004af5:	55                   	push   %ebp
81004af6:	89 e5                	mov    %esp,%ebp
81004af8:	83 ec 28             	sub    $0x28,%esp
81004afb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004b02:	a1 04 54 00 81       	mov    0x81005404,%eax
81004b07:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004b0a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81004b0e:	75 21                	jne    81004b31 <wcrtomb+0x3c>
81004b10:	e8 5f ff ff ff       	call   81004a74 <__get_current_locale>
81004b15:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004b1b:	ff 75 10             	push   0x10(%ebp)
81004b1e:	6a 00                	push   $0x0
81004b20:	8d 55 e6             	lea    -0x1a(%ebp),%edx
81004b23:	52                   	push   %edx
81004b24:	ff 75 f0             	push   -0x10(%ebp)
81004b27:	ff d0                	call   *%eax
81004b29:	83 c4 10             	add    $0x10,%esp
81004b2c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004b2f:	eb 1f                	jmp    81004b50 <wcrtomb+0x5b>
81004b31:	e8 3e ff ff ff       	call   81004a74 <__get_current_locale>
81004b36:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004b3c:	ff 75 10             	push   0x10(%ebp)
81004b3f:	ff 75 0c             	push   0xc(%ebp)
81004b42:	ff 75 08             	push   0x8(%ebp)
81004b45:	ff 75 f0             	push   -0x10(%ebp)
81004b48:	ff d0                	call   *%eax
81004b4a:	83 c4 10             	add    $0x10,%esp
81004b4d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004b50:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004b54:	75 19                	jne    81004b6f <wcrtomb+0x7a>
81004b56:	8b 45 10             	mov    0x10(%ebp),%eax
81004b59:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81004b5f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004b62:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81004b68:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004b6d:	eb 03                	jmp    81004b72 <wcrtomb+0x7d>
81004b6f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004b72:	c9                   	leave  
81004b73:	c3                   	ret    

81004b74 <__get_global_locale>:
81004b74:	55                   	push   %ebp
81004b75:	89 e5                	mov    %esp,%ebp
81004b77:	b8 40 58 00 81       	mov    $0x81005840,%eax
81004b7c:	5d                   	pop    %ebp
81004b7d:	c3                   	ret    

81004b7e <__get_current_locale>:
81004b7e:	55                   	push   %ebp
81004b7f:	89 e5                	mov    %esp,%ebp
81004b81:	e8 ee ff ff ff       	call   81004b74 <__get_global_locale>
81004b86:	5d                   	pop    %ebp
81004b87:	c3                   	ret    

81004b88 <_wctomb_r>:
81004b88:	55                   	push   %ebp
81004b89:	89 e5                	mov    %esp,%ebp
81004b8b:	83 ec 08             	sub    $0x8,%esp
81004b8e:	e8 eb ff ff ff       	call   81004b7e <__get_current_locale>
81004b93:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004b99:	ff 75 14             	push   0x14(%ebp)
81004b9c:	ff 75 10             	push   0x10(%ebp)
81004b9f:	ff 75 0c             	push   0xc(%ebp)
81004ba2:	ff 75 08             	push   0x8(%ebp)
81004ba5:	ff d0                	call   *%eax
81004ba7:	83 c4 10             	add    $0x10,%esp
81004baa:	c9                   	leave  
81004bab:	c3                   	ret    

81004bac <__ascii_wctomb>:
81004bac:	55                   	push   %ebp
81004bad:	89 e5                	mov    %esp,%ebp
81004baf:	83 ec 10             	sub    $0x10,%esp
81004bb2:	8b 45 10             	mov    0x10(%ebp),%eax
81004bb5:	89 45 fc             	mov    %eax,-0x4(%ebp)
81004bb8:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81004bbc:	75 07                	jne    81004bc5 <__ascii_wctomb+0x19>
81004bbe:	b8 00 00 00 00       	mov    $0x0,%eax
81004bc3:	eb 28                	jmp    81004bed <__ascii_wctomb+0x41>
81004bc5:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
81004bcc:	76 10                	jbe    81004bde <__ascii_wctomb+0x32>
81004bce:	8b 45 08             	mov    0x8(%ebp),%eax
81004bd1:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81004bd7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004bdc:	eb 0f                	jmp    81004bed <__ascii_wctomb+0x41>
81004bde:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004be1:	89 c2                	mov    %eax,%edx
81004be3:	8b 45 0c             	mov    0xc(%ebp),%eax
81004be6:	88 10                	mov    %dl,(%eax)
81004be8:	b8 01 00 00 00       	mov    $0x1,%eax
81004bed:	c9                   	leave  
81004bee:	c3                   	ret    
