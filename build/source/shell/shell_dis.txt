
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x810008b4

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00008950 memsz 0x00009000 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007865  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       000006cc  81007880  81007880  00008880  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  81007f60  81007f60  00008f60  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000006a0  81008960  81008960  00009950  2**5
                  ALLOC
  4 .debug_info   000285f4  00000000  00000000  00009950  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00009265  00000000  00000000  00031f44  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 00000948  00000000  00000000  0003b1b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_rnglists 00000065  00000000  00000000  0003baf8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   00005738  00000000  00000000  0003bb5d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_str    000016e8  00000000  00000000  00041295  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_line_str 000016c6  00000000  00000000  0004297d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .comment      0000003d  00000000  00000000  00044043  2**0
                  CONTENTS, READONLY
 12 .debug_frame  00001d48  00000000  00000000  00044080  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
81008960 l     O .bss	00000200 cmd_buf
81007f60 l     O .data	00000004 prompt
81008b60 l     O .bss	0000040c cli
81000000 l     F .text	00000042 do_help
81000042 l     F .text	00000037 do_clear
81000079 l     F .text	000001c2 do_echo
8100023b l     F .text	00000010 do_exit
8100024b l     F .text	00000095 do_ls
810002e0 l     F .text	0000026f do_less
81007aa0 l     O .rodata	00000048 cmd_list
8100054f l     F .text	0000003e cli_init
8100058d l     F .text	00000033 show_prompt
810005c0 l     F .text	00000043 find_builtin
81000603 l     F .text	00000049 run_builtin
8100064c l     F .text	000000d4 run_exec_file
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
810012a0 l     F .text	000000ad std
8100134d l     F .text	0000001b stdin_init
81001368 l     F .text	0000001b stdout_init
81001383 l     F .text	0000001b stderr_init
81008f6c l     O .bss	00000004 __sfp_recursive_mutex
81008f70 l     O .bss	00000004 __sinit_recursive_mutex
81001646 l     F .text	0000000a __fp_lock
81001650 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getchar.c
00000000 l    df *ABS*	00000000 getopt.c
81008f7c l     O .bss	00000004 optwhere
81008f80 l     O .bss	00000004 permute_from
81008f84 l     O .bss	00000004 num_nonopts
8100246a l     F .text	0000007b reverse_argv_elements
810024e5 l     F .text	00000036 permute
8100251b l     F .text	00000031 is_option
8100254c l     F .text	00000059 read_globals
810025a5 l     F .text	00000052 write_globals
810025f7 l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 impure.c
81007f80 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
8100341b l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
81003f5d l       .text	00000000 L20
81003f14 l       .text	00000000 L5
81003f5a l       .text	00000000 L15
81003f20 l       .text	00000000 L8
81003f41 l       .text	00000000 L9
81003f50 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
81003faf l       .text	00000000 L4
81003fa1 l       .text	00000000 BYTECMP
81003f9c l       .text	00000000 L5
81003fa3 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
81008fe8 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81004170 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 refill.c
81004f14 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
8100555b l       .text	00000000 L25
81005502 l       .text	00000000 L5
8100554e l       .text	00000000 L14
81005554 l       .text	00000000 L19
81005513 l       .text	00000000 L10
81005540 l       .text	00000000 L9
81005543 l       .text	00000000 L15
8100558e l       .text	00000000 L26
81005591 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81005696 l       .text	00000000 L5
810056ce l       .text	00000000 L15
810056a0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
810057dc l     F .text	0000000a __locale_ctype_ptr_l
810057e6 l     F .text	0000000a __get_global_locale
810057f0 l     F .text	0000000a __get_current_locale
810057fa l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
81008ff0 l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 fputwc.c
81006085 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
810087d0 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
81006938 l     F .text	0000000a __get_global_locale
81006942 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
81006a24 l     F .text	0000000a __get_global_locale
81006a2e l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 putc.c
81006b4d l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
810076d4 l     F .text	0000000a __get_global_locale
810076de l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
810077de l     F .text	0000000a __get_global_locale
810077e8 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
81008ff8 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
81008ffc l     O .bss	00000004 __env_recursive_mutex
810068f8 g     F .text	00000040 _isatty_r
81004d7d g     F .text	00000037 cleanup_glue
81004c8b g     F .text	000000d6 _puts_r
810069de g     F .text	00000046 _lseek_r
81000a03 g     F .text	0000001b yield
81005e72 g     F .text	000000ba __sflags
81000c97 g     F .text	00000039 ioctl
810057c2 g     F .text	0000001a strtok_r
81004c56 g     F .text	00000035 printf
810076e8 g     F .text	00000077 _wcrtomb_r
81005437 g     F .text	0000004a __sseek
81001595 g     F .text	00000099 __sinit
81005a3f g     F .text	00000112 __swbuf_r
8100694c g     F .text	0000005f _setlocale_r
8100139e g     F .text	0000006f __sfmoreglue
8100408e g     F .text	00000006 __malloc_unlock
81006ac0 g       .text	00000000 memmove
81003153 g     F .text	00000049 getopt_long
8100157b g     F .text	0000001a _cleanup
81005702 g     F .text	000000c0 __strtok_r
81005e68 g     F .text	0000000a __errno
810067ce g     F .text	00000020 getenv
81002235 g     F .text	00000043 _fstat_r
81008fec g     O .bss	00000004 errno
810075d4 g     F .text	0000001d __srget
810053d2 g     F .text	0000000a __seofread
810009d6 g     F .text	0000002d execve
81000978 g     F .text	0000001b getpid
81001281 g     F .text	0000001f fgets
810066d8 g     F .text	00000067 _getc_r
8100673f g     F .text	0000006f getc
81003fb8 g       .text	00000000 memcpy
81005182 g     F .text	0000020c setvbuf
8100155a g     F .text	00000021 _cleanup_r
81004d61 g     F .text	0000001c puts
810033e2 g     F .text	0000001c malloc
81004c29 g     F .text	0000002d _printf_r
81000aed g     F .text	00000021 isatty
81003258 g     F .text	0000000a __getreent
81008f74 g     O .bss	00000004 optarg
81008fa0 g     O .bss	00000004 __malloc_top_pad
81008960 g       .bss	00000000 __bss_start__
8100623a g     F .text	0000049e __sfvwrite_r
81005142 g     F .text	00000040 _sbrk_r
81007f64 g     O .data	00000004 opterr
81000c22 g     F .text	00000040 readdir
81006c51 g     F .text	00000046 _read_r
81000d48 g     F .text	00000107 _fclose_r
810010ea g     F .text	00000039 fflush
81008fa4 g     O .bss	00000004 __malloc_max_sbrked_mem
81000ac0 g     F .text	0000002d lseek
81007bf8 g     O .rodata	00000004 _global_impure_ptr
81006c97 g     F .text	000008da _realloc_r
810059f1 g     F .text	00000025 strtol_l
8100619b g     F .text	00000057 _fputwc_r
8100165a g     F .text	00000024 __fp_lock_all
81005a16 g     F .text	00000029 strtol
81001d64 g     F .text	000004b1 _fseeko_r
81004db4 g     F .text	00000160 _reclaim_reent
81005f2c g     F .text	00000046 _fputc_r
81000a72 g     F .text	0000002d write
81006bb3 g     F .text	0000004b _putc_r
8100894c g     O .data	00000004 environ
81000b0e g     F .text	00000027 fstat
810017bf g     F .text	0000002c fprintf
81003231 g     F .text	00000027 __getopt_long_only_r
81002215 g     F .text	00000020 fseeko
81000cea g     F .text	0000001a _atoi_r
81001d44 g     F .text	00000020 fseek
81000902 g     F .text	0000004c sys_call
810041d6 g     F .text	000000a8 __sfputs_r
81008f78 g     O .bss	00000004 optind
8100162e g     F .text	00000006 __sfp_lock_acquire
81003ed0 g       .text	00000000 memchr
81009000 g       .bss	00000000 __bss_end__
810017eb g     F .text	000003db _free_r
81000b99 g     F .text	00000021 wait
81007cc0 g     O .rodata	00000180 _ctype_b
810069ab g     F .text	00000014 __locale_mb_cur_max
81007571 g     F .text	00000063 __srget_r
81005d13 g     F .text	00000115 __call_exitprocs
810087cc g     O .data	00000004 __malloc_sbrk_base
810008b4 g       .text	00000000 _start
81000a45 g     F .text	0000002d read
81004be3 g     F .text	00000046 _open_r
810075f1 g     F .text	000000e3 strncmp
8100320a g     F .text	00000027 __getopt_long_r
81008fc0 g     O .bss	00000028 __malloc_current_mallinfo
81004c29 g     F .text	0000002d _iprintf_r
81005e28 g     F .text	00000040 _close_r
810056d9 g     F .text	00000029 strtok
81003f65 g       .text	00000000 memcmp
8100234b g     F .text	000000b8 _fwrite_r
810009bb g     F .text	0000001b fork
81005bb8 g     F .text	0000015b __swsetup_r
8100140d g     F .text	0000014d __sfp
810083c0 g     O .data	00000408 __malloc_av_
81001640 g     F .text	00000006 __sinit_lock_release
8100538e g     F .text	00000044 __sread
81004088 g     F .text	00000006 __malloc_lock
81001796 g     F .text	00000029 _fprintf_r
81000b35 g     F .text	00000021 sbrk
81001092 g     F .text	00000058 _fflush_r
810008c4 g     F .text	0000003e cstart
81001777 g     F .text	0000001f fopen
8100310c g     F .text	00000047 getopt
81004000 g       .text	00000000 memset
81000720 g     F .text	00000194 main
81008fa8 g     O .bss	00000004 __malloc_max_total_mem
81005b51 g     F .text	00000021 __swbuf
81005481 g     F .text	00000025 __sclose
81000e4f g     F .text	0000001d fclose
810059cc g     F .text	00000025 _strtol_r
81002445 g     F .text	00000025 getchar
810067ee g     F .text	000000ed _findenv_r
810036ae g     F .text	00000822 _malloc_r
81007816 g     F .text	00000043 __ascii_wctomb
81000bba g     F .text	00000068 opendir
81001796 g     F .text	00000029 _fiprintf_r
8100785f g     F .text	00000006 __env_unlock
810067ae g     F .text	00000020 _findenv
81002278 g     F .text	00000068 _fwalk
81001123 g     F .text	0000015e _fgets_r
81006a38 g     F .text	0000002a _mbtowc_r
81006bfe g     F .text	00000053 putc
8100319c g     F .text	00000049 getopt_long_only
81001bc6 g     F .text	00000161 _malloc_trim_r
810055ac g     F .text	000000a5 strcmp
8100427e g     F .text	00000025 vfiprintf
81000b56 g     F .text	00000021 dup
81004c56 g     F .text	00000035 iprintf
81008ff4 g     O .bss	00000004 _PathLocale
81005b72 g     F .text	00000046 _write_r
810069bf g     F .text	0000001f setlocale
810045f9 g     F .text	0000019b _printf_common
810083a4 g     O .data	00000004 _impure_ptr
81000e6c g     F .text	00000226 __sflush_r
81001d27 g     F .text	0000001d _fseek_r
81004f41 g     F .text	00000201 __srefill_r
81006a62 g     F .text	00000058 __ascii_mbtowc
8100167e g     F .text	00000024 __fp_unlock_all
81005f72 g     F .text	0000004e fputc
81000993 g     F .text	00000028 print_msg
81007f68 g     O .data	00000004 optopt
8100334f g     F .text	00000093 __swhatbuf_r
81002403 g     F .text	00000025 fwrite
81002428 g     F .text	0000001d _getchar_r
810060eb g     F .text	000000b0 __fputwc
81005fc0 g     F .text	000000a6 _fputs_r
810053dc g     F .text	0000005b __swrite
810087c8 g     O .data	00000004 __malloc_trim_threshold
81000d04 g     F .text	00000044 exit
810017bf g     F .text	0000002c fiprintf
810042a3 g     F .text	00000356 _vfiprintf_r
810022e0 g     F .text	0000006b _fwalk_reent
81001634 g     F .text	00000006 __sfp_lock_release
81000cd0 g     F .text	0000001a atoi
81007e40 g     O .rodata	00000101 _ctype_
810031e5 g     F .text	00000025 __getopt_r
810016a2 g     F .text	000000d5 _fopen_r
81000b77 g     F .text	00000022 _exit
81003262 g     F .text	000000ed __smakebuf_r
81005660 g       .text	00000000 strlen
81004794 g     F .text	0000044f _printf_i
81000a1e g     F .text	00000027 open
81004094 g     F .text	000000dc __sprint_r
810054b0 g       .text	00000000 strchr
81006066 g     F .text	0000001f fputs
81000c62 g     F .text	00000035 closedir
810077f2 g     F .text	00000024 _wctomb_r
81007859 g     F .text	00000006 __env_lock
810042a3 g     F .text	00000356 _vfprintf_r
8100094e g     F .text	0000002a msleep
8100775f g     F .text	0000007f wcrtomb
81000a9f g     F .text	00000021 close
810087e0 g     O .data	0000016c __global_locale
8100427e g     F .text	00000025 vfprintf
810061f2 g     F .text	00000048 fputwc
810033fe g     F .text	0000001d free
8100163a g     F .text	00000006 __sinit_lock_acquire
810068db g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <do_help>:
 *
 * @param argc
 * @param arg
 * @return int
 */
static int do_help(int argc, const char **argv) {
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 18             	sub    $0x18,%esp
  const cli_cmd_t *start = cli.cmd_start;
81000006:	a1 60 8f 00 81       	mov    0x81008f60,%eax
8100000b:	89 45 f4             	mov    %eax,-0xc(%ebp)
  while (start < cli.cmd_end) {
8100000e:	eb 21                	jmp    81000031 <do_help+0x31>
    printf("%s\t--> %s\n", start->name, start->usage);
81000010:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000013:	8b 50 04             	mov    0x4(%eax),%edx
81000016:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000019:	8b 00                	mov    (%eax),%eax
8100001b:	83 ec 04             	sub    $0x4,%esp
8100001e:	52                   	push   %edx
8100001f:	50                   	push   %eax
81000020:	68 86 78 00 81       	push   $0x81007886
81000025:	e8 2c 4c 00 00       	call   81004c56 <iprintf>
8100002a:	83 c4 10             	add    $0x10,%esp
    start++;
8100002d:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
  while (start < cli.cmd_end) {
81000031:	a1 64 8f 00 81       	mov    0x81008f64,%eax
81000036:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000039:	72 d5                	jb     81000010 <do_help+0x10>
  }

  return 0;
8100003b:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000040:	c9                   	leave  
81000041:	c3                   	ret    

81000042 <do_clear>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_clear(int argc, const char **argv) {
81000042:	55                   	push   %ebp
81000043:	89 e5                	mov    %esp,%ebp
81000045:	83 ec 08             	sub    $0x8,%esp
  printf("%s", ESC_CLEAR_SCREEN);
81000048:	83 ec 08             	sub    $0x8,%esp
8100004b:	68 91 78 00 81       	push   $0x81007891
81000050:	68 96 78 00 81       	push   $0x81007896
81000055:	e8 fc 4b 00 00       	call   81004c56 <iprintf>
8100005a:	83 c4 10             	add    $0x10,%esp
  printf("%s", ESC_MOVE_CURSOR(0, 0));
8100005d:	83 ec 08             	sub    $0x8,%esp
81000060:	68 99 78 00 81       	push   $0x81007899
81000065:	68 96 78 00 81       	push   $0x81007896
8100006a:	e8 e7 4b 00 00       	call   81004c56 <iprintf>
8100006f:	83 c4 10             	add    $0x10,%esp
  return 0;
81000072:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000077:	c9                   	leave  
81000078:	c3                   	ret    

81000079 <do_echo>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_echo(int argc, const char **argv) {
81000079:	55                   	push   %ebp
8100007a:	89 e5                	mov    %esp,%ebp
8100007c:	53                   	push   %ebx
8100007d:	81 ec 94 00 00 00    	sub    $0x94,%esp
  if (argc ==
81000083:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
81000087:	75 40                	jne    810000c9 <do_echo+0x50>
      1) {  // 没有指定任何参数只输入了 echo，则等待用户输入信息以进行回显
    char msg_buf[128];
    fgets(msg_buf, sizeof(msg_buf), stdin);
81000089:	e8 ca 31 00 00       	call   81003258 <__getreent>
8100008e:	8b 40 04             	mov    0x4(%eax),%eax
81000091:	83 ec 04             	sub    $0x4,%esp
81000094:	50                   	push   %eax
81000095:	68 80 00 00 00       	push   $0x80
8100009a:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000a0:	50                   	push   %eax
810000a1:	e8 db 11 00 00       	call   81001281 <fgets>
810000a6:	83 c4 10             	add    $0x10,%esp
    msg_buf[sizeof(msg_buf) - 1] = '\0';
810000a9:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
    puts(msg_buf);
810000ad:	83 ec 0c             	sub    $0xc,%esp
810000b0:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000b6:	50                   	push   %eax
810000b7:	e8 a5 4c 00 00       	call   81004d61 <puts>
810000bc:	83 c4 10             	add    $0x10,%esp
    return 0;
810000bf:	b8 00 00 00 00       	mov    $0x0,%eax
810000c4:	e9 6d 01 00 00       	jmp    81000236 <do_echo+0x1bd>
  }

  optind = 0;  // getopt每次查找都从optind处开始
810000c9:	c7 05 78 8f 00 81 00 	movl   $0x0,0x81008f78
810000d0:	00 00 00 
  int count = 1;
810000d3:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
  int ch;
  // getopt函数解析参数列表，n:表示查找-n选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
810000da:	e9 a4 00 00 00       	jmp    81000183 <do_echo+0x10a>
    switch (ch) {
810000df:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e3:	74 54                	je     81000139 <do_echo+0xc0>
810000e5:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e9:	0f 8f 93 00 00 00    	jg     81000182 <do_echo+0x109>
810000ef:	83 7d ec 3f          	cmpl   $0x3f,-0x14(%ebp)
810000f3:	74 5a                	je     8100014f <do_echo+0xd6>
810000f5:	83 7d ec 68          	cmpl   $0x68,-0x14(%ebp)
810000f9:	0f 85 83 00 00 00    	jne    81000182 <do_echo+0x109>
      case 'h':
        puts("help:");
810000ff:	83 ec 0c             	sub    $0xc,%esp
81000102:	68 a0 78 00 81       	push   $0x810078a0
81000107:	e8 55 4c 00 00       	call   81004d61 <puts>
8100010c:	83 c4 10             	add    $0x10,%esp
        puts("\techo any message");
8100010f:	83 ec 0c             	sub    $0xc,%esp
81000112:	68 a6 78 00 81       	push   $0x810078a6
81000117:	e8 45 4c 00 00       	call   81004d61 <puts>
8100011c:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: echo [-n count] message");
8100011f:	83 ec 0c             	sub    $0xc,%esp
81000122:	68 b8 78 00 81       	push   $0x810078b8
81000127:	e8 35 4c 00 00       	call   81004d61 <puts>
8100012c:	83 c4 10             	add    $0x10,%esp
        return 0;
8100012f:	b8 00 00 00 00       	mov    $0x0,%eax
81000134:	e9 fd 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      case 'n':
        count = atoi(optarg);  // optarg为newlib库自己声明的
81000139:	a1 74 8f 00 81       	mov    0x81008f74,%eax
8100013e:	83 ec 0c             	sub    $0xc,%esp
81000141:	50                   	push   %eax
81000142:	e8 89 0b 00 00       	call   81000cd0 <atoi>
81000147:	83 c4 10             	add    $0x10,%esp
8100014a:	89 45 f4             	mov    %eax,-0xc(%ebp)
        break;
8100014d:	eb 34                	jmp    81000183 <do_echo+0x10a>
      case '?':  // 找到未指定选项
        if (optarg) {
8100014f:	a1 74 8f 00 81       	mov    0x81008f74,%eax
81000154:	85 c0                	test   %eax,%eax
81000156:	74 20                	je     81000178 <do_echo+0xff>
          fprintf(stderr,
81000158:	8b 1d 74 8f 00 81    	mov    0x81008f74,%ebx
8100015e:	e8 f5 30 00 00       	call   81003258 <__getreent>
81000163:	8b 40 0c             	mov    0xc(%eax),%eax
81000166:	83 ec 04             	sub    $0x4,%esp
81000169:	53                   	push   %ebx
8100016a:	68 d8 78 00 81       	push   $0x810078d8
8100016f:	50                   	push   %eax
81000170:	e8 4a 16 00 00       	call   810017bf <fiprintf>
81000175:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000178:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100017d:	e9 b4 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      default:
        break;
81000182:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
81000183:	83 ec 04             	sub    $0x4,%esp
81000186:	68 f7 78 00 81       	push   $0x810078f7
8100018b:	ff 75 0c             	push   0xc(%ebp)
8100018e:	ff 75 08             	push   0x8(%ebp)
81000191:	e8 76 2f 00 00       	call   8100310c <getopt>
81000196:	83 c4 10             	add    $0x10,%esp
81000199:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100019c:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810001a0:	0f 85 39 ff ff ff    	jne    810000df <do_echo+0x66>
    }
  }

  if (count == 0) {
810001a6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810001aa:	75 21                	jne    810001cd <do_echo+0x154>
    fprintf(stderr, ESC_COLOR_ERROR
810001ac:	e8 a7 30 00 00       	call   81003258 <__getreent>
810001b1:	8b 40 0c             	mov    0xc(%eax),%eax
810001b4:	50                   	push   %eax
810001b5:	6a 32                	push   $0x32
810001b7:	6a 01                	push   $0x1
810001b9:	68 fc 78 00 81       	push   $0x810078fc
810001be:	e8 40 22 00 00       	call   81002403 <fwrite>
810001c3:	83 c4 10             	add    $0x10,%esp
            "echo: argument required for option '-n'\n" ESC_COLOR_DEFAULT);
    return -1;
810001c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001cb:	eb 69                	jmp    81000236 <do_echo+0x1bd>
  }
  if (optind >
810001cd:	a1 78 8f 00 81       	mov    0x81008f78,%eax
810001d2:	39 45 08             	cmp    %eax,0x8(%ebp)
810001d5:	7f 21                	jg     810001f8 <do_echo+0x17f>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "message is empty\n" ESC_COLOR_DEFAULT);
810001d7:	e8 7c 30 00 00       	call   81003258 <__getreent>
810001dc:	8b 40 0c             	mov    0xc(%eax),%eax
810001df:	50                   	push   %eax
810001e0:	6a 1b                	push   $0x1b
810001e2:	6a 01                	push   $0x1
810001e4:	68 2f 79 00 81       	push   $0x8100792f
810001e9:	e8 15 22 00 00       	call   81002403 <fwrite>
810001ee:	83 c4 10             	add    $0x10,%esp
    return -1;
810001f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001f6:	eb 3e                	jmp    81000236 <do_echo+0x1bd>
  }

  const char *msg = argv[optind];
810001f8:	a1 78 8f 00 81       	mov    0x81008f78,%eax
810001fd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000204:	8b 45 0c             	mov    0xc(%ebp),%eax
81000207:	01 d0                	add    %edx,%eax
81000209:	8b 00                	mov    (%eax),%eax
8100020b:	89 45 e8             	mov    %eax,-0x18(%ebp)
  for (int i = 0; i < count; ++i) {
8100020e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81000215:	eb 12                	jmp    81000229 <do_echo+0x1b0>
    puts(msg);
81000217:	83 ec 0c             	sub    $0xc,%esp
8100021a:	ff 75 e8             	push   -0x18(%ebp)
8100021d:	e8 3f 4b 00 00       	call   81004d61 <puts>
81000222:	83 c4 10             	add    $0x10,%esp
  for (int i = 0; i < count; ++i) {
81000225:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81000229:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100022c:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100022f:	7c e6                	jl     81000217 <do_echo+0x19e>
  }
  return 0;
81000231:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000236:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000239:	c9                   	leave  
8100023a:	c3                   	ret    

8100023b <do_exit>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_exit(int argc, const char **argv) {
8100023b:	55                   	push   %ebp
8100023c:	89 e5                	mov    %esp,%ebp
8100023e:	83 ec 08             	sub    $0x8,%esp
  exit(0);
81000241:	83 ec 0c             	sub    $0xc,%esp
81000244:	6a 00                	push   $0x0
81000246:	e8 b9 0a 00 00       	call   81000d04 <exit>

8100024b <do_ls>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_ls(int argc, const char **argv) {
8100024b:	55                   	push   %ebp
8100024c:	89 e5                	mov    %esp,%ebp
8100024e:	83 ec 18             	sub    $0x18,%esp
  DIR *p_dir = opendir("temp");
81000251:	83 ec 0c             	sub    $0xc,%esp
81000254:	68 4b 79 00 81       	push   $0x8100794b
81000259:	e8 5c 09 00 00       	call   81000bba <opendir>
8100025e:	83 c4 10             	add    $0x10,%esp
81000261:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (p_dir == NULL) {
81000264:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000268:	75 4a                	jne    810002b4 <do_ls+0x69>
    printf("open dir failed.\n");
8100026a:	83 ec 0c             	sub    $0xc,%esp
8100026d:	68 50 79 00 81       	push   $0x81007950
81000272:	e8 ea 4a 00 00       	call   81004d61 <puts>
81000277:	83 c4 10             	add    $0x10,%esp
    return -1;
8100027a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100027f:	eb 5d                	jmp    810002de <do_ls+0x93>
  }

  struct dirent *entry;
  while ((entry = readdir(p_dir)) != NULL) {
    printf("%c %s %d\n", entry->type == FILE_DIR ? 'd' : 'f', entry->name,
81000281:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000284:	8b 40 18             	mov    0x18(%eax),%eax
81000287:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100028a:	8d 4a 08             	lea    0x8(%edx),%ecx
8100028d:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000290:	8b 52 04             	mov    0x4(%edx),%edx
81000293:	83 fa 02             	cmp    $0x2,%edx
81000296:	75 07                	jne    8100029f <do_ls+0x54>
81000298:	ba 64 00 00 00       	mov    $0x64,%edx
8100029d:	eb 05                	jmp    810002a4 <do_ls+0x59>
8100029f:	ba 66 00 00 00       	mov    $0x66,%edx
810002a4:	50                   	push   %eax
810002a5:	51                   	push   %ecx
810002a6:	52                   	push   %edx
810002a7:	68 61 79 00 81       	push   $0x81007961
810002ac:	e8 a5 49 00 00       	call   81004c56 <iprintf>
810002b1:	83 c4 10             	add    $0x10,%esp
  while ((entry = readdir(p_dir)) != NULL) {
810002b4:	83 ec 0c             	sub    $0xc,%esp
810002b7:	ff 75 f4             	push   -0xc(%ebp)
810002ba:	e8 63 09 00 00       	call   81000c22 <readdir>
810002bf:	83 c4 10             	add    $0x10,%esp
810002c2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810002c5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810002c9:	75 b6                	jne    81000281 <do_ls+0x36>
           entry->size);
  }
  closedir(p_dir);
810002cb:	83 ec 0c             	sub    $0xc,%esp
810002ce:	ff 75 f4             	push   -0xc(%ebp)
810002d1:	e8 8c 09 00 00       	call   81000c62 <closedir>
810002d6:	83 c4 10             	add    $0x10,%esp
  return 0;
810002d9:	b8 00 00 00 00       	mov    $0x0,%eax
}
810002de:	c9                   	leave  
810002df:	c3                   	ret    

810002e0 <do_less>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_less(int argc, const char **argv) {
810002e0:	55                   	push   %ebp
810002e1:	89 e5                	mov    %esp,%ebp
810002e3:	53                   	push   %ebx
810002e4:	83 ec 24             	sub    $0x24,%esp
  optind = 0;
810002e7:	c7 05 78 8f 00 81 00 	movl   $0x0,0x81008f78
810002ee:	00 00 00 
  int line_mode = 0;  //是否开启逐行读取
810002f1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  int ch;
  // getopt函数解析参数列表，l:表示查找-l选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "lh")) != -1) {
810002f8:	e9 93 00 00 00       	jmp    81000390 <do_less+0xb0>
    switch (ch) {
810002fd:	83 7d f0 6c          	cmpl   $0x6c,-0x10(%ebp)
81000301:	74 50                	je     81000353 <do_less+0x73>
81000303:	83 7d f0 6c          	cmpl   $0x6c,-0x10(%ebp)
81000307:	0f 8f 82 00 00 00    	jg     8100038f <do_less+0xaf>
8100030d:	83 7d f0 3f          	cmpl   $0x3f,-0x10(%ebp)
81000311:	74 49                	je     8100035c <do_less+0x7c>
81000313:	83 7d f0 68          	cmpl   $0x68,-0x10(%ebp)
81000317:	75 76                	jne    8100038f <do_less+0xaf>
      case 'h':
        puts("help:");
81000319:	83 ec 0c             	sub    $0xc,%esp
8100031c:	68 a0 78 00 81       	push   $0x810078a0
81000321:	e8 3b 4a 00 00       	call   81004d61 <puts>
81000326:	83 c4 10             	add    $0x10,%esp
        puts("\tshow file content");
81000329:	83 ec 0c             	sub    $0xc,%esp
8100032c:	68 6b 79 00 81       	push   $0x8100796b
81000331:	e8 2b 4a 00 00       	call   81004d61 <puts>
81000336:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: less [-l] file");
81000339:	83 ec 0c             	sub    $0xc,%esp
8100033c:	68 7e 79 00 81       	push   $0x8100797e
81000341:	e8 1b 4a 00 00       	call   81004d61 <puts>
81000346:	83 c4 10             	add    $0x10,%esp
        return 0;
81000349:	b8 00 00 00 00       	mov    $0x0,%eax
8100034e:	e9 f7 01 00 00       	jmp    8100054a <do_less+0x26a>
      case 'l':
        line_mode = 1;
81000353:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
        break;
8100035a:	eb 34                	jmp    81000390 <do_less+0xb0>
      case '?':  // 找到未指定选项
        if (optarg) {
8100035c:	a1 74 8f 00 81       	mov    0x81008f74,%eax
81000361:	85 c0                	test   %eax,%eax
81000363:	74 20                	je     81000385 <do_less+0xa5>
          fprintf(stderr,
81000365:	8b 1d 74 8f 00 81    	mov    0x81008f74,%ebx
8100036b:	e8 e8 2e 00 00       	call   81003258 <__getreent>
81000370:	8b 40 0c             	mov    0xc(%eax),%eax
81000373:	83 ec 04             	sub    $0x4,%esp
81000376:	53                   	push   %ebx
81000377:	68 d8 78 00 81       	push   $0x810078d8
8100037c:	50                   	push   %eax
8100037d:	e8 3d 14 00 00       	call   810017bf <fiprintf>
81000382:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000385:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100038a:	e9 bb 01 00 00       	jmp    8100054a <do_less+0x26a>
      default:
        break;
8100038f:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "lh")) != -1) {
81000390:	83 ec 04             	sub    $0x4,%esp
81000393:	68 95 79 00 81       	push   $0x81007995
81000398:	ff 75 0c             	push   0xc(%ebp)
8100039b:	ff 75 08             	push   0x8(%ebp)
8100039e:	e8 69 2d 00 00       	call   8100310c <getopt>
810003a3:	83 c4 10             	add    $0x10,%esp
810003a6:	89 45 f0             	mov    %eax,-0x10(%ebp)
810003a9:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810003ad:	0f 85 4a ff ff ff    	jne    810002fd <do_less+0x1d>
    }
  }



  if (optind >
810003b3:	a1 78 8f 00 81       	mov    0x81008f78,%eax
810003b8:	39 45 08             	cmp    %eax,0x8(%ebp)
810003bb:	7f 24                	jg     810003e1 <do_less+0x101>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "no file input\n"ESC_COLOR_DEFAULT);
810003bd:	e8 96 2e 00 00       	call   81003258 <__getreent>
810003c2:	8b 40 0c             	mov    0xc(%eax),%eax
810003c5:	50                   	push   %eax
810003c6:	6a 18                	push   $0x18
810003c8:	6a 01                	push   $0x1
810003ca:	68 98 79 00 81       	push   $0x81007998
810003cf:	e8 2f 20 00 00       	call   81002403 <fwrite>
810003d4:	83 c4 10             	add    $0x10,%esp
    return -1;
810003d7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810003dc:	e9 69 01 00 00       	jmp    8100054a <do_less+0x26a>
  }

  //打开文件
  FILE *file = fopen(argv[optind], "r");
810003e1:	a1 78 8f 00 81       	mov    0x81008f78,%eax
810003e6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810003ed:	8b 45 0c             	mov    0xc(%ebp),%eax
810003f0:	01 d0                	add    %edx,%eax
810003f2:	8b 00                	mov    (%eax),%eax
810003f4:	83 ec 08             	sub    $0x8,%esp
810003f7:	68 b1 79 00 81       	push   $0x810079b1
810003fc:	50                   	push   %eax
810003fd:	e8 75 13 00 00       	call   81001777 <fopen>
81000402:	83 c4 10             	add    $0x10,%esp
81000405:	89 45 ec             	mov    %eax,-0x14(%ebp)
  if (file == NULL) {
81000408:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100040c:	75 37                	jne    81000445 <do_less+0x165>
    fprintf(stderr, ESC_COLOR_ERROR"open file failed. %s"ESC_COLOR_DEFAULT, argv[optind]);
8100040e:	a1 78 8f 00 81       	mov    0x81008f78,%eax
81000413:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100041a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100041d:	01 d0                	add    %edx,%eax
8100041f:	8b 18                	mov    (%eax),%ebx
81000421:	e8 32 2e 00 00       	call   81003258 <__getreent>
81000426:	8b 40 0c             	mov    0xc(%eax),%eax
81000429:	83 ec 04             	sub    $0x4,%esp
8100042c:	53                   	push   %ebx
8100042d:	68 b4 79 00 81       	push   $0x810079b4
81000432:	50                   	push   %eax
81000433:	e8 87 13 00 00       	call   810017bf <fiprintf>
81000438:	83 c4 10             	add    $0x10,%esp
    return -1;
8100043b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000440:	e9 05 01 00 00       	jmp    8100054a <do_less+0x26a>
  }
  
  int buf_len = 255;
81000445:	c7 45 e8 ff 00 00 00 	movl   $0xff,-0x18(%ebp)
  char *buf = (char *)malloc(buf_len);
8100044c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100044f:	83 ec 0c             	sub    $0xc,%esp
81000452:	50                   	push   %eax
81000453:	e8 8a 2f 00 00       	call   810033e2 <malloc>
81000458:	83 c4 10             	add    $0x10,%esp
8100045b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
  if (line_mode == 0) {
8100045e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000462:	75 2d                	jne    81000491 <do_less+0x1b1>
    //一次性读取完文件
    while (fgets(buf, buf_len, file) != NULL) {
81000464:	eb 0e                	jmp    81000474 <do_less+0x194>
      puts(buf);
81000466:	83 ec 0c             	sub    $0xc,%esp
81000469:	ff 75 e4             	push   -0x1c(%ebp)
8100046c:	e8 f0 48 00 00       	call   81004d61 <puts>
81000471:	83 c4 10             	add    $0x10,%esp
    while (fgets(buf, buf_len, file) != NULL) {
81000474:	83 ec 04             	sub    $0x4,%esp
81000477:	ff 75 ec             	push   -0x14(%ebp)
8100047a:	ff 75 e8             	push   -0x18(%ebp)
8100047d:	ff 75 e4             	push   -0x1c(%ebp)
81000480:	e8 fc 0d 00 00       	call   81001281 <fgets>
81000485:	83 c4 10             	add    $0x10,%esp
81000488:	85 c0                	test   %eax,%eax
8100048a:	75 da                	jne    81000466 <do_less+0x186>
8100048c:	e9 98 00 00 00       	jmp    81000529 <do_less+0x249>
    }
  } else {
    //取消输入行缓存，使输入及时写入key中
    setvbuf(stdin, NULL, _IONBF, 0);
81000491:	e8 c2 2d 00 00       	call   81003258 <__getreent>
81000496:	8b 40 04             	mov    0x4(%eax),%eax
81000499:	6a 00                	push   $0x0
8100049b:	6a 02                	push   $0x2
8100049d:	6a 00                	push   $0x0
8100049f:	50                   	push   %eax
810004a0:	e8 dd 4c 00 00       	call   81005182 <setvbuf>
810004a5:	83 c4 10             	add    $0x10,%esp
    //关闭TTY设备回显
    ioctl(0, TTY_CMD_ECHO, 0, 0);
810004a8:	6a 00                	push   $0x0
810004aa:	6a 00                	push   $0x0
810004ac:	6a 01                	push   $0x1
810004ae:	6a 00                	push   $0x0
810004b0:	e8 e2 07 00 00       	call   81000c97 <ioctl>
810004b5:	83 c4 10             	add    $0x10,%esp
    while (1) {
      char *b = fgets(buf, buf_len, file);
810004b8:	83 ec 04             	sub    $0x4,%esp
810004bb:	ff 75 ec             	push   -0x14(%ebp)
810004be:	ff 75 e8             	push   -0x18(%ebp)
810004c1:	ff 75 e4             	push   -0x1c(%ebp)
810004c4:	e8 b8 0d 00 00       	call   81001281 <fgets>
810004c9:	83 c4 10             	add    $0x10,%esp
810004cc:	89 45 e0             	mov    %eax,-0x20(%ebp)
      if (b == NULL) {
810004cf:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810004d3:	74 26                	je     810004fb <do_less+0x21b>
        break;
      }

      puts(buf);
810004d5:	83 ec 0c             	sub    $0xc,%esp
810004d8:	ff 75 e4             	push   -0x1c(%ebp)
810004db:	e8 81 48 00 00       	call   81004d61 <puts>
810004e0:	83 c4 10             	add    $0x10,%esp
      //用按键的方式进行下一行的读取
      char key;
      while ((key = getchar()) != 'n') {
810004e3:	eb 06                	jmp    810004eb <do_less+0x20b>
        if (key == 'q') {
810004e5:	80 7d df 71          	cmpb   $0x71,-0x21(%ebp)
810004e9:	74 13                	je     810004fe <do_less+0x21e>
      while ((key = getchar()) != 'n') {
810004eb:	e8 55 1f 00 00       	call   81002445 <getchar>
810004f0:	88 45 df             	mov    %al,-0x21(%ebp)
810004f3:	80 7d df 6e          	cmpb   $0x6e,-0x21(%ebp)
810004f7:	75 ec                	jne    810004e5 <do_less+0x205>
    while (1) {
810004f9:	eb bd                	jmp    810004b8 <do_less+0x1d8>
        break;
810004fb:	90                   	nop
810004fc:	eb 01                	jmp    810004ff <do_less+0x21f>
          goto less_quit;
810004fe:	90                   	nop
      }
      
    }
less_quit:
    //恢复输入行缓存
    setvbuf(stdin, NULL, _IOLBF, BUFSIZ);
810004ff:	e8 54 2d 00 00       	call   81003258 <__getreent>
81000504:	8b 40 04             	mov    0x4(%eax),%eax
81000507:	68 00 04 00 00       	push   $0x400
8100050c:	6a 01                	push   $0x1
8100050e:	6a 00                	push   $0x0
81000510:	50                   	push   %eax
81000511:	e8 6c 4c 00 00       	call   81005182 <setvbuf>
81000516:	83 c4 10             	add    $0x10,%esp
    //打开TTY设备回显
    ioctl(0, TTY_CMD_ECHO, 1, 0);
81000519:	6a 00                	push   $0x0
8100051b:	6a 01                	push   $0x1
8100051d:	6a 01                	push   $0x1
8100051f:	6a 00                	push   $0x0
81000521:	e8 71 07 00 00       	call   81000c97 <ioctl>
81000526:	83 c4 10             	add    $0x10,%esp
  }


  

  free(buf);
81000529:	83 ec 0c             	sub    $0xc,%esp
8100052c:	ff 75 e4             	push   -0x1c(%ebp)
8100052f:	e8 ca 2e 00 00       	call   810033fe <free>
81000534:	83 c4 10             	add    $0x10,%esp
  fclose(file);
81000537:	83 ec 0c             	sub    $0xc,%esp
8100053a:	ff 75 ec             	push   -0x14(%ebp)
8100053d:	e8 0d 09 00 00       	call   81000e4f <fclose>
81000542:	83 c4 10             	add    $0x10,%esp
  return 0;
81000545:	b8 00 00 00 00       	mov    $0x0,%eax
}
8100054a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100054d:	c9                   	leave  
8100054e:	c3                   	ret    

8100054f <cli_init>:

/**
 * @brief 初始化终端结构
 *
 */
static void cli_init() {
8100054f:	55                   	push   %ebp
81000550:	89 e5                	mov    %esp,%ebp
81000552:	83 ec 08             	sub    $0x8,%esp
  cli.prompt = prompt;
81000555:	a1 60 7f 00 81       	mov    0x81007f60,%eax
8100055a:	a3 68 8f 00 81       	mov    %eax,0x81008f68
  memset(cli.curr_input, 0, CLI_INPUT_SIZE);
8100055f:	83 ec 04             	sub    $0x4,%esp
81000562:	68 00 04 00 00       	push   $0x400
81000567:	6a 00                	push   $0x0
81000569:	68 60 8b 00 81       	push   $0x81008b60
8100056e:	e8 8d 3a 00 00       	call   81004000 <memset>
81000573:	83 c4 10             	add    $0x10,%esp
  cli.cmd_start = cmd_list;
81000576:	c7 05 60 8f 00 81 a0 	movl   $0x81007aa0,0x81008f60
8100057d:	7a 00 81 
  cli.cmd_end = cmd_list + sizeof(cmd_list) / sizeof(cmd_list[0]);
81000580:	b8 e8 7a 00 81       	mov    $0x81007ae8,%eax
81000585:	a3 64 8f 00 81       	mov    %eax,0x81008f64
}
8100058a:	90                   	nop
8100058b:	c9                   	leave  
8100058c:	c3                   	ret    

8100058d <show_prompt>:

/**
 * @brief 打印终端每行固定的提示符
 *
 */
static void show_prompt(void) {
8100058d:	55                   	push   %ebp
8100058e:	89 e5                	mov    %esp,%ebp
81000590:	83 ec 08             	sub    $0x8,%esp
  printf("%s", cli.prompt);
81000593:	a1 68 8f 00 81       	mov    0x81008f68,%eax
81000598:	83 ec 08             	sub    $0x8,%esp
8100059b:	50                   	push   %eax
8100059c:	68 96 78 00 81       	push   $0x81007896
810005a1:	e8 b0 46 00 00       	call   81004c56 <iprintf>
810005a6:	83 c4 10             	add    $0x10,%esp
  fflush(stdout);
810005a9:	e8 aa 2c 00 00       	call   81003258 <__getreent>
810005ae:	8b 40 08             	mov    0x8(%eax),%eax
810005b1:	83 ec 0c             	sub    $0xc,%esp
810005b4:	50                   	push   %eax
810005b5:	e8 30 0b 00 00       	call   810010ea <fflush>
810005ba:	83 c4 10             	add    $0x10,%esp
}
810005bd:	90                   	nop
810005be:	c9                   	leave  
810005bf:	c3                   	ret    

810005c0 <find_builtin>:
 * @brief 根据命令程序名称查找并返回对应的命令结构
 *
 * @param name
 * @return const cli_cmd_t*
 */
static const cli_cmd_t *find_builtin(const char *name) {
810005c0:	55                   	push   %ebp
810005c1:	89 e5                	mov    %esp,%ebp
810005c3:	83 ec 18             	sub    $0x18,%esp
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
810005c6:	a1 60 8f 00 81       	mov    0x81008f60,%eax
810005cb:	89 45 f4             	mov    %eax,-0xc(%ebp)
810005ce:	eb 22                	jmp    810005f2 <find_builtin+0x32>
    if (strcmp(cmd->name, name) != 0) {
810005d0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810005d3:	8b 00                	mov    (%eax),%eax
810005d5:	83 ec 08             	sub    $0x8,%esp
810005d8:	ff 75 08             	push   0x8(%ebp)
810005db:	50                   	push   %eax
810005dc:	e8 cb 4f 00 00       	call   810055ac <strcmp>
810005e1:	83 c4 10             	add    $0x10,%esp
810005e4:	85 c0                	test   %eax,%eax
810005e6:	75 05                	jne    810005ed <find_builtin+0x2d>
      continue;
    }
    return cmd;
810005e8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810005eb:	eb 14                	jmp    81000601 <find_builtin+0x41>
      continue;
810005ed:	90                   	nop
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
810005ee:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
810005f2:	a1 64 8f 00 81       	mov    0x81008f64,%eax
810005f7:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810005fa:	72 d4                	jb     810005d0 <find_builtin+0x10>
  }

  return (const cli_cmd_t *)0;
810005fc:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000601:	c9                   	leave  
81000602:	c3                   	ret    

81000603 <run_builtin>:
 *
 * @param cmd
 * @param argc
 * @param argv
 */
static void run_builtin(const cli_cmd_t *cmd, int argc, const char **argv) {
81000603:	55                   	push   %ebp
81000604:	89 e5                	mov    %esp,%ebp
81000606:	53                   	push   %ebx
81000607:	83 ec 14             	sub    $0x14,%esp
  int ret = cmd->do_func(argc, argv);
8100060a:	8b 45 08             	mov    0x8(%ebp),%eax
8100060d:	8b 40 08             	mov    0x8(%eax),%eax
81000610:	83 ec 08             	sub    $0x8,%esp
81000613:	ff 75 10             	push   0x10(%ebp)
81000616:	ff 75 0c             	push   0xc(%ebp)
81000619:	ff d0                	call   *%eax
8100061b:	83 c4 10             	add    $0x10,%esp
8100061e:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (ret < 0) {
81000621:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000625:	79 1f                	jns    81000646 <run_builtin+0x43>
    fprintf(stderr, ESC_COLOR_ERROR "%s error: %d\n" ESC_COLOR_DEFAULT,
            cmd->name, ret);
81000627:	8b 45 08             	mov    0x8(%ebp),%eax
8100062a:	8b 18                	mov    (%eax),%ebx
    fprintf(stderr, ESC_COLOR_ERROR "%s error: %d\n" ESC_COLOR_DEFAULT,
8100062c:	e8 27 2c 00 00       	call   81003258 <__getreent>
81000631:	8b 40 0c             	mov    0xc(%eax),%eax
81000634:	ff 75 f4             	push   -0xc(%ebp)
81000637:	53                   	push   %ebx
81000638:	68 e8 7a 00 81       	push   $0x81007ae8
8100063d:	50                   	push   %eax
8100063e:	e8 7c 11 00 00       	call   810017bf <fiprintf>
81000643:	83 c4 10             	add    $0x10,%esp
  }
}
81000646:	90                   	nop
81000647:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100064a:	c9                   	leave  
8100064b:	c3                   	ret    

8100064c <run_exec_file>:
 *
 * @param path 程序路径
 * @param argc 参数个数
 * @param argv 参数列表
 */
static void run_exec_file(const char *path, int argc, const char **argv) {
8100064c:	55                   	push   %ebp
8100064d:	89 e5                	mov    %esp,%ebp
8100064f:	53                   	push   %ebx
81000650:	83 ec 14             	sub    $0x14,%esp
  // 1.创建子进程
  int pid = fork();
81000653:	e8 63 03 00 00       	call   810009bb <fork>
81000658:	89 45 f0             	mov    %eax,-0x10(%ebp)
  if (pid < 0) {
8100065b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100065f:	79 21                	jns    81000682 <run_exec_file+0x36>
    fprintf(stderr, ESC_COLOR_ERROR "fork failed: %s" ESC_COLOR_DEFAULT, path);
81000661:	e8 f2 2b 00 00       	call   81003258 <__getreent>
81000666:	8b 40 0c             	mov    0xc(%eax),%eax
81000669:	83 ec 04             	sub    $0x4,%esp
8100066c:	ff 75 08             	push   0x8(%ebp)
8100066f:	68 00 7b 00 81       	push   $0x81007b00
81000674:	50                   	push   %eax
81000675:	e8 45 11 00 00       	call   810017bf <fiprintf>
8100067a:	83 c4 10             	add    $0x10,%esp
    // 3.父进程等待任意子进程结束，并回收其资源
    int cpid = wait(&status);
    fprintf(stderr, "cmd %s result: %d, pid=%d, cpid=%d\n", path, status, pid,
            cpid);
  }
}
8100067d:	e9 98 00 00 00       	jmp    8100071a <run_exec_file+0xce>
  } else if (pid == 0) {
81000682:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000686:	75 5a                	jne    810006e2 <run_exec_file+0x96>
    for (int i = 0; i < argc; ++i) {
81000688:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100068f:	eb 29                	jmp    810006ba <run_exec_file+0x6e>
      printf("arg %d = %s\n", i, argv[i]);
81000691:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000694:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100069b:	8b 45 10             	mov    0x10(%ebp),%eax
8100069e:	01 d0                	add    %edx,%eax
810006a0:	8b 00                	mov    (%eax),%eax
810006a2:	83 ec 04             	sub    $0x4,%esp
810006a5:	50                   	push   %eax
810006a6:	ff 75 f4             	push   -0xc(%ebp)
810006a9:	68 1a 7b 00 81       	push   $0x81007b1a
810006ae:	e8 a3 45 00 00       	call   81004c56 <iprintf>
810006b3:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < argc; ++i) {
810006b6:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810006ba:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006bd:	3b 45 0c             	cmp    0xc(%ebp),%eax
810006c0:	7c cf                	jl     81000691 <run_exec_file+0x45>
    execve(argv[0], argv, NULL);
810006c2:	8b 45 10             	mov    0x10(%ebp),%eax
810006c5:	8b 00                	mov    (%eax),%eax
810006c7:	83 ec 04             	sub    $0x4,%esp
810006ca:	6a 00                	push   $0x0
810006cc:	ff 75 10             	push   0x10(%ebp)
810006cf:	50                   	push   %eax
810006d0:	e8 01 03 00 00       	call   810009d6 <execve>
810006d5:	83 c4 10             	add    $0x10,%esp
    exit(-1);
810006d8:	83 ec 0c             	sub    $0xc,%esp
810006db:	6a ff                	push   $0xffffffff
810006dd:	e8 22 06 00 00       	call   81000d04 <exit>
    int cpid = wait(&status);
810006e2:	83 ec 0c             	sub    $0xc,%esp
810006e5:	8d 45 e8             	lea    -0x18(%ebp),%eax
810006e8:	50                   	push   %eax
810006e9:	e8 ab 04 00 00       	call   81000b99 <wait>
810006ee:	83 c4 10             	add    $0x10,%esp
810006f1:	89 45 ec             	mov    %eax,-0x14(%ebp)
    fprintf(stderr, "cmd %s result: %d, pid=%d, cpid=%d\n", path, status, pid,
810006f4:	8b 5d e8             	mov    -0x18(%ebp),%ebx
810006f7:	e8 5c 2b 00 00       	call   81003258 <__getreent>
810006fc:	8b 40 0c             	mov    0xc(%eax),%eax
810006ff:	83 ec 08             	sub    $0x8,%esp
81000702:	ff 75 ec             	push   -0x14(%ebp)
81000705:	ff 75 f0             	push   -0x10(%ebp)
81000708:	53                   	push   %ebx
81000709:	ff 75 08             	push   0x8(%ebp)
8100070c:	68 28 7b 00 81       	push   $0x81007b28
81000711:	50                   	push   %eax
81000712:	e8 a8 10 00 00       	call   810017bf <fiprintf>
81000717:	83 c4 20             	add    $0x20,%esp
}
8100071a:	90                   	nop
8100071b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100071e:	c9                   	leave  
8100071f:	c3                   	ret    

81000720 <main>:

int main(int argc, char **argv) {
81000720:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000724:	83 e4 f0             	and    $0xfffffff0,%esp
81000727:	ff 71 fc             	push   -0x4(%ecx)
8100072a:	55                   	push   %ebp
8100072b:	89 e5                	mov    %esp,%ebp
8100072d:	51                   	push   %ecx
8100072e:	83 ec 44             	sub    $0x44,%esp
81000731:	89 c8                	mov    %ecx,%eax
  // 1.打开shell对应的tty设备绑定为stdin
  open(argv[0], O_RDWR);
81000733:	8b 40 04             	mov    0x4(%eax),%eax
81000736:	8b 00                	mov    (%eax),%eax
81000738:	83 ec 08             	sub    $0x8,%esp
8100073b:	6a 02                	push   $0x2
8100073d:	50                   	push   %eax
8100073e:	e8 db 02 00 00       	call   81000a1e <open>
81000743:	83 c4 10             	add    $0x10,%esp
  // 2.复用该0号描述符的文件，打开shell的stdout和stderr
  dup(0);
81000746:	83 ec 0c             	sub    $0xc,%esp
81000749:	6a 00                	push   $0x0
8100074b:	e8 06 04 00 00       	call   81000b56 <dup>
81000750:	83 c4 10             	add    $0x10,%esp
  dup(0);
81000753:	83 ec 0c             	sub    $0xc,%esp
81000756:	6a 00                	push   $0x0
81000758:	e8 f9 03 00 00       	call   81000b56 <dup>
8100075d:	83 c4 10             	add    $0x10,%esp

  // 3.初始化终端结构
  cli_init();
81000760:	e8 ea fd ff ff       	call   8100054f <cli_init>

  // 4.循环读取命令行输入并执行指令
  for (;;) {
    show_prompt();
81000765:	e8 23 fe ff ff       	call   8100058d <show_prompt>
    // 4.1获取命令行输入并清空末尾的"\r\n"
    char *str = fgets(cli.curr_input, CLI_INPUT_SIZE, stdin);
8100076a:	e8 e9 2a 00 00       	call   81003258 <__getreent>
8100076f:	8b 40 04             	mov    0x4(%eax),%eax
81000772:	83 ec 04             	sub    $0x4,%esp
81000775:	50                   	push   %eax
81000776:	68 00 04 00 00       	push   $0x400
8100077b:	68 60 8b 00 81       	push   $0x81008b60
81000780:	e8 fc 0a 00 00       	call   81001281 <fgets>
81000785:	83 c4 10             	add    $0x10,%esp
81000788:	89 45 ec             	mov    %eax,-0x14(%ebp)
    if (!str) {
8100078b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100078f:	0f 84 13 01 00 00    	je     810008a8 <main+0x188>
      continue;
    }
    char *cr = strchr(cli.curr_input, '\n');
81000795:	83 ec 08             	sub    $0x8,%esp
81000798:	6a 0a                	push   $0xa
8100079a:	68 60 8b 00 81       	push   $0x81008b60
8100079f:	e8 0c 4d 00 00       	call   810054b0 <strchr>
810007a4:	83 c4 10             	add    $0x10,%esp
810007a7:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
810007aa:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810007ae:	74 06                	je     810007b6 <main+0x96>
      *cr = '\0';
810007b0:	8b 45 e8             	mov    -0x18(%ebp),%eax
810007b3:	c6 00 00             	movb   $0x0,(%eax)
    }
    cr = strchr(cli.curr_input, '\r');
810007b6:	83 ec 08             	sub    $0x8,%esp
810007b9:	6a 0d                	push   $0xd
810007bb:	68 60 8b 00 81       	push   $0x81008b60
810007c0:	e8 eb 4c 00 00       	call   810054b0 <strchr>
810007c5:	83 c4 10             	add    $0x10,%esp
810007c8:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
810007cb:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810007cf:	74 06                	je     810007d7 <main+0xb7>
      *cr = '\0';
810007d1:	8b 45 e8             	mov    -0x18(%ebp),%eax
810007d4:	c6 00 00             	movb   $0x0,(%eax)
    }

    // 4.2解析命令行输入的程序和参数
    int argc = 0;
810007d7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    const char *argv[CLI_MAX_ARG_COUNT];
    memset(argv, 0, sizeof(argv));
810007de:	83 ec 04             	sub    $0x4,%esp
810007e1:	6a 28                	push   $0x28
810007e3:	6a 00                	push   $0x0
810007e5:	8d 45 b8             	lea    -0x48(%ebp),%eax
810007e8:	50                   	push   %eax
810007e9:	e8 12 38 00 00       	call   81004000 <memset>
810007ee:	83 c4 10             	add    $0x10,%esp
    const char *split = " ";
810007f1:	c7 45 e4 4c 7b 00 81 	movl   $0x81007b4c,-0x1c(%ebp)
    char *token =
        strtok(cli.curr_input,
810007f8:	83 ec 08             	sub    $0x8,%esp
810007fb:	ff 75 e4             	push   -0x1c(%ebp)
810007fe:	68 60 8b 00 81       	push   $0x81008b60
81000803:	e8 d1 4e 00 00       	call   810056d9 <strtok>
81000808:	83 c4 10             	add    $0x10,%esp
8100080b:	89 45 f0             	mov    %eax,-0x10(%ebp)
               split);  // 将字符串中的第一个split字符换成'\0'并放回起始索引
    while (token) {
8100080e:	eb 23                	jmp    81000833 <main+0x113>
      argv[argc++] = token;
81000810:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000813:	8d 50 01             	lea    0x1(%eax),%edx
81000816:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000819:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100081c:	89 54 85 b8          	mov    %edx,-0x48(%ebp,%eax,4)
      token = strtok(NULL, split);  // 填空默认从之前找到的位置的下一个位置开始
81000820:	83 ec 08             	sub    $0x8,%esp
81000823:	ff 75 e4             	push   -0x1c(%ebp)
81000826:	6a 00                	push   $0x0
81000828:	e8 ac 4e 00 00       	call   810056d9 <strtok>
8100082d:	83 c4 10             	add    $0x10,%esp
81000830:	89 45 f0             	mov    %eax,-0x10(%ebp)
    while (token) {
81000833:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000837:	75 d7                	jne    81000810 <main+0xf0>
    }

    if (argc == 0) {
81000839:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100083d:	74 6f                	je     810008ae <main+0x18e>
      continue;
    }

    // 4.3 获取可执行的命令结构，并执行
    const cli_cmd_t *cmd = find_builtin(argv[0]);
8100083f:	8b 45 b8             	mov    -0x48(%ebp),%eax
81000842:	83 ec 0c             	sub    $0xc,%esp
81000845:	50                   	push   %eax
81000846:	e8 75 fd ff ff       	call   810005c0 <find_builtin>
8100084b:	83 c4 10             	add    $0x10,%esp
8100084e:	89 45 e0             	mov    %eax,-0x20(%ebp)
    if (cmd) {
81000851:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000855:	74 17                	je     8100086e <main+0x14e>
      run_builtin(cmd, argc, argv);
81000857:	83 ec 04             	sub    $0x4,%esp
8100085a:	8d 45 b8             	lea    -0x48(%ebp),%eax
8100085d:	50                   	push   %eax
8100085e:	ff 75 f4             	push   -0xc(%ebp)
81000861:	ff 75 e0             	push   -0x20(%ebp)
81000864:	e8 9a fd ff ff       	call   81000603 <run_builtin>
81000869:	83 c4 10             	add    $0x10,%esp
      continue;
8100086c:	eb 41                	jmp    810008af <main+0x18f>
    }

    // 5.获取到的为磁盘上的可执行程序，需要进行加载运行
    run_exec_file("", argc, argv);
8100086e:	83 ec 04             	sub    $0x4,%esp
81000871:	8d 45 b8             	lea    -0x48(%ebp),%eax
81000874:	50                   	push   %eax
81000875:	ff 75 f4             	push   -0xc(%ebp)
81000878:	68 4e 7b 00 81       	push   $0x81007b4e
8100087d:	e8 ca fd ff ff       	call   8100064c <run_exec_file>
81000882:	83 c4 10             	add    $0x10,%esp

    fprintf(stderr, ESC_COLOR_ERROR "Unknown command: %s\n" ESC_COLOR_DEFAULT,
81000885:	e8 ce 29 00 00       	call   81003258 <__getreent>
8100088a:	8b 40 0c             	mov    0xc(%eax),%eax
8100088d:	83 ec 04             	sub    $0x4,%esp
81000890:	68 60 8b 00 81       	push   $0x81008b60
81000895:	68 50 7b 00 81       	push   $0x81007b50
8100089a:	50                   	push   %eax
8100089b:	e8 1f 0f 00 00       	call   810017bf <fiprintf>
810008a0:	83 c4 10             	add    $0x10,%esp
810008a3:	e9 bd fe ff ff       	jmp    81000765 <main+0x45>
      continue;
810008a8:	90                   	nop
810008a9:	e9 b7 fe ff ff       	jmp    81000765 <main+0x45>
      continue;
810008ae:	90                   	nop
  for (;;) {
810008af:	e9 b1 fe ff ff       	jmp    81000765 <main+0x45>

810008b4 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
810008b4:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
810008b7:	8e d8                	mov    %eax,%ds
	mov %ax, %es
810008b9:	8e c0                	mov    %eax,%es
	mov %ax, %fs
810008bb:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
810008bd:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
810008bf:	e9 00 00 00 00       	jmp    810008c4 <cstart>

810008c4 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
810008c4:	55                   	push   %ebp
810008c5:	89 e5                	mov    %esp,%ebp
810008c7:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
810008ca:	c7 45 f4 60 89 00 81 	movl   $0x81008960,-0xc(%ebp)
    while (start < __bss_end__) {
810008d1:	eb 0c                	jmp    810008df <cstart+0x1b>
        *(start++) = 0;
810008d3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008d6:	8d 50 01             	lea    0x1(%eax),%edx
810008d9:	89 55 f4             	mov    %edx,-0xc(%ebp)
810008dc:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
810008df:	81 7d f4 00 90 00 81 	cmpl   $0x81009000,-0xc(%ebp)
810008e6:	72 eb                	jb     810008d3 <cstart+0xf>
    }
    
    exit(main(argc, argv));
810008e8:	83 ec 08             	sub    $0x8,%esp
810008eb:	ff 75 0c             	push   0xc(%ebp)
810008ee:	ff 75 08             	push   0x8(%ebp)
810008f1:	e8 2a fe ff ff       	call   81000720 <main>
810008f6:	83 c4 10             	add    $0x10,%esp
810008f9:	83 ec 0c             	sub    $0xc,%esp
810008fc:	50                   	push   %eax
810008fd:	e8 02 04 00 00       	call   81000d04 <exit>

81000902 <sys_call>:
#include    "os_cfg.h"
#include    "lib_syscall.h"
#include    <stdlib.h>


int sys_call(syscall_args_t *args) {
81000902:	55                   	push   %ebp
81000903:	89 e5                	mov    %esp,%ebp
81000905:	57                   	push   %edi
81000906:	56                   	push   %esi
81000907:	53                   	push   %ebx
81000908:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
8100090b:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81000912:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
81000919:	8b 45 08             	mov    0x8(%ebp),%eax
8100091c:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
8100091f:	8b 55 08             	mov    0x8(%ebp),%edx
81000922:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
81000925:	8b 4d 08             	mov    0x8(%ebp),%ecx
81000928:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
8100092b:	8b 5d 08             	mov    0x8(%ebp),%ebx
8100092e:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
81000931:	8b 75 08             	mov    0x8(%ebp),%esi
81000934:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
81000936:	8d 7d e8             	lea    -0x18(%ebp),%edi
81000939:	50                   	push   %eax
8100093a:	52                   	push   %edx
8100093b:	51                   	push   %ecx
8100093c:	53                   	push   %ebx
8100093d:	56                   	push   %esi
8100093e:	ff 1f                	lcall  *(%edi)
81000940:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
81000943:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
81000946:	83 c4 10             	add    $0x10,%esp
81000949:	5b                   	pop    %ebx
8100094a:	5e                   	pop    %esi
8100094b:	5f                   	pop    %edi
8100094c:	5d                   	pop    %ebp
8100094d:	c3                   	ret    

8100094e <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
8100094e:	55                   	push   %ebp
8100094f:	89 e5                	mov    %esp,%ebp
81000951:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
81000954:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000958:	7e 1b                	jle    81000975 <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
8100095a:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
81000961:	8b 45 08             	mov    0x8(%ebp),%eax
81000964:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
81000967:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100096a:	50                   	push   %eax
8100096b:	e8 92 ff ff ff       	call   81000902 <sys_call>
81000970:	83 c4 04             	add    $0x4,%esp
81000973:	eb 01                	jmp    81000976 <msleep+0x28>
    if (ms <= 0) return;
81000975:	90                   	nop

}
81000976:	c9                   	leave  
81000977:	c3                   	ret    

81000978 <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
81000978:	55                   	push   %ebp
81000979:	89 e5                	mov    %esp,%ebp
8100097b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
8100097e:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
81000985:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000988:	50                   	push   %eax
81000989:	e8 74 ff ff ff       	call   81000902 <sys_call>
8100098e:	83 c4 04             	add    $0x4,%esp
}
81000991:	c9                   	leave  
81000992:	c3                   	ret    

81000993 <print_msg>:

void print_msg(const char *fmt, int arg) {
81000993:	55                   	push   %ebp
81000994:	89 e5                	mov    %esp,%ebp
81000996:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
81000999:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
810009a0:	8b 45 08             	mov    0x8(%ebp),%eax
810009a3:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
810009a6:	8b 45 0c             	mov    0xc(%ebp),%eax
810009a9:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
810009ac:	8d 45 ec             	lea    -0x14(%ebp),%eax
810009af:	50                   	push   %eax
810009b0:	e8 4d ff ff ff       	call   81000902 <sys_call>
810009b5:	83 c4 04             	add    $0x4,%esp
}
810009b8:	90                   	nop
810009b9:	c9                   	leave  
810009ba:	c3                   	ret    

810009bb <fork>:

int fork (void) {
810009bb:	55                   	push   %ebp
810009bc:	89 e5                	mov    %esp,%ebp
810009be:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
810009c1:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
810009c8:	8d 45 ec             	lea    -0x14(%ebp),%eax
810009cb:	50                   	push   %eax
810009cc:	e8 31 ff ff ff       	call   81000902 <sys_call>
810009d1:	83 c4 04             	add    $0x4,%esp
}
810009d4:	c9                   	leave  
810009d5:	c3                   	ret    

810009d6 <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
810009d6:	55                   	push   %ebp
810009d7:	89 e5                	mov    %esp,%ebp
810009d9:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
810009dc:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
810009e3:	8b 45 08             	mov    0x8(%ebp),%eax
810009e6:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
810009e9:	8b 45 0c             	mov    0xc(%ebp),%eax
810009ec:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
810009ef:	8b 45 10             	mov    0x10(%ebp),%eax
810009f2:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
810009f5:	8d 45 ec             	lea    -0x14(%ebp),%eax
810009f8:	50                   	push   %eax
810009f9:	e8 04 ff ff ff       	call   81000902 <sys_call>
810009fe:	83 c4 04             	add    $0x4,%esp
}
81000a01:	c9                   	leave  
81000a02:	c3                   	ret    

81000a03 <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
81000a03:	55                   	push   %ebp
81000a04:	89 e5                	mov    %esp,%ebp
81000a06:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
81000a09:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
81000a10:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a13:	50                   	push   %eax
81000a14:	e8 e9 fe ff ff       	call   81000902 <sys_call>
81000a19:	83 c4 04             	add    $0x4,%esp
}
81000a1c:	c9                   	leave  
81000a1d:	c3                   	ret    

81000a1e <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
81000a1e:	55                   	push   %ebp
81000a1f:	89 e5                	mov    %esp,%ebp
81000a21:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
81000a24:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
81000a2b:	8b 45 08             	mov    0x8(%ebp),%eax
81000a2e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
81000a31:	8b 45 0c             	mov    0xc(%ebp),%eax
81000a34:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000a37:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a3a:	50                   	push   %eax
81000a3b:	e8 c2 fe ff ff       	call   81000902 <sys_call>
81000a40:	83 c4 04             	add    $0x4,%esp
}
81000a43:	c9                   	leave  
81000a44:	c3                   	ret    

81000a45 <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
81000a45:	55                   	push   %ebp
81000a46:	89 e5                	mov    %esp,%ebp
81000a48:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
81000a4b:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
81000a52:	8b 45 08             	mov    0x8(%ebp),%eax
81000a55:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000a58:	8b 45 0c             	mov    0xc(%ebp),%eax
81000a5b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000a5e:	8b 45 10             	mov    0x10(%ebp),%eax
81000a61:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000a64:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a67:	50                   	push   %eax
81000a68:	e8 95 fe ff ff       	call   81000902 <sys_call>
81000a6d:	83 c4 04             	add    $0x4,%esp
}
81000a70:	c9                   	leave  
81000a71:	c3                   	ret    

81000a72 <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
81000a72:	55                   	push   %ebp
81000a73:	89 e5                	mov    %esp,%ebp
81000a75:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
81000a78:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
81000a7f:	8b 45 08             	mov    0x8(%ebp),%eax
81000a82:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000a85:	8b 45 0c             	mov    0xc(%ebp),%eax
81000a88:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000a8b:	8b 45 10             	mov    0x10(%ebp),%eax
81000a8e:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000a91:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a94:	50                   	push   %eax
81000a95:	e8 68 fe ff ff       	call   81000902 <sys_call>
81000a9a:	83 c4 04             	add    $0x4,%esp
}
81000a9d:	c9                   	leave  
81000a9e:	c3                   	ret    

81000a9f <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
81000a9f:	55                   	push   %ebp
81000aa0:	89 e5                	mov    %esp,%ebp
81000aa2:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
81000aa5:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
81000aac:	8b 45 08             	mov    0x8(%ebp),%eax
81000aaf:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000ab2:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000ab5:	50                   	push   %eax
81000ab6:	e8 47 fe ff ff       	call   81000902 <sys_call>
81000abb:	83 c4 04             	add    $0x4,%esp
}
81000abe:	c9                   	leave  
81000abf:	c3                   	ret    

81000ac0 <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
81000ac0:	55                   	push   %ebp
81000ac1:	89 e5                	mov    %esp,%ebp
81000ac3:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
81000ac6:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
81000acd:	8b 45 08             	mov    0x8(%ebp),%eax
81000ad0:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
81000ad3:	8b 45 0c             	mov    0xc(%ebp),%eax
81000ad6:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
81000ad9:	8b 45 10             	mov    0x10(%ebp),%eax
81000adc:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000adf:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000ae2:	50                   	push   %eax
81000ae3:	e8 1a fe ff ff       	call   81000902 <sys_call>
81000ae8:	83 c4 04             	add    $0x4,%esp
}
81000aeb:	c9                   	leave  
81000aec:	c3                   	ret    

81000aed <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
81000aed:	55                   	push   %ebp
81000aee:	89 e5                	mov    %esp,%ebp
81000af0:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
81000af3:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
81000afa:	8b 45 08             	mov    0x8(%ebp),%eax
81000afd:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000b00:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b03:	50                   	push   %eax
81000b04:	e8 f9 fd ff ff       	call   81000902 <sys_call>
81000b09:	83 c4 04             	add    $0x4,%esp
}
81000b0c:	c9                   	leave  
81000b0d:	c3                   	ret    

81000b0e <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
81000b0e:	55                   	push   %ebp
81000b0f:	89 e5                	mov    %esp,%ebp
81000b11:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
81000b14:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
81000b1b:	8b 45 08             	mov    0x8(%ebp),%eax
81000b1e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
81000b21:	8b 45 0c             	mov    0xc(%ebp),%eax
81000b24:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000b27:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b2a:	50                   	push   %eax
81000b2b:	e8 d2 fd ff ff       	call   81000902 <sys_call>
81000b30:	83 c4 04             	add    $0x4,%esp
}
81000b33:	c9                   	leave  
81000b34:	c3                   	ret    

81000b35 <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
81000b35:	55                   	push   %ebp
81000b36:	89 e5                	mov    %esp,%ebp
81000b38:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
81000b3b:	c7 45 ec 3b 00 00 00 	movl   $0x3b,-0x14(%ebp)
    args.arg0 = (int)incr;
81000b42:	8b 45 08             	mov    0x8(%ebp),%eax
81000b45:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
81000b48:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b4b:	50                   	push   %eax
81000b4c:	e8 b1 fd ff ff       	call   81000902 <sys_call>
81000b51:	83 c4 04             	add    $0x4,%esp
}
81000b54:	c9                   	leave  
81000b55:	c3                   	ret    

81000b56 <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
81000b56:	55                   	push   %ebp
81000b57:	89 e5                	mov    %esp,%ebp
81000b59:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
81000b5c:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = file;
81000b63:	8b 45 08             	mov    0x8(%ebp),%eax
81000b66:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000b69:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b6c:	50                   	push   %eax
81000b6d:	e8 90 fd ff ff       	call   81000902 <sys_call>
81000b72:	83 c4 04             	add    $0x4,%esp
}
81000b75:	c9                   	leave  
81000b76:	c3                   	ret    

81000b77 <_exit>:
/**
 * @brief 进程退出的系统调用
 * 
 * @param status 
 */
void _exit(int status) {
81000b77:	55                   	push   %ebp
81000b78:	89 e5                	mov    %esp,%ebp
81000b7a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
81000b7d:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = status;
81000b84:	8b 45 08             	mov    0x8(%ebp),%eax
81000b87:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    sys_call(&args);
81000b8a:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b8d:	50                   	push   %eax
81000b8e:	e8 6f fd ff ff       	call   81000902 <sys_call>
81000b93:	83 c4 04             	add    $0x4,%esp
}
81000b96:	90                   	nop
81000b97:	c9                   	leave  
81000b98:	c3                   	ret    

81000b99 <wait>:
 * @brief 回收进程资源
 * 
 * @param status 
 * @return int 
 */
int wait(int *status) {
81000b99:	55                   	push   %ebp
81000b9a:	89 e5                	mov    %esp,%ebp
81000b9c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
81000b9f:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
81000ba6:	8b 45 08             	mov    0x8(%ebp),%eax
81000ba9:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    return sys_call(&args);
81000bac:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000baf:	50                   	push   %eax
81000bb0:	e8 4d fd ff ff       	call   81000902 <sys_call>
81000bb5:	83 c4 04             	add    $0x4,%esp
}
81000bb8:	c9                   	leave  
81000bb9:	c3                   	ret    

81000bba <opendir>:
 * @brief 打开一个目录
 * 
 * @param path 
 * @return DIR* 
 */
DIR *opendir(const char *path) {
81000bba:	55                   	push   %ebp
81000bbb:	89 e5                	mov    %esp,%ebp
81000bbd:	83 ec 28             	sub    $0x28,%esp
    DIR *dir = (DIR*)malloc(sizeof(DIR));
81000bc0:	83 ec 0c             	sub    $0xc,%esp
81000bc3:	6a 20                	push   $0x20
81000bc5:	e8 18 28 00 00       	call   810033e2 <malloc>
81000bca:	83 c4 10             	add    $0x10,%esp
81000bcd:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR*)0) {
81000bd0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000bd4:	75 07                	jne    81000bdd <opendir+0x23>
        return (DIR*)0;
81000bd6:	b8 00 00 00 00       	mov    $0x0,%eax
81000bdb:	eb 43                	jmp    81000c20 <opendir+0x66>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
81000bdd:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)path;
81000be4:	8b 45 08             	mov    0x8(%ebp),%eax
81000be7:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
81000bea:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000bed:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
81000bf0:	83 ec 0c             	sub    $0xc,%esp
81000bf3:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000bf6:	50                   	push   %eax
81000bf7:	e8 06 fd ff ff       	call   81000902 <sys_call>
81000bfc:	83 c4 10             	add    $0x10,%esp
81000bff:	89 45 f0             	mov    %eax,-0x10(%ebp)

    if (err < 0) {
81000c02:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000c06:	79 15                	jns    81000c1d <opendir+0x63>
        free(dir);
81000c08:	83 ec 0c             	sub    $0xc,%esp
81000c0b:	ff 75 f4             	push   -0xc(%ebp)
81000c0e:	e8 eb 27 00 00       	call   810033fe <free>
81000c13:	83 c4 10             	add    $0x10,%esp
        return (DIR*)0;
81000c16:	b8 00 00 00 00       	mov    $0x0,%eax
81000c1b:	eb 03                	jmp    81000c20 <opendir+0x66>
    }

    return dir;    
81000c1d:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000c20:	c9                   	leave  
81000c21:	c3                   	ret    

81000c22 <readdir>:
 * @brief 读取目录信息得到目录项表
 * 
 * @param dir 
 * @return struct dirent* 
 */
struct dirent *readdir(DIR *dir) {
81000c22:	55                   	push   %ebp
81000c23:	89 e5                	mov    %esp,%ebp
81000c25:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_readdir;
81000c28:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
81000c2f:	8b 45 08             	mov    0x8(%ebp),%eax
81000c32:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&(dir->dirent);
81000c35:	8b 45 08             	mov    0x8(%ebp),%eax
81000c38:	83 c0 04             	add    $0x4,%eax
81000c3b:	89 45 f0             	mov    %eax,-0x10(%ebp)

    int err = sys_call(&args);
81000c3e:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000c41:	50                   	push   %eax
81000c42:	e8 bb fc ff ff       	call   81000902 <sys_call>
81000c47:	83 c4 04             	add    $0x4,%esp
81000c4a:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0) {
81000c4d:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
81000c51:	79 07                	jns    81000c5a <readdir+0x38>
        return (struct dirent*)0;
81000c53:	b8 00 00 00 00       	mov    $0x0,%eax
81000c58:	eb 06                	jmp    81000c60 <readdir+0x3e>
    }

    return &dir->dirent;   
81000c5a:	8b 45 08             	mov    0x8(%ebp),%eax
81000c5d:	83 c0 04             	add    $0x4,%eax
}
81000c60:	c9                   	leave  
81000c61:	c3                   	ret    

81000c62 <closedir>:
 * @brief 关闭目录
 * 
 * @param dir 
 * @return int 
 */
int closedir(DIR *dir) {
81000c62:	55                   	push   %ebp
81000c63:	89 e5                	mov    %esp,%ebp
81000c65:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
81000c68:	c7 45 e0 3e 00 00 00 	movl   $0x3e,-0x20(%ebp)
    args.arg0 = (int)dir;
81000c6f:	8b 45 08             	mov    0x8(%ebp),%eax
81000c72:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
81000c75:	8d 45 e0             	lea    -0x20(%ebp),%eax
81000c78:	50                   	push   %eax
81000c79:	e8 84 fc ff ff       	call   81000902 <sys_call>
81000c7e:	83 c4 04             	add    $0x4,%esp
81000c81:	89 45 f4             	mov    %eax,-0xc(%ebp)
    free(dir);
81000c84:	83 ec 0c             	sub    $0xc,%esp
81000c87:	ff 75 08             	push   0x8(%ebp)
81000c8a:	e8 6f 27 00 00       	call   810033fe <free>
81000c8f:	83 c4 10             	add    $0x10,%esp

    return err;   
81000c92:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000c95:	c9                   	leave  
81000c96:	c3                   	ret    

81000c97 <ioctl>:
 * @param cmd 
 * @param arg0 
 * @param arg1 
 * @return int 
 */
int ioctl(int file, int cmd, int arg0, int arg1) {
81000c97:	55                   	push   %ebp
81000c98:	89 e5                	mov    %esp,%ebp
81000c9a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_ioctl;
81000c9d:	c7 45 e8 3a 00 00 00 	movl   $0x3a,-0x18(%ebp)
    args.arg0 = file;
81000ca4:	8b 45 08             	mov    0x8(%ebp),%eax
81000ca7:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = cmd;
81000caa:	8b 45 0c             	mov    0xc(%ebp),%eax
81000cad:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg2 = arg0;
81000cb0:	8b 45 10             	mov    0x10(%ebp),%eax
81000cb3:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg3 = arg1;
81000cb6:	8b 45 14             	mov    0x14(%ebp),%eax
81000cb9:	89 45 f8             	mov    %eax,-0x8(%ebp)

    int err = sys_call(&args);
81000cbc:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000cbf:	50                   	push   %eax
81000cc0:	e8 3d fc ff ff       	call   81000902 <sys_call>
81000cc5:	83 c4 04             	add    $0x4,%esp
81000cc8:	89 45 fc             	mov    %eax,-0x4(%ebp)

    return err;   
81000ccb:	8b 45 fc             	mov    -0x4(%ebp),%eax
81000cce:	c9                   	leave  
81000ccf:	c3                   	ret    

81000cd0 <atoi>:
81000cd0:	55                   	push   %ebp
81000cd1:	89 e5                	mov    %esp,%ebp
81000cd3:	83 ec 08             	sub    $0x8,%esp
81000cd6:	83 ec 04             	sub    $0x4,%esp
81000cd9:	6a 0a                	push   $0xa
81000cdb:	6a 00                	push   $0x0
81000cdd:	ff 75 08             	push   0x8(%ebp)
81000ce0:	e8 31 4d 00 00       	call   81005a16 <strtol>
81000ce5:	83 c4 10             	add    $0x10,%esp
81000ce8:	c9                   	leave  
81000ce9:	c3                   	ret    

81000cea <_atoi_r>:
81000cea:	55                   	push   %ebp
81000ceb:	89 e5                	mov    %esp,%ebp
81000ced:	83 ec 08             	sub    $0x8,%esp
81000cf0:	6a 0a                	push   $0xa
81000cf2:	6a 00                	push   $0x0
81000cf4:	ff 75 0c             	push   0xc(%ebp)
81000cf7:	ff 75 08             	push   0x8(%ebp)
81000cfa:	e8 cd 4c 00 00       	call   810059cc <_strtol_r>
81000cff:	83 c4 10             	add    $0x10,%esp
81000d02:	c9                   	leave  
81000d03:	c3                   	ret    

81000d04 <exit>:
81000d04:	55                   	push   %ebp
81000d05:	89 e5                	mov    %esp,%ebp
81000d07:	83 ec 08             	sub    $0x8,%esp
81000d0a:	83 ec 08             	sub    $0x8,%esp
81000d0d:	6a 00                	push   $0x0
81000d0f:	ff 75 08             	push   0x8(%ebp)
81000d12:	e8 fc 4f 00 00       	call   81005d13 <__call_exitprocs>
81000d17:	83 c4 10             	add    $0x10,%esp
81000d1a:	a1 f8 7b 00 81       	mov    0x81007bf8,%eax
81000d1f:	8b 40 3c             	mov    0x3c(%eax),%eax
81000d22:	85 c0                	test   %eax,%eax
81000d24:	74 17                	je     81000d3d <exit+0x39>
81000d26:	a1 f8 7b 00 81       	mov    0x81007bf8,%eax
81000d2b:	8b 40 3c             	mov    0x3c(%eax),%eax
81000d2e:	8b 15 f8 7b 00 81    	mov    0x81007bf8,%edx
81000d34:	83 ec 0c             	sub    $0xc,%esp
81000d37:	52                   	push   %edx
81000d38:	ff d0                	call   *%eax
81000d3a:	83 c4 10             	add    $0x10,%esp
81000d3d:	83 ec 0c             	sub    $0xc,%esp
81000d40:	ff 75 08             	push   0x8(%ebp)
81000d43:	e8 2f fe ff ff       	call   81000b77 <_exit>

81000d48 <_fclose_r>:
81000d48:	55                   	push   %ebp
81000d49:	89 e5                	mov    %esp,%ebp
81000d4b:	53                   	push   %ebx
81000d4c:	83 ec 14             	sub    $0x14,%esp
81000d4f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000d52:	85 db                	test   %ebx,%ebx
81000d54:	75 0a                	jne    81000d60 <_fclose_r+0x18>
81000d56:	b8 00 00 00 00       	mov    $0x0,%eax
81000d5b:	e9 ea 00 00 00       	jmp    81000e4a <_fclose_r+0x102>
81000d60:	8b 45 08             	mov    0x8(%ebp),%eax
81000d63:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000d66:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000d6a:	74 18                	je     81000d84 <_fclose_r+0x3c>
81000d6c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000d6f:	8b 40 38             	mov    0x38(%eax),%eax
81000d72:	85 c0                	test   %eax,%eax
81000d74:	75 0e                	jne    81000d84 <_fclose_r+0x3c>
81000d76:	83 ec 0c             	sub    $0xc,%esp
81000d79:	ff 75 f0             	push   -0x10(%ebp)
81000d7c:	e8 14 08 00 00       	call   81001595 <__sinit>
81000d81:	83 c4 10             	add    $0x10,%esp
81000d84:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000d88:	66 85 c0             	test   %ax,%ax
81000d8b:	75 0a                	jne    81000d97 <_fclose_r+0x4f>
81000d8d:	b8 00 00 00 00       	mov    $0x0,%eax
81000d92:	e9 b3 00 00 00       	jmp    81000e4a <_fclose_r+0x102>
81000d97:	83 ec 08             	sub    $0x8,%esp
81000d9a:	53                   	push   %ebx
81000d9b:	ff 75 08             	push   0x8(%ebp)
81000d9e:	e8 c9 00 00 00       	call   81000e6c <__sflush_r>
81000da3:	83 c4 10             	add    $0x10,%esp
81000da6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000da9:	8b 43 2c             	mov    0x2c(%ebx),%eax
81000dac:	85 c0                	test   %eax,%eax
81000dae:	74 1d                	je     81000dcd <_fclose_r+0x85>
81000db0:	8b 43 2c             	mov    0x2c(%ebx),%eax
81000db3:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000db6:	83 ec 08             	sub    $0x8,%esp
81000db9:	52                   	push   %edx
81000dba:	ff 75 08             	push   0x8(%ebp)
81000dbd:	ff d0                	call   *%eax
81000dbf:	83 c4 10             	add    $0x10,%esp
81000dc2:	85 c0                	test   %eax,%eax
81000dc4:	79 07                	jns    81000dcd <_fclose_r+0x85>
81000dc6:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81000dcd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000dd1:	98                   	cwtl   
81000dd2:	25 80 00 00 00       	and    $0x80,%eax
81000dd7:	85 c0                	test   %eax,%eax
81000dd9:	74 12                	je     81000ded <_fclose_r+0xa5>
81000ddb:	8b 43 10             	mov    0x10(%ebx),%eax
81000dde:	83 ec 08             	sub    $0x8,%esp
81000de1:	50                   	push   %eax
81000de2:	ff 75 08             	push   0x8(%ebp)
81000de5:	e8 01 0a 00 00       	call   810017eb <_free_r>
81000dea:	83 c4 10             	add    $0x10,%esp
81000ded:	8b 43 30             	mov    0x30(%ebx),%eax
81000df0:	85 c0                	test   %eax,%eax
81000df2:	74 23                	je     81000e17 <_fclose_r+0xcf>
81000df4:	8b 53 30             	mov    0x30(%ebx),%edx
81000df7:	8d 43 40             	lea    0x40(%ebx),%eax
81000dfa:	39 c2                	cmp    %eax,%edx
81000dfc:	74 12                	je     81000e10 <_fclose_r+0xc8>
81000dfe:	8b 43 30             	mov    0x30(%ebx),%eax
81000e01:	83 ec 08             	sub    $0x8,%esp
81000e04:	50                   	push   %eax
81000e05:	ff 75 08             	push   0x8(%ebp)
81000e08:	e8 de 09 00 00       	call   810017eb <_free_r>
81000e0d:	83 c4 10             	add    $0x10,%esp
81000e10:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81000e17:	8b 43 44             	mov    0x44(%ebx),%eax
81000e1a:	85 c0                	test   %eax,%eax
81000e1c:	74 19                	je     81000e37 <_fclose_r+0xef>
81000e1e:	8b 43 44             	mov    0x44(%ebx),%eax
81000e21:	83 ec 08             	sub    $0x8,%esp
81000e24:	50                   	push   %eax
81000e25:	ff 75 08             	push   0x8(%ebp)
81000e28:	e8 be 09 00 00       	call   810017eb <_free_r>
81000e2d:	83 c4 10             	add    $0x10,%esp
81000e30:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81000e37:	e8 f2 07 00 00       	call   8100162e <__sfp_lock_acquire>
81000e3c:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81000e42:	e8 ed 07 00 00       	call   81001634 <__sfp_lock_release>
81000e47:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e4a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000e4d:	c9                   	leave  
81000e4e:	c3                   	ret    

81000e4f <fclose>:
81000e4f:	55                   	push   %ebp
81000e50:	89 e5                	mov    %esp,%ebp
81000e52:	83 ec 08             	sub    $0x8,%esp
81000e55:	8b 55 08             	mov    0x8(%ebp),%edx
81000e58:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81000e5d:	83 ec 08             	sub    $0x8,%esp
81000e60:	52                   	push   %edx
81000e61:	50                   	push   %eax
81000e62:	e8 e1 fe ff ff       	call   81000d48 <_fclose_r>
81000e67:	83 c4 10             	add    $0x10,%esp
81000e6a:	c9                   	leave  
81000e6b:	c3                   	ret    

81000e6c <__sflush_r>:
81000e6c:	55                   	push   %ebp
81000e6d:	89 e5                	mov    %esp,%ebp
81000e6f:	57                   	push   %edi
81000e70:	56                   	push   %esi
81000e71:	53                   	push   %ebx
81000e72:	83 ec 1c             	sub    $0x1c,%esp
81000e75:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000e78:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e7c:	66 89 45 de          	mov    %ax,-0x22(%ebp)
81000e80:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000e84:	83 e0 08             	and    $0x8,%eax
81000e87:	85 c0                	test   %eax,%eax
81000e89:	0f 85 93 01 00 00    	jne    81001022 <__sflush_r+0x1b6>
81000e8f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e93:	80 cc 08             	or     $0x8,%ah
81000e96:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000e9a:	8b 43 04             	mov    0x4(%ebx),%eax
81000e9d:	85 c0                	test   %eax,%eax
81000e9f:	7f 0b                	jg     81000eac <__sflush_r+0x40>
81000ea1:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000ea4:	85 c0                	test   %eax,%eax
81000ea6:	0f 8e 6f 01 00 00    	jle    8100101b <__sflush_r+0x1af>
81000eac:	8b 43 28             	mov    0x28(%ebx),%eax
81000eaf:	85 c0                	test   %eax,%eax
81000eb1:	0f 84 64 01 00 00    	je     8100101b <__sflush_r+0x1af>
81000eb7:	8b 45 08             	mov    0x8(%ebp),%eax
81000eba:	8b 00                	mov    (%eax),%eax
81000ebc:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000ebf:	8b 45 08             	mov    0x8(%ebp),%eax
81000ec2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000ec8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ecc:	98                   	cwtl   
81000ecd:	25 00 10 00 00       	and    $0x1000,%eax
81000ed2:	85 c0                	test   %eax,%eax
81000ed4:	74 08                	je     81000ede <__sflush_r+0x72>
81000ed6:	8b 43 50             	mov    0x50(%ebx),%eax
81000ed9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000edc:	eb 64                	jmp    81000f42 <__sflush_r+0xd6>
81000ede:	8b 43 28             	mov    0x28(%ebx),%eax
81000ee1:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000ee4:	6a 01                	push   $0x1
81000ee6:	6a 00                	push   $0x0
81000ee8:	52                   	push   %edx
81000ee9:	ff 75 08             	push   0x8(%ebp)
81000eec:	ff d0                	call   *%eax
81000eee:	83 c4 10             	add    $0x10,%esp
81000ef1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000ef4:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000ef8:	75 48                	jne    81000f42 <__sflush_r+0xd6>
81000efa:	8b 45 08             	mov    0x8(%ebp),%eax
81000efd:	8b 00                	mov    (%eax),%eax
81000eff:	85 c0                	test   %eax,%eax
81000f01:	74 3f                	je     81000f42 <__sflush_r+0xd6>
81000f03:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81000f0a:	8b 45 08             	mov    0x8(%ebp),%eax
81000f0d:	8b 00                	mov    (%eax),%eax
81000f0f:	83 f8 1d             	cmp    $0x1d,%eax
81000f12:	74 0a                	je     81000f1e <__sflush_r+0xb2>
81000f14:	8b 45 08             	mov    0x8(%ebp),%eax
81000f17:	8b 00                	mov    (%eax),%eax
81000f19:	83 f8 16             	cmp    $0x16,%eax
81000f1c:	75 11                	jne    81000f2f <__sflush_r+0xc3>
81000f1e:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000f25:	8b 45 08             	mov    0x8(%ebp),%eax
81000f28:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000f2b:	89 10                	mov    %edx,(%eax)
81000f2d:	eb 0b                	jmp    81000f3a <__sflush_r+0xce>
81000f2f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f33:	83 c8 40             	or     $0x40,%eax
81000f36:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000f3a:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000f3d:	e9 48 01 00 00       	jmp    8100108a <__sflush_r+0x21e>
81000f42:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f46:	98                   	cwtl   
81000f47:	83 e0 04             	and    $0x4,%eax
81000f4a:	85 c0                	test   %eax,%eax
81000f4c:	74 13                	je     81000f61 <__sflush_r+0xf5>
81000f4e:	8b 43 04             	mov    0x4(%ebx),%eax
81000f51:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000f54:	8b 43 30             	mov    0x30(%ebx),%eax
81000f57:	85 c0                	test   %eax,%eax
81000f59:	74 06                	je     81000f61 <__sflush_r+0xf5>
81000f5b:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000f5e:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000f61:	8b 43 28             	mov    0x28(%ebx),%eax
81000f64:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000f67:	6a 00                	push   $0x0
81000f69:	ff 75 e4             	push   -0x1c(%ebp)
81000f6c:	52                   	push   %edx
81000f6d:	ff 75 08             	push   0x8(%ebp)
81000f70:	ff d0                	call   *%eax
81000f72:	83 c4 10             	add    $0x10,%esp
81000f75:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000f78:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000f7c:	75 1d                	jne    81000f9b <__sflush_r+0x12f>
81000f7e:	8b 45 08             	mov    0x8(%ebp),%eax
81000f81:	8b 00                	mov    (%eax),%eax
81000f83:	85 c0                	test   %eax,%eax
81000f85:	74 14                	je     81000f9b <__sflush_r+0x12f>
81000f87:	8b 45 08             	mov    0x8(%ebp),%eax
81000f8a:	8b 00                	mov    (%eax),%eax
81000f8c:	83 f8 1d             	cmp    $0x1d,%eax
81000f8f:	74 0a                	je     81000f9b <__sflush_r+0x12f>
81000f91:	8b 45 08             	mov    0x8(%ebp),%eax
81000f94:	8b 00                	mov    (%eax),%eax
81000f96:	83 f8 16             	cmp    $0x16,%eax
81000f99:	75 6e                	jne    81001009 <__sflush_r+0x19d>
81000f9b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f9f:	80 e4 f7             	and    $0xf7,%ah
81000fa2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000fa6:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81000fad:	8b 43 10             	mov    0x10(%ebx),%eax
81000fb0:	89 03                	mov    %eax,(%ebx)
81000fb2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000fb6:	98                   	cwtl   
81000fb7:	25 00 10 00 00       	and    $0x1000,%eax
81000fbc:	85 c0                	test   %eax,%eax
81000fbe:	74 15                	je     81000fd5 <__sflush_r+0x169>
81000fc0:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000fc4:	75 09                	jne    81000fcf <__sflush_r+0x163>
81000fc6:	8b 45 08             	mov    0x8(%ebp),%eax
81000fc9:	8b 00                	mov    (%eax),%eax
81000fcb:	85 c0                	test   %eax,%eax
81000fcd:	75 06                	jne    81000fd5 <__sflush_r+0x169>
81000fcf:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000fd2:	89 43 50             	mov    %eax,0x50(%ebx)
81000fd5:	8b 45 08             	mov    0x8(%ebp),%eax
81000fd8:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000fdb:	89 10                	mov    %edx,(%eax)
81000fdd:	8b 43 30             	mov    0x30(%ebx),%eax
81000fe0:	85 c0                	test   %eax,%eax
81000fe2:	74 37                	je     8100101b <__sflush_r+0x1af>
81000fe4:	8b 53 30             	mov    0x30(%ebx),%edx
81000fe7:	8d 43 40             	lea    0x40(%ebx),%eax
81000fea:	39 c2                	cmp    %eax,%edx
81000fec:	74 12                	je     81001000 <__sflush_r+0x194>
81000fee:	8b 43 30             	mov    0x30(%ebx),%eax
81000ff1:	83 ec 08             	sub    $0x8,%esp
81000ff4:	50                   	push   %eax
81000ff5:	ff 75 08             	push   0x8(%ebp)
81000ff8:	e8 ee 07 00 00       	call   810017eb <_free_r>
81000ffd:	83 c4 10             	add    $0x10,%esp
81001000:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81001007:	eb 12                	jmp    8100101b <__sflush_r+0x1af>
81001009:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100100d:	83 c8 40             	or     $0x40,%eax
81001010:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001014:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001019:	eb 6f                	jmp    8100108a <__sflush_r+0x21e>
8100101b:	b8 00 00 00 00       	mov    $0x0,%eax
81001020:	eb 68                	jmp    8100108a <__sflush_r+0x21e>
81001022:	8b 73 10             	mov    0x10(%ebx),%esi
81001025:	85 f6                	test   %esi,%esi
81001027:	75 07                	jne    81001030 <__sflush_r+0x1c4>
81001029:	b8 00 00 00 00       	mov    $0x0,%eax
8100102e:	eb 5a                	jmp    8100108a <__sflush_r+0x21e>
81001030:	8b 03                	mov    (%ebx),%eax
81001032:	29 f0                	sub    %esi,%eax
81001034:	89 c7                	mov    %eax,%edi
81001036:	89 33                	mov    %esi,(%ebx)
81001038:	0f bf 45 de          	movswl -0x22(%ebp),%eax
8100103c:	83 e0 03             	and    $0x3,%eax
8100103f:	85 c0                	test   %eax,%eax
81001041:	75 05                	jne    81001048 <__sflush_r+0x1dc>
81001043:	8b 43 14             	mov    0x14(%ebx),%eax
81001046:	eb 05                	jmp    8100104d <__sflush_r+0x1e1>
81001048:	b8 00 00 00 00       	mov    $0x0,%eax
8100104d:	89 43 08             	mov    %eax,0x8(%ebx)
81001050:	eb 2f                	jmp    81001081 <__sflush_r+0x215>
81001052:	8b 43 24             	mov    0x24(%ebx),%eax
81001055:	8b 53 1c             	mov    0x1c(%ebx),%edx
81001058:	57                   	push   %edi
81001059:	56                   	push   %esi
8100105a:	52                   	push   %edx
8100105b:	ff 75 08             	push   0x8(%ebp)
8100105e:	ff d0                	call   *%eax
81001060:	83 c4 10             	add    $0x10,%esp
81001063:	85 c0                	test   %eax,%eax
81001065:	7f 12                	jg     81001079 <__sflush_r+0x20d>
81001067:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100106b:	83 c8 40             	or     $0x40,%eax
8100106e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001072:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001077:	eb 11                	jmp    8100108a <__sflush_r+0x21e>
81001079:	89 c1                	mov    %eax,%ecx
8100107b:	89 c8                	mov    %ecx,%eax
8100107d:	01 c6                	add    %eax,%esi
8100107f:	29 cf                	sub    %ecx,%edi
81001081:	85 ff                	test   %edi,%edi
81001083:	7f cd                	jg     81001052 <__sflush_r+0x1e6>
81001085:	b8 00 00 00 00       	mov    $0x0,%eax
8100108a:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100108d:	5b                   	pop    %ebx
8100108e:	5e                   	pop    %esi
8100108f:	5f                   	pop    %edi
81001090:	5d                   	pop    %ebp
81001091:	c3                   	ret    

81001092 <_fflush_r>:
81001092:	55                   	push   %ebp
81001093:	89 e5                	mov    %esp,%ebp
81001095:	53                   	push   %ebx
81001096:	83 ec 14             	sub    $0x14,%esp
81001099:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100109c:	8b 45 08             	mov    0x8(%ebp),%eax
8100109f:	89 45 f4             	mov    %eax,-0xc(%ebp)
810010a2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810010a6:	74 18                	je     810010c0 <_fflush_r+0x2e>
810010a8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010ab:	8b 40 38             	mov    0x38(%eax),%eax
810010ae:	85 c0                	test   %eax,%eax
810010b0:	75 0e                	jne    810010c0 <_fflush_r+0x2e>
810010b2:	83 ec 0c             	sub    $0xc,%esp
810010b5:	ff 75 f4             	push   -0xc(%ebp)
810010b8:	e8 d8 04 00 00       	call   81001595 <__sinit>
810010bd:	83 c4 10             	add    $0x10,%esp
810010c0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810010c4:	66 85 c0             	test   %ax,%ax
810010c7:	75 07                	jne    810010d0 <_fflush_r+0x3e>
810010c9:	b8 00 00 00 00       	mov    $0x0,%eax
810010ce:	eb 15                	jmp    810010e5 <_fflush_r+0x53>
810010d0:	83 ec 08             	sub    $0x8,%esp
810010d3:	53                   	push   %ebx
810010d4:	ff 75 08             	push   0x8(%ebp)
810010d7:	e8 90 fd ff ff       	call   81000e6c <__sflush_r>
810010dc:	83 c4 10             	add    $0x10,%esp
810010df:	89 45 f0             	mov    %eax,-0x10(%ebp)
810010e2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010e5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810010e8:	c9                   	leave  
810010e9:	c3                   	ret    

810010ea <fflush>:
810010ea:	55                   	push   %ebp
810010eb:	89 e5                	mov    %esp,%ebp
810010ed:	83 ec 08             	sub    $0x8,%esp
810010f0:	8b 55 08             	mov    0x8(%ebp),%edx
810010f3:	85 d2                	test   %edx,%edx
810010f5:	75 18                	jne    8100110f <fflush+0x25>
810010f7:	a1 f8 7b 00 81       	mov    0x81007bf8,%eax
810010fc:	83 ec 08             	sub    $0x8,%esp
810010ff:	68 92 10 00 81       	push   $0x81001092
81001104:	50                   	push   %eax
81001105:	e8 d6 11 00 00       	call   810022e0 <_fwalk_reent>
8100110a:	83 c4 10             	add    $0x10,%esp
8100110d:	eb 12                	jmp    81001121 <fflush+0x37>
8100110f:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81001114:	83 ec 08             	sub    $0x8,%esp
81001117:	52                   	push   %edx
81001118:	50                   	push   %eax
81001119:	e8 74 ff ff ff       	call   81001092 <_fflush_r>
8100111e:	83 c4 10             	add    $0x10,%esp
81001121:	c9                   	leave  
81001122:	c3                   	ret    

81001123 <_fgets_r>:
81001123:	55                   	push   %ebp
81001124:	89 e5                	mov    %esp,%ebp
81001126:	83 ec 28             	sub    $0x28,%esp
81001129:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
8100112d:	7f 0a                	jg     81001139 <_fgets_r+0x16>
8100112f:	b8 00 00 00 00       	mov    $0x0,%eax
81001134:	e9 46 01 00 00       	jmp    8100127f <_fgets_r+0x15c>
81001139:	8b 45 0c             	mov    0xc(%ebp),%eax
8100113c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100113f:	8b 45 08             	mov    0x8(%ebp),%eax
81001142:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001145:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81001149:	74 18                	je     81001163 <_fgets_r+0x40>
8100114b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100114e:	8b 40 38             	mov    0x38(%eax),%eax
81001151:	85 c0                	test   %eax,%eax
81001153:	75 0e                	jne    81001163 <_fgets_r+0x40>
81001155:	83 ec 0c             	sub    $0xc,%esp
81001158:	ff 75 ec             	push   -0x14(%ebp)
8100115b:	e8 35 04 00 00       	call   81001595 <__sinit>
81001160:	83 c4 10             	add    $0x10,%esp
81001163:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
81001167:	8b 45 14             	mov    0x14(%ebp),%eax
8100116a:	8b 40 04             	mov    0x4(%eax),%eax
8100116d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001170:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001174:	75 34                	jne    810011aa <_fgets_r+0x87>
81001176:	83 ec 08             	sub    $0x8,%esp
81001179:	ff 75 14             	push   0x14(%ebp)
8100117c:	ff 75 08             	push   0x8(%ebp)
8100117f:	e8 bd 3d 00 00       	call   81004f41 <__srefill_r>
81001184:	83 c4 10             	add    $0x10,%esp
81001187:	85 c0                	test   %eax,%eax
81001189:	74 16                	je     810011a1 <_fgets_r+0x7e>
8100118b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100118e:	3b 45 0c             	cmp    0xc(%ebp),%eax
81001191:	0f 85 de 00 00 00    	jne    81001275 <_fgets_r+0x152>
81001197:	b8 00 00 00 00       	mov    $0x0,%eax
8100119c:	e9 de 00 00 00       	jmp    8100127f <_fgets_r+0x15c>
810011a1:	8b 45 14             	mov    0x14(%ebp),%eax
810011a4:	8b 40 04             	mov    0x4(%eax),%eax
810011a7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810011aa:	8b 45 14             	mov    0x14(%ebp),%eax
810011ad:	8b 00                	mov    (%eax),%eax
810011af:	89 45 e8             	mov    %eax,-0x18(%ebp)
810011b2:	8b 45 10             	mov    0x10(%ebp),%eax
810011b5:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810011b8:	76 06                	jbe    810011c0 <_fgets_r+0x9d>
810011ba:	8b 45 10             	mov    0x10(%ebp),%eax
810011bd:	89 45 f4             	mov    %eax,-0xc(%ebp)
810011c0:	83 ec 04             	sub    $0x4,%esp
810011c3:	ff 75 f4             	push   -0xc(%ebp)
810011c6:	6a 0a                	push   $0xa
810011c8:	ff 75 e8             	push   -0x18(%ebp)
810011cb:	e8 00 2d 00 00       	call   81003ed0 <memchr>
810011d0:	83 c4 10             	add    $0x10,%esp
810011d3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810011d6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810011da:	74 4a                	je     81001226 <_fgets_r+0x103>
810011dc:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810011e0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810011e3:	2b 45 e8             	sub    -0x18(%ebp),%eax
810011e6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810011e9:	8b 45 14             	mov    0x14(%ebp),%eax
810011ec:	8b 40 04             	mov    0x4(%eax),%eax
810011ef:	2b 45 f4             	sub    -0xc(%ebp),%eax
810011f2:	89 c2                	mov    %eax,%edx
810011f4:	8b 45 14             	mov    0x14(%ebp),%eax
810011f7:	89 50 04             	mov    %edx,0x4(%eax)
810011fa:	8b 45 14             	mov    0x14(%ebp),%eax
810011fd:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001200:	89 10                	mov    %edx,(%eax)
81001202:	83 ec 04             	sub    $0x4,%esp
81001205:	ff 75 f4             	push   -0xc(%ebp)
81001208:	ff 75 e8             	push   -0x18(%ebp)
8100120b:	ff 75 f0             	push   -0x10(%ebp)
8100120e:	e8 a5 2d 00 00       	call   81003fb8 <memcpy>
81001213:	83 c4 10             	add    $0x10,%esp
81001216:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001219:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100121c:	01 d0                	add    %edx,%eax
8100121e:	c6 00 00             	movb   $0x0,(%eax)
81001221:	8b 45 0c             	mov    0xc(%ebp),%eax
81001224:	eb 59                	jmp    8100127f <_fgets_r+0x15c>
81001226:	8b 45 14             	mov    0x14(%ebp),%eax
81001229:	8b 40 04             	mov    0x4(%eax),%eax
8100122c:	2b 45 f4             	sub    -0xc(%ebp),%eax
8100122f:	89 c2                	mov    %eax,%edx
81001231:	8b 45 14             	mov    0x14(%ebp),%eax
81001234:	89 50 04             	mov    %edx,0x4(%eax)
81001237:	8b 45 14             	mov    0x14(%ebp),%eax
8100123a:	8b 10                	mov    (%eax),%edx
8100123c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100123f:	01 c2                	add    %eax,%edx
81001241:	8b 45 14             	mov    0x14(%ebp),%eax
81001244:	89 10                	mov    %edx,(%eax)
81001246:	83 ec 04             	sub    $0x4,%esp
81001249:	ff 75 f4             	push   -0xc(%ebp)
8100124c:	ff 75 e8             	push   -0x18(%ebp)
8100124f:	ff 75 f0             	push   -0x10(%ebp)
81001252:	e8 61 2d 00 00       	call   81003fb8 <memcpy>
81001257:	83 c4 10             	add    $0x10,%esp
8100125a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100125d:	01 45 f0             	add    %eax,-0x10(%ebp)
81001260:	8b 45 10             	mov    0x10(%ebp),%eax
81001263:	2b 45 f4             	sub    -0xc(%ebp),%eax
81001266:	89 45 10             	mov    %eax,0x10(%ebp)
81001269:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100126d:	0f 85 f4 fe ff ff    	jne    81001167 <_fgets_r+0x44>
81001273:	eb 01                	jmp    81001276 <_fgets_r+0x153>
81001275:	90                   	nop
81001276:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001279:	c6 00 00             	movb   $0x0,(%eax)
8100127c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100127f:	c9                   	leave  
81001280:	c3                   	ret    

81001281 <fgets>:
81001281:	55                   	push   %ebp
81001282:	89 e5                	mov    %esp,%ebp
81001284:	83 ec 08             	sub    $0x8,%esp
81001287:	a1 a4 83 00 81       	mov    0x810083a4,%eax
8100128c:	ff 75 10             	push   0x10(%ebp)
8100128f:	ff 75 0c             	push   0xc(%ebp)
81001292:	ff 75 08             	push   0x8(%ebp)
81001295:	50                   	push   %eax
81001296:	e8 88 fe ff ff       	call   81001123 <_fgets_r>
8100129b:	83 c4 10             	add    $0x10,%esp
8100129e:	c9                   	leave  
8100129f:	c3                   	ret    

810012a0 <std>:
810012a0:	55                   	push   %ebp
810012a1:	89 e5                	mov    %esp,%ebp
810012a3:	83 ec 08             	sub    $0x8,%esp
810012a6:	8b 45 08             	mov    0x8(%ebp),%eax
810012a9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810012af:	8b 45 08             	mov    0x8(%ebp),%eax
810012b2:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810012b9:	8b 45 08             	mov    0x8(%ebp),%eax
810012bc:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810012c3:	8b 45 0c             	mov    0xc(%ebp),%eax
810012c6:	89 c2                	mov    %eax,%edx
810012c8:	8b 45 08             	mov    0x8(%ebp),%eax
810012cb:	66 89 50 0c          	mov    %dx,0xc(%eax)
810012cf:	8b 45 08             	mov    0x8(%ebp),%eax
810012d2:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
810012d9:	8b 45 10             	mov    0x10(%ebp),%eax
810012dc:	89 c2                	mov    %eax,%edx
810012de:	8b 45 08             	mov    0x8(%ebp),%eax
810012e1:	66 89 50 0e          	mov    %dx,0xe(%eax)
810012e5:	8b 45 08             	mov    0x8(%ebp),%eax
810012e8:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
810012ef:	8b 45 08             	mov    0x8(%ebp),%eax
810012f2:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810012f9:	8b 45 08             	mov    0x8(%ebp),%eax
810012fc:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001303:	8b 45 08             	mov    0x8(%ebp),%eax
81001306:	83 c0 5c             	add    $0x5c,%eax
81001309:	83 ec 04             	sub    $0x4,%esp
8100130c:	6a 08                	push   $0x8
8100130e:	6a 00                	push   $0x0
81001310:	50                   	push   %eax
81001311:	e8 ea 2c 00 00       	call   81004000 <memset>
81001316:	83 c4 10             	add    $0x10,%esp
81001319:	8b 45 08             	mov    0x8(%ebp),%eax
8100131c:	8b 55 08             	mov    0x8(%ebp),%edx
8100131f:	89 50 1c             	mov    %edx,0x1c(%eax)
81001322:	8b 45 08             	mov    0x8(%ebp),%eax
81001325:	c7 40 20 8e 53 00 81 	movl   $0x8100538e,0x20(%eax)
8100132c:	8b 45 08             	mov    0x8(%ebp),%eax
8100132f:	c7 40 24 dc 53 00 81 	movl   $0x810053dc,0x24(%eax)
81001336:	8b 45 08             	mov    0x8(%ebp),%eax
81001339:	c7 40 28 37 54 00 81 	movl   $0x81005437,0x28(%eax)
81001340:	8b 45 08             	mov    0x8(%ebp),%eax
81001343:	c7 40 2c 81 54 00 81 	movl   $0x81005481,0x2c(%eax)
8100134a:	90                   	nop
8100134b:	c9                   	leave  
8100134c:	c3                   	ret    

8100134d <stdin_init>:
8100134d:	55                   	push   %ebp
8100134e:	89 e5                	mov    %esp,%ebp
81001350:	83 ec 08             	sub    $0x8,%esp
81001353:	83 ec 04             	sub    $0x4,%esp
81001356:	6a 00                	push   $0x0
81001358:	6a 04                	push   $0x4
8100135a:	ff 75 08             	push   0x8(%ebp)
8100135d:	e8 3e ff ff ff       	call   810012a0 <std>
81001362:	83 c4 10             	add    $0x10,%esp
81001365:	90                   	nop
81001366:	c9                   	leave  
81001367:	c3                   	ret    

81001368 <stdout_init>:
81001368:	55                   	push   %ebp
81001369:	89 e5                	mov    %esp,%ebp
8100136b:	83 ec 08             	sub    $0x8,%esp
8100136e:	83 ec 04             	sub    $0x4,%esp
81001371:	6a 01                	push   $0x1
81001373:	6a 09                	push   $0x9
81001375:	ff 75 08             	push   0x8(%ebp)
81001378:	e8 23 ff ff ff       	call   810012a0 <std>
8100137d:	83 c4 10             	add    $0x10,%esp
81001380:	90                   	nop
81001381:	c9                   	leave  
81001382:	c3                   	ret    

81001383 <stderr_init>:
81001383:	55                   	push   %ebp
81001384:	89 e5                	mov    %esp,%ebp
81001386:	83 ec 08             	sub    $0x8,%esp
81001389:	83 ec 04             	sub    $0x4,%esp
8100138c:	6a 02                	push   $0x2
8100138e:	6a 12                	push   $0x12
81001390:	ff 75 08             	push   0x8(%ebp)
81001393:	e8 08 ff ff ff       	call   810012a0 <std>
81001398:	83 c4 10             	add    $0x10,%esp
8100139b:	90                   	nop
8100139c:	c9                   	leave  
8100139d:	c3                   	ret    

8100139e <__sfmoreglue>:
8100139e:	55                   	push   %ebp
8100139f:	89 e5                	mov    %esp,%ebp
810013a1:	53                   	push   %ebx
810013a2:	83 ec 14             	sub    $0x14,%esp
810013a5:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810013a8:	8d 43 ff             	lea    -0x1(%ebx),%eax
810013ab:	6b c0 68             	imul   $0x68,%eax,%eax
810013ae:	83 c0 74             	add    $0x74,%eax
810013b1:	83 ec 08             	sub    $0x8,%esp
810013b4:	50                   	push   %eax
810013b5:	ff 75 08             	push   0x8(%ebp)
810013b8:	e8 f1 22 00 00       	call   810036ae <_malloc_r>
810013bd:	83 c4 10             	add    $0x10,%esp
810013c0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810013c3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810013c7:	75 07                	jne    810013d0 <__sfmoreglue+0x32>
810013c9:	b8 00 00 00 00       	mov    $0x0,%eax
810013ce:	eb 38                	jmp    81001408 <__sfmoreglue+0x6a>
810013d0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013d3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810013d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013dc:	89 58 04             	mov    %ebx,0x4(%eax)
810013df:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013e2:	8d 50 0c             	lea    0xc(%eax),%edx
810013e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013e8:	89 50 08             	mov    %edx,0x8(%eax)
810013eb:	89 d8                	mov    %ebx,%eax
810013ed:	6b c0 68             	imul   $0x68,%eax,%eax
810013f0:	8b 55 f4             	mov    -0xc(%ebp),%edx
810013f3:	83 c2 0c             	add    $0xc,%edx
810013f6:	83 ec 04             	sub    $0x4,%esp
810013f9:	50                   	push   %eax
810013fa:	6a 00                	push   $0x0
810013fc:	52                   	push   %edx
810013fd:	e8 fe 2b 00 00       	call   81004000 <memset>
81001402:	83 c4 10             	add    $0x10,%esp
81001405:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001408:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100140b:	c9                   	leave  
8100140c:	c3                   	ret    

8100140d <__sfp>:
8100140d:	55                   	push   %ebp
8100140e:	89 e5                	mov    %esp,%ebp
81001410:	83 ec 18             	sub    $0x18,%esp
81001413:	e8 16 02 00 00       	call   8100162e <__sfp_lock_acquire>
81001418:	a1 f8 7b 00 81       	mov    0x81007bf8,%eax
8100141d:	8b 40 38             	mov    0x38(%eax),%eax
81001420:	85 c0                	test   %eax,%eax
81001422:	75 11                	jne    81001435 <__sfp+0x28>
81001424:	a1 f8 7b 00 81       	mov    0x81007bf8,%eax
81001429:	83 ec 0c             	sub    $0xc,%esp
8100142c:	50                   	push   %eax
8100142d:	e8 63 01 00 00       	call   81001595 <__sinit>
81001432:	83 c4 10             	add    $0x10,%esp
81001435:	a1 f8 7b 00 81       	mov    0x81007bf8,%eax
8100143a:	05 e0 02 00 00       	add    $0x2e0,%eax
8100143f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001442:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001445:	8b 40 08             	mov    0x8(%eax),%eax
81001448:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100144b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100144e:	8b 40 04             	mov    0x4(%eax),%eax
81001451:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001454:	eb 10                	jmp    81001466 <__sfp+0x59>
81001456:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001459:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100145d:	66 85 c0             	test   %ax,%ax
81001460:	74 58                	je     810014ba <__sfp+0xad>
81001462:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
81001466:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
8100146a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100146e:	79 e6                	jns    81001456 <__sfp+0x49>
81001470:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001473:	8b 00                	mov    (%eax),%eax
81001475:	85 c0                	test   %eax,%eax
81001477:	75 1e                	jne    81001497 <__sfp+0x8a>
81001479:	83 ec 08             	sub    $0x8,%esp
8100147c:	6a 04                	push   $0x4
8100147e:	ff 75 08             	push   0x8(%ebp)
81001481:	e8 18 ff ff ff       	call   8100139e <__sfmoreglue>
81001486:	83 c4 10             	add    $0x10,%esp
81001489:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100148c:	89 02                	mov    %eax,(%edx)
8100148e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001491:	8b 00                	mov    (%eax),%eax
81001493:	85 c0                	test   %eax,%eax
81001495:	74 0a                	je     810014a1 <__sfp+0x94>
81001497:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100149a:	8b 00                	mov    (%eax),%eax
8100149c:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100149f:	eb a1                	jmp    81001442 <__sfp+0x35>
810014a1:	90                   	nop
810014a2:	e8 8d 01 00 00       	call   81001634 <__sfp_lock_release>
810014a7:	8b 45 08             	mov    0x8(%ebp),%eax
810014aa:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810014b0:	b8 00 00 00 00       	mov    $0x0,%eax
810014b5:	e9 9e 00 00 00       	jmp    81001558 <__sfp+0x14b>
810014ba:	90                   	nop
810014bb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014be:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
810014c4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014c7:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
810014cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014d0:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
810014d7:	e8 58 01 00 00       	call   81001634 <__sfp_lock_release>
810014dc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014df:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810014e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014e8:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810014ef:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014f2:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810014f9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014fc:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81001503:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001506:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
8100150d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001510:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001517:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100151a:	83 c0 5c             	add    $0x5c,%eax
8100151d:	83 ec 04             	sub    $0x4,%esp
81001520:	6a 08                	push   $0x8
81001522:	6a 00                	push   $0x0
81001524:	50                   	push   %eax
81001525:	e8 d6 2a 00 00       	call   81004000 <memset>
8100152a:	83 c4 10             	add    $0x10,%esp
8100152d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001530:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81001537:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100153a:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
81001541:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001544:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
8100154b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100154e:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
81001555:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001558:	c9                   	leave  
81001559:	c3                   	ret    

8100155a <_cleanup_r>:
8100155a:	55                   	push   %ebp
8100155b:	89 e5                	mov    %esp,%ebp
8100155d:	83 ec 18             	sub    $0x18,%esp
81001560:	c7 45 f4 48 0d 00 81 	movl   $0x81000d48,-0xc(%ebp)
81001567:	83 ec 08             	sub    $0x8,%esp
8100156a:	ff 75 f4             	push   -0xc(%ebp)
8100156d:	ff 75 08             	push   0x8(%ebp)
81001570:	e8 6b 0d 00 00       	call   810022e0 <_fwalk_reent>
81001575:	83 c4 10             	add    $0x10,%esp
81001578:	90                   	nop
81001579:	c9                   	leave  
8100157a:	c3                   	ret    

8100157b <_cleanup>:
8100157b:	55                   	push   %ebp
8100157c:	89 e5                	mov    %esp,%ebp
8100157e:	83 ec 08             	sub    $0x8,%esp
81001581:	a1 f8 7b 00 81       	mov    0x81007bf8,%eax
81001586:	83 ec 0c             	sub    $0xc,%esp
81001589:	50                   	push   %eax
8100158a:	e8 cb ff ff ff       	call   8100155a <_cleanup_r>
8100158f:	83 c4 10             	add    $0x10,%esp
81001592:	90                   	nop
81001593:	c9                   	leave  
81001594:	c3                   	ret    

81001595 <__sinit>:
81001595:	55                   	push   %ebp
81001596:	89 e5                	mov    %esp,%ebp
81001598:	83 ec 08             	sub    $0x8,%esp
8100159b:	e8 9a 00 00 00       	call   8100163a <__sinit_lock_acquire>
810015a0:	8b 45 08             	mov    0x8(%ebp),%eax
810015a3:	8b 40 38             	mov    0x38(%eax),%eax
810015a6:	85 c0                	test   %eax,%eax
810015a8:	74 07                	je     810015b1 <__sinit+0x1c>
810015aa:	e8 91 00 00 00       	call   81001640 <__sinit_lock_release>
810015af:	eb 7b                	jmp    8100162c <__sinit+0x97>
810015b1:	8b 45 08             	mov    0x8(%ebp),%eax
810015b4:	c7 40 3c 5a 15 00 81 	movl   $0x8100155a,0x3c(%eax)
810015bb:	8b 45 08             	mov    0x8(%ebp),%eax
810015be:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
810015c5:	00 00 00 
810015c8:	8b 45 08             	mov    0x8(%ebp),%eax
810015cb:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
810015d2:	00 00 00 
810015d5:	8b 45 08             	mov    0x8(%ebp),%eax
810015d8:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
810015de:	8b 45 08             	mov    0x8(%ebp),%eax
810015e1:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
810015e7:	8b 45 08             	mov    0x8(%ebp),%eax
810015ea:	8b 40 04             	mov    0x4(%eax),%eax
810015ed:	83 ec 0c             	sub    $0xc,%esp
810015f0:	50                   	push   %eax
810015f1:	e8 57 fd ff ff       	call   8100134d <stdin_init>
810015f6:	83 c4 10             	add    $0x10,%esp
810015f9:	8b 45 08             	mov    0x8(%ebp),%eax
810015fc:	8b 40 08             	mov    0x8(%eax),%eax
810015ff:	83 ec 0c             	sub    $0xc,%esp
81001602:	50                   	push   %eax
81001603:	e8 60 fd ff ff       	call   81001368 <stdout_init>
81001608:	83 c4 10             	add    $0x10,%esp
8100160b:	8b 45 08             	mov    0x8(%ebp),%eax
8100160e:	8b 40 0c             	mov    0xc(%eax),%eax
81001611:	83 ec 0c             	sub    $0xc,%esp
81001614:	50                   	push   %eax
81001615:	e8 69 fd ff ff       	call   81001383 <stderr_init>
8100161a:	83 c4 10             	add    $0x10,%esp
8100161d:	8b 45 08             	mov    0x8(%ebp),%eax
81001620:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81001627:	e8 14 00 00 00       	call   81001640 <__sinit_lock_release>
8100162c:	c9                   	leave  
8100162d:	c3                   	ret    

8100162e <__sfp_lock_acquire>:
8100162e:	55                   	push   %ebp
8100162f:	89 e5                	mov    %esp,%ebp
81001631:	90                   	nop
81001632:	5d                   	pop    %ebp
81001633:	c3                   	ret    

81001634 <__sfp_lock_release>:
81001634:	55                   	push   %ebp
81001635:	89 e5                	mov    %esp,%ebp
81001637:	90                   	nop
81001638:	5d                   	pop    %ebp
81001639:	c3                   	ret    

8100163a <__sinit_lock_acquire>:
8100163a:	55                   	push   %ebp
8100163b:	89 e5                	mov    %esp,%ebp
8100163d:	90                   	nop
8100163e:	5d                   	pop    %ebp
8100163f:	c3                   	ret    

81001640 <__sinit_lock_release>:
81001640:	55                   	push   %ebp
81001641:	89 e5                	mov    %esp,%ebp
81001643:	90                   	nop
81001644:	5d                   	pop    %ebp
81001645:	c3                   	ret    

81001646 <__fp_lock>:
81001646:	55                   	push   %ebp
81001647:	89 e5                	mov    %esp,%ebp
81001649:	b8 00 00 00 00       	mov    $0x0,%eax
8100164e:	5d                   	pop    %ebp
8100164f:	c3                   	ret    

81001650 <__fp_unlock>:
81001650:	55                   	push   %ebp
81001651:	89 e5                	mov    %esp,%ebp
81001653:	b8 00 00 00 00       	mov    $0x0,%eax
81001658:	5d                   	pop    %ebp
81001659:	c3                   	ret    

8100165a <__fp_lock_all>:
8100165a:	55                   	push   %ebp
8100165b:	89 e5                	mov    %esp,%ebp
8100165d:	83 ec 08             	sub    $0x8,%esp
81001660:	e8 c9 ff ff ff       	call   8100162e <__sfp_lock_acquire>
81001665:	a1 a4 83 00 81       	mov    0x810083a4,%eax
8100166a:	83 ec 08             	sub    $0x8,%esp
8100166d:	68 46 16 00 81       	push   $0x81001646
81001672:	50                   	push   %eax
81001673:	e8 00 0c 00 00       	call   81002278 <_fwalk>
81001678:	83 c4 10             	add    $0x10,%esp
8100167b:	90                   	nop
8100167c:	c9                   	leave  
8100167d:	c3                   	ret    

8100167e <__fp_unlock_all>:
8100167e:	55                   	push   %ebp
8100167f:	89 e5                	mov    %esp,%ebp
81001681:	83 ec 08             	sub    $0x8,%esp
81001684:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81001689:	83 ec 08             	sub    $0x8,%esp
8100168c:	68 50 16 00 81       	push   $0x81001650
81001691:	50                   	push   %eax
81001692:	e8 e1 0b 00 00       	call   81002278 <_fwalk>
81001697:	83 c4 10             	add    $0x10,%esp
8100169a:	e8 95 ff ff ff       	call   81001634 <__sfp_lock_release>
8100169f:	90                   	nop
810016a0:	c9                   	leave  
810016a1:	c3                   	ret    

810016a2 <_fopen_r>:
810016a2:	55                   	push   %ebp
810016a3:	89 e5                	mov    %esp,%ebp
810016a5:	56                   	push   %esi
810016a6:	53                   	push   %ebx
810016a7:	83 ec 10             	sub    $0x10,%esp
810016aa:	83 ec 04             	sub    $0x4,%esp
810016ad:	8d 45 f0             	lea    -0x10(%ebp),%eax
810016b0:	50                   	push   %eax
810016b1:	ff 75 10             	push   0x10(%ebp)
810016b4:	ff 75 08             	push   0x8(%ebp)
810016b7:	e8 b6 47 00 00       	call   81005e72 <__sflags>
810016bc:	83 c4 10             	add    $0x10,%esp
810016bf:	89 45 f4             	mov    %eax,-0xc(%ebp)
810016c2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810016c6:	75 0a                	jne    810016d2 <_fopen_r+0x30>
810016c8:	b8 00 00 00 00       	mov    $0x0,%eax
810016cd:	e9 9e 00 00 00       	jmp    81001770 <_fopen_r+0xce>
810016d2:	83 ec 0c             	sub    $0xc,%esp
810016d5:	ff 75 08             	push   0x8(%ebp)
810016d8:	e8 30 fd ff ff       	call   8100140d <__sfp>
810016dd:	83 c4 10             	add    $0x10,%esp
810016e0:	89 c3                	mov    %eax,%ebx
810016e2:	85 db                	test   %ebx,%ebx
810016e4:	75 0a                	jne    810016f0 <_fopen_r+0x4e>
810016e6:	b8 00 00 00 00       	mov    $0x0,%eax
810016eb:	e9 80 00 00 00       	jmp    81001770 <_fopen_r+0xce>
810016f0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810016f3:	68 b6 01 00 00       	push   $0x1b6
810016f8:	50                   	push   %eax
810016f9:	ff 75 0c             	push   0xc(%ebp)
810016fc:	ff 75 08             	push   0x8(%ebp)
810016ff:	e8 df 34 00 00       	call   81004be3 <_open_r>
81001704:	83 c4 10             	add    $0x10,%esp
81001707:	89 c6                	mov    %eax,%esi
81001709:	85 f6                	test   %esi,%esi
8100170b:	79 17                	jns    81001724 <_fopen_r+0x82>
8100170d:	e8 1c ff ff ff       	call   8100162e <__sfp_lock_acquire>
81001712:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81001718:	e8 17 ff ff ff       	call   81001634 <__sfp_lock_release>
8100171d:	b8 00 00 00 00       	mov    $0x0,%eax
81001722:	eb 4c                	jmp    81001770 <_fopen_r+0xce>
81001724:	89 f0                	mov    %esi,%eax
81001726:	66 89 43 0e          	mov    %ax,0xe(%ebx)
8100172a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100172d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001731:	89 5b 1c             	mov    %ebx,0x1c(%ebx)
81001734:	c7 43 20 8e 53 00 81 	movl   $0x8100538e,0x20(%ebx)
8100173b:	c7 43 24 dc 53 00 81 	movl   $0x810053dc,0x24(%ebx)
81001742:	c7 43 28 37 54 00 81 	movl   $0x81005437,0x28(%ebx)
81001749:	c7 43 2c 81 54 00 81 	movl   $0x81005481,0x2c(%ebx)
81001750:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001754:	98                   	cwtl   
81001755:	25 00 01 00 00       	and    $0x100,%eax
8100175a:	85 c0                	test   %eax,%eax
8100175c:	74 10                	je     8100176e <_fopen_r+0xcc>
8100175e:	6a 02                	push   $0x2
81001760:	6a 00                	push   $0x0
81001762:	53                   	push   %ebx
81001763:	ff 75 08             	push   0x8(%ebp)
81001766:	e8 bc 05 00 00       	call   81001d27 <_fseek_r>
8100176b:	83 c4 10             	add    $0x10,%esp
8100176e:	89 d8                	mov    %ebx,%eax
81001770:	8d 65 f8             	lea    -0x8(%ebp),%esp
81001773:	5b                   	pop    %ebx
81001774:	5e                   	pop    %esi
81001775:	5d                   	pop    %ebp
81001776:	c3                   	ret    

81001777 <fopen>:
81001777:	55                   	push   %ebp
81001778:	89 e5                	mov    %esp,%ebp
8100177a:	83 ec 08             	sub    $0x8,%esp
8100177d:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81001782:	83 ec 04             	sub    $0x4,%esp
81001785:	ff 75 0c             	push   0xc(%ebp)
81001788:	ff 75 08             	push   0x8(%ebp)
8100178b:	50                   	push   %eax
8100178c:	e8 11 ff ff ff       	call   810016a2 <_fopen_r>
81001791:	83 c4 10             	add    $0x10,%esp
81001794:	c9                   	leave  
81001795:	c3                   	ret    

81001796 <_fiprintf_r>:
81001796:	55                   	push   %ebp
81001797:	89 e5                	mov    %esp,%ebp
81001799:	83 ec 18             	sub    $0x18,%esp
8100179c:	8d 45 14             	lea    0x14(%ebp),%eax
8100179f:	89 45 f0             	mov    %eax,-0x10(%ebp)
810017a2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810017a5:	50                   	push   %eax
810017a6:	ff 75 10             	push   0x10(%ebp)
810017a9:	ff 75 0c             	push   0xc(%ebp)
810017ac:	ff 75 08             	push   0x8(%ebp)
810017af:	e8 ef 2a 00 00       	call   810042a3 <_vfiprintf_r>
810017b4:	83 c4 10             	add    $0x10,%esp
810017b7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810017ba:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017bd:	c9                   	leave  
810017be:	c3                   	ret    

810017bf <fiprintf>:
810017bf:	55                   	push   %ebp
810017c0:	89 e5                	mov    %esp,%ebp
810017c2:	83 ec 18             	sub    $0x18,%esp
810017c5:	8d 45 10             	lea    0x10(%ebp),%eax
810017c8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810017cb:	8b 55 f0             	mov    -0x10(%ebp),%edx
810017ce:	a1 a4 83 00 81       	mov    0x810083a4,%eax
810017d3:	52                   	push   %edx
810017d4:	ff 75 0c             	push   0xc(%ebp)
810017d7:	ff 75 08             	push   0x8(%ebp)
810017da:	50                   	push   %eax
810017db:	e8 c3 2a 00 00       	call   810042a3 <_vfiprintf_r>
810017e0:	83 c4 10             	add    $0x10,%esp
810017e3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810017e6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017e9:	c9                   	leave  
810017ea:	c3                   	ret    

810017eb <_free_r>:
810017eb:	55                   	push   %ebp
810017ec:	89 e5                	mov    %esp,%ebp
810017ee:	53                   	push   %ebx
810017ef:	83 ec 34             	sub    $0x34,%esp
810017f2:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810017f6:	0f 84 c4 03 00 00    	je     81001bc0 <_free_r+0x3d5>
810017fc:	83 ec 0c             	sub    $0xc,%esp
810017ff:	ff 75 08             	push   0x8(%ebp)
81001802:	e8 81 28 00 00       	call   81004088 <__malloc_lock>
81001807:	83 c4 10             	add    $0x10,%esp
8100180a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100180d:	83 e8 08             	sub    $0x8,%eax
81001810:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001813:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001816:	8b 40 04             	mov    0x4(%eax),%eax
81001819:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100181c:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100181f:	83 e0 fe             	and    $0xfffffffe,%eax
81001822:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001825:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001828:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100182b:	01 d0                	add    %edx,%eax
8100182d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001830:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001833:	8b 40 04             	mov    0x4(%eax),%eax
81001836:	83 e0 fc             	and    $0xfffffffc,%eax
81001839:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100183c:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81001841:	8b 40 08             	mov    0x8(%eax),%eax
81001844:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81001847:	0f 85 94 00 00 00    	jne    810018e1 <_free_r+0xf6>
8100184d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001850:	01 45 f0             	add    %eax,-0x10(%ebp)
81001853:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001856:	83 e0 01             	and    $0x1,%eax
81001859:	85 c0                	test   %eax,%eax
8100185b:	75 3a                	jne    81001897 <_free_r+0xac>
8100185d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001860:	8b 00                	mov    (%eax),%eax
81001862:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001865:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001868:	f7 d8                	neg    %eax
8100186a:	01 45 f4             	add    %eax,-0xc(%ebp)
8100186d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001870:	01 45 f0             	add    %eax,-0x10(%ebp)
81001873:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001876:	8b 40 0c             	mov    0xc(%eax),%eax
81001879:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100187c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100187f:	8b 40 08             	mov    0x8(%eax),%eax
81001882:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001885:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001888:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100188b:	89 50 0c             	mov    %edx,0xc(%eax)
8100188e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001891:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001894:	89 50 08             	mov    %edx,0x8(%eax)
81001897:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100189a:	83 c8 01             	or     $0x1,%eax
8100189d:	89 c2                	mov    %eax,%edx
8100189f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018a2:	89 50 04             	mov    %edx,0x4(%eax)
810018a5:	ba c0 83 00 81       	mov    $0x810083c0,%edx
810018aa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018ad:	89 42 08             	mov    %eax,0x8(%edx)
810018b0:	a1 c8 87 00 81       	mov    0x810087c8,%eax
810018b5:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810018b8:	72 14                	jb     810018ce <_free_r+0xe3>
810018ba:	a1 a0 8f 00 81       	mov    0x81008fa0,%eax
810018bf:	83 ec 08             	sub    $0x8,%esp
810018c2:	50                   	push   %eax
810018c3:	ff 75 08             	push   0x8(%ebp)
810018c6:	e8 fb 02 00 00       	call   81001bc6 <_malloc_trim_r>
810018cb:	83 c4 10             	add    $0x10,%esp
810018ce:	83 ec 0c             	sub    $0xc,%esp
810018d1:	ff 75 08             	push   0x8(%ebp)
810018d4:	e8 b5 27 00 00       	call   8100408e <__malloc_unlock>
810018d9:	83 c4 10             	add    $0x10,%esp
810018dc:	e9 e0 02 00 00       	jmp    81001bc1 <_free_r+0x3d6>
810018e1:	8b 45 dc             	mov    -0x24(%ebp),%eax
810018e4:	8b 55 d8             	mov    -0x28(%ebp),%edx
810018e7:	89 50 04             	mov    %edx,0x4(%eax)
810018ea:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810018f1:	8b 45 e0             	mov    -0x20(%ebp),%eax
810018f4:	83 e0 01             	and    $0x1,%eax
810018f7:	85 c0                	test   %eax,%eax
810018f9:	75 52                	jne    8100194d <_free_r+0x162>
810018fb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018fe:	8b 00                	mov    (%eax),%eax
81001900:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001903:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001906:	f7 d8                	neg    %eax
81001908:	01 45 f4             	add    %eax,-0xc(%ebp)
8100190b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100190e:	01 45 f0             	add    %eax,-0x10(%ebp)
81001911:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001914:	8b 40 08             	mov    0x8(%eax),%eax
81001917:	ba c8 83 00 81       	mov    $0x810083c8,%edx
8100191c:	39 d0                	cmp    %edx,%eax
8100191e:	75 09                	jne    81001929 <_free_r+0x13e>
81001920:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001927:	eb 24                	jmp    8100194d <_free_r+0x162>
81001929:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100192c:	8b 40 0c             	mov    0xc(%eax),%eax
8100192f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001932:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001935:	8b 40 08             	mov    0x8(%eax),%eax
81001938:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100193b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100193e:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001941:	89 50 0c             	mov    %edx,0xc(%eax)
81001944:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001947:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100194a:	89 50 08             	mov    %edx,0x8(%eax)
8100194d:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001950:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001953:	01 d0                	add    %edx,%eax
81001955:	8b 40 04             	mov    0x4(%eax),%eax
81001958:	83 e0 01             	and    $0x1,%eax
8100195b:	85 c0                	test   %eax,%eax
8100195d:	75 75                	jne    810019d4 <_free_r+0x1e9>
8100195f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001962:	01 45 f0             	add    %eax,-0x10(%ebp)
81001965:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001969:	75 45                	jne    810019b0 <_free_r+0x1c5>
8100196b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100196e:	8b 40 08             	mov    0x8(%eax),%eax
81001971:	ba c8 83 00 81       	mov    $0x810083c8,%edx
81001976:	39 d0                	cmp    %edx,%eax
81001978:	75 36                	jne    810019b0 <_free_r+0x1c5>
8100197a:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001981:	b8 c8 83 00 81       	mov    $0x810083c8,%eax
81001986:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001989:	89 50 0c             	mov    %edx,0xc(%eax)
8100198c:	ba c8 83 00 81       	mov    $0x810083c8,%edx
81001991:	8b 40 0c             	mov    0xc(%eax),%eax
81001994:	89 42 08             	mov    %eax,0x8(%edx)
81001997:	ba c8 83 00 81       	mov    $0x810083c8,%edx
8100199c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100199f:	89 50 0c             	mov    %edx,0xc(%eax)
810019a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019a5:	8b 50 0c             	mov    0xc(%eax),%edx
810019a8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019ab:	89 50 08             	mov    %edx,0x8(%eax)
810019ae:	eb 24                	jmp    810019d4 <_free_r+0x1e9>
810019b0:	8b 45 dc             	mov    -0x24(%ebp),%eax
810019b3:	8b 40 0c             	mov    0xc(%eax),%eax
810019b6:	89 45 ec             	mov    %eax,-0x14(%ebp)
810019b9:	8b 45 dc             	mov    -0x24(%ebp),%eax
810019bc:	8b 40 08             	mov    0x8(%eax),%eax
810019bf:	89 45 e8             	mov    %eax,-0x18(%ebp)
810019c2:	8b 45 e8             	mov    -0x18(%ebp),%eax
810019c5:	8b 55 ec             	mov    -0x14(%ebp),%edx
810019c8:	89 50 0c             	mov    %edx,0xc(%eax)
810019cb:	8b 45 ec             	mov    -0x14(%ebp),%eax
810019ce:	8b 55 e8             	mov    -0x18(%ebp),%edx
810019d1:	89 50 08             	mov    %edx,0x8(%eax)
810019d4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810019d7:	83 c8 01             	or     $0x1,%eax
810019da:	89 c2                	mov    %eax,%edx
810019dc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019df:	89 50 04             	mov    %edx,0x4(%eax)
810019e2:	8b 55 f4             	mov    -0xc(%ebp),%edx
810019e5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810019e8:	01 c2                	add    %eax,%edx
810019ea:	8b 45 f0             	mov    -0x10(%ebp),%eax
810019ed:	89 02                	mov    %eax,(%edx)
810019ef:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810019f3:	0f 85 b7 01 00 00    	jne    81001bb0 <_free_r+0x3c5>
810019f9:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81001a00:	77 7f                	ja     81001a81 <_free_r+0x296>
81001a02:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a05:	c1 e8 03             	shr    $0x3,%eax
81001a08:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001a0b:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81001a10:	8b 58 04             	mov    0x4(%eax),%ebx
81001a13:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001a16:	8d 50 03             	lea    0x3(%eax),%edx
81001a19:	85 c0                	test   %eax,%eax
81001a1b:	0f 48 c2             	cmovs  %edx,%eax
81001a1e:	c1 f8 02             	sar    $0x2,%eax
81001a21:	ba 01 00 00 00       	mov    $0x1,%edx
81001a26:	89 c1                	mov    %eax,%ecx
81001a28:	d3 e2                	shl    %cl,%edx
81001a2a:	89 d0                	mov    %edx,%eax
81001a2c:	ba c0 83 00 81       	mov    $0x810083c0,%edx
81001a31:	09 d8                	or     %ebx,%eax
81001a33:	89 42 04             	mov    %eax,0x4(%edx)
81001a36:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001a39:	83 c0 01             	add    $0x1,%eax
81001a3c:	01 c0                	add    %eax,%eax
81001a3e:	c1 e0 02             	shl    $0x2,%eax
81001a41:	05 c0 83 00 81       	add    $0x810083c0,%eax
81001a46:	83 e8 08             	sub    $0x8,%eax
81001a49:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001a4c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001a4f:	8b 40 08             	mov    0x8(%eax),%eax
81001a52:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001a55:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a58:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001a5b:	89 50 0c             	mov    %edx,0xc(%eax)
81001a5e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a61:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001a64:	89 50 08             	mov    %edx,0x8(%eax)
81001a67:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001a6a:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001a6d:	89 50 08             	mov    %edx,0x8(%eax)
81001a70:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001a73:	8b 50 08             	mov    0x8(%eax),%edx
81001a76:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001a79:	89 50 0c             	mov    %edx,0xc(%eax)
81001a7c:	e9 2f 01 00 00       	jmp    81001bb0 <_free_r+0x3c5>
81001a81:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a84:	c1 e8 09             	shr    $0x9,%eax
81001a87:	85 c0                	test   %eax,%eax
81001a89:	75 08                	jne    81001a93 <_free_r+0x2a8>
81001a8b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a8e:	c1 e8 03             	shr    $0x3,%eax
81001a91:	eb 77                	jmp    81001b0a <_free_r+0x31f>
81001a93:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a96:	c1 e8 09             	shr    $0x9,%eax
81001a99:	83 f8 04             	cmp    $0x4,%eax
81001a9c:	77 0b                	ja     81001aa9 <_free_r+0x2be>
81001a9e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001aa1:	c1 e8 06             	shr    $0x6,%eax
81001aa4:	83 c0 38             	add    $0x38,%eax
81001aa7:	eb 61                	jmp    81001b0a <_free_r+0x31f>
81001aa9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001aac:	c1 e8 09             	shr    $0x9,%eax
81001aaf:	83 f8 14             	cmp    $0x14,%eax
81001ab2:	77 0b                	ja     81001abf <_free_r+0x2d4>
81001ab4:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ab7:	c1 e8 09             	shr    $0x9,%eax
81001aba:	83 c0 5b             	add    $0x5b,%eax
81001abd:	eb 4b                	jmp    81001b0a <_free_r+0x31f>
81001abf:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ac2:	c1 e8 09             	shr    $0x9,%eax
81001ac5:	83 f8 54             	cmp    $0x54,%eax
81001ac8:	77 0b                	ja     81001ad5 <_free_r+0x2ea>
81001aca:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001acd:	c1 e8 0c             	shr    $0xc,%eax
81001ad0:	83 c0 6e             	add    $0x6e,%eax
81001ad3:	eb 35                	jmp    81001b0a <_free_r+0x31f>
81001ad5:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ad8:	c1 e8 09             	shr    $0x9,%eax
81001adb:	3d 54 01 00 00       	cmp    $0x154,%eax
81001ae0:	77 0b                	ja     81001aed <_free_r+0x302>
81001ae2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ae5:	c1 e8 0f             	shr    $0xf,%eax
81001ae8:	83 c0 77             	add    $0x77,%eax
81001aeb:	eb 1d                	jmp    81001b0a <_free_r+0x31f>
81001aed:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001af0:	c1 e8 09             	shr    $0x9,%eax
81001af3:	3d 54 05 00 00       	cmp    $0x554,%eax
81001af8:	77 0b                	ja     81001b05 <_free_r+0x31a>
81001afa:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001afd:	c1 e8 12             	shr    $0x12,%eax
81001b00:	83 c0 7c             	add    $0x7c,%eax
81001b03:	eb 05                	jmp    81001b0a <_free_r+0x31f>
81001b05:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001b0a:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001b0d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001b10:	83 c0 01             	add    $0x1,%eax
81001b13:	01 c0                	add    %eax,%eax
81001b15:	c1 e0 02             	shl    $0x2,%eax
81001b18:	05 c0 83 00 81       	add    $0x810083c0,%eax
81001b1d:	83 e8 08             	sub    $0x8,%eax
81001b20:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001b23:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001b26:	8b 40 08             	mov    0x8(%eax),%eax
81001b29:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001b2c:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b2f:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001b32:	75 36                	jne    81001b6a <_free_r+0x37f>
81001b34:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81001b39:	8b 58 04             	mov    0x4(%eax),%ebx
81001b3c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001b3f:	8d 50 03             	lea    0x3(%eax),%edx
81001b42:	85 c0                	test   %eax,%eax
81001b44:	0f 48 c2             	cmovs  %edx,%eax
81001b47:	c1 f8 02             	sar    $0x2,%eax
81001b4a:	ba 01 00 00 00       	mov    $0x1,%edx
81001b4f:	89 c1                	mov    %eax,%ecx
81001b51:	d3 e2                	shl    %cl,%edx
81001b53:	89 d0                	mov    %edx,%eax
81001b55:	ba c0 83 00 81       	mov    $0x810083c0,%edx
81001b5a:	09 d8                	or     %ebx,%eax
81001b5c:	89 42 04             	mov    %eax,0x4(%edx)
81001b5f:	eb 28                	jmp    81001b89 <_free_r+0x39e>
81001b61:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b64:	8b 40 08             	mov    0x8(%eax),%eax
81001b67:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001b6a:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b6d:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001b70:	74 0e                	je     81001b80 <_free_r+0x395>
81001b72:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b75:	8b 40 04             	mov    0x4(%eax),%eax
81001b78:	83 e0 fc             	and    $0xfffffffc,%eax
81001b7b:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001b7e:	72 e1                	jb     81001b61 <_free_r+0x376>
81001b80:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b83:	8b 40 0c             	mov    0xc(%eax),%eax
81001b86:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001b89:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b8c:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001b8f:	89 50 0c             	mov    %edx,0xc(%eax)
81001b92:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b95:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001b98:	89 50 08             	mov    %edx,0x8(%eax)
81001b9b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001b9e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001ba1:	89 50 08             	mov    %edx,0x8(%eax)
81001ba4:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001ba7:	8b 50 08             	mov    0x8(%eax),%edx
81001baa:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001bad:	89 50 0c             	mov    %edx,0xc(%eax)
81001bb0:	83 ec 0c             	sub    $0xc,%esp
81001bb3:	ff 75 08             	push   0x8(%ebp)
81001bb6:	e8 d3 24 00 00       	call   8100408e <__malloc_unlock>
81001bbb:	83 c4 10             	add    $0x10,%esp
81001bbe:	eb 01                	jmp    81001bc1 <_free_r+0x3d6>
81001bc0:	90                   	nop
81001bc1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001bc4:	c9                   	leave  
81001bc5:	c3                   	ret    

81001bc6 <_malloc_trim_r>:
81001bc6:	55                   	push   %ebp
81001bc7:	89 e5                	mov    %esp,%ebp
81001bc9:	83 ec 28             	sub    $0x28,%esp
81001bcc:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81001bd3:	83 ec 0c             	sub    $0xc,%esp
81001bd6:	ff 75 08             	push   0x8(%ebp)
81001bd9:	e8 aa 24 00 00       	call   81004088 <__malloc_lock>
81001bde:	83 c4 10             	add    $0x10,%esp
81001be1:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81001be6:	8b 40 08             	mov    0x8(%eax),%eax
81001be9:	8b 40 04             	mov    0x4(%eax),%eax
81001bec:	83 e0 fc             	and    $0xfffffffc,%eax
81001bef:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001bf2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001bf5:	2b 45 0c             	sub    0xc(%ebp),%eax
81001bf8:	89 c2                	mov    %eax,%edx
81001bfa:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001bfd:	01 d0                	add    %edx,%eax
81001bff:	83 e8 11             	sub    $0x11,%eax
81001c02:	ba 00 00 00 00       	mov    $0x0,%edx
81001c07:	f7 75 f4             	divl   -0xc(%ebp)
81001c0a:	83 e8 01             	sub    $0x1,%eax
81001c0d:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81001c11:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001c14:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001c17:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001c1a:	7d 18                	jge    81001c34 <_malloc_trim_r+0x6e>
81001c1c:	83 ec 0c             	sub    $0xc,%esp
81001c1f:	ff 75 08             	push   0x8(%ebp)
81001c22:	e8 67 24 00 00       	call   8100408e <__malloc_unlock>
81001c27:	83 c4 10             	add    $0x10,%esp
81001c2a:	b8 00 00 00 00       	mov    $0x0,%eax
81001c2f:	e9 f1 00 00 00       	jmp    81001d25 <_malloc_trim_r+0x15f>
81001c34:	83 ec 08             	sub    $0x8,%esp
81001c37:	6a 00                	push   $0x0
81001c39:	ff 75 08             	push   0x8(%ebp)
81001c3c:	e8 01 35 00 00       	call   81005142 <_sbrk_r>
81001c41:	83 c4 10             	add    $0x10,%esp
81001c44:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001c47:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81001c4c:	8b 50 08             	mov    0x8(%eax),%edx
81001c4f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001c52:	01 d0                	add    %edx,%eax
81001c54:	39 45 e8             	cmp    %eax,-0x18(%ebp)
81001c57:	74 18                	je     81001c71 <_malloc_trim_r+0xab>
81001c59:	83 ec 0c             	sub    $0xc,%esp
81001c5c:	ff 75 08             	push   0x8(%ebp)
81001c5f:	e8 2a 24 00 00       	call   8100408e <__malloc_unlock>
81001c64:	83 c4 10             	add    $0x10,%esp
81001c67:	b8 00 00 00 00       	mov    $0x0,%eax
81001c6c:	e9 b4 00 00 00       	jmp    81001d25 <_malloc_trim_r+0x15f>
81001c71:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001c74:	f7 d8                	neg    %eax
81001c76:	83 ec 08             	sub    $0x8,%esp
81001c79:	50                   	push   %eax
81001c7a:	ff 75 08             	push   0x8(%ebp)
81001c7d:	e8 c0 34 00 00       	call   81005142 <_sbrk_r>
81001c82:	83 c4 10             	add    $0x10,%esp
81001c85:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001c88:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81001c8c:	75 61                	jne    81001cef <_malloc_trim_r+0x129>
81001c8e:	83 ec 08             	sub    $0x8,%esp
81001c91:	6a 00                	push   $0x0
81001c93:	ff 75 08             	push   0x8(%ebp)
81001c96:	e8 a7 34 00 00       	call   81005142 <_sbrk_r>
81001c9b:	83 c4 10             	add    $0x10,%esp
81001c9e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001ca1:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81001ca6:	8b 50 08             	mov    0x8(%eax),%edx
81001ca9:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001cac:	29 d0                	sub    %edx,%eax
81001cae:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001cb1:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81001cb5:	7e 23                	jle    81001cda <_malloc_trim_r+0x114>
81001cb7:	8b 15 cc 87 00 81    	mov    0x810087cc,%edx
81001cbd:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001cc0:	29 d0                	sub    %edx,%eax
81001cc2:	a3 c0 8f 00 81       	mov    %eax,0x81008fc0
81001cc7:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001cca:	83 c8 01             	or     $0x1,%eax
81001ccd:	89 c2                	mov    %eax,%edx
81001ccf:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81001cd4:	8b 40 08             	mov    0x8(%eax),%eax
81001cd7:	89 50 04             	mov    %edx,0x4(%eax)
81001cda:	83 ec 0c             	sub    $0xc,%esp
81001cdd:	ff 75 08             	push   0x8(%ebp)
81001ce0:	e8 a9 23 00 00       	call   8100408e <__malloc_unlock>
81001ce5:	83 c4 10             	add    $0x10,%esp
81001ce8:	b8 00 00 00 00       	mov    $0x0,%eax
81001ced:	eb 36                	jmp    81001d25 <_malloc_trim_r+0x15f>
81001cef:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001cf2:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001cf5:	83 c8 01             	or     $0x1,%eax
81001cf8:	89 c2                	mov    %eax,%edx
81001cfa:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81001cff:	8b 40 08             	mov    0x8(%eax),%eax
81001d02:	89 50 04             	mov    %edx,0x4(%eax)
81001d05:	a1 c0 8f 00 81       	mov    0x81008fc0,%eax
81001d0a:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001d0d:	a3 c0 8f 00 81       	mov    %eax,0x81008fc0
81001d12:	83 ec 0c             	sub    $0xc,%esp
81001d15:	ff 75 08             	push   0x8(%ebp)
81001d18:	e8 71 23 00 00       	call   8100408e <__malloc_unlock>
81001d1d:	83 c4 10             	add    $0x10,%esp
81001d20:	b8 01 00 00 00       	mov    $0x1,%eax
81001d25:	c9                   	leave  
81001d26:	c3                   	ret    

81001d27 <_fseek_r>:
81001d27:	55                   	push   %ebp
81001d28:	89 e5                	mov    %esp,%ebp
81001d2a:	83 ec 08             	sub    $0x8,%esp
81001d2d:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d30:	ff 75 14             	push   0x14(%ebp)
81001d33:	ff 75 10             	push   0x10(%ebp)
81001d36:	50                   	push   %eax
81001d37:	ff 75 08             	push   0x8(%ebp)
81001d3a:	e8 25 00 00 00       	call   81001d64 <_fseeko_r>
81001d3f:	83 c4 10             	add    $0x10,%esp
81001d42:	c9                   	leave  
81001d43:	c3                   	ret    

81001d44 <fseek>:
81001d44:	55                   	push   %ebp
81001d45:	89 e5                	mov    %esp,%ebp
81001d47:	83 ec 08             	sub    $0x8,%esp
81001d4a:	8b 55 08             	mov    0x8(%ebp),%edx
81001d4d:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81001d52:	ff 75 10             	push   0x10(%ebp)
81001d55:	ff 75 0c             	push   0xc(%ebp)
81001d58:	52                   	push   %edx
81001d59:	50                   	push   %eax
81001d5a:	e8 c8 ff ff ff       	call   81001d27 <_fseek_r>
81001d5f:	83 c4 10             	add    $0x10,%esp
81001d62:	c9                   	leave  
81001d63:	c3                   	ret    

81001d64 <_fseeko_r>:
81001d64:	55                   	push   %ebp
81001d65:	89 e5                	mov    %esp,%ebp
81001d67:	56                   	push   %esi
81001d68:	53                   	push   %ebx
81001d69:	83 ec 60             	sub    $0x60,%esp
81001d6c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81001d6f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001d76:	8b 45 08             	mov    0x8(%ebp),%eax
81001d79:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001d7c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001d80:	74 18                	je     81001d9a <_fseeko_r+0x36>
81001d82:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001d85:	8b 40 38             	mov    0x38(%eax),%eax
81001d88:	85 c0                	test   %eax,%eax
81001d8a:	75 0e                	jne    81001d9a <_fseeko_r+0x36>
81001d8c:	83 ec 0c             	sub    $0xc,%esp
81001d8f:	ff 75 e4             	push   -0x1c(%ebp)
81001d92:	e8 fe f7 ff ff       	call   81001595 <__sinit>
81001d97:	83 c4 10             	add    $0x10,%esp
81001d9a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001d9e:	98                   	cwtl   
81001d9f:	25 00 01 00 00       	and    $0x100,%eax
81001da4:	85 c0                	test   %eax,%eax
81001da6:	74 1b                	je     81001dc3 <_fseeko_r+0x5f>
81001da8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001dac:	98                   	cwtl   
81001dad:	83 e0 08             	and    $0x8,%eax
81001db0:	85 c0                	test   %eax,%eax
81001db2:	74 0f                	je     81001dc3 <_fseeko_r+0x5f>
81001db4:	83 ec 08             	sub    $0x8,%esp
81001db7:	53                   	push   %ebx
81001db8:	ff 75 08             	push   0x8(%ebp)
81001dbb:	e8 d2 f2 ff ff       	call   81001092 <_fflush_r>
81001dc0:	83 c4 10             	add    $0x10,%esp
81001dc3:	8b 43 28             	mov    0x28(%ebx),%eax
81001dc6:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001dc9:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81001dcd:	75 13                	jne    81001de2 <_fseeko_r+0x7e>
81001dcf:	8b 45 08             	mov    0x8(%ebp),%eax
81001dd2:	c7 00 1d 00 00 00    	movl   $0x1d,(%eax)
81001dd8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001ddd:	e9 2c 04 00 00       	jmp    8100220e <_fseeko_r+0x4aa>
81001de2:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
81001de6:	0f 84 bc 00 00 00    	je     81001ea8 <_fseeko_r+0x144>
81001dec:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
81001df0:	0f 8f bb 00 00 00    	jg     81001eb1 <_fseeko_r+0x14d>
81001df6:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001dfa:	0f 84 a8 00 00 00    	je     81001ea8 <_fseeko_r+0x144>
81001e00:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81001e04:	0f 85 a7 00 00 00    	jne    81001eb1 <_fseeko_r+0x14d>
81001e0a:	83 ec 08             	sub    $0x8,%esp
81001e0d:	53                   	push   %ebx
81001e0e:	ff 75 08             	push   0x8(%ebp)
81001e11:	e8 7c f2 ff ff       	call   81001092 <_fflush_r>
81001e16:	83 c4 10             	add    $0x10,%esp
81001e19:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001e1d:	98                   	cwtl   
81001e1e:	25 00 10 00 00       	and    $0x1000,%eax
81001e23:	85 c0                	test   %eax,%eax
81001e25:	74 08                	je     81001e2f <_fseeko_r+0xcb>
81001e27:	8b 43 50             	mov    0x50(%ebx),%eax
81001e2a:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001e2d:	eb 26                	jmp    81001e55 <_fseeko_r+0xf1>
81001e2f:	8b 43 1c             	mov    0x1c(%ebx),%eax
81001e32:	6a 01                	push   $0x1
81001e34:	6a 00                	push   $0x0
81001e36:	50                   	push   %eax
81001e37:	ff 75 08             	push   0x8(%ebp)
81001e3a:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e3d:	ff d0                	call   *%eax
81001e3f:	83 c4 10             	add    $0x10,%esp
81001e42:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001e45:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81001e49:	75 0a                	jne    81001e55 <_fseeko_r+0xf1>
81001e4b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001e50:	e9 b9 03 00 00       	jmp    8100220e <_fseeko_r+0x4aa>
81001e55:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001e59:	98                   	cwtl   
81001e5a:	83 e0 04             	and    $0x4,%eax
81001e5d:	85 c0                	test   %eax,%eax
81001e5f:	74 15                	je     81001e76 <_fseeko_r+0x112>
81001e61:	8b 43 04             	mov    0x4(%ebx),%eax
81001e64:	29 45 f0             	sub    %eax,-0x10(%ebp)
81001e67:	8b 43 30             	mov    0x30(%ebx),%eax
81001e6a:	85 c0                	test   %eax,%eax
81001e6c:	74 24                	je     81001e92 <_fseeko_r+0x12e>
81001e6e:	8b 43 3c             	mov    0x3c(%ebx),%eax
81001e71:	29 45 f0             	sub    %eax,-0x10(%ebp)
81001e74:	eb 1c                	jmp    81001e92 <_fseeko_r+0x12e>
81001e76:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001e7a:	98                   	cwtl   
81001e7b:	83 e0 08             	and    $0x8,%eax
81001e7e:	85 c0                	test   %eax,%eax
81001e80:	74 10                	je     81001e92 <_fseeko_r+0x12e>
81001e82:	8b 03                	mov    (%ebx),%eax
81001e84:	85 c0                	test   %eax,%eax
81001e86:	74 0a                	je     81001e92 <_fseeko_r+0x12e>
81001e88:	8b 03                	mov    (%ebx),%eax
81001e8a:	8b 53 10             	mov    0x10(%ebx),%edx
81001e8d:	29 d0                	sub    %edx,%eax
81001e8f:	01 45 f0             	add    %eax,-0x10(%ebp)
81001e92:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001e95:	01 45 10             	add    %eax,0x10(%ebp)
81001e98:	c7 45 14 00 00 00 00 	movl   $0x0,0x14(%ebp)
81001e9f:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81001ea6:	eb 1c                	jmp    81001ec4 <_fseeko_r+0x160>
81001ea8:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81001eaf:	eb 13                	jmp    81001ec4 <_fseeko_r+0x160>
81001eb1:	8b 45 08             	mov    0x8(%ebp),%eax
81001eb4:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81001eba:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001ebf:	e9 4a 03 00 00       	jmp    8100220e <_fseeko_r+0x4aa>
81001ec4:	8b 43 10             	mov    0x10(%ebx),%eax
81001ec7:	85 c0                	test   %eax,%eax
81001ec9:	75 0f                	jne    81001eda <_fseeko_r+0x176>
81001ecb:	83 ec 08             	sub    $0x8,%esp
81001ece:	53                   	push   %ebx
81001ecf:	ff 75 08             	push   0x8(%ebp)
81001ed2:	e8 8b 13 00 00       	call   81003262 <__smakebuf_r>
81001ed7:	83 c4 10             	add    $0x10,%esp
81001eda:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001ede:	98                   	cwtl   
81001edf:	25 1a 08 00 00       	and    $0x81a,%eax
81001ee4:	85 c0                	test   %eax,%eax
81001ee6:	0f 85 7d 02 00 00    	jne    81002169 <_fseeko_r+0x405>
81001eec:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001ef0:	98                   	cwtl   
81001ef1:	25 00 04 00 00       	and    $0x400,%eax
81001ef6:	85 c0                	test   %eax,%eax
81001ef8:	75 5f                	jne    81001f59 <_fseeko_r+0x1f5>
81001efa:	81 7d e0 37 54 00 81 	cmpl   $0x81005437,-0x20(%ebp)
81001f01:	75 34                	jne    81001f37 <_fseeko_r+0x1d3>
81001f03:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001f07:	66 85 c0             	test   %ax,%ax
81001f0a:	78 2b                	js     81001f37 <_fseeko_r+0x1d3>
81001f0c:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001f10:	98                   	cwtl   
81001f11:	83 ec 04             	sub    $0x4,%esp
81001f14:	8d 55 98             	lea    -0x68(%ebp),%edx
81001f17:	52                   	push   %edx
81001f18:	50                   	push   %eax
81001f19:	ff 75 08             	push   0x8(%ebp)
81001f1c:	e8 14 03 00 00       	call   81002235 <_fstat_r>
81001f21:	83 c4 10             	add    $0x10,%esp
81001f24:	85 c0                	test   %eax,%eax
81001f26:	75 0f                	jne    81001f37 <_fseeko_r+0x1d3>
81001f28:	8b 45 9c             	mov    -0x64(%ebp),%eax
81001f2b:	25 00 f0 00 00       	and    $0xf000,%eax
81001f30:	3d 00 80 00 00       	cmp    $0x8000,%eax
81001f35:	74 10                	je     81001f47 <_fseeko_r+0x1e3>
81001f37:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001f3b:	80 cc 08             	or     $0x8,%ah
81001f3e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001f42:	e9 2f 02 00 00       	jmp    81002176 <_fseeko_r+0x412>
81001f47:	c7 43 4c 00 04 00 00 	movl   $0x400,0x4c(%ebx)
81001f4e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001f52:	80 cc 04             	or     $0x4,%ah
81001f55:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001f59:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001f5d:	75 08                	jne    81001f67 <_fseeko_r+0x203>
81001f5f:	8b 45 10             	mov    0x10(%ebp),%eax
81001f62:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001f65:	eb 2b                	jmp    81001f92 <_fseeko_r+0x22e>
81001f67:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001f6b:	98                   	cwtl   
81001f6c:	83 ec 04             	sub    $0x4,%esp
81001f6f:	8d 55 98             	lea    -0x68(%ebp),%edx
81001f72:	52                   	push   %edx
81001f73:	50                   	push   %eax
81001f74:	ff 75 08             	push   0x8(%ebp)
81001f77:	e8 b9 02 00 00       	call   81002235 <_fstat_r>
81001f7c:	83 c4 10             	add    $0x10,%esp
81001f7f:	85 c0                	test   %eax,%eax
81001f81:	0f 85 e5 01 00 00    	jne    8100216c <_fseeko_r+0x408>
81001f87:	8b 55 a8             	mov    -0x58(%ebp),%edx
81001f8a:	8b 45 10             	mov    0x10(%ebp),%eax
81001f8d:	01 d0                	add    %edx,%eax
81001f8f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001f92:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001f96:	75 49                	jne    81001fe1 <_fseeko_r+0x27d>
81001f98:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001f9c:	98                   	cwtl   
81001f9d:	25 00 10 00 00       	and    $0x1000,%eax
81001fa2:	85 c0                	test   %eax,%eax
81001fa4:	74 08                	je     81001fae <_fseeko_r+0x24a>
81001fa6:	8b 43 50             	mov    0x50(%ebx),%eax
81001fa9:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001fac:	eb 20                	jmp    81001fce <_fseeko_r+0x26a>
81001fae:	8b 43 1c             	mov    0x1c(%ebx),%eax
81001fb1:	6a 01                	push   $0x1
81001fb3:	6a 00                	push   $0x0
81001fb5:	50                   	push   %eax
81001fb6:	ff 75 08             	push   0x8(%ebp)
81001fb9:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001fbc:	ff d0                	call   *%eax
81001fbe:	83 c4 10             	add    $0x10,%esp
81001fc1:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001fc4:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81001fc8:	0f 84 a1 01 00 00    	je     8100216f <_fseeko_r+0x40b>
81001fce:	8b 43 04             	mov    0x4(%ebx),%eax
81001fd1:	29 45 f0             	sub    %eax,-0x10(%ebp)
81001fd4:	8b 43 30             	mov    0x30(%ebx),%eax
81001fd7:	85 c0                	test   %eax,%eax
81001fd9:	74 06                	je     81001fe1 <_fseeko_r+0x27d>
81001fdb:	8b 43 3c             	mov    0x3c(%ebx),%eax
81001fde:	29 45 f0             	sub    %eax,-0x10(%ebp)
81001fe1:	8b 43 30             	mov    0x30(%ebx),%eax
81001fe4:	85 c0                	test   %eax,%eax
81001fe6:	74 22                	je     8100200a <_fseeko_r+0x2a6>
81001fe8:	8b 43 04             	mov    0x4(%ebx),%eax
81001feb:	01 45 f0             	add    %eax,-0x10(%ebp)
81001fee:	8b 43 38             	mov    0x38(%ebx),%eax
81001ff1:	8b 53 10             	mov    0x10(%ebx),%edx
81001ff4:	29 d0                	sub    %edx,%eax
81001ff6:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001ff9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ffc:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001fff:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002002:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002005:	01 45 ec             	add    %eax,-0x14(%ebp)
81002008:	eb 19                	jmp    81002023 <_fseeko_r+0x2bf>
8100200a:	8b 03                	mov    (%ebx),%eax
8100200c:	8b 53 10             	mov    0x10(%ebx),%edx
8100200f:	29 d0                	sub    %edx,%eax
81002011:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002014:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002017:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100201a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100201d:	8b 43 04             	mov    0x4(%ebx),%eax
81002020:	01 45 ec             	add    %eax,-0x14(%ebp)
81002023:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002026:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81002029:	7c 7c                	jl     810020a7 <_fseeko_r+0x343>
8100202b:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100202e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002031:	01 c2                	add    %eax,%edx
81002033:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002036:	39 c2                	cmp    %eax,%edx
81002038:	76 6d                	jbe    810020a7 <_fseeko_r+0x343>
8100203a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100203d:	2b 45 f0             	sub    -0x10(%ebp),%eax
81002040:	89 c6                	mov    %eax,%esi
81002042:	8b 43 10             	mov    0x10(%ebx),%eax
81002045:	89 f2                	mov    %esi,%edx
81002047:	01 d0                	add    %edx,%eax
81002049:	89 03                	mov    %eax,(%ebx)
8100204b:	89 f2                	mov    %esi,%edx
8100204d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002050:	29 d0                	sub    %edx,%eax
81002052:	89 43 04             	mov    %eax,0x4(%ebx)
81002055:	8b 43 30             	mov    0x30(%ebx),%eax
81002058:	85 c0                	test   %eax,%eax
8100205a:	74 23                	je     8100207f <_fseeko_r+0x31b>
8100205c:	8b 53 30             	mov    0x30(%ebx),%edx
8100205f:	8d 43 40             	lea    0x40(%ebx),%eax
81002062:	39 c2                	cmp    %eax,%edx
81002064:	74 12                	je     81002078 <_fseeko_r+0x314>
81002066:	8b 43 30             	mov    0x30(%ebx),%eax
81002069:	83 ec 08             	sub    $0x8,%esp
8100206c:	50                   	push   %eax
8100206d:	ff 75 08             	push   0x8(%ebp)
81002070:	e8 76 f7 ff ff       	call   810017eb <_free_r>
81002075:	83 c4 10             	add    $0x10,%esp
81002078:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100207f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002083:	83 e0 df             	and    $0xffffffdf,%eax
81002086:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100208a:	8d 43 5c             	lea    0x5c(%ebx),%eax
8100208d:	83 ec 04             	sub    $0x4,%esp
81002090:	6a 08                	push   $0x8
81002092:	6a 00                	push   $0x0
81002094:	50                   	push   %eax
81002095:	e8 66 1f 00 00       	call   81004000 <memset>
8100209a:	83 c4 10             	add    $0x10,%esp
8100209d:	b8 00 00 00 00       	mov    $0x0,%eax
810020a2:	e9 67 01 00 00       	jmp    8100220e <_fseeko_r+0x4aa>
810020a7:	8b 43 4c             	mov    0x4c(%ebx),%eax
810020aa:	f7 d8                	neg    %eax
810020ac:	23 45 f4             	and    -0xc(%ebp),%eax
810020af:	89 45 f0             	mov    %eax,-0x10(%ebp)
810020b2:	8b 43 1c             	mov    0x1c(%ebx),%eax
810020b5:	6a 00                	push   $0x0
810020b7:	ff 75 f0             	push   -0x10(%ebp)
810020ba:	50                   	push   %eax
810020bb:	ff 75 08             	push   0x8(%ebp)
810020be:	8b 45 e0             	mov    -0x20(%ebp),%eax
810020c1:	ff d0                	call   *%eax
810020c3:	83 c4 10             	add    $0x10,%esp
810020c6:	83 f8 ff             	cmp    $0xffffffff,%eax
810020c9:	0f 84 a3 00 00 00    	je     81002172 <_fseeko_r+0x40e>
810020cf:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810020d6:	8b 43 10             	mov    0x10(%ebx),%eax
810020d9:	89 03                	mov    %eax,(%ebx)
810020db:	8b 43 30             	mov    0x30(%ebx),%eax
810020de:	85 c0                	test   %eax,%eax
810020e0:	74 23                	je     81002105 <_fseeko_r+0x3a1>
810020e2:	8b 53 30             	mov    0x30(%ebx),%edx
810020e5:	8d 43 40             	lea    0x40(%ebx),%eax
810020e8:	39 c2                	cmp    %eax,%edx
810020ea:	74 12                	je     810020fe <_fseeko_r+0x39a>
810020ec:	8b 43 30             	mov    0x30(%ebx),%eax
810020ef:	83 ec 08             	sub    $0x8,%esp
810020f2:	50                   	push   %eax
810020f3:	ff 75 08             	push   0x8(%ebp)
810020f6:	e8 f0 f6 ff ff       	call   810017eb <_free_r>
810020fb:	83 c4 10             	add    $0x10,%esp
810020fe:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002105:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002109:	83 e0 df             	and    $0xffffffdf,%eax
8100210c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002110:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002113:	2b 45 f0             	sub    -0x10(%ebp),%eax
81002116:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002119:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100211d:	74 2d                	je     8100214c <_fseeko_r+0x3e8>
8100211f:	83 ec 08             	sub    $0x8,%esp
81002122:	53                   	push   %ebx
81002123:	ff 75 08             	push   0x8(%ebp)
81002126:	e8 16 2e 00 00       	call   81004f41 <__srefill_r>
8100212b:	83 c4 10             	add    $0x10,%esp
8100212e:	85 c0                	test   %eax,%eax
81002130:	75 43                	jne    81002175 <_fseeko_r+0x411>
81002132:	8b 43 04             	mov    0x4(%ebx),%eax
81002135:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002138:	77 3b                	ja     81002175 <_fseeko_r+0x411>
8100213a:	8b 13                	mov    (%ebx),%edx
8100213c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100213f:	01 d0                	add    %edx,%eax
81002141:	89 03                	mov    %eax,(%ebx)
81002143:	8b 43 04             	mov    0x4(%ebx),%eax
81002146:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002149:	89 43 04             	mov    %eax,0x4(%ebx)
8100214c:	8d 43 5c             	lea    0x5c(%ebx),%eax
8100214f:	83 ec 04             	sub    $0x4,%esp
81002152:	6a 08                	push   $0x8
81002154:	6a 00                	push   $0x0
81002156:	50                   	push   %eax
81002157:	e8 a4 1e 00 00       	call   81004000 <memset>
8100215c:	83 c4 10             	add    $0x10,%esp
8100215f:	b8 00 00 00 00       	mov    $0x0,%eax
81002164:	e9 a5 00 00 00       	jmp    8100220e <_fseeko_r+0x4aa>
81002169:	90                   	nop
8100216a:	eb 0a                	jmp    81002176 <_fseeko_r+0x412>
8100216c:	90                   	nop
8100216d:	eb 07                	jmp    81002176 <_fseeko_r+0x412>
8100216f:	90                   	nop
81002170:	eb 04                	jmp    81002176 <_fseeko_r+0x412>
81002172:	90                   	nop
81002173:	eb 01                	jmp    81002176 <_fseeko_r+0x412>
81002175:	90                   	nop
81002176:	83 ec 08             	sub    $0x8,%esp
81002179:	53                   	push   %ebx
8100217a:	ff 75 08             	push   0x8(%ebp)
8100217d:	e8 10 ef ff ff       	call   81001092 <_fflush_r>
81002182:	83 c4 10             	add    $0x10,%esp
81002185:	85 c0                	test   %eax,%eax
81002187:	75 1a                	jne    810021a3 <_fseeko_r+0x43f>
81002189:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100218c:	ff 75 14             	push   0x14(%ebp)
8100218f:	ff 75 10             	push   0x10(%ebp)
81002192:	50                   	push   %eax
81002193:	ff 75 08             	push   0x8(%ebp)
81002196:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002199:	ff d0                	call   *%eax
8100219b:	83 c4 10             	add    $0x10,%esp
8100219e:	83 f8 ff             	cmp    $0xffffffff,%eax
810021a1:	75 07                	jne    810021aa <_fseeko_r+0x446>
810021a3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810021a8:	eb 64                	jmp    8100220e <_fseeko_r+0x4aa>
810021aa:	8b 43 30             	mov    0x30(%ebx),%eax
810021ad:	85 c0                	test   %eax,%eax
810021af:	74 23                	je     810021d4 <_fseeko_r+0x470>
810021b1:	8b 53 30             	mov    0x30(%ebx),%edx
810021b4:	8d 43 40             	lea    0x40(%ebx),%eax
810021b7:	39 c2                	cmp    %eax,%edx
810021b9:	74 12                	je     810021cd <_fseeko_r+0x469>
810021bb:	8b 43 30             	mov    0x30(%ebx),%eax
810021be:	83 ec 08             	sub    $0x8,%esp
810021c1:	50                   	push   %eax
810021c2:	ff 75 08             	push   0x8(%ebp)
810021c5:	e8 21 f6 ff ff       	call   810017eb <_free_r>
810021ca:	83 c4 10             	add    $0x10,%esp
810021cd:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810021d4:	8b 43 10             	mov    0x10(%ebx),%eax
810021d7:	89 03                	mov    %eax,(%ebx)
810021d9:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810021e0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810021e4:	83 e0 df             	and    $0xffffffdf,%eax
810021e7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810021eb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810021ef:	80 e4 f7             	and    $0xf7,%ah
810021f2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810021f6:	8d 43 5c             	lea    0x5c(%ebx),%eax
810021f9:	83 ec 04             	sub    $0x4,%esp
810021fc:	6a 08                	push   $0x8
810021fe:	6a 00                	push   $0x0
81002200:	50                   	push   %eax
81002201:	e8 fa 1d 00 00       	call   81004000 <memset>
81002206:	83 c4 10             	add    $0x10,%esp
81002209:	b8 00 00 00 00       	mov    $0x0,%eax
8100220e:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002211:	5b                   	pop    %ebx
81002212:	5e                   	pop    %esi
81002213:	5d                   	pop    %ebp
81002214:	c3                   	ret    

81002215 <fseeko>:
81002215:	55                   	push   %ebp
81002216:	89 e5                	mov    %esp,%ebp
81002218:	83 ec 08             	sub    $0x8,%esp
8100221b:	8b 55 08             	mov    0x8(%ebp),%edx
8100221e:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81002223:	ff 75 10             	push   0x10(%ebp)
81002226:	ff 75 0c             	push   0xc(%ebp)
81002229:	52                   	push   %edx
8100222a:	50                   	push   %eax
8100222b:	e8 34 fb ff ff       	call   81001d64 <_fseeko_r>
81002230:	83 c4 10             	add    $0x10,%esp
81002233:	c9                   	leave  
81002234:	c3                   	ret    

81002235 <_fstat_r>:
81002235:	55                   	push   %ebp
81002236:	89 e5                	mov    %esp,%ebp
81002238:	83 ec 18             	sub    $0x18,%esp
8100223b:	c7 05 ec 8f 00 81 00 	movl   $0x0,0x81008fec
81002242:	00 00 00 
81002245:	83 ec 08             	sub    $0x8,%esp
81002248:	ff 75 10             	push   0x10(%ebp)
8100224b:	ff 75 0c             	push   0xc(%ebp)
8100224e:	e8 bb e8 ff ff       	call   81000b0e <fstat>
81002253:	83 c4 10             	add    $0x10,%esp
81002256:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002259:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100225d:	75 14                	jne    81002273 <_fstat_r+0x3e>
8100225f:	a1 ec 8f 00 81       	mov    0x81008fec,%eax
81002264:	85 c0                	test   %eax,%eax
81002266:	74 0b                	je     81002273 <_fstat_r+0x3e>
81002268:	8b 15 ec 8f 00 81    	mov    0x81008fec,%edx
8100226e:	8b 45 08             	mov    0x8(%ebp),%eax
81002271:	89 10                	mov    %edx,(%eax)
81002273:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002276:	c9                   	leave  
81002277:	c3                   	ret    

81002278 <_fwalk>:
81002278:	55                   	push   %ebp
81002279:	89 e5                	mov    %esp,%ebp
8100227b:	57                   	push   %edi
8100227c:	56                   	push   %esi
8100227d:	53                   	push   %ebx
8100227e:	83 ec 1c             	sub    $0x1c,%esp
81002281:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002288:	8b 45 08             	mov    0x8(%ebp),%eax
8100228b:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81002291:	eb 3e                	jmp    810022d1 <_fwalk+0x59>
81002293:	8b 5e 08             	mov    0x8(%esi),%ebx
81002296:	8b 7e 04             	mov    0x4(%esi),%edi
81002299:	eb 2d                	jmp    810022c8 <_fwalk+0x50>
8100229b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100229f:	66 85 c0             	test   %ax,%ax
810022a2:	74 21                	je     810022c5 <_fwalk+0x4d>
810022a4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810022a8:	66 83 f8 01          	cmp    $0x1,%ax
810022ac:	74 17                	je     810022c5 <_fwalk+0x4d>
810022ae:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810022b2:	66 83 f8 ff          	cmp    $0xffff,%ax
810022b6:	74 0d                	je     810022c5 <_fwalk+0x4d>
810022b8:	83 ec 0c             	sub    $0xc,%esp
810022bb:	53                   	push   %ebx
810022bc:	ff 55 0c             	call   *0xc(%ebp)
810022bf:	83 c4 10             	add    $0x10,%esp
810022c2:	09 45 e4             	or     %eax,-0x1c(%ebp)
810022c5:	83 c3 68             	add    $0x68,%ebx
810022c8:	83 ef 01             	sub    $0x1,%edi
810022cb:	85 ff                	test   %edi,%edi
810022cd:	79 cc                	jns    8100229b <_fwalk+0x23>
810022cf:	8b 36                	mov    (%esi),%esi
810022d1:	85 f6                	test   %esi,%esi
810022d3:	75 be                	jne    81002293 <_fwalk+0x1b>
810022d5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810022d8:	8d 65 f4             	lea    -0xc(%ebp),%esp
810022db:	5b                   	pop    %ebx
810022dc:	5e                   	pop    %esi
810022dd:	5f                   	pop    %edi
810022de:	5d                   	pop    %ebp
810022df:	c3                   	ret    

810022e0 <_fwalk_reent>:
810022e0:	55                   	push   %ebp
810022e1:	89 e5                	mov    %esp,%ebp
810022e3:	57                   	push   %edi
810022e4:	56                   	push   %esi
810022e5:	53                   	push   %ebx
810022e6:	83 ec 1c             	sub    $0x1c,%esp
810022e9:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810022f0:	8b 45 08             	mov    0x8(%ebp),%eax
810022f3:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
810022f9:	eb 41                	jmp    8100233c <_fwalk_reent+0x5c>
810022fb:	8b 5e 08             	mov    0x8(%esi),%ebx
810022fe:	8b 7e 04             	mov    0x4(%esi),%edi
81002301:	eb 30                	jmp    81002333 <_fwalk_reent+0x53>
81002303:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002307:	66 85 c0             	test   %ax,%ax
8100230a:	74 24                	je     81002330 <_fwalk_reent+0x50>
8100230c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002310:	66 83 f8 01          	cmp    $0x1,%ax
81002314:	74 1a                	je     81002330 <_fwalk_reent+0x50>
81002316:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100231a:	66 83 f8 ff          	cmp    $0xffff,%ax
8100231e:	74 10                	je     81002330 <_fwalk_reent+0x50>
81002320:	83 ec 08             	sub    $0x8,%esp
81002323:	53                   	push   %ebx
81002324:	ff 75 08             	push   0x8(%ebp)
81002327:	ff 55 0c             	call   *0xc(%ebp)
8100232a:	83 c4 10             	add    $0x10,%esp
8100232d:	09 45 e4             	or     %eax,-0x1c(%ebp)
81002330:	83 c3 68             	add    $0x68,%ebx
81002333:	83 ef 01             	sub    $0x1,%edi
81002336:	85 ff                	test   %edi,%edi
81002338:	79 c9                	jns    81002303 <_fwalk_reent+0x23>
8100233a:	8b 36                	mov    (%esi),%esi
8100233c:	85 f6                	test   %esi,%esi
8100233e:	75 bb                	jne    810022fb <_fwalk_reent+0x1b>
81002340:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002343:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002346:	5b                   	pop    %ebx
81002347:	5e                   	pop    %esi
81002348:	5f                   	pop    %edi
81002349:	5d                   	pop    %ebp
8100234a:	c3                   	ret    

8100234b <_fwrite_r>:
8100234b:	55                   	push   %ebp
8100234c:	89 e5                	mov    %esp,%ebp
8100234e:	83 ec 28             	sub    $0x28,%esp
81002351:	8b 45 0c             	mov    0xc(%ebp),%eax
81002354:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002357:	8b 45 14             	mov    0x14(%ebp),%eax
8100235a:	0f af 45 10          	imul   0x10(%ebp),%eax
8100235e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002361:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002364:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002367:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100236a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100236d:	8d 45 dc             	lea    -0x24(%ebp),%eax
81002370:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002373:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
8100237a:	8b 45 08             	mov    0x8(%ebp),%eax
8100237d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002380:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81002384:	74 18                	je     8100239e <_fwrite_r+0x53>
81002386:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002389:	8b 40 38             	mov    0x38(%eax),%eax
8100238c:	85 c0                	test   %eax,%eax
8100238e:	75 0e                	jne    8100239e <_fwrite_r+0x53>
81002390:	83 ec 0c             	sub    $0xc,%esp
81002393:	ff 75 f0             	push   -0x10(%ebp)
81002396:	e8 fa f1 ff ff       	call   81001595 <__sinit>
8100239b:	83 c4 10             	add    $0x10,%esp
8100239e:	8b 45 18             	mov    0x18(%ebp),%eax
810023a1:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810023a5:	98                   	cwtl   
810023a6:	25 00 20 00 00       	and    $0x2000,%eax
810023ab:	85 c0                	test   %eax,%eax
810023ad:	75 24                	jne    810023d3 <_fwrite_r+0x88>
810023af:	8b 45 18             	mov    0x18(%ebp),%eax
810023b2:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810023b6:	80 cc 20             	or     $0x20,%ah
810023b9:	89 c2                	mov    %eax,%edx
810023bb:	8b 45 18             	mov    0x18(%ebp),%eax
810023be:	66 89 50 0c          	mov    %dx,0xc(%eax)
810023c2:	8b 45 18             	mov    0x18(%ebp),%eax
810023c5:	8b 40 64             	mov    0x64(%eax),%eax
810023c8:	80 e4 df             	and    $0xdf,%ah
810023cb:	89 c2                	mov    %eax,%edx
810023cd:	8b 45 18             	mov    0x18(%ebp),%eax
810023d0:	89 50 64             	mov    %edx,0x64(%eax)
810023d3:	83 ec 04             	sub    $0x4,%esp
810023d6:	8d 45 e4             	lea    -0x1c(%ebp),%eax
810023d9:	50                   	push   %eax
810023da:	ff 75 18             	push   0x18(%ebp)
810023dd:	ff 75 08             	push   0x8(%ebp)
810023e0:	e8 55 3e 00 00       	call   8100623a <__sfvwrite_r>
810023e5:	83 c4 10             	add    $0x10,%esp
810023e8:	85 c0                	test   %eax,%eax
810023ea:	75 05                	jne    810023f1 <_fwrite_r+0xa6>
810023ec:	8b 45 14             	mov    0x14(%ebp),%eax
810023ef:	eb 10                	jmp    81002401 <_fwrite_r+0xb6>
810023f1:	8b 55 ec             	mov    -0x14(%ebp),%edx
810023f4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810023f7:	29 d0                	sub    %edx,%eax
810023f9:	ba 00 00 00 00       	mov    $0x0,%edx
810023fe:	f7 75 10             	divl   0x10(%ebp)
81002401:	c9                   	leave  
81002402:	c3                   	ret    

81002403 <fwrite>:
81002403:	55                   	push   %ebp
81002404:	89 e5                	mov    %esp,%ebp
81002406:	83 ec 08             	sub    $0x8,%esp
81002409:	a1 a4 83 00 81       	mov    0x810083a4,%eax
8100240e:	83 ec 0c             	sub    $0xc,%esp
81002411:	ff 75 14             	push   0x14(%ebp)
81002414:	ff 75 10             	push   0x10(%ebp)
81002417:	ff 75 0c             	push   0xc(%ebp)
8100241a:	ff 75 08             	push   0x8(%ebp)
8100241d:	50                   	push   %eax
8100241e:	e8 28 ff ff ff       	call   8100234b <_fwrite_r>
81002423:	83 c4 20             	add    $0x20,%esp
81002426:	c9                   	leave  
81002427:	c3                   	ret    

81002428 <_getchar_r>:
81002428:	55                   	push   %ebp
81002429:	89 e5                	mov    %esp,%ebp
8100242b:	83 ec 08             	sub    $0x8,%esp
8100242e:	8b 45 08             	mov    0x8(%ebp),%eax
81002431:	8b 40 04             	mov    0x4(%eax),%eax
81002434:	83 ec 08             	sub    $0x8,%esp
81002437:	50                   	push   %eax
81002438:	ff 75 08             	push   0x8(%ebp)
8100243b:	e8 98 42 00 00       	call   810066d8 <_getc_r>
81002440:	83 c4 10             	add    $0x10,%esp
81002443:	c9                   	leave  
81002444:	c3                   	ret    

81002445 <getchar>:
81002445:	55                   	push   %ebp
81002446:	89 e5                	mov    %esp,%ebp
81002448:	83 ec 18             	sub    $0x18,%esp
8100244b:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81002450:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002453:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002456:	8b 40 04             	mov    0x4(%eax),%eax
81002459:	83 ec 08             	sub    $0x8,%esp
8100245c:	50                   	push   %eax
8100245d:	ff 75 f4             	push   -0xc(%ebp)
81002460:	e8 73 42 00 00       	call   810066d8 <_getc_r>
81002465:	83 c4 10             	add    $0x10,%esp
81002468:	c9                   	leave  
81002469:	c3                   	ret    

8100246a <reverse_argv_elements>:
8100246a:	55                   	push   %ebp
8100246b:	89 e5                	mov    %esp,%ebp
8100246d:	83 ec 10             	sub    $0x10,%esp
81002470:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
81002477:	eb 5e                	jmp    810024d7 <reverse_argv_elements+0x6d>
81002479:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100247c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002483:	8b 45 08             	mov    0x8(%ebp),%eax
81002486:	01 d0                	add    %edx,%eax
81002488:	8b 00                	mov    (%eax),%eax
8100248a:	89 45 f8             	mov    %eax,-0x8(%ebp)
8100248d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002490:	2b 45 fc             	sub    -0x4(%ebp),%eax
81002493:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81002498:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100249f:	8b 45 08             	mov    0x8(%ebp),%eax
810024a2:	01 d0                	add    %edx,%eax
810024a4:	8b 55 fc             	mov    -0x4(%ebp),%edx
810024a7:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
810024ae:	8b 55 08             	mov    0x8(%ebp),%edx
810024b1:	01 ca                	add    %ecx,%edx
810024b3:	8b 00                	mov    (%eax),%eax
810024b5:	89 02                	mov    %eax,(%edx)
810024b7:	8b 45 0c             	mov    0xc(%ebp),%eax
810024ba:	2b 45 fc             	sub    -0x4(%ebp),%eax
810024bd:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
810024c2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810024c9:	8b 45 08             	mov    0x8(%ebp),%eax
810024cc:	01 c2                	add    %eax,%edx
810024ce:	8b 45 f8             	mov    -0x8(%ebp),%eax
810024d1:	89 02                	mov    %eax,(%edx)
810024d3:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
810024d7:	8b 45 0c             	mov    0xc(%ebp),%eax
810024da:	d1 f8                	sar    %eax
810024dc:	39 45 fc             	cmp    %eax,-0x4(%ebp)
810024df:	7c 98                	jl     81002479 <reverse_argv_elements+0xf>
810024e1:	90                   	nop
810024e2:	90                   	nop
810024e3:	c9                   	leave  
810024e4:	c3                   	ret    

810024e5 <permute>:
810024e5:	55                   	push   %ebp
810024e6:	89 e5                	mov    %esp,%ebp
810024e8:	ff 75 0c             	push   0xc(%ebp)
810024eb:	ff 75 08             	push   0x8(%ebp)
810024ee:	e8 77 ff ff ff       	call   8100246a <reverse_argv_elements>
810024f3:	83 c4 08             	add    $0x8,%esp
810024f6:	8b 55 0c             	mov    0xc(%ebp),%edx
810024f9:	8b 45 10             	mov    0x10(%ebp),%eax
810024fc:	01 d0                	add    %edx,%eax
810024fe:	50                   	push   %eax
810024ff:	ff 75 08             	push   0x8(%ebp)
81002502:	e8 63 ff ff ff       	call   8100246a <reverse_argv_elements>
81002507:	83 c4 08             	add    $0x8,%esp
8100250a:	ff 75 10             	push   0x10(%ebp)
8100250d:	ff 75 08             	push   0x8(%ebp)
81002510:	e8 55 ff ff ff       	call   8100246a <reverse_argv_elements>
81002515:	83 c4 08             	add    $0x8,%esp
81002518:	90                   	nop
81002519:	c9                   	leave  
8100251a:	c3                   	ret    

8100251b <is_option>:
8100251b:	55                   	push   %ebp
8100251c:	89 e5                	mov    %esp,%ebp
8100251e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81002522:	74 1a                	je     8100253e <is_option+0x23>
81002524:	8b 45 08             	mov    0x8(%ebp),%eax
81002527:	0f b6 00             	movzbl (%eax),%eax
8100252a:	3c 2d                	cmp    $0x2d,%al
8100252c:	74 10                	je     8100253e <is_option+0x23>
8100252e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81002532:	74 11                	je     81002545 <is_option+0x2a>
81002534:	8b 45 08             	mov    0x8(%ebp),%eax
81002537:	0f b6 00             	movzbl (%eax),%eax
8100253a:	3c 2b                	cmp    $0x2b,%al
8100253c:	75 07                	jne    81002545 <is_option+0x2a>
8100253e:	b8 01 00 00 00       	mov    $0x1,%eax
81002543:	eb 05                	jmp    8100254a <is_option+0x2f>
81002545:	b8 00 00 00 00       	mov    $0x0,%eax
8100254a:	5d                   	pop    %ebp
8100254b:	c3                   	ret    

8100254c <read_globals>:
8100254c:	55                   	push   %ebp
8100254d:	89 e5                	mov    %esp,%ebp
8100254f:	8b 15 74 8f 00 81    	mov    0x81008f74,%edx
81002555:	8b 45 08             	mov    0x8(%ebp),%eax
81002558:	89 10                	mov    %edx,(%eax)
8100255a:	8b 15 78 8f 00 81    	mov    0x81008f78,%edx
81002560:	8b 45 08             	mov    0x8(%ebp),%eax
81002563:	89 50 04             	mov    %edx,0x4(%eax)
81002566:	8b 15 64 7f 00 81    	mov    0x81007f64,%edx
8100256c:	8b 45 08             	mov    0x8(%ebp),%eax
8100256f:	89 50 08             	mov    %edx,0x8(%eax)
81002572:	8b 15 68 7f 00 81    	mov    0x81007f68,%edx
81002578:	8b 45 08             	mov    0x8(%ebp),%eax
8100257b:	89 50 0c             	mov    %edx,0xc(%eax)
8100257e:	8b 15 7c 8f 00 81    	mov    0x81008f7c,%edx
81002584:	8b 45 08             	mov    0x8(%ebp),%eax
81002587:	89 50 10             	mov    %edx,0x10(%eax)
8100258a:	8b 15 80 8f 00 81    	mov    0x81008f80,%edx
81002590:	8b 45 08             	mov    0x8(%ebp),%eax
81002593:	89 50 14             	mov    %edx,0x14(%eax)
81002596:	8b 15 84 8f 00 81    	mov    0x81008f84,%edx
8100259c:	8b 45 08             	mov    0x8(%ebp),%eax
8100259f:	89 50 18             	mov    %edx,0x18(%eax)
810025a2:	90                   	nop
810025a3:	5d                   	pop    %ebp
810025a4:	c3                   	ret    

810025a5 <write_globals>:
810025a5:	55                   	push   %ebp
810025a6:	89 e5                	mov    %esp,%ebp
810025a8:	8b 45 08             	mov    0x8(%ebp),%eax
810025ab:	8b 00                	mov    (%eax),%eax
810025ad:	a3 74 8f 00 81       	mov    %eax,0x81008f74
810025b2:	8b 45 08             	mov    0x8(%ebp),%eax
810025b5:	8b 40 04             	mov    0x4(%eax),%eax
810025b8:	a3 78 8f 00 81       	mov    %eax,0x81008f78
810025bd:	8b 45 08             	mov    0x8(%ebp),%eax
810025c0:	8b 40 08             	mov    0x8(%eax),%eax
810025c3:	a3 64 7f 00 81       	mov    %eax,0x81007f64
810025c8:	8b 45 08             	mov    0x8(%ebp),%eax
810025cb:	8b 40 0c             	mov    0xc(%eax),%eax
810025ce:	a3 68 7f 00 81       	mov    %eax,0x81007f68
810025d3:	8b 45 08             	mov    0x8(%ebp),%eax
810025d6:	8b 40 10             	mov    0x10(%eax),%eax
810025d9:	a3 7c 8f 00 81       	mov    %eax,0x81008f7c
810025de:	8b 45 08             	mov    0x8(%ebp),%eax
810025e1:	8b 40 14             	mov    0x14(%eax),%eax
810025e4:	a3 80 8f 00 81       	mov    %eax,0x81008f80
810025e9:	8b 45 08             	mov    0x8(%ebp),%eax
810025ec:	8b 40 18             	mov    0x18(%eax),%eax
810025ef:	a3 84 8f 00 81       	mov    %eax,0x81008f84
810025f4:	90                   	nop
810025f5:	5d                   	pop    %ebp
810025f6:	c3                   	ret    

810025f7 <getopt_internal>:
810025f7:	55                   	push   %ebp
810025f8:	89 e5                	mov    %esp,%ebp
810025fa:	53                   	push   %ebx
810025fb:	83 ec 34             	sub    $0x34,%esp
810025fe:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81002605:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100260c:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81002613:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8100261a:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81002621:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81002628:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
8100262f:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81002636:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
8100263d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81002641:	74 35                	je     81002678 <getopt_internal+0x81>
81002643:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81002647:	74 2f                	je     81002678 <getopt_internal+0x81>
81002649:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100264d:	75 06                	jne    81002655 <getopt_internal+0x5e>
8100264f:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81002653:	74 23                	je     81002678 <getopt_internal+0x81>
81002655:	8b 45 20             	mov    0x20(%ebp),%eax
81002658:	8b 40 04             	mov    0x4(%eax),%eax
8100265b:	39 45 08             	cmp    %eax,0x8(%ebp)
8100265e:	7e 18                	jle    81002678 <getopt_internal+0x81>
81002660:	8b 45 20             	mov    0x20(%ebp),%eax
81002663:	8b 40 04             	mov    0x4(%eax),%eax
81002666:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100266d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002670:	01 d0                	add    %edx,%eax
81002672:	8b 00                	mov    (%eax),%eax
81002674:	85 c0                	test   %eax,%eax
81002676:	75 0a                	jne    81002682 <getopt_internal+0x8b>
81002678:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100267d:	e9 85 0a 00 00       	jmp    81003107 <getopt_internal+0xb10>
81002682:	8b 45 20             	mov    0x20(%ebp),%eax
81002685:	8b 40 04             	mov    0x4(%eax),%eax
81002688:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100268f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002692:	01 d0                	add    %edx,%eax
81002694:	8b 00                	mov    (%eax),%eax
81002696:	83 ec 08             	sub    $0x8,%esp
81002699:	68 70 7b 00 81       	push   $0x81007b70
8100269e:	50                   	push   %eax
8100269f:	e8 08 2f 00 00       	call   810055ac <strcmp>
810026a4:	83 c4 10             	add    $0x10,%esp
810026a7:	85 c0                	test   %eax,%eax
810026a9:	75 19                	jne    810026c4 <getopt_internal+0xcd>
810026ab:	8b 45 20             	mov    0x20(%ebp),%eax
810026ae:	8b 40 04             	mov    0x4(%eax),%eax
810026b1:	8d 50 01             	lea    0x1(%eax),%edx
810026b4:	8b 45 20             	mov    0x20(%ebp),%eax
810026b7:	89 50 04             	mov    %edx,0x4(%eax)
810026ba:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810026bf:	e9 43 0a 00 00       	jmp    81003107 <getopt_internal+0xb10>
810026c4:	8b 45 20             	mov    0x20(%ebp),%eax
810026c7:	8b 40 04             	mov    0x4(%eax),%eax
810026ca:	85 c0                	test   %eax,%eax
810026cc:	75 28                	jne    810026f6 <getopt_internal+0xff>
810026ce:	8b 45 20             	mov    0x20(%ebp),%eax
810026d1:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
810026d8:	8b 45 20             	mov    0x20(%ebp),%eax
810026db:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810026e2:	8b 45 20             	mov    0x20(%ebp),%eax
810026e5:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810026ec:	8b 45 20             	mov    0x20(%ebp),%eax
810026ef:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810026f6:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810026fa:	74 33                	je     8100272f <getopt_internal+0x138>
810026fc:	8b 45 10             	mov    0x10(%ebp),%eax
810026ff:	0f b6 00             	movzbl (%eax),%eax
81002702:	3c 2d                	cmp    $0x2d,%al
81002704:	74 0a                	je     81002710 <getopt_internal+0x119>
81002706:	8b 45 10             	mov    0x10(%ebp),%eax
81002709:	0f b6 00             	movzbl (%eax),%eax
8100270c:	3c 2b                	cmp    $0x2b,%al
8100270e:	75 1f                	jne    8100272f <getopt_internal+0x138>
81002710:	8b 45 10             	mov    0x10(%ebp),%eax
81002713:	0f b6 00             	movzbl (%eax),%eax
81002716:	3c 2d                	cmp    $0x2d,%al
81002718:	75 07                	jne    81002721 <getopt_internal+0x12a>
8100271a:	b8 01 00 00 00       	mov    $0x1,%eax
8100271f:	eb 05                	jmp    81002726 <getopt_internal+0x12f>
81002721:	b8 02 00 00 00       	mov    $0x2,%eax
81002726:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002729:	83 45 10 01          	addl   $0x1,0x10(%ebp)
8100272d:	eb 23                	jmp    81002752 <getopt_internal+0x15b>
8100272f:	83 ec 0c             	sub    $0xc,%esp
81002732:	68 73 7b 00 81       	push   $0x81007b73
81002737:	e8 92 40 00 00       	call   810067ce <getenv>
8100273c:	83 c4 10             	add    $0x10,%esp
8100273f:	85 c0                	test   %eax,%eax
81002741:	74 07                	je     8100274a <getopt_internal+0x153>
81002743:	b8 02 00 00 00       	mov    $0x2,%eax
81002748:	eb 05                	jmp    8100274f <getopt_internal+0x158>
8100274a:	b8 00 00 00 00       	mov    $0x0,%eax
8100274f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002752:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002756:	74 15                	je     8100276d <getopt_internal+0x176>
81002758:	8b 45 10             	mov    0x10(%ebp),%eax
8100275b:	0f b6 00             	movzbl (%eax),%eax
8100275e:	3c 3a                	cmp    $0x3a,%al
81002760:	75 0b                	jne    8100276d <getopt_internal+0x176>
81002762:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81002766:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
8100276d:	8b 45 20             	mov    0x20(%ebp),%eax
81002770:	8b 40 10             	mov    0x10(%eax),%eax
81002773:	83 f8 01             	cmp    $0x1,%eax
81002776:	0f 85 a2 01 00 00    	jne    8100291e <getopt_internal+0x327>
8100277c:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
81002780:	0f 84 02 01 00 00    	je     81002888 <getopt_internal+0x291>
81002786:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
8100278a:	0f 84 56 01 00 00    	je     810028e6 <getopt_internal+0x2ef>
81002790:	8b 45 20             	mov    0x20(%ebp),%eax
81002793:	8b 50 04             	mov    0x4(%eax),%edx
81002796:	8b 45 20             	mov    0x20(%ebp),%eax
81002799:	89 50 14             	mov    %edx,0x14(%eax)
8100279c:	8b 45 20             	mov    0x20(%ebp),%eax
8100279f:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810027a6:	eb 1e                	jmp    810027c6 <getopt_internal+0x1cf>
810027a8:	8b 45 20             	mov    0x20(%ebp),%eax
810027ab:	8b 40 04             	mov    0x4(%eax),%eax
810027ae:	8d 50 01             	lea    0x1(%eax),%edx
810027b1:	8b 45 20             	mov    0x20(%ebp),%eax
810027b4:	89 50 04             	mov    %edx,0x4(%eax)
810027b7:	8b 45 20             	mov    0x20(%ebp),%eax
810027ba:	8b 40 18             	mov    0x18(%eax),%eax
810027bd:	8d 50 01             	lea    0x1(%eax),%edx
810027c0:	8b 45 20             	mov    0x20(%ebp),%eax
810027c3:	89 50 18             	mov    %edx,0x18(%eax)
810027c6:	8b 45 20             	mov    0x20(%ebp),%eax
810027c9:	8b 40 04             	mov    0x4(%eax),%eax
810027cc:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810027d3:	8b 45 0c             	mov    0xc(%ebp),%eax
810027d6:	01 d0                	add    %edx,%eax
810027d8:	8b 00                	mov    (%eax),%eax
810027da:	83 ec 08             	sub    $0x8,%esp
810027dd:	ff 75 1c             	push   0x1c(%ebp)
810027e0:	50                   	push   %eax
810027e1:	e8 35 fd ff ff       	call   8100251b <is_option>
810027e6:	83 c4 10             	add    $0x10,%esp
810027e9:	85 c0                	test   %eax,%eax
810027eb:	74 bb                	je     810027a8 <getopt_internal+0x1b1>
810027ed:	8b 45 20             	mov    0x20(%ebp),%eax
810027f0:	8b 40 04             	mov    0x4(%eax),%eax
810027f3:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810027fa:	8b 45 0c             	mov    0xc(%ebp),%eax
810027fd:	01 d0                	add    %edx,%eax
810027ff:	8b 00                	mov    (%eax),%eax
81002801:	85 c0                	test   %eax,%eax
81002803:	75 16                	jne    8100281b <getopt_internal+0x224>
81002805:	8b 45 20             	mov    0x20(%ebp),%eax
81002808:	8b 50 14             	mov    0x14(%eax),%edx
8100280b:	8b 45 20             	mov    0x20(%ebp),%eax
8100280e:	89 50 04             	mov    %edx,0x4(%eax)
81002811:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002816:	e9 ec 08 00 00       	jmp    81003107 <getopt_internal+0xb10>
8100281b:	8b 45 20             	mov    0x20(%ebp),%eax
8100281e:	8b 40 04             	mov    0x4(%eax),%eax
81002821:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002828:	8b 45 0c             	mov    0xc(%ebp),%eax
8100282b:	01 d0                	add    %edx,%eax
8100282d:	8b 00                	mov    (%eax),%eax
8100282f:	83 ec 08             	sub    $0x8,%esp
81002832:	68 70 7b 00 81       	push   $0x81007b70
81002837:	50                   	push   %eax
81002838:	e8 6f 2d 00 00       	call   810055ac <strcmp>
8100283d:	83 c4 10             	add    $0x10,%esp
81002840:	85 c0                	test   %eax,%eax
81002842:	0f 85 cf 00 00 00    	jne    81002917 <getopt_internal+0x320>
81002848:	8b 45 20             	mov    0x20(%ebp),%eax
8100284b:	8b 40 18             	mov    0x18(%eax),%eax
8100284e:	8b 55 20             	mov    0x20(%ebp),%edx
81002851:	8b 52 14             	mov    0x14(%edx),%edx
81002854:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
8100285b:	8b 55 0c             	mov    0xc(%ebp),%edx
8100285e:	01 ca                	add    %ecx,%edx
81002860:	83 ec 04             	sub    $0x4,%esp
81002863:	6a 01                	push   $0x1
81002865:	50                   	push   %eax
81002866:	52                   	push   %edx
81002867:	e8 79 fc ff ff       	call   810024e5 <permute>
8100286c:	83 c4 10             	add    $0x10,%esp
8100286f:	8b 45 20             	mov    0x20(%ebp),%eax
81002872:	8b 40 14             	mov    0x14(%eax),%eax
81002875:	8d 50 01             	lea    0x1(%eax),%edx
81002878:	8b 45 20             	mov    0x20(%ebp),%eax
8100287b:	89 50 04             	mov    %edx,0x4(%eax)
8100287e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002883:	e9 7f 08 00 00       	jmp    81003107 <getopt_internal+0xb10>
81002888:	8b 45 20             	mov    0x20(%ebp),%eax
8100288b:	8b 40 04             	mov    0x4(%eax),%eax
8100288e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002895:	8b 45 0c             	mov    0xc(%ebp),%eax
81002898:	01 d0                	add    %edx,%eax
8100289a:	8b 00                	mov    (%eax),%eax
8100289c:	83 ec 08             	sub    $0x8,%esp
8100289f:	ff 75 1c             	push   0x1c(%ebp)
810028a2:	50                   	push   %eax
810028a3:	e8 73 fc ff ff       	call   8100251b <is_option>
810028a8:	83 c4 10             	add    $0x10,%esp
810028ab:	85 c0                	test   %eax,%eax
810028ad:	75 6b                	jne    8100291a <getopt_internal+0x323>
810028af:	8b 45 20             	mov    0x20(%ebp),%eax
810028b2:	8b 40 04             	mov    0x4(%eax),%eax
810028b5:	8d 48 01             	lea    0x1(%eax),%ecx
810028b8:	8b 55 20             	mov    0x20(%ebp),%edx
810028bb:	89 4a 04             	mov    %ecx,0x4(%edx)
810028be:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810028c5:	8b 45 0c             	mov    0xc(%ebp),%eax
810028c8:	01 d0                	add    %edx,%eax
810028ca:	8b 10                	mov    (%eax),%edx
810028cc:	8b 45 20             	mov    0x20(%ebp),%eax
810028cf:	89 10                	mov    %edx,(%eax)
810028d1:	8b 45 20             	mov    0x20(%ebp),%eax
810028d4:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
810028db:	8b 45 20             	mov    0x20(%ebp),%eax
810028de:	8b 40 0c             	mov    0xc(%eax),%eax
810028e1:	e9 21 08 00 00       	jmp    81003107 <getopt_internal+0xb10>
810028e6:	8b 45 20             	mov    0x20(%ebp),%eax
810028e9:	8b 40 04             	mov    0x4(%eax),%eax
810028ec:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810028f3:	8b 45 0c             	mov    0xc(%ebp),%eax
810028f6:	01 d0                	add    %edx,%eax
810028f8:	8b 00                	mov    (%eax),%eax
810028fa:	83 ec 08             	sub    $0x8,%esp
810028fd:	ff 75 1c             	push   0x1c(%ebp)
81002900:	50                   	push   %eax
81002901:	e8 15 fc ff ff       	call   8100251b <is_option>
81002906:	83 c4 10             	add    $0x10,%esp
81002909:	85 c0                	test   %eax,%eax
8100290b:	75 10                	jne    8100291d <getopt_internal+0x326>
8100290d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002912:	e9 f0 07 00 00       	jmp    81003107 <getopt_internal+0xb10>
81002917:	90                   	nop
81002918:	eb 04                	jmp    8100291e <getopt_internal+0x327>
8100291a:	90                   	nop
8100291b:	eb 01                	jmp    8100291e <getopt_internal+0x327>
8100291d:	90                   	nop
8100291e:	8b 45 20             	mov    0x20(%ebp),%eax
81002921:	8b 40 04             	mov    0x4(%eax),%eax
81002924:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100292b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100292e:	01 d0                	add    %edx,%eax
81002930:	8b 00                	mov    (%eax),%eax
81002932:	85 c0                	test   %eax,%eax
81002934:	75 0a                	jne    81002940 <getopt_internal+0x349>
81002936:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100293b:	e9 c7 07 00 00       	jmp    81003107 <getopt_internal+0xb10>
81002940:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81002944:	0f 84 15 03 00 00    	je     81002c5f <getopt_internal+0x668>
8100294a:	8b 45 20             	mov    0x20(%ebp),%eax
8100294d:	8b 40 04             	mov    0x4(%eax),%eax
81002950:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002957:	8b 45 0c             	mov    0xc(%ebp),%eax
8100295a:	01 d0                	add    %edx,%eax
8100295c:	8b 00                	mov    (%eax),%eax
8100295e:	83 ec 04             	sub    $0x4,%esp
81002961:	6a 02                	push   $0x2
81002963:	68 70 7b 00 81       	push   $0x81007b70
81002968:	50                   	push   %eax
81002969:	e8 f7 15 00 00       	call   81003f65 <memcmp>
8100296e:	83 c4 10             	add    $0x10,%esp
81002971:	85 c0                	test   %eax,%eax
81002973:	74 29                	je     8100299e <getopt_internal+0x3a7>
81002975:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
81002979:	0f 84 e0 02 00 00    	je     81002c5f <getopt_internal+0x668>
8100297f:	8b 45 20             	mov    0x20(%ebp),%eax
81002982:	8b 40 04             	mov    0x4(%eax),%eax
81002985:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100298c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100298f:	01 d0                	add    %edx,%eax
81002991:	8b 00                	mov    (%eax),%eax
81002993:	0f b6 00             	movzbl (%eax),%eax
81002996:	3c 2b                	cmp    $0x2b,%al
81002998:	0f 85 c1 02 00 00    	jne    81002c5f <getopt_internal+0x668>
8100299e:	8b 45 20             	mov    0x20(%ebp),%eax
810029a1:	8b 40 10             	mov    0x10(%eax),%eax
810029a4:	83 f8 01             	cmp    $0x1,%eax
810029a7:	0f 85 b2 02 00 00    	jne    81002c5f <getopt_internal+0x668>
810029ad:	8b 45 20             	mov    0x20(%ebp),%eax
810029b0:	8b 40 04             	mov    0x4(%eax),%eax
810029b3:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810029ba:	8b 45 0c             	mov    0xc(%ebp),%eax
810029bd:	01 d0                	add    %edx,%eax
810029bf:	8b 00                	mov    (%eax),%eax
810029c1:	83 ec 04             	sub    $0x4,%esp
810029c4:	6a 02                	push   $0x2
810029c6:	68 70 7b 00 81       	push   $0x81007b70
810029cb:	50                   	push   %eax
810029cc:	e8 94 15 00 00       	call   81003f65 <memcmp>
810029d1:	83 c4 10             	add    $0x10,%esp
810029d4:	85 c0                	test   %eax,%eax
810029d6:	75 0a                	jne    810029e2 <getopt_internal+0x3eb>
810029d8:	8b 45 20             	mov    0x20(%ebp),%eax
810029db:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
810029e2:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
810029e9:	8b 45 20             	mov    0x20(%ebp),%eax
810029ec:	8b 40 04             	mov    0x4(%eax),%eax
810029ef:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810029f6:	8b 45 0c             	mov    0xc(%ebp),%eax
810029f9:	01 d0                	add    %edx,%eax
810029fb:	8b 10                	mov    (%eax),%edx
810029fd:	8b 45 20             	mov    0x20(%ebp),%eax
81002a00:	8b 40 10             	mov    0x10(%eax),%eax
81002a03:	01 d0                	add    %edx,%eax
81002a05:	83 ec 08             	sub    $0x8,%esp
81002a08:	6a 3d                	push   $0x3d
81002a0a:	50                   	push   %eax
81002a0b:	e8 a0 2a 00 00       	call   810054b0 <strchr>
81002a10:	83 c4 10             	add    $0x10,%esp
81002a13:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002a16:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002a1a:	75 4a                	jne    81002a66 <getopt_internal+0x46f>
81002a1c:	8b 45 20             	mov    0x20(%ebp),%eax
81002a1f:	8b 40 04             	mov    0x4(%eax),%eax
81002a22:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002a29:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a2c:	01 d0                	add    %edx,%eax
81002a2e:	8b 00                	mov    (%eax),%eax
81002a30:	83 ec 0c             	sub    $0xc,%esp
81002a33:	50                   	push   %eax
81002a34:	e8 27 2c 00 00       	call   81005660 <strlen>
81002a39:	83 c4 10             	add    $0x10,%esp
81002a3c:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002a3f:	8b 45 20             	mov    0x20(%ebp),%eax
81002a42:	8b 40 04             	mov    0x4(%eax),%eax
81002a45:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002a4c:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a4f:	01 d0                	add    %edx,%eax
81002a51:	8b 10                	mov    (%eax),%edx
81002a53:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002a56:	01 d0                	add    %edx,%eax
81002a58:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002a5b:	8b 45 20             	mov    0x20(%ebp),%eax
81002a5e:	8b 40 10             	mov    0x10(%eax),%eax
81002a61:	29 45 ec             	sub    %eax,-0x14(%ebp)
81002a64:	eb 28                	jmp    81002a8e <getopt_internal+0x497>
81002a66:	8b 45 20             	mov    0x20(%ebp),%eax
81002a69:	8b 40 04             	mov    0x4(%eax),%eax
81002a6c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002a73:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a76:	01 d0                	add    %edx,%eax
81002a78:	8b 08                	mov    (%eax),%ecx
81002a7a:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002a7d:	29 c8                	sub    %ecx,%eax
81002a7f:	89 c2                	mov    %eax,%edx
81002a81:	8b 45 20             	mov    0x20(%ebp),%eax
81002a84:	8b 48 10             	mov    0x10(%eax),%ecx
81002a87:	89 d0                	mov    %edx,%eax
81002a89:	29 c8                	sub    %ecx,%eax
81002a8b:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002a8e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002a95:	e9 95 01 00 00       	jmp    81002c2f <getopt_internal+0x638>
81002a9a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002a9d:	c1 e0 04             	shl    $0x4,%eax
81002aa0:	89 c2                	mov    %eax,%edx
81002aa2:	8b 45 14             	mov    0x14(%ebp),%eax
81002aa5:	01 d0                	add    %edx,%eax
81002aa7:	8b 00                	mov    (%eax),%eax
81002aa9:	8b 55 20             	mov    0x20(%ebp),%edx
81002aac:	8b 52 04             	mov    0x4(%edx),%edx
81002aaf:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002ab6:	8b 55 0c             	mov    0xc(%ebp),%edx
81002ab9:	01 ca                	add    %ecx,%edx
81002abb:	8b 0a                	mov    (%edx),%ecx
81002abd:	8b 55 20             	mov    0x20(%ebp),%edx
81002ac0:	8b 52 10             	mov    0x10(%edx),%edx
81002ac3:	01 ca                	add    %ecx,%edx
81002ac5:	83 ec 04             	sub    $0x4,%esp
81002ac8:	ff 75 ec             	push   -0x14(%ebp)
81002acb:	50                   	push   %eax
81002acc:	52                   	push   %edx
81002acd:	e8 93 14 00 00       	call   81003f65 <memcmp>
81002ad2:	83 c4 10             	add    $0x10,%esp
81002ad5:	85 c0                	test   %eax,%eax
81002ad7:	0f 85 4e 01 00 00    	jne    81002c2b <getopt_internal+0x634>
81002add:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002ae0:	c1 e0 04             	shl    $0x4,%eax
81002ae3:	89 c2                	mov    %eax,%edx
81002ae5:	8b 45 14             	mov    0x14(%ebp),%eax
81002ae8:	01 d0                	add    %edx,%eax
81002aea:	8b 00                	mov    (%eax),%eax
81002aec:	83 ec 0c             	sub    $0xc,%esp
81002aef:	50                   	push   %eax
81002af0:	e8 6b 2b 00 00       	call   81005660 <strlen>
81002af5:	83 c4 10             	add    $0x10,%esp
81002af8:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002afb:	75 0b                	jne    81002b08 <getopt_internal+0x511>
81002afd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002b00:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002b03:	e9 3e 01 00 00       	jmp    81002c46 <getopt_internal+0x64f>
81002b08:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002b0c:	79 0b                	jns    81002b19 <getopt_internal+0x522>
81002b0e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002b11:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002b14:	e9 12 01 00 00       	jmp    81002c2b <getopt_internal+0x634>
81002b19:	8b 45 20             	mov    0x20(%ebp),%eax
81002b1c:	8b 40 08             	mov    0x8(%eax),%eax
81002b1f:	85 c0                	test   %eax,%eax
81002b21:	0f 84 ef 00 00 00    	je     81002c16 <getopt_internal+0x61f>
81002b27:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81002b2c:	8b 50 0c             	mov    0xc(%eax),%edx
81002b2f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b32:	8b 00                	mov    (%eax),%eax
81002b34:	83 ec 08             	sub    $0x8,%esp
81002b37:	52                   	push   %edx
81002b38:	50                   	push   %eax
81002b39:	e8 28 35 00 00       	call   81006066 <fputs>
81002b3e:	83 c4 10             	add    $0x10,%esp
81002b41:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81002b46:	8b 40 0c             	mov    0xc(%eax),%eax
81002b49:	83 ec 08             	sub    $0x8,%esp
81002b4c:	50                   	push   %eax
81002b4d:	68 83 7b 00 81       	push   $0x81007b83
81002b52:	e8 0f 35 00 00       	call   81006066 <fputs>
81002b57:	83 c4 10             	add    $0x10,%esp
81002b5a:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81002b5f:	8b 50 0c             	mov    0xc(%eax),%edx
81002b62:	8b 45 20             	mov    0x20(%ebp),%eax
81002b65:	8b 40 04             	mov    0x4(%eax),%eax
81002b68:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81002b6f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b72:	01 c8                	add    %ecx,%eax
81002b74:	8b 00                	mov    (%eax),%eax
81002b76:	83 ec 08             	sub    $0x8,%esp
81002b79:	52                   	push   %edx
81002b7a:	50                   	push   %eax
81002b7b:	e8 e6 34 00 00       	call   81006066 <fputs>
81002b80:	83 c4 10             	add    $0x10,%esp
81002b83:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81002b88:	8b 40 0c             	mov    0xc(%eax),%eax
81002b8b:	83 ec 08             	sub    $0x8,%esp
81002b8e:	50                   	push   %eax
81002b8f:	68 8e 7b 00 81       	push   $0x81007b8e
81002b94:	e8 cd 34 00 00       	call   81006066 <fputs>
81002b99:	83 c4 10             	add    $0x10,%esp
81002b9c:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81002ba1:	8b 50 0c             	mov    0xc(%eax),%edx
81002ba4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002ba7:	c1 e0 04             	shl    $0x4,%eax
81002baa:	89 c1                	mov    %eax,%ecx
81002bac:	8b 45 14             	mov    0x14(%ebp),%eax
81002baf:	01 c8                	add    %ecx,%eax
81002bb1:	8b 00                	mov    (%eax),%eax
81002bb3:	83 ec 08             	sub    $0x8,%esp
81002bb6:	52                   	push   %edx
81002bb7:	50                   	push   %eax
81002bb8:	e8 a9 34 00 00       	call   81006066 <fputs>
81002bbd:	83 c4 10             	add    $0x10,%esp
81002bc0:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81002bc5:	8b 40 0c             	mov    0xc(%eax),%eax
81002bc8:	83 ec 08             	sub    $0x8,%esp
81002bcb:	50                   	push   %eax
81002bcc:	68 ab 7b 00 81       	push   $0x81007bab
81002bd1:	e8 90 34 00 00       	call   81006066 <fputs>
81002bd6:	83 c4 10             	add    $0x10,%esp
81002bd9:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81002bde:	8b 50 0c             	mov    0xc(%eax),%edx
81002be1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002be4:	c1 e0 04             	shl    $0x4,%eax
81002be7:	89 c1                	mov    %eax,%ecx
81002be9:	8b 45 14             	mov    0x14(%ebp),%eax
81002bec:	01 c8                	add    %ecx,%eax
81002bee:	8b 00                	mov    (%eax),%eax
81002bf0:	83 ec 08             	sub    $0x8,%esp
81002bf3:	52                   	push   %edx
81002bf4:	50                   	push   %eax
81002bf5:	e8 6c 34 00 00       	call   81006066 <fputs>
81002bfa:	83 c4 10             	add    $0x10,%esp
81002bfd:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81002c02:	8b 40 0c             	mov    0xc(%eax),%eax
81002c05:	83 ec 08             	sub    $0x8,%esp
81002c08:	50                   	push   %eax
81002c09:	68 b4 7b 00 81       	push   $0x81007bb4
81002c0e:	e8 53 34 00 00       	call   81006066 <fputs>
81002c13:	83 c4 10             	add    $0x10,%esp
81002c16:	8b 45 20             	mov    0x20(%ebp),%eax
81002c19:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81002c20:	8b 45 20             	mov    0x20(%ebp),%eax
81002c23:	8b 40 0c             	mov    0xc(%eax),%eax
81002c26:	e9 dc 04 00 00       	jmp    81003107 <getopt_internal+0xb10>
81002c2b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81002c2f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002c32:	c1 e0 04             	shl    $0x4,%eax
81002c35:	89 c2                	mov    %eax,%edx
81002c37:	8b 45 14             	mov    0x14(%ebp),%eax
81002c3a:	01 d0                	add    %edx,%eax
81002c3c:	8b 00                	mov    (%eax),%eax
81002c3e:	85 c0                	test   %eax,%eax
81002c40:	0f 85 54 fe ff ff    	jne    81002a9a <getopt_internal+0x4a3>
81002c46:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002c4a:	78 13                	js     81002c5f <getopt_internal+0x668>
81002c4c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002c4f:	c1 e0 04             	shl    $0x4,%eax
81002c52:	89 c2                	mov    %eax,%edx
81002c54:	8b 45 14             	mov    0x14(%ebp),%eax
81002c57:	01 d0                	add    %edx,%eax
81002c59:	8b 40 04             	mov    0x4(%eax),%eax
81002c5c:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002c5f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002c63:	0f 89 9a 01 00 00    	jns    81002e03 <getopt_internal+0x80c>
81002c69:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002c6d:	0f 84 90 01 00 00    	je     81002e03 <getopt_internal+0x80c>
81002c73:	8b 45 20             	mov    0x20(%ebp),%eax
81002c76:	8b 40 04             	mov    0x4(%eax),%eax
81002c79:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002c80:	8b 45 0c             	mov    0xc(%ebp),%eax
81002c83:	01 d0                	add    %edx,%eax
81002c85:	8b 10                	mov    (%eax),%edx
81002c87:	8b 45 20             	mov    0x20(%ebp),%eax
81002c8a:	8b 40 10             	mov    0x10(%eax),%eax
81002c8d:	01 d0                	add    %edx,%eax
81002c8f:	0f b6 00             	movzbl (%eax),%eax
81002c92:	0f be c0             	movsbl %al,%eax
81002c95:	83 ec 08             	sub    $0x8,%esp
81002c98:	50                   	push   %eax
81002c99:	ff 75 10             	push   0x10(%ebp)
81002c9c:	e8 0f 28 00 00       	call   810054b0 <strchr>
81002ca1:	83 c4 10             	add    $0x10,%esp
81002ca4:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002ca7:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81002cab:	0f 85 f1 00 00 00    	jne    81002da2 <getopt_internal+0x7ab>
81002cb1:	8b 45 20             	mov    0x20(%ebp),%eax
81002cb4:	8b 40 08             	mov    0x8(%eax),%eax
81002cb7:	85 c0                	test   %eax,%eax
81002cb9:	0f 84 83 00 00 00    	je     81002d42 <getopt_internal+0x74b>
81002cbf:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81002cc4:	8b 50 0c             	mov    0xc(%eax),%edx
81002cc7:	8b 45 0c             	mov    0xc(%ebp),%eax
81002cca:	8b 00                	mov    (%eax),%eax
81002ccc:	83 ec 08             	sub    $0x8,%esp
81002ccf:	52                   	push   %edx
81002cd0:	50                   	push   %eax
81002cd1:	e8 90 33 00 00       	call   81006066 <fputs>
81002cd6:	83 c4 10             	add    $0x10,%esp
81002cd9:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81002cde:	8b 40 0c             	mov    0xc(%eax),%eax
81002ce1:	83 ec 08             	sub    $0x8,%esp
81002ce4:	50                   	push   %eax
81002ce5:	68 b8 7b 00 81       	push   $0x81007bb8
81002cea:	e8 77 33 00 00       	call   81006066 <fputs>
81002cef:	83 c4 10             	add    $0x10,%esp
81002cf2:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81002cf7:	8b 50 0c             	mov    0xc(%eax),%edx
81002cfa:	8b 45 20             	mov    0x20(%ebp),%eax
81002cfd:	8b 40 04             	mov    0x4(%eax),%eax
81002d00:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81002d07:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d0a:	01 c8                	add    %ecx,%eax
81002d0c:	8b 08                	mov    (%eax),%ecx
81002d0e:	8b 45 20             	mov    0x20(%ebp),%eax
81002d11:	8b 40 10             	mov    0x10(%eax),%eax
81002d14:	01 c8                	add    %ecx,%eax
81002d16:	0f b6 00             	movzbl (%eax),%eax
81002d19:	0f be c0             	movsbl %al,%eax
81002d1c:	83 ec 08             	sub    $0x8,%esp
81002d1f:	52                   	push   %edx
81002d20:	50                   	push   %eax
81002d21:	e8 4c 32 00 00       	call   81005f72 <fputc>
81002d26:	83 c4 10             	add    $0x10,%esp
81002d29:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81002d2e:	8b 40 0c             	mov    0xc(%eax),%eax
81002d31:	83 ec 08             	sub    $0x8,%esp
81002d34:	50                   	push   %eax
81002d35:	68 cf 7b 00 81       	push   $0x81007bcf
81002d3a:	e8 27 33 00 00       	call   81006066 <fputs>
81002d3f:	83 c4 10             	add    $0x10,%esp
81002d42:	8b 45 20             	mov    0x20(%ebp),%eax
81002d45:	8b 40 10             	mov    0x10(%eax),%eax
81002d48:	8d 50 01             	lea    0x1(%eax),%edx
81002d4b:	8b 45 20             	mov    0x20(%ebp),%eax
81002d4e:	89 50 10             	mov    %edx,0x10(%eax)
81002d51:	8b 45 20             	mov    0x20(%ebp),%eax
81002d54:	8b 40 04             	mov    0x4(%eax),%eax
81002d57:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002d5e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d61:	01 d0                	add    %edx,%eax
81002d63:	8b 10                	mov    (%eax),%edx
81002d65:	8b 45 20             	mov    0x20(%ebp),%eax
81002d68:	8b 40 10             	mov    0x10(%eax),%eax
81002d6b:	01 d0                	add    %edx,%eax
81002d6d:	0f b6 00             	movzbl (%eax),%eax
81002d70:	84 c0                	test   %al,%al
81002d72:	75 19                	jne    81002d8d <getopt_internal+0x796>
81002d74:	8b 45 20             	mov    0x20(%ebp),%eax
81002d77:	8b 40 04             	mov    0x4(%eax),%eax
81002d7a:	8d 50 01             	lea    0x1(%eax),%edx
81002d7d:	8b 45 20             	mov    0x20(%ebp),%eax
81002d80:	89 50 04             	mov    %edx,0x4(%eax)
81002d83:	8b 45 20             	mov    0x20(%ebp),%eax
81002d86:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002d8d:	8b 45 20             	mov    0x20(%ebp),%eax
81002d90:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81002d97:	8b 45 20             	mov    0x20(%ebp),%eax
81002d9a:	8b 40 0c             	mov    0xc(%eax),%eax
81002d9d:	e9 65 03 00 00       	jmp    81003107 <getopt_internal+0xb10>
81002da2:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002da5:	83 c0 01             	add    $0x1,%eax
81002da8:	0f b6 00             	movzbl (%eax),%eax
81002dab:	3c 3a                	cmp    $0x3a,%al
81002dad:	75 1b                	jne    81002dca <getopt_internal+0x7d3>
81002daf:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002db2:	83 c0 02             	add    $0x2,%eax
81002db5:	0f b6 00             	movzbl (%eax),%eax
81002db8:	3c 3a                	cmp    $0x3a,%al
81002dba:	75 07                	jne    81002dc3 <getopt_internal+0x7cc>
81002dbc:	b8 02 00 00 00       	mov    $0x2,%eax
81002dc1:	eb 0c                	jmp    81002dcf <getopt_internal+0x7d8>
81002dc3:	b8 01 00 00 00       	mov    $0x1,%eax
81002dc8:	eb 05                	jmp    81002dcf <getopt_internal+0x7d8>
81002dca:	b8 00 00 00 00       	mov    $0x0,%eax
81002dcf:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002dd2:	8b 45 20             	mov    0x20(%ebp),%eax
81002dd5:	8b 40 04             	mov    0x4(%eax),%eax
81002dd8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002ddf:	8b 45 0c             	mov    0xc(%ebp),%eax
81002de2:	01 d0                	add    %edx,%eax
81002de4:	8b 10                	mov    (%eax),%edx
81002de6:	8b 45 20             	mov    0x20(%ebp),%eax
81002de9:	8b 40 10             	mov    0x10(%eax),%eax
81002dec:	83 c0 01             	add    $0x1,%eax
81002def:	01 d0                	add    %edx,%eax
81002df1:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002df4:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002df7:	0f b6 00             	movzbl (%eax),%eax
81002dfa:	0f be d0             	movsbl %al,%edx
81002dfd:	8b 45 20             	mov    0x20(%ebp),%eax
81002e00:	89 50 0c             	mov    %edx,0xc(%eax)
81002e03:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81002e0a:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
81002e0e:	74 40                	je     81002e50 <getopt_internal+0x859>
81002e10:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
81002e14:	0f 85 b0 01 00 00    	jne    81002fca <getopt_internal+0x9d3>
81002e1a:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e1d:	0f b6 00             	movzbl (%eax),%eax
81002e20:	3c 3d                	cmp    $0x3d,%al
81002e22:	75 04                	jne    81002e28 <getopt_internal+0x831>
81002e24:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81002e28:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e2b:	0f b6 00             	movzbl (%eax),%eax
81002e2e:	84 c0                	test   %al,%al
81002e30:	74 05                	je     81002e37 <getopt_internal+0x840>
81002e32:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e35:	eb 05                	jmp    81002e3c <getopt_internal+0x845>
81002e37:	b8 00 00 00 00       	mov    $0x0,%eax
81002e3c:	8b 55 20             	mov    0x20(%ebp),%edx
81002e3f:	89 02                	mov    %eax,(%edx)
81002e41:	8b 45 20             	mov    0x20(%ebp),%eax
81002e44:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002e4b:	e9 d2 01 00 00       	jmp    81003022 <getopt_internal+0xa2b>
81002e50:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e53:	0f b6 00             	movzbl (%eax),%eax
81002e56:	3c 3d                	cmp    $0x3d,%al
81002e58:	75 04                	jne    81002e5e <getopt_internal+0x867>
81002e5a:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81002e5e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e61:	0f b6 00             	movzbl (%eax),%eax
81002e64:	84 c0                	test   %al,%al
81002e66:	74 17                	je     81002e7f <getopt_internal+0x888>
81002e68:	8b 45 20             	mov    0x20(%ebp),%eax
81002e6b:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002e6e:	89 10                	mov    %edx,(%eax)
81002e70:	8b 45 20             	mov    0x20(%ebp),%eax
81002e73:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002e7a:	e9 a3 01 00 00       	jmp    81003022 <getopt_internal+0xa2b>
81002e7f:	8b 45 20             	mov    0x20(%ebp),%eax
81002e82:	8b 40 04             	mov    0x4(%eax),%eax
81002e85:	83 c0 01             	add    $0x1,%eax
81002e88:	39 45 08             	cmp    %eax,0x8(%ebp)
81002e8b:	0f 8f 0a 01 00 00    	jg     81002f9b <getopt_internal+0x9a4>
81002e91:	8b 45 20             	mov    0x20(%ebp),%eax
81002e94:	8b 40 08             	mov    0x8(%eax),%eax
81002e97:	85 c0                	test   %eax,%eax
81002e99:	0f 84 d3 00 00 00    	je     81002f72 <getopt_internal+0x97b>
81002e9f:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81002ea4:	8b 50 0c             	mov    0xc(%eax),%edx
81002ea7:	8b 45 0c             	mov    0xc(%ebp),%eax
81002eaa:	8b 00                	mov    (%eax),%eax
81002eac:	83 ec 08             	sub    $0x8,%esp
81002eaf:	52                   	push   %edx
81002eb0:	50                   	push   %eax
81002eb1:	e8 b0 31 00 00       	call   81006066 <fputs>
81002eb6:	83 c4 10             	add    $0x10,%esp
81002eb9:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81002ebe:	8b 40 0c             	mov    0xc(%eax),%eax
81002ec1:	83 ec 08             	sub    $0x8,%esp
81002ec4:	50                   	push   %eax
81002ec5:	68 d4 7b 00 81       	push   $0x81007bd4
81002eca:	e8 97 31 00 00       	call   81006066 <fputs>
81002ecf:	83 c4 10             	add    $0x10,%esp
81002ed2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002ed6:	78 54                	js     81002f2c <getopt_internal+0x935>
81002ed8:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81002edd:	8b 40 0c             	mov    0xc(%eax),%eax
81002ee0:	83 ec 08             	sub    $0x8,%esp
81002ee3:	50                   	push   %eax
81002ee4:	6a 2d                	push   $0x2d
81002ee6:	e8 87 30 00 00       	call   81005f72 <fputc>
81002eeb:	83 c4 10             	add    $0x10,%esp
81002eee:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81002ef3:	8b 50 0c             	mov    0xc(%eax),%edx
81002ef6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002ef9:	c1 e0 04             	shl    $0x4,%eax
81002efc:	89 c1                	mov    %eax,%ecx
81002efe:	8b 45 14             	mov    0x14(%ebp),%eax
81002f01:	01 c8                	add    %ecx,%eax
81002f03:	8b 00                	mov    (%eax),%eax
81002f05:	83 ec 08             	sub    $0x8,%esp
81002f08:	52                   	push   %edx
81002f09:	50                   	push   %eax
81002f0a:	e8 57 31 00 00       	call   81006066 <fputs>
81002f0f:	83 c4 10             	add    $0x10,%esp
81002f12:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81002f16:	74 07                	je     81002f1f <getopt_internal+0x928>
81002f18:	ba 3a 00 00 00       	mov    $0x3a,%edx
81002f1d:	eb 05                	jmp    81002f24 <getopt_internal+0x92d>
81002f1f:	ba 3f 00 00 00       	mov    $0x3f,%edx
81002f24:	8b 45 20             	mov    0x20(%ebp),%eax
81002f27:	89 50 0c             	mov    %edx,0xc(%eax)
81002f2a:	eb 2d                	jmp    81002f59 <getopt_internal+0x962>
81002f2c:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81002f31:	8b 50 0c             	mov    0xc(%eax),%edx
81002f34:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f37:	0f b6 00             	movzbl (%eax),%eax
81002f3a:	0f be c0             	movsbl %al,%eax
81002f3d:	83 ec 08             	sub    $0x8,%esp
81002f40:	52                   	push   %edx
81002f41:	50                   	push   %eax
81002f42:	e8 2b 30 00 00       	call   81005f72 <fputc>
81002f47:	83 c4 10             	add    $0x10,%esp
81002f4a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f4d:	0f b6 00             	movzbl (%eax),%eax
81002f50:	0f be d0             	movsbl %al,%edx
81002f53:	8b 45 20             	mov    0x20(%ebp),%eax
81002f56:	89 50 0c             	mov    %edx,0xc(%eax)
81002f59:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81002f5e:	8b 40 0c             	mov    0xc(%eax),%eax
81002f61:	83 ec 08             	sub    $0x8,%esp
81002f64:	50                   	push   %eax
81002f65:	68 cf 7b 00 81       	push   $0x81007bcf
81002f6a:	e8 f7 30 00 00       	call   81006066 <fputs>
81002f6f:	83 c4 10             	add    $0x10,%esp
81002f72:	8b 45 20             	mov    0x20(%ebp),%eax
81002f75:	8b 40 04             	mov    0x4(%eax),%eax
81002f78:	8d 50 01             	lea    0x1(%eax),%edx
81002f7b:	8b 45 20             	mov    0x20(%ebp),%eax
81002f7e:	89 50 04             	mov    %edx,0x4(%eax)
81002f81:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81002f85:	74 0a                	je     81002f91 <getopt_internal+0x99a>
81002f87:	b8 3a 00 00 00       	mov    $0x3a,%eax
81002f8c:	e9 76 01 00 00       	jmp    81003107 <getopt_internal+0xb10>
81002f91:	b8 3f 00 00 00       	mov    $0x3f,%eax
81002f96:	e9 6c 01 00 00       	jmp    81003107 <getopt_internal+0xb10>
81002f9b:	8b 45 20             	mov    0x20(%ebp),%eax
81002f9e:	8b 40 04             	mov    0x4(%eax),%eax
81002fa1:	83 c0 01             	add    $0x1,%eax
81002fa4:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002fab:	8b 45 0c             	mov    0xc(%ebp),%eax
81002fae:	01 d0                	add    %edx,%eax
81002fb0:	8b 10                	mov    (%eax),%edx
81002fb2:	8b 45 20             	mov    0x20(%ebp),%eax
81002fb5:	89 10                	mov    %edx,(%eax)
81002fb7:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81002fbe:	8b 45 20             	mov    0x20(%ebp),%eax
81002fc1:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002fc8:	eb 58                	jmp    81003022 <getopt_internal+0xa2b>
81002fca:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002fce:	79 3e                	jns    8100300e <getopt_internal+0xa17>
81002fd0:	8b 45 20             	mov    0x20(%ebp),%eax
81002fd3:	8b 40 10             	mov    0x10(%eax),%eax
81002fd6:	8d 50 01             	lea    0x1(%eax),%edx
81002fd9:	8b 45 20             	mov    0x20(%ebp),%eax
81002fdc:	89 50 10             	mov    %edx,0x10(%eax)
81002fdf:	8b 45 20             	mov    0x20(%ebp),%eax
81002fe2:	8b 40 04             	mov    0x4(%eax),%eax
81002fe5:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002fec:	8b 45 0c             	mov    0xc(%ebp),%eax
81002fef:	01 d0                	add    %edx,%eax
81002ff1:	8b 10                	mov    (%eax),%edx
81002ff3:	8b 45 20             	mov    0x20(%ebp),%eax
81002ff6:	8b 40 10             	mov    0x10(%eax),%eax
81002ff9:	01 d0                	add    %edx,%eax
81002ffb:	0f b6 00             	movzbl (%eax),%eax
81002ffe:	84 c0                	test   %al,%al
81003000:	75 16                	jne    81003018 <getopt_internal+0xa21>
81003002:	8b 45 20             	mov    0x20(%ebp),%eax
81003005:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100300c:	eb 0a                	jmp    81003018 <getopt_internal+0xa21>
8100300e:	8b 45 20             	mov    0x20(%ebp),%eax
81003011:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003018:	8b 45 20             	mov    0x20(%ebp),%eax
8100301b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003021:	90                   	nop
81003022:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003026:	75 57                	jne    8100307f <getopt_internal+0xa88>
81003028:	8b 45 20             	mov    0x20(%ebp),%eax
8100302b:	8b 40 10             	mov    0x10(%eax),%eax
8100302e:	83 f8 01             	cmp    $0x1,%eax
81003031:	75 4c                	jne    8100307f <getopt_internal+0xa88>
81003033:	8b 45 20             	mov    0x20(%ebp),%eax
81003036:	8b 40 18             	mov    0x18(%eax),%eax
81003039:	85 c0                	test   %eax,%eax
8100303b:	74 42                	je     8100307f <getopt_internal+0xa88>
8100303d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003040:	8d 48 01             	lea    0x1(%eax),%ecx
81003043:	8b 45 20             	mov    0x20(%ebp),%eax
81003046:	8b 40 18             	mov    0x18(%eax),%eax
81003049:	8b 55 20             	mov    0x20(%ebp),%edx
8100304c:	8b 52 14             	mov    0x14(%edx),%edx
8100304f:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
81003056:	8b 55 0c             	mov    0xc(%ebp),%edx
81003059:	01 da                	add    %ebx,%edx
8100305b:	83 ec 04             	sub    $0x4,%esp
8100305e:	51                   	push   %ecx
8100305f:	50                   	push   %eax
81003060:	52                   	push   %edx
81003061:	e8 7f f4 ff ff       	call   810024e5 <permute>
81003066:	83 c4 10             	add    $0x10,%esp
81003069:	8b 45 20             	mov    0x20(%ebp),%eax
8100306c:	8b 40 14             	mov    0x14(%eax),%eax
8100306f:	8d 50 01             	lea    0x1(%eax),%edx
81003072:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003075:	01 c2                	add    %eax,%edx
81003077:	8b 45 20             	mov    0x20(%ebp),%eax
8100307a:	89 50 04             	mov    %edx,0x4(%eax)
8100307d:	eb 1f                	jmp    8100309e <getopt_internal+0xaa7>
8100307f:	8b 45 20             	mov    0x20(%ebp),%eax
81003082:	8b 40 10             	mov    0x10(%eax),%eax
81003085:	83 f8 01             	cmp    $0x1,%eax
81003088:	75 14                	jne    8100309e <getopt_internal+0xaa7>
8100308a:	8b 45 20             	mov    0x20(%ebp),%eax
8100308d:	8b 40 04             	mov    0x4(%eax),%eax
81003090:	8d 50 01             	lea    0x1(%eax),%edx
81003093:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003096:	01 c2                	add    %eax,%edx
81003098:	8b 45 20             	mov    0x20(%ebp),%eax
8100309b:	89 50 04             	mov    %edx,0x4(%eax)
8100309e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810030a2:	78 5d                	js     81003101 <getopt_internal+0xb0a>
810030a4:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
810030a8:	74 08                	je     810030b2 <getopt_internal+0xabb>
810030aa:	8b 45 18             	mov    0x18(%ebp),%eax
810030ad:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810030b0:	89 10                	mov    %edx,(%eax)
810030b2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810030b5:	c1 e0 04             	shl    $0x4,%eax
810030b8:	89 c2                	mov    %eax,%edx
810030ba:	8b 45 14             	mov    0x14(%ebp),%eax
810030bd:	01 d0                	add    %edx,%eax
810030bf:	8b 40 08             	mov    0x8(%eax),%eax
810030c2:	85 c0                	test   %eax,%eax
810030c4:	74 29                	je     810030ef <getopt_internal+0xaf8>
810030c6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810030c9:	c1 e0 04             	shl    $0x4,%eax
810030cc:	89 c2                	mov    %eax,%edx
810030ce:	8b 45 14             	mov    0x14(%ebp),%eax
810030d1:	01 c2                	add    %eax,%edx
810030d3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810030d6:	c1 e0 04             	shl    $0x4,%eax
810030d9:	89 c1                	mov    %eax,%ecx
810030db:	8b 45 14             	mov    0x14(%ebp),%eax
810030de:	01 c8                	add    %ecx,%eax
810030e0:	8b 40 08             	mov    0x8(%eax),%eax
810030e3:	8b 52 0c             	mov    0xc(%edx),%edx
810030e6:	89 10                	mov    %edx,(%eax)
810030e8:	b8 00 00 00 00       	mov    $0x0,%eax
810030ed:	eb 18                	jmp    81003107 <getopt_internal+0xb10>
810030ef:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810030f2:	c1 e0 04             	shl    $0x4,%eax
810030f5:	89 c2                	mov    %eax,%edx
810030f7:	8b 45 14             	mov    0x14(%ebp),%eax
810030fa:	01 d0                	add    %edx,%eax
810030fc:	8b 40 0c             	mov    0xc(%eax),%eax
810030ff:	eb 06                	jmp    81003107 <getopt_internal+0xb10>
81003101:	8b 45 20             	mov    0x20(%ebp),%eax
81003104:	8b 40 0c             	mov    0xc(%eax),%eax
81003107:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100310a:	c9                   	leave  
8100310b:	c3                   	ret    

8100310c <getopt>:
8100310c:	55                   	push   %ebp
8100310d:	89 e5                	mov    %esp,%ebp
8100310f:	83 ec 28             	sub    $0x28,%esp
81003112:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003115:	50                   	push   %eax
81003116:	e8 31 f4 ff ff       	call   8100254c <read_globals>
8100311b:	83 c4 04             	add    $0x4,%esp
8100311e:	83 ec 04             	sub    $0x4,%esp
81003121:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003124:	50                   	push   %eax
81003125:	6a 00                	push   $0x0
81003127:	6a 00                	push   $0x0
81003129:	6a 00                	push   $0x0
8100312b:	ff 75 10             	push   0x10(%ebp)
8100312e:	ff 75 0c             	push   0xc(%ebp)
81003131:	ff 75 08             	push   0x8(%ebp)
81003134:	e8 be f4 ff ff       	call   810025f7 <getopt_internal>
81003139:	83 c4 20             	add    $0x20,%esp
8100313c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100313f:	83 ec 0c             	sub    $0xc,%esp
81003142:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003145:	50                   	push   %eax
81003146:	e8 5a f4 ff ff       	call   810025a5 <write_globals>
8100314b:	83 c4 10             	add    $0x10,%esp
8100314e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003151:	c9                   	leave  
81003152:	c3                   	ret    

81003153 <getopt_long>:
81003153:	55                   	push   %ebp
81003154:	89 e5                	mov    %esp,%ebp
81003156:	83 ec 28             	sub    $0x28,%esp
81003159:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100315c:	50                   	push   %eax
8100315d:	e8 ea f3 ff ff       	call   8100254c <read_globals>
81003162:	83 c4 04             	add    $0x4,%esp
81003165:	83 ec 04             	sub    $0x4,%esp
81003168:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100316b:	50                   	push   %eax
8100316c:	6a 00                	push   $0x0
8100316e:	ff 75 18             	push   0x18(%ebp)
81003171:	ff 75 14             	push   0x14(%ebp)
81003174:	ff 75 10             	push   0x10(%ebp)
81003177:	ff 75 0c             	push   0xc(%ebp)
8100317a:	ff 75 08             	push   0x8(%ebp)
8100317d:	e8 75 f4 ff ff       	call   810025f7 <getopt_internal>
81003182:	83 c4 20             	add    $0x20,%esp
81003185:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003188:	83 ec 0c             	sub    $0xc,%esp
8100318b:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100318e:	50                   	push   %eax
8100318f:	e8 11 f4 ff ff       	call   810025a5 <write_globals>
81003194:	83 c4 10             	add    $0x10,%esp
81003197:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100319a:	c9                   	leave  
8100319b:	c3                   	ret    

8100319c <getopt_long_only>:
8100319c:	55                   	push   %ebp
8100319d:	89 e5                	mov    %esp,%ebp
8100319f:	83 ec 28             	sub    $0x28,%esp
810031a2:	8d 45 d8             	lea    -0x28(%ebp),%eax
810031a5:	50                   	push   %eax
810031a6:	e8 a1 f3 ff ff       	call   8100254c <read_globals>
810031ab:	83 c4 04             	add    $0x4,%esp
810031ae:	83 ec 04             	sub    $0x4,%esp
810031b1:	8d 45 d8             	lea    -0x28(%ebp),%eax
810031b4:	50                   	push   %eax
810031b5:	6a 01                	push   $0x1
810031b7:	ff 75 18             	push   0x18(%ebp)
810031ba:	ff 75 14             	push   0x14(%ebp)
810031bd:	ff 75 10             	push   0x10(%ebp)
810031c0:	ff 75 0c             	push   0xc(%ebp)
810031c3:	ff 75 08             	push   0x8(%ebp)
810031c6:	e8 2c f4 ff ff       	call   810025f7 <getopt_internal>
810031cb:	83 c4 20             	add    $0x20,%esp
810031ce:	89 45 f4             	mov    %eax,-0xc(%ebp)
810031d1:	83 ec 0c             	sub    $0xc,%esp
810031d4:	8d 45 d8             	lea    -0x28(%ebp),%eax
810031d7:	50                   	push   %eax
810031d8:	e8 c8 f3 ff ff       	call   810025a5 <write_globals>
810031dd:	83 c4 10             	add    $0x10,%esp
810031e0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810031e3:	c9                   	leave  
810031e4:	c3                   	ret    

810031e5 <__getopt_r>:
810031e5:	55                   	push   %ebp
810031e6:	89 e5                	mov    %esp,%ebp
810031e8:	83 ec 08             	sub    $0x8,%esp
810031eb:	83 ec 04             	sub    $0x4,%esp
810031ee:	ff 75 14             	push   0x14(%ebp)
810031f1:	6a 00                	push   $0x0
810031f3:	6a 00                	push   $0x0
810031f5:	6a 00                	push   $0x0
810031f7:	ff 75 10             	push   0x10(%ebp)
810031fa:	ff 75 0c             	push   0xc(%ebp)
810031fd:	ff 75 08             	push   0x8(%ebp)
81003200:	e8 f2 f3 ff ff       	call   810025f7 <getopt_internal>
81003205:	83 c4 20             	add    $0x20,%esp
81003208:	c9                   	leave  
81003209:	c3                   	ret    

8100320a <__getopt_long_r>:
8100320a:	55                   	push   %ebp
8100320b:	89 e5                	mov    %esp,%ebp
8100320d:	83 ec 08             	sub    $0x8,%esp
81003210:	83 ec 04             	sub    $0x4,%esp
81003213:	ff 75 1c             	push   0x1c(%ebp)
81003216:	6a 00                	push   $0x0
81003218:	ff 75 18             	push   0x18(%ebp)
8100321b:	ff 75 14             	push   0x14(%ebp)
8100321e:	ff 75 10             	push   0x10(%ebp)
81003221:	ff 75 0c             	push   0xc(%ebp)
81003224:	ff 75 08             	push   0x8(%ebp)
81003227:	e8 cb f3 ff ff       	call   810025f7 <getopt_internal>
8100322c:	83 c4 20             	add    $0x20,%esp
8100322f:	c9                   	leave  
81003230:	c3                   	ret    

81003231 <__getopt_long_only_r>:
81003231:	55                   	push   %ebp
81003232:	89 e5                	mov    %esp,%ebp
81003234:	83 ec 08             	sub    $0x8,%esp
81003237:	83 ec 04             	sub    $0x4,%esp
8100323a:	ff 75 1c             	push   0x1c(%ebp)
8100323d:	6a 01                	push   $0x1
8100323f:	ff 75 18             	push   0x18(%ebp)
81003242:	ff 75 14             	push   0x14(%ebp)
81003245:	ff 75 10             	push   0x10(%ebp)
81003248:	ff 75 0c             	push   0xc(%ebp)
8100324b:	ff 75 08             	push   0x8(%ebp)
8100324e:	e8 a4 f3 ff ff       	call   810025f7 <getopt_internal>
81003253:	83 c4 20             	add    $0x20,%esp
81003256:	c9                   	leave  
81003257:	c3                   	ret    

81003258 <__getreent>:
81003258:	55                   	push   %ebp
81003259:	89 e5                	mov    %esp,%ebp
8100325b:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81003260:	5d                   	pop    %ebp
81003261:	c3                   	ret    

81003262 <__smakebuf_r>:
81003262:	55                   	push   %ebp
81003263:	89 e5                	mov    %esp,%ebp
81003265:	56                   	push   %esi
81003266:	53                   	push   %ebx
81003267:	83 ec 10             	sub    $0x10,%esp
8100326a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100326d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003271:	98                   	cwtl   
81003272:	83 e0 02             	and    $0x2,%eax
81003275:	85 c0                	test   %eax,%eax
81003277:	74 16                	je     8100328f <__smakebuf_r+0x2d>
81003279:	8d 43 43             	lea    0x43(%ebx),%eax
8100327c:	89 03                	mov    %eax,(%ebx)
8100327e:	8b 03                	mov    (%ebx),%eax
81003280:	89 43 10             	mov    %eax,0x10(%ebx)
81003283:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
8100328a:	e9 b9 00 00 00       	jmp    81003348 <__smakebuf_r+0xe6>
8100328f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81003292:	50                   	push   %eax
81003293:	8d 45 f0             	lea    -0x10(%ebp),%eax
81003296:	50                   	push   %eax
81003297:	53                   	push   %ebx
81003298:	ff 75 08             	push   0x8(%ebp)
8100329b:	e8 af 00 00 00       	call   8100334f <__swhatbuf_r>
810032a0:	83 c4 10             	add    $0x10,%esp
810032a3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810032a6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810032a9:	83 ec 08             	sub    $0x8,%esp
810032ac:	50                   	push   %eax
810032ad:	ff 75 08             	push   0x8(%ebp)
810032b0:	e8 f9 03 00 00       	call   810036ae <_malloc_r>
810032b5:	83 c4 10             	add    $0x10,%esp
810032b8:	89 c6                	mov    %eax,%esi
810032ba:	85 f6                	test   %esi,%esi
810032bc:	75 2f                	jne    810032ed <__smakebuf_r+0x8b>
810032be:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810032c2:	98                   	cwtl   
810032c3:	25 00 02 00 00       	and    $0x200,%eax
810032c8:	85 c0                	test   %eax,%eax
810032ca:	75 7c                	jne    81003348 <__smakebuf_r+0xe6>
810032cc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810032d0:	83 e0 fc             	and    $0xfffffffc,%eax
810032d3:	83 c8 02             	or     $0x2,%eax
810032d6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810032da:	8d 43 43             	lea    0x43(%ebx),%eax
810032dd:	89 03                	mov    %eax,(%ebx)
810032df:	8b 03                	mov    (%ebx),%eax
810032e1:	89 43 10             	mov    %eax,0x10(%ebx)
810032e4:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810032eb:	eb 5b                	jmp    81003348 <__smakebuf_r+0xe6>
810032ed:	8b 45 08             	mov    0x8(%ebp),%eax
810032f0:	c7 40 3c 5a 15 00 81 	movl   $0x8100155a,0x3c(%eax)
810032f7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810032fb:	0c 80                	or     $0x80,%al
810032fd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003301:	89 33                	mov    %esi,(%ebx)
81003303:	8b 03                	mov    (%ebx),%eax
81003305:	89 43 10             	mov    %eax,0x10(%ebx)
81003308:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100330b:	89 43 14             	mov    %eax,0x14(%ebx)
8100330e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003311:	85 c0                	test   %eax,%eax
81003313:	74 26                	je     8100333b <__smakebuf_r+0xd9>
81003315:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003319:	98                   	cwtl   
8100331a:	83 ec 08             	sub    $0x8,%esp
8100331d:	50                   	push   %eax
8100331e:	ff 75 08             	push   0x8(%ebp)
81003321:	e8 d2 35 00 00       	call   810068f8 <_isatty_r>
81003326:	83 c4 10             	add    $0x10,%esp
81003329:	85 c0                	test   %eax,%eax
8100332b:	74 0e                	je     8100333b <__smakebuf_r+0xd9>
8100332d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003331:	83 e0 fc             	and    $0xfffffffc,%eax
81003334:	83 c8 01             	or     $0x1,%eax
81003337:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100333b:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
8100333f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003342:	09 d0                	or     %edx,%eax
81003344:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003348:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100334b:	5b                   	pop    %ebx
8100334c:	5e                   	pop    %esi
8100334d:	5d                   	pop    %ebp
8100334e:	c3                   	ret    

8100334f <__swhatbuf_r>:
8100334f:	55                   	push   %ebp
81003350:	89 e5                	mov    %esp,%ebp
81003352:	83 ec 58             	sub    $0x58,%esp
81003355:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
8100335c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100335f:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003363:	66 85 c0             	test   %ax,%ax
81003366:	78 1f                	js     81003387 <__swhatbuf_r+0x38>
81003368:	8b 45 0c             	mov    0xc(%ebp),%eax
8100336b:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100336f:	98                   	cwtl   
81003370:	83 ec 04             	sub    $0x4,%esp
81003373:	8d 55 ac             	lea    -0x54(%ebp),%edx
81003376:	52                   	push   %edx
81003377:	50                   	push   %eax
81003378:	ff 75 08             	push   0x8(%ebp)
8100337b:	e8 b5 ee ff ff       	call   81002235 <_fstat_r>
81003380:	83 c4 10             	add    $0x10,%esp
81003383:	85 c0                	test   %eax,%eax
81003385:	79 35                	jns    810033bc <__swhatbuf_r+0x6d>
81003387:	8b 45 14             	mov    0x14(%ebp),%eax
8100338a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003390:	8b 45 0c             	mov    0xc(%ebp),%eax
81003393:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003397:	98                   	cwtl   
81003398:	25 80 00 00 00       	and    $0x80,%eax
8100339d:	85 c0                	test   %eax,%eax
8100339f:	74 0b                	je     810033ac <__swhatbuf_r+0x5d>
810033a1:	8b 45 10             	mov    0x10(%ebp),%eax
810033a4:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
810033aa:	eb 09                	jmp    810033b5 <__swhatbuf_r+0x66>
810033ac:	8b 45 10             	mov    0x10(%ebp),%eax
810033af:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810033b5:	b8 00 00 00 00       	mov    $0x0,%eax
810033ba:	eb 24                	jmp    810033e0 <__swhatbuf_r+0x91>
810033bc:	8b 45 b0             	mov    -0x50(%ebp),%eax
810033bf:	25 00 f0 00 00       	and    $0xf000,%eax
810033c4:	3d 00 20 00 00       	cmp    $0x2000,%eax
810033c9:	0f 94 c0             	sete   %al
810033cc:	0f b6 d0             	movzbl %al,%edx
810033cf:	8b 45 14             	mov    0x14(%ebp),%eax
810033d2:	89 10                	mov    %edx,(%eax)
810033d4:	8b 45 10             	mov    0x10(%ebp),%eax
810033d7:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810033dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810033e0:	c9                   	leave  
810033e1:	c3                   	ret    

810033e2 <malloc>:
810033e2:	55                   	push   %ebp
810033e3:	89 e5                	mov    %esp,%ebp
810033e5:	83 ec 08             	sub    $0x8,%esp
810033e8:	a1 a4 83 00 81       	mov    0x810083a4,%eax
810033ed:	83 ec 08             	sub    $0x8,%esp
810033f0:	ff 75 08             	push   0x8(%ebp)
810033f3:	50                   	push   %eax
810033f4:	e8 b5 02 00 00       	call   810036ae <_malloc_r>
810033f9:	83 c4 10             	add    $0x10,%esp
810033fc:	c9                   	leave  
810033fd:	c3                   	ret    

810033fe <free>:
810033fe:	55                   	push   %ebp
810033ff:	89 e5                	mov    %esp,%ebp
81003401:	83 ec 08             	sub    $0x8,%esp
81003404:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81003409:	83 ec 08             	sub    $0x8,%esp
8100340c:	ff 75 08             	push   0x8(%ebp)
8100340f:	50                   	push   %eax
81003410:	e8 d6 e3 ff ff       	call   810017eb <_free_r>
81003415:	83 c4 10             	add    $0x10,%esp
81003418:	90                   	nop
81003419:	c9                   	leave  
8100341a:	c3                   	ret    

8100341b <malloc_extend_top>:
8100341b:	55                   	push   %ebp
8100341c:	89 e5                	mov    %esp,%ebp
8100341e:	83 ec 38             	sub    $0x38,%esp
81003421:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003428:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
8100342d:	8b 40 08             	mov    0x8(%eax),%eax
81003430:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003433:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003436:	8b 40 04             	mov    0x4(%eax),%eax
81003439:	83 e0 fc             	and    $0xfffffffc,%eax
8100343c:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100343f:	8b 55 e0             	mov    -0x20(%ebp),%edx
81003442:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003445:	01 d0                	add    %edx,%eax
81003447:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100344a:	8b 15 a0 8f 00 81    	mov    0x81008fa0,%edx
81003450:	8b 45 0c             	mov    0xc(%ebp),%eax
81003453:	01 d0                	add    %edx,%eax
81003455:	83 c0 10             	add    $0x10,%eax
81003458:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100345b:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81003462:	a1 cc 87 00 81       	mov    0x810087cc,%eax
81003467:	83 f8 ff             	cmp    $0xffffffff,%eax
8100346a:	74 15                	je     81003481 <malloc_extend_top+0x66>
8100346c:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100346f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003472:	01 d0                	add    %edx,%eax
81003474:	8d 50 ff             	lea    -0x1(%eax),%edx
81003477:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100347a:	f7 d8                	neg    %eax
8100347c:	21 d0                	and    %edx,%eax
8100347e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003481:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003484:	83 ec 08             	sub    $0x8,%esp
81003487:	50                   	push   %eax
81003488:	ff 75 08             	push   0x8(%ebp)
8100348b:	e8 b2 1c 00 00       	call   81005142 <_sbrk_r>
81003490:	83 c4 10             	add    $0x10,%esp
81003493:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003496:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100349a:	0f 84 0b 02 00 00    	je     810036ab <malloc_extend_top+0x290>
810034a0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810034a3:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810034a6:	73 0e                	jae    810034b6 <malloc_extend_top+0x9b>
810034a8:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
810034ad:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810034b0:	0f 85 f5 01 00 00    	jne    810036ab <malloc_extend_top+0x290>
810034b6:	a1 c0 8f 00 81       	mov    0x81008fc0,%eax
810034bb:	89 c2                	mov    %eax,%edx
810034bd:	8b 45 e8             	mov    -0x18(%ebp),%eax
810034c0:	01 d0                	add    %edx,%eax
810034c2:	a3 c0 8f 00 81       	mov    %eax,0x81008fc0
810034c7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810034ca:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810034cd:	75 30                	jne    810034ff <malloc_extend_top+0xe4>
810034cf:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810034d2:	8d 50 ff             	lea    -0x1(%eax),%edx
810034d5:	8b 45 d8             	mov    -0x28(%ebp),%eax
810034d8:	21 d0                	and    %edx,%eax
810034da:	85 c0                	test   %eax,%eax
810034dc:	75 21                	jne    810034ff <malloc_extend_top+0xe4>
810034de:	8b 55 e8             	mov    -0x18(%ebp),%edx
810034e1:	8b 45 dc             	mov    -0x24(%ebp),%eax
810034e4:	01 d0                	add    %edx,%eax
810034e6:	89 45 d0             	mov    %eax,-0x30(%ebp)
810034e9:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
810034ee:	8b 40 08             	mov    0x8(%eax),%eax
810034f1:	8b 55 d0             	mov    -0x30(%ebp),%edx
810034f4:	83 ca 01             	or     $0x1,%edx
810034f7:	89 50 04             	mov    %edx,0x4(%eax)
810034fa:	e9 76 01 00 00       	jmp    81003675 <malloc_extend_top+0x25a>
810034ff:	a1 cc 87 00 81       	mov    0x810087cc,%eax
81003504:	83 f8 ff             	cmp    $0xffffffff,%eax
81003507:	75 0a                	jne    81003513 <malloc_extend_top+0xf8>
81003509:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100350c:	a3 cc 87 00 81       	mov    %eax,0x810087cc
81003511:	eb 13                	jmp    81003526 <malloc_extend_top+0x10b>
81003513:	8b 15 c0 8f 00 81    	mov    0x81008fc0,%edx
81003519:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100351c:	2b 45 d8             	sub    -0x28(%ebp),%eax
8100351f:	01 d0                	add    %edx,%eax
81003521:	a3 c0 8f 00 81       	mov    %eax,0x81008fc0
81003526:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003529:	83 c0 08             	add    $0x8,%eax
8100352c:	83 e0 07             	and    $0x7,%eax
8100352f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003532:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81003536:	74 13                	je     8100354b <malloc_extend_top+0x130>
81003538:	b8 08 00 00 00       	mov    $0x8,%eax
8100353d:	2b 45 cc             	sub    -0x34(%ebp),%eax
81003540:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003543:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003546:	01 45 f4             	add    %eax,-0xc(%ebp)
81003549:	eb 07                	jmp    81003552 <malloc_extend_top+0x137>
8100354b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003552:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003555:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003558:	01 d0                	add    %edx,%eax
8100355a:	89 c2                	mov    %eax,%edx
8100355c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100355f:	83 e8 01             	sub    $0x1,%eax
81003562:	21 c2                	and    %eax,%edx
81003564:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003567:	29 d0                	sub    %edx,%eax
81003569:	01 45 f0             	add    %eax,-0x10(%ebp)
8100356c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100356f:	83 e8 01             	sub    $0x1,%eax
81003572:	21 45 f0             	and    %eax,-0x10(%ebp)
81003575:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003578:	83 ec 08             	sub    $0x8,%esp
8100357b:	50                   	push   %eax
8100357c:	ff 75 08             	push   0x8(%ebp)
8100357f:	e8 be 1b 00 00       	call   81005142 <_sbrk_r>
81003584:	83 c4 10             	add    $0x10,%esp
81003587:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100358a:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
8100358e:	75 28                	jne    810035b8 <malloc_extend_top+0x19d>
81003590:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003597:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100359e:	8b 55 f4             	mov    -0xc(%ebp),%edx
810035a1:	8b 45 e8             	mov    -0x18(%ebp),%eax
810035a4:	01 d0                	add    %edx,%eax
810035a6:	89 45 ec             	mov    %eax,-0x14(%ebp)
810035a9:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810035ad:	74 09                	je     810035b8 <malloc_extend_top+0x19d>
810035af:	8b 45 cc             	mov    -0x34(%ebp),%eax
810035b2:	83 e8 08             	sub    $0x8,%eax
810035b5:	01 45 ec             	add    %eax,-0x14(%ebp)
810035b8:	a1 c0 8f 00 81       	mov    0x81008fc0,%eax
810035bd:	89 c2                	mov    %eax,%edx
810035bf:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035c2:	01 d0                	add    %edx,%eax
810035c4:	a3 c0 8f 00 81       	mov    %eax,0x81008fc0
810035c9:	ba c0 83 00 81       	mov    $0x810083c0,%edx
810035ce:	8b 45 f4             	mov    -0xc(%ebp),%eax
810035d1:	89 42 08             	mov    %eax,0x8(%edx)
810035d4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810035d7:	2b 45 f4             	sub    -0xc(%ebp),%eax
810035da:	89 c2                	mov    %eax,%edx
810035dc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035df:	01 d0                	add    %edx,%eax
810035e1:	89 45 d0             	mov    %eax,-0x30(%ebp)
810035e4:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
810035e9:	8b 40 08             	mov    0x8(%eax),%eax
810035ec:	8b 55 d0             	mov    -0x30(%ebp),%edx
810035ef:	83 ca 01             	or     $0x1,%edx
810035f2:	89 50 04             	mov    %edx,0x4(%eax)
810035f5:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
810035fa:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810035fd:	74 76                	je     81003675 <malloc_extend_top+0x25a>
810035ff:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81003603:	77 14                	ja     81003619 <malloc_extend_top+0x1fe>
81003605:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
8100360a:	8b 40 08             	mov    0x8(%eax),%eax
8100360d:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81003614:	e9 93 00 00 00       	jmp    810036ac <malloc_extend_top+0x291>
81003619:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100361c:	83 e8 0c             	sub    $0xc,%eax
8100361f:	83 e0 f8             	and    $0xfffffff8,%eax
81003622:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003625:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003628:	8b 40 04             	mov    0x4(%eax),%eax
8100362b:	83 e0 01             	and    $0x1,%eax
8100362e:	0b 45 dc             	or     -0x24(%ebp),%eax
81003631:	89 c2                	mov    %eax,%edx
81003633:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003636:	89 50 04             	mov    %edx,0x4(%eax)
81003639:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100363c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100363f:	01 d0                	add    %edx,%eax
81003641:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81003648:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100364b:	8d 50 04             	lea    0x4(%eax),%edx
8100364e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003651:	01 d0                	add    %edx,%eax
81003653:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8100365a:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
8100365e:	76 15                	jbe    81003675 <malloc_extend_top+0x25a>
81003660:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003663:	83 c0 08             	add    $0x8,%eax
81003666:	83 ec 08             	sub    $0x8,%esp
81003669:	50                   	push   %eax
8100366a:	ff 75 08             	push   0x8(%ebp)
8100366d:	e8 79 e1 ff ff       	call   810017eb <_free_r>
81003672:	83 c4 10             	add    $0x10,%esp
81003675:	a1 c0 8f 00 81       	mov    0x81008fc0,%eax
8100367a:	89 c2                	mov    %eax,%edx
8100367c:	a1 a4 8f 00 81       	mov    0x81008fa4,%eax
81003681:	39 c2                	cmp    %eax,%edx
81003683:	76 0a                	jbe    8100368f <malloc_extend_top+0x274>
81003685:	a1 c0 8f 00 81       	mov    0x81008fc0,%eax
8100368a:	a3 a4 8f 00 81       	mov    %eax,0x81008fa4
8100368f:	a1 c0 8f 00 81       	mov    0x81008fc0,%eax
81003694:	89 c2                	mov    %eax,%edx
81003696:	a1 a8 8f 00 81       	mov    0x81008fa8,%eax
8100369b:	39 c2                	cmp    %eax,%edx
8100369d:	76 0d                	jbe    810036ac <malloc_extend_top+0x291>
8100369f:	a1 c0 8f 00 81       	mov    0x81008fc0,%eax
810036a4:	a3 a8 8f 00 81       	mov    %eax,0x81008fa8
810036a9:	eb 01                	jmp    810036ac <malloc_extend_top+0x291>
810036ab:	90                   	nop
810036ac:	c9                   	leave  
810036ad:	c3                   	ret    

810036ae <_malloc_r>:
810036ae:	55                   	push   %ebp
810036af:	89 e5                	mov    %esp,%ebp
810036b1:	53                   	push   %ebx
810036b2:	83 ec 44             	sub    $0x44,%esp
810036b5:	8b 45 0c             	mov    0xc(%ebp),%eax
810036b8:	83 c0 0b             	add    $0xb,%eax
810036bb:	83 f8 16             	cmp    $0x16,%eax
810036be:	76 0b                	jbe    810036cb <_malloc_r+0x1d>
810036c0:	8b 45 0c             	mov    0xc(%ebp),%eax
810036c3:	83 c0 0b             	add    $0xb,%eax
810036c6:	83 e0 f8             	and    $0xfffffff8,%eax
810036c9:	eb 05                	jmp    810036d0 <_malloc_r+0x22>
810036cb:	b8 10 00 00 00       	mov    $0x10,%eax
810036d0:	89 45 d0             	mov    %eax,-0x30(%ebp)
810036d3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810036d6:	85 c0                	test   %eax,%eax
810036d8:	78 08                	js     810036e2 <_malloc_r+0x34>
810036da:	8b 45 d0             	mov    -0x30(%ebp),%eax
810036dd:	3b 45 0c             	cmp    0xc(%ebp),%eax
810036e0:	73 13                	jae    810036f5 <_malloc_r+0x47>
810036e2:	8b 45 08             	mov    0x8(%ebp),%eax
810036e5:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810036eb:	b8 00 00 00 00       	mov    $0x0,%eax
810036f0:	e9 d6 07 00 00       	jmp    81003ecb <_malloc_r+0x81d>
810036f5:	83 ec 0c             	sub    $0xc,%esp
810036f8:	ff 75 08             	push   0x8(%ebp)
810036fb:	e8 88 09 00 00       	call   81004088 <__malloc_lock>
81003700:	83 c4 10             	add    $0x10,%esp
81003703:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
8100370a:	0f 87 b0 00 00 00    	ja     810037c0 <_malloc_r+0x112>
81003710:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003713:	c1 e8 03             	shr    $0x3,%eax
81003716:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003719:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100371c:	83 c0 01             	add    $0x1,%eax
8100371f:	01 c0                	add    %eax,%eax
81003721:	c1 e0 02             	shl    $0x2,%eax
81003724:	05 c0 83 00 81       	add    $0x810083c0,%eax
81003729:	83 e8 08             	sub    $0x8,%eax
8100372c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100372f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003732:	8b 40 0c             	mov    0xc(%eax),%eax
81003735:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003738:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100373b:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
8100373e:	75 0d                	jne    8100374d <_malloc_r+0x9f>
81003740:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81003744:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003747:	8b 40 0c             	mov    0xc(%eax),%eax
8100374a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100374d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003750:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81003753:	74 62                	je     810037b7 <_malloc_r+0x109>
81003755:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003758:	8b 40 04             	mov    0x4(%eax),%eax
8100375b:	83 e0 fc             	and    $0xfffffffc,%eax
8100375e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003761:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003764:	8b 40 0c             	mov    0xc(%eax),%eax
81003767:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100376a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100376d:	8b 40 08             	mov    0x8(%eax),%eax
81003770:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003773:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003776:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003779:	89 50 0c             	mov    %edx,0xc(%eax)
8100377c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100377f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003782:	89 50 08             	mov    %edx,0x8(%eax)
81003785:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003788:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100378b:	01 d0                	add    %edx,%eax
8100378d:	8b 50 04             	mov    0x4(%eax),%edx
81003790:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003793:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003796:	01 c8                	add    %ecx,%eax
81003798:	83 ca 01             	or     $0x1,%edx
8100379b:	89 50 04             	mov    %edx,0x4(%eax)
8100379e:	83 ec 0c             	sub    $0xc,%esp
810037a1:	ff 75 08             	push   0x8(%ebp)
810037a4:	e8 e5 08 00 00       	call   8100408e <__malloc_unlock>
810037a9:	83 c4 10             	add    $0x10,%esp
810037ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
810037af:	83 c0 08             	add    $0x8,%eax
810037b2:	e9 14 07 00 00       	jmp    81003ecb <_malloc_r+0x81d>
810037b7:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
810037bb:	e9 46 01 00 00       	jmp    81003906 <_malloc_r+0x258>
810037c0:	8b 45 d0             	mov    -0x30(%ebp),%eax
810037c3:	c1 e8 09             	shr    $0x9,%eax
810037c6:	85 c0                	test   %eax,%eax
810037c8:	75 08                	jne    810037d2 <_malloc_r+0x124>
810037ca:	8b 45 d0             	mov    -0x30(%ebp),%eax
810037cd:	c1 e8 03             	shr    $0x3,%eax
810037d0:	eb 77                	jmp    81003849 <_malloc_r+0x19b>
810037d2:	8b 45 d0             	mov    -0x30(%ebp),%eax
810037d5:	c1 e8 09             	shr    $0x9,%eax
810037d8:	83 f8 04             	cmp    $0x4,%eax
810037db:	77 0b                	ja     810037e8 <_malloc_r+0x13a>
810037dd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810037e0:	c1 e8 06             	shr    $0x6,%eax
810037e3:	83 c0 38             	add    $0x38,%eax
810037e6:	eb 61                	jmp    81003849 <_malloc_r+0x19b>
810037e8:	8b 45 d0             	mov    -0x30(%ebp),%eax
810037eb:	c1 e8 09             	shr    $0x9,%eax
810037ee:	83 f8 14             	cmp    $0x14,%eax
810037f1:	77 0b                	ja     810037fe <_malloc_r+0x150>
810037f3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810037f6:	c1 e8 09             	shr    $0x9,%eax
810037f9:	83 c0 5b             	add    $0x5b,%eax
810037fc:	eb 4b                	jmp    81003849 <_malloc_r+0x19b>
810037fe:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003801:	c1 e8 09             	shr    $0x9,%eax
81003804:	83 f8 54             	cmp    $0x54,%eax
81003807:	77 0b                	ja     81003814 <_malloc_r+0x166>
81003809:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100380c:	c1 e8 0c             	shr    $0xc,%eax
8100380f:	83 c0 6e             	add    $0x6e,%eax
81003812:	eb 35                	jmp    81003849 <_malloc_r+0x19b>
81003814:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003817:	c1 e8 09             	shr    $0x9,%eax
8100381a:	3d 54 01 00 00       	cmp    $0x154,%eax
8100381f:	77 0b                	ja     8100382c <_malloc_r+0x17e>
81003821:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003824:	c1 e8 0f             	shr    $0xf,%eax
81003827:	83 c0 77             	add    $0x77,%eax
8100382a:	eb 1d                	jmp    81003849 <_malloc_r+0x19b>
8100382c:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100382f:	c1 e8 09             	shr    $0x9,%eax
81003832:	3d 54 05 00 00       	cmp    $0x554,%eax
81003837:	77 0b                	ja     81003844 <_malloc_r+0x196>
81003839:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100383c:	c1 e8 12             	shr    $0x12,%eax
8100383f:	83 c0 7c             	add    $0x7c,%eax
81003842:	eb 05                	jmp    81003849 <_malloc_r+0x19b>
81003844:	b8 7e 00 00 00       	mov    $0x7e,%eax
81003849:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100384c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100384f:	83 c0 01             	add    $0x1,%eax
81003852:	01 c0                	add    %eax,%eax
81003854:	c1 e0 02             	shl    $0x2,%eax
81003857:	05 c0 83 00 81       	add    $0x810083c0,%eax
8100385c:	83 e8 08             	sub    $0x8,%eax
8100385f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003862:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003865:	8b 40 0c             	mov    0xc(%eax),%eax
81003868:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100386b:	e9 86 00 00 00       	jmp    810038f6 <_malloc_r+0x248>
81003870:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003873:	8b 40 04             	mov    0x4(%eax),%eax
81003876:	83 e0 fc             	and    $0xfffffffc,%eax
81003879:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100387c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100387f:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003882:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003885:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003889:	7e 06                	jle    81003891 <_malloc_r+0x1e3>
8100388b:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
8100388f:	eb 71                	jmp    81003902 <_malloc_r+0x254>
81003891:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003895:	78 56                	js     810038ed <_malloc_r+0x23f>
81003897:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100389a:	8b 40 0c             	mov    0xc(%eax),%eax
8100389d:	89 45 d8             	mov    %eax,-0x28(%ebp)
810038a0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810038a3:	8b 40 08             	mov    0x8(%eax),%eax
810038a6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810038a9:	8b 45 dc             	mov    -0x24(%ebp),%eax
810038ac:	8b 55 d8             	mov    -0x28(%ebp),%edx
810038af:	89 50 0c             	mov    %edx,0xc(%eax)
810038b2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810038b5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810038b8:	89 50 08             	mov    %edx,0x8(%eax)
810038bb:	8b 55 f4             	mov    -0xc(%ebp),%edx
810038be:	8b 45 cc             	mov    -0x34(%ebp),%eax
810038c1:	01 d0                	add    %edx,%eax
810038c3:	8b 50 04             	mov    0x4(%eax),%edx
810038c6:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810038c9:	8b 45 cc             	mov    -0x34(%ebp),%eax
810038cc:	01 c8                	add    %ecx,%eax
810038ce:	83 ca 01             	or     $0x1,%edx
810038d1:	89 50 04             	mov    %edx,0x4(%eax)
810038d4:	83 ec 0c             	sub    $0xc,%esp
810038d7:	ff 75 08             	push   0x8(%ebp)
810038da:	e8 af 07 00 00       	call   8100408e <__malloc_unlock>
810038df:	83 c4 10             	add    $0x10,%esp
810038e2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810038e5:	83 c0 08             	add    $0x8,%eax
810038e8:	e9 de 05 00 00       	jmp    81003ecb <_malloc_r+0x81d>
810038ed:	8b 45 f4             	mov    -0xc(%ebp),%eax
810038f0:	8b 40 0c             	mov    0xc(%eax),%eax
810038f3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810038f6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810038f9:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810038fc:	0f 85 6e ff ff ff    	jne    81003870 <_malloc_r+0x1c2>
81003902:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003906:	b8 c8 83 00 81       	mov    $0x810083c8,%eax
8100390b:	8b 40 08             	mov    0x8(%eax),%eax
8100390e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003911:	b8 c8 83 00 81       	mov    $0x810083c8,%eax
81003916:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81003919:	0f 84 9c 02 00 00    	je     81003bbb <_malloc_r+0x50d>
8100391f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003922:	8b 40 04             	mov    0x4(%eax),%eax
81003925:	83 e0 fc             	and    $0xfffffffc,%eax
81003928:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100392b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100392e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003931:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003934:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003938:	7e 7a                	jle    810039b4 <_malloc_r+0x306>
8100393a:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100393d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003940:	01 d0                	add    %edx,%eax
81003942:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81003945:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003948:	83 c8 01             	or     $0x1,%eax
8100394b:	89 c2                	mov    %eax,%edx
8100394d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003950:	89 50 04             	mov    %edx,0x4(%eax)
81003953:	b8 c8 83 00 81       	mov    $0x810083c8,%eax
81003958:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100395b:	89 50 0c             	mov    %edx,0xc(%eax)
8100395e:	ba c8 83 00 81       	mov    $0x810083c8,%edx
81003963:	8b 40 0c             	mov    0xc(%eax),%eax
81003966:	89 42 08             	mov    %eax,0x8(%edx)
81003969:	ba c8 83 00 81       	mov    $0x810083c8,%edx
8100396e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003971:	89 50 0c             	mov    %edx,0xc(%eax)
81003974:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003977:	8b 50 0c             	mov    0xc(%eax),%edx
8100397a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100397d:	89 50 08             	mov    %edx,0x8(%eax)
81003980:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003983:	83 c8 01             	or     $0x1,%eax
81003986:	89 c2                	mov    %eax,%edx
81003988:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100398b:	89 50 04             	mov    %edx,0x4(%eax)
8100398e:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003991:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003994:	01 c2                	add    %eax,%edx
81003996:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003999:	89 02                	mov    %eax,(%edx)
8100399b:	83 ec 0c             	sub    $0xc,%esp
8100399e:	ff 75 08             	push   0x8(%ebp)
810039a1:	e8 e8 06 00 00       	call   8100408e <__malloc_unlock>
810039a6:	83 c4 10             	add    $0x10,%esp
810039a9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039ac:	83 c0 08             	add    $0x8,%eax
810039af:	e9 17 05 00 00       	jmp    81003ecb <_malloc_r+0x81d>
810039b4:	b8 c8 83 00 81       	mov    $0x810083c8,%eax
810039b9:	ba c8 83 00 81       	mov    $0x810083c8,%edx
810039be:	89 50 0c             	mov    %edx,0xc(%eax)
810039c1:	ba c8 83 00 81       	mov    $0x810083c8,%edx
810039c6:	8b 40 0c             	mov    0xc(%eax),%eax
810039c9:	89 42 08             	mov    %eax,0x8(%edx)
810039cc:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810039d0:	78 32                	js     81003a04 <_malloc_r+0x356>
810039d2:	8b 55 f4             	mov    -0xc(%ebp),%edx
810039d5:	8b 45 cc             	mov    -0x34(%ebp),%eax
810039d8:	01 d0                	add    %edx,%eax
810039da:	8b 50 04             	mov    0x4(%eax),%edx
810039dd:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810039e0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810039e3:	01 c8                	add    %ecx,%eax
810039e5:	83 ca 01             	or     $0x1,%edx
810039e8:	89 50 04             	mov    %edx,0x4(%eax)
810039eb:	83 ec 0c             	sub    $0xc,%esp
810039ee:	ff 75 08             	push   0x8(%ebp)
810039f1:	e8 98 06 00 00       	call   8100408e <__malloc_unlock>
810039f6:	83 c4 10             	add    $0x10,%esp
810039f9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039fc:	83 c0 08             	add    $0x8,%eax
810039ff:	e9 c7 04 00 00       	jmp    81003ecb <_malloc_r+0x81d>
81003a04:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
81003a0b:	77 7f                	ja     81003a8c <_malloc_r+0x3de>
81003a0d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003a10:	c1 e8 03             	shr    $0x3,%eax
81003a13:	89 45 c8             	mov    %eax,-0x38(%ebp)
81003a16:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81003a1b:	8b 58 04             	mov    0x4(%eax),%ebx
81003a1e:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003a21:	8d 50 03             	lea    0x3(%eax),%edx
81003a24:	85 c0                	test   %eax,%eax
81003a26:	0f 48 c2             	cmovs  %edx,%eax
81003a29:	c1 f8 02             	sar    $0x2,%eax
81003a2c:	ba 01 00 00 00       	mov    $0x1,%edx
81003a31:	89 c1                	mov    %eax,%ecx
81003a33:	d3 e2                	shl    %cl,%edx
81003a35:	89 d0                	mov    %edx,%eax
81003a37:	ba c0 83 00 81       	mov    $0x810083c0,%edx
81003a3c:	09 d8                	or     %ebx,%eax
81003a3e:	89 42 04             	mov    %eax,0x4(%edx)
81003a41:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003a44:	83 c0 01             	add    $0x1,%eax
81003a47:	01 c0                	add    %eax,%eax
81003a49:	c1 e0 02             	shl    $0x2,%eax
81003a4c:	05 c0 83 00 81       	add    $0x810083c0,%eax
81003a51:	83 e8 08             	sub    $0x8,%eax
81003a54:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003a57:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003a5a:	8b 40 08             	mov    0x8(%eax),%eax
81003a5d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003a60:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a63:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003a66:	89 50 0c             	mov    %edx,0xc(%eax)
81003a69:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a6c:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003a6f:	89 50 08             	mov    %edx,0x8(%eax)
81003a72:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003a75:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003a78:	89 50 08             	mov    %edx,0x8(%eax)
81003a7b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003a7e:	8b 50 08             	mov    0x8(%eax),%edx
81003a81:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a84:	89 50 0c             	mov    %edx,0xc(%eax)
81003a87:	e9 2f 01 00 00       	jmp    81003bbb <_malloc_r+0x50d>
81003a8c:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003a8f:	c1 e8 09             	shr    $0x9,%eax
81003a92:	85 c0                	test   %eax,%eax
81003a94:	75 08                	jne    81003a9e <_malloc_r+0x3f0>
81003a96:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003a99:	c1 e8 03             	shr    $0x3,%eax
81003a9c:	eb 77                	jmp    81003b15 <_malloc_r+0x467>
81003a9e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003aa1:	c1 e8 09             	shr    $0x9,%eax
81003aa4:	83 f8 04             	cmp    $0x4,%eax
81003aa7:	77 0b                	ja     81003ab4 <_malloc_r+0x406>
81003aa9:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003aac:	c1 e8 06             	shr    $0x6,%eax
81003aaf:	83 c0 38             	add    $0x38,%eax
81003ab2:	eb 61                	jmp    81003b15 <_malloc_r+0x467>
81003ab4:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ab7:	c1 e8 09             	shr    $0x9,%eax
81003aba:	83 f8 14             	cmp    $0x14,%eax
81003abd:	77 0b                	ja     81003aca <_malloc_r+0x41c>
81003abf:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ac2:	c1 e8 09             	shr    $0x9,%eax
81003ac5:	83 c0 5b             	add    $0x5b,%eax
81003ac8:	eb 4b                	jmp    81003b15 <_malloc_r+0x467>
81003aca:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003acd:	c1 e8 09             	shr    $0x9,%eax
81003ad0:	83 f8 54             	cmp    $0x54,%eax
81003ad3:	77 0b                	ja     81003ae0 <_malloc_r+0x432>
81003ad5:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ad8:	c1 e8 0c             	shr    $0xc,%eax
81003adb:	83 c0 6e             	add    $0x6e,%eax
81003ade:	eb 35                	jmp    81003b15 <_malloc_r+0x467>
81003ae0:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ae3:	c1 e8 09             	shr    $0x9,%eax
81003ae6:	3d 54 01 00 00       	cmp    $0x154,%eax
81003aeb:	77 0b                	ja     81003af8 <_malloc_r+0x44a>
81003aed:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003af0:	c1 e8 0f             	shr    $0xf,%eax
81003af3:	83 c0 77             	add    $0x77,%eax
81003af6:	eb 1d                	jmp    81003b15 <_malloc_r+0x467>
81003af8:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003afb:	c1 e8 09             	shr    $0x9,%eax
81003afe:	3d 54 05 00 00       	cmp    $0x554,%eax
81003b03:	77 0b                	ja     81003b10 <_malloc_r+0x462>
81003b05:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003b08:	c1 e8 12             	shr    $0x12,%eax
81003b0b:	83 c0 7c             	add    $0x7c,%eax
81003b0e:	eb 05                	jmp    81003b15 <_malloc_r+0x467>
81003b10:	b8 7e 00 00 00       	mov    $0x7e,%eax
81003b15:	89 45 c8             	mov    %eax,-0x38(%ebp)
81003b18:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003b1b:	83 c0 01             	add    $0x1,%eax
81003b1e:	01 c0                	add    %eax,%eax
81003b20:	c1 e0 02             	shl    $0x2,%eax
81003b23:	05 c0 83 00 81       	add    $0x810083c0,%eax
81003b28:	83 e8 08             	sub    $0x8,%eax
81003b2b:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003b2e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b31:	8b 40 08             	mov    0x8(%eax),%eax
81003b34:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003b37:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b3a:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003b3d:	75 36                	jne    81003b75 <_malloc_r+0x4c7>
81003b3f:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81003b44:	8b 58 04             	mov    0x4(%eax),%ebx
81003b47:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003b4a:	8d 50 03             	lea    0x3(%eax),%edx
81003b4d:	85 c0                	test   %eax,%eax
81003b4f:	0f 48 c2             	cmovs  %edx,%eax
81003b52:	c1 f8 02             	sar    $0x2,%eax
81003b55:	ba 01 00 00 00       	mov    $0x1,%edx
81003b5a:	89 c1                	mov    %eax,%ecx
81003b5c:	d3 e2                	shl    %cl,%edx
81003b5e:	89 d0                	mov    %edx,%eax
81003b60:	ba c0 83 00 81       	mov    $0x810083c0,%edx
81003b65:	09 d8                	or     %ebx,%eax
81003b67:	89 42 04             	mov    %eax,0x4(%edx)
81003b6a:	eb 28                	jmp    81003b94 <_malloc_r+0x4e6>
81003b6c:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b6f:	8b 40 08             	mov    0x8(%eax),%eax
81003b72:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003b75:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b78:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003b7b:	74 0e                	je     81003b8b <_malloc_r+0x4dd>
81003b7d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b80:	8b 40 04             	mov    0x4(%eax),%eax
81003b83:	83 e0 fc             	and    $0xfffffffc,%eax
81003b86:	39 45 cc             	cmp    %eax,-0x34(%ebp)
81003b89:	72 e1                	jb     81003b6c <_malloc_r+0x4be>
81003b8b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b8e:	8b 40 0c             	mov    0xc(%eax),%eax
81003b91:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003b94:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b97:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003b9a:	89 50 0c             	mov    %edx,0xc(%eax)
81003b9d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ba0:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003ba3:	89 50 08             	mov    %edx,0x8(%eax)
81003ba6:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003ba9:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003bac:	89 50 08             	mov    %edx,0x8(%eax)
81003baf:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003bb2:	8b 50 08             	mov    0x8(%eax),%edx
81003bb5:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003bb8:	89 50 0c             	mov    %edx,0xc(%eax)
81003bbb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003bbe:	8d 50 03             	lea    0x3(%eax),%edx
81003bc1:	85 c0                	test   %eax,%eax
81003bc3:	0f 48 c2             	cmovs  %edx,%eax
81003bc6:	c1 f8 02             	sar    $0x2,%eax
81003bc9:	ba 01 00 00 00       	mov    $0x1,%edx
81003bce:	89 c1                	mov    %eax,%ecx
81003bd0:	d3 e2                	shl    %cl,%edx
81003bd2:	89 d0                	mov    %edx,%eax
81003bd4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003bd7:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81003bdc:	8b 40 04             	mov    0x4(%eax),%eax
81003bdf:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81003be2:	0f 87 13 02 00 00    	ja     81003dfb <_malloc_r+0x74d>
81003be8:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81003bed:	8b 40 04             	mov    0x4(%eax),%eax
81003bf0:	23 45 e4             	and    -0x1c(%ebp),%eax
81003bf3:	85 c0                	test   %eax,%eax
81003bf5:	75 27                	jne    81003c1e <_malloc_r+0x570>
81003bf7:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003bfa:	83 e0 fc             	and    $0xfffffffc,%eax
81003bfd:	83 c0 04             	add    $0x4,%eax
81003c00:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003c03:	d1 65 e4             	shll   -0x1c(%ebp)
81003c06:	eb 07                	jmp    81003c0f <_malloc_r+0x561>
81003c08:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81003c0c:	d1 65 e4             	shll   -0x1c(%ebp)
81003c0f:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81003c14:	8b 40 04             	mov    0x4(%eax),%eax
81003c17:	23 45 e4             	and    -0x1c(%ebp),%eax
81003c1a:	85 c0                	test   %eax,%eax
81003c1c:	74 ea                	je     81003c08 <_malloc_r+0x55a>
81003c1e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c21:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003c24:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c27:	83 c0 01             	add    $0x1,%eax
81003c2a:	01 c0                	add    %eax,%eax
81003c2c:	c1 e0 02             	shl    $0x2,%eax
81003c2f:	05 c0 83 00 81       	add    $0x810083c0,%eax
81003c34:	83 e8 08             	sub    $0x8,%eax
81003c37:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003c3a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003c3d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003c40:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003c43:	8b 40 0c             	mov    0xc(%eax),%eax
81003c46:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c49:	e9 22 01 00 00       	jmp    81003d70 <_malloc_r+0x6c2>
81003c4e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c51:	8b 40 04             	mov    0x4(%eax),%eax
81003c54:	83 e0 fc             	and    $0xfffffffc,%eax
81003c57:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003c5a:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003c5d:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003c60:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003c63:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003c67:	0f 8e 9e 00 00 00    	jle    81003d0b <_malloc_r+0x65d>
81003c6d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003c70:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c73:	01 d0                	add    %edx,%eax
81003c75:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81003c78:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c7b:	83 c8 01             	or     $0x1,%eax
81003c7e:	89 c2                	mov    %eax,%edx
81003c80:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c83:	89 50 04             	mov    %edx,0x4(%eax)
81003c86:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c89:	8b 40 0c             	mov    0xc(%eax),%eax
81003c8c:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003c8f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c92:	8b 40 08             	mov    0x8(%eax),%eax
81003c95:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003c98:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003c9b:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003c9e:	89 50 0c             	mov    %edx,0xc(%eax)
81003ca1:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003ca4:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003ca7:	89 50 08             	mov    %edx,0x8(%eax)
81003caa:	b8 c8 83 00 81       	mov    $0x810083c8,%eax
81003caf:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81003cb2:	89 50 0c             	mov    %edx,0xc(%eax)
81003cb5:	ba c8 83 00 81       	mov    $0x810083c8,%edx
81003cba:	8b 40 0c             	mov    0xc(%eax),%eax
81003cbd:	89 42 08             	mov    %eax,0x8(%edx)
81003cc0:	ba c8 83 00 81       	mov    $0x810083c8,%edx
81003cc5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003cc8:	89 50 0c             	mov    %edx,0xc(%eax)
81003ccb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003cce:	8b 50 0c             	mov    0xc(%eax),%edx
81003cd1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003cd4:	89 50 08             	mov    %edx,0x8(%eax)
81003cd7:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003cda:	83 c8 01             	or     $0x1,%eax
81003cdd:	89 c2                	mov    %eax,%edx
81003cdf:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003ce2:	89 50 04             	mov    %edx,0x4(%eax)
81003ce5:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003ce8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003ceb:	01 c2                	add    %eax,%edx
81003ced:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003cf0:	89 02                	mov    %eax,(%edx)
81003cf2:	83 ec 0c             	sub    $0xc,%esp
81003cf5:	ff 75 08             	push   0x8(%ebp)
81003cf8:	e8 91 03 00 00       	call   8100408e <__malloc_unlock>
81003cfd:	83 c4 10             	add    $0x10,%esp
81003d00:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d03:	83 c0 08             	add    $0x8,%eax
81003d06:	e9 c0 01 00 00       	jmp    81003ecb <_malloc_r+0x81d>
81003d0b:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003d0f:	78 56                	js     81003d67 <_malloc_r+0x6b9>
81003d11:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003d14:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003d17:	01 d0                	add    %edx,%eax
81003d19:	8b 50 04             	mov    0x4(%eax),%edx
81003d1c:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003d1f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003d22:	01 c8                	add    %ecx,%eax
81003d24:	83 ca 01             	or     $0x1,%edx
81003d27:	89 50 04             	mov    %edx,0x4(%eax)
81003d2a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d2d:	8b 40 0c             	mov    0xc(%eax),%eax
81003d30:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003d33:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d36:	8b 40 08             	mov    0x8(%eax),%eax
81003d39:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003d3c:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003d3f:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003d42:	89 50 0c             	mov    %edx,0xc(%eax)
81003d45:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003d48:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003d4b:	89 50 08             	mov    %edx,0x8(%eax)
81003d4e:	83 ec 0c             	sub    $0xc,%esp
81003d51:	ff 75 08             	push   0x8(%ebp)
81003d54:	e8 35 03 00 00       	call   8100408e <__malloc_unlock>
81003d59:	83 c4 10             	add    $0x10,%esp
81003d5c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d5f:	83 c0 08             	add    $0x8,%eax
81003d62:	e9 64 01 00 00       	jmp    81003ecb <_malloc_r+0x81d>
81003d67:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d6a:	8b 40 0c             	mov    0xc(%eax),%eax
81003d6d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d70:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d73:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003d76:	0f 85 d2 fe ff ff    	jne    81003c4e <_malloc_r+0x5a0>
81003d7c:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81003d80:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003d84:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d87:	83 e0 03             	and    $0x3,%eax
81003d8a:	85 c0                	test   %eax,%eax
81003d8c:	0f 85 ae fe ff ff    	jne    81003c40 <_malloc_r+0x592>
81003d92:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003d95:	83 e0 03             	and    $0x3,%eax
81003d98:	85 c0                	test   %eax,%eax
81003d9a:	75 19                	jne    81003db5 <_malloc_r+0x707>
81003d9c:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81003da1:	8b 48 04             	mov    0x4(%eax),%ecx
81003da4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003da7:	f7 d0                	not    %eax
81003da9:	ba c0 83 00 81       	mov    $0x810083c0,%edx
81003dae:	21 c8                	and    %ecx,%eax
81003db0:	89 42 04             	mov    %eax,0x4(%edx)
81003db3:	eb 13                	jmp    81003dc8 <_malloc_r+0x71a>
81003db5:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
81003db9:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
81003dbd:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003dc0:	8b 40 08             	mov    0x8(%eax),%eax
81003dc3:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
81003dc6:	74 ca                	je     81003d92 <_malloc_r+0x6e4>
81003dc8:	d1 65 e4             	shll   -0x1c(%ebp)
81003dcb:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81003dd0:	8b 40 04             	mov    0x4(%eax),%eax
81003dd3:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81003dd6:	77 23                	ja     81003dfb <_malloc_r+0x74d>
81003dd8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003ddc:	74 1d                	je     81003dfb <_malloc_r+0x74d>
81003dde:	eb 07                	jmp    81003de7 <_malloc_r+0x739>
81003de0:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81003de4:	d1 65 e4             	shll   -0x1c(%ebp)
81003de7:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81003dec:	8b 40 04             	mov    0x4(%eax),%eax
81003def:	23 45 e4             	and    -0x1c(%ebp),%eax
81003df2:	85 c0                	test   %eax,%eax
81003df4:	74 ea                	je     81003de0 <_malloc_r+0x732>
81003df6:	e9 23 fe ff ff       	jmp    81003c1e <_malloc_r+0x570>
81003dfb:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81003e00:	8b 40 08             	mov    0x8(%eax),%eax
81003e03:	8b 40 04             	mov    0x4(%eax),%eax
81003e06:	83 e0 fc             	and    $0xfffffffc,%eax
81003e09:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003e0c:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003e0f:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81003e14:	8b 40 08             	mov    0x8(%eax),%eax
81003e17:	8b 40 04             	mov    0x4(%eax),%eax
81003e1a:	83 e0 fc             	and    $0xfffffffc,%eax
81003e1d:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81003e20:	77 06                	ja     81003e28 <_malloc_r+0x77a>
81003e22:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003e26:	7f 53                	jg     81003e7b <_malloc_r+0x7cd>
81003e28:	83 ec 08             	sub    $0x8,%esp
81003e2b:	ff 75 d0             	push   -0x30(%ebp)
81003e2e:	ff 75 08             	push   0x8(%ebp)
81003e31:	e8 e5 f5 ff ff       	call   8100341b <malloc_extend_top>
81003e36:	83 c4 10             	add    $0x10,%esp
81003e39:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81003e3e:	8b 40 08             	mov    0x8(%eax),%eax
81003e41:	8b 40 04             	mov    0x4(%eax),%eax
81003e44:	83 e0 fc             	and    $0xfffffffc,%eax
81003e47:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003e4a:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003e4d:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81003e52:	8b 40 08             	mov    0x8(%eax),%eax
81003e55:	8b 40 04             	mov    0x4(%eax),%eax
81003e58:	83 e0 fc             	and    $0xfffffffc,%eax
81003e5b:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81003e5e:	77 06                	ja     81003e66 <_malloc_r+0x7b8>
81003e60:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003e64:	7f 15                	jg     81003e7b <_malloc_r+0x7cd>
81003e66:	83 ec 0c             	sub    $0xc,%esp
81003e69:	ff 75 08             	push   0x8(%ebp)
81003e6c:	e8 1d 02 00 00       	call   8100408e <__malloc_unlock>
81003e71:	83 c4 10             	add    $0x10,%esp
81003e74:	b8 00 00 00 00       	mov    $0x0,%eax
81003e79:	eb 50                	jmp    81003ecb <_malloc_r+0x81d>
81003e7b:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81003e80:	8b 40 08             	mov    0x8(%eax),%eax
81003e83:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003e86:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003e89:	83 c8 01             	or     $0x1,%eax
81003e8c:	89 c2                	mov    %eax,%edx
81003e8e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e91:	89 50 04             	mov    %edx,0x4(%eax)
81003e94:	ba c0 83 00 81       	mov    $0x810083c0,%edx
81003e99:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003e9c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003e9f:	01 c8                	add    %ecx,%eax
81003ea1:	89 42 08             	mov    %eax,0x8(%edx)
81003ea4:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003ea7:	83 c8 01             	or     $0x1,%eax
81003eaa:	89 c2                	mov    %eax,%edx
81003eac:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81003eb1:	8b 40 08             	mov    0x8(%eax),%eax
81003eb4:	89 50 04             	mov    %edx,0x4(%eax)
81003eb7:	83 ec 0c             	sub    $0xc,%esp
81003eba:	ff 75 08             	push   0x8(%ebp)
81003ebd:	e8 cc 01 00 00       	call   8100408e <__malloc_unlock>
81003ec2:	83 c4 10             	add    $0x10,%esp
81003ec5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ec8:	83 c0 08             	add    $0x8,%eax
81003ecb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003ece:	c9                   	leave  
81003ecf:	c3                   	ret    

81003ed0 <memchr>:
81003ed0:	55                   	push   %ebp
81003ed1:	89 e5                	mov    %esp,%ebp
81003ed3:	57                   	push   %edi
81003ed4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81003ed8:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003edb:	8b 7d 08             	mov    0x8(%ebp),%edi
81003ede:	31 d2                	xor    %edx,%edx
81003ee0:	85 c9                	test   %ecx,%ecx
81003ee2:	74 79                	je     81003f5d <L20>
81003ee4:	f7 c7 03 00 00 00    	test   $0x3,%edi
81003eea:	74 28                	je     81003f14 <L5>
81003eec:	3a 07                	cmp    (%edi),%al
81003eee:	74 6a                	je     81003f5a <L15>
81003ef0:	47                   	inc    %edi
81003ef1:	49                   	dec    %ecx
81003ef2:	74 69                	je     81003f5d <L20>
81003ef4:	f7 c7 03 00 00 00    	test   $0x3,%edi
81003efa:	74 18                	je     81003f14 <L5>
81003efc:	3a 07                	cmp    (%edi),%al
81003efe:	74 5a                	je     81003f5a <L15>
81003f00:	47                   	inc    %edi
81003f01:	49                   	dec    %ecx
81003f02:	74 59                	je     81003f5d <L20>
81003f04:	f7 c7 03 00 00 00    	test   $0x3,%edi
81003f0a:	74 08                	je     81003f14 <L5>
81003f0c:	3a 07                	cmp    (%edi),%al
81003f0e:	74 4a                	je     81003f5a <L15>
81003f10:	47                   	inc    %edi
81003f11:	49                   	dec    %ecx
81003f12:	74 49                	je     81003f5d <L20>

81003f14 <L5>:
81003f14:	88 c4                	mov    %al,%ah
81003f16:	89 c2                	mov    %eax,%edx
81003f18:	c1 e2 10             	shl    $0x10,%edx
81003f1b:	09 d0                	or     %edx,%eax
81003f1d:	53                   	push   %ebx
81003f1e:	66 90                	xchg   %ax,%ax

81003f20 <L8>:
81003f20:	83 e9 04             	sub    $0x4,%ecx
81003f23:	72 1c                	jb     81003f41 <L9>
81003f25:	8b 17                	mov    (%edi),%edx
81003f27:	83 c7 04             	add    $0x4,%edi
81003f2a:	31 c2                	xor    %eax,%edx
81003f2c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81003f32:	f7 d2                	not    %edx
81003f34:	21 d3                	and    %edx,%ebx
81003f36:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
81003f3c:	74 e2                	je     81003f20 <L8>
81003f3e:	83 ef 04             	sub    $0x4,%edi

81003f41 <L9>:
81003f41:	5b                   	pop    %ebx
81003f42:	31 d2                	xor    %edx,%edx
81003f44:	83 c1 04             	add    $0x4,%ecx
81003f47:	74 14                	je     81003f5d <L20>
81003f49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81003f50 <L10>:
81003f50:	3a 07                	cmp    (%edi),%al
81003f52:	74 06                	je     81003f5a <L15>
81003f54:	47                   	inc    %edi
81003f55:	49                   	dec    %ecx
81003f56:	75 f8                	jne    81003f50 <L10>
81003f58:	31 ff                	xor    %edi,%edi

81003f5a <L15>:
81003f5a:	4a                   	dec    %edx
81003f5b:	21 fa                	and    %edi,%edx

81003f5d <L20>:
81003f5d:	89 d0                	mov    %edx,%eax
81003f5f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81003f62:	5f                   	pop    %edi
81003f63:	c9                   	leave  
81003f64:	c3                   	ret    

81003f65 <memcmp>:
81003f65:	55                   	push   %ebp
81003f66:	89 e5                	mov    %esp,%ebp
81003f68:	83 ec 10             	sub    $0x10,%esp
81003f6b:	53                   	push   %ebx
81003f6c:	57                   	push   %edi
81003f6d:	56                   	push   %esi
81003f6e:	8b 7d 08             	mov    0x8(%ebp),%edi
81003f71:	8b 75 0c             	mov    0xc(%ebp),%esi
81003f74:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003f77:	fc                   	cld    
81003f78:	31 c0                	xor    %eax,%eax
81003f7a:	85 c9                	test   %ecx,%ecx
81003f7c:	74 31                	je     81003faf <L4>
81003f7e:	89 f8                	mov    %edi,%eax
81003f80:	09 f0                	or     %esi,%eax
81003f82:	a8 03                	test   $0x3,%al
81003f84:	75 1b                	jne    81003fa1 <BYTECMP>
81003f86:	89 cb                	mov    %ecx,%ebx
81003f88:	c1 e9 02             	shr    $0x2,%ecx
81003f8b:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
81003f8d:	74 0d                	je     81003f9c <L5>
81003f8f:	83 ee 04             	sub    $0x4,%esi
81003f92:	83 ef 04             	sub    $0x4,%edi
81003f95:	b9 04 00 00 00       	mov    $0x4,%ecx
81003f9a:	eb 05                	jmp    81003fa1 <BYTECMP>

81003f9c <L5>:
81003f9c:	83 e3 03             	and    $0x3,%ebx
81003f9f:	89 d9                	mov    %ebx,%ecx

81003fa1 <BYTECMP>:
81003fa1:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

81003fa3 <L3>:
81003fa3:	31 d2                	xor    %edx,%edx
81003fa5:	8a 56 ff             	mov    -0x1(%esi),%dl
81003fa8:	31 c0                	xor    %eax,%eax
81003faa:	8a 47 ff             	mov    -0x1(%edi),%al
81003fad:	29 d0                	sub    %edx,%eax

81003faf <L4>:
81003faf:	8d 65 e4             	lea    -0x1c(%ebp),%esp
81003fb2:	5e                   	pop    %esi
81003fb3:	5f                   	pop    %edi
81003fb4:	5b                   	pop    %ebx
81003fb5:	c9                   	leave  
81003fb6:	c3                   	ret    
81003fb7:	90                   	nop

81003fb8 <memcpy>:
81003fb8:	55                   	push   %ebp
81003fb9:	89 e5                	mov    %esp,%ebp
81003fbb:	56                   	push   %esi
81003fbc:	57                   	push   %edi
81003fbd:	53                   	push   %ebx
81003fbe:	8b 7d 08             	mov    0x8(%ebp),%edi
81003fc1:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003fc4:	8b 75 0c             	mov    0xc(%ebp),%esi
81003fc7:	fc                   	cld    
81003fc8:	83 f9 08             	cmp    $0x8,%ecx
81003fcb:	76 26                	jbe    81003ff3 <memcpy+0x3b>
81003fcd:	89 fa                	mov    %edi,%edx
81003fcf:	89 cb                	mov    %ecx,%ebx
81003fd1:	83 e2 03             	and    $0x3,%edx
81003fd4:	74 10                	je     81003fe6 <memcpy+0x2e>
81003fd6:	b9 04 00 00 00       	mov    $0x4,%ecx
81003fdb:	29 d1                	sub    %edx,%ecx
81003fdd:	83 e1 03             	and    $0x3,%ecx
81003fe0:	29 cb                	sub    %ecx,%ebx
81003fe2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003fe4:	89 d9                	mov    %ebx,%ecx
81003fe6:	c1 e9 02             	shr    $0x2,%ecx
81003fe9:	8d 76 00             	lea    0x0(%esi),%esi
81003fec:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81003fee:	89 d9                	mov    %ebx,%ecx
81003ff0:	83 e1 03             	and    $0x3,%ecx
81003ff3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003ff5:	8b 45 08             	mov    0x8(%ebp),%eax
81003ff8:	8d 65 f4             	lea    -0xc(%ebp),%esp
81003ffb:	5b                   	pop    %ebx
81003ffc:	5f                   	pop    %edi
81003ffd:	5e                   	pop    %esi
81003ffe:	c9                   	leave  
81003fff:	c3                   	ret    

81004000 <memset>:
81004000:	55                   	push   %ebp
81004001:	89 e5                	mov    %esp,%ebp
81004003:	57                   	push   %edi
81004004:	8b 7d 08             	mov    0x8(%ebp),%edi
81004007:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
8100400b:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100400e:	fc                   	cld    
8100400f:	83 f9 10             	cmp    $0x10,%ecx
81004012:	76 69                	jbe    8100407d <memset+0x7d>
81004014:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100401a:	74 4c                	je     81004068 <memset+0x68>
8100401c:	88 07                	mov    %al,(%edi)
8100401e:	47                   	inc    %edi
8100401f:	49                   	dec    %ecx
81004020:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004026:	74 40                	je     81004068 <memset+0x68>
81004028:	88 07                	mov    %al,(%edi)
8100402a:	47                   	inc    %edi
8100402b:	49                   	dec    %ecx
8100402c:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004032:	74 34                	je     81004068 <memset+0x68>
81004034:	88 07                	mov    %al,(%edi)
81004036:	47                   	inc    %edi
81004037:	49                   	dec    %ecx
81004038:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100403e:	74 28                	je     81004068 <memset+0x68>
81004040:	88 07                	mov    %al,(%edi)
81004042:	47                   	inc    %edi
81004043:	49                   	dec    %ecx
81004044:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100404a:	74 1c                	je     81004068 <memset+0x68>
8100404c:	88 07                	mov    %al,(%edi)
8100404e:	47                   	inc    %edi
8100404f:	49                   	dec    %ecx
81004050:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004056:	74 10                	je     81004068 <memset+0x68>
81004058:	88 07                	mov    %al,(%edi)
8100405a:	47                   	inc    %edi
8100405b:	49                   	dec    %ecx
8100405c:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004062:	74 04                	je     81004068 <memset+0x68>
81004064:	88 07                	mov    %al,(%edi)
81004066:	47                   	inc    %edi
81004067:	49                   	dec    %ecx
81004068:	88 c4                	mov    %al,%ah
8100406a:	89 c2                	mov    %eax,%edx
8100406c:	c1 e2 10             	shl    $0x10,%edx
8100406f:	09 d0                	or     %edx,%eax
81004071:	89 ca                	mov    %ecx,%edx
81004073:	c1 e9 02             	shr    $0x2,%ecx
81004076:	83 e2 03             	and    $0x3,%edx
81004079:	f3 ab                	rep stos %eax,%es:(%edi)
8100407b:	89 d1                	mov    %edx,%ecx
8100407d:	f3 aa                	rep stos %al,%es:(%edi)
8100407f:	8b 45 08             	mov    0x8(%ebp),%eax
81004082:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004085:	5f                   	pop    %edi
81004086:	c9                   	leave  
81004087:	c3                   	ret    

81004088 <__malloc_lock>:
81004088:	55                   	push   %ebp
81004089:	89 e5                	mov    %esp,%ebp
8100408b:	90                   	nop
8100408c:	5d                   	pop    %ebp
8100408d:	c3                   	ret    

8100408e <__malloc_unlock>:
8100408e:	55                   	push   %ebp
8100408f:	89 e5                	mov    %esp,%ebp
81004091:	90                   	nop
81004092:	5d                   	pop    %ebp
81004093:	c3                   	ret    

81004094 <__sprint_r>:
81004094:	55                   	push   %ebp
81004095:	89 e5                	mov    %esp,%ebp
81004097:	56                   	push   %esi
81004098:	53                   	push   %ebx
81004099:	83 ec 10             	sub    $0x10,%esp
8100409c:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100409f:	be 00 00 00 00       	mov    $0x0,%esi
810040a4:	8b 43 08             	mov    0x8(%ebx),%eax
810040a7:	85 c0                	test   %eax,%eax
810040a9:	75 11                	jne    810040bc <__sprint_r+0x28>
810040ab:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810040b2:	b8 00 00 00 00       	mov    $0x0,%eax
810040b7:	e9 ad 00 00 00       	jmp    81004169 <__sprint_r+0xd5>
810040bc:	8b 45 0c             	mov    0xc(%ebp),%eax
810040bf:	8b 40 64             	mov    0x64(%eax),%eax
810040c2:	25 00 20 00 00       	and    $0x2000,%eax
810040c7:	85 c0                	test   %eax,%eax
810040c9:	74 7a                	je     81004145 <__sprint_r+0xb1>
810040cb:	8b 03                	mov    (%ebx),%eax
810040cd:	89 45 f4             	mov    %eax,-0xc(%ebp)
810040d0:	eb 6a                	jmp    8100413c <__sprint_r+0xa8>
810040d2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040d5:	8b 00                	mov    (%eax),%eax
810040d7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810040da:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040dd:	8b 40 04             	mov    0x4(%eax),%eax
810040e0:	c1 e8 02             	shr    $0x2,%eax
810040e3:	89 45 e8             	mov    %eax,-0x18(%ebp)
810040e6:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810040ed:	eb 33                	jmp    81004122 <__sprint_r+0x8e>
810040ef:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040f2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810040f9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810040fc:	01 d0                	add    %edx,%eax
810040fe:	8b 00                	mov    (%eax),%eax
81004100:	83 ec 04             	sub    $0x4,%esp
81004103:	ff 75 0c             	push   0xc(%ebp)
81004106:	50                   	push   %eax
81004107:	ff 75 08             	push   0x8(%ebp)
8100410a:	e8 8c 20 00 00       	call   8100619b <_fputwc_r>
8100410f:	83 c4 10             	add    $0x10,%esp
81004112:	83 f8 ff             	cmp    $0xffffffff,%eax
81004115:	75 07                	jne    8100411e <__sprint_r+0x8a>
81004117:	be ff ff ff ff       	mov    $0xffffffff,%esi
8100411c:	eb 3b                	jmp    81004159 <__sprint_r+0xc5>
8100411e:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004122:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004125:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81004128:	7c c5                	jl     810040ef <__sprint_r+0x5b>
8100412a:	8b 43 08             	mov    0x8(%ebx),%eax
8100412d:	8b 55 e8             	mov    -0x18(%ebp),%edx
81004130:	c1 e2 02             	shl    $0x2,%edx
81004133:	29 d0                	sub    %edx,%eax
81004135:	89 43 08             	mov    %eax,0x8(%ebx)
81004138:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
8100413c:	8b 43 08             	mov    0x8(%ebx),%eax
8100413f:	85 c0                	test   %eax,%eax
81004141:	75 8f                	jne    810040d2 <__sprint_r+0x3e>
81004143:	eb 14                	jmp    81004159 <__sprint_r+0xc5>
81004145:	83 ec 04             	sub    $0x4,%esp
81004148:	53                   	push   %ebx
81004149:	ff 75 0c             	push   0xc(%ebp)
8100414c:	ff 75 08             	push   0x8(%ebp)
8100414f:	e8 e6 20 00 00       	call   8100623a <__sfvwrite_r>
81004154:	83 c4 10             	add    $0x10,%esp
81004157:	89 c6                	mov    %eax,%esi
81004159:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81004160:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004167:	89 f0                	mov    %esi,%eax
81004169:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100416c:	5b                   	pop    %ebx
8100416d:	5e                   	pop    %esi
8100416e:	5d                   	pop    %ebp
8100416f:	c3                   	ret    

81004170 <__sfputc_r>:
81004170:	55                   	push   %ebp
81004171:	89 e5                	mov    %esp,%ebp
81004173:	83 ec 08             	sub    $0x8,%esp
81004176:	8b 45 10             	mov    0x10(%ebp),%eax
81004179:	8b 40 08             	mov    0x8(%eax),%eax
8100417c:	8d 50 ff             	lea    -0x1(%eax),%edx
8100417f:	8b 45 10             	mov    0x10(%ebp),%eax
81004182:	89 50 08             	mov    %edx,0x8(%eax)
81004185:	8b 45 10             	mov    0x10(%ebp),%eax
81004188:	8b 40 08             	mov    0x8(%eax),%eax
8100418b:	85 c0                	test   %eax,%eax
8100418d:	79 17                	jns    810041a6 <__sfputc_r+0x36>
8100418f:	8b 45 10             	mov    0x10(%ebp),%eax
81004192:	8b 50 08             	mov    0x8(%eax),%edx
81004195:	8b 45 10             	mov    0x10(%ebp),%eax
81004198:	8b 40 18             	mov    0x18(%eax),%eax
8100419b:	39 c2                	cmp    %eax,%edx
8100419d:	7c 21                	jl     810041c0 <__sfputc_r+0x50>
8100419f:	8b 45 0c             	mov    0xc(%ebp),%eax
810041a2:	3c 0a                	cmp    $0xa,%al
810041a4:	74 1a                	je     810041c0 <__sfputc_r+0x50>
810041a6:	8b 45 10             	mov    0x10(%ebp),%eax
810041a9:	8b 00                	mov    (%eax),%eax
810041ab:	8d 48 01             	lea    0x1(%eax),%ecx
810041ae:	8b 55 10             	mov    0x10(%ebp),%edx
810041b1:	89 0a                	mov    %ecx,(%edx)
810041b3:	8b 55 0c             	mov    0xc(%ebp),%edx
810041b6:	88 10                	mov    %dl,(%eax)
810041b8:	0f b6 00             	movzbl (%eax),%eax
810041bb:	0f b6 c0             	movzbl %al,%eax
810041be:	eb 14                	jmp    810041d4 <__sfputc_r+0x64>
810041c0:	83 ec 04             	sub    $0x4,%esp
810041c3:	ff 75 10             	push   0x10(%ebp)
810041c6:	ff 75 0c             	push   0xc(%ebp)
810041c9:	ff 75 08             	push   0x8(%ebp)
810041cc:	e8 6e 18 00 00       	call   81005a3f <__swbuf_r>
810041d1:	83 c4 10             	add    $0x10,%esp
810041d4:	c9                   	leave  
810041d5:	c3                   	ret    

810041d6 <__sfputs_r>:
810041d6:	55                   	push   %ebp
810041d7:	89 e5                	mov    %esp,%ebp
810041d9:	53                   	push   %ebx
810041da:	83 ec 14             	sub    $0x14,%esp
810041dd:	8b 45 0c             	mov    0xc(%ebp),%eax
810041e0:	8b 40 64             	mov    0x64(%eax),%eax
810041e3:	25 00 20 00 00       	and    $0x2000,%eax
810041e8:	85 c0                	test   %eax,%eax
810041ea:	74 4c                	je     81004238 <__sfputs_r+0x62>
810041ec:	8b 45 10             	mov    0x10(%ebp),%eax
810041ef:	89 45 f4             	mov    %eax,-0xc(%ebp)
810041f2:	bb 00 00 00 00       	mov    $0x0,%ebx
810041f7:	eb 31                	jmp    8100422a <__sfputs_r+0x54>
810041f9:	89 d8                	mov    %ebx,%eax
810041fb:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81004202:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004205:	01 d0                	add    %edx,%eax
81004207:	8b 00                	mov    (%eax),%eax
81004209:	83 ec 04             	sub    $0x4,%esp
8100420c:	ff 75 0c             	push   0xc(%ebp)
8100420f:	50                   	push   %eax
81004210:	ff 75 08             	push   0x8(%ebp)
81004213:	e8 83 1f 00 00       	call   8100619b <_fputwc_r>
81004218:	83 c4 10             	add    $0x10,%esp
8100421b:	83 f8 ff             	cmp    $0xffffffff,%eax
8100421e:	75 07                	jne    81004227 <__sfputs_r+0x51>
81004220:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004225:	eb 52                	jmp    81004279 <__sfputs_r+0xa3>
81004227:	83 c3 01             	add    $0x1,%ebx
8100422a:	8b 45 14             	mov    0x14(%ebp),%eax
8100422d:	c1 e8 02             	shr    $0x2,%eax
81004230:	89 da                	mov    %ebx,%edx
81004232:	39 d0                	cmp    %edx,%eax
81004234:	77 c3                	ja     810041f9 <__sfputs_r+0x23>
81004236:	eb 3c                	jmp    81004274 <__sfputs_r+0x9e>
81004238:	bb 00 00 00 00       	mov    $0x0,%ebx
8100423d:	eb 2e                	jmp    8100426d <__sfputs_r+0x97>
8100423f:	89 da                	mov    %ebx,%edx
81004241:	8b 45 10             	mov    0x10(%ebp),%eax
81004244:	01 d0                	add    %edx,%eax
81004246:	0f b6 00             	movzbl (%eax),%eax
81004249:	0f be c0             	movsbl %al,%eax
8100424c:	83 ec 04             	sub    $0x4,%esp
8100424f:	ff 75 0c             	push   0xc(%ebp)
81004252:	50                   	push   %eax
81004253:	ff 75 08             	push   0x8(%ebp)
81004256:	e8 15 ff ff ff       	call   81004170 <__sfputc_r>
8100425b:	83 c4 10             	add    $0x10,%esp
8100425e:	83 f8 ff             	cmp    $0xffffffff,%eax
81004261:	75 07                	jne    8100426a <__sfputs_r+0x94>
81004263:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004268:	eb 0f                	jmp    81004279 <__sfputs_r+0xa3>
8100426a:	83 c3 01             	add    $0x1,%ebx
8100426d:	89 d8                	mov    %ebx,%eax
8100426f:	39 45 14             	cmp    %eax,0x14(%ebp)
81004272:	77 cb                	ja     8100423f <__sfputs_r+0x69>
81004274:	b8 00 00 00 00       	mov    $0x0,%eax
81004279:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100427c:	c9                   	leave  
8100427d:	c3                   	ret    

8100427e <vfiprintf>:
8100427e:	55                   	push   %ebp
8100427f:	89 e5                	mov    %esp,%ebp
81004281:	83 ec 18             	sub    $0x18,%esp
81004284:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81004289:	ff 75 10             	push   0x10(%ebp)
8100428c:	ff 75 0c             	push   0xc(%ebp)
8100428f:	ff 75 08             	push   0x8(%ebp)
81004292:	50                   	push   %eax
81004293:	e8 0b 00 00 00       	call   810042a3 <_vfiprintf_r>
81004298:	83 c4 10             	add    $0x10,%esp
8100429b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100429e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810042a1:	c9                   	leave  
810042a2:	c3                   	ret    

810042a3 <_vfiprintf_r>:
810042a3:	55                   	push   %ebp
810042a4:	89 e5                	mov    %esp,%ebp
810042a6:	57                   	push   %edi
810042a7:	56                   	push   %esi
810042a8:	53                   	push   %ebx
810042a9:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
810042af:	c7 45 e4 d6 41 00 81 	movl   $0x810041d6,-0x1c(%ebp)
810042b6:	8b 45 08             	mov    0x8(%ebp),%eax
810042b9:	89 45 e0             	mov    %eax,-0x20(%ebp)
810042bc:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810042c0:	74 18                	je     810042da <_vfiprintf_r+0x37>
810042c2:	8b 45 e0             	mov    -0x20(%ebp),%eax
810042c5:	8b 40 38             	mov    0x38(%eax),%eax
810042c8:	85 c0                	test   %eax,%eax
810042ca:	75 0e                	jne    810042da <_vfiprintf_r+0x37>
810042cc:	83 ec 0c             	sub    $0xc,%esp
810042cf:	ff 75 e0             	push   -0x20(%ebp)
810042d2:	e8 be d2 ff ff       	call   81001595 <__sinit>
810042d7:	83 c4 10             	add    $0x10,%esp
810042da:	8b 45 0c             	mov    0xc(%ebp),%eax
810042dd:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810042e1:	98                   	cwtl   
810042e2:	83 e0 08             	and    $0x8,%eax
810042e5:	85 c0                	test   %eax,%eax
810042e7:	74 0a                	je     810042f3 <_vfiprintf_r+0x50>
810042e9:	8b 45 0c             	mov    0xc(%ebp),%eax
810042ec:	8b 40 10             	mov    0x10(%eax),%eax
810042ef:	85 c0                	test   %eax,%eax
810042f1:	75 1f                	jne    81004312 <_vfiprintf_r+0x6f>
810042f3:	83 ec 08             	sub    $0x8,%esp
810042f6:	ff 75 0c             	push   0xc(%ebp)
810042f9:	ff 75 08             	push   0x8(%ebp)
810042fc:	e8 b7 18 00 00       	call   81005bb8 <__swsetup_r>
81004301:	83 c4 10             	add    $0x10,%esp
81004304:	85 c0                	test   %eax,%eax
81004306:	74 0a                	je     81004312 <_vfiprintf_r+0x6f>
81004308:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100430d:	e9 df 02 00 00       	jmp    810045f1 <_vfiprintf_r+0x34e>
81004312:	8b 5d 10             	mov    0x10(%ebp),%ebx
81004315:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
8100431c:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81004320:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81004324:	8b 45 14             	mov    0x14(%ebp),%eax
81004327:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
8100432d:	89 de                	mov    %ebx,%esi
8100432f:	eb 03                	jmp    81004334 <_vfiprintf_r+0x91>
81004331:	83 c3 01             	add    $0x1,%ebx
81004334:	0f b6 03             	movzbl (%ebx),%eax
81004337:	84 c0                	test   %al,%al
81004339:	74 07                	je     81004342 <_vfiprintf_r+0x9f>
8100433b:	0f b6 03             	movzbl (%ebx),%eax
8100433e:	3c 25                	cmp    $0x25,%al
81004340:	75 ef                	jne    81004331 <_vfiprintf_r+0x8e>
81004342:	89 d8                	mov    %ebx,%eax
81004344:	29 f0                	sub    %esi,%eax
81004346:	85 c0                	test   %eax,%eax
81004348:	74 2b                	je     81004375 <_vfiprintf_r+0xd2>
8100434a:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81004350:	50                   	push   %eax
81004351:	56                   	push   %esi
81004352:	ff 75 0c             	push   0xc(%ebp)
81004355:	ff 75 08             	push   0x8(%ebp)
81004358:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100435b:	ff d0                	call   *%eax
8100435d:	83 c4 10             	add    $0x10,%esp
81004360:	83 f8 ff             	cmp    $0xffffffff,%eax
81004363:	0f 84 68 02 00 00    	je     810045d1 <_vfiprintf_r+0x32e>
81004369:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100436c:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81004372:	89 45 94             	mov    %eax,-0x6c(%ebp)
81004375:	0f b6 03             	movzbl (%ebx),%eax
81004378:	84 c0                	test   %al,%al
8100437a:	0f 84 54 02 00 00    	je     810045d4 <_vfiprintf_r+0x331>
81004380:	83 c3 01             	add    $0x1,%ebx
81004383:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
8100438a:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81004391:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81004398:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
8100439f:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
810043a3:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
810043aa:	c7 45 dc fc 7b 00 81 	movl   $0x81007bfc,-0x24(%ebp)
810043b1:	eb 1b                	jmp    810043ce <_vfiprintf_r+0x12b>
810043b3:	8b 55 80             	mov    -0x80(%ebp),%edx
810043b6:	89 f0                	mov    %esi,%eax
810043b8:	2b 45 dc             	sub    -0x24(%ebp),%eax
810043bb:	be 01 00 00 00       	mov    $0x1,%esi
810043c0:	89 c1                	mov    %eax,%ecx
810043c2:	d3 e6                	shl    %cl,%esi
810043c4:	89 f0                	mov    %esi,%eax
810043c6:	09 d0                	or     %edx,%eax
810043c8:	89 45 80             	mov    %eax,-0x80(%ebp)
810043cb:	83 c3 01             	add    $0x1,%ebx
810043ce:	0f b6 03             	movzbl (%ebx),%eax
810043d1:	0f be c0             	movsbl %al,%eax
810043d4:	83 ec 04             	sub    $0x4,%esp
810043d7:	6a 05                	push   $0x5
810043d9:	50                   	push   %eax
810043da:	ff 75 dc             	push   -0x24(%ebp)
810043dd:	e8 ee fa ff ff       	call   81003ed0 <memchr>
810043e2:	83 c4 10             	add    $0x10,%esp
810043e5:	89 c6                	mov    %eax,%esi
810043e7:	85 f6                	test   %esi,%esi
810043e9:	75 c8                	jne    810043b3 <_vfiprintf_r+0x110>
810043eb:	8b 45 80             	mov    -0x80(%ebp),%eax
810043ee:	83 e0 10             	and    $0x10,%eax
810043f1:	85 c0                	test   %eax,%eax
810043f3:	74 04                	je     810043f9 <_vfiprintf_r+0x156>
810043f5:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
810043f9:	8b 45 80             	mov    -0x80(%ebp),%eax
810043fc:	83 e0 08             	and    $0x8,%eax
810043ff:	85 c0                	test   %eax,%eax
81004401:	74 04                	je     81004407 <_vfiprintf_r+0x164>
81004403:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81004407:	0f b6 03             	movzbl (%ebx),%eax
8100440a:	3c 2a                	cmp    $0x2a,%al
8100440c:	75 50                	jne    8100445e <_vfiprintf_r+0x1bb>
8100440e:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004414:	8d 50 04             	lea    0x4(%eax),%edx
81004417:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100441d:	8b 00                	mov    (%eax),%eax
8100441f:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004422:	8b 45 8c             	mov    -0x74(%ebp),%eax
81004425:	85 c0                	test   %eax,%eax
81004427:	79 11                	jns    8100443a <_vfiprintf_r+0x197>
81004429:	8b 45 8c             	mov    -0x74(%ebp),%eax
8100442c:	f7 d8                	neg    %eax
8100442e:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004431:	8b 45 80             	mov    -0x80(%ebp),%eax
81004434:	83 c8 02             	or     $0x2,%eax
81004437:	89 45 80             	mov    %eax,-0x80(%ebp)
8100443a:	83 c3 01             	add    $0x1,%ebx
8100443d:	eb 2d                	jmp    8100446c <_vfiprintf_r+0x1c9>
8100443f:	8b 55 8c             	mov    -0x74(%ebp),%edx
81004442:	89 d0                	mov    %edx,%eax
81004444:	c1 e0 02             	shl    $0x2,%eax
81004447:	01 d0                	add    %edx,%eax
81004449:	01 c0                	add    %eax,%eax
8100444b:	89 c2                	mov    %eax,%edx
8100444d:	0f b6 03             	movzbl (%ebx),%eax
81004450:	0f be c0             	movsbl %al,%eax
81004453:	83 e8 30             	sub    $0x30,%eax
81004456:	01 d0                	add    %edx,%eax
81004458:	89 45 8c             	mov    %eax,-0x74(%ebp)
8100445b:	83 c3 01             	add    $0x1,%ebx
8100445e:	0f b6 03             	movzbl (%ebx),%eax
81004461:	0f be c0             	movsbl %al,%eax
81004464:	83 e8 30             	sub    $0x30,%eax
81004467:	83 f8 09             	cmp    $0x9,%eax
8100446a:	76 d3                	jbe    8100443f <_vfiprintf_r+0x19c>
8100446c:	0f b6 03             	movzbl (%ebx),%eax
8100446f:	3c 2e                	cmp    $0x2e,%al
81004471:	75 67                	jne    810044da <_vfiprintf_r+0x237>
81004473:	83 c3 01             	add    $0x1,%ebx
81004476:	0f b6 03             	movzbl (%ebx),%eax
81004479:	3c 2a                	cmp    $0x2a,%al
8100447b:	75 27                	jne    810044a4 <_vfiprintf_r+0x201>
8100447d:	83 c3 01             	add    $0x1,%ebx
81004480:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004486:	8d 50 04             	lea    0x4(%eax),%edx
81004489:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100448f:	8b 00                	mov    (%eax),%eax
81004491:	89 45 84             	mov    %eax,-0x7c(%ebp)
81004494:	8b 45 84             	mov    -0x7c(%ebp),%eax
81004497:	85 c0                	test   %eax,%eax
81004499:	79 3f                	jns    810044da <_vfiprintf_r+0x237>
8100449b:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
810044a2:	eb 36                	jmp    810044da <_vfiprintf_r+0x237>
810044a4:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
810044ab:	eb 1f                	jmp    810044cc <_vfiprintf_r+0x229>
810044ad:	8b 55 84             	mov    -0x7c(%ebp),%edx
810044b0:	89 d0                	mov    %edx,%eax
810044b2:	c1 e0 02             	shl    $0x2,%eax
810044b5:	01 d0                	add    %edx,%eax
810044b7:	01 c0                	add    %eax,%eax
810044b9:	89 c2                	mov    %eax,%edx
810044bb:	0f b6 03             	movzbl (%ebx),%eax
810044be:	0f be c0             	movsbl %al,%eax
810044c1:	83 e8 30             	sub    $0x30,%eax
810044c4:	01 d0                	add    %edx,%eax
810044c6:	89 45 84             	mov    %eax,-0x7c(%ebp)
810044c9:	83 c3 01             	add    $0x1,%ebx
810044cc:	0f b6 03             	movzbl (%ebx),%eax
810044cf:	0f be c0             	movsbl %al,%eax
810044d2:	83 e8 30             	sub    $0x30,%eax
810044d5:	83 f8 09             	cmp    $0x9,%eax
810044d8:	76 d3                	jbe    810044ad <_vfiprintf_r+0x20a>
810044da:	c7 45 dc 02 7c 00 81 	movl   $0x81007c02,-0x24(%ebp)
810044e1:	0f b6 03             	movzbl (%ebx),%eax
810044e4:	0f be c0             	movsbl %al,%eax
810044e7:	83 ec 04             	sub    $0x4,%esp
810044ea:	6a 03                	push   $0x3
810044ec:	50                   	push   %eax
810044ed:	ff 75 dc             	push   -0x24(%ebp)
810044f0:	e8 db f9 ff ff       	call   81003ed0 <memchr>
810044f5:	83 c4 10             	add    $0x10,%esp
810044f8:	89 c6                	mov    %eax,%esi
810044fa:	85 f6                	test   %esi,%esi
810044fc:	74 1b                	je     81004519 <_vfiprintf_r+0x276>
810044fe:	8b 55 80             	mov    -0x80(%ebp),%edx
81004501:	89 f0                	mov    %esi,%eax
81004503:	2b 45 dc             	sub    -0x24(%ebp),%eax
81004506:	be 40 00 00 00       	mov    $0x40,%esi
8100450b:	89 c1                	mov    %eax,%ecx
8100450d:	d3 e6                	shl    %cl,%esi
8100450f:	89 f0                	mov    %esi,%eax
81004511:	09 d0                	or     %edx,%eax
81004513:	89 45 80             	mov    %eax,-0x80(%ebp)
81004516:	83 c3 01             	add    $0x1,%ebx
81004519:	89 d8                	mov    %ebx,%eax
8100451b:	8d 58 01             	lea    0x1(%eax),%ebx
8100451e:	0f b6 00             	movzbl (%eax),%eax
81004521:	88 45 98             	mov    %al,-0x68(%ebp)
81004524:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
81004528:	0f be c0             	movsbl %al,%eax
8100452b:	83 ec 04             	sub    $0x4,%esp
8100452e:	6a 06                	push   $0x6
81004530:	50                   	push   %eax
81004531:	68 06 7c 00 81       	push   $0x81007c06
81004536:	e8 95 f9 ff ff       	call   81003ed0 <memchr>
8100453b:	83 c4 10             	add    $0x10,%esp
8100453e:	89 c6                	mov    %eax,%esi
81004540:	85 f6                	test   %esi,%esi
81004542:	74 5a                	je     8100459e <_vfiprintf_r+0x2fb>
81004544:	b8 00 00 00 00       	mov    $0x0,%eax
81004549:	85 c0                	test   %eax,%eax
8100454b:	75 2e                	jne    8100457b <_vfiprintf_r+0x2d8>
8100454d:	8b 45 80             	mov    -0x80(%ebp),%eax
81004550:	25 00 01 00 00       	and    $0x100,%eax
81004555:	85 c0                	test   %eax,%eax
81004557:	74 11                	je     8100456a <_vfiprintf_r+0x2c7>
81004559:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
8100455f:	83 c0 0c             	add    $0xc,%eax
81004562:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004568:	eb 55                	jmp    810045bf <_vfiprintf_r+0x31c>
8100456a:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004570:	83 c0 08             	add    $0x8,%eax
81004573:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004579:	eb 44                	jmp    810045bf <_vfiprintf_r+0x31c>
8100457b:	83 ec 0c             	sub    $0xc,%esp
8100457e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81004584:	50                   	push   %eax
81004585:	ff 75 e4             	push   -0x1c(%ebp)
81004588:	ff 75 0c             	push   0xc(%ebp)
8100458b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100458e:	50                   	push   %eax
8100458f:	ff 75 08             	push   0x8(%ebp)
81004592:	e8 69 ba ff 7e       	call   0 <do_help-0x81000000>
81004597:	83 c4 20             	add    $0x20,%esp
8100459a:	89 c7                	mov    %eax,%edi
8100459c:	eb 21                	jmp    810045bf <_vfiprintf_r+0x31c>
8100459e:	83 ec 0c             	sub    $0xc,%esp
810045a1:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
810045a7:	50                   	push   %eax
810045a8:	ff 75 e4             	push   -0x1c(%ebp)
810045ab:	ff 75 0c             	push   0xc(%ebp)
810045ae:	8d 45 80             	lea    -0x80(%ebp),%eax
810045b1:	50                   	push   %eax
810045b2:	ff 75 08             	push   0x8(%ebp)
810045b5:	e8 da 01 00 00       	call   81004794 <_printf_i>
810045ba:	83 c4 20             	add    $0x20,%esp
810045bd:	89 c7                	mov    %eax,%edi
810045bf:	83 ff ff             	cmp    $0xffffffff,%edi
810045c2:	74 13                	je     810045d7 <_vfiprintf_r+0x334>
810045c4:	8b 45 94             	mov    -0x6c(%ebp),%eax
810045c7:	01 f8                	add    %edi,%eax
810045c9:	89 45 94             	mov    %eax,-0x6c(%ebp)
810045cc:	e9 5c fd ff ff       	jmp    8100432d <_vfiprintf_r+0x8a>
810045d1:	90                   	nop
810045d2:	eb 04                	jmp    810045d8 <_vfiprintf_r+0x335>
810045d4:	90                   	nop
810045d5:	eb 01                	jmp    810045d8 <_vfiprintf_r+0x335>
810045d7:	90                   	nop
810045d8:	8b 45 0c             	mov    0xc(%ebp),%eax
810045db:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810045df:	98                   	cwtl   
810045e0:	83 e0 40             	and    $0x40,%eax
810045e3:	85 c0                	test   %eax,%eax
810045e5:	75 05                	jne    810045ec <_vfiprintf_r+0x349>
810045e7:	8b 45 94             	mov    -0x6c(%ebp),%eax
810045ea:	eb 05                	jmp    810045f1 <_vfiprintf_r+0x34e>
810045ec:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810045f1:	8d 65 f4             	lea    -0xc(%ebp),%esp
810045f4:	5b                   	pop    %ebx
810045f5:	5e                   	pop    %esi
810045f6:	5f                   	pop    %edi
810045f7:	5d                   	pop    %ebp
810045f8:	c3                   	ret    

810045f9 <_printf_common>:
810045f9:	55                   	push   %ebp
810045fa:	89 e5                	mov    %esp,%ebp
810045fc:	83 ec 18             	sub    $0x18,%esp
810045ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81004602:	8b 50 10             	mov    0x10(%eax),%edx
81004605:	8b 45 0c             	mov    0xc(%ebp),%eax
81004608:	8b 40 08             	mov    0x8(%eax),%eax
8100460b:	39 c2                	cmp    %eax,%edx
8100460d:	0f 4c d0             	cmovl  %eax,%edx
81004610:	8b 45 10             	mov    0x10(%ebp),%eax
81004613:	89 10                	mov    %edx,(%eax)
81004615:	8b 45 0c             	mov    0xc(%ebp),%eax
81004618:	0f b6 40 43          	movzbl 0x43(%eax),%eax
8100461c:	84 c0                	test   %al,%al
8100461e:	74 0d                	je     8100462d <_printf_common+0x34>
81004620:	8b 45 10             	mov    0x10(%ebp),%eax
81004623:	8b 00                	mov    (%eax),%eax
81004625:	8d 50 01             	lea    0x1(%eax),%edx
81004628:	8b 45 10             	mov    0x10(%ebp),%eax
8100462b:	89 10                	mov    %edx,(%eax)
8100462d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004630:	8b 00                	mov    (%eax),%eax
81004632:	83 e0 20             	and    $0x20,%eax
81004635:	85 c0                	test   %eax,%eax
81004637:	74 0d                	je     81004646 <_printf_common+0x4d>
81004639:	8b 45 10             	mov    0x10(%ebp),%eax
8100463c:	8b 00                	mov    (%eax),%eax
8100463e:	8d 50 02             	lea    0x2(%eax),%edx
81004641:	8b 45 10             	mov    0x10(%ebp),%eax
81004644:	89 10                	mov    %edx,(%eax)
81004646:	8b 45 0c             	mov    0xc(%ebp),%eax
81004649:	8b 00                	mov    (%eax),%eax
8100464b:	83 e0 06             	and    $0x6,%eax
8100464e:	85 c0                	test   %eax,%eax
81004650:	75 41                	jne    81004693 <_printf_common+0x9a>
81004652:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81004659:	eb 24                	jmp    8100467f <_printf_common+0x86>
8100465b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100465e:	83 c0 19             	add    $0x19,%eax
81004661:	6a 01                	push   $0x1
81004663:	50                   	push   %eax
81004664:	ff 75 14             	push   0x14(%ebp)
81004667:	ff 75 08             	push   0x8(%ebp)
8100466a:	8b 45 18             	mov    0x18(%ebp),%eax
8100466d:	ff d0                	call   *%eax
8100466f:	83 c4 10             	add    $0x10,%esp
81004672:	83 f8 ff             	cmp    $0xffffffff,%eax
81004675:	0f 84 0b 01 00 00    	je     81004786 <_printf_common+0x18d>
8100467b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8100467f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004682:	8b 50 0c             	mov    0xc(%eax),%edx
81004685:	8b 45 10             	mov    0x10(%ebp),%eax
81004688:	8b 08                	mov    (%eax),%ecx
8100468a:	89 d0                	mov    %edx,%eax
8100468c:	29 c8                	sub    %ecx,%eax
8100468e:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81004691:	7c c8                	jl     8100465b <_printf_common+0x62>
81004693:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100469a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100469d:	0f b6 40 43          	movzbl 0x43(%eax),%eax
810046a1:	84 c0                	test   %al,%al
810046a3:	74 04                	je     810046a9 <_printf_common+0xb0>
810046a5:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810046a9:	8b 45 0c             	mov    0xc(%ebp),%eax
810046ac:	8b 00                	mov    (%eax),%eax
810046ae:	83 e0 20             	and    $0x20,%eax
810046b1:	85 c0                	test   %eax,%eax
810046b3:	74 28                	je     810046dd <_printf_common+0xe4>
810046b5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810046b8:	8d 50 01             	lea    0x1(%eax),%edx
810046bb:	89 55 f4             	mov    %edx,-0xc(%ebp)
810046be:	8b 55 0c             	mov    0xc(%ebp),%edx
810046c1:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
810046c6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810046c9:	8d 50 01             	lea    0x1(%eax),%edx
810046cc:	89 55 f4             	mov    %edx,-0xc(%ebp)
810046cf:	8b 55 0c             	mov    0xc(%ebp),%edx
810046d2:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
810046d6:	8b 55 0c             	mov    0xc(%ebp),%edx
810046d9:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
810046dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810046e0:	8b 55 0c             	mov    0xc(%ebp),%edx
810046e3:	83 c2 43             	add    $0x43,%edx
810046e6:	50                   	push   %eax
810046e7:	52                   	push   %edx
810046e8:	ff 75 14             	push   0x14(%ebp)
810046eb:	ff 75 08             	push   0x8(%ebp)
810046ee:	8b 45 18             	mov    0x18(%ebp),%eax
810046f1:	ff d0                	call   *%eax
810046f3:	83 c4 10             	add    $0x10,%esp
810046f6:	83 f8 ff             	cmp    $0xffffffff,%eax
810046f9:	0f 84 8a 00 00 00    	je     81004789 <_printf_common+0x190>
810046ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81004702:	8b 50 0c             	mov    0xc(%eax),%edx
81004705:	8b 45 10             	mov    0x10(%ebp),%eax
81004708:	8b 08                	mov    (%eax),%ecx
8100470a:	89 d0                	mov    %edx,%eax
8100470c:	29 c8                	sub    %ecx,%eax
8100470e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004711:	8b 45 0c             	mov    0xc(%ebp),%eax
81004714:	8b 00                	mov    (%eax),%eax
81004716:	83 e0 06             	and    $0x6,%eax
81004719:	83 f8 04             	cmp    $0x4,%eax
8100471c:	75 06                	jne    81004724 <_printf_common+0x12b>
8100471e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004722:	79 07                	jns    8100472b <_printf_common+0x132>
81004724:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100472b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100472e:	8b 50 08             	mov    0x8(%eax),%edx
81004731:	8b 45 0c             	mov    0xc(%ebp),%eax
81004734:	8b 40 10             	mov    0x10(%eax),%eax
81004737:	39 c2                	cmp    %eax,%edx
81004739:	7e 13                	jle    8100474e <_printf_common+0x155>
8100473b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100473e:	8b 50 08             	mov    0x8(%eax),%edx
81004741:	8b 45 0c             	mov    0xc(%ebp),%eax
81004744:	8b 48 10             	mov    0x10(%eax),%ecx
81004747:	89 d0                	mov    %edx,%eax
81004749:	29 c8                	sub    %ecx,%eax
8100474b:	01 45 f4             	add    %eax,-0xc(%ebp)
8100474e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81004755:	eb 20                	jmp    81004777 <_printf_common+0x17e>
81004757:	8b 45 0c             	mov    0xc(%ebp),%eax
8100475a:	83 c0 1a             	add    $0x1a,%eax
8100475d:	6a 01                	push   $0x1
8100475f:	50                   	push   %eax
81004760:	ff 75 14             	push   0x14(%ebp)
81004763:	ff 75 08             	push   0x8(%ebp)
81004766:	8b 45 18             	mov    0x18(%ebp),%eax
81004769:	ff d0                	call   *%eax
8100476b:	83 c4 10             	add    $0x10,%esp
8100476e:	83 f8 ff             	cmp    $0xffffffff,%eax
81004771:	74 19                	je     8100478c <_printf_common+0x193>
81004773:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
81004777:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100477a:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100477d:	7c d8                	jl     81004757 <_printf_common+0x15e>
8100477f:	b8 00 00 00 00       	mov    $0x0,%eax
81004784:	eb 0c                	jmp    81004792 <_printf_common+0x199>
81004786:	90                   	nop
81004787:	eb 04                	jmp    8100478d <_printf_common+0x194>
81004789:	90                   	nop
8100478a:	eb 01                	jmp    8100478d <_printf_common+0x194>
8100478c:	90                   	nop
8100478d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004792:	c9                   	leave  
81004793:	c3                   	ret    

81004794 <_printf_i>:
81004794:	55                   	push   %ebp
81004795:	89 e5                	mov    %esp,%ebp
81004797:	53                   	push   %ebx
81004798:	83 ec 24             	sub    $0x24,%esp
8100479b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100479e:	83 c0 1b             	add    $0x1b,%eax
810047a1:	83 c0 28             	add    $0x28,%eax
810047a4:	89 45 ec             	mov    %eax,-0x14(%ebp)
810047a7:	c7 45 e8 10 7c 00 81 	movl   $0x81007c10,-0x18(%ebp)
810047ae:	8b 45 0c             	mov    0xc(%ebp),%eax
810047b1:	0f b6 40 18          	movzbl 0x18(%eax),%eax
810047b5:	0f be c0             	movsbl %al,%eax
810047b8:	85 c0                	test   %eax,%eax
810047ba:	0f 84 00 03 00 00    	je     81004ac0 <_printf_i+0x32c>
810047c0:	85 c0                	test   %eax,%eax
810047c2:	0f 88 52 03 00 00    	js     81004b1a <_printf_i+0x386>
810047c8:	83 f8 78             	cmp    $0x78,%eax
810047cb:	0f 8f 49 03 00 00    	jg     81004b1a <_printf_i+0x386>
810047d1:	83 f8 58             	cmp    $0x58,%eax
810047d4:	0f 8c 40 03 00 00    	jl     81004b1a <_printf_i+0x386>
810047da:	83 e8 58             	sub    $0x58,%eax
810047dd:	83 f8 20             	cmp    $0x20,%eax
810047e0:	0f 87 34 03 00 00    	ja     81004b1a <_printf_i+0x386>
810047e6:	8b 04 85 34 7c 00 81 	mov    -0x7eff83cc(,%eax,4),%eax
810047ed:	ff e0                	jmp    *%eax
810047ef:	8b 45 18             	mov    0x18(%ebp),%eax
810047f2:	8b 00                	mov    (%eax),%eax
810047f4:	8d 48 04             	lea    0x4(%eax),%ecx
810047f7:	8b 55 18             	mov    0x18(%ebp),%edx
810047fa:	89 0a                	mov    %ecx,(%edx)
810047fc:	8b 00                	mov    (%eax),%eax
810047fe:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004802:	89 c2                	mov    %eax,%edx
81004804:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004807:	88 10                	mov    %dl,(%eax)
81004809:	8b 45 0c             	mov    0xc(%ebp),%eax
8100480c:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81004813:	e9 1c 03 00 00       	jmp    81004b34 <_printf_i+0x3a0>
81004818:	8b 45 0c             	mov    0xc(%ebp),%eax
8100481b:	8b 00                	mov    (%eax),%eax
8100481d:	25 80 00 00 00       	and    $0x80,%eax
81004822:	85 c0                	test   %eax,%eax
81004824:	74 11                	je     81004837 <_printf_i+0xa3>
81004826:	8b 45 18             	mov    0x18(%ebp),%eax
81004829:	8b 00                	mov    (%eax),%eax
8100482b:	8d 48 04             	lea    0x4(%eax),%ecx
8100482e:	8b 55 18             	mov    0x18(%ebp),%edx
81004831:	89 0a                	mov    %ecx,(%edx)
81004833:	8b 00                	mov    (%eax),%eax
81004835:	eb 2d                	jmp    81004864 <_printf_i+0xd0>
81004837:	8b 45 0c             	mov    0xc(%ebp),%eax
8100483a:	8b 00                	mov    (%eax),%eax
8100483c:	83 e0 40             	and    $0x40,%eax
8100483f:	85 c0                	test   %eax,%eax
81004841:	74 12                	je     81004855 <_printf_i+0xc1>
81004843:	8b 45 18             	mov    0x18(%ebp),%eax
81004846:	8b 00                	mov    (%eax),%eax
81004848:	8d 48 04             	lea    0x4(%eax),%ecx
8100484b:	8b 55 18             	mov    0x18(%ebp),%edx
8100484e:	89 0a                	mov    %ecx,(%edx)
81004850:	8b 00                	mov    (%eax),%eax
81004852:	98                   	cwtl   
81004853:	eb 0f                	jmp    81004864 <_printf_i+0xd0>
81004855:	8b 45 18             	mov    0x18(%ebp),%eax
81004858:	8b 00                	mov    (%eax),%eax
8100485a:	8d 48 04             	lea    0x4(%eax),%ecx
8100485d:	8b 55 18             	mov    0x18(%ebp),%edx
81004860:	89 0a                	mov    %ecx,(%edx)
81004862:	8b 00                	mov    (%eax),%eax
81004864:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004867:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100486a:	85 c0                	test   %eax,%eax
8100486c:	79 0a                	jns    81004878 <_printf_i+0xe4>
8100486e:	f7 5d f4             	negl   -0xc(%ebp)
81004871:	8b 45 0c             	mov    0xc(%ebp),%eax
81004874:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81004878:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
8100487f:	e9 28 01 00 00       	jmp    810049ac <_printf_i+0x218>
81004884:	8b 45 0c             	mov    0xc(%ebp),%eax
81004887:	8b 00                	mov    (%eax),%eax
81004889:	25 80 00 00 00       	and    $0x80,%eax
8100488e:	85 c0                	test   %eax,%eax
81004890:	74 11                	je     810048a3 <_printf_i+0x10f>
81004892:	8b 45 18             	mov    0x18(%ebp),%eax
81004895:	8b 00                	mov    (%eax),%eax
81004897:	8d 48 04             	lea    0x4(%eax),%ecx
8100489a:	8b 55 18             	mov    0x18(%ebp),%edx
8100489d:	89 0a                	mov    %ecx,(%edx)
8100489f:	8b 00                	mov    (%eax),%eax
810048a1:	eb 2f                	jmp    810048d2 <_printf_i+0x13e>
810048a3:	8b 45 0c             	mov    0xc(%ebp),%eax
810048a6:	8b 00                	mov    (%eax),%eax
810048a8:	83 e0 40             	and    $0x40,%eax
810048ab:	85 c0                	test   %eax,%eax
810048ad:	74 14                	je     810048c3 <_printf_i+0x12f>
810048af:	8b 45 18             	mov    0x18(%ebp),%eax
810048b2:	8b 00                	mov    (%eax),%eax
810048b4:	8d 48 04             	lea    0x4(%eax),%ecx
810048b7:	8b 55 18             	mov    0x18(%ebp),%edx
810048ba:	89 0a                	mov    %ecx,(%edx)
810048bc:	8b 00                	mov    (%eax),%eax
810048be:	0f b7 c0             	movzwl %ax,%eax
810048c1:	eb 0f                	jmp    810048d2 <_printf_i+0x13e>
810048c3:	8b 45 18             	mov    0x18(%ebp),%eax
810048c6:	8b 00                	mov    (%eax),%eax
810048c8:	8d 48 04             	lea    0x4(%eax),%ecx
810048cb:	8b 55 18             	mov    0x18(%ebp),%edx
810048ce:	89 0a                	mov    %ecx,(%edx)
810048d0:	8b 00                	mov    (%eax),%eax
810048d2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810048d5:	8b 45 0c             	mov    0xc(%ebp),%eax
810048d8:	0f b6 40 18          	movzbl 0x18(%eax),%eax
810048dc:	3c 6f                	cmp    $0x6f,%al
810048de:	75 07                	jne    810048e7 <_printf_i+0x153>
810048e0:	b8 08 00 00 00       	mov    $0x8,%eax
810048e5:	eb 05                	jmp    810048ec <_printf_i+0x158>
810048e7:	b8 0a 00 00 00       	mov    $0xa,%eax
810048ec:	89 45 f0             	mov    %eax,-0x10(%ebp)
810048ef:	e9 b1 00 00 00       	jmp    810049a5 <_printf_i+0x211>
810048f4:	8b 45 0c             	mov    0xc(%ebp),%eax
810048f7:	c6 40 45 58          	movb   $0x58,0x45(%eax)
810048fb:	eb 1d                	jmp    8100491a <_printf_i+0x186>
810048fd:	8b 45 0c             	mov    0xc(%ebp),%eax
81004900:	8b 00                	mov    (%eax),%eax
81004902:	83 c8 20             	or     $0x20,%eax
81004905:	89 c2                	mov    %eax,%edx
81004907:	8b 45 0c             	mov    0xc(%ebp),%eax
8100490a:	89 10                	mov    %edx,(%eax)
8100490c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100490f:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81004913:	c7 45 e8 21 7c 00 81 	movl   $0x81007c21,-0x18(%ebp)
8100491a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100491d:	8b 00                	mov    (%eax),%eax
8100491f:	25 80 00 00 00       	and    $0x80,%eax
81004924:	85 c0                	test   %eax,%eax
81004926:	74 11                	je     81004939 <_printf_i+0x1a5>
81004928:	8b 45 18             	mov    0x18(%ebp),%eax
8100492b:	8b 00                	mov    (%eax),%eax
8100492d:	8d 48 04             	lea    0x4(%eax),%ecx
81004930:	8b 55 18             	mov    0x18(%ebp),%edx
81004933:	89 0a                	mov    %ecx,(%edx)
81004935:	8b 00                	mov    (%eax),%eax
81004937:	eb 2f                	jmp    81004968 <_printf_i+0x1d4>
81004939:	8b 45 0c             	mov    0xc(%ebp),%eax
8100493c:	8b 00                	mov    (%eax),%eax
8100493e:	83 e0 40             	and    $0x40,%eax
81004941:	85 c0                	test   %eax,%eax
81004943:	74 14                	je     81004959 <_printf_i+0x1c5>
81004945:	8b 45 18             	mov    0x18(%ebp),%eax
81004948:	8b 00                	mov    (%eax),%eax
8100494a:	8d 48 04             	lea    0x4(%eax),%ecx
8100494d:	8b 55 18             	mov    0x18(%ebp),%edx
81004950:	89 0a                	mov    %ecx,(%edx)
81004952:	8b 00                	mov    (%eax),%eax
81004954:	0f b7 c0             	movzwl %ax,%eax
81004957:	eb 0f                	jmp    81004968 <_printf_i+0x1d4>
81004959:	8b 45 18             	mov    0x18(%ebp),%eax
8100495c:	8b 00                	mov    (%eax),%eax
8100495e:	8d 48 04             	lea    0x4(%eax),%ecx
81004961:	8b 55 18             	mov    0x18(%ebp),%edx
81004964:	89 0a                	mov    %ecx,(%edx)
81004966:	8b 00                	mov    (%eax),%eax
81004968:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100496b:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
81004972:	8b 45 0c             	mov    0xc(%ebp),%eax
81004975:	8b 00                	mov    (%eax),%eax
81004977:	83 e0 01             	and    $0x1,%eax
8100497a:	85 c0                	test   %eax,%eax
8100497c:	74 0f                	je     8100498d <_printf_i+0x1f9>
8100497e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004981:	8b 00                	mov    (%eax),%eax
81004983:	83 c8 20             	or     $0x20,%eax
81004986:	89 c2                	mov    %eax,%edx
81004988:	8b 45 0c             	mov    0xc(%ebp),%eax
8100498b:	89 10                	mov    %edx,(%eax)
8100498d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004991:	75 11                	jne    810049a4 <_printf_i+0x210>
81004993:	8b 45 0c             	mov    0xc(%ebp),%eax
81004996:	8b 00                	mov    (%eax),%eax
81004998:	83 e0 df             	and    $0xffffffdf,%eax
8100499b:	89 c2                	mov    %eax,%edx
8100499d:	8b 45 0c             	mov    0xc(%ebp),%eax
810049a0:	89 10                	mov    %edx,(%eax)
810049a2:	eb 01                	jmp    810049a5 <_printf_i+0x211>
810049a4:	90                   	nop
810049a5:	8b 45 0c             	mov    0xc(%ebp),%eax
810049a8:	c6 40 43 00          	movb   $0x0,0x43(%eax)
810049ac:	8b 45 0c             	mov    0xc(%ebp),%eax
810049af:	8b 50 04             	mov    0x4(%eax),%edx
810049b2:	8b 45 0c             	mov    0xc(%ebp),%eax
810049b5:	89 50 08             	mov    %edx,0x8(%eax)
810049b8:	8b 45 0c             	mov    0xc(%ebp),%eax
810049bb:	8b 40 08             	mov    0x8(%eax),%eax
810049be:	85 c0                	test   %eax,%eax
810049c0:	78 0f                	js     810049d1 <_printf_i+0x23d>
810049c2:	8b 45 0c             	mov    0xc(%ebp),%eax
810049c5:	8b 00                	mov    (%eax),%eax
810049c7:	83 e0 fb             	and    $0xfffffffb,%eax
810049ca:	89 c2                	mov    %eax,%edx
810049cc:	8b 45 0c             	mov    0xc(%ebp),%eax
810049cf:	89 10                	mov    %edx,(%eax)
810049d1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810049d5:	75 0a                	jne    810049e1 <_printf_i+0x24d>
810049d7:	8b 45 0c             	mov    0xc(%ebp),%eax
810049da:	8b 40 04             	mov    0x4(%eax),%eax
810049dd:	85 c0                	test   %eax,%eax
810049df:	74 34                	je     81004a15 <_printf_i+0x281>
810049e1:	8b 4d f0             	mov    -0x10(%ebp),%ecx
810049e4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810049e7:	ba 00 00 00 00       	mov    $0x0,%edx
810049ec:	f7 f1                	div    %ecx
810049ee:	8b 45 e8             	mov    -0x18(%ebp),%eax
810049f1:	01 d0                	add    %edx,%eax
810049f3:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810049f7:	0f b6 10             	movzbl (%eax),%edx
810049fa:	8b 45 ec             	mov    -0x14(%ebp),%eax
810049fd:	88 10                	mov    %dl,(%eax)
810049ff:	8b 5d f0             	mov    -0x10(%ebp),%ebx
81004a02:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004a05:	ba 00 00 00 00       	mov    $0x0,%edx
81004a0a:	f7 f3                	div    %ebx
81004a0c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004a0f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004a13:	75 cc                	jne    810049e1 <_printf_i+0x24d>
81004a15:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81004a19:	75 26                	jne    81004a41 <_printf_i+0x2ad>
81004a1b:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a1e:	8b 00                	mov    (%eax),%eax
81004a20:	83 e0 01             	and    $0x1,%eax
81004a23:	85 c0                	test   %eax,%eax
81004a25:	74 1a                	je     81004a41 <_printf_i+0x2ad>
81004a27:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a2a:	8b 50 04             	mov    0x4(%eax),%edx
81004a2d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a30:	8b 40 10             	mov    0x10(%eax),%eax
81004a33:	39 c2                	cmp    %eax,%edx
81004a35:	7f 0a                	jg     81004a41 <_printf_i+0x2ad>
81004a37:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004a3b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004a3e:	c6 00 30             	movb   $0x30,(%eax)
81004a41:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a44:	83 c0 1b             	add    $0x1b,%eax
81004a47:	83 c0 28             	add    $0x28,%eax
81004a4a:	2b 45 ec             	sub    -0x14(%ebp),%eax
81004a4d:	89 c2                	mov    %eax,%edx
81004a4f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a52:	89 50 10             	mov    %edx,0x10(%eax)
81004a55:	e9 e2 00 00 00       	jmp    81004b3c <_printf_i+0x3a8>
81004a5a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a5d:	8b 00                	mov    (%eax),%eax
81004a5f:	25 80 00 00 00       	and    $0x80,%eax
81004a64:	85 c0                	test   %eax,%eax
81004a66:	74 19                	je     81004a81 <_printf_i+0x2ed>
81004a68:	8b 45 18             	mov    0x18(%ebp),%eax
81004a6b:	8b 00                	mov    (%eax),%eax
81004a6d:	8d 48 04             	lea    0x4(%eax),%ecx
81004a70:	8b 55 18             	mov    0x18(%ebp),%edx
81004a73:	89 0a                	mov    %ecx,(%edx)
81004a75:	8b 00                	mov    (%eax),%eax
81004a77:	8b 55 0c             	mov    0xc(%ebp),%edx
81004a7a:	8b 52 14             	mov    0x14(%edx),%edx
81004a7d:	89 10                	mov    %edx,(%eax)
81004a7f:	eb 3f                	jmp    81004ac0 <_printf_i+0x32c>
81004a81:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a84:	8b 00                	mov    (%eax),%eax
81004a86:	83 e0 40             	and    $0x40,%eax
81004a89:	85 c0                	test   %eax,%eax
81004a8b:	74 1c                	je     81004aa9 <_printf_i+0x315>
81004a8d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a90:	8b 58 14             	mov    0x14(%eax),%ebx
81004a93:	8b 45 18             	mov    0x18(%ebp),%eax
81004a96:	8b 00                	mov    (%eax),%eax
81004a98:	8d 48 04             	lea    0x4(%eax),%ecx
81004a9b:	8b 55 18             	mov    0x18(%ebp),%edx
81004a9e:	89 0a                	mov    %ecx,(%edx)
81004aa0:	8b 00                	mov    (%eax),%eax
81004aa2:	89 da                	mov    %ebx,%edx
81004aa4:	66 89 10             	mov    %dx,(%eax)
81004aa7:	eb 17                	jmp    81004ac0 <_printf_i+0x32c>
81004aa9:	8b 45 18             	mov    0x18(%ebp),%eax
81004aac:	8b 00                	mov    (%eax),%eax
81004aae:	8d 48 04             	lea    0x4(%eax),%ecx
81004ab1:	8b 55 18             	mov    0x18(%ebp),%edx
81004ab4:	89 0a                	mov    %ecx,(%edx)
81004ab6:	8b 00                	mov    (%eax),%eax
81004ab8:	8b 55 0c             	mov    0xc(%ebp),%edx
81004abb:	8b 52 14             	mov    0x14(%edx),%edx
81004abe:	89 10                	mov    %edx,(%eax)
81004ac0:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ac3:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81004aca:	eb 70                	jmp    81004b3c <_printf_i+0x3a8>
81004acc:	8b 45 18             	mov    0x18(%ebp),%eax
81004acf:	8b 00                	mov    (%eax),%eax
81004ad1:	8d 48 04             	lea    0x4(%eax),%ecx
81004ad4:	8b 55 18             	mov    0x18(%ebp),%edx
81004ad7:	89 0a                	mov    %ecx,(%edx)
81004ad9:	8b 00                	mov    (%eax),%eax
81004adb:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004ade:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ae1:	8b 40 04             	mov    0x4(%eax),%eax
81004ae4:	83 ec 04             	sub    $0x4,%esp
81004ae7:	50                   	push   %eax
81004ae8:	6a 00                	push   $0x0
81004aea:	ff 75 ec             	push   -0x14(%ebp)
81004aed:	e8 de f3 ff ff       	call   81003ed0 <memchr>
81004af2:	83 c4 10             	add    $0x10,%esp
81004af5:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004af8:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81004afc:	74 0e                	je     81004b0c <_printf_i+0x378>
81004afe:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004b01:	2b 45 ec             	sub    -0x14(%ebp),%eax
81004b04:	89 c2                	mov    %eax,%edx
81004b06:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b09:	89 50 04             	mov    %edx,0x4(%eax)
81004b0c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b0f:	8b 50 04             	mov    0x4(%eax),%edx
81004b12:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b15:	89 50 10             	mov    %edx,0x10(%eax)
81004b18:	eb 1a                	jmp    81004b34 <_printf_i+0x3a0>
81004b1a:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004b1e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b21:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81004b25:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004b28:	88 10                	mov    %dl,(%eax)
81004b2a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b2d:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81004b34:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b37:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81004b3b:	90                   	nop
81004b3c:	83 ec 0c             	sub    $0xc,%esp
81004b3f:	ff 75 14             	push   0x14(%ebp)
81004b42:	ff 75 10             	push   0x10(%ebp)
81004b45:	8d 45 d8             	lea    -0x28(%ebp),%eax
81004b48:	50                   	push   %eax
81004b49:	ff 75 0c             	push   0xc(%ebp)
81004b4c:	ff 75 08             	push   0x8(%ebp)
81004b4f:	e8 a5 fa ff ff       	call   810045f9 <_printf_common>
81004b54:	83 c4 20             	add    $0x20,%esp
81004b57:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004b5a:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
81004b5e:	74 72                	je     81004bd2 <_printf_i+0x43e>
81004b60:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b63:	8b 40 10             	mov    0x10(%eax),%eax
81004b66:	50                   	push   %eax
81004b67:	ff 75 ec             	push   -0x14(%ebp)
81004b6a:	ff 75 10             	push   0x10(%ebp)
81004b6d:	ff 75 08             	push   0x8(%ebp)
81004b70:	8b 45 14             	mov    0x14(%ebp),%eax
81004b73:	ff d0                	call   *%eax
81004b75:	83 c4 10             	add    $0x10,%esp
81004b78:	83 f8 ff             	cmp    $0xffffffff,%eax
81004b7b:	74 58                	je     81004bd5 <_printf_i+0x441>
81004b7d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b80:	8b 00                	mov    (%eax),%eax
81004b82:	83 e0 02             	and    $0x2,%eax
81004b85:	85 c0                	test   %eax,%eax
81004b87:	74 39                	je     81004bc2 <_printf_i+0x42e>
81004b89:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81004b90:	eb 20                	jmp    81004bb2 <_printf_i+0x41e>
81004b92:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b95:	83 c0 19             	add    $0x19,%eax
81004b98:	6a 01                	push   $0x1
81004b9a:	50                   	push   %eax
81004b9b:	ff 75 10             	push   0x10(%ebp)
81004b9e:	ff 75 08             	push   0x8(%ebp)
81004ba1:	8b 45 14             	mov    0x14(%ebp),%eax
81004ba4:	ff d0                	call   *%eax
81004ba6:	83 c4 10             	add    $0x10,%esp
81004ba9:	83 f8 ff             	cmp    $0xffffffff,%eax
81004bac:	74 2a                	je     81004bd8 <_printf_i+0x444>
81004bae:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81004bb2:	8b 45 0c             	mov    0xc(%ebp),%eax
81004bb5:	8b 40 0c             	mov    0xc(%eax),%eax
81004bb8:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004bbb:	29 d0                	sub    %edx,%eax
81004bbd:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81004bc0:	7c d0                	jl     81004b92 <_printf_i+0x3fe>
81004bc2:	8b 45 0c             	mov    0xc(%ebp),%eax
81004bc5:	8b 50 0c             	mov    0xc(%eax),%edx
81004bc8:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004bcb:	39 c2                	cmp    %eax,%edx
81004bcd:	0f 4d c2             	cmovge %edx,%eax
81004bd0:	eb 0c                	jmp    81004bde <_printf_i+0x44a>
81004bd2:	90                   	nop
81004bd3:	eb 04                	jmp    81004bd9 <_printf_i+0x445>
81004bd5:	90                   	nop
81004bd6:	eb 01                	jmp    81004bd9 <_printf_i+0x445>
81004bd8:	90                   	nop
81004bd9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004bde:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004be1:	c9                   	leave  
81004be2:	c3                   	ret    

81004be3 <_open_r>:
81004be3:	55                   	push   %ebp
81004be4:	89 e5                	mov    %esp,%ebp
81004be6:	83 ec 18             	sub    $0x18,%esp
81004be9:	c7 05 ec 8f 00 81 00 	movl   $0x0,0x81008fec
81004bf0:	00 00 00 
81004bf3:	83 ec 04             	sub    $0x4,%esp
81004bf6:	ff 75 14             	push   0x14(%ebp)
81004bf9:	ff 75 10             	push   0x10(%ebp)
81004bfc:	ff 75 0c             	push   0xc(%ebp)
81004bff:	e8 1a be ff ff       	call   81000a1e <open>
81004c04:	83 c4 10             	add    $0x10,%esp
81004c07:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004c0a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004c0e:	75 14                	jne    81004c24 <_open_r+0x41>
81004c10:	a1 ec 8f 00 81       	mov    0x81008fec,%eax
81004c15:	85 c0                	test   %eax,%eax
81004c17:	74 0b                	je     81004c24 <_open_r+0x41>
81004c19:	8b 15 ec 8f 00 81    	mov    0x81008fec,%edx
81004c1f:	8b 45 08             	mov    0x8(%ebp),%eax
81004c22:	89 10                	mov    %edx,(%eax)
81004c24:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c27:	c9                   	leave  
81004c28:	c3                   	ret    

81004c29 <_iprintf_r>:
81004c29:	55                   	push   %ebp
81004c2a:	89 e5                	mov    %esp,%ebp
81004c2c:	83 ec 18             	sub    $0x18,%esp
81004c2f:	8d 45 10             	lea    0x10(%ebp),%eax
81004c32:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004c35:	8b 55 f0             	mov    -0x10(%ebp),%edx
81004c38:	8b 45 08             	mov    0x8(%ebp),%eax
81004c3b:	8b 40 08             	mov    0x8(%eax),%eax
81004c3e:	52                   	push   %edx
81004c3f:	ff 75 0c             	push   0xc(%ebp)
81004c42:	50                   	push   %eax
81004c43:	ff 75 08             	push   0x8(%ebp)
81004c46:	e8 58 f6 ff ff       	call   810042a3 <_vfiprintf_r>
81004c4b:	83 c4 10             	add    $0x10,%esp
81004c4e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004c51:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c54:	c9                   	leave  
81004c55:	c3                   	ret    

81004c56 <iprintf>:
81004c56:	55                   	push   %ebp
81004c57:	89 e5                	mov    %esp,%ebp
81004c59:	83 ec 18             	sub    $0x18,%esp
81004c5c:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81004c61:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004c64:	8d 45 0c             	lea    0xc(%ebp),%eax
81004c67:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004c6a:	8b 55 ec             	mov    -0x14(%ebp),%edx
81004c6d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c70:	8b 40 08             	mov    0x8(%eax),%eax
81004c73:	52                   	push   %edx
81004c74:	ff 75 08             	push   0x8(%ebp)
81004c77:	50                   	push   %eax
81004c78:	ff 75 f4             	push   -0xc(%ebp)
81004c7b:	e8 23 f6 ff ff       	call   810042a3 <_vfiprintf_r>
81004c80:	83 c4 10             	add    $0x10,%esp
81004c83:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004c86:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004c89:	c9                   	leave  
81004c8a:	c3                   	ret    

81004c8b <_puts_r>:
81004c8b:	55                   	push   %ebp
81004c8c:	89 e5                	mov    %esp,%ebp
81004c8e:	83 ec 38             	sub    $0x38,%esp
81004c91:	83 ec 0c             	sub    $0xc,%esp
81004c94:	ff 75 0c             	push   0xc(%ebp)
81004c97:	e8 c4 09 00 00       	call   81005660 <strlen>
81004c9c:	83 c4 10             	add    $0x10,%esp
81004c9f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004ca2:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ca5:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004ca8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004cab:	89 45 d0             	mov    %eax,-0x30(%ebp)
81004cae:	c7 45 d4 b8 7c 00 81 	movl   $0x81007cb8,-0x2c(%ebp)
81004cb5:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81004cbc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004cbf:	83 c0 01             	add    $0x1,%eax
81004cc2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004cc5:	8d 45 cc             	lea    -0x34(%ebp),%eax
81004cc8:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004ccb:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
81004cd2:	8b 45 08             	mov    0x8(%ebp),%eax
81004cd5:	8b 40 08             	mov    0x8(%eax),%eax
81004cd8:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004cdb:	8b 45 08             	mov    0x8(%ebp),%eax
81004cde:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004ce1:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81004ce5:	74 18                	je     81004cff <_puts_r+0x74>
81004ce7:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004cea:	8b 40 38             	mov    0x38(%eax),%eax
81004ced:	85 c0                	test   %eax,%eax
81004cef:	75 0e                	jne    81004cff <_puts_r+0x74>
81004cf1:	83 ec 0c             	sub    $0xc,%esp
81004cf4:	ff 75 ec             	push   -0x14(%ebp)
81004cf7:	e8 99 c8 ff ff       	call   81001595 <__sinit>
81004cfc:	83 c4 10             	add    $0x10,%esp
81004cff:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004d02:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004d06:	98                   	cwtl   
81004d07:	25 00 20 00 00       	and    $0x2000,%eax
81004d0c:	85 c0                	test   %eax,%eax
81004d0e:	75 24                	jne    81004d34 <_puts_r+0xa9>
81004d10:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004d13:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004d17:	80 cc 20             	or     $0x20,%ah
81004d1a:	89 c2                	mov    %eax,%edx
81004d1c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004d1f:	66 89 50 0c          	mov    %dx,0xc(%eax)
81004d23:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004d26:	8b 40 64             	mov    0x64(%eax),%eax
81004d29:	80 e4 df             	and    $0xdf,%ah
81004d2c:	89 c2                	mov    %eax,%edx
81004d2e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004d31:	89 50 64             	mov    %edx,0x64(%eax)
81004d34:	83 ec 04             	sub    $0x4,%esp
81004d37:	8d 45 dc             	lea    -0x24(%ebp),%eax
81004d3a:	50                   	push   %eax
81004d3b:	ff 75 f0             	push   -0x10(%ebp)
81004d3e:	ff 75 08             	push   0x8(%ebp)
81004d41:	e8 f4 14 00 00       	call   8100623a <__sfvwrite_r>
81004d46:	83 c4 10             	add    $0x10,%esp
81004d49:	85 c0                	test   %eax,%eax
81004d4b:	74 07                	je     81004d54 <_puts_r+0xc9>
81004d4d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004d52:	eb 05                	jmp    81004d59 <_puts_r+0xce>
81004d54:	b8 0a 00 00 00       	mov    $0xa,%eax
81004d59:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004d5c:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004d5f:	c9                   	leave  
81004d60:	c3                   	ret    

81004d61 <puts>:
81004d61:	55                   	push   %ebp
81004d62:	89 e5                	mov    %esp,%ebp
81004d64:	83 ec 08             	sub    $0x8,%esp
81004d67:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81004d6c:	83 ec 08             	sub    $0x8,%esp
81004d6f:	ff 75 08             	push   0x8(%ebp)
81004d72:	50                   	push   %eax
81004d73:	e8 13 ff ff ff       	call   81004c8b <_puts_r>
81004d78:	83 c4 10             	add    $0x10,%esp
81004d7b:	c9                   	leave  
81004d7c:	c3                   	ret    

81004d7d <cleanup_glue>:
81004d7d:	55                   	push   %ebp
81004d7e:	89 e5                	mov    %esp,%ebp
81004d80:	83 ec 08             	sub    $0x8,%esp
81004d83:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d86:	8b 00                	mov    (%eax),%eax
81004d88:	85 c0                	test   %eax,%eax
81004d8a:	74 14                	je     81004da0 <cleanup_glue+0x23>
81004d8c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d8f:	8b 00                	mov    (%eax),%eax
81004d91:	83 ec 08             	sub    $0x8,%esp
81004d94:	50                   	push   %eax
81004d95:	ff 75 08             	push   0x8(%ebp)
81004d98:	e8 e0 ff ff ff       	call   81004d7d <cleanup_glue>
81004d9d:	83 c4 10             	add    $0x10,%esp
81004da0:	83 ec 08             	sub    $0x8,%esp
81004da3:	ff 75 0c             	push   0xc(%ebp)
81004da6:	ff 75 08             	push   0x8(%ebp)
81004da9:	e8 3d ca ff ff       	call   810017eb <_free_r>
81004dae:	83 c4 10             	add    $0x10,%esp
81004db1:	90                   	nop
81004db2:	c9                   	leave  
81004db3:	c3                   	ret    

81004db4 <_reclaim_reent>:
81004db4:	55                   	push   %ebp
81004db5:	89 e5                	mov    %esp,%ebp
81004db7:	83 ec 28             	sub    $0x28,%esp
81004dba:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81004dbf:	39 45 08             	cmp    %eax,0x8(%ebp)
81004dc2:	0f 84 49 01 00 00    	je     81004f11 <_reclaim_reent+0x15d>
81004dc8:	8b 45 08             	mov    0x8(%ebp),%eax
81004dcb:	8b 40 4c             	mov    0x4c(%eax),%eax
81004dce:	85 c0                	test   %eax,%eax
81004dd0:	74 64                	je     81004e36 <_reclaim_reent+0x82>
81004dd2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004dd9:	eb 3e                	jmp    81004e19 <_reclaim_reent+0x65>
81004ddb:	8b 45 08             	mov    0x8(%ebp),%eax
81004dde:	8b 50 4c             	mov    0x4c(%eax),%edx
81004de1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004de4:	c1 e0 02             	shl    $0x2,%eax
81004de7:	01 d0                	add    %edx,%eax
81004de9:	8b 00                	mov    (%eax),%eax
81004deb:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004dee:	eb 1f                	jmp    81004e0f <_reclaim_reent+0x5b>
81004df0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004df3:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004df6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004df9:	8b 00                	mov    (%eax),%eax
81004dfb:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004dfe:	83 ec 08             	sub    $0x8,%esp
81004e01:	ff 75 e8             	push   -0x18(%ebp)
81004e04:	ff 75 08             	push   0x8(%ebp)
81004e07:	e8 df c9 ff ff       	call   810017eb <_free_r>
81004e0c:	83 c4 10             	add    $0x10,%esp
81004e0f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004e13:	75 db                	jne    81004df0 <_reclaim_reent+0x3c>
81004e15:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81004e19:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004e1c:	83 f8 1f             	cmp    $0x1f,%eax
81004e1f:	76 ba                	jbe    81004ddb <_reclaim_reent+0x27>
81004e21:	8b 45 08             	mov    0x8(%ebp),%eax
81004e24:	8b 40 4c             	mov    0x4c(%eax),%eax
81004e27:	83 ec 08             	sub    $0x8,%esp
81004e2a:	50                   	push   %eax
81004e2b:	ff 75 08             	push   0x8(%ebp)
81004e2e:	e8 b8 c9 ff ff       	call   810017eb <_free_r>
81004e33:	83 c4 10             	add    $0x10,%esp
81004e36:	8b 45 08             	mov    0x8(%ebp),%eax
81004e39:	8b 40 40             	mov    0x40(%eax),%eax
81004e3c:	85 c0                	test   %eax,%eax
81004e3e:	74 15                	je     81004e55 <_reclaim_reent+0xa1>
81004e40:	8b 45 08             	mov    0x8(%ebp),%eax
81004e43:	8b 40 40             	mov    0x40(%eax),%eax
81004e46:	83 ec 08             	sub    $0x8,%esp
81004e49:	50                   	push   %eax
81004e4a:	ff 75 08             	push   0x8(%ebp)
81004e4d:	e8 99 c9 ff ff       	call   810017eb <_free_r>
81004e52:	83 c4 10             	add    $0x10,%esp
81004e55:	8b 45 08             	mov    0x8(%ebp),%eax
81004e58:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81004e5e:	85 c0                	test   %eax,%eax
81004e60:	74 50                	je     81004eb2 <_reclaim_reent+0xfe>
81004e62:	8b 45 08             	mov    0x8(%ebp),%eax
81004e65:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81004e6b:	8b 55 08             	mov    0x8(%ebp),%edx
81004e6e:	81 c2 4c 01 00 00    	add    $0x14c,%edx
81004e74:	39 d0                	cmp    %edx,%eax
81004e76:	74 3a                	je     81004eb2 <_reclaim_reent+0xfe>
81004e78:	8b 45 08             	mov    0x8(%ebp),%eax
81004e7b:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81004e81:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004e84:	eb 1f                	jmp    81004ea5 <_reclaim_reent+0xf1>
81004e86:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004e89:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004e8c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004e8f:	8b 00                	mov    (%eax),%eax
81004e91:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004e94:	83 ec 08             	sub    $0x8,%esp
81004e97:	ff 75 e4             	push   -0x1c(%ebp)
81004e9a:	ff 75 08             	push   0x8(%ebp)
81004e9d:	e8 49 c9 ff ff       	call   810017eb <_free_r>
81004ea2:	83 c4 10             	add    $0x10,%esp
81004ea5:	8b 45 08             	mov    0x8(%ebp),%eax
81004ea8:	05 4c 01 00 00       	add    $0x14c,%eax
81004ead:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81004eb0:	75 d4                	jne    81004e86 <_reclaim_reent+0xd2>
81004eb2:	8b 45 08             	mov    0x8(%ebp),%eax
81004eb5:	8b 40 54             	mov    0x54(%eax),%eax
81004eb8:	85 c0                	test   %eax,%eax
81004eba:	74 15                	je     81004ed1 <_reclaim_reent+0x11d>
81004ebc:	8b 45 08             	mov    0x8(%ebp),%eax
81004ebf:	8b 40 54             	mov    0x54(%eax),%eax
81004ec2:	83 ec 08             	sub    $0x8,%esp
81004ec5:	50                   	push   %eax
81004ec6:	ff 75 08             	push   0x8(%ebp)
81004ec9:	e8 1d c9 ff ff       	call   810017eb <_free_r>
81004ece:	83 c4 10             	add    $0x10,%esp
81004ed1:	8b 45 08             	mov    0x8(%ebp),%eax
81004ed4:	8b 40 38             	mov    0x38(%eax),%eax
81004ed7:	85 c0                	test   %eax,%eax
81004ed9:	74 36                	je     81004f11 <_reclaim_reent+0x15d>
81004edb:	8b 45 08             	mov    0x8(%ebp),%eax
81004ede:	8b 40 3c             	mov    0x3c(%eax),%eax
81004ee1:	83 ec 0c             	sub    $0xc,%esp
81004ee4:	ff 75 08             	push   0x8(%ebp)
81004ee7:	ff d0                	call   *%eax
81004ee9:	83 c4 10             	add    $0x10,%esp
81004eec:	8b 45 08             	mov    0x8(%ebp),%eax
81004eef:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81004ef5:	85 c0                	test   %eax,%eax
81004ef7:	74 18                	je     81004f11 <_reclaim_reent+0x15d>
81004ef9:	8b 45 08             	mov    0x8(%ebp),%eax
81004efc:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81004f02:	83 ec 08             	sub    $0x8,%esp
81004f05:	50                   	push   %eax
81004f06:	ff 75 08             	push   0x8(%ebp)
81004f09:	e8 6f fe ff ff       	call   81004d7d <cleanup_glue>
81004f0e:	83 c4 10             	add    $0x10,%esp
81004f11:	90                   	nop
81004f12:	c9                   	leave  
81004f13:	c3                   	ret    

81004f14 <lflush>:
81004f14:	55                   	push   %ebp
81004f15:	89 e5                	mov    %esp,%ebp
81004f17:	83 ec 08             	sub    $0x8,%esp
81004f1a:	8b 45 08             	mov    0x8(%ebp),%eax
81004f1d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004f21:	98                   	cwtl   
81004f22:	83 e0 09             	and    $0x9,%eax
81004f25:	83 f8 09             	cmp    $0x9,%eax
81004f28:	75 10                	jne    81004f3a <lflush+0x26>
81004f2a:	83 ec 0c             	sub    $0xc,%esp
81004f2d:	ff 75 08             	push   0x8(%ebp)
81004f30:	e8 b5 c1 ff ff       	call   810010ea <fflush>
81004f35:	83 c4 10             	add    $0x10,%esp
81004f38:	eb 05                	jmp    81004f3f <lflush+0x2b>
81004f3a:	b8 00 00 00 00       	mov    $0x0,%eax
81004f3f:	c9                   	leave  
81004f40:	c3                   	ret    

81004f41 <__srefill_r>:
81004f41:	55                   	push   %ebp
81004f42:	89 e5                	mov    %esp,%ebp
81004f44:	56                   	push   %esi
81004f45:	53                   	push   %ebx
81004f46:	83 ec 10             	sub    $0x10,%esp
81004f49:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004f4c:	8b 45 08             	mov    0x8(%ebp),%eax
81004f4f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004f52:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004f56:	74 18                	je     81004f70 <__srefill_r+0x2f>
81004f58:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004f5b:	8b 40 38             	mov    0x38(%eax),%eax
81004f5e:	85 c0                	test   %eax,%eax
81004f60:	75 0e                	jne    81004f70 <__srefill_r+0x2f>
81004f62:	83 ec 0c             	sub    $0xc,%esp
81004f65:	ff 75 f4             	push   -0xc(%ebp)
81004f68:	e8 28 c6 ff ff       	call   81001595 <__sinit>
81004f6d:	83 c4 10             	add    $0x10,%esp
81004f70:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004f74:	98                   	cwtl   
81004f75:	25 00 20 00 00       	and    $0x2000,%eax
81004f7a:	85 c0                	test   %eax,%eax
81004f7c:	75 14                	jne    81004f92 <__srefill_r+0x51>
81004f7e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004f82:	80 cc 20             	or     $0x20,%ah
81004f85:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004f89:	8b 43 64             	mov    0x64(%ebx),%eax
81004f8c:	80 e4 df             	and    $0xdf,%ah
81004f8f:	89 43 64             	mov    %eax,0x64(%ebx)
81004f92:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004f99:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004f9d:	98                   	cwtl   
81004f9e:	83 e0 20             	and    $0x20,%eax
81004fa1:	85 c0                	test   %eax,%eax
81004fa3:	74 0a                	je     81004faf <__srefill_r+0x6e>
81004fa5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004faa:	e9 8c 01 00 00       	jmp    8100513b <__srefill_r+0x1fa>
81004faf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004fb3:	98                   	cwtl   
81004fb4:	83 e0 04             	and    $0x4,%eax
81004fb7:	85 c0                	test   %eax,%eax
81004fb9:	75 79                	jne    81005034 <__srefill_r+0xf3>
81004fbb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004fbf:	98                   	cwtl   
81004fc0:	83 e0 10             	and    $0x10,%eax
81004fc3:	85 c0                	test   %eax,%eax
81004fc5:	75 1e                	jne    81004fe5 <__srefill_r+0xa4>
81004fc7:	8b 45 08             	mov    0x8(%ebp),%eax
81004fca:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81004fd0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004fd4:	83 c8 40             	or     $0x40,%eax
81004fd7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004fdb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004fe0:	e9 56 01 00 00       	jmp    8100513b <__srefill_r+0x1fa>
81004fe5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004fe9:	98                   	cwtl   
81004fea:	83 e0 08             	and    $0x8,%eax
81004fed:	85 c0                	test   %eax,%eax
81004fef:	74 36                	je     81005027 <__srefill_r+0xe6>
81004ff1:	83 ec 08             	sub    $0x8,%esp
81004ff4:	53                   	push   %ebx
81004ff5:	ff 75 08             	push   0x8(%ebp)
81004ff8:	e8 95 c0 ff ff       	call   81001092 <_fflush_r>
81004ffd:	83 c4 10             	add    $0x10,%esp
81005000:	85 c0                	test   %eax,%eax
81005002:	74 0a                	je     8100500e <__srefill_r+0xcd>
81005004:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005009:	e9 2d 01 00 00       	jmp    8100513b <__srefill_r+0x1fa>
8100500e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005012:	83 e0 f7             	and    $0xfffffff7,%eax
81005015:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005019:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005020:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
81005027:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100502b:	83 c8 04             	or     $0x4,%eax
8100502e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005032:	eb 46                	jmp    8100507a <__srefill_r+0x139>
81005034:	8b 43 30             	mov    0x30(%ebx),%eax
81005037:	85 c0                	test   %eax,%eax
81005039:	74 3f                	je     8100507a <__srefill_r+0x139>
8100503b:	8b 53 30             	mov    0x30(%ebx),%edx
8100503e:	8d 43 40             	lea    0x40(%ebx),%eax
81005041:	39 c2                	cmp    %eax,%edx
81005043:	74 12                	je     81005057 <__srefill_r+0x116>
81005045:	8b 43 30             	mov    0x30(%ebx),%eax
81005048:	83 ec 08             	sub    $0x8,%esp
8100504b:	50                   	push   %eax
8100504c:	ff 75 08             	push   0x8(%ebp)
8100504f:	e8 97 c7 ff ff       	call   810017eb <_free_r>
81005054:	83 c4 10             	add    $0x10,%esp
81005057:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100505e:	8b 43 3c             	mov    0x3c(%ebx),%eax
81005061:	89 43 04             	mov    %eax,0x4(%ebx)
81005064:	8b 43 04             	mov    0x4(%ebx),%eax
81005067:	85 c0                	test   %eax,%eax
81005069:	74 0f                	je     8100507a <__srefill_r+0x139>
8100506b:	8b 43 38             	mov    0x38(%ebx),%eax
8100506e:	89 03                	mov    %eax,(%ebx)
81005070:	b8 00 00 00 00       	mov    $0x0,%eax
81005075:	e9 c1 00 00 00       	jmp    8100513b <__srefill_r+0x1fa>
8100507a:	8b 43 10             	mov    0x10(%ebx),%eax
8100507d:	85 c0                	test   %eax,%eax
8100507f:	75 0f                	jne    81005090 <__srefill_r+0x14f>
81005081:	83 ec 08             	sub    $0x8,%esp
81005084:	53                   	push   %ebx
81005085:	ff 75 08             	push   0x8(%ebp)
81005088:	e8 d5 e1 ff ff       	call   81003262 <__smakebuf_r>
8100508d:	83 c4 10             	add    $0x10,%esp
81005090:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005094:	98                   	cwtl   
81005095:	83 e0 03             	and    $0x3,%eax
81005098:	85 c0                	test   %eax,%eax
8100509a:	74 48                	je     810050e4 <__srefill_r+0x1a3>
8100509c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810050a0:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
810050a4:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
810050aa:	a1 f8 7b 00 81       	mov    0x81007bf8,%eax
810050af:	83 ec 08             	sub    $0x8,%esp
810050b2:	68 14 4f 00 81       	push   $0x81004f14
810050b7:	50                   	push   %eax
810050b8:	e8 bb d1 ff ff       	call   81002278 <_fwalk>
810050bd:	83 c4 10             	add    $0x10,%esp
810050c0:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
810050c4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810050c8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810050cc:	98                   	cwtl   
810050cd:	83 e0 09             	and    $0x9,%eax
810050d0:	83 f8 09             	cmp    $0x9,%eax
810050d3:	75 0f                	jne    810050e4 <__srefill_r+0x1a3>
810050d5:	83 ec 08             	sub    $0x8,%esp
810050d8:	53                   	push   %ebx
810050d9:	ff 75 08             	push   0x8(%ebp)
810050dc:	e8 8b bd ff ff       	call   81000e6c <__sflush_r>
810050e1:	83 c4 10             	add    $0x10,%esp
810050e4:	8b 43 10             	mov    0x10(%ebx),%eax
810050e7:	89 03                	mov    %eax,(%ebx)
810050e9:	8b 43 20             	mov    0x20(%ebx),%eax
810050ec:	8b 73 14             	mov    0x14(%ebx),%esi
810050ef:	8b 0b                	mov    (%ebx),%ecx
810050f1:	8b 53 1c             	mov    0x1c(%ebx),%edx
810050f4:	56                   	push   %esi
810050f5:	51                   	push   %ecx
810050f6:	52                   	push   %edx
810050f7:	ff 75 08             	push   0x8(%ebp)
810050fa:	ff d0                	call   *%eax
810050fc:	83 c4 10             	add    $0x10,%esp
810050ff:	89 43 04             	mov    %eax,0x4(%ebx)
81005102:	8b 43 04             	mov    0x4(%ebx),%eax
81005105:	85 c0                	test   %eax,%eax
81005107:	7f 2d                	jg     81005136 <__srefill_r+0x1f5>
81005109:	8b 43 04             	mov    0x4(%ebx),%eax
8100510c:	85 c0                	test   %eax,%eax
8100510e:	75 0d                	jne    8100511d <__srefill_r+0x1dc>
81005110:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005114:	83 c8 20             	or     $0x20,%eax
81005117:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100511b:	eb 12                	jmp    8100512f <__srefill_r+0x1ee>
8100511d:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81005124:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005128:	83 c8 40             	or     $0x40,%eax
8100512b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100512f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005134:	eb 05                	jmp    8100513b <__srefill_r+0x1fa>
81005136:	b8 00 00 00 00       	mov    $0x0,%eax
8100513b:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100513e:	5b                   	pop    %ebx
8100513f:	5e                   	pop    %esi
81005140:	5d                   	pop    %ebp
81005141:	c3                   	ret    

81005142 <_sbrk_r>:
81005142:	55                   	push   %ebp
81005143:	89 e5                	mov    %esp,%ebp
81005145:	83 ec 18             	sub    $0x18,%esp
81005148:	c7 05 ec 8f 00 81 00 	movl   $0x0,0x81008fec
8100514f:	00 00 00 
81005152:	83 ec 0c             	sub    $0xc,%esp
81005155:	ff 75 0c             	push   0xc(%ebp)
81005158:	e8 d8 b9 ff ff       	call   81000b35 <sbrk>
8100515d:	83 c4 10             	add    $0x10,%esp
81005160:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005163:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81005167:	75 14                	jne    8100517d <_sbrk_r+0x3b>
81005169:	a1 ec 8f 00 81       	mov    0x81008fec,%eax
8100516e:	85 c0                	test   %eax,%eax
81005170:	74 0b                	je     8100517d <_sbrk_r+0x3b>
81005172:	8b 15 ec 8f 00 81    	mov    0x81008fec,%edx
81005178:	8b 45 08             	mov    0x8(%ebp),%eax
8100517b:	89 10                	mov    %edx,(%eax)
8100517d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005180:	c9                   	leave  
81005181:	c3                   	ret    

81005182 <setvbuf>:
81005182:	55                   	push   %ebp
81005183:	89 e5                	mov    %esp,%ebp
81005185:	57                   	push   %edi
81005186:	56                   	push   %esi
81005187:	53                   	push   %ebx
81005188:	83 ec 2c             	sub    $0x2c,%esp
8100518b:	8b 5d 08             	mov    0x8(%ebp),%ebx
8100518e:	8b 7d 10             	mov    0x10(%ebp),%edi
81005191:	8b 75 14             	mov    0x14(%ebp),%esi
81005194:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100519b:	a1 a4 83 00 81       	mov    0x810083a4,%eax
810051a0:	89 45 e0             	mov    %eax,-0x20(%ebp)
810051a3:	8b 45 e0             	mov    -0x20(%ebp),%eax
810051a6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810051a9:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810051ad:	74 18                	je     810051c7 <setvbuf+0x45>
810051af:	8b 45 dc             	mov    -0x24(%ebp),%eax
810051b2:	8b 40 38             	mov    0x38(%eax),%eax
810051b5:	85 c0                	test   %eax,%eax
810051b7:	75 0e                	jne    810051c7 <setvbuf+0x45>
810051b9:	83 ec 0c             	sub    $0xc,%esp
810051bc:	ff 75 dc             	push   -0x24(%ebp)
810051bf:	e8 d1 c3 ff ff       	call   81001595 <__sinit>
810051c4:	83 c4 10             	add    $0x10,%esp
810051c7:	83 ff 02             	cmp    $0x2,%edi
810051ca:	74 19                	je     810051e5 <setvbuf+0x63>
810051cc:	85 ff                	test   %edi,%edi
810051ce:	74 05                	je     810051d5 <setvbuf+0x53>
810051d0:	83 ff 01             	cmp    $0x1,%edi
810051d3:	75 06                	jne    810051db <setvbuf+0x59>
810051d5:	89 f0                	mov    %esi,%eax
810051d7:	85 c0                	test   %eax,%eax
810051d9:	79 0a                	jns    810051e5 <setvbuf+0x63>
810051db:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810051e0:	e9 a1 01 00 00       	jmp    81005386 <setvbuf+0x204>
810051e5:	83 ec 08             	sub    $0x8,%esp
810051e8:	53                   	push   %ebx
810051e9:	ff 75 e0             	push   -0x20(%ebp)
810051ec:	e8 a1 be ff ff       	call   81001092 <_fflush_r>
810051f1:	83 c4 10             	add    $0x10,%esp
810051f4:	8b 43 30             	mov    0x30(%ebx),%eax
810051f7:	85 c0                	test   %eax,%eax
810051f9:	74 23                	je     8100521e <setvbuf+0x9c>
810051fb:	8b 53 30             	mov    0x30(%ebx),%edx
810051fe:	8d 43 40             	lea    0x40(%ebx),%eax
81005201:	39 c2                	cmp    %eax,%edx
81005203:	74 12                	je     81005217 <setvbuf+0x95>
81005205:	8b 43 30             	mov    0x30(%ebx),%eax
81005208:	83 ec 08             	sub    $0x8,%esp
8100520b:	50                   	push   %eax
8100520c:	ff 75 e0             	push   -0x20(%ebp)
8100520f:	e8 d7 c5 ff ff       	call   810017eb <_free_r>
81005214:	83 c4 10             	add    $0x10,%esp
81005217:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100521e:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
81005225:	8b 43 18             	mov    0x18(%ebx),%eax
81005228:	89 43 04             	mov    %eax,0x4(%ebx)
8100522b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100522f:	98                   	cwtl   
81005230:	25 80 00 00 00       	and    $0x80,%eax
81005235:	85 c0                	test   %eax,%eax
81005237:	74 12                	je     8100524b <setvbuf+0xc9>
81005239:	8b 43 10             	mov    0x10(%ebx),%eax
8100523c:	83 ec 08             	sub    $0x8,%esp
8100523f:	50                   	push   %eax
81005240:	ff 75 e0             	push   -0x20(%ebp)
81005243:	e8 a3 c5 ff ff       	call   810017eb <_free_r>
81005248:	83 c4 10             	add    $0x10,%esp
8100524b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100524f:	66 25 5c f3          	and    $0xf35c,%ax
81005253:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005257:	83 ff 02             	cmp    $0x2,%edi
8100525a:	74 6f                	je     810052cb <setvbuf+0x149>
8100525c:	8d 45 d4             	lea    -0x2c(%ebp),%eax
8100525f:	50                   	push   %eax
81005260:	8d 45 d8             	lea    -0x28(%ebp),%eax
81005263:	50                   	push   %eax
81005264:	53                   	push   %ebx
81005265:	ff 75 e0             	push   -0x20(%ebp)
81005268:	e8 e2 e0 ff ff       	call   8100334f <__swhatbuf_r>
8100526d:	83 c4 10             	add    $0x10,%esp
81005270:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81005274:	09 d0                	or     %edx,%eax
81005276:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100527a:	85 f6                	test   %esi,%esi
8100527c:	75 0a                	jne    81005288 <setvbuf+0x106>
8100527e:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
81005285:	8b 75 d8             	mov    -0x28(%ebp),%esi
81005288:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100528c:	75 73                	jne    81005301 <setvbuf+0x17f>
8100528e:	83 ec 0c             	sub    $0xc,%esp
81005291:	56                   	push   %esi
81005292:	e8 4b e1 ff ff       	call   810033e2 <malloc>
81005297:	83 c4 10             	add    $0x10,%esp
8100529a:	89 45 0c             	mov    %eax,0xc(%ebp)
8100529d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810052a1:	75 20                	jne    810052c3 <setvbuf+0x141>
810052a3:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
810052aa:	8b 45 d8             	mov    -0x28(%ebp),%eax
810052ad:	39 c6                	cmp    %eax,%esi
810052af:	74 12                	je     810052c3 <setvbuf+0x141>
810052b1:	8b 75 d8             	mov    -0x28(%ebp),%esi
810052b4:	83 ec 0c             	sub    $0xc,%esp
810052b7:	56                   	push   %esi
810052b8:	e8 25 e1 ff ff       	call   810033e2 <malloc>
810052bd:	83 c4 10             	add    $0x10,%esp
810052c0:	89 45 0c             	mov    %eax,0xc(%ebp)
810052c3:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810052c7:	75 2e                	jne    810052f7 <setvbuf+0x175>
810052c9:	eb 01                	jmp    810052cc <setvbuf+0x14a>
810052cb:	90                   	nop
810052cc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810052d0:	83 c8 02             	or     $0x2,%eax
810052d3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810052d7:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810052de:	8d 43 43             	lea    0x43(%ebx),%eax
810052e1:	89 03                	mov    %eax,(%ebx)
810052e3:	8b 03                	mov    (%ebx),%eax
810052e5:	89 43 10             	mov    %eax,0x10(%ebx)
810052e8:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810052ef:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810052f2:	e9 8f 00 00 00       	jmp    81005386 <setvbuf+0x204>
810052f7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810052fb:	0c 80                	or     $0x80,%al
810052fd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005301:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005304:	8b 40 38             	mov    0x38(%eax),%eax
81005307:	85 c0                	test   %eax,%eax
81005309:	75 0e                	jne    81005319 <setvbuf+0x197>
8100530b:	83 ec 0c             	sub    $0xc,%esp
8100530e:	ff 75 e0             	push   -0x20(%ebp)
81005311:	e8 7f c2 ff ff       	call   81001595 <__sinit>
81005316:	83 c4 10             	add    $0x10,%esp
81005319:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100531c:	39 c6                	cmp    %eax,%esi
8100531e:	74 0b                	je     8100532b <setvbuf+0x1a9>
81005320:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005324:	80 cc 08             	or     $0x8,%ah
81005327:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100532b:	83 ff 01             	cmp    $0x1,%edi
8100532e:	75 0b                	jne    8100533b <setvbuf+0x1b9>
81005330:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005334:	83 c8 01             	or     $0x1,%eax
81005337:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100533b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100533e:	89 03                	mov    %eax,(%ebx)
81005340:	8b 03                	mov    (%ebx),%eax
81005342:	89 43 10             	mov    %eax,0x10(%ebx)
81005345:	89 f0                	mov    %esi,%eax
81005347:	89 43 14             	mov    %eax,0x14(%ebx)
8100534a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100534e:	98                   	cwtl   
8100534f:	83 e0 08             	and    $0x8,%eax
81005352:	85 c0                	test   %eax,%eax
81005354:	74 24                	je     8100537a <setvbuf+0x1f8>
81005356:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100535a:	98                   	cwtl   
8100535b:	83 e0 01             	and    $0x1,%eax
8100535e:	85 c0                	test   %eax,%eax
81005360:	74 11                	je     81005373 <setvbuf+0x1f1>
81005362:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005369:	8b 43 14             	mov    0x14(%ebx),%eax
8100536c:	f7 d8                	neg    %eax
8100536e:	89 43 18             	mov    %eax,0x18(%ebx)
81005371:	eb 0e                	jmp    81005381 <setvbuf+0x1ff>
81005373:	89 f0                	mov    %esi,%eax
81005375:	89 43 08             	mov    %eax,0x8(%ebx)
81005378:	eb 07                	jmp    81005381 <setvbuf+0x1ff>
8100537a:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005381:	b8 00 00 00 00       	mov    $0x0,%eax
81005386:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005389:	5b                   	pop    %ebx
8100538a:	5e                   	pop    %esi
8100538b:	5f                   	pop    %edi
8100538c:	5d                   	pop    %ebp
8100538d:	c3                   	ret    

8100538e <__sread>:
8100538e:	55                   	push   %ebp
8100538f:	89 e5                	mov    %esp,%ebp
81005391:	56                   	push   %esi
81005392:	53                   	push   %ebx
81005393:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005396:	8b 55 14             	mov    0x14(%ebp),%edx
81005399:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100539d:	98                   	cwtl   
8100539e:	52                   	push   %edx
8100539f:	ff 75 10             	push   0x10(%ebp)
810053a2:	50                   	push   %eax
810053a3:	ff 75 08             	push   0x8(%ebp)
810053a6:	e8 a6 18 00 00       	call   81006c51 <_read_r>
810053ab:	83 c4 10             	add    $0x10,%esp
810053ae:	89 c6                	mov    %eax,%esi
810053b0:	85 f6                	test   %esi,%esi
810053b2:	78 0a                	js     810053be <__sread+0x30>
810053b4:	8b 43 50             	mov    0x50(%ebx),%eax
810053b7:	01 f0                	add    %esi,%eax
810053b9:	89 43 50             	mov    %eax,0x50(%ebx)
810053bc:	eb 0b                	jmp    810053c9 <__sread+0x3b>
810053be:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053c2:	80 e4 ef             	and    $0xef,%ah
810053c5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810053c9:	89 f0                	mov    %esi,%eax
810053cb:	8d 65 f8             	lea    -0x8(%ebp),%esp
810053ce:	5b                   	pop    %ebx
810053cf:	5e                   	pop    %esi
810053d0:	5d                   	pop    %ebp
810053d1:	c3                   	ret    

810053d2 <__seofread>:
810053d2:	55                   	push   %ebp
810053d3:	89 e5                	mov    %esp,%ebp
810053d5:	b8 00 00 00 00       	mov    $0x0,%eax
810053da:	5d                   	pop    %ebp
810053db:	c3                   	ret    

810053dc <__swrite>:
810053dc:	55                   	push   %ebp
810053dd:	89 e5                	mov    %esp,%ebp
810053df:	53                   	push   %ebx
810053e0:	83 ec 14             	sub    $0x14,%esp
810053e3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810053e6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053ea:	98                   	cwtl   
810053eb:	25 00 01 00 00       	and    $0x100,%eax
810053f0:	85 c0                	test   %eax,%eax
810053f2:	74 15                	je     81005409 <__swrite+0x2d>
810053f4:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810053f8:	98                   	cwtl   
810053f9:	6a 02                	push   $0x2
810053fb:	6a 00                	push   $0x0
810053fd:	50                   	push   %eax
810053fe:	ff 75 08             	push   0x8(%ebp)
81005401:	e8 d8 15 00 00       	call   810069de <_lseek_r>
81005406:	83 c4 10             	add    $0x10,%esp
81005409:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100540d:	80 e4 ef             	and    $0xef,%ah
81005410:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005414:	8b 55 14             	mov    0x14(%ebp),%edx
81005417:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100541b:	98                   	cwtl   
8100541c:	52                   	push   %edx
8100541d:	ff 75 10             	push   0x10(%ebp)
81005420:	50                   	push   %eax
81005421:	ff 75 08             	push   0x8(%ebp)
81005424:	e8 49 07 00 00       	call   81005b72 <_write_r>
81005429:	83 c4 10             	add    $0x10,%esp
8100542c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100542f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005432:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005435:	c9                   	leave  
81005436:	c3                   	ret    

81005437 <__sseek>:
81005437:	55                   	push   %ebp
81005438:	89 e5                	mov    %esp,%ebp
8100543a:	56                   	push   %esi
8100543b:	53                   	push   %ebx
8100543c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100543f:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81005443:	98                   	cwtl   
81005444:	ff 75 14             	push   0x14(%ebp)
81005447:	ff 75 10             	push   0x10(%ebp)
8100544a:	50                   	push   %eax
8100544b:	ff 75 08             	push   0x8(%ebp)
8100544e:	e8 8b 15 00 00       	call   810069de <_lseek_r>
81005453:	83 c4 10             	add    $0x10,%esp
81005456:	89 c6                	mov    %eax,%esi
81005458:	83 fe ff             	cmp    $0xffffffff,%esi
8100545b:	75 0d                	jne    8100546a <__sseek+0x33>
8100545d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005461:	80 e4 ef             	and    $0xef,%ah
81005464:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005468:	eb 0e                	jmp    81005478 <__sseek+0x41>
8100546a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100546e:	80 cc 10             	or     $0x10,%ah
81005471:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005475:	89 73 50             	mov    %esi,0x50(%ebx)
81005478:	89 f0                	mov    %esi,%eax
8100547a:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100547d:	5b                   	pop    %ebx
8100547e:	5e                   	pop    %esi
8100547f:	5d                   	pop    %ebp
81005480:	c3                   	ret    

81005481 <__sclose>:
81005481:	55                   	push   %ebp
81005482:	89 e5                	mov    %esp,%ebp
81005484:	83 ec 18             	sub    $0x18,%esp
81005487:	8b 45 0c             	mov    0xc(%ebp),%eax
8100548a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100548d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005490:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81005494:	98                   	cwtl   
81005495:	83 ec 08             	sub    $0x8,%esp
81005498:	50                   	push   %eax
81005499:	ff 75 08             	push   0x8(%ebp)
8100549c:	e8 87 09 00 00       	call   81005e28 <_close_r>
810054a1:	83 c4 10             	add    $0x10,%esp
810054a4:	c9                   	leave  
810054a5:	c3                   	ret    
810054a6:	66 90                	xchg   %ax,%ax
810054a8:	66 90                	xchg   %ax,%ax
810054aa:	66 90                	xchg   %ax,%ax
810054ac:	66 90                	xchg   %ax,%ax
810054ae:	66 90                	xchg   %ax,%ax

810054b0 <strchr>:
810054b0:	55                   	push   %ebp
810054b1:	89 e5                	mov    %esp,%ebp
810054b3:	57                   	push   %edi
810054b4:	53                   	push   %ebx
810054b5:	31 db                	xor    %ebx,%ebx
810054b7:	8b 7d 08             	mov    0x8(%ebp),%edi
810054ba:	02 5d 0c             	add    0xc(%ebp),%bl
810054bd:	0f 84 98 00 00 00    	je     8100555b <L25>
810054c3:	f7 c7 03 00 00 00    	test   $0x3,%edi
810054c9:	74 37                	je     81005502 <L5>
810054cb:	89 f8                	mov    %edi,%eax
810054cd:	8a 08                	mov    (%eax),%cl
810054cf:	84 c9                	test   %cl,%cl
810054d1:	74 7b                	je     8100554e <L14>
810054d3:	38 d9                	cmp    %bl,%cl
810054d5:	74 7d                	je     81005554 <L19>
810054d7:	47                   	inc    %edi
810054d8:	f7 c7 03 00 00 00    	test   $0x3,%edi
810054de:	74 22                	je     81005502 <L5>
810054e0:	89 f8                	mov    %edi,%eax
810054e2:	8a 08                	mov    (%eax),%cl
810054e4:	84 c9                	test   %cl,%cl
810054e6:	74 66                	je     8100554e <L14>
810054e8:	38 d9                	cmp    %bl,%cl
810054ea:	74 68                	je     81005554 <L19>
810054ec:	47                   	inc    %edi
810054ed:	f7 c7 03 00 00 00    	test   $0x3,%edi
810054f3:	74 0d                	je     81005502 <L5>
810054f5:	89 f8                	mov    %edi,%eax
810054f7:	8a 08                	mov    (%eax),%cl
810054f9:	84 c9                	test   %cl,%cl
810054fb:	74 51                	je     8100554e <L14>
810054fd:	38 d9                	cmp    %bl,%cl
810054ff:	74 53                	je     81005554 <L19>
81005501:	47                   	inc    %edi

81005502 <L5>:
81005502:	89 d9                	mov    %ebx,%ecx
81005504:	c1 e3 08             	shl    $0x8,%ebx
81005507:	83 ef 04             	sub    $0x4,%edi
8100550a:	09 cb                	or     %ecx,%ebx
8100550c:	89 da                	mov    %ebx,%edx
8100550e:	c1 e3 10             	shl    $0x10,%ebx
81005511:	09 d3                	or     %edx,%ebx

81005513 <L10>:
81005513:	83 c7 04             	add    $0x4,%edi
81005516:	8b 0f                	mov    (%edi),%ecx
81005518:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8100551e:	89 c8                	mov    %ecx,%eax
81005520:	f7 d0                	not    %eax
81005522:	21 c2                	and    %eax,%edx
81005524:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
8100552a:	75 14                	jne    81005540 <L9>
8100552c:	31 d9                	xor    %ebx,%ecx
8100552e:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81005534:	f7 d1                	not    %ecx
81005536:	21 ca                	and    %ecx,%edx
81005538:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
8100553e:	74 d3                	je     81005513 <L10>

81005540 <L9>:
81005540:	8d 47 ff             	lea    -0x1(%edi),%eax

81005543 <L15>:
81005543:	40                   	inc    %eax
81005544:	8a 10                	mov    (%eax),%dl
81005546:	84 d2                	test   %dl,%dl
81005548:	74 04                	je     8100554e <L14>
8100554a:	38 da                	cmp    %bl,%dl
8100554c:	75 f5                	jne    81005543 <L15>

8100554e <L14>:
8100554e:	38 18                	cmp    %bl,(%eax)
81005550:	74 02                	je     81005554 <L19>
81005552:	31 c0                	xor    %eax,%eax

81005554 <L19>:
81005554:	8d 65 f8             	lea    -0x8(%ebp),%esp
81005557:	5b                   	pop    %ebx
81005558:	5f                   	pop    %edi
81005559:	c9                   	leave  
8100555a:	c3                   	ret    

8100555b <L25>:
8100555b:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005561:	74 2b                	je     8100558e <L26>
81005563:	89 f8                	mov    %edi,%eax
81005565:	8a 08                	mov    (%eax),%cl
81005567:	84 c9                	test   %cl,%cl
81005569:	74 e9                	je     81005554 <L19>
8100556b:	47                   	inc    %edi
8100556c:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005572:	74 1a                	je     8100558e <L26>
81005574:	89 f8                	mov    %edi,%eax
81005576:	8a 08                	mov    (%eax),%cl
81005578:	84 c9                	test   %cl,%cl
8100557a:	74 d8                	je     81005554 <L19>
8100557c:	47                   	inc    %edi
8100557d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005583:	74 09                	je     8100558e <L26>
81005585:	89 f8                	mov    %edi,%eax
81005587:	8a 08                	mov    (%eax),%cl
81005589:	84 c9                	test   %cl,%cl
8100558b:	74 c7                	je     81005554 <L19>
8100558d:	47                   	inc    %edi

8100558e <L26>:
8100558e:	83 ef 04             	sub    $0x4,%edi

81005591 <L27>:
81005591:	83 c7 04             	add    $0x4,%edi
81005594:	8b 0f                	mov    (%edi),%ecx
81005596:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8100559c:	89 c8                	mov    %ecx,%eax
8100559e:	f7 d0                	not    %eax
810055a0:	21 c2                	and    %eax,%edx
810055a2:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810055a8:	74 e7                	je     81005591 <L27>
810055aa:	eb 94                	jmp    81005540 <L9>

810055ac <strcmp>:
810055ac:	55                   	push   %ebp
810055ad:	89 e5                	mov    %esp,%ebp
810055af:	83 ec 10             	sub    $0x10,%esp
810055b2:	8b 55 08             	mov    0x8(%ebp),%edx
810055b5:	8b 45 0c             	mov    0xc(%ebp),%eax
810055b8:	09 d0                	or     %edx,%eax
810055ba:	83 e0 03             	and    $0x3,%eax
810055bd:	85 c0                	test   %eax,%eax
810055bf:	75 5e                	jne    8100561f <strcmp+0x73>
810055c1:	8b 45 08             	mov    0x8(%ebp),%eax
810055c4:	89 45 fc             	mov    %eax,-0x4(%ebp)
810055c7:	8b 45 0c             	mov    0xc(%ebp),%eax
810055ca:	89 45 f8             	mov    %eax,-0x8(%ebp)
810055cd:	eb 2c                	jmp    810055fb <strcmp+0x4f>
810055cf:	8b 45 fc             	mov    -0x4(%ebp),%eax
810055d2:	8b 00                	mov    (%eax),%eax
810055d4:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
810055da:	8b 45 fc             	mov    -0x4(%ebp),%eax
810055dd:	8b 00                	mov    (%eax),%eax
810055df:	f7 d0                	not    %eax
810055e1:	21 d0                	and    %edx,%eax
810055e3:	25 80 80 80 80       	and    $0x80808080,%eax
810055e8:	85 c0                	test   %eax,%eax
810055ea:	74 07                	je     810055f3 <strcmp+0x47>
810055ec:	b8 00 00 00 00       	mov    $0x0,%eax
810055f1:	eb 5c                	jmp    8100564f <strcmp+0xa3>
810055f3:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
810055f7:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
810055fb:	8b 45 fc             	mov    -0x4(%ebp),%eax
810055fe:	8b 10                	mov    (%eax),%edx
81005600:	8b 45 f8             	mov    -0x8(%ebp),%eax
81005603:	8b 00                	mov    (%eax),%eax
81005605:	39 c2                	cmp    %eax,%edx
81005607:	74 c6                	je     810055cf <strcmp+0x23>
81005609:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100560c:	89 45 08             	mov    %eax,0x8(%ebp)
8100560f:	8b 45 f8             	mov    -0x8(%ebp),%eax
81005612:	89 45 0c             	mov    %eax,0xc(%ebp)
81005615:	eb 08                	jmp    8100561f <strcmp+0x73>
81005617:	83 45 08 01          	addl   $0x1,0x8(%ebp)
8100561b:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
8100561f:	8b 45 08             	mov    0x8(%ebp),%eax
81005622:	0f b6 00             	movzbl (%eax),%eax
81005625:	84 c0                	test   %al,%al
81005627:	74 10                	je     81005639 <strcmp+0x8d>
81005629:	8b 45 08             	mov    0x8(%ebp),%eax
8100562c:	0f b6 10             	movzbl (%eax),%edx
8100562f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005632:	0f b6 00             	movzbl (%eax),%eax
81005635:	38 c2                	cmp    %al,%dl
81005637:	74 de                	je     81005617 <strcmp+0x6b>
81005639:	8b 45 08             	mov    0x8(%ebp),%eax
8100563c:	0f b6 00             	movzbl (%eax),%eax
8100563f:	0f b6 d0             	movzbl %al,%edx
81005642:	8b 45 0c             	mov    0xc(%ebp),%eax
81005645:	0f b6 00             	movzbl (%eax),%eax
81005648:	0f b6 c8             	movzbl %al,%ecx
8100564b:	89 d0                	mov    %edx,%eax
8100564d:	29 c8                	sub    %ecx,%eax
8100564f:	c9                   	leave  
81005650:	c3                   	ret    
81005651:	66 90                	xchg   %ax,%ax
81005653:	66 90                	xchg   %ax,%ax
81005655:	66 90                	xchg   %ax,%ax
81005657:	66 90                	xchg   %ax,%ax
81005659:	66 90                	xchg   %ax,%ax
8100565b:	66 90                	xchg   %ax,%ax
8100565d:	66 90                	xchg   %ax,%ax
8100565f:	90                   	nop

81005660 <strlen>:
81005660:	55                   	push   %ebp
81005661:	89 e5                	mov    %esp,%ebp
81005663:	57                   	push   %edi
81005664:	8b 55 08             	mov    0x8(%ebp),%edx
81005667:	89 d7                	mov    %edx,%edi
81005669:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100566f:	74 25                	je     81005696 <L5>
81005671:	8a 0f                	mov    (%edi),%cl
81005673:	47                   	inc    %edi
81005674:	84 c9                	test   %cl,%cl
81005676:	74 56                	je     810056ce <L15>
81005678:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100567e:	74 16                	je     81005696 <L5>
81005680:	8a 0f                	mov    (%edi),%cl
81005682:	47                   	inc    %edi
81005683:	84 c9                	test   %cl,%cl
81005685:	74 47                	je     810056ce <L15>
81005687:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100568d:	74 07                	je     81005696 <L5>
8100568f:	8a 0f                	mov    (%edi),%cl
81005691:	47                   	inc    %edi
81005692:	84 c9                	test   %cl,%cl
81005694:	74 38                	je     810056ce <L15>

81005696 <L5>:
81005696:	83 ef 04             	sub    $0x4,%edi
81005699:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

810056a0 <L10>:
810056a0:	83 c7 04             	add    $0x4,%edi
810056a3:	8b 0f                	mov    (%edi),%ecx
810056a5:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
810056ab:	f7 d1                	not    %ecx
810056ad:	21 c8                	and    %ecx,%eax
810056af:	a9 80 80 80 80       	test   $0x80808080,%eax
810056b4:	74 ea                	je     810056a0 <L10>
810056b6:	f7 d1                	not    %ecx
810056b8:	47                   	inc    %edi
810056b9:	84 c9                	test   %cl,%cl
810056bb:	74 11                	je     810056ce <L15>
810056bd:	47                   	inc    %edi
810056be:	c1 e9 08             	shr    $0x8,%ecx
810056c1:	84 c9                	test   %cl,%cl
810056c3:	74 09                	je     810056ce <L15>
810056c5:	47                   	inc    %edi
810056c6:	c1 e9 08             	shr    $0x8,%ecx
810056c9:	84 c9                	test   %cl,%cl
810056cb:	74 01                	je     810056ce <L15>
810056cd:	47                   	inc    %edi

810056ce <L15>:
810056ce:	29 d7                	sub    %edx,%edi
810056d0:	8d 47 ff             	lea    -0x1(%edi),%eax
810056d3:	8d 65 fc             	lea    -0x4(%ebp),%esp
810056d6:	5f                   	pop    %edi
810056d7:	c9                   	leave  
810056d8:	c3                   	ret    

810056d9 <strtok>:
810056d9:	55                   	push   %ebp
810056da:	89 e5                	mov    %esp,%ebp
810056dc:	83 ec 18             	sub    $0x18,%esp
810056df:	8b 55 08             	mov    0x8(%ebp),%edx
810056e2:	8b 4d 0c             	mov    0xc(%ebp),%ecx
810056e5:	a1 a4 83 00 81       	mov    0x810083a4,%eax
810056ea:	89 45 f4             	mov    %eax,-0xc(%ebp)
810056ed:	8b 45 f4             	mov    -0xc(%ebp),%eax
810056f0:	83 c0 5c             	add    $0x5c,%eax
810056f3:	6a 01                	push   $0x1
810056f5:	50                   	push   %eax
810056f6:	51                   	push   %ecx
810056f7:	52                   	push   %edx
810056f8:	e8 05 00 00 00       	call   81005702 <__strtok_r>
810056fd:	83 c4 10             	add    $0x10,%esp
81005700:	c9                   	leave  
81005701:	c3                   	ret    

81005702 <__strtok_r>:
81005702:	55                   	push   %ebp
81005703:	89 e5                	mov    %esp,%ebp
81005705:	57                   	push   %edi
81005706:	56                   	push   %esi
81005707:	53                   	push   %ebx
81005708:	83 ec 10             	sub    $0x10,%esp
8100570b:	8b 45 08             	mov    0x8(%ebp),%eax
8100570e:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81005711:	85 c0                	test   %eax,%eax
81005713:	75 13                	jne    81005728 <__strtok_r+0x26>
81005715:	8b 45 10             	mov    0x10(%ebp),%eax
81005718:	8b 00                	mov    (%eax),%eax
8100571a:	85 c0                	test   %eax,%eax
8100571c:	75 0a                	jne    81005728 <__strtok_r+0x26>
8100571e:	b8 00 00 00 00       	mov    $0x0,%eax
81005723:	e9 92 00 00 00       	jmp    810057ba <__strtok_r+0xb8>
81005728:	90                   	nop
81005729:	89 c2                	mov    %eax,%edx
8100572b:	8d 42 01             	lea    0x1(%edx),%eax
8100572e:	0f b6 12             	movzbl (%edx),%edx
81005731:	0f be f2             	movsbl %dl,%esi
81005734:	89 cf                	mov    %ecx,%edi
81005736:	eb 1c                	jmp    81005754 <__strtok_r+0x52>
81005738:	39 de                	cmp    %ebx,%esi
8100573a:	75 18                	jne    81005754 <__strtok_r+0x52>
8100573c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005740:	74 02                	je     81005744 <__strtok_r+0x42>
81005742:	eb e5                	jmp    81005729 <__strtok_r+0x27>
81005744:	8b 55 10             	mov    0x10(%ebp),%edx
81005747:	89 02                	mov    %eax,(%edx)
81005749:	8d 50 ff             	lea    -0x1(%eax),%edx
8100574c:	c6 02 00             	movb   $0x0,(%edx)
8100574f:	83 e8 01             	sub    $0x1,%eax
81005752:	eb 66                	jmp    810057ba <__strtok_r+0xb8>
81005754:	89 fa                	mov    %edi,%edx
81005756:	8d 7a 01             	lea    0x1(%edx),%edi
81005759:	0f b6 12             	movzbl (%edx),%edx
8100575c:	0f be da             	movsbl %dl,%ebx
8100575f:	85 db                	test   %ebx,%ebx
81005761:	75 d5                	jne    81005738 <__strtok_r+0x36>
81005763:	85 f6                	test   %esi,%esi
81005765:	75 10                	jne    81005777 <__strtok_r+0x75>
81005767:	8b 45 10             	mov    0x10(%ebp),%eax
8100576a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81005770:	b8 00 00 00 00       	mov    $0x0,%eax
81005775:	eb 43                	jmp    810057ba <__strtok_r+0xb8>
81005777:	8d 50 ff             	lea    -0x1(%eax),%edx
8100577a:	89 55 f0             	mov    %edx,-0x10(%ebp)
8100577d:	89 c2                	mov    %eax,%edx
8100577f:	8d 42 01             	lea    0x1(%edx),%eax
81005782:	0f b6 12             	movzbl (%edx),%edx
81005785:	0f be f2             	movsbl %dl,%esi
81005788:	89 cf                	mov    %ecx,%edi
8100578a:	89 fa                	mov    %edi,%edx
8100578c:	8d 7a 01             	lea    0x1(%edx),%edi
8100578f:	0f b6 12             	movzbl (%edx),%edx
81005792:	0f be da             	movsbl %dl,%ebx
81005795:	39 f3                	cmp    %esi,%ebx
81005797:	75 1b                	jne    810057b4 <__strtok_r+0xb2>
81005799:	85 f6                	test   %esi,%esi
8100579b:	75 07                	jne    810057a4 <__strtok_r+0xa2>
8100579d:	b8 00 00 00 00       	mov    $0x0,%eax
810057a2:	eb 06                	jmp    810057aa <__strtok_r+0xa8>
810057a4:	8d 50 ff             	lea    -0x1(%eax),%edx
810057a7:	c6 02 00             	movb   $0x0,(%edx)
810057aa:	8b 55 10             	mov    0x10(%ebp),%edx
810057ad:	89 02                	mov    %eax,(%edx)
810057af:	8b 45 f0             	mov    -0x10(%ebp),%eax
810057b2:	eb 06                	jmp    810057ba <__strtok_r+0xb8>
810057b4:	85 db                	test   %ebx,%ebx
810057b6:	75 d2                	jne    8100578a <__strtok_r+0x88>
810057b8:	eb c3                	jmp    8100577d <__strtok_r+0x7b>
810057ba:	83 c4 10             	add    $0x10,%esp
810057bd:	5b                   	pop    %ebx
810057be:	5e                   	pop    %esi
810057bf:	5f                   	pop    %edi
810057c0:	5d                   	pop    %ebp
810057c1:	c3                   	ret    

810057c2 <strtok_r>:
810057c2:	55                   	push   %ebp
810057c3:	89 e5                	mov    %esp,%ebp
810057c5:	8b 45 08             	mov    0x8(%ebp),%eax
810057c8:	8b 55 0c             	mov    0xc(%ebp),%edx
810057cb:	6a 01                	push   $0x1
810057cd:	ff 75 10             	push   0x10(%ebp)
810057d0:	52                   	push   %edx
810057d1:	50                   	push   %eax
810057d2:	e8 2b ff ff ff       	call   81005702 <__strtok_r>
810057d7:	83 c4 10             	add    $0x10,%esp
810057da:	c9                   	leave  
810057db:	c3                   	ret    

810057dc <__locale_ctype_ptr_l>:
810057dc:	55                   	push   %ebp
810057dd:	89 e5                	mov    %esp,%ebp
810057df:	b8 40 7e 00 81       	mov    $0x81007e40,%eax
810057e4:	5d                   	pop    %ebp
810057e5:	c3                   	ret    

810057e6 <__get_global_locale>:
810057e6:	55                   	push   %ebp
810057e7:	89 e5                	mov    %esp,%ebp
810057e9:	b8 e0 87 00 81       	mov    $0x810087e0,%eax
810057ee:	5d                   	pop    %ebp
810057ef:	c3                   	ret    

810057f0 <__get_current_locale>:
810057f0:	55                   	push   %ebp
810057f1:	89 e5                	mov    %esp,%ebp
810057f3:	e8 ee ff ff ff       	call   810057e6 <__get_global_locale>
810057f8:	5d                   	pop    %ebp
810057f9:	c3                   	ret    

810057fa <_strtol_l>:
810057fa:	55                   	push   %ebp
810057fb:	89 e5                	mov    %esp,%ebp
810057fd:	57                   	push   %edi
810057fe:	56                   	push   %esi
810057ff:	53                   	push   %ebx
81005800:	83 ec 1c             	sub    $0x1c,%esp
81005803:	8b 75 0c             	mov    0xc(%ebp),%esi
81005806:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100580d:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005811:	78 0c                	js     8100581f <_strtol_l+0x25>
81005813:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81005817:	74 06                	je     8100581f <_strtol_l+0x25>
81005819:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
8100581d:	7e 15                	jle    81005834 <_strtol_l+0x3a>
8100581f:	e8 44 06 00 00       	call   81005e68 <__errno>
81005824:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
8100582a:	b8 00 00 00 00       	mov    $0x0,%eax
8100582f:	e9 90 01 00 00       	jmp    810059c4 <_strtol_l+0x1ca>
81005834:	89 f0                	mov    %esi,%eax
81005836:	8d 70 01             	lea    0x1(%eax),%esi
81005839:	0f b6 00             	movzbl (%eax),%eax
8100583c:	0f b6 d8             	movzbl %al,%ebx
8100583f:	83 ec 0c             	sub    $0xc,%esp
81005842:	ff 75 18             	push   0x18(%ebp)
81005845:	e8 92 ff ff ff       	call   810057dc <__locale_ctype_ptr_l>
8100584a:	83 c4 10             	add    $0x10,%esp
8100584d:	89 da                	mov    %ebx,%edx
8100584f:	83 c2 01             	add    $0x1,%edx
81005852:	01 d0                	add    %edx,%eax
81005854:	0f b6 00             	movzbl (%eax),%eax
81005857:	0f be c0             	movsbl %al,%eax
8100585a:	83 e0 08             	and    $0x8,%eax
8100585d:	85 c0                	test   %eax,%eax
8100585f:	75 d3                	jne    81005834 <_strtol_l+0x3a>
81005861:	83 fb 2d             	cmp    $0x2d,%ebx
81005864:	75 14                	jne    8100587a <_strtol_l+0x80>
81005866:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100586d:	89 f0                	mov    %esi,%eax
8100586f:	8d 70 01             	lea    0x1(%eax),%esi
81005872:	0f b6 00             	movzbl (%eax),%eax
81005875:	0f b6 d8             	movzbl %al,%ebx
81005878:	eb 10                	jmp    8100588a <_strtol_l+0x90>
8100587a:	83 fb 2b             	cmp    $0x2b,%ebx
8100587d:	75 0b                	jne    8100588a <_strtol_l+0x90>
8100587f:	89 f0                	mov    %esi,%eax
81005881:	8d 70 01             	lea    0x1(%eax),%esi
81005884:	0f b6 00             	movzbl (%eax),%eax
81005887:	0f b6 d8             	movzbl %al,%ebx
8100588a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100588e:	74 06                	je     81005896 <_strtol_l+0x9c>
81005890:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
81005894:	75 26                	jne    810058bc <_strtol_l+0xc2>
81005896:	83 fb 30             	cmp    $0x30,%ebx
81005899:	75 21                	jne    810058bc <_strtol_l+0xc2>
8100589b:	0f b6 06             	movzbl (%esi),%eax
8100589e:	3c 78                	cmp    $0x78,%al
810058a0:	74 07                	je     810058a9 <_strtol_l+0xaf>
810058a2:	0f b6 06             	movzbl (%esi),%eax
810058a5:	3c 58                	cmp    $0x58,%al
810058a7:	75 13                	jne    810058bc <_strtol_l+0xc2>
810058a9:	8d 46 01             	lea    0x1(%esi),%eax
810058ac:	0f b6 00             	movzbl (%eax),%eax
810058af:	0f b6 d8             	movzbl %al,%ebx
810058b2:	83 c6 02             	add    $0x2,%esi
810058b5:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
810058bc:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810058c0:	75 14                	jne    810058d6 <_strtol_l+0xdc>
810058c2:	83 fb 30             	cmp    $0x30,%ebx
810058c5:	75 07                	jne    810058ce <_strtol_l+0xd4>
810058c7:	b8 08 00 00 00       	mov    $0x8,%eax
810058cc:	eb 05                	jmp    810058d3 <_strtol_l+0xd9>
810058ce:	b8 0a 00 00 00       	mov    $0xa,%eax
810058d3:	89 45 14             	mov    %eax,0x14(%ebp)
810058d6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810058da:	74 07                	je     810058e3 <_strtol_l+0xe9>
810058dc:	b8 00 00 00 80       	mov    $0x80000000,%eax
810058e1:	eb 05                	jmp    810058e8 <_strtol_l+0xee>
810058e3:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
810058e8:	89 c7                	mov    %eax,%edi
810058ea:	8b 4d 14             	mov    0x14(%ebp),%ecx
810058ed:	89 f8                	mov    %edi,%eax
810058ef:	ba 00 00 00 00       	mov    $0x0,%edx
810058f4:	f7 f1                	div    %ecx
810058f6:	89 d0                	mov    %edx,%eax
810058f8:	89 45 e0             	mov    %eax,-0x20(%ebp)
810058fb:	8b 4d 14             	mov    0x14(%ebp),%ecx
810058fe:	89 f8                	mov    %edi,%eax
81005900:	ba 00 00 00 00       	mov    $0x0,%edx
81005905:	f7 f1                	div    %ecx
81005907:	89 c2                	mov    %eax,%edx
81005909:	bf 00 00 00 00       	mov    $0x0,%edi
8100590e:	b9 00 00 00 00       	mov    $0x0,%ecx
81005913:	83 fb 2f             	cmp    $0x2f,%ebx
81005916:	7e 0a                	jle    81005922 <_strtol_l+0x128>
81005918:	83 fb 39             	cmp    $0x39,%ebx
8100591b:	7f 05                	jg     81005922 <_strtol_l+0x128>
8100591d:	83 eb 30             	sub    $0x30,%ebx
81005920:	eb 1c                	jmp    8100593e <_strtol_l+0x144>
81005922:	83 fb 40             	cmp    $0x40,%ebx
81005925:	7e 0a                	jle    81005931 <_strtol_l+0x137>
81005927:	83 fb 5a             	cmp    $0x5a,%ebx
8100592a:	7f 05                	jg     81005931 <_strtol_l+0x137>
8100592c:	83 eb 37             	sub    $0x37,%ebx
8100592f:	eb 0d                	jmp    8100593e <_strtol_l+0x144>
81005931:	83 fb 60             	cmp    $0x60,%ebx
81005934:	7e 46                	jle    8100597c <_strtol_l+0x182>
81005936:	83 fb 7a             	cmp    $0x7a,%ebx
81005939:	7f 41                	jg     8100597c <_strtol_l+0x182>
8100593b:	83 eb 57             	sub    $0x57,%ebx
8100593e:	3b 5d 14             	cmp    0x14(%ebp),%ebx
81005941:	7d 38                	jge    8100597b <_strtol_l+0x181>
81005943:	89 c8                	mov    %ecx,%eax
81005945:	85 c0                	test   %eax,%eax
81005947:	78 0f                	js     81005958 <_strtol_l+0x15e>
81005949:	89 d0                	mov    %edx,%eax
8100594b:	39 c7                	cmp    %eax,%edi
8100594d:	77 09                	ja     81005958 <_strtol_l+0x15e>
8100594f:	39 c7                	cmp    %eax,%edi
81005951:	75 0c                	jne    8100595f <_strtol_l+0x165>
81005953:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
81005956:	7e 07                	jle    8100595f <_strtol_l+0x165>
81005958:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
8100595d:	eb 0f                	jmp    8100596e <_strtol_l+0x174>
8100595f:	b9 01 00 00 00       	mov    $0x1,%ecx
81005964:	8b 45 14             	mov    0x14(%ebp),%eax
81005967:	0f af f8             	imul   %eax,%edi
8100596a:	89 d8                	mov    %ebx,%eax
8100596c:	01 c7                	add    %eax,%edi
8100596e:	89 f0                	mov    %esi,%eax
81005970:	8d 70 01             	lea    0x1(%eax),%esi
81005973:	0f b6 00             	movzbl (%eax),%eax
81005976:	0f b6 d8             	movzbl %al,%ebx
81005979:	eb 98                	jmp    81005913 <_strtol_l+0x119>
8100597b:	90                   	nop
8100597c:	89 c8                	mov    %ecx,%eax
8100597e:	85 c0                	test   %eax,%eax
81005980:	79 1f                	jns    810059a1 <_strtol_l+0x1a7>
81005982:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005986:	74 07                	je     8100598f <_strtol_l+0x195>
81005988:	b8 00 00 00 80       	mov    $0x80000000,%eax
8100598d:	eb 05                	jmp    81005994 <_strtol_l+0x19a>
8100598f:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81005994:	89 c7                	mov    %eax,%edi
81005996:	8b 45 08             	mov    0x8(%ebp),%eax
81005999:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
8100599f:	eb 08                	jmp    810059a9 <_strtol_l+0x1af>
810059a1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810059a5:	74 02                	je     810059a9 <_strtol_l+0x1af>
810059a7:	f7 df                	neg    %edi
810059a9:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810059ad:	74 13                	je     810059c2 <_strtol_l+0x1c8>
810059af:	89 c8                	mov    %ecx,%eax
810059b1:	85 c0                	test   %eax,%eax
810059b3:	74 05                	je     810059ba <_strtol_l+0x1c0>
810059b5:	8d 46 ff             	lea    -0x1(%esi),%eax
810059b8:	eb 03                	jmp    810059bd <_strtol_l+0x1c3>
810059ba:	8b 45 0c             	mov    0xc(%ebp),%eax
810059bd:	8b 55 10             	mov    0x10(%ebp),%edx
810059c0:	89 02                	mov    %eax,(%edx)
810059c2:	89 f8                	mov    %edi,%eax
810059c4:	8d 65 f4             	lea    -0xc(%ebp),%esp
810059c7:	5b                   	pop    %ebx
810059c8:	5e                   	pop    %esi
810059c9:	5f                   	pop    %edi
810059ca:	5d                   	pop    %ebp
810059cb:	c3                   	ret    

810059cc <_strtol_r>:
810059cc:	55                   	push   %ebp
810059cd:	89 e5                	mov    %esp,%ebp
810059cf:	83 ec 08             	sub    $0x8,%esp
810059d2:	e8 19 fe ff ff       	call   810057f0 <__get_current_locale>
810059d7:	83 ec 0c             	sub    $0xc,%esp
810059da:	50                   	push   %eax
810059db:	ff 75 14             	push   0x14(%ebp)
810059de:	ff 75 10             	push   0x10(%ebp)
810059e1:	ff 75 0c             	push   0xc(%ebp)
810059e4:	ff 75 08             	push   0x8(%ebp)
810059e7:	e8 0e fe ff ff       	call   810057fa <_strtol_l>
810059ec:	83 c4 20             	add    $0x20,%esp
810059ef:	c9                   	leave  
810059f0:	c3                   	ret    

810059f1 <strtol_l>:
810059f1:	55                   	push   %ebp
810059f2:	89 e5                	mov    %esp,%ebp
810059f4:	83 ec 08             	sub    $0x8,%esp
810059f7:	a1 a4 83 00 81       	mov    0x810083a4,%eax
810059fc:	83 ec 0c             	sub    $0xc,%esp
810059ff:	ff 75 14             	push   0x14(%ebp)
81005a02:	ff 75 10             	push   0x10(%ebp)
81005a05:	ff 75 0c             	push   0xc(%ebp)
81005a08:	ff 75 08             	push   0x8(%ebp)
81005a0b:	50                   	push   %eax
81005a0c:	e8 e9 fd ff ff       	call   810057fa <_strtol_l>
81005a11:	83 c4 20             	add    $0x20,%esp
81005a14:	c9                   	leave  
81005a15:	c3                   	ret    

81005a16 <strtol>:
81005a16:	55                   	push   %ebp
81005a17:	89 e5                	mov    %esp,%ebp
81005a19:	83 ec 08             	sub    $0x8,%esp
81005a1c:	e8 cf fd ff ff       	call   810057f0 <__get_current_locale>
81005a21:	8b 15 a4 83 00 81    	mov    0x810083a4,%edx
81005a27:	83 ec 0c             	sub    $0xc,%esp
81005a2a:	50                   	push   %eax
81005a2b:	ff 75 10             	push   0x10(%ebp)
81005a2e:	ff 75 0c             	push   0xc(%ebp)
81005a31:	ff 75 08             	push   0x8(%ebp)
81005a34:	52                   	push   %edx
81005a35:	e8 c0 fd ff ff       	call   810057fa <_strtol_l>
81005a3a:	83 c4 20             	add    $0x20,%esp
81005a3d:	c9                   	leave  
81005a3e:	c3                   	ret    

81005a3f <__swbuf_r>:
81005a3f:	55                   	push   %ebp
81005a40:	89 e5                	mov    %esp,%ebp
81005a42:	57                   	push   %edi
81005a43:	56                   	push   %esi
81005a44:	53                   	push   %ebx
81005a45:	83 ec 1c             	sub    $0x1c,%esp
81005a48:	8b 7d 0c             	mov    0xc(%ebp),%edi
81005a4b:	8b 5d 10             	mov    0x10(%ebp),%ebx
81005a4e:	8b 45 08             	mov    0x8(%ebp),%eax
81005a51:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005a54:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005a58:	74 18                	je     81005a72 <__swbuf_r+0x33>
81005a5a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005a5d:	8b 40 38             	mov    0x38(%eax),%eax
81005a60:	85 c0                	test   %eax,%eax
81005a62:	75 0e                	jne    81005a72 <__swbuf_r+0x33>
81005a64:	83 ec 0c             	sub    $0xc,%esp
81005a67:	ff 75 e4             	push   -0x1c(%ebp)
81005a6a:	e8 26 bb ff ff       	call   81001595 <__sinit>
81005a6f:	83 c4 10             	add    $0x10,%esp
81005a72:	8b 43 18             	mov    0x18(%ebx),%eax
81005a75:	89 43 08             	mov    %eax,0x8(%ebx)
81005a78:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005a7c:	98                   	cwtl   
81005a7d:	83 e0 08             	and    $0x8,%eax
81005a80:	85 c0                	test   %eax,%eax
81005a82:	74 07                	je     81005a8b <__swbuf_r+0x4c>
81005a84:	8b 43 10             	mov    0x10(%ebx),%eax
81005a87:	85 c0                	test   %eax,%eax
81005a89:	75 1d                	jne    81005aa8 <__swbuf_r+0x69>
81005a8b:	83 ec 08             	sub    $0x8,%esp
81005a8e:	53                   	push   %ebx
81005a8f:	ff 75 08             	push   0x8(%ebp)
81005a92:	e8 21 01 00 00       	call   81005bb8 <__swsetup_r>
81005a97:	83 c4 10             	add    $0x10,%esp
81005a9a:	85 c0                	test   %eax,%eax
81005a9c:	74 0a                	je     81005aa8 <__swbuf_r+0x69>
81005a9e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005aa3:	e9 a1 00 00 00       	jmp    81005b49 <__swbuf_r+0x10a>
81005aa8:	89 f8                	mov    %edi,%eax
81005aaa:	0f b6 f8             	movzbl %al,%edi
81005aad:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005ab1:	98                   	cwtl   
81005ab2:	25 00 20 00 00       	and    $0x2000,%eax
81005ab7:	85 c0                	test   %eax,%eax
81005ab9:	75 14                	jne    81005acf <__swbuf_r+0x90>
81005abb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005abf:	80 cc 20             	or     $0x20,%ah
81005ac2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005ac6:	8b 43 64             	mov    0x64(%ebx),%eax
81005ac9:	80 e4 df             	and    $0xdf,%ah
81005acc:	89 43 64             	mov    %eax,0x64(%ebx)
81005acf:	8b 03                	mov    (%ebx),%eax
81005ad1:	8b 53 10             	mov    0x10(%ebx),%edx
81005ad4:	29 d0                	sub    %edx,%eax
81005ad6:	89 c6                	mov    %eax,%esi
81005ad8:	8b 43 14             	mov    0x14(%ebx),%eax
81005adb:	39 c6                	cmp    %eax,%esi
81005add:	7c 1f                	jl     81005afe <__swbuf_r+0xbf>
81005adf:	83 ec 08             	sub    $0x8,%esp
81005ae2:	53                   	push   %ebx
81005ae3:	ff 75 08             	push   0x8(%ebp)
81005ae6:	e8 a7 b5 ff ff       	call   81001092 <_fflush_r>
81005aeb:	83 c4 10             	add    $0x10,%esp
81005aee:	85 c0                	test   %eax,%eax
81005af0:	74 07                	je     81005af9 <__swbuf_r+0xba>
81005af2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005af7:	eb 50                	jmp    81005b49 <__swbuf_r+0x10a>
81005af9:	be 00 00 00 00       	mov    $0x0,%esi
81005afe:	8b 43 08             	mov    0x8(%ebx),%eax
81005b01:	83 e8 01             	sub    $0x1,%eax
81005b04:	89 43 08             	mov    %eax,0x8(%ebx)
81005b07:	8b 03                	mov    (%ebx),%eax
81005b09:	8d 50 01             	lea    0x1(%eax),%edx
81005b0c:	89 13                	mov    %edx,(%ebx)
81005b0e:	89 fa                	mov    %edi,%edx
81005b10:	88 10                	mov    %dl,(%eax)
81005b12:	83 c6 01             	add    $0x1,%esi
81005b15:	8b 43 14             	mov    0x14(%ebx),%eax
81005b18:	39 c6                	cmp    %eax,%esi
81005b1a:	74 11                	je     81005b2d <__swbuf_r+0xee>
81005b1c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005b20:	98                   	cwtl   
81005b21:	83 e0 01             	and    $0x1,%eax
81005b24:	85 c0                	test   %eax,%eax
81005b26:	74 1f                	je     81005b47 <__swbuf_r+0x108>
81005b28:	83 ff 0a             	cmp    $0xa,%edi
81005b2b:	75 1a                	jne    81005b47 <__swbuf_r+0x108>
81005b2d:	83 ec 08             	sub    $0x8,%esp
81005b30:	53                   	push   %ebx
81005b31:	ff 75 08             	push   0x8(%ebp)
81005b34:	e8 59 b5 ff ff       	call   81001092 <_fflush_r>
81005b39:	83 c4 10             	add    $0x10,%esp
81005b3c:	85 c0                	test   %eax,%eax
81005b3e:	74 07                	je     81005b47 <__swbuf_r+0x108>
81005b40:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005b45:	eb 02                	jmp    81005b49 <__swbuf_r+0x10a>
81005b47:	89 f8                	mov    %edi,%eax
81005b49:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005b4c:	5b                   	pop    %ebx
81005b4d:	5e                   	pop    %esi
81005b4e:	5f                   	pop    %edi
81005b4f:	5d                   	pop    %ebp
81005b50:	c3                   	ret    

81005b51 <__swbuf>:
81005b51:	55                   	push   %ebp
81005b52:	89 e5                	mov    %esp,%ebp
81005b54:	83 ec 08             	sub    $0x8,%esp
81005b57:	8b 55 08             	mov    0x8(%ebp),%edx
81005b5a:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81005b5d:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81005b62:	83 ec 04             	sub    $0x4,%esp
81005b65:	51                   	push   %ecx
81005b66:	52                   	push   %edx
81005b67:	50                   	push   %eax
81005b68:	e8 d2 fe ff ff       	call   81005a3f <__swbuf_r>
81005b6d:	83 c4 10             	add    $0x10,%esp
81005b70:	c9                   	leave  
81005b71:	c3                   	ret    

81005b72 <_write_r>:
81005b72:	55                   	push   %ebp
81005b73:	89 e5                	mov    %esp,%ebp
81005b75:	83 ec 18             	sub    $0x18,%esp
81005b78:	c7 05 ec 8f 00 81 00 	movl   $0x0,0x81008fec
81005b7f:	00 00 00 
81005b82:	83 ec 04             	sub    $0x4,%esp
81005b85:	ff 75 14             	push   0x14(%ebp)
81005b88:	ff 75 10             	push   0x10(%ebp)
81005b8b:	ff 75 0c             	push   0xc(%ebp)
81005b8e:	e8 df ae ff ff       	call   81000a72 <write>
81005b93:	83 c4 10             	add    $0x10,%esp
81005b96:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005b99:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81005b9d:	75 14                	jne    81005bb3 <_write_r+0x41>
81005b9f:	a1 ec 8f 00 81       	mov    0x81008fec,%eax
81005ba4:	85 c0                	test   %eax,%eax
81005ba6:	74 0b                	je     81005bb3 <_write_r+0x41>
81005ba8:	8b 15 ec 8f 00 81    	mov    0x81008fec,%edx
81005bae:	8b 45 08             	mov    0x8(%ebp),%eax
81005bb1:	89 10                	mov    %edx,(%eax)
81005bb3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005bb6:	c9                   	leave  
81005bb7:	c3                   	ret    

81005bb8 <__swsetup_r>:
81005bb8:	55                   	push   %ebp
81005bb9:	89 e5                	mov    %esp,%ebp
81005bbb:	53                   	push   %ebx
81005bbc:	83 ec 14             	sub    $0x14,%esp
81005bbf:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005bc2:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81005bc7:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005bca:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005bce:	74 18                	je     81005be8 <__swsetup_r+0x30>
81005bd0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005bd3:	8b 40 38             	mov    0x38(%eax),%eax
81005bd6:	85 c0                	test   %eax,%eax
81005bd8:	75 0e                	jne    81005be8 <__swsetup_r+0x30>
81005bda:	83 ec 0c             	sub    $0xc,%esp
81005bdd:	ff 75 f4             	push   -0xc(%ebp)
81005be0:	e8 b0 b9 ff ff       	call   81001595 <__sinit>
81005be5:	83 c4 10             	add    $0x10,%esp
81005be8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005bec:	98                   	cwtl   
81005bed:	83 e0 08             	and    $0x8,%eax
81005bf0:	85 c0                	test   %eax,%eax
81005bf2:	0f 85 82 00 00 00    	jne    81005c7a <__swsetup_r+0xc2>
81005bf8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005bfc:	98                   	cwtl   
81005bfd:	83 e0 10             	and    $0x10,%eax
81005c00:	85 c0                	test   %eax,%eax
81005c02:	75 1e                	jne    81005c22 <__swsetup_r+0x6a>
81005c04:	8b 45 08             	mov    0x8(%ebp),%eax
81005c07:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81005c0d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005c11:	83 c8 40             	or     $0x40,%eax
81005c14:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005c18:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005c1d:	e9 ec 00 00 00       	jmp    81005d0e <__swsetup_r+0x156>
81005c22:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005c26:	98                   	cwtl   
81005c27:	83 e0 04             	and    $0x4,%eax
81005c2a:	85 c0                	test   %eax,%eax
81005c2c:	74 41                	je     81005c6f <__swsetup_r+0xb7>
81005c2e:	8b 43 30             	mov    0x30(%ebx),%eax
81005c31:	85 c0                	test   %eax,%eax
81005c33:	74 23                	je     81005c58 <__swsetup_r+0xa0>
81005c35:	8b 53 30             	mov    0x30(%ebx),%edx
81005c38:	8d 43 40             	lea    0x40(%ebx),%eax
81005c3b:	39 c2                	cmp    %eax,%edx
81005c3d:	74 12                	je     81005c51 <__swsetup_r+0x99>
81005c3f:	8b 43 30             	mov    0x30(%ebx),%eax
81005c42:	83 ec 08             	sub    $0x8,%esp
81005c45:	50                   	push   %eax
81005c46:	ff 75 08             	push   0x8(%ebp)
81005c49:	e8 9d bb ff ff       	call   810017eb <_free_r>
81005c4e:	83 c4 10             	add    $0x10,%esp
81005c51:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81005c58:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005c5c:	83 e0 db             	and    $0xffffffdb,%eax
81005c5f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005c63:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81005c6a:	8b 43 10             	mov    0x10(%ebx),%eax
81005c6d:	89 03                	mov    %eax,(%ebx)
81005c6f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005c73:	83 c8 08             	or     $0x8,%eax
81005c76:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005c7a:	8b 43 10             	mov    0x10(%ebx),%eax
81005c7d:	85 c0                	test   %eax,%eax
81005c7f:	75 2b                	jne    81005cac <__swsetup_r+0xf4>
81005c81:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005c85:	98                   	cwtl   
81005c86:	25 00 02 00 00       	and    $0x200,%eax
81005c8b:	85 c0                	test   %eax,%eax
81005c8d:	74 0e                	je     81005c9d <__swsetup_r+0xe5>
81005c8f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005c93:	98                   	cwtl   
81005c94:	25 80 00 00 00       	and    $0x80,%eax
81005c99:	85 c0                	test   %eax,%eax
81005c9b:	74 0f                	je     81005cac <__swsetup_r+0xf4>
81005c9d:	83 ec 08             	sub    $0x8,%esp
81005ca0:	53                   	push   %ebx
81005ca1:	ff 75 08             	push   0x8(%ebp)
81005ca4:	e8 b9 d5 ff ff       	call   81003262 <__smakebuf_r>
81005ca9:	83 c4 10             	add    $0x10,%esp
81005cac:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005cb0:	98                   	cwtl   
81005cb1:	83 e0 01             	and    $0x1,%eax
81005cb4:	85 c0                	test   %eax,%eax
81005cb6:	74 11                	je     81005cc9 <__swsetup_r+0x111>
81005cb8:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005cbf:	8b 43 14             	mov    0x14(%ebx),%eax
81005cc2:	f7 d8                	neg    %eax
81005cc4:	89 43 18             	mov    %eax,0x18(%ebx)
81005cc7:	eb 19                	jmp    81005ce2 <__swsetup_r+0x12a>
81005cc9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005ccd:	98                   	cwtl   
81005cce:	83 e0 02             	and    $0x2,%eax
81005cd1:	85 c0                	test   %eax,%eax
81005cd3:	75 05                	jne    81005cda <__swsetup_r+0x122>
81005cd5:	8b 43 14             	mov    0x14(%ebx),%eax
81005cd8:	eb 05                	jmp    81005cdf <__swsetup_r+0x127>
81005cda:	b8 00 00 00 00       	mov    $0x0,%eax
81005cdf:	89 43 08             	mov    %eax,0x8(%ebx)
81005ce2:	8b 43 10             	mov    0x10(%ebx),%eax
81005ce5:	85 c0                	test   %eax,%eax
81005ce7:	75 20                	jne    81005d09 <__swsetup_r+0x151>
81005ce9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005ced:	98                   	cwtl   
81005cee:	25 80 00 00 00       	and    $0x80,%eax
81005cf3:	85 c0                	test   %eax,%eax
81005cf5:	74 12                	je     81005d09 <__swsetup_r+0x151>
81005cf7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005cfb:	83 c8 40             	or     $0x40,%eax
81005cfe:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005d02:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005d07:	eb 05                	jmp    81005d0e <__swsetup_r+0x156>
81005d09:	b8 00 00 00 00       	mov    $0x0,%eax
81005d0e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005d11:	c9                   	leave  
81005d12:	c3                   	ret    

81005d13 <__call_exitprocs>:
81005d13:	55                   	push   %ebp
81005d14:	89 e5                	mov    %esp,%ebp
81005d16:	57                   	push   %edi
81005d17:	56                   	push   %esi
81005d18:	53                   	push   %ebx
81005d19:	83 ec 1c             	sub    $0x1c,%esp
81005d1c:	a1 f8 7b 00 81       	mov    0x81007bf8,%eax
81005d21:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
81005d27:	a1 f8 7b 00 81       	mov    0x81007bf8,%eax
81005d2c:	05 48 01 00 00       	add    $0x148,%eax
81005d31:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005d34:	90                   	nop
81005d35:	85 db                	test   %ebx,%ebx
81005d37:	0f 84 e1 00 00 00    	je     81005e1e <__call_exitprocs+0x10b>
81005d3d:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
81005d43:	8b 43 04             	mov    0x4(%ebx),%eax
81005d46:	8d 70 ff             	lea    -0x1(%eax),%esi
81005d49:	e9 c6 00 00 00       	jmp    81005e14 <__call_exitprocs+0x101>
81005d4e:	b8 01 00 00 00       	mov    $0x1,%eax
81005d53:	89 f1                	mov    %esi,%ecx
81005d55:	d3 e0                	shl    %cl,%eax
81005d57:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005d5a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005d5e:	74 17                	je     81005d77 <__call_exitprocs+0x64>
81005d60:	85 ff                	test   %edi,%edi
81005d62:	0f 84 a5 00 00 00    	je     81005e0d <__call_exitprocs+0xfa>
81005d68:	8d 46 20             	lea    0x20(%esi),%eax
81005d6b:	8b 04 87             	mov    (%edi,%eax,4),%eax
81005d6e:	39 45 0c             	cmp    %eax,0xc(%ebp)
81005d71:	0f 85 96 00 00 00    	jne    81005e0d <__call_exitprocs+0xfa>
81005d77:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
81005d7b:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d7e:	8b 43 04             	mov    0x4(%ebx),%eax
81005d81:	83 e8 01             	sub    $0x1,%eax
81005d84:	39 c6                	cmp    %eax,%esi
81005d86:	75 0b                	jne    81005d93 <__call_exitprocs+0x80>
81005d88:	8b 43 04             	mov    0x4(%ebx),%eax
81005d8b:	83 e8 01             	sub    $0x1,%eax
81005d8e:	89 43 04             	mov    %eax,0x4(%ebx)
81005d91:	eb 08                	jmp    81005d9b <__call_exitprocs+0x88>
81005d93:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
81005d9a:	00 
81005d9b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81005d9f:	74 6f                	je     81005e10 <__call_exitprocs+0xfd>
81005da1:	8b 43 04             	mov    0x4(%ebx),%eax
81005da4:	89 45 d8             	mov    %eax,-0x28(%ebp)
81005da7:	85 ff                	test   %edi,%edi
81005da9:	74 0f                	je     81005dba <__call_exitprocs+0xa7>
81005dab:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
81005db1:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005db4:	21 d0                	and    %edx,%eax
81005db6:	85 c0                	test   %eax,%eax
81005db8:	75 07                	jne    81005dc1 <__call_exitprocs+0xae>
81005dba:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005dbd:	ff d0                	call   *%eax
81005dbf:	eb 32                	jmp    81005df3 <__call_exitprocs+0xe0>
81005dc1:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
81005dc7:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005dca:	21 d0                	and    %edx,%eax
81005dcc:	85 c0                	test   %eax,%eax
81005dce:	75 14                	jne    81005de4 <__call_exitprocs+0xd1>
81005dd0:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81005dd3:	83 ec 08             	sub    $0x8,%esp
81005dd6:	50                   	push   %eax
81005dd7:	ff 75 08             	push   0x8(%ebp)
81005dda:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005ddd:	ff d0                	call   *%eax
81005ddf:	83 c4 10             	add    $0x10,%esp
81005de2:	eb 0f                	jmp    81005df3 <__call_exitprocs+0xe0>
81005de4:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81005de7:	83 ec 0c             	sub    $0xc,%esp
81005dea:	50                   	push   %eax
81005deb:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005dee:	ff d0                	call   *%eax
81005df0:	83 c4 10             	add    $0x10,%esp
81005df3:	8b 43 04             	mov    0x4(%ebx),%eax
81005df6:	39 45 d8             	cmp    %eax,-0x28(%ebp)
81005df9:	0f 85 1d ff ff ff    	jne    81005d1c <__call_exitprocs+0x9>
81005dff:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005e02:	8b 00                	mov    (%eax),%eax
81005e04:	39 c3                	cmp    %eax,%ebx
81005e06:	74 09                	je     81005e11 <__call_exitprocs+0xfe>
81005e08:	e9 0f ff ff ff       	jmp    81005d1c <__call_exitprocs+0x9>
81005e0d:	90                   	nop
81005e0e:	eb 01                	jmp    81005e11 <__call_exitprocs+0xfe>
81005e10:	90                   	nop
81005e11:	83 ee 01             	sub    $0x1,%esi
81005e14:	85 f6                	test   %esi,%esi
81005e16:	0f 89 32 ff ff ff    	jns    81005d4e <__call_exitprocs+0x3b>
81005e1c:	eb 01                	jmp    81005e1f <__call_exitprocs+0x10c>
81005e1e:	90                   	nop
81005e1f:	90                   	nop
81005e20:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005e23:	5b                   	pop    %ebx
81005e24:	5e                   	pop    %esi
81005e25:	5f                   	pop    %edi
81005e26:	5d                   	pop    %ebp
81005e27:	c3                   	ret    

81005e28 <_close_r>:
81005e28:	55                   	push   %ebp
81005e29:	89 e5                	mov    %esp,%ebp
81005e2b:	83 ec 18             	sub    $0x18,%esp
81005e2e:	c7 05 ec 8f 00 81 00 	movl   $0x0,0x81008fec
81005e35:	00 00 00 
81005e38:	83 ec 0c             	sub    $0xc,%esp
81005e3b:	ff 75 0c             	push   0xc(%ebp)
81005e3e:	e8 5c ac ff ff       	call   81000a9f <close>
81005e43:	83 c4 10             	add    $0x10,%esp
81005e46:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005e49:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81005e4d:	75 14                	jne    81005e63 <_close_r+0x3b>
81005e4f:	a1 ec 8f 00 81       	mov    0x81008fec,%eax
81005e54:	85 c0                	test   %eax,%eax
81005e56:	74 0b                	je     81005e63 <_close_r+0x3b>
81005e58:	8b 15 ec 8f 00 81    	mov    0x81008fec,%edx
81005e5e:	8b 45 08             	mov    0x8(%ebp),%eax
81005e61:	89 10                	mov    %edx,(%eax)
81005e63:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005e66:	c9                   	leave  
81005e67:	c3                   	ret    

81005e68 <__errno>:
81005e68:	55                   	push   %ebp
81005e69:	89 e5                	mov    %esp,%ebp
81005e6b:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81005e70:	5d                   	pop    %ebp
81005e71:	c3                   	ret    

81005e72 <__sflags>:
81005e72:	55                   	push   %ebp
81005e73:	89 e5                	mov    %esp,%ebp
81005e75:	57                   	push   %edi
81005e76:	56                   	push   %esi
81005e77:	53                   	push   %ebx
81005e78:	8b 55 0c             	mov    0xc(%ebp),%edx
81005e7b:	0f b6 02             	movzbl (%edx),%eax
81005e7e:	0f be c0             	movsbl %al,%eax
81005e81:	83 f8 77             	cmp    $0x77,%eax
81005e84:	74 20                	je     81005ea6 <__sflags+0x34>
81005e86:	83 f8 77             	cmp    $0x77,%eax
81005e89:	7f 3d                	jg     81005ec8 <__sflags+0x56>
81005e8b:	83 f8 61             	cmp    $0x61,%eax
81005e8e:	74 27                	je     81005eb7 <__sflags+0x45>
81005e90:	83 f8 72             	cmp    $0x72,%eax
81005e93:	75 33                	jne    81005ec8 <__sflags+0x56>
81005e95:	be 04 00 00 00       	mov    $0x4,%esi
81005e9a:	bb 00 00 00 00       	mov    $0x0,%ebx
81005e9f:	bf 00 00 00 00       	mov    $0x0,%edi
81005ea4:	eb 32                	jmp    81005ed8 <__sflags+0x66>
81005ea6:	be 08 00 00 00       	mov    $0x8,%esi
81005eab:	bb 01 00 00 00       	mov    $0x1,%ebx
81005eb0:	bf 00 06 00 00       	mov    $0x600,%edi
81005eb5:	eb 21                	jmp    81005ed8 <__sflags+0x66>
81005eb7:	be 08 01 00 00       	mov    $0x108,%esi
81005ebc:	bb 01 00 00 00       	mov    $0x1,%ebx
81005ec1:	bf 08 02 00 00       	mov    $0x208,%edi
81005ec6:	eb 10                	jmp    81005ed8 <__sflags+0x66>
81005ec8:	8b 45 08             	mov    0x8(%ebp),%eax
81005ecb:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81005ed1:	b8 00 00 00 00       	mov    $0x0,%eax
81005ed6:	eb 4f                	jmp    81005f27 <__sflags+0xb5>
81005ed8:	eb 38                	jmp    81005f12 <__sflags+0xa0>
81005eda:	0f b6 02             	movzbl (%edx),%eax
81005edd:	0f be c0             	movsbl %al,%eax
81005ee0:	83 f8 78             	cmp    $0x78,%eax
81005ee3:	74 27                	je     81005f0c <__sflags+0x9a>
81005ee5:	83 f8 78             	cmp    $0x78,%eax
81005ee8:	7f 27                	jg     81005f11 <__sflags+0x9f>
81005eea:	83 f8 2b             	cmp    $0x2b,%eax
81005eed:	74 07                	je     81005ef6 <__sflags+0x84>
81005eef:	83 f8 62             	cmp    $0x62,%eax
81005ef2:	74 1e                	je     81005f12 <__sflags+0xa0>
81005ef4:	eb 1b                	jmp    81005f11 <__sflags+0x9f>
81005ef6:	89 f0                	mov    %esi,%eax
81005ef8:	83 e0 e3             	and    $0xffffffe3,%eax
81005efb:	83 c8 10             	or     $0x10,%eax
81005efe:	89 c6                	mov    %eax,%esi
81005f00:	89 d8                	mov    %ebx,%eax
81005f02:	83 e0 fc             	and    $0xfffffffc,%eax
81005f05:	83 c8 02             	or     $0x2,%eax
81005f08:	89 c3                	mov    %eax,%ebx
81005f0a:	eb 06                	jmp    81005f12 <__sflags+0xa0>
81005f0c:	80 cf 08             	or     $0x8,%bh
81005f0f:	eb 01                	jmp    81005f12 <__sflags+0xa0>
81005f11:	90                   	nop
81005f12:	83 c2 01             	add    $0x1,%edx
81005f15:	0f b6 02             	movzbl (%edx),%eax
81005f18:	84 c0                	test   %al,%al
81005f1a:	75 be                	jne    81005eda <__sflags+0x68>
81005f1c:	89 da                	mov    %ebx,%edx
81005f1e:	09 fa                	or     %edi,%edx
81005f20:	8b 45 10             	mov    0x10(%ebp),%eax
81005f23:	89 10                	mov    %edx,(%eax)
81005f25:	89 f0                	mov    %esi,%eax
81005f27:	5b                   	pop    %ebx
81005f28:	5e                   	pop    %esi
81005f29:	5f                   	pop    %edi
81005f2a:	5d                   	pop    %ebp
81005f2b:	c3                   	ret    

81005f2c <_fputc_r>:
81005f2c:	55                   	push   %ebp
81005f2d:	89 e5                	mov    %esp,%ebp
81005f2f:	83 ec 18             	sub    $0x18,%esp
81005f32:	8b 45 08             	mov    0x8(%ebp),%eax
81005f35:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005f38:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005f3c:	74 18                	je     81005f56 <_fputc_r+0x2a>
81005f3e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005f41:	8b 40 38             	mov    0x38(%eax),%eax
81005f44:	85 c0                	test   %eax,%eax
81005f46:	75 0e                	jne    81005f56 <_fputc_r+0x2a>
81005f48:	83 ec 0c             	sub    $0xc,%esp
81005f4b:	ff 75 f4             	push   -0xc(%ebp)
81005f4e:	e8 42 b6 ff ff       	call   81001595 <__sinit>
81005f53:	83 c4 10             	add    $0x10,%esp
81005f56:	83 ec 04             	sub    $0x4,%esp
81005f59:	ff 75 10             	push   0x10(%ebp)
81005f5c:	ff 75 0c             	push   0xc(%ebp)
81005f5f:	ff 75 08             	push   0x8(%ebp)
81005f62:	e8 4c 0c 00 00       	call   81006bb3 <_putc_r>
81005f67:	83 c4 10             	add    $0x10,%esp
81005f6a:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005f6d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005f70:	c9                   	leave  
81005f71:	c3                   	ret    

81005f72 <fputc>:
81005f72:	55                   	push   %ebp
81005f73:	89 e5                	mov    %esp,%ebp
81005f75:	83 ec 18             	sub    $0x18,%esp
81005f78:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81005f7d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005f80:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005f83:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005f86:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81005f8a:	74 18                	je     81005fa4 <fputc+0x32>
81005f8c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005f8f:	8b 40 38             	mov    0x38(%eax),%eax
81005f92:	85 c0                	test   %eax,%eax
81005f94:	75 0e                	jne    81005fa4 <fputc+0x32>
81005f96:	83 ec 0c             	sub    $0xc,%esp
81005f99:	ff 75 f0             	push   -0x10(%ebp)
81005f9c:	e8 f4 b5 ff ff       	call   81001595 <__sinit>
81005fa1:	83 c4 10             	add    $0x10,%esp
81005fa4:	83 ec 04             	sub    $0x4,%esp
81005fa7:	ff 75 0c             	push   0xc(%ebp)
81005faa:	ff 75 08             	push   0x8(%ebp)
81005fad:	ff 75 f4             	push   -0xc(%ebp)
81005fb0:	e8 fe 0b 00 00       	call   81006bb3 <_putc_r>
81005fb5:	83 c4 10             	add    $0x10,%esp
81005fb8:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005fbb:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005fbe:	c9                   	leave  
81005fbf:	c3                   	ret    

81005fc0 <_fputs_r>:
81005fc0:	55                   	push   %ebp
81005fc1:	89 e5                	mov    %esp,%ebp
81005fc3:	83 ec 28             	sub    $0x28,%esp
81005fc6:	8b 45 0c             	mov    0xc(%ebp),%eax
81005fc9:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005fcc:	83 ec 0c             	sub    $0xc,%esp
81005fcf:	ff 75 0c             	push   0xc(%ebp)
81005fd2:	e8 89 f6 ff ff       	call   81005660 <strlen>
81005fd7:	83 c4 10             	add    $0x10,%esp
81005fda:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005fdd:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005fe0:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005fe3:	8d 45 dc             	lea    -0x24(%ebp),%eax
81005fe6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005fe9:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81005ff0:	8b 45 08             	mov    0x8(%ebp),%eax
81005ff3:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005ff6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005ffa:	74 18                	je     81006014 <_fputs_r+0x54>
81005ffc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005fff:	8b 40 38             	mov    0x38(%eax),%eax
81006002:	85 c0                	test   %eax,%eax
81006004:	75 0e                	jne    81006014 <_fputs_r+0x54>
81006006:	83 ec 0c             	sub    $0xc,%esp
81006009:	ff 75 f4             	push   -0xc(%ebp)
8100600c:	e8 84 b5 ff ff       	call   81001595 <__sinit>
81006011:	83 c4 10             	add    $0x10,%esp
81006014:	8b 45 10             	mov    0x10(%ebp),%eax
81006017:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100601b:	98                   	cwtl   
8100601c:	25 00 20 00 00       	and    $0x2000,%eax
81006021:	85 c0                	test   %eax,%eax
81006023:	75 24                	jne    81006049 <_fputs_r+0x89>
81006025:	8b 45 10             	mov    0x10(%ebp),%eax
81006028:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100602c:	80 cc 20             	or     $0x20,%ah
8100602f:	89 c2                	mov    %eax,%edx
81006031:	8b 45 10             	mov    0x10(%ebp),%eax
81006034:	66 89 50 0c          	mov    %dx,0xc(%eax)
81006038:	8b 45 10             	mov    0x10(%ebp),%eax
8100603b:	8b 40 64             	mov    0x64(%eax),%eax
8100603e:	80 e4 df             	and    $0xdf,%ah
81006041:	89 c2                	mov    %eax,%edx
81006043:	8b 45 10             	mov    0x10(%ebp),%eax
81006046:	89 50 64             	mov    %edx,0x64(%eax)
81006049:	83 ec 04             	sub    $0x4,%esp
8100604c:	8d 45 e4             	lea    -0x1c(%ebp),%eax
8100604f:	50                   	push   %eax
81006050:	ff 75 10             	push   0x10(%ebp)
81006053:	ff 75 08             	push   0x8(%ebp)
81006056:	e8 df 01 00 00       	call   8100623a <__sfvwrite_r>
8100605b:	83 c4 10             	add    $0x10,%esp
8100605e:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006061:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006064:	c9                   	leave  
81006065:	c3                   	ret    

81006066 <fputs>:
81006066:	55                   	push   %ebp
81006067:	89 e5                	mov    %esp,%ebp
81006069:	83 ec 08             	sub    $0x8,%esp
8100606c:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81006071:	83 ec 04             	sub    $0x4,%esp
81006074:	ff 75 0c             	push   0xc(%ebp)
81006077:	ff 75 08             	push   0x8(%ebp)
8100607a:	50                   	push   %eax
8100607b:	e8 40 ff ff ff       	call   81005fc0 <_fputs_r>
81006080:	83 c4 10             	add    $0x10,%esp
81006083:	c9                   	leave  
81006084:	c3                   	ret    

81006085 <__sputc_r>:
81006085:	55                   	push   %ebp
81006086:	89 e5                	mov    %esp,%ebp
81006088:	83 ec 08             	sub    $0x8,%esp
8100608b:	8b 45 10             	mov    0x10(%ebp),%eax
8100608e:	8b 40 08             	mov    0x8(%eax),%eax
81006091:	8d 50 ff             	lea    -0x1(%eax),%edx
81006094:	8b 45 10             	mov    0x10(%ebp),%eax
81006097:	89 50 08             	mov    %edx,0x8(%eax)
8100609a:	8b 45 10             	mov    0x10(%ebp),%eax
8100609d:	8b 40 08             	mov    0x8(%eax),%eax
810060a0:	85 c0                	test   %eax,%eax
810060a2:	79 17                	jns    810060bb <__sputc_r+0x36>
810060a4:	8b 45 10             	mov    0x10(%ebp),%eax
810060a7:	8b 50 08             	mov    0x8(%eax),%edx
810060aa:	8b 45 10             	mov    0x10(%ebp),%eax
810060ad:	8b 40 18             	mov    0x18(%eax),%eax
810060b0:	39 c2                	cmp    %eax,%edx
810060b2:	7c 21                	jl     810060d5 <__sputc_r+0x50>
810060b4:	8b 45 0c             	mov    0xc(%ebp),%eax
810060b7:	3c 0a                	cmp    $0xa,%al
810060b9:	74 1a                	je     810060d5 <__sputc_r+0x50>
810060bb:	8b 45 10             	mov    0x10(%ebp),%eax
810060be:	8b 00                	mov    (%eax),%eax
810060c0:	8d 48 01             	lea    0x1(%eax),%ecx
810060c3:	8b 55 10             	mov    0x10(%ebp),%edx
810060c6:	89 0a                	mov    %ecx,(%edx)
810060c8:	8b 55 0c             	mov    0xc(%ebp),%edx
810060cb:	88 10                	mov    %dl,(%eax)
810060cd:	0f b6 00             	movzbl (%eax),%eax
810060d0:	0f b6 c0             	movzbl %al,%eax
810060d3:	eb 14                	jmp    810060e9 <__sputc_r+0x64>
810060d5:	83 ec 04             	sub    $0x4,%esp
810060d8:	ff 75 10             	push   0x10(%ebp)
810060db:	ff 75 0c             	push   0xc(%ebp)
810060de:	ff 75 08             	push   0x8(%ebp)
810060e1:	e8 59 f9 ff ff       	call   81005a3f <__swbuf_r>
810060e6:	83 c4 10             	add    $0x10,%esp
810060e9:	c9                   	leave  
810060ea:	c3                   	ret    

810060eb <__fputwc>:
810060eb:	55                   	push   %ebp
810060ec:	89 e5                	mov    %esp,%ebp
810060ee:	83 ec 18             	sub    $0x18,%esp
810060f1:	e8 b5 08 00 00       	call   810069ab <__locale_mb_cur_max>
810060f6:	83 f8 01             	cmp    $0x1,%eax
810060f9:	75 1e                	jne    81006119 <__fputwc+0x2e>
810060fb:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810060ff:	7e 18                	jle    81006119 <__fputwc+0x2e>
81006101:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
81006108:	7f 0f                	jg     81006119 <__fputwc+0x2e>
8100610a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100610d:	88 45 ef             	mov    %al,-0x11(%ebp)
81006110:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
81006117:	eb 3c                	jmp    81006155 <__fputwc+0x6a>
81006119:	8b 45 10             	mov    0x10(%ebp),%eax
8100611c:	83 c0 5c             	add    $0x5c,%eax
8100611f:	50                   	push   %eax
81006120:	ff 75 0c             	push   0xc(%ebp)
81006123:	8d 45 ef             	lea    -0x11(%ebp),%eax
81006126:	50                   	push   %eax
81006127:	ff 75 08             	push   0x8(%ebp)
8100612a:	e8 b9 15 00 00       	call   810076e8 <_wcrtomb_r>
8100612f:	83 c4 10             	add    $0x10,%esp
81006132:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006135:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81006139:	75 1a                	jne    81006155 <__fputwc+0x6a>
8100613b:	8b 45 10             	mov    0x10(%ebp),%eax
8100613e:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006142:	83 c8 40             	or     $0x40,%eax
81006145:	89 c2                	mov    %eax,%edx
81006147:	8b 45 10             	mov    0x10(%ebp),%eax
8100614a:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100614e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006153:	eb 44                	jmp    81006199 <__fputwc+0xae>
81006155:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100615c:	eb 30                	jmp    8100618e <__fputwc+0xa3>
8100615e:	8d 55 ef             	lea    -0x11(%ebp),%edx
81006161:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006164:	01 d0                	add    %edx,%eax
81006166:	0f b6 00             	movzbl (%eax),%eax
81006169:	0f b6 c0             	movzbl %al,%eax
8100616c:	83 ec 04             	sub    $0x4,%esp
8100616f:	ff 75 10             	push   0x10(%ebp)
81006172:	50                   	push   %eax
81006173:	ff 75 08             	push   0x8(%ebp)
81006176:	e8 0a ff ff ff       	call   81006085 <__sputc_r>
8100617b:	83 c4 10             	add    $0x10,%esp
8100617e:	83 f8 ff             	cmp    $0xffffffff,%eax
81006181:	75 07                	jne    8100618a <__fputwc+0x9f>
81006183:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006188:	eb 0f                	jmp    81006199 <__fputwc+0xae>
8100618a:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8100618e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006191:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81006194:	72 c8                	jb     8100615e <__fputwc+0x73>
81006196:	8b 45 0c             	mov    0xc(%ebp),%eax
81006199:	c9                   	leave  
8100619a:	c3                   	ret    

8100619b <_fputwc_r>:
8100619b:	55                   	push   %ebp
8100619c:	89 e5                	mov    %esp,%ebp
8100619e:	83 ec 18             	sub    $0x18,%esp
810061a1:	8b 45 10             	mov    0x10(%ebp),%eax
810061a4:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810061a8:	98                   	cwtl   
810061a9:	25 00 20 00 00       	and    $0x2000,%eax
810061ae:	85 c0                	test   %eax,%eax
810061b0:	75 24                	jne    810061d6 <_fputwc_r+0x3b>
810061b2:	8b 45 10             	mov    0x10(%ebp),%eax
810061b5:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810061b9:	80 cc 20             	or     $0x20,%ah
810061bc:	89 c2                	mov    %eax,%edx
810061be:	8b 45 10             	mov    0x10(%ebp),%eax
810061c1:	66 89 50 0c          	mov    %dx,0xc(%eax)
810061c5:	8b 45 10             	mov    0x10(%ebp),%eax
810061c8:	8b 40 64             	mov    0x64(%eax),%eax
810061cb:	80 cc 20             	or     $0x20,%ah
810061ce:	89 c2                	mov    %eax,%edx
810061d0:	8b 45 10             	mov    0x10(%ebp),%eax
810061d3:	89 50 64             	mov    %edx,0x64(%eax)
810061d6:	83 ec 04             	sub    $0x4,%esp
810061d9:	ff 75 10             	push   0x10(%ebp)
810061dc:	ff 75 0c             	push   0xc(%ebp)
810061df:	ff 75 08             	push   0x8(%ebp)
810061e2:	e8 04 ff ff ff       	call   810060eb <__fputwc>
810061e7:	83 c4 10             	add    $0x10,%esp
810061ea:	89 45 f4             	mov    %eax,-0xc(%ebp)
810061ed:	8b 45 f4             	mov    -0xc(%ebp),%eax
810061f0:	c9                   	leave  
810061f1:	c3                   	ret    

810061f2 <fputwc>:
810061f2:	55                   	push   %ebp
810061f3:	89 e5                	mov    %esp,%ebp
810061f5:	83 ec 18             	sub    $0x18,%esp
810061f8:	a1 a4 83 00 81       	mov    0x810083a4,%eax
810061fd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006200:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006203:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006206:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100620a:	74 18                	je     81006224 <fputwc+0x32>
8100620c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100620f:	8b 40 38             	mov    0x38(%eax),%eax
81006212:	85 c0                	test   %eax,%eax
81006214:	75 0e                	jne    81006224 <fputwc+0x32>
81006216:	83 ec 0c             	sub    $0xc,%esp
81006219:	ff 75 f0             	push   -0x10(%ebp)
8100621c:	e8 74 b3 ff ff       	call   81001595 <__sinit>
81006221:	83 c4 10             	add    $0x10,%esp
81006224:	83 ec 04             	sub    $0x4,%esp
81006227:	ff 75 0c             	push   0xc(%ebp)
8100622a:	ff 75 08             	push   0x8(%ebp)
8100622d:	ff 75 f4             	push   -0xc(%ebp)
81006230:	e8 66 ff ff ff       	call   8100619b <_fputwc_r>
81006235:	83 c4 10             	add    $0x10,%esp
81006238:	c9                   	leave  
81006239:	c3                   	ret    

8100623a <__sfvwrite_r>:
8100623a:	55                   	push   %ebp
8100623b:	89 e5                	mov    %esp,%ebp
8100623d:	57                   	push   %edi
8100623e:	56                   	push   %esi
8100623f:	53                   	push   %ebx
81006240:	83 ec 3c             	sub    $0x3c,%esp
81006243:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81006246:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
8100624d:	8b 45 10             	mov    0x10(%ebp),%eax
81006250:	8b 78 08             	mov    0x8(%eax),%edi
81006253:	85 ff                	test   %edi,%edi
81006255:	75 0a                	jne    81006261 <__sfvwrite_r+0x27>
81006257:	b8 00 00 00 00       	mov    $0x0,%eax
8100625c:	e9 6f 04 00 00       	jmp    810066d0 <__sfvwrite_r+0x496>
81006261:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006265:	98                   	cwtl   
81006266:	83 e0 08             	and    $0x8,%eax
81006269:	85 c0                	test   %eax,%eax
8100626b:	74 07                	je     81006274 <__sfvwrite_r+0x3a>
8100626d:	8b 43 10             	mov    0x10(%ebx),%eax
81006270:	85 c0                	test   %eax,%eax
81006272:	75 1d                	jne    81006291 <__sfvwrite_r+0x57>
81006274:	83 ec 08             	sub    $0x8,%esp
81006277:	53                   	push   %ebx
81006278:	ff 75 08             	push   0x8(%ebp)
8100627b:	e8 38 f9 ff ff       	call   81005bb8 <__swsetup_r>
81006280:	83 c4 10             	add    $0x10,%esp
81006283:	85 c0                	test   %eax,%eax
81006285:	74 0a                	je     81006291 <__sfvwrite_r+0x57>
81006287:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100628c:	e9 3f 04 00 00       	jmp    810066d0 <__sfvwrite_r+0x496>
81006291:	8b 45 10             	mov    0x10(%ebp),%eax
81006294:	8b 00                	mov    (%eax),%eax
81006296:	89 45 c0             	mov    %eax,-0x40(%ebp)
81006299:	bf 00 00 00 00       	mov    $0x0,%edi
8100629e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810062a2:	98                   	cwtl   
810062a3:	83 e0 02             	and    $0x2,%eax
810062a6:	85 c0                	test   %eax,%eax
810062a8:	74 68                	je     81006312 <__sfvwrite_r+0xd8>
810062aa:	eb 11                	jmp    810062bd <__sfvwrite_r+0x83>
810062ac:	8b 45 c0             	mov    -0x40(%ebp),%eax
810062af:	8b 08                	mov    (%eax),%ecx
810062b1:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810062b4:	8b 78 04             	mov    0x4(%eax),%edi
810062b7:	83 c0 08             	add    $0x8,%eax
810062ba:	89 45 c0             	mov    %eax,-0x40(%ebp)
810062bd:	85 ff                	test   %edi,%edi
810062bf:	74 eb                	je     810062ac <__sfvwrite_r+0x72>
810062c1:	8b 4b 24             	mov    0x24(%ebx),%ecx
810062c4:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
810062c9:	39 c7                	cmp    %eax,%edi
810062cb:	0f 46 c7             	cmovbe %edi,%eax
810062ce:	89 c2                	mov    %eax,%edx
810062d0:	8b 43 1c             	mov    0x1c(%ebx),%eax
810062d3:	52                   	push   %edx
810062d4:	ff 75 c4             	push   -0x3c(%ebp)
810062d7:	50                   	push   %eax
810062d8:	ff 75 08             	push   0x8(%ebp)
810062db:	ff d1                	call   *%ecx
810062dd:	83 c4 10             	add    $0x10,%esp
810062e0:	89 c6                	mov    %eax,%esi
810062e2:	85 f6                	test   %esi,%esi
810062e4:	0f 8e cf 03 00 00    	jle    810066b9 <__sfvwrite_r+0x47f>
810062ea:	89 f0                	mov    %esi,%eax
810062ec:	01 45 c4             	add    %eax,-0x3c(%ebp)
810062ef:	89 f0                	mov    %esi,%eax
810062f1:	29 c7                	sub    %eax,%edi
810062f3:	8b 45 10             	mov    0x10(%ebp),%eax
810062f6:	8b 40 08             	mov    0x8(%eax),%eax
810062f9:	89 f2                	mov    %esi,%edx
810062fb:	29 d0                	sub    %edx,%eax
810062fd:	8b 4d 10             	mov    0x10(%ebp),%ecx
81006300:	89 41 08             	mov    %eax,0x8(%ecx)
81006303:	8b 45 10             	mov    0x10(%ebp),%eax
81006306:	8b 40 08             	mov    0x8(%eax),%eax
81006309:	85 c0                	test   %eax,%eax
8100630b:	75 b0                	jne    810062bd <__sfvwrite_r+0x83>
8100630d:	e9 a0 03 00 00       	jmp    810066b2 <__sfvwrite_r+0x478>
81006312:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006316:	98                   	cwtl   
81006317:	83 e0 01             	and    $0x1,%eax
8100631a:	85 c0                	test   %eax,%eax
8100631c:	0f 85 44 02 00 00    	jne    81006566 <__sfvwrite_r+0x32c>
81006322:	eb 11                	jmp    81006335 <__sfvwrite_r+0xfb>
81006324:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006327:	8b 08                	mov    (%eax),%ecx
81006329:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
8100632c:	8b 78 04             	mov    0x4(%eax),%edi
8100632f:	83 c0 08             	add    $0x8,%eax
81006332:	89 45 c0             	mov    %eax,-0x40(%ebp)
81006335:	85 ff                	test   %edi,%edi
81006337:	74 eb                	je     81006324 <__sfvwrite_r+0xea>
81006339:	8b 73 08             	mov    0x8(%ebx),%esi
8100633c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006340:	98                   	cwtl   
81006341:	25 00 02 00 00       	and    $0x200,%eax
81006346:	85 c0                	test   %eax,%eax
81006348:	0f 84 4f 01 00 00    	je     8100649d <__sfvwrite_r+0x263>
8100634e:	89 f0                	mov    %esi,%eax
81006350:	39 c7                	cmp    %eax,%edi
81006352:	0f 82 12 01 00 00    	jb     8100646a <__sfvwrite_r+0x230>
81006358:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100635c:	98                   	cwtl   
8100635d:	25 80 04 00 00       	and    $0x480,%eax
81006362:	85 c0                	test   %eax,%eax
81006364:	0f 84 00 01 00 00    	je     8100646a <__sfvwrite_r+0x230>
8100636a:	8b 03                	mov    (%ebx),%eax
8100636c:	8b 53 10             	mov    0x10(%ebx),%edx
8100636f:	29 d0                	sub    %edx,%eax
81006371:	89 45 d0             	mov    %eax,-0x30(%ebp)
81006374:	8b 53 14             	mov    0x14(%ebx),%edx
81006377:	89 d0                	mov    %edx,%eax
81006379:	01 c0                	add    %eax,%eax
8100637b:	01 d0                	add    %edx,%eax
8100637d:	89 c2                	mov    %eax,%edx
8100637f:	c1 ea 1f             	shr    $0x1f,%edx
81006382:	01 d0                	add    %edx,%eax
81006384:	d1 f8                	sar    %eax
81006386:	89 45 d8             	mov    %eax,-0x28(%ebp)
81006389:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100638c:	01 f8                	add    %edi,%eax
8100638e:	8d 50 01             	lea    0x1(%eax),%edx
81006391:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006394:	39 c2                	cmp    %eax,%edx
81006396:	76 0b                	jbe    810063a3 <__sfvwrite_r+0x169>
81006398:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100639b:	01 f8                	add    %edi,%eax
8100639d:	83 c0 01             	add    $0x1,%eax
810063a0:	89 45 d8             	mov    %eax,-0x28(%ebp)
810063a3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810063a7:	98                   	cwtl   
810063a8:	25 00 04 00 00       	and    $0x400,%eax
810063ad:	85 c0                	test   %eax,%eax
810063af:	74 4f                	je     81006400 <__sfvwrite_r+0x1c6>
810063b1:	8b 45 d8             	mov    -0x28(%ebp),%eax
810063b4:	83 ec 08             	sub    $0x8,%esp
810063b7:	50                   	push   %eax
810063b8:	ff 75 08             	push   0x8(%ebp)
810063bb:	e8 ee d2 ff ff       	call   810036ae <_malloc_r>
810063c0:	83 c4 10             	add    $0x10,%esp
810063c3:	89 45 dc             	mov    %eax,-0x24(%ebp)
810063c6:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810063ca:	75 0e                	jne    810063da <__sfvwrite_r+0x1a0>
810063cc:	8b 45 08             	mov    0x8(%ebp),%eax
810063cf:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810063d5:	e9 e6 02 00 00       	jmp    810066c0 <__sfvwrite_r+0x486>
810063da:	8b 55 d0             	mov    -0x30(%ebp),%edx
810063dd:	8b 43 10             	mov    0x10(%ebx),%eax
810063e0:	83 ec 04             	sub    $0x4,%esp
810063e3:	52                   	push   %edx
810063e4:	50                   	push   %eax
810063e5:	ff 75 dc             	push   -0x24(%ebp)
810063e8:	e8 cb db ff ff       	call   81003fb8 <memcpy>
810063ed:	83 c4 10             	add    $0x10,%esp
810063f0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810063f4:	66 25 7f fb          	and    $0xfb7f,%ax
810063f8:	0c 80                	or     $0x80,%al
810063fa:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810063fe:	eb 49                	jmp    81006449 <__sfvwrite_r+0x20f>
81006400:	8b 55 d8             	mov    -0x28(%ebp),%edx
81006403:	8b 43 10             	mov    0x10(%ebx),%eax
81006406:	83 ec 04             	sub    $0x4,%esp
81006409:	52                   	push   %edx
8100640a:	50                   	push   %eax
8100640b:	ff 75 08             	push   0x8(%ebp)
8100640e:	e8 84 08 00 00       	call   81006c97 <_realloc_r>
81006413:	83 c4 10             	add    $0x10,%esp
81006416:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006419:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100641d:	75 2a                	jne    81006449 <__sfvwrite_r+0x20f>
8100641f:	8b 43 10             	mov    0x10(%ebx),%eax
81006422:	83 ec 08             	sub    $0x8,%esp
81006425:	50                   	push   %eax
81006426:	ff 75 08             	push   0x8(%ebp)
81006429:	e8 bd b3 ff ff       	call   810017eb <_free_r>
8100642e:	83 c4 10             	add    $0x10,%esp
81006431:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006435:	24 7f                	and    $0x7f,%al
81006437:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100643b:	8b 45 08             	mov    0x8(%ebp),%eax
8100643e:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81006444:	e9 77 02 00 00       	jmp    810066c0 <__sfvwrite_r+0x486>
81006449:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100644c:	89 43 10             	mov    %eax,0x10(%ebx)
8100644f:	8b 55 d0             	mov    -0x30(%ebp),%edx
81006452:	8b 45 dc             	mov    -0x24(%ebp),%eax
81006455:	01 d0                	add    %edx,%eax
81006457:	89 03                	mov    %eax,(%ebx)
81006459:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100645c:	89 43 14             	mov    %eax,0x14(%ebx)
8100645f:	89 fe                	mov    %edi,%esi
81006461:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006464:	2b 45 d0             	sub    -0x30(%ebp),%eax
81006467:	89 43 08             	mov    %eax,0x8(%ebx)
8100646a:	89 f0                	mov    %esi,%eax
8100646c:	39 c7                	cmp    %eax,%edi
8100646e:	73 02                	jae    81006472 <__sfvwrite_r+0x238>
81006470:	89 fe                	mov    %edi,%esi
81006472:	89 f2                	mov    %esi,%edx
81006474:	8b 03                	mov    (%ebx),%eax
81006476:	83 ec 04             	sub    $0x4,%esp
81006479:	52                   	push   %edx
8100647a:	ff 75 c4             	push   -0x3c(%ebp)
8100647d:	50                   	push   %eax
8100647e:	e8 3d 06 00 00       	call   81006ac0 <memmove>
81006483:	83 c4 10             	add    $0x10,%esp
81006486:	8b 43 08             	mov    0x8(%ebx),%eax
81006489:	29 f0                	sub    %esi,%eax
8100648b:	89 43 08             	mov    %eax,0x8(%ebx)
8100648e:	8b 03                	mov    (%ebx),%eax
81006490:	89 f2                	mov    %esi,%edx
81006492:	01 d0                	add    %edx,%eax
81006494:	89 03                	mov    %eax,(%ebx)
81006496:	89 fe                	mov    %edi,%esi
81006498:	e9 9d 00 00 00       	jmp    8100653a <__sfvwrite_r+0x300>
8100649d:	8b 13                	mov    (%ebx),%edx
8100649f:	8b 43 10             	mov    0x10(%ebx),%eax
810064a2:	39 c2                	cmp    %eax,%edx
810064a4:	77 07                	ja     810064ad <__sfvwrite_r+0x273>
810064a6:	8b 43 14             	mov    0x14(%ebx),%eax
810064a9:	39 c7                	cmp    %eax,%edi
810064ab:	73 4c                	jae    810064f9 <__sfvwrite_r+0x2bf>
810064ad:	89 f0                	mov    %esi,%eax
810064af:	39 c7                	cmp    %eax,%edi
810064b1:	0f 46 c7             	cmovbe %edi,%eax
810064b4:	89 c6                	mov    %eax,%esi
810064b6:	89 f2                	mov    %esi,%edx
810064b8:	8b 03                	mov    (%ebx),%eax
810064ba:	83 ec 04             	sub    $0x4,%esp
810064bd:	52                   	push   %edx
810064be:	ff 75 c4             	push   -0x3c(%ebp)
810064c1:	50                   	push   %eax
810064c2:	e8 f9 05 00 00       	call   81006ac0 <memmove>
810064c7:	83 c4 10             	add    $0x10,%esp
810064ca:	8b 43 08             	mov    0x8(%ebx),%eax
810064cd:	29 f0                	sub    %esi,%eax
810064cf:	89 43 08             	mov    %eax,0x8(%ebx)
810064d2:	8b 03                	mov    (%ebx),%eax
810064d4:	89 f2                	mov    %esi,%edx
810064d6:	01 d0                	add    %edx,%eax
810064d8:	89 03                	mov    %eax,(%ebx)
810064da:	8b 43 08             	mov    0x8(%ebx),%eax
810064dd:	85 c0                	test   %eax,%eax
810064df:	75 58                	jne    81006539 <__sfvwrite_r+0x2ff>
810064e1:	83 ec 08             	sub    $0x8,%esp
810064e4:	53                   	push   %ebx
810064e5:	ff 75 08             	push   0x8(%ebp)
810064e8:	e8 a5 ab ff ff       	call   81001092 <_fflush_r>
810064ed:	83 c4 10             	add    $0x10,%esp
810064f0:	85 c0                	test   %eax,%eax
810064f2:	74 45                	je     81006539 <__sfvwrite_r+0x2ff>
810064f4:	e9 c7 01 00 00       	jmp    810066c0 <__sfvwrite_r+0x486>
810064f9:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
810064ff:	77 04                	ja     81006505 <__sfvwrite_r+0x2cb>
81006501:	89 f8                	mov    %edi,%eax
81006503:	eb 05                	jmp    8100650a <__sfvwrite_r+0x2d0>
81006505:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
8100650a:	8b 4b 14             	mov    0x14(%ebx),%ecx
8100650d:	99                   	cltd   
8100650e:	f7 f9                	idiv   %ecx
81006510:	89 c2                	mov    %eax,%edx
81006512:	8b 43 14             	mov    0x14(%ebx),%eax
81006515:	89 d6                	mov    %edx,%esi
81006517:	0f af f0             	imul   %eax,%esi
8100651a:	8b 53 24             	mov    0x24(%ebx),%edx
8100651d:	8b 43 1c             	mov    0x1c(%ebx),%eax
81006520:	56                   	push   %esi
81006521:	ff 75 c4             	push   -0x3c(%ebp)
81006524:	50                   	push   %eax
81006525:	ff 75 08             	push   0x8(%ebp)
81006528:	ff d2                	call   *%edx
8100652a:	83 c4 10             	add    $0x10,%esp
8100652d:	89 c6                	mov    %eax,%esi
8100652f:	85 f6                	test   %esi,%esi
81006531:	0f 8e 85 01 00 00    	jle    810066bc <__sfvwrite_r+0x482>
81006537:	eb 01                	jmp    8100653a <__sfvwrite_r+0x300>
81006539:	90                   	nop
8100653a:	89 f0                	mov    %esi,%eax
8100653c:	01 45 c4             	add    %eax,-0x3c(%ebp)
8100653f:	89 f0                	mov    %esi,%eax
81006541:	29 c7                	sub    %eax,%edi
81006543:	8b 45 10             	mov    0x10(%ebp),%eax
81006546:	8b 40 08             	mov    0x8(%eax),%eax
81006549:	89 f2                	mov    %esi,%edx
8100654b:	29 d0                	sub    %edx,%eax
8100654d:	8b 4d 10             	mov    0x10(%ebp),%ecx
81006550:	89 41 08             	mov    %eax,0x8(%ecx)
81006553:	8b 45 10             	mov    0x10(%ebp),%eax
81006556:	8b 40 08             	mov    0x8(%eax),%eax
81006559:	85 c0                	test   %eax,%eax
8100655b:	0f 85 d4 fd ff ff    	jne    81006335 <__sfvwrite_r+0xfb>
81006561:	e9 4c 01 00 00       	jmp    810066b2 <__sfvwrite_r+0x478>
81006566:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100656d:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81006574:	eb 18                	jmp    8100658e <__sfvwrite_r+0x354>
81006576:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100657d:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006580:	8b 08                	mov    (%eax),%ecx
81006582:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81006585:	8b 78 04             	mov    0x4(%eax),%edi
81006588:	83 c0 08             	add    $0x8,%eax
8100658b:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100658e:	85 ff                	test   %edi,%edi
81006590:	74 e4                	je     81006576 <__sfvwrite_r+0x33c>
81006592:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006596:	75 32                	jne    810065ca <__sfvwrite_r+0x390>
81006598:	83 ec 04             	sub    $0x4,%esp
8100659b:	57                   	push   %edi
8100659c:	6a 0a                	push   $0xa
8100659e:	8b 75 c4             	mov    -0x3c(%ebp),%esi
810065a1:	56                   	push   %esi
810065a2:	e8 29 d9 ff ff       	call   81003ed0 <memchr>
810065a7:	83 c4 10             	add    $0x10,%esp
810065aa:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810065ad:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
810065b1:	74 0a                	je     810065bd <__sfvwrite_r+0x383>
810065b3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810065b6:	83 c0 01             	add    $0x1,%eax
810065b9:	29 f0                	sub    %esi,%eax
810065bb:	eb 03                	jmp    810065c0 <__sfvwrite_r+0x386>
810065bd:	8d 47 01             	lea    0x1(%edi),%eax
810065c0:	89 45 e0             	mov    %eax,-0x20(%ebp)
810065c3:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810065ca:	8b 45 e0             	mov    -0x20(%ebp),%eax
810065cd:	39 c7                	cmp    %eax,%edi
810065cf:	0f 46 c7             	cmovbe %edi,%eax
810065d2:	89 c1                	mov    %eax,%ecx
810065d4:	8b 53 08             	mov    0x8(%ebx),%edx
810065d7:	8b 43 14             	mov    0x14(%ebx),%eax
810065da:	8d 34 02             	lea    (%edx,%eax,1),%esi
810065dd:	8b 13                	mov    (%ebx),%edx
810065df:	8b 43 10             	mov    0x10(%ebx),%eax
810065e2:	39 c2                	cmp    %eax,%edx
810065e4:	76 38                	jbe    8100661e <__sfvwrite_r+0x3e4>
810065e6:	39 f1                	cmp    %esi,%ecx
810065e8:	7e 34                	jle    8100661e <__sfvwrite_r+0x3e4>
810065ea:	89 f2                	mov    %esi,%edx
810065ec:	8b 03                	mov    (%ebx),%eax
810065ee:	83 ec 04             	sub    $0x4,%esp
810065f1:	52                   	push   %edx
810065f2:	ff 75 c4             	push   -0x3c(%ebp)
810065f5:	50                   	push   %eax
810065f6:	e8 c5 04 00 00       	call   81006ac0 <memmove>
810065fb:	83 c4 10             	add    $0x10,%esp
810065fe:	8b 03                	mov    (%ebx),%eax
81006600:	89 f2                	mov    %esi,%edx
81006602:	01 d0                	add    %edx,%eax
81006604:	89 03                	mov    %eax,(%ebx)
81006606:	83 ec 08             	sub    $0x8,%esp
81006609:	53                   	push   %ebx
8100660a:	ff 75 08             	push   0x8(%ebp)
8100660d:	e8 80 aa ff ff       	call   81001092 <_fflush_r>
81006612:	83 c4 10             	add    $0x10,%esp
81006615:	85 c0                	test   %eax,%eax
81006617:	74 4f                	je     81006668 <__sfvwrite_r+0x42e>
81006619:	e9 a2 00 00 00       	jmp    810066c0 <__sfvwrite_r+0x486>
8100661e:	8b 73 14             	mov    0x14(%ebx),%esi
81006621:	89 c8                	mov    %ecx,%eax
81006623:	39 c6                	cmp    %eax,%esi
81006625:	7f 1b                	jg     81006642 <__sfvwrite_r+0x408>
81006627:	8b 53 24             	mov    0x24(%ebx),%edx
8100662a:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100662d:	56                   	push   %esi
8100662e:	ff 75 c4             	push   -0x3c(%ebp)
81006631:	50                   	push   %eax
81006632:	ff 75 08             	push   0x8(%ebp)
81006635:	ff d2                	call   *%edx
81006637:	83 c4 10             	add    $0x10,%esp
8100663a:	89 c6                	mov    %eax,%esi
8100663c:	85 f6                	test   %esi,%esi
8100663e:	7f 28                	jg     81006668 <__sfvwrite_r+0x42e>
81006640:	eb 7e                	jmp    810066c0 <__sfvwrite_r+0x486>
81006642:	89 ce                	mov    %ecx,%esi
81006644:	89 f2                	mov    %esi,%edx
81006646:	8b 03                	mov    (%ebx),%eax
81006648:	83 ec 04             	sub    $0x4,%esp
8100664b:	52                   	push   %edx
8100664c:	ff 75 c4             	push   -0x3c(%ebp)
8100664f:	50                   	push   %eax
81006650:	e8 6b 04 00 00       	call   81006ac0 <memmove>
81006655:	83 c4 10             	add    $0x10,%esp
81006658:	8b 43 08             	mov    0x8(%ebx),%eax
8100665b:	29 f0                	sub    %esi,%eax
8100665d:	89 43 08             	mov    %eax,0x8(%ebx)
81006660:	8b 03                	mov    (%ebx),%eax
81006662:	89 f2                	mov    %esi,%edx
81006664:	01 d0                	add    %edx,%eax
81006666:	89 03                	mov    %eax,(%ebx)
81006668:	29 75 e0             	sub    %esi,-0x20(%ebp)
8100666b:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8100666f:	75 1a                	jne    8100668b <__sfvwrite_r+0x451>
81006671:	83 ec 08             	sub    $0x8,%esp
81006674:	53                   	push   %ebx
81006675:	ff 75 08             	push   0x8(%ebp)
81006678:	e8 15 aa ff ff       	call   81001092 <_fflush_r>
8100667d:	83 c4 10             	add    $0x10,%esp
81006680:	85 c0                	test   %eax,%eax
81006682:	75 3b                	jne    810066bf <__sfvwrite_r+0x485>
81006684:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100668b:	89 f0                	mov    %esi,%eax
8100668d:	01 45 c4             	add    %eax,-0x3c(%ebp)
81006690:	89 f0                	mov    %esi,%eax
81006692:	29 c7                	sub    %eax,%edi
81006694:	8b 45 10             	mov    0x10(%ebp),%eax
81006697:	8b 40 08             	mov    0x8(%eax),%eax
8100669a:	89 f2                	mov    %esi,%edx
8100669c:	29 d0                	sub    %edx,%eax
8100669e:	8b 4d 10             	mov    0x10(%ebp),%ecx
810066a1:	89 41 08             	mov    %eax,0x8(%ecx)
810066a4:	8b 45 10             	mov    0x10(%ebp),%eax
810066a7:	8b 40 08             	mov    0x8(%eax),%eax
810066aa:	85 c0                	test   %eax,%eax
810066ac:	0f 85 dc fe ff ff    	jne    8100658e <__sfvwrite_r+0x354>
810066b2:	b8 00 00 00 00       	mov    $0x0,%eax
810066b7:	eb 17                	jmp    810066d0 <__sfvwrite_r+0x496>
810066b9:	90                   	nop
810066ba:	eb 04                	jmp    810066c0 <__sfvwrite_r+0x486>
810066bc:	90                   	nop
810066bd:	eb 01                	jmp    810066c0 <__sfvwrite_r+0x486>
810066bf:	90                   	nop
810066c0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810066c4:	83 c8 40             	or     $0x40,%eax
810066c7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810066cb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810066d0:	8d 65 f4             	lea    -0xc(%ebp),%esp
810066d3:	5b                   	pop    %ebx
810066d4:	5e                   	pop    %esi
810066d5:	5f                   	pop    %edi
810066d6:	5d                   	pop    %ebp
810066d7:	c3                   	ret    

810066d8 <_getc_r>:
810066d8:	55                   	push   %ebp
810066d9:	89 e5                	mov    %esp,%ebp
810066db:	53                   	push   %ebx
810066dc:	83 ec 14             	sub    $0x14,%esp
810066df:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810066e2:	8b 45 08             	mov    0x8(%ebp),%eax
810066e5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810066e8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810066ec:	74 18                	je     81006706 <_getc_r+0x2e>
810066ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
810066f1:	8b 40 38             	mov    0x38(%eax),%eax
810066f4:	85 c0                	test   %eax,%eax
810066f6:	75 0e                	jne    81006706 <_getc_r+0x2e>
810066f8:	83 ec 0c             	sub    $0xc,%esp
810066fb:	ff 75 f4             	push   -0xc(%ebp)
810066fe:	e8 92 ae ff ff       	call   81001595 <__sinit>
81006703:	83 c4 10             	add    $0x10,%esp
81006706:	8b 43 04             	mov    0x4(%ebx),%eax
81006709:	83 e8 01             	sub    $0x1,%eax
8100670c:	89 43 04             	mov    %eax,0x4(%ebx)
8100670f:	8b 43 04             	mov    0x4(%ebx),%eax
81006712:	85 c0                	test   %eax,%eax
81006714:	79 11                	jns    81006727 <_getc_r+0x4f>
81006716:	83 ec 08             	sub    $0x8,%esp
81006719:	53                   	push   %ebx
8100671a:	ff 75 08             	push   0x8(%ebp)
8100671d:	e8 4f 0e 00 00       	call   81007571 <__srget_r>
81006722:	83 c4 10             	add    $0x10,%esp
81006725:	eb 0d                	jmp    81006734 <_getc_r+0x5c>
81006727:	8b 03                	mov    (%ebx),%eax
81006729:	8d 50 01             	lea    0x1(%eax),%edx
8100672c:	89 13                	mov    %edx,(%ebx)
8100672e:	0f b6 00             	movzbl (%eax),%eax
81006731:	0f b6 c0             	movzbl %al,%eax
81006734:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006737:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100673a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100673d:	c9                   	leave  
8100673e:	c3                   	ret    

8100673f <getc>:
8100673f:	55                   	push   %ebp
81006740:	89 e5                	mov    %esp,%ebp
81006742:	53                   	push   %ebx
81006743:	83 ec 14             	sub    $0x14,%esp
81006746:	8b 5d 08             	mov    0x8(%ebp),%ebx
81006749:	a1 a4 83 00 81       	mov    0x810083a4,%eax
8100674e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006751:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006754:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006757:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100675b:	74 18                	je     81006775 <getc+0x36>
8100675d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006760:	8b 40 38             	mov    0x38(%eax),%eax
81006763:	85 c0                	test   %eax,%eax
81006765:	75 0e                	jne    81006775 <getc+0x36>
81006767:	83 ec 0c             	sub    $0xc,%esp
8100676a:	ff 75 f0             	push   -0x10(%ebp)
8100676d:	e8 23 ae ff ff       	call   81001595 <__sinit>
81006772:	83 c4 10             	add    $0x10,%esp
81006775:	8b 43 04             	mov    0x4(%ebx),%eax
81006778:	83 e8 01             	sub    $0x1,%eax
8100677b:	89 43 04             	mov    %eax,0x4(%ebx)
8100677e:	8b 43 04             	mov    0x4(%ebx),%eax
81006781:	85 c0                	test   %eax,%eax
81006783:	79 11                	jns    81006796 <getc+0x57>
81006785:	83 ec 08             	sub    $0x8,%esp
81006788:	53                   	push   %ebx
81006789:	ff 75 f4             	push   -0xc(%ebp)
8100678c:	e8 e0 0d 00 00       	call   81007571 <__srget_r>
81006791:	83 c4 10             	add    $0x10,%esp
81006794:	eb 0d                	jmp    810067a3 <getc+0x64>
81006796:	8b 03                	mov    (%ebx),%eax
81006798:	8d 50 01             	lea    0x1(%eax),%edx
8100679b:	89 13                	mov    %edx,(%ebx)
8100679d:	0f b6 00             	movzbl (%eax),%eax
810067a0:	0f b6 c0             	movzbl %al,%eax
810067a3:	89 45 ec             	mov    %eax,-0x14(%ebp)
810067a6:	8b 45 ec             	mov    -0x14(%ebp),%eax
810067a9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810067ac:	c9                   	leave  
810067ad:	c3                   	ret    

810067ae <_findenv>:
810067ae:	55                   	push   %ebp
810067af:	89 e5                	mov    %esp,%ebp
810067b1:	83 ec 08             	sub    $0x8,%esp
810067b4:	8b 55 08             	mov    0x8(%ebp),%edx
810067b7:	a1 a4 83 00 81       	mov    0x810083a4,%eax
810067bc:	83 ec 04             	sub    $0x4,%esp
810067bf:	ff 75 0c             	push   0xc(%ebp)
810067c2:	52                   	push   %edx
810067c3:	50                   	push   %eax
810067c4:	e8 25 00 00 00       	call   810067ee <_findenv_r>
810067c9:	83 c4 10             	add    $0x10,%esp
810067cc:	c9                   	leave  
810067cd:	c3                   	ret    

810067ce <getenv>:
810067ce:	55                   	push   %ebp
810067cf:	89 e5                	mov    %esp,%ebp
810067d1:	83 ec 18             	sub    $0x18,%esp
810067d4:	a1 a4 83 00 81       	mov    0x810083a4,%eax
810067d9:	83 ec 04             	sub    $0x4,%esp
810067dc:	8d 55 f4             	lea    -0xc(%ebp),%edx
810067df:	52                   	push   %edx
810067e0:	ff 75 08             	push   0x8(%ebp)
810067e3:	50                   	push   %eax
810067e4:	e8 05 00 00 00       	call   810067ee <_findenv_r>
810067e9:	83 c4 10             	add    $0x10,%esp
810067ec:	c9                   	leave  
810067ed:	c3                   	ret    

810067ee <_findenv_r>:
810067ee:	55                   	push   %ebp
810067ef:	89 e5                	mov    %esp,%ebp
810067f1:	57                   	push   %edi
810067f2:	56                   	push   %esi
810067f3:	53                   	push   %ebx
810067f4:	83 ec 1c             	sub    $0x1c,%esp
810067f7:	8b 7d 0c             	mov    0xc(%ebp),%edi
810067fa:	83 ec 0c             	sub    $0xc,%esp
810067fd:	ff 75 08             	push   0x8(%ebp)
81006800:	e8 54 10 00 00       	call   81007859 <__env_lock>
81006805:	83 c4 10             	add    $0x10,%esp
81006808:	a1 d0 87 00 81       	mov    0x810087d0,%eax
8100680d:	8b 00                	mov    (%eax),%eax
8100680f:	85 c0                	test   %eax,%eax
81006811:	75 18                	jne    8100682b <_findenv_r+0x3d>
81006813:	83 ec 0c             	sub    $0xc,%esp
81006816:	ff 75 08             	push   0x8(%ebp)
81006819:	e8 41 10 00 00       	call   8100785f <__env_unlock>
8100681e:	83 c4 10             	add    $0x10,%esp
81006821:	b8 00 00 00 00       	mov    $0x0,%eax
81006826:	e9 a8 00 00 00       	jmp    810068d3 <_findenv_r+0xe5>
8100682b:	89 7d e4             	mov    %edi,-0x1c(%ebp)
8100682e:	eb 04                	jmp    81006834 <_findenv_r+0x46>
81006830:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81006834:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006837:	0f b6 00             	movzbl (%eax),%eax
8100683a:	84 c0                	test   %al,%al
8100683c:	74 0a                	je     81006848 <_findenv_r+0x5a>
8100683e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006841:	0f b6 00             	movzbl (%eax),%eax
81006844:	3c 3d                	cmp    $0x3d,%al
81006846:	75 e8                	jne    81006830 <_findenv_r+0x42>
81006848:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100684b:	0f b6 00             	movzbl (%eax),%eax
8100684e:	3c 3d                	cmp    $0x3d,%al
81006850:	74 6e                	je     810068c0 <_findenv_r+0xd2>
81006852:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006855:	29 f8                	sub    %edi,%eax
81006857:	89 c6                	mov    %eax,%esi
81006859:	a1 d0 87 00 81       	mov    0x810087d0,%eax
8100685e:	8b 18                	mov    (%eax),%ebx
81006860:	eb 58                	jmp    810068ba <_findenv_r+0xcc>
81006862:	89 f2                	mov    %esi,%edx
81006864:	8b 03                	mov    (%ebx),%eax
81006866:	83 ec 04             	sub    $0x4,%esp
81006869:	52                   	push   %edx
8100686a:	57                   	push   %edi
8100686b:	50                   	push   %eax
8100686c:	e8 80 0d 00 00       	call   810075f1 <strncmp>
81006871:	83 c4 10             	add    $0x10,%esp
81006874:	85 c0                	test   %eax,%eax
81006876:	75 3f                	jne    810068b7 <_findenv_r+0xc9>
81006878:	8b 03                	mov    (%ebx),%eax
8100687a:	89 f2                	mov    %esi,%edx
8100687c:	01 d0                	add    %edx,%eax
8100687e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006881:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006884:	0f b6 00             	movzbl (%eax),%eax
81006887:	3c 3d                	cmp    $0x3d,%al
81006889:	75 2c                	jne    810068b7 <_findenv_r+0xc9>
8100688b:	a1 d0 87 00 81       	mov    0x810087d0,%eax
81006890:	8b 10                	mov    (%eax),%edx
81006892:	89 d8                	mov    %ebx,%eax
81006894:	29 d0                	sub    %edx,%eax
81006896:	c1 f8 02             	sar    $0x2,%eax
81006899:	89 c2                	mov    %eax,%edx
8100689b:	8b 45 10             	mov    0x10(%ebp),%eax
8100689e:	89 10                	mov    %edx,(%eax)
810068a0:	83 ec 0c             	sub    $0xc,%esp
810068a3:	ff 75 08             	push   0x8(%ebp)
810068a6:	e8 b4 0f 00 00       	call   8100785f <__env_unlock>
810068ab:	83 c4 10             	add    $0x10,%esp
810068ae:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810068b2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810068b5:	eb 1c                	jmp    810068d3 <_findenv_r+0xe5>
810068b7:	83 c3 04             	add    $0x4,%ebx
810068ba:	8b 03                	mov    (%ebx),%eax
810068bc:	85 c0                	test   %eax,%eax
810068be:	75 a2                	jne    81006862 <_findenv_r+0x74>
810068c0:	83 ec 0c             	sub    $0xc,%esp
810068c3:	ff 75 08             	push   0x8(%ebp)
810068c6:	e8 94 0f 00 00       	call   8100785f <__env_unlock>
810068cb:	83 c4 10             	add    $0x10,%esp
810068ce:	b8 00 00 00 00       	mov    $0x0,%eax
810068d3:	8d 65 f4             	lea    -0xc(%ebp),%esp
810068d6:	5b                   	pop    %ebx
810068d7:	5e                   	pop    %esi
810068d8:	5f                   	pop    %edi
810068d9:	5d                   	pop    %ebp
810068da:	c3                   	ret    

810068db <_getenv_r>:
810068db:	55                   	push   %ebp
810068dc:	89 e5                	mov    %esp,%ebp
810068de:	83 ec 18             	sub    $0x18,%esp
810068e1:	83 ec 04             	sub    $0x4,%esp
810068e4:	8d 45 f4             	lea    -0xc(%ebp),%eax
810068e7:	50                   	push   %eax
810068e8:	ff 75 0c             	push   0xc(%ebp)
810068eb:	ff 75 08             	push   0x8(%ebp)
810068ee:	e8 fb fe ff ff       	call   810067ee <_findenv_r>
810068f3:	83 c4 10             	add    $0x10,%esp
810068f6:	c9                   	leave  
810068f7:	c3                   	ret    

810068f8 <_isatty_r>:
810068f8:	55                   	push   %ebp
810068f9:	89 e5                	mov    %esp,%ebp
810068fb:	83 ec 18             	sub    $0x18,%esp
810068fe:	c7 05 ec 8f 00 81 00 	movl   $0x0,0x81008fec
81006905:	00 00 00 
81006908:	83 ec 0c             	sub    $0xc,%esp
8100690b:	ff 75 0c             	push   0xc(%ebp)
8100690e:	e8 da a1 ff ff       	call   81000aed <isatty>
81006913:	83 c4 10             	add    $0x10,%esp
81006916:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006919:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100691d:	75 14                	jne    81006933 <_isatty_r+0x3b>
8100691f:	a1 ec 8f 00 81       	mov    0x81008fec,%eax
81006924:	85 c0                	test   %eax,%eax
81006926:	74 0b                	je     81006933 <_isatty_r+0x3b>
81006928:	8b 15 ec 8f 00 81    	mov    0x81008fec,%edx
8100692e:	8b 45 08             	mov    0x8(%ebp),%eax
81006931:	89 10                	mov    %edx,(%eax)
81006933:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006936:	c9                   	leave  
81006937:	c3                   	ret    

81006938 <__get_global_locale>:
81006938:	55                   	push   %ebp
81006939:	89 e5                	mov    %esp,%ebp
8100693b:	b8 e0 87 00 81       	mov    $0x810087e0,%eax
81006940:	5d                   	pop    %ebp
81006941:	c3                   	ret    

81006942 <__get_current_locale>:
81006942:	55                   	push   %ebp
81006943:	89 e5                	mov    %esp,%ebp
81006945:	e8 ee ff ff ff       	call   81006938 <__get_global_locale>
8100694a:	5d                   	pop    %ebp
8100694b:	c3                   	ret    

8100694c <_setlocale_r>:
8100694c:	55                   	push   %ebp
8100694d:	89 e5                	mov    %esp,%ebp
8100694f:	83 ec 08             	sub    $0x8,%esp
81006952:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006956:	74 4c                	je     810069a4 <_setlocale_r+0x58>
81006958:	83 ec 08             	sub    $0x8,%esp
8100695b:	68 44 7f 00 81       	push   $0x81007f44
81006960:	ff 75 10             	push   0x10(%ebp)
81006963:	e8 44 ec ff ff       	call   810055ac <strcmp>
81006968:	83 c4 10             	add    $0x10,%esp
8100696b:	85 c0                	test   %eax,%eax
8100696d:	74 35                	je     810069a4 <_setlocale_r+0x58>
8100696f:	83 ec 08             	sub    $0x8,%esp
81006972:	68 4a 7f 00 81       	push   $0x81007f4a
81006977:	ff 75 10             	push   0x10(%ebp)
8100697a:	e8 2d ec ff ff       	call   810055ac <strcmp>
8100697f:	83 c4 10             	add    $0x10,%esp
81006982:	85 c0                	test   %eax,%eax
81006984:	74 1e                	je     810069a4 <_setlocale_r+0x58>
81006986:	83 ec 08             	sub    $0x8,%esp
81006989:	68 43 7f 00 81       	push   $0x81007f43
8100698e:	ff 75 10             	push   0x10(%ebp)
81006991:	e8 16 ec ff ff       	call   810055ac <strcmp>
81006996:	83 c4 10             	add    $0x10,%esp
81006999:	85 c0                	test   %eax,%eax
8100699b:	74 07                	je     810069a4 <_setlocale_r+0x58>
8100699d:	b8 00 00 00 00       	mov    $0x0,%eax
810069a2:	eb 05                	jmp    810069a9 <_setlocale_r+0x5d>
810069a4:	b8 4a 7f 00 81       	mov    $0x81007f4a,%eax
810069a9:	c9                   	leave  
810069aa:	c3                   	ret    

810069ab <__locale_mb_cur_max>:
810069ab:	55                   	push   %ebp
810069ac:	89 e5                	mov    %esp,%ebp
810069ae:	e8 8f ff ff ff       	call   81006942 <__get_current_locale>
810069b3:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
810069ba:	0f be c0             	movsbl %al,%eax
810069bd:	5d                   	pop    %ebp
810069be:	c3                   	ret    

810069bf <setlocale>:
810069bf:	55                   	push   %ebp
810069c0:	89 e5                	mov    %esp,%ebp
810069c2:	83 ec 08             	sub    $0x8,%esp
810069c5:	a1 a4 83 00 81       	mov    0x810083a4,%eax
810069ca:	83 ec 04             	sub    $0x4,%esp
810069cd:	ff 75 0c             	push   0xc(%ebp)
810069d0:	ff 75 08             	push   0x8(%ebp)
810069d3:	50                   	push   %eax
810069d4:	e8 73 ff ff ff       	call   8100694c <_setlocale_r>
810069d9:	83 c4 10             	add    $0x10,%esp
810069dc:	c9                   	leave  
810069dd:	c3                   	ret    

810069de <_lseek_r>:
810069de:	55                   	push   %ebp
810069df:	89 e5                	mov    %esp,%ebp
810069e1:	83 ec 18             	sub    $0x18,%esp
810069e4:	c7 05 ec 8f 00 81 00 	movl   $0x0,0x81008fec
810069eb:	00 00 00 
810069ee:	83 ec 04             	sub    $0x4,%esp
810069f1:	ff 75 14             	push   0x14(%ebp)
810069f4:	ff 75 10             	push   0x10(%ebp)
810069f7:	ff 75 0c             	push   0xc(%ebp)
810069fa:	e8 c1 a0 ff ff       	call   81000ac0 <lseek>
810069ff:	83 c4 10             	add    $0x10,%esp
81006a02:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006a05:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006a09:	75 14                	jne    81006a1f <_lseek_r+0x41>
81006a0b:	a1 ec 8f 00 81       	mov    0x81008fec,%eax
81006a10:	85 c0                	test   %eax,%eax
81006a12:	74 0b                	je     81006a1f <_lseek_r+0x41>
81006a14:	8b 15 ec 8f 00 81    	mov    0x81008fec,%edx
81006a1a:	8b 45 08             	mov    0x8(%ebp),%eax
81006a1d:	89 10                	mov    %edx,(%eax)
81006a1f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006a22:	c9                   	leave  
81006a23:	c3                   	ret    

81006a24 <__get_global_locale>:
81006a24:	55                   	push   %ebp
81006a25:	89 e5                	mov    %esp,%ebp
81006a27:	b8 e0 87 00 81       	mov    $0x810087e0,%eax
81006a2c:	5d                   	pop    %ebp
81006a2d:	c3                   	ret    

81006a2e <__get_current_locale>:
81006a2e:	55                   	push   %ebp
81006a2f:	89 e5                	mov    %esp,%ebp
81006a31:	e8 ee ff ff ff       	call   81006a24 <__get_global_locale>
81006a36:	5d                   	pop    %ebp
81006a37:	c3                   	ret    

81006a38 <_mbtowc_r>:
81006a38:	55                   	push   %ebp
81006a39:	89 e5                	mov    %esp,%ebp
81006a3b:	83 ec 08             	sub    $0x8,%esp
81006a3e:	e8 eb ff ff ff       	call   81006a2e <__get_current_locale>
81006a43:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
81006a49:	83 ec 0c             	sub    $0xc,%esp
81006a4c:	ff 75 18             	push   0x18(%ebp)
81006a4f:	ff 75 14             	push   0x14(%ebp)
81006a52:	ff 75 10             	push   0x10(%ebp)
81006a55:	ff 75 0c             	push   0xc(%ebp)
81006a58:	ff 75 08             	push   0x8(%ebp)
81006a5b:	ff d0                	call   *%eax
81006a5d:	83 c4 20             	add    $0x20,%esp
81006a60:	c9                   	leave  
81006a61:	c3                   	ret    

81006a62 <__ascii_mbtowc>:
81006a62:	55                   	push   %ebp
81006a63:	89 e5                	mov    %esp,%ebp
81006a65:	83 ec 10             	sub    $0x10,%esp
81006a68:	8b 45 10             	mov    0x10(%ebp),%eax
81006a6b:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006a6e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006a72:	75 06                	jne    81006a7a <__ascii_mbtowc+0x18>
81006a74:	8d 45 f8             	lea    -0x8(%ebp),%eax
81006a77:	89 45 0c             	mov    %eax,0xc(%ebp)
81006a7a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006a7e:	75 07                	jne    81006a87 <__ascii_mbtowc+0x25>
81006a80:	b8 00 00 00 00       	mov    $0x0,%eax
81006a85:	eb 31                	jmp    81006ab8 <__ascii_mbtowc+0x56>
81006a87:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006a8b:	75 07                	jne    81006a94 <__ascii_mbtowc+0x32>
81006a8d:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
81006a92:	eb 24                	jmp    81006ab8 <__ascii_mbtowc+0x56>
81006a94:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006a97:	0f b6 00             	movzbl (%eax),%eax
81006a9a:	0f b6 d0             	movzbl %al,%edx
81006a9d:	8b 45 0c             	mov    0xc(%ebp),%eax
81006aa0:	89 10                	mov    %edx,(%eax)
81006aa2:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006aa5:	0f b6 00             	movzbl (%eax),%eax
81006aa8:	84 c0                	test   %al,%al
81006aaa:	75 07                	jne    81006ab3 <__ascii_mbtowc+0x51>
81006aac:	b8 00 00 00 00       	mov    $0x0,%eax
81006ab1:	eb 05                	jmp    81006ab8 <__ascii_mbtowc+0x56>
81006ab3:	b8 01 00 00 00       	mov    $0x1,%eax
81006ab8:	c9                   	leave  
81006ab9:	c3                   	ret    
81006aba:	66 90                	xchg   %ax,%ax
81006abc:	66 90                	xchg   %ax,%ax
81006abe:	66 90                	xchg   %ax,%ax

81006ac0 <memmove>:
81006ac0:	55                   	push   %ebp
81006ac1:	89 e5                	mov    %esp,%ebp
81006ac3:	56                   	push   %esi
81006ac4:	57                   	push   %edi
81006ac5:	53                   	push   %ebx
81006ac6:	8b 7d 08             	mov    0x8(%ebp),%edi
81006ac9:	8b 4d 10             	mov    0x10(%ebp),%ecx
81006acc:	8b 75 0c             	mov    0xc(%ebp),%esi
81006acf:	fc                   	cld    
81006ad0:	39 fe                	cmp    %edi,%esi
81006ad2:	73 43                	jae    81006b17 <memmove+0x57>
81006ad4:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81006ad8:	39 df                	cmp    %ebx,%edi
81006ada:	77 3b                	ja     81006b17 <memmove+0x57>
81006adc:	01 ce                	add    %ecx,%esi
81006ade:	01 cf                	add    %ecx,%edi
81006ae0:	fd                   	std    
81006ae1:	83 f9 08             	cmp    $0x8,%ecx
81006ae4:	76 2b                	jbe    81006b11 <memmove+0x51>
81006ae6:	89 fa                	mov    %edi,%edx
81006ae8:	89 cb                	mov    %ecx,%ebx
81006aea:	83 e2 03             	and    $0x3,%edx
81006aed:	74 0c                	je     81006afb <memmove+0x3b>
81006aef:	89 d1                	mov    %edx,%ecx
81006af1:	4e                   	dec    %esi
81006af2:	4f                   	dec    %edi
81006af3:	29 cb                	sub    %ecx,%ebx
81006af5:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81006af7:	89 d9                	mov    %ebx,%ecx
81006af9:	46                   	inc    %esi
81006afa:	47                   	inc    %edi
81006afb:	c1 e9 02             	shr    $0x2,%ecx
81006afe:	83 ee 04             	sub    $0x4,%esi
81006b01:	83 ef 04             	sub    $0x4,%edi
81006b04:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81006b06:	83 c6 04             	add    $0x4,%esi
81006b09:	83 c7 04             	add    $0x4,%edi
81006b0c:	89 d9                	mov    %ebx,%ecx
81006b0e:	83 e1 03             	and    $0x3,%ecx
81006b11:	4e                   	dec    %esi
81006b12:	4f                   	dec    %edi
81006b13:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81006b15:	eb 2a                	jmp    81006b41 <memmove+0x81>
81006b17:	83 f9 08             	cmp    $0x8,%ecx
81006b1a:	76 23                	jbe    81006b3f <memmove+0x7f>
81006b1c:	89 fa                	mov    %edi,%edx
81006b1e:	89 cb                	mov    %ecx,%ebx
81006b20:	83 e2 03             	and    $0x3,%edx
81006b23:	74 10                	je     81006b35 <memmove+0x75>
81006b25:	b9 04 00 00 00       	mov    $0x4,%ecx
81006b2a:	29 d1                	sub    %edx,%ecx
81006b2c:	83 e1 03             	and    $0x3,%ecx
81006b2f:	29 cb                	sub    %ecx,%ebx
81006b31:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81006b33:	89 d9                	mov    %ebx,%ecx
81006b35:	c1 e9 02             	shr    $0x2,%ecx
81006b38:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81006b3a:	89 d9                	mov    %ebx,%ecx
81006b3c:	83 e1 03             	and    $0x3,%ecx
81006b3f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81006b41:	8b 45 08             	mov    0x8(%ebp),%eax
81006b44:	fc                   	cld    
81006b45:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006b48:	5b                   	pop    %ebx
81006b49:	5f                   	pop    %edi
81006b4a:	5e                   	pop    %esi
81006b4b:	c9                   	leave  
81006b4c:	c3                   	ret    

81006b4d <__sputc_r>:
81006b4d:	55                   	push   %ebp
81006b4e:	89 e5                	mov    %esp,%ebp
81006b50:	83 ec 08             	sub    $0x8,%esp
81006b53:	8b 45 10             	mov    0x10(%ebp),%eax
81006b56:	8b 40 08             	mov    0x8(%eax),%eax
81006b59:	8d 50 ff             	lea    -0x1(%eax),%edx
81006b5c:	8b 45 10             	mov    0x10(%ebp),%eax
81006b5f:	89 50 08             	mov    %edx,0x8(%eax)
81006b62:	8b 45 10             	mov    0x10(%ebp),%eax
81006b65:	8b 40 08             	mov    0x8(%eax),%eax
81006b68:	85 c0                	test   %eax,%eax
81006b6a:	79 17                	jns    81006b83 <__sputc_r+0x36>
81006b6c:	8b 45 10             	mov    0x10(%ebp),%eax
81006b6f:	8b 50 08             	mov    0x8(%eax),%edx
81006b72:	8b 45 10             	mov    0x10(%ebp),%eax
81006b75:	8b 40 18             	mov    0x18(%eax),%eax
81006b78:	39 c2                	cmp    %eax,%edx
81006b7a:	7c 21                	jl     81006b9d <__sputc_r+0x50>
81006b7c:	8b 45 0c             	mov    0xc(%ebp),%eax
81006b7f:	3c 0a                	cmp    $0xa,%al
81006b81:	74 1a                	je     81006b9d <__sputc_r+0x50>
81006b83:	8b 45 10             	mov    0x10(%ebp),%eax
81006b86:	8b 00                	mov    (%eax),%eax
81006b88:	8d 48 01             	lea    0x1(%eax),%ecx
81006b8b:	8b 55 10             	mov    0x10(%ebp),%edx
81006b8e:	89 0a                	mov    %ecx,(%edx)
81006b90:	8b 55 0c             	mov    0xc(%ebp),%edx
81006b93:	88 10                	mov    %dl,(%eax)
81006b95:	0f b6 00             	movzbl (%eax),%eax
81006b98:	0f b6 c0             	movzbl %al,%eax
81006b9b:	eb 14                	jmp    81006bb1 <__sputc_r+0x64>
81006b9d:	83 ec 04             	sub    $0x4,%esp
81006ba0:	ff 75 10             	push   0x10(%ebp)
81006ba3:	ff 75 0c             	push   0xc(%ebp)
81006ba6:	ff 75 08             	push   0x8(%ebp)
81006ba9:	e8 91 ee ff ff       	call   81005a3f <__swbuf_r>
81006bae:	83 c4 10             	add    $0x10,%esp
81006bb1:	c9                   	leave  
81006bb2:	c3                   	ret    

81006bb3 <_putc_r>:
81006bb3:	55                   	push   %ebp
81006bb4:	89 e5                	mov    %esp,%ebp
81006bb6:	53                   	push   %ebx
81006bb7:	83 ec 14             	sub    $0x14,%esp
81006bba:	8b 5d 10             	mov    0x10(%ebp),%ebx
81006bbd:	8b 45 08             	mov    0x8(%ebp),%eax
81006bc0:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006bc3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81006bc7:	74 18                	je     81006be1 <_putc_r+0x2e>
81006bc9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006bcc:	8b 40 38             	mov    0x38(%eax),%eax
81006bcf:	85 c0                	test   %eax,%eax
81006bd1:	75 0e                	jne    81006be1 <_putc_r+0x2e>
81006bd3:	83 ec 0c             	sub    $0xc,%esp
81006bd6:	ff 75 f4             	push   -0xc(%ebp)
81006bd9:	e8 b7 a9 ff ff       	call   81001595 <__sinit>
81006bde:	83 c4 10             	add    $0x10,%esp
81006be1:	83 ec 04             	sub    $0x4,%esp
81006be4:	53                   	push   %ebx
81006be5:	ff 75 0c             	push   0xc(%ebp)
81006be8:	ff 75 08             	push   0x8(%ebp)
81006beb:	e8 5d ff ff ff       	call   81006b4d <__sputc_r>
81006bf0:	83 c4 10             	add    $0x10,%esp
81006bf3:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006bf6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006bf9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81006bfc:	c9                   	leave  
81006bfd:	c3                   	ret    

81006bfe <putc>:
81006bfe:	55                   	push   %ebp
81006bff:	89 e5                	mov    %esp,%ebp
81006c01:	53                   	push   %ebx
81006c02:	83 ec 14             	sub    $0x14,%esp
81006c05:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81006c08:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81006c0d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006c10:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006c13:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006c16:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81006c1a:	74 18                	je     81006c34 <putc+0x36>
81006c1c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006c1f:	8b 40 38             	mov    0x38(%eax),%eax
81006c22:	85 c0                	test   %eax,%eax
81006c24:	75 0e                	jne    81006c34 <putc+0x36>
81006c26:	83 ec 0c             	sub    $0xc,%esp
81006c29:	ff 75 f0             	push   -0x10(%ebp)
81006c2c:	e8 64 a9 ff ff       	call   81001595 <__sinit>
81006c31:	83 c4 10             	add    $0x10,%esp
81006c34:	83 ec 04             	sub    $0x4,%esp
81006c37:	53                   	push   %ebx
81006c38:	ff 75 08             	push   0x8(%ebp)
81006c3b:	ff 75 f4             	push   -0xc(%ebp)
81006c3e:	e8 0a ff ff ff       	call   81006b4d <__sputc_r>
81006c43:	83 c4 10             	add    $0x10,%esp
81006c46:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006c49:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006c4c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81006c4f:	c9                   	leave  
81006c50:	c3                   	ret    

81006c51 <_read_r>:
81006c51:	55                   	push   %ebp
81006c52:	89 e5                	mov    %esp,%ebp
81006c54:	83 ec 18             	sub    $0x18,%esp
81006c57:	c7 05 ec 8f 00 81 00 	movl   $0x0,0x81008fec
81006c5e:	00 00 00 
81006c61:	83 ec 04             	sub    $0x4,%esp
81006c64:	ff 75 14             	push   0x14(%ebp)
81006c67:	ff 75 10             	push   0x10(%ebp)
81006c6a:	ff 75 0c             	push   0xc(%ebp)
81006c6d:	e8 d3 9d ff ff       	call   81000a45 <read>
81006c72:	83 c4 10             	add    $0x10,%esp
81006c75:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006c78:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006c7c:	75 14                	jne    81006c92 <_read_r+0x41>
81006c7e:	a1 ec 8f 00 81       	mov    0x81008fec,%eax
81006c83:	85 c0                	test   %eax,%eax
81006c85:	74 0b                	je     81006c92 <_read_r+0x41>
81006c87:	8b 15 ec 8f 00 81    	mov    0x81008fec,%edx
81006c8d:	8b 45 08             	mov    0x8(%ebp),%eax
81006c90:	89 10                	mov    %edx,(%eax)
81006c92:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006c95:	c9                   	leave  
81006c96:	c3                   	ret    

81006c97 <_realloc_r>:
81006c97:	55                   	push   %ebp
81006c98:	89 e5                	mov    %esp,%ebp
81006c9a:	83 ec 78             	sub    $0x78,%esp
81006c9d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006ca1:	75 16                	jne    81006cb9 <_realloc_r+0x22>
81006ca3:	83 ec 08             	sub    $0x8,%esp
81006ca6:	ff 75 10             	push   0x10(%ebp)
81006ca9:	ff 75 08             	push   0x8(%ebp)
81006cac:	e8 fd c9 ff ff       	call   810036ae <_malloc_r>
81006cb1:	83 c4 10             	add    $0x10,%esp
81006cb4:	e9 b6 08 00 00       	jmp    8100756f <_realloc_r+0x8d8>
81006cb9:	83 ec 0c             	sub    $0xc,%esp
81006cbc:	ff 75 08             	push   0x8(%ebp)
81006cbf:	e8 c4 d3 ff ff       	call   81004088 <__malloc_lock>
81006cc4:	83 c4 10             	add    $0x10,%esp
81006cc7:	8b 45 0c             	mov    0xc(%ebp),%eax
81006cca:	83 e8 08             	sub    $0x8,%eax
81006ccd:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81006cd0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006cd3:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006cd6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006cd9:	8b 40 04             	mov    0x4(%eax),%eax
81006cdc:	83 e0 fc             	and    $0xfffffffc,%eax
81006cdf:	89 45 c0             	mov    %eax,-0x40(%ebp)
81006ce2:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006ce5:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006ce8:	8b 45 10             	mov    0x10(%ebp),%eax
81006ceb:	83 c0 0b             	add    $0xb,%eax
81006cee:	83 f8 16             	cmp    $0x16,%eax
81006cf1:	76 0b                	jbe    81006cfe <_realloc_r+0x67>
81006cf3:	8b 45 10             	mov    0x10(%ebp),%eax
81006cf6:	83 c0 0b             	add    $0xb,%eax
81006cf9:	83 e0 f8             	and    $0xfffffff8,%eax
81006cfc:	eb 05                	jmp    81006d03 <_realloc_r+0x6c>
81006cfe:	b8 10 00 00 00       	mov    $0x10,%eax
81006d03:	89 45 bc             	mov    %eax,-0x44(%ebp)
81006d06:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006d09:	85 c0                	test   %eax,%eax
81006d0b:	78 08                	js     81006d15 <_realloc_r+0x7e>
81006d0d:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006d10:	3b 45 10             	cmp    0x10(%ebp),%eax
81006d13:	73 13                	jae    81006d28 <_realloc_r+0x91>
81006d15:	8b 45 08             	mov    0x8(%ebp),%eax
81006d18:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81006d1e:	b8 00 00 00 00       	mov    $0x0,%eax
81006d23:	e9 47 08 00 00       	jmp    8100756f <_realloc_r+0x8d8>
81006d28:	8b 55 c0             	mov    -0x40(%ebp),%edx
81006d2b:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006d2e:	39 c2                	cmp    %eax,%edx
81006d30:	0f 8d 8b 07 00 00    	jge    810074c1 <_realloc_r+0x82a>
81006d36:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81006d39:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006d3c:	01 d0                	add    %edx,%eax
81006d3e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006d41:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81006d46:	8b 40 08             	mov    0x8(%eax),%eax
81006d49:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81006d4c:	74 1e                	je     81006d6c <_realloc_r+0xd5>
81006d4e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006d51:	8b 40 04             	mov    0x4(%eax),%eax
81006d54:	83 e0 fe             	and    $0xfffffffe,%eax
81006d57:	89 c2                	mov    %eax,%edx
81006d59:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006d5c:	01 d0                	add    %edx,%eax
81006d5e:	8b 40 04             	mov    0x4(%eax),%eax
81006d61:	83 e0 01             	and    $0x1,%eax
81006d64:	85 c0                	test   %eax,%eax
81006d66:	0f 85 ca 00 00 00    	jne    81006e36 <_realloc_r+0x19f>
81006d6c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006d6f:	8b 40 04             	mov    0x4(%eax),%eax
81006d72:	83 e0 fc             	and    $0xfffffffc,%eax
81006d75:	89 45 e8             	mov    %eax,-0x18(%ebp)
81006d78:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81006d7d:	8b 40 08             	mov    0x8(%eax),%eax
81006d80:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81006d83:	75 71                	jne    81006df6 <_realloc_r+0x15f>
81006d85:	8b 55 e8             	mov    -0x18(%ebp),%edx
81006d88:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006d8b:	01 d0                	add    %edx,%eax
81006d8d:	89 c2                	mov    %eax,%edx
81006d8f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006d92:	83 c0 10             	add    $0x10,%eax
81006d95:	39 c2                	cmp    %eax,%edx
81006d97:	0f 8c a9 00 00 00    	jl     81006e46 <_realloc_r+0x1af>
81006d9d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81006da0:	01 45 f0             	add    %eax,-0x10(%ebp)
81006da3:	ba c0 83 00 81       	mov    $0x810083c0,%edx
81006da8:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81006dab:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006dae:	01 c8                	add    %ecx,%eax
81006db0:	89 42 08             	mov    %eax,0x8(%edx)
81006db3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006db6:	2b 45 bc             	sub    -0x44(%ebp),%eax
81006db9:	89 c2                	mov    %eax,%edx
81006dbb:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81006dc0:	8b 40 08             	mov    0x8(%eax),%eax
81006dc3:	83 ca 01             	or     $0x1,%edx
81006dc6:	89 50 04             	mov    %edx,0x4(%eax)
81006dc9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006dcc:	8b 40 04             	mov    0x4(%eax),%eax
81006dcf:	83 e0 01             	and    $0x1,%eax
81006dd2:	0b 45 bc             	or     -0x44(%ebp),%eax
81006dd5:	89 c2                	mov    %eax,%edx
81006dd7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006dda:	89 50 04             	mov    %edx,0x4(%eax)
81006ddd:	83 ec 0c             	sub    $0xc,%esp
81006de0:	ff 75 08             	push   0x8(%ebp)
81006de3:	e8 a6 d2 ff ff       	call   8100408e <__malloc_unlock>
81006de8:	83 c4 10             	add    $0x10,%esp
81006deb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006dee:	83 c0 08             	add    $0x8,%eax
81006df1:	e9 79 07 00 00       	jmp    8100756f <_realloc_r+0x8d8>
81006df6:	8b 55 e8             	mov    -0x18(%ebp),%edx
81006df9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006dfc:	01 d0                	add    %edx,%eax
81006dfe:	89 c2                	mov    %eax,%edx
81006e00:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006e03:	39 c2                	cmp    %eax,%edx
81006e05:	7c 3f                	jl     81006e46 <_realloc_r+0x1af>
81006e07:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006e0a:	8b 40 0c             	mov    0xc(%eax),%eax
81006e0d:	89 45 b8             	mov    %eax,-0x48(%ebp)
81006e10:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006e13:	8b 40 08             	mov    0x8(%eax),%eax
81006e16:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81006e19:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81006e1c:	8b 55 b8             	mov    -0x48(%ebp),%edx
81006e1f:	89 50 0c             	mov    %edx,0xc(%eax)
81006e22:	8b 45 b8             	mov    -0x48(%ebp),%eax
81006e25:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81006e28:	89 50 08             	mov    %edx,0x8(%eax)
81006e2b:	8b 45 e8             	mov    -0x18(%ebp),%eax
81006e2e:	01 45 f0             	add    %eax,-0x10(%ebp)
81006e31:	e9 8c 06 00 00       	jmp    810074c2 <_realloc_r+0x82b>
81006e36:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81006e3d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81006e44:	eb 01                	jmp    81006e47 <_realloc_r+0x1b0>
81006e46:	90                   	nop
81006e47:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006e4a:	8b 40 04             	mov    0x4(%eax),%eax
81006e4d:	83 e0 01             	and    $0x1,%eax
81006e50:	85 c0                	test   %eax,%eax
81006e52:	0f 85 d6 04 00 00    	jne    8100732e <_realloc_r+0x697>
81006e58:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006e5b:	8b 00                	mov    (%eax),%eax
81006e5d:	f7 d8                	neg    %eax
81006e5f:	89 c2                	mov    %eax,%edx
81006e61:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006e64:	01 d0                	add    %edx,%eax
81006e66:	89 45 b0             	mov    %eax,-0x50(%ebp)
81006e69:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006e6c:	8b 40 04             	mov    0x4(%eax),%eax
81006e6f:	83 e0 fc             	and    $0xfffffffc,%eax
81006e72:	89 45 ac             	mov    %eax,-0x54(%ebp)
81006e75:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81006e79:	0f 84 4a 03 00 00    	je     810071c9 <_realloc_r+0x532>
81006e7f:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
81006e84:	8b 40 08             	mov    0x8(%eax),%eax
81006e87:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81006e8a:	0f 85 b0 01 00 00    	jne    81007040 <_realloc_r+0x3a9>
81006e90:	8b 55 e8             	mov    -0x18(%ebp),%edx
81006e93:	8b 45 ac             	mov    -0x54(%ebp),%eax
81006e96:	01 c2                	add    %eax,%edx
81006e98:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006e9b:	01 d0                	add    %edx,%eax
81006e9d:	89 c2                	mov    %eax,%edx
81006e9f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006ea2:	83 c0 10             	add    $0x10,%eax
81006ea5:	39 c2                	cmp    %eax,%edx
81006ea7:	0f 8c 1c 03 00 00    	jl     810071c9 <_realloc_r+0x532>
81006ead:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006eb0:	8b 40 0c             	mov    0xc(%eax),%eax
81006eb3:	89 45 b8             	mov    %eax,-0x48(%ebp)
81006eb6:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006eb9:	8b 40 08             	mov    0x8(%eax),%eax
81006ebc:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81006ebf:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81006ec2:	8b 55 b8             	mov    -0x48(%ebp),%edx
81006ec5:	89 50 0c             	mov    %edx,0xc(%eax)
81006ec8:	8b 45 b8             	mov    -0x48(%ebp),%eax
81006ecb:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81006ece:	89 50 08             	mov    %edx,0x8(%eax)
81006ed1:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006ed4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006ed7:	8b 55 ac             	mov    -0x54(%ebp),%edx
81006eda:	8b 45 e8             	mov    -0x18(%ebp),%eax
81006edd:	01 d0                	add    %edx,%eax
81006edf:	01 45 f0             	add    %eax,-0x10(%ebp)
81006ee2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006ee5:	83 c0 08             	add    $0x8,%eax
81006ee8:	89 45 a8             	mov    %eax,-0x58(%ebp)
81006eeb:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006eee:	83 e8 04             	sub    $0x4,%eax
81006ef1:	89 45 a0             	mov    %eax,-0x60(%ebp)
81006ef4:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81006ef8:	0f 87 de 00 00 00    	ja     81006fdc <_realloc_r+0x345>
81006efe:	8b 45 0c             	mov    0xc(%ebp),%eax
81006f01:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006f04:	8b 45 a8             	mov    -0x58(%ebp),%eax
81006f07:	89 45 e0             	mov    %eax,-0x20(%ebp)
81006f0a:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81006f0e:	0f 86 90 00 00 00    	jbe    81006fa4 <_realloc_r+0x30d>
81006f14:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006f17:	8d 42 04             	lea    0x4(%edx),%eax
81006f1a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006f1d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006f20:	8d 48 04             	lea    0x4(%eax),%ecx
81006f23:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006f26:	8b 12                	mov    (%edx),%edx
81006f28:	89 10                	mov    %edx,(%eax)
81006f2a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006f2d:	8d 42 04             	lea    0x4(%edx),%eax
81006f30:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006f33:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006f36:	8d 48 04             	lea    0x4(%eax),%ecx
81006f39:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006f3c:	8b 12                	mov    (%edx),%edx
81006f3e:	89 10                	mov    %edx,(%eax)
81006f40:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81006f44:	76 5e                	jbe    81006fa4 <_realloc_r+0x30d>
81006f46:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006f49:	8d 42 04             	lea    0x4(%edx),%eax
81006f4c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006f4f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006f52:	8d 48 04             	lea    0x4(%eax),%ecx
81006f55:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006f58:	8b 12                	mov    (%edx),%edx
81006f5a:	89 10                	mov    %edx,(%eax)
81006f5c:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006f5f:	8d 42 04             	lea    0x4(%edx),%eax
81006f62:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006f65:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006f68:	8d 48 04             	lea    0x4(%eax),%ecx
81006f6b:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006f6e:	8b 12                	mov    (%edx),%edx
81006f70:	89 10                	mov    %edx,(%eax)
81006f72:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81006f76:	76 2c                	jbe    81006fa4 <_realloc_r+0x30d>
81006f78:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006f7b:	8d 42 04             	lea    0x4(%edx),%eax
81006f7e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006f81:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006f84:	8d 48 04             	lea    0x4(%eax),%ecx
81006f87:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006f8a:	8b 12                	mov    (%edx),%edx
81006f8c:	89 10                	mov    %edx,(%eax)
81006f8e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006f91:	8d 42 04             	lea    0x4(%edx),%eax
81006f94:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006f97:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006f9a:	8d 48 04             	lea    0x4(%eax),%ecx
81006f9d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006fa0:	8b 12                	mov    (%edx),%edx
81006fa2:	89 10                	mov    %edx,(%eax)
81006fa4:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006fa7:	8d 42 04             	lea    0x4(%edx),%eax
81006faa:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006fad:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006fb0:	8d 48 04             	lea    0x4(%eax),%ecx
81006fb3:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006fb6:	8b 12                	mov    (%edx),%edx
81006fb8:	89 10                	mov    %edx,(%eax)
81006fba:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006fbd:	8d 42 04             	lea    0x4(%edx),%eax
81006fc0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006fc3:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006fc6:	8d 48 04             	lea    0x4(%eax),%ecx
81006fc9:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006fcc:	8b 12                	mov    (%edx),%edx
81006fce:	89 10                	mov    %edx,(%eax)
81006fd0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006fd3:	8b 10                	mov    (%eax),%edx
81006fd5:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006fd8:	89 10                	mov    %edx,(%eax)
81006fda:	eb 14                	jmp    81006ff0 <_realloc_r+0x359>
81006fdc:	83 ec 04             	sub    $0x4,%esp
81006fdf:	ff 75 a0             	push   -0x60(%ebp)
81006fe2:	ff 75 0c             	push   0xc(%ebp)
81006fe5:	ff 75 a8             	push   -0x58(%ebp)
81006fe8:	e8 d3 fa ff ff       	call   81006ac0 <memmove>
81006fed:	83 c4 10             	add    $0x10,%esp
81006ff0:	ba c0 83 00 81       	mov    $0x810083c0,%edx
81006ff5:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81006ff8:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006ffb:	01 c8                	add    %ecx,%eax
81006ffd:	89 42 08             	mov    %eax,0x8(%edx)
81007000:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007003:	2b 45 bc             	sub    -0x44(%ebp),%eax
81007006:	89 c2                	mov    %eax,%edx
81007008:	b8 c0 83 00 81       	mov    $0x810083c0,%eax
8100700d:	8b 40 08             	mov    0x8(%eax),%eax
81007010:	83 ca 01             	or     $0x1,%edx
81007013:	89 50 04             	mov    %edx,0x4(%eax)
81007016:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007019:	8b 40 04             	mov    0x4(%eax),%eax
8100701c:	83 e0 01             	and    $0x1,%eax
8100701f:	0b 45 bc             	or     -0x44(%ebp),%eax
81007022:	89 c2                	mov    %eax,%edx
81007024:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007027:	89 50 04             	mov    %edx,0x4(%eax)
8100702a:	83 ec 0c             	sub    $0xc,%esp
8100702d:	ff 75 08             	push   0x8(%ebp)
81007030:	e8 59 d0 ff ff       	call   8100408e <__malloc_unlock>
81007035:	83 c4 10             	add    $0x10,%esp
81007038:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100703b:	e9 2f 05 00 00       	jmp    8100756f <_realloc_r+0x8d8>
81007040:	8b 55 e8             	mov    -0x18(%ebp),%edx
81007043:	8b 45 ac             	mov    -0x54(%ebp),%eax
81007046:	01 c2                	add    %eax,%edx
81007048:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100704b:	01 d0                	add    %edx,%eax
8100704d:	89 c2                	mov    %eax,%edx
8100704f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007052:	39 c2                	cmp    %eax,%edx
81007054:	0f 8c 6f 01 00 00    	jl     810071c9 <_realloc_r+0x532>
8100705a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100705d:	8b 40 0c             	mov    0xc(%eax),%eax
81007060:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007063:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007066:	8b 40 08             	mov    0x8(%eax),%eax
81007069:	89 45 b4             	mov    %eax,-0x4c(%ebp)
8100706c:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8100706f:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007072:	89 50 0c             	mov    %edx,0xc(%eax)
81007075:	8b 45 b8             	mov    -0x48(%ebp),%eax
81007078:	8b 55 b4             	mov    -0x4c(%ebp),%edx
8100707b:	89 50 08             	mov    %edx,0x8(%eax)
8100707e:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007081:	8b 40 0c             	mov    0xc(%eax),%eax
81007084:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007087:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100708a:	8b 40 08             	mov    0x8(%eax),%eax
8100708d:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81007090:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81007093:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007096:	89 50 0c             	mov    %edx,0xc(%eax)
81007099:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100709c:	8b 55 b4             	mov    -0x4c(%ebp),%edx
8100709f:	89 50 08             	mov    %edx,0x8(%eax)
810070a2:	8b 45 b0             	mov    -0x50(%ebp),%eax
810070a5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810070a8:	8b 55 e8             	mov    -0x18(%ebp),%edx
810070ab:	8b 45 ac             	mov    -0x54(%ebp),%eax
810070ae:	01 d0                	add    %edx,%eax
810070b0:	01 45 f0             	add    %eax,-0x10(%ebp)
810070b3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810070b6:	83 c0 08             	add    $0x8,%eax
810070b9:	89 45 a8             	mov    %eax,-0x58(%ebp)
810070bc:	8b 45 c0             	mov    -0x40(%ebp),%eax
810070bf:	83 e8 04             	sub    $0x4,%eax
810070c2:	89 45 a4             	mov    %eax,-0x5c(%ebp)
810070c5:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
810070c9:	0f 87 e1 00 00 00    	ja     810071b0 <_realloc_r+0x519>
810070cf:	8b 45 0c             	mov    0xc(%ebp),%eax
810070d2:	89 45 dc             	mov    %eax,-0x24(%ebp)
810070d5:	8b 45 a8             	mov    -0x58(%ebp),%eax
810070d8:	89 45 d8             	mov    %eax,-0x28(%ebp)
810070db:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
810070df:	0f 86 90 00 00 00    	jbe    81007175 <_realloc_r+0x4de>
810070e5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810070e8:	8d 42 04             	lea    0x4(%edx),%eax
810070eb:	89 45 dc             	mov    %eax,-0x24(%ebp)
810070ee:	8b 45 d8             	mov    -0x28(%ebp),%eax
810070f1:	8d 48 04             	lea    0x4(%eax),%ecx
810070f4:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810070f7:	8b 12                	mov    (%edx),%edx
810070f9:	89 10                	mov    %edx,(%eax)
810070fb:	8b 55 dc             	mov    -0x24(%ebp),%edx
810070fe:	8d 42 04             	lea    0x4(%edx),%eax
81007101:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007104:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007107:	8d 48 04             	lea    0x4(%eax),%ecx
8100710a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100710d:	8b 12                	mov    (%edx),%edx
8100710f:	89 10                	mov    %edx,(%eax)
81007111:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81007115:	76 5e                	jbe    81007175 <_realloc_r+0x4de>
81007117:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100711a:	8d 42 04             	lea    0x4(%edx),%eax
8100711d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007120:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007123:	8d 48 04             	lea    0x4(%eax),%ecx
81007126:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007129:	8b 12                	mov    (%edx),%edx
8100712b:	89 10                	mov    %edx,(%eax)
8100712d:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007130:	8d 42 04             	lea    0x4(%edx),%eax
81007133:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007136:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007139:	8d 48 04             	lea    0x4(%eax),%ecx
8100713c:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100713f:	8b 12                	mov    (%edx),%edx
81007141:	89 10                	mov    %edx,(%eax)
81007143:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81007147:	76 2c                	jbe    81007175 <_realloc_r+0x4de>
81007149:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100714c:	8d 42 04             	lea    0x4(%edx),%eax
8100714f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007152:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007155:	8d 48 04             	lea    0x4(%eax),%ecx
81007158:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100715b:	8b 12                	mov    (%edx),%edx
8100715d:	89 10                	mov    %edx,(%eax)
8100715f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007162:	8d 42 04             	lea    0x4(%edx),%eax
81007165:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007168:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100716b:	8d 48 04             	lea    0x4(%eax),%ecx
8100716e:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007171:	8b 12                	mov    (%edx),%edx
81007173:	89 10                	mov    %edx,(%eax)
81007175:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007178:	8d 42 04             	lea    0x4(%edx),%eax
8100717b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100717e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007181:	8d 48 04             	lea    0x4(%eax),%ecx
81007184:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007187:	8b 12                	mov    (%edx),%edx
81007189:	89 10                	mov    %edx,(%eax)
8100718b:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100718e:	8d 42 04             	lea    0x4(%edx),%eax
81007191:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007194:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007197:	8d 48 04             	lea    0x4(%eax),%ecx
8100719a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100719d:	8b 12                	mov    (%edx),%edx
8100719f:	89 10                	mov    %edx,(%eax)
810071a1:	8b 45 dc             	mov    -0x24(%ebp),%eax
810071a4:	8b 10                	mov    (%eax),%edx
810071a6:	8b 45 d8             	mov    -0x28(%ebp),%eax
810071a9:	89 10                	mov    %edx,(%eax)
810071ab:	e9 12 03 00 00       	jmp    810074c2 <_realloc_r+0x82b>
810071b0:	83 ec 04             	sub    $0x4,%esp
810071b3:	ff 75 a4             	push   -0x5c(%ebp)
810071b6:	ff 75 0c             	push   0xc(%ebp)
810071b9:	ff 75 a8             	push   -0x58(%ebp)
810071bc:	e8 ff f8 ff ff       	call   81006ac0 <memmove>
810071c1:	83 c4 10             	add    $0x10,%esp
810071c4:	e9 f9 02 00 00       	jmp    810074c2 <_realloc_r+0x82b>
810071c9:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
810071cd:	0f 84 5b 01 00 00    	je     8100732e <_realloc_r+0x697>
810071d3:	8b 55 ac             	mov    -0x54(%ebp),%edx
810071d6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810071d9:	01 d0                	add    %edx,%eax
810071db:	89 c2                	mov    %eax,%edx
810071dd:	8b 45 bc             	mov    -0x44(%ebp),%eax
810071e0:	39 c2                	cmp    %eax,%edx
810071e2:	0f 8c 46 01 00 00    	jl     8100732e <_realloc_r+0x697>
810071e8:	8b 45 b0             	mov    -0x50(%ebp),%eax
810071eb:	8b 40 0c             	mov    0xc(%eax),%eax
810071ee:	89 45 b8             	mov    %eax,-0x48(%ebp)
810071f1:	8b 45 b0             	mov    -0x50(%ebp),%eax
810071f4:	8b 40 08             	mov    0x8(%eax),%eax
810071f7:	89 45 b4             	mov    %eax,-0x4c(%ebp)
810071fa:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810071fd:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007200:	89 50 0c             	mov    %edx,0xc(%eax)
81007203:	8b 45 b8             	mov    -0x48(%ebp),%eax
81007206:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81007209:	89 50 08             	mov    %edx,0x8(%eax)
8100720c:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100720f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007212:	8b 45 ac             	mov    -0x54(%ebp),%eax
81007215:	01 45 f0             	add    %eax,-0x10(%ebp)
81007218:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100721b:	83 c0 08             	add    $0x8,%eax
8100721e:	89 45 a8             	mov    %eax,-0x58(%ebp)
81007221:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007224:	83 e8 04             	sub    $0x4,%eax
81007227:	89 45 9c             	mov    %eax,-0x64(%ebp)
8100722a:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
8100722e:	0f 87 e1 00 00 00    	ja     81007315 <_realloc_r+0x67e>
81007234:	8b 45 0c             	mov    0xc(%ebp),%eax
81007237:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100723a:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100723d:	89 45 d0             	mov    %eax,-0x30(%ebp)
81007240:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81007244:	0f 86 90 00 00 00    	jbe    810072da <_realloc_r+0x643>
8100724a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100724d:	8d 42 04             	lea    0x4(%edx),%eax
81007250:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007253:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007256:	8d 48 04             	lea    0x4(%eax),%ecx
81007259:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100725c:	8b 12                	mov    (%edx),%edx
8100725e:	89 10                	mov    %edx,(%eax)
81007260:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007263:	8d 42 04             	lea    0x4(%edx),%eax
81007266:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007269:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100726c:	8d 48 04             	lea    0x4(%eax),%ecx
8100726f:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007272:	8b 12                	mov    (%edx),%edx
81007274:	89 10                	mov    %edx,(%eax)
81007276:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
8100727a:	76 5e                	jbe    810072da <_realloc_r+0x643>
8100727c:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100727f:	8d 42 04             	lea    0x4(%edx),%eax
81007282:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007285:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007288:	8d 48 04             	lea    0x4(%eax),%ecx
8100728b:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100728e:	8b 12                	mov    (%edx),%edx
81007290:	89 10                	mov    %edx,(%eax)
81007292:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007295:	8d 42 04             	lea    0x4(%edx),%eax
81007298:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100729b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100729e:	8d 48 04             	lea    0x4(%eax),%ecx
810072a1:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810072a4:	8b 12                	mov    (%edx),%edx
810072a6:	89 10                	mov    %edx,(%eax)
810072a8:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
810072ac:	76 2c                	jbe    810072da <_realloc_r+0x643>
810072ae:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810072b1:	8d 42 04             	lea    0x4(%edx),%eax
810072b4:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810072b7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810072ba:	8d 48 04             	lea    0x4(%eax),%ecx
810072bd:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810072c0:	8b 12                	mov    (%edx),%edx
810072c2:	89 10                	mov    %edx,(%eax)
810072c4:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810072c7:	8d 42 04             	lea    0x4(%edx),%eax
810072ca:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810072cd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810072d0:	8d 48 04             	lea    0x4(%eax),%ecx
810072d3:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810072d6:	8b 12                	mov    (%edx),%edx
810072d8:	89 10                	mov    %edx,(%eax)
810072da:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810072dd:	8d 42 04             	lea    0x4(%edx),%eax
810072e0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810072e3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810072e6:	8d 48 04             	lea    0x4(%eax),%ecx
810072e9:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810072ec:	8b 12                	mov    (%edx),%edx
810072ee:	89 10                	mov    %edx,(%eax)
810072f0:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810072f3:	8d 42 04             	lea    0x4(%edx),%eax
810072f6:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810072f9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810072fc:	8d 48 04             	lea    0x4(%eax),%ecx
810072ff:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007302:	8b 12                	mov    (%edx),%edx
81007304:	89 10                	mov    %edx,(%eax)
81007306:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81007309:	8b 10                	mov    (%eax),%edx
8100730b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100730e:	89 10                	mov    %edx,(%eax)
81007310:	e9 ad 01 00 00       	jmp    810074c2 <_realloc_r+0x82b>
81007315:	83 ec 04             	sub    $0x4,%esp
81007318:	ff 75 9c             	push   -0x64(%ebp)
8100731b:	ff 75 0c             	push   0xc(%ebp)
8100731e:	ff 75 a8             	push   -0x58(%ebp)
81007321:	e8 9a f7 ff ff       	call   81006ac0 <memmove>
81007326:	83 c4 10             	add    $0x10,%esp
81007329:	e9 94 01 00 00       	jmp    810074c2 <_realloc_r+0x82b>
8100732e:	83 ec 08             	sub    $0x8,%esp
81007331:	ff 75 10             	push   0x10(%ebp)
81007334:	ff 75 08             	push   0x8(%ebp)
81007337:	e8 72 c3 ff ff       	call   810036ae <_malloc_r>
8100733c:	83 c4 10             	add    $0x10,%esp
8100733f:	89 45 a8             	mov    %eax,-0x58(%ebp)
81007342:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81007346:	75 18                	jne    81007360 <_realloc_r+0x6c9>
81007348:	83 ec 0c             	sub    $0xc,%esp
8100734b:	ff 75 08             	push   0x8(%ebp)
8100734e:	e8 3b cd ff ff       	call   8100408e <__malloc_unlock>
81007353:	83 c4 10             	add    $0x10,%esp
81007356:	b8 00 00 00 00       	mov    $0x0,%eax
8100735b:	e9 0f 02 00 00       	jmp    8100756f <_realloc_r+0x8d8>
81007360:	8b 45 a8             	mov    -0x58(%ebp),%eax
81007363:	83 e8 08             	sub    $0x8,%eax
81007366:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007369:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100736c:	8b 40 04             	mov    0x4(%eax),%eax
8100736f:	83 e0 fe             	and    $0xfffffffe,%eax
81007372:	89 c2                	mov    %eax,%edx
81007374:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007377:	01 d0                	add    %edx,%eax
81007379:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100737c:	75 17                	jne    81007395 <_realloc_r+0x6fe>
8100737e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007381:	8b 40 04             	mov    0x4(%eax),%eax
81007384:	83 e0 fc             	and    $0xfffffffc,%eax
81007387:	01 45 f0             	add    %eax,-0x10(%ebp)
8100738a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100738d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007390:	e9 2d 01 00 00       	jmp    810074c2 <_realloc_r+0x82b>
81007395:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007398:	83 e8 04             	sub    $0x4,%eax
8100739b:	89 45 98             	mov    %eax,-0x68(%ebp)
8100739e:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
810073a2:	0f 87 de 00 00 00    	ja     81007486 <_realloc_r+0x7ef>
810073a8:	8b 45 0c             	mov    0xc(%ebp),%eax
810073ab:	89 45 cc             	mov    %eax,-0x34(%ebp)
810073ae:	8b 45 a8             	mov    -0x58(%ebp),%eax
810073b1:	89 45 c8             	mov    %eax,-0x38(%ebp)
810073b4:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
810073b8:	0f 86 90 00 00 00    	jbe    8100744e <_realloc_r+0x7b7>
810073be:	8b 55 cc             	mov    -0x34(%ebp),%edx
810073c1:	8d 42 04             	lea    0x4(%edx),%eax
810073c4:	89 45 cc             	mov    %eax,-0x34(%ebp)
810073c7:	8b 45 c8             	mov    -0x38(%ebp),%eax
810073ca:	8d 48 04             	lea    0x4(%eax),%ecx
810073cd:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810073d0:	8b 12                	mov    (%edx),%edx
810073d2:	89 10                	mov    %edx,(%eax)
810073d4:	8b 55 cc             	mov    -0x34(%ebp),%edx
810073d7:	8d 42 04             	lea    0x4(%edx),%eax
810073da:	89 45 cc             	mov    %eax,-0x34(%ebp)
810073dd:	8b 45 c8             	mov    -0x38(%ebp),%eax
810073e0:	8d 48 04             	lea    0x4(%eax),%ecx
810073e3:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810073e6:	8b 12                	mov    (%edx),%edx
810073e8:	89 10                	mov    %edx,(%eax)
810073ea:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
810073ee:	76 5e                	jbe    8100744e <_realloc_r+0x7b7>
810073f0:	8b 55 cc             	mov    -0x34(%ebp),%edx
810073f3:	8d 42 04             	lea    0x4(%edx),%eax
810073f6:	89 45 cc             	mov    %eax,-0x34(%ebp)
810073f9:	8b 45 c8             	mov    -0x38(%ebp),%eax
810073fc:	8d 48 04             	lea    0x4(%eax),%ecx
810073ff:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81007402:	8b 12                	mov    (%edx),%edx
81007404:	89 10                	mov    %edx,(%eax)
81007406:	8b 55 cc             	mov    -0x34(%ebp),%edx
81007409:	8d 42 04             	lea    0x4(%edx),%eax
8100740c:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100740f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81007412:	8d 48 04             	lea    0x4(%eax),%ecx
81007415:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81007418:	8b 12                	mov    (%edx),%edx
8100741a:	89 10                	mov    %edx,(%eax)
8100741c:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
81007420:	76 2c                	jbe    8100744e <_realloc_r+0x7b7>
81007422:	8b 55 cc             	mov    -0x34(%ebp),%edx
81007425:	8d 42 04             	lea    0x4(%edx),%eax
81007428:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100742b:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100742e:	8d 48 04             	lea    0x4(%eax),%ecx
81007431:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81007434:	8b 12                	mov    (%edx),%edx
81007436:	89 10                	mov    %edx,(%eax)
81007438:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100743b:	8d 42 04             	lea    0x4(%edx),%eax
8100743e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81007441:	8b 45 c8             	mov    -0x38(%ebp),%eax
81007444:	8d 48 04             	lea    0x4(%eax),%ecx
81007447:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100744a:	8b 12                	mov    (%edx),%edx
8100744c:	89 10                	mov    %edx,(%eax)
8100744e:	8b 55 cc             	mov    -0x34(%ebp),%edx
81007451:	8d 42 04             	lea    0x4(%edx),%eax
81007454:	89 45 cc             	mov    %eax,-0x34(%ebp)
81007457:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100745a:	8d 48 04             	lea    0x4(%eax),%ecx
8100745d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81007460:	8b 12                	mov    (%edx),%edx
81007462:	89 10                	mov    %edx,(%eax)
81007464:	8b 55 cc             	mov    -0x34(%ebp),%edx
81007467:	8d 42 04             	lea    0x4(%edx),%eax
8100746a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100746d:	8b 45 c8             	mov    -0x38(%ebp),%eax
81007470:	8d 48 04             	lea    0x4(%eax),%ecx
81007473:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81007476:	8b 12                	mov    (%edx),%edx
81007478:	89 10                	mov    %edx,(%eax)
8100747a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100747d:	8b 10                	mov    (%eax),%edx
8100747f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81007482:	89 10                	mov    %edx,(%eax)
81007484:	eb 14                	jmp    8100749a <_realloc_r+0x803>
81007486:	83 ec 04             	sub    $0x4,%esp
81007489:	ff 75 98             	push   -0x68(%ebp)
8100748c:	ff 75 0c             	push   0xc(%ebp)
8100748f:	ff 75 a8             	push   -0x58(%ebp)
81007492:	e8 29 f6 ff ff       	call   81006ac0 <memmove>
81007497:	83 c4 10             	add    $0x10,%esp
8100749a:	83 ec 08             	sub    $0x8,%esp
8100749d:	ff 75 0c             	push   0xc(%ebp)
810074a0:	ff 75 08             	push   0x8(%ebp)
810074a3:	e8 43 a3 ff ff       	call   810017eb <_free_r>
810074a8:	83 c4 10             	add    $0x10,%esp
810074ab:	83 ec 0c             	sub    $0xc,%esp
810074ae:	ff 75 08             	push   0x8(%ebp)
810074b1:	e8 d8 cb ff ff       	call   8100408e <__malloc_unlock>
810074b6:	83 c4 10             	add    $0x10,%esp
810074b9:	8b 45 a8             	mov    -0x58(%ebp),%eax
810074bc:	e9 ae 00 00 00       	jmp    8100756f <_realloc_r+0x8d8>
810074c1:	90                   	nop
810074c2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810074c5:	2b 45 bc             	sub    -0x44(%ebp),%eax
810074c8:	89 45 94             	mov    %eax,-0x6c(%ebp)
810074cb:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
810074cf:	76 5d                	jbe    8100752e <_realloc_r+0x897>
810074d1:	8b 55 f4             	mov    -0xc(%ebp),%edx
810074d4:	8b 45 bc             	mov    -0x44(%ebp),%eax
810074d7:	01 d0                	add    %edx,%eax
810074d9:	89 45 90             	mov    %eax,-0x70(%ebp)
810074dc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810074df:	8b 40 04             	mov    0x4(%eax),%eax
810074e2:	83 e0 01             	and    $0x1,%eax
810074e5:	0b 45 bc             	or     -0x44(%ebp),%eax
810074e8:	89 c2                	mov    %eax,%edx
810074ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810074ed:	89 50 04             	mov    %edx,0x4(%eax)
810074f0:	8b 45 94             	mov    -0x6c(%ebp),%eax
810074f3:	83 c8 01             	or     $0x1,%eax
810074f6:	89 c2                	mov    %eax,%edx
810074f8:	8b 45 90             	mov    -0x70(%ebp),%eax
810074fb:	89 50 04             	mov    %edx,0x4(%eax)
810074fe:	8b 55 90             	mov    -0x70(%ebp),%edx
81007501:	8b 45 94             	mov    -0x6c(%ebp),%eax
81007504:	01 d0                	add    %edx,%eax
81007506:	8b 50 04             	mov    0x4(%eax),%edx
81007509:	8b 4d 90             	mov    -0x70(%ebp),%ecx
8100750c:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100750f:	01 c8                	add    %ecx,%eax
81007511:	83 ca 01             	or     $0x1,%edx
81007514:	89 50 04             	mov    %edx,0x4(%eax)
81007517:	8b 45 90             	mov    -0x70(%ebp),%eax
8100751a:	83 c0 08             	add    $0x8,%eax
8100751d:	83 ec 08             	sub    $0x8,%esp
81007520:	50                   	push   %eax
81007521:	ff 75 08             	push   0x8(%ebp)
81007524:	e8 c2 a2 ff ff       	call   810017eb <_free_r>
81007529:	83 c4 10             	add    $0x10,%esp
8100752c:	eb 2d                	jmp    8100755b <_realloc_r+0x8c4>
8100752e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007531:	8b 40 04             	mov    0x4(%eax),%eax
81007534:	83 e0 01             	and    $0x1,%eax
81007537:	0b 45 f0             	or     -0x10(%ebp),%eax
8100753a:	89 c2                	mov    %eax,%edx
8100753c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100753f:	89 50 04             	mov    %edx,0x4(%eax)
81007542:	8b 55 f4             	mov    -0xc(%ebp),%edx
81007545:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007548:	01 d0                	add    %edx,%eax
8100754a:	8b 50 04             	mov    0x4(%eax),%edx
8100754d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81007550:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007553:	01 c8                	add    %ecx,%eax
81007555:	83 ca 01             	or     $0x1,%edx
81007558:	89 50 04             	mov    %edx,0x4(%eax)
8100755b:	83 ec 0c             	sub    $0xc,%esp
8100755e:	ff 75 08             	push   0x8(%ebp)
81007561:	e8 28 cb ff ff       	call   8100408e <__malloc_unlock>
81007566:	83 c4 10             	add    $0x10,%esp
81007569:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100756c:	83 c0 08             	add    $0x8,%eax
8100756f:	c9                   	leave  
81007570:	c3                   	ret    

81007571 <__srget_r>:
81007571:	55                   	push   %ebp
81007572:	89 e5                	mov    %esp,%ebp
81007574:	53                   	push   %ebx
81007575:	83 ec 14             	sub    $0x14,%esp
81007578:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100757b:	8b 45 08             	mov    0x8(%ebp),%eax
8100757e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007581:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81007585:	74 18                	je     8100759f <__srget_r+0x2e>
81007587:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100758a:	8b 40 38             	mov    0x38(%eax),%eax
8100758d:	85 c0                	test   %eax,%eax
8100758f:	75 0e                	jne    8100759f <__srget_r+0x2e>
81007591:	83 ec 0c             	sub    $0xc,%esp
81007594:	ff 75 f4             	push   -0xc(%ebp)
81007597:	e8 f9 9f ff ff       	call   81001595 <__sinit>
8100759c:	83 c4 10             	add    $0x10,%esp
8100759f:	83 ec 08             	sub    $0x8,%esp
810075a2:	53                   	push   %ebx
810075a3:	ff 75 08             	push   0x8(%ebp)
810075a6:	e8 96 d9 ff ff       	call   81004f41 <__srefill_r>
810075ab:	83 c4 10             	add    $0x10,%esp
810075ae:	85 c0                	test   %eax,%eax
810075b0:	75 18                	jne    810075ca <__srget_r+0x59>
810075b2:	8b 43 04             	mov    0x4(%ebx),%eax
810075b5:	83 e8 01             	sub    $0x1,%eax
810075b8:	89 43 04             	mov    %eax,0x4(%ebx)
810075bb:	8b 03                	mov    (%ebx),%eax
810075bd:	8d 50 01             	lea    0x1(%eax),%edx
810075c0:	89 13                	mov    %edx,(%ebx)
810075c2:	0f b6 00             	movzbl (%eax),%eax
810075c5:	0f b6 c0             	movzbl %al,%eax
810075c8:	eb 05                	jmp    810075cf <__srget_r+0x5e>
810075ca:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810075cf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810075d2:	c9                   	leave  
810075d3:	c3                   	ret    

810075d4 <__srget>:
810075d4:	55                   	push   %ebp
810075d5:	89 e5                	mov    %esp,%ebp
810075d7:	83 ec 08             	sub    $0x8,%esp
810075da:	8b 55 08             	mov    0x8(%ebp),%edx
810075dd:	a1 a4 83 00 81       	mov    0x810083a4,%eax
810075e2:	83 ec 08             	sub    $0x8,%esp
810075e5:	52                   	push   %edx
810075e6:	50                   	push   %eax
810075e7:	e8 85 ff ff ff       	call   81007571 <__srget_r>
810075ec:	83 c4 10             	add    $0x10,%esp
810075ef:	c9                   	leave  
810075f0:	c3                   	ret    

810075f1 <strncmp>:
810075f1:	55                   	push   %ebp
810075f2:	89 e5                	mov    %esp,%ebp
810075f4:	83 ec 10             	sub    $0x10,%esp
810075f7:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810075fb:	75 0a                	jne    81007607 <strncmp+0x16>
810075fd:	b8 00 00 00 00       	mov    $0x0,%eax
81007602:	e9 cb 00 00 00       	jmp    810076d2 <strncmp+0xe1>
81007607:	8b 55 08             	mov    0x8(%ebp),%edx
8100760a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100760d:	09 d0                	or     %edx,%eax
8100760f:	83 e0 03             	and    $0x3,%eax
81007612:	85 c0                	test   %eax,%eax
81007614:	0f 85 85 00 00 00    	jne    8100769f <strncmp+0xae>
8100761a:	8b 45 08             	mov    0x8(%ebp),%eax
8100761d:	89 45 fc             	mov    %eax,-0x4(%ebp)
81007620:	8b 45 0c             	mov    0xc(%ebp),%eax
81007623:	89 45 f8             	mov    %eax,-0x8(%ebp)
81007626:	eb 36                	jmp    8100765e <strncmp+0x6d>
81007628:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
8100762c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81007630:	74 1d                	je     8100764f <strncmp+0x5e>
81007632:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007635:	8b 00                	mov    (%eax),%eax
81007637:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
8100763d:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007640:	8b 00                	mov    (%eax),%eax
81007642:	f7 d0                	not    %eax
81007644:	21 d0                	and    %edx,%eax
81007646:	25 80 80 80 80       	and    $0x80808080,%eax
8100764b:	85 c0                	test   %eax,%eax
8100764d:	74 07                	je     81007656 <strncmp+0x65>
8100764f:	b8 00 00 00 00       	mov    $0x0,%eax
81007654:	eb 7c                	jmp    810076d2 <strncmp+0xe1>
81007656:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
8100765a:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
8100765e:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
81007662:	76 0e                	jbe    81007672 <strncmp+0x81>
81007664:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007667:	8b 10                	mov    (%eax),%edx
81007669:	8b 45 f8             	mov    -0x8(%ebp),%eax
8100766c:	8b 00                	mov    (%eax),%eax
8100766e:	39 c2                	cmp    %eax,%edx
81007670:	74 b6                	je     81007628 <strncmp+0x37>
81007672:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007675:	89 45 08             	mov    %eax,0x8(%ebp)
81007678:	8b 45 f8             	mov    -0x8(%ebp),%eax
8100767b:	89 45 0c             	mov    %eax,0xc(%ebp)
8100767e:	eb 1f                	jmp    8100769f <strncmp+0xae>
81007680:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81007684:	74 0a                	je     81007690 <strncmp+0x9f>
81007686:	8b 45 08             	mov    0x8(%ebp),%eax
81007689:	0f b6 00             	movzbl (%eax),%eax
8100768c:	84 c0                	test   %al,%al
8100768e:	75 07                	jne    81007697 <strncmp+0xa6>
81007690:	b8 00 00 00 00       	mov    $0x0,%eax
81007695:	eb 3b                	jmp    810076d2 <strncmp+0xe1>
81007697:	83 45 08 01          	addl   $0x1,0x8(%ebp)
8100769b:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
8100769f:	8b 45 10             	mov    0x10(%ebp),%eax
810076a2:	8d 50 ff             	lea    -0x1(%eax),%edx
810076a5:	89 55 10             	mov    %edx,0x10(%ebp)
810076a8:	85 c0                	test   %eax,%eax
810076aa:	74 10                	je     810076bc <strncmp+0xcb>
810076ac:	8b 45 08             	mov    0x8(%ebp),%eax
810076af:	0f b6 10             	movzbl (%eax),%edx
810076b2:	8b 45 0c             	mov    0xc(%ebp),%eax
810076b5:	0f b6 00             	movzbl (%eax),%eax
810076b8:	38 c2                	cmp    %al,%dl
810076ba:	74 c4                	je     81007680 <strncmp+0x8f>
810076bc:	8b 45 08             	mov    0x8(%ebp),%eax
810076bf:	0f b6 00             	movzbl (%eax),%eax
810076c2:	0f b6 d0             	movzbl %al,%edx
810076c5:	8b 45 0c             	mov    0xc(%ebp),%eax
810076c8:	0f b6 00             	movzbl (%eax),%eax
810076cb:	0f b6 c8             	movzbl %al,%ecx
810076ce:	89 d0                	mov    %edx,%eax
810076d0:	29 c8                	sub    %ecx,%eax
810076d2:	c9                   	leave  
810076d3:	c3                   	ret    

810076d4 <__get_global_locale>:
810076d4:	55                   	push   %ebp
810076d5:	89 e5                	mov    %esp,%ebp
810076d7:	b8 e0 87 00 81       	mov    $0x810087e0,%eax
810076dc:	5d                   	pop    %ebp
810076dd:	c3                   	ret    

810076de <__get_current_locale>:
810076de:	55                   	push   %ebp
810076df:	89 e5                	mov    %esp,%ebp
810076e1:	e8 ee ff ff ff       	call   810076d4 <__get_global_locale>
810076e6:	5d                   	pop    %ebp
810076e7:	c3                   	ret    

810076e8 <_wcrtomb_r>:
810076e8:	55                   	push   %ebp
810076e9:	89 e5                	mov    %esp,%ebp
810076eb:	83 ec 18             	sub    $0x18,%esp
810076ee:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810076f5:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810076f9:	75 21                	jne    8100771c <_wcrtomb_r+0x34>
810076fb:	e8 de ff ff ff       	call   810076de <__get_current_locale>
81007700:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007706:	ff 75 14             	push   0x14(%ebp)
81007709:	6a 00                	push   $0x0
8100770b:	8d 55 ea             	lea    -0x16(%ebp),%edx
8100770e:	52                   	push   %edx
8100770f:	ff 75 08             	push   0x8(%ebp)
81007712:	ff d0                	call   *%eax
81007714:	83 c4 10             	add    $0x10,%esp
81007717:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100771a:	eb 1f                	jmp    8100773b <_wcrtomb_r+0x53>
8100771c:	e8 bd ff ff ff       	call   810076de <__get_current_locale>
81007721:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007727:	ff 75 14             	push   0x14(%ebp)
8100772a:	ff 75 10             	push   0x10(%ebp)
8100772d:	ff 75 0c             	push   0xc(%ebp)
81007730:	ff 75 08             	push   0x8(%ebp)
81007733:	ff d0                	call   *%eax
81007735:	83 c4 10             	add    $0x10,%esp
81007738:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100773b:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100773f:	75 19                	jne    8100775a <_wcrtomb_r+0x72>
81007741:	8b 45 14             	mov    0x14(%ebp),%eax
81007744:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100774a:	8b 45 08             	mov    0x8(%ebp),%eax
8100774d:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81007753:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007758:	eb 03                	jmp    8100775d <_wcrtomb_r+0x75>
8100775a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100775d:	c9                   	leave  
8100775e:	c3                   	ret    

8100775f <wcrtomb>:
8100775f:	55                   	push   %ebp
81007760:	89 e5                	mov    %esp,%ebp
81007762:	83 ec 28             	sub    $0x28,%esp
81007765:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100776c:	a1 a4 83 00 81       	mov    0x810083a4,%eax
81007771:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007774:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81007778:	75 21                	jne    8100779b <wcrtomb+0x3c>
8100777a:	e8 5f ff ff ff       	call   810076de <__get_current_locale>
8100777f:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007785:	ff 75 10             	push   0x10(%ebp)
81007788:	6a 00                	push   $0x0
8100778a:	8d 55 e6             	lea    -0x1a(%ebp),%edx
8100778d:	52                   	push   %edx
8100778e:	ff 75 f0             	push   -0x10(%ebp)
81007791:	ff d0                	call   *%eax
81007793:	83 c4 10             	add    $0x10,%esp
81007796:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007799:	eb 1f                	jmp    810077ba <wcrtomb+0x5b>
8100779b:	e8 3e ff ff ff       	call   810076de <__get_current_locale>
810077a0:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810077a6:	ff 75 10             	push   0x10(%ebp)
810077a9:	ff 75 0c             	push   0xc(%ebp)
810077ac:	ff 75 08             	push   0x8(%ebp)
810077af:	ff 75 f0             	push   -0x10(%ebp)
810077b2:	ff d0                	call   *%eax
810077b4:	83 c4 10             	add    $0x10,%esp
810077b7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810077ba:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810077be:	75 19                	jne    810077d9 <wcrtomb+0x7a>
810077c0:	8b 45 10             	mov    0x10(%ebp),%eax
810077c3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810077c9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810077cc:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810077d2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810077d7:	eb 03                	jmp    810077dc <wcrtomb+0x7d>
810077d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810077dc:	c9                   	leave  
810077dd:	c3                   	ret    

810077de <__get_global_locale>:
810077de:	55                   	push   %ebp
810077df:	89 e5                	mov    %esp,%ebp
810077e1:	b8 e0 87 00 81       	mov    $0x810087e0,%eax
810077e6:	5d                   	pop    %ebp
810077e7:	c3                   	ret    

810077e8 <__get_current_locale>:
810077e8:	55                   	push   %ebp
810077e9:	89 e5                	mov    %esp,%ebp
810077eb:	e8 ee ff ff ff       	call   810077de <__get_global_locale>
810077f0:	5d                   	pop    %ebp
810077f1:	c3                   	ret    

810077f2 <_wctomb_r>:
810077f2:	55                   	push   %ebp
810077f3:	89 e5                	mov    %esp,%ebp
810077f5:	83 ec 08             	sub    $0x8,%esp
810077f8:	e8 eb ff ff ff       	call   810077e8 <__get_current_locale>
810077fd:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007803:	ff 75 14             	push   0x14(%ebp)
81007806:	ff 75 10             	push   0x10(%ebp)
81007809:	ff 75 0c             	push   0xc(%ebp)
8100780c:	ff 75 08             	push   0x8(%ebp)
8100780f:	ff d0                	call   *%eax
81007811:	83 c4 10             	add    $0x10,%esp
81007814:	c9                   	leave  
81007815:	c3                   	ret    

81007816 <__ascii_wctomb>:
81007816:	55                   	push   %ebp
81007817:	89 e5                	mov    %esp,%ebp
81007819:	83 ec 10             	sub    $0x10,%esp
8100781c:	8b 45 10             	mov    0x10(%ebp),%eax
8100781f:	89 45 fc             	mov    %eax,-0x4(%ebp)
81007822:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007826:	75 07                	jne    8100782f <__ascii_wctomb+0x19>
81007828:	b8 00 00 00 00       	mov    $0x0,%eax
8100782d:	eb 28                	jmp    81007857 <__ascii_wctomb+0x41>
8100782f:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
81007836:	76 10                	jbe    81007848 <__ascii_wctomb+0x32>
81007838:	8b 45 08             	mov    0x8(%ebp),%eax
8100783b:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81007841:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007846:	eb 0f                	jmp    81007857 <__ascii_wctomb+0x41>
81007848:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100784b:	89 c2                	mov    %eax,%edx
8100784d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007850:	88 10                	mov    %dl,(%eax)
81007852:	b8 01 00 00 00       	mov    $0x1,%eax
81007857:	c9                   	leave  
81007858:	c3                   	ret    

81007859 <__env_lock>:
81007859:	55                   	push   %ebp
8100785a:	89 e5                	mov    %esp,%ebp
8100785c:	90                   	nop
8100785d:	5d                   	pop    %ebp
8100785e:	c3                   	ret    

8100785f <__env_unlock>:
8100785f:	55                   	push   %ebp
81007860:	89 e5                	mov    %esp,%ebp
81007862:	90                   	nop
81007863:	5d                   	pop    %ebp
81007864:	c3                   	ret    
