
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x81000145

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x000054ac memsz 0x00005534 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000046de  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       000003e1  810046e0  810046e0  000056e0  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009cc  81004ae0  81004ae0  00005ae0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000074  810054c0  810054c0  000064ac  2**5
                  ALLOC
  4 .debug_info   0001594b  00000000  00000000  000064ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00004ca2  00000000  00000000  0001bdf7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 00000530  00000000  00000000  00020aa0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   000031a3  00000000  00000000  00020fd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    00001121  00000000  00000000  00024173  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line_str 00000efb  00000000  00000000  00025294  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003f  00000000  00000000  0002618f  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00000fe8  00000000  00000000  000261d0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000004e  00000000  00000000  000271b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81000576 l       .text	00000000 L5
810005ae l       .text	00000000 L15
81000580 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 findfp.c
810005b9 l     F .text	000000ad std
81000666 l     F .text	0000001b stdin_init
81000681 l     F .text	0000001b stdout_init
8100069c l     F .text	0000001b stderr_init
810054c0 l     O .bss	00000004 __sfp_recursive_mutex
810054c4 l     O .bss	00000004 __sinit_recursive_mutex
8100095f l     F .text	0000000a __fp_lock
81000969 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
81004ae0 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 mallocr.c
81000f2c l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
81001a7d l       .text	00000000 L20
81001a34 l       .text	00000000 L5
81001a7a l       .text	00000000 L15
81001a40 l       .text	00000000 L8
81001a61 l       .text	00000000 L9
81001a70 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 mlock.c
81005528 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81001ccd l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fputwc.c
81003861 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 locale.c
81003f52 l     F .text	0000000a __get_global_locale
81003f5c l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
810041be l     F .text	0000000a __get_global_locale
810041c8 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
810044d6 l     F .text	0000000a __get_global_locale
810044e0 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
810045e0 l     F .text	0000000a __get_global_locale
810045ea l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
8100469e g     F .text	00000040 _isatty_r
8100429a g     F .text	00000037 cleanup_glue
81000440 g     F .text	000000d6 _puts_r
81003ff8 g     F .text	00000046 _lseek_r
8100028b g     F .text	0000001b yield
8100040b g     F .text	00000035 printf
810044ea g     F .text	00000077 _wcrtomb_r
81003103 g     F .text	0000004a __sseek
810008ae g     F .text	00000099 __sinit
81003172 g     F .text	00000112 __swbuf_r
81003f66 g     F .text	0000005f _setlocale_r
810006b7 g     F .text	0000006f __sfmoreglue
81001beb g     F .text	00000006 __malloc_unlock
81001ad0 g       .text	00000000 memmove
81000894 g     F .text	0000001a _cleanup
8100465b g     F .text	00000043 _fstat_r
81005530 g     O .bss	00000004 errno
8100309e g     F .text	0000000a __seofread
8100025e g     F .text	0000002d execve
81000200 g     F .text	0000001b getpid
81001a88 g       .text	00000000 memcpy
81000873 g     F .text	00000021 _cleanup_r
81000516 g     F .text	0000001c puts
810003de g     F .text	0000002d _printf_r
81000375 g     F .text	00000021 isatty
810054e0 g     O .bss	00000004 __malloc_top_pad
810054c0 g       .bss	00000000 __bss_start__
810009bb g     F .text	0000049e __sfvwrite_r
8100301a g     F .text	00000040 _sbrk_r
81004254 g     F .text	00000046 _read_r
81003486 g     F .text	00000107 _fclose_r
81003828 g     F .text	00000039 fflush
810054e4 g     O .bss	00000004 __malloc_max_sbrked_mem
81000348 g     F .text	0000002d lseek
8100475c g     O .rodata	00000004 _global_impure_ptr
81002740 g     F .text	000008da _realloc_r
81003977 g     F .text	00000057 _fputwc_r
81000973 g     F .text	00000024 __fp_lock_all
810042d1 g     F .text	00000160 _reclaim_reent
810002fa g     F .text	0000002d write
81000396 g     F .text	00000027 fstat
8100018a g     F .text	0000004c sys_call
81001d33 g     F .text	000000a8 __sfputs_r
81000947 g     F .text	00000006 __sfp_lock_acquire
810019f0 g       .text	00000000 memchr
81005534 g       .bss	00000000 __bss_end__
81003a16 g     F .text	000003db _free_r
81004840 g     O .rodata	00000180 _ctype_b
81003fc5 g     F .text	00000014 __locale_mb_cur_max
8100532c g     O .data	00000004 __malloc_sbrk_base
81000145 g       .text	00000000 _start
810002cd g     F .text	0000002d read
81005500 g     O .bss	00000028 __malloc_current_mallinfo
810003de g     F .text	0000002d _iprintf_r
81003446 g     F .text	00000040 _close_r
81000243 g     F .text	0000001b fork
810032eb g     F .text	0000015b __swsetup_r
81000726 g     F .text	0000014d __sfp
81004f20 g     O .data	00000408 __malloc_av_
81000959 g     F .text	00000006 __sinit_lock_release
8100305a g     F .text	00000044 __sread
81001be5 g     F .text	00000006 __malloc_lock
810003bd g     F .text	00000021 sbrk
810037d0 g     F .text	00000058 _fflush_r
81000155 g     F .text	00000035 cstart
81001b5d g       .text	00000000 memset
81000000 g     F .text	00000145 main
810054e8 g     O .bss	00000004 __malloc_max_total_mem
81003284 g     F .text	00000021 __swbuf
8100314d g     F .text	00000025 __sclose
8100358d g     F .text	0000001d fclose
810011bf g     F .text	00000822 _malloc_r
81004618 g     F .text	00000043 __ascii_wctomb
81000e59 g     F .text	00000068 _fwalk
810041d2 g     F .text	0000002a _mbtowc_r
81003df1 g     F .text	00000161 _malloc_trim_r
81004431 g     F .text	000000a5 strcmp
81001ddb g     F .text	00000025 vfiprintf
8100040b g     F .text	00000035 iprintf
8100552c g     O .bss	00000004 _PathLocale
810032a5 g     F .text	00000046 _write_r
81003fd9 g     F .text	0000001f setlocale
81002156 g     F .text	0000019b _printf_common
81004f04 g     O .data	00000004 _impure_ptr
810035aa g     F .text	00000226 __sflush_r
810041fc g     F .text	00000058 __ascii_mbtowc
81000997 g     F .text	00000024 __fp_unlock_all
8100021b g     F .text	00000028 print_msg
8100412b g     F .text	00000093 __swhatbuf_r
810038c7 g     F .text	000000b0 __fputwc
810030a8 g     F .text	0000005b __swrite
81005328 g     O .data	00000004 __malloc_trim_threshold
81001e00 g     F .text	00000356 _vfiprintf_r
81000ec1 g     F .text	0000006b _fwalk_reent
8100094d g     F .text	00000006 __sfp_lock_release
810049c0 g     O .rodata	00000101 _ctype_
8100403e g     F .text	000000ed __smakebuf_r
81000540 g       .text	00000000 strlen
810022f1 g     F .text	0000044f _printf_i
810002a6 g     F .text	00000027 open
81001bf1 g     F .text	000000dc __sprint_r
810045f4 g     F .text	00000024 _wctomb_r
81001e00 g     F .text	00000356 _vfprintf_r
810001d6 g     F .text	0000002a msleep
81004561 g     F .text	0000007f wcrtomb
81000327 g     F .text	00000021 close
81005340 g     O .data	0000016c __global_locale
81001ddb g     F .text	00000025 vfprintf
810039ce g     F .text	00000048 fputwc
81000953 g     F .text	00000006 __sinit_lock_acquire



Disassembly of section .text:

81000000 <main>:
 */

#include "lib_syscall.h"
#include <stdio.h>

int main(int argc, char** argv) {
81000000:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000004:	83 e4 f0             	and    $0xfffffff0,%esp
81000007:	ff 71 fc             	push   -0x4(%ecx)
8100000a:	55                   	push   %ebp
8100000b:	89 e5                	mov    %esp,%ebp
8100000d:	53                   	push   %ebx
8100000e:	51                   	push   %ecx
8100000f:	83 ec 10             	sub    $0x10,%esp
81000012:	89 cb                	mov    %ecx,%ebx
    sbrk(0);
81000014:	83 ec 0c             	sub    $0xc,%esp
81000017:	6a 00                	push   $0x0
81000019:	e8 9f 03 00 00       	call   810003bd <sbrk>
8100001e:	83 c4 10             	add    $0x10,%esp
    sbrk(100);
81000021:	83 ec 0c             	sub    $0xc,%esp
81000024:	6a 64                	push   $0x64
81000026:	e8 92 03 00 00       	call   810003bd <sbrk>
8100002b:	83 c4 10             	add    $0x10,%esp
    sbrk(200);
8100002e:	83 ec 0c             	sub    $0xc,%esp
81000031:	68 c8 00 00 00       	push   $0xc8
81000036:	e8 82 03 00 00       	call   810003bd <sbrk>
8100003b:	83 c4 10             	add    $0x10,%esp
    sbrk(4096*2 + 200);
8100003e:	83 ec 0c             	sub    $0xc,%esp
81000041:	68 c8 20 00 00       	push   $0x20c8
81000046:	e8 72 03 00 00       	call   810003bd <sbrk>
8100004b:	83 c4 10             	add    $0x10,%esp
    sbrk(4096*5 + 1234);
8100004e:	83 ec 0c             	sub    $0xc,%esp
81000051:	68 d2 54 00 00       	push   $0x54d2
81000056:	e8 62 03 00 00       	call   810003bd <sbrk>
8100005b:	83 c4 10             	add    $0x10,%esp

    printf("hello from shell\n");
8100005e:	83 ec 0c             	sub    $0xc,%esp
81000061:	68 e0 46 00 81       	push   $0x810046e0
81000066:	e8 ab 04 00 00       	call   81000516 <puts>
8100006b:	83 c4 10             	add    $0x10,%esp
    printf("os version: %s\n", "1.0.0");
8100006e:	83 ec 08             	sub    $0x8,%esp
81000071:	68 f1 46 00 81       	push   $0x810046f1
81000076:	68 f7 46 00 81       	push   $0x810046f7
8100007b:	e8 8b 03 00 00       	call   8100040b <iprintf>
81000080:	83 c4 10             	add    $0x10,%esp
    printf("%05d, %-5d, %d\n", 1, 2, 3);
81000083:	6a 03                	push   $0x3
81000085:	6a 02                	push   $0x2
81000087:	6a 01                	push   $0x1
81000089:	68 07 47 00 81       	push   $0x81004707
8100008e:	e8 78 03 00 00       	call   8100040b <iprintf>
81000093:	83 c4 10             	add    $0x10,%esp

    printf("main pid %d", getpid());
81000096:	e8 65 01 00 00       	call   81000200 <getpid>
8100009b:	83 ec 08             	sub    $0x8,%esp
8100009e:	50                   	push   %eax
8100009f:	68 17 47 00 81       	push   $0x81004717
810000a4:	e8 62 03 00 00       	call   8100040b <iprintf>
810000a9:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < argc; ++i) {
810000ac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810000b3:	eb 26                	jmp    810000db <main+0xdb>
        printf("arg: %s\n", argv[i]);
810000b5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810000b8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810000bf:	8b 43 04             	mov    0x4(%ebx),%eax
810000c2:	01 d0                	add    %edx,%eax
810000c4:	8b 00                	mov    (%eax),%eax
810000c6:	83 ec 08             	sub    $0x8,%esp
810000c9:	50                   	push   %eax
810000ca:	68 23 47 00 81       	push   $0x81004723
810000cf:	e8 37 03 00 00       	call   8100040b <iprintf>
810000d4:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < argc; ++i) {
810000d7:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810000db:	8b 45 f4             	mov    -0xc(%ebp),%eax
810000de:	3b 03                	cmp    (%ebx),%eax
810000e0:	7c d3                	jl     810000b5 <main+0xb5>
    }

    int pid = fork();
810000e2:	e8 5c 01 00 00       	call   81000243 <fork>
810000e7:	89 45 f0             	mov    %eax,-0x10(%ebp)
    yield();
810000ea:	e8 9c 01 00 00       	call   8100028b <yield>
    if (pid > 0) printf("parent pid=%d\n", pid);
810000ef:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810000f3:	7e 15                	jle    8100010a <main+0x10a>
810000f5:	83 ec 08             	sub    $0x8,%esp
810000f8:	ff 75 f0             	push   -0x10(%ebp)
810000fb:	68 2c 47 00 81       	push   $0x8100472c
81000100:	e8 06 03 00 00       	call   8100040b <iprintf>
81000105:	83 c4 10             	add    $0x10,%esp
81000108:	eb 13                	jmp    8100011d <main+0x11d>
    else printf("chiled pid=%d\n", pid);
8100010a:	83 ec 08             	sub    $0x8,%esp
8100010d:	ff 75 f0             	push   -0x10(%ebp)
81000110:	68 3b 47 00 81       	push   $0x8100473b
81000115:	e8 f1 02 00 00       	call   8100040b <iprintf>
8100011a:	83 c4 10             	add    $0x10,%esp

    for (;;) {
        printf("shell pid=%d\n", getpid());
8100011d:	e8 de 00 00 00       	call   81000200 <getpid>
81000122:	83 ec 08             	sub    $0x8,%esp
81000125:	50                   	push   %eax
81000126:	68 4a 47 00 81       	push   $0x8100474a
8100012b:	e8 db 02 00 00       	call   8100040b <iprintf>
81000130:	83 c4 10             	add    $0x10,%esp
        msleep(1000);
81000133:	83 ec 0c             	sub    $0xc,%esp
81000136:	68 e8 03 00 00       	push   $0x3e8
8100013b:	e8 96 00 00 00       	call   810001d6 <msleep>
81000140:	83 c4 10             	add    $0x10,%esp
        printf("shell pid=%d\n", getpid());
81000143:	eb d8                	jmp    8100011d <main+0x11d>

81000145 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
81000145:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
81000148:	8e d8                	mov    %eax,%ds
	mov %ax, %es
8100014a:	8e c0                	mov    %eax,%es
	mov %ax, %fs
8100014c:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
8100014e:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
81000150:	e9 00 00 00 00       	jmp    81000155 <cstart>

81000155 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
81000155:	55                   	push   %ebp
81000156:	89 e5                	mov    %esp,%ebp
81000158:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
8100015b:	c7 45 f4 c0 54 00 81 	movl   $0x810054c0,-0xc(%ebp)
    while (start < __bss_end__) {
81000162:	eb 09                	jmp    8100016d <cstart+0x18>
        *(start++);
81000164:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000167:	83 c0 01             	add    $0x1,%eax
8100016a:	89 45 f4             	mov    %eax,-0xc(%ebp)
    while (start < __bss_end__) {
8100016d:	81 7d f4 34 55 00 81 	cmpl   $0x81005534,-0xc(%ebp)
81000174:	72 ee                	jb     81000164 <cstart+0xf>
    }
    
    main(argc, argv);
81000176:	83 ec 08             	sub    $0x8,%esp
81000179:	ff 75 0c             	push   0xc(%ebp)
8100017c:	ff 75 08             	push   0x8(%ebp)
8100017f:	e8 7c fe ff ff       	call   81000000 <main>
81000184:	83 c4 10             	add    $0x10,%esp
}
81000187:	90                   	nop
81000188:	c9                   	leave  
81000189:	c3                   	ret    

8100018a <sys_call>:
#include    "cpu/syscall.h"
#include    "os_cfg.h"
#include    "lib_syscall.h"


int sys_call(syscall_args_t *args) {
8100018a:	55                   	push   %ebp
8100018b:	89 e5                	mov    %esp,%ebp
8100018d:	57                   	push   %edi
8100018e:	56                   	push   %esi
8100018f:	53                   	push   %ebx
81000190:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
81000193:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8100019a:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
810001a1:	8b 45 08             	mov    0x8(%ebp),%eax
810001a4:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
810001a7:	8b 55 08             	mov    0x8(%ebp),%edx
810001aa:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
810001ad:	8b 4d 08             	mov    0x8(%ebp),%ecx
810001b0:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
810001b3:	8b 5d 08             	mov    0x8(%ebp),%ebx
810001b6:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
810001b9:	8b 75 08             	mov    0x8(%ebp),%esi
810001bc:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
810001be:	8d 7d e8             	lea    -0x18(%ebp),%edi
810001c1:	50                   	push   %eax
810001c2:	52                   	push   %edx
810001c3:	51                   	push   %ecx
810001c4:	53                   	push   %ebx
810001c5:	56                   	push   %esi
810001c6:	ff 1f                	lcall  *(%edi)
810001c8:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
810001cb:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
810001ce:	83 c4 10             	add    $0x10,%esp
810001d1:	5b                   	pop    %ebx
810001d2:	5e                   	pop    %esi
810001d3:	5f                   	pop    %edi
810001d4:	5d                   	pop    %ebp
810001d5:	c3                   	ret    

810001d6 <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
810001d6:	55                   	push   %ebp
810001d7:	89 e5                	mov    %esp,%ebp
810001d9:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
810001dc:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810001e0:	7e 1b                	jle    810001fd <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
810001e2:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
810001e9:	8b 45 08             	mov    0x8(%ebp),%eax
810001ec:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
810001ef:	8d 45 ec             	lea    -0x14(%ebp),%eax
810001f2:	50                   	push   %eax
810001f3:	e8 92 ff ff ff       	call   8100018a <sys_call>
810001f8:	83 c4 04             	add    $0x4,%esp
810001fb:	eb 01                	jmp    810001fe <msleep+0x28>
    if (ms <= 0) return;
810001fd:	90                   	nop

}
810001fe:	c9                   	leave  
810001ff:	c3                   	ret    

81000200 <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
81000200:	55                   	push   %ebp
81000201:	89 e5                	mov    %esp,%ebp
81000203:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000206:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
8100020d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000210:	50                   	push   %eax
81000211:	e8 74 ff ff ff       	call   8100018a <sys_call>
81000216:	83 c4 04             	add    $0x4,%esp
}
81000219:	c9                   	leave  
8100021a:	c3                   	ret    

8100021b <print_msg>:

void print_msg(const char *fmt, int arg) {
8100021b:	55                   	push   %ebp
8100021c:	89 e5                	mov    %esp,%ebp
8100021e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
81000221:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
81000228:	8b 45 08             	mov    0x8(%ebp),%eax
8100022b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
8100022e:	8b 45 0c             	mov    0xc(%ebp),%eax
81000231:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
81000234:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000237:	50                   	push   %eax
81000238:	e8 4d ff ff ff       	call   8100018a <sys_call>
8100023d:	83 c4 04             	add    $0x4,%esp
}
81000240:	90                   	nop
81000241:	c9                   	leave  
81000242:	c3                   	ret    

81000243 <fork>:

int fork (void) {
81000243:	55                   	push   %ebp
81000244:	89 e5                	mov    %esp,%ebp
81000246:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
81000249:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
81000250:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000253:	50                   	push   %eax
81000254:	e8 31 ff ff ff       	call   8100018a <sys_call>
81000259:	83 c4 04             	add    $0x4,%esp
}
8100025c:	c9                   	leave  
8100025d:	c3                   	ret    

8100025e <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
8100025e:	55                   	push   %ebp
8100025f:	89 e5                	mov    %esp,%ebp
81000261:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
81000264:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
8100026b:	8b 45 08             	mov    0x8(%ebp),%eax
8100026e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
81000271:	8b 45 0c             	mov    0xc(%ebp),%eax
81000274:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
81000277:	8b 45 10             	mov    0x10(%ebp),%eax
8100027a:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
8100027d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000280:	50                   	push   %eax
81000281:	e8 04 ff ff ff       	call   8100018a <sys_call>
81000286:	83 c4 04             	add    $0x4,%esp
}
81000289:	c9                   	leave  
8100028a:	c3                   	ret    

8100028b <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
8100028b:	55                   	push   %ebp
8100028c:	89 e5                	mov    %esp,%ebp
8100028e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
81000291:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
81000298:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100029b:	50                   	push   %eax
8100029c:	e8 e9 fe ff ff       	call   8100018a <sys_call>
810002a1:	83 c4 04             	add    $0x4,%esp
}
810002a4:	c9                   	leave  
810002a5:	c3                   	ret    

810002a6 <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
810002a6:	55                   	push   %ebp
810002a7:	89 e5                	mov    %esp,%ebp
810002a9:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
810002ac:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
810002b3:	8b 45 08             	mov    0x8(%ebp),%eax
810002b6:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
810002b9:	8b 45 0c             	mov    0xc(%ebp),%eax
810002bc:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
810002bf:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002c2:	50                   	push   %eax
810002c3:	e8 c2 fe ff ff       	call   8100018a <sys_call>
810002c8:	83 c4 04             	add    $0x4,%esp
}
810002cb:	c9                   	leave  
810002cc:	c3                   	ret    

810002cd <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
810002cd:	55                   	push   %ebp
810002ce:	89 e5                	mov    %esp,%ebp
810002d0:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
810002d3:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
810002da:	8b 45 08             	mov    0x8(%ebp),%eax
810002dd:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
810002e0:	8b 45 0c             	mov    0xc(%ebp),%eax
810002e3:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
810002e6:	8b 45 10             	mov    0x10(%ebp),%eax
810002e9:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
810002ec:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002ef:	50                   	push   %eax
810002f0:	e8 95 fe ff ff       	call   8100018a <sys_call>
810002f5:	83 c4 04             	add    $0x4,%esp
}
810002f8:	c9                   	leave  
810002f9:	c3                   	ret    

810002fa <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
810002fa:	55                   	push   %ebp
810002fb:	89 e5                	mov    %esp,%ebp
810002fd:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
81000300:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
81000307:	8b 45 08             	mov    0x8(%ebp),%eax
8100030a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
8100030d:	8b 45 0c             	mov    0xc(%ebp),%eax
81000310:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000313:	8b 45 10             	mov    0x10(%ebp),%eax
81000316:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000319:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100031c:	50                   	push   %eax
8100031d:	e8 68 fe ff ff       	call   8100018a <sys_call>
81000322:	83 c4 04             	add    $0x4,%esp
}
81000325:	c9                   	leave  
81000326:	c3                   	ret    

81000327 <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
81000327:	55                   	push   %ebp
81000328:	89 e5                	mov    %esp,%ebp
8100032a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
8100032d:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
81000334:	8b 45 08             	mov    0x8(%ebp),%eax
81000337:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8100033a:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100033d:	50                   	push   %eax
8100033e:	e8 47 fe ff ff       	call   8100018a <sys_call>
81000343:	83 c4 04             	add    $0x4,%esp
}
81000346:	c9                   	leave  
81000347:	c3                   	ret    

81000348 <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
81000348:	55                   	push   %ebp
81000349:	89 e5                	mov    %esp,%ebp
8100034b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
8100034e:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
81000355:	8b 45 08             	mov    0x8(%ebp),%eax
81000358:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
8100035b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100035e:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
81000361:	8b 45 10             	mov    0x10(%ebp),%eax
81000364:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000367:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100036a:	50                   	push   %eax
8100036b:	e8 1a fe ff ff       	call   8100018a <sys_call>
81000370:	83 c4 04             	add    $0x4,%esp
}
81000373:	c9                   	leave  
81000374:	c3                   	ret    

81000375 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
81000375:	55                   	push   %ebp
81000376:	89 e5                	mov    %esp,%ebp
81000378:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
8100037b:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
81000382:	8b 45 08             	mov    0x8(%ebp),%eax
81000385:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000388:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100038b:	50                   	push   %eax
8100038c:	e8 f9 fd ff ff       	call   8100018a <sys_call>
81000391:	83 c4 04             	add    $0x4,%esp
}
81000394:	c9                   	leave  
81000395:	c3                   	ret    

81000396 <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
81000396:	55                   	push   %ebp
81000397:	89 e5                	mov    %esp,%ebp
81000399:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
8100039c:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
810003a3:	8b 45 08             	mov    0x8(%ebp),%eax
810003a6:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
810003a9:	8b 45 0c             	mov    0xc(%ebp),%eax
810003ac:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
810003af:	8d 45 ec             	lea    -0x14(%ebp),%eax
810003b2:	50                   	push   %eax
810003b3:	e8 d2 fd ff ff       	call   8100018a <sys_call>
810003b8:	83 c4 04             	add    $0x4,%esp
}
810003bb:	c9                   	leave  
810003bc:	c3                   	ret    

810003bd <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
810003bd:	55                   	push   %ebp
810003be:	89 e5                	mov    %esp,%ebp
810003c0:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
810003c3:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)incr;
810003ca:	8b 45 08             	mov    0x8(%ebp),%eax
810003cd:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
810003d0:	8d 45 ec             	lea    -0x14(%ebp),%eax
810003d3:	50                   	push   %eax
810003d4:	e8 b1 fd ff ff       	call   8100018a <sys_call>
810003d9:	83 c4 04             	add    $0x4,%esp
810003dc:	c9                   	leave  
810003dd:	c3                   	ret    

810003de <_iprintf_r>:
810003de:	55                   	push   %ebp
810003df:	89 e5                	mov    %esp,%ebp
810003e1:	83 ec 18             	sub    $0x18,%esp
810003e4:	8d 45 10             	lea    0x10(%ebp),%eax
810003e7:	89 45 f0             	mov    %eax,-0x10(%ebp)
810003ea:	8b 55 f0             	mov    -0x10(%ebp),%edx
810003ed:	8b 45 08             	mov    0x8(%ebp),%eax
810003f0:	8b 40 08             	mov    0x8(%eax),%eax
810003f3:	52                   	push   %edx
810003f4:	ff 75 0c             	push   0xc(%ebp)
810003f7:	50                   	push   %eax
810003f8:	ff 75 08             	push   0x8(%ebp)
810003fb:	e8 00 1a 00 00       	call   81001e00 <_vfiprintf_r>
81000400:	83 c4 10             	add    $0x10,%esp
81000403:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000406:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000409:	c9                   	leave  
8100040a:	c3                   	ret    

8100040b <iprintf>:
8100040b:	55                   	push   %ebp
8100040c:	89 e5                	mov    %esp,%ebp
8100040e:	83 ec 18             	sub    $0x18,%esp
81000411:	a1 04 4f 00 81       	mov    0x81004f04,%eax
81000416:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000419:	8d 45 0c             	lea    0xc(%ebp),%eax
8100041c:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100041f:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000422:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000425:	8b 40 08             	mov    0x8(%eax),%eax
81000428:	52                   	push   %edx
81000429:	ff 75 08             	push   0x8(%ebp)
8100042c:	50                   	push   %eax
8100042d:	ff 75 f4             	push   -0xc(%ebp)
81000430:	e8 cb 19 00 00       	call   81001e00 <_vfiprintf_r>
81000435:	83 c4 10             	add    $0x10,%esp
81000438:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100043b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100043e:	c9                   	leave  
8100043f:	c3                   	ret    

81000440 <_puts_r>:
81000440:	55                   	push   %ebp
81000441:	89 e5                	mov    %esp,%ebp
81000443:	83 ec 38             	sub    $0x38,%esp
81000446:	83 ec 0c             	sub    $0xc,%esp
81000449:	ff 75 0c             	push   0xc(%ebp)
8100044c:	e8 ef 00 00 00       	call   81000540 <strlen>
81000451:	83 c4 10             	add    $0x10,%esp
81000454:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000457:	8b 45 0c             	mov    0xc(%ebp),%eax
8100045a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100045d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000460:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000463:	c7 45 d4 58 47 00 81 	movl   $0x81004758,-0x2c(%ebp)
8100046a:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81000471:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000474:	83 c0 01             	add    $0x1,%eax
81000477:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100047a:	8d 45 cc             	lea    -0x34(%ebp),%eax
8100047d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000480:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
81000487:	8b 45 08             	mov    0x8(%ebp),%eax
8100048a:	8b 40 08             	mov    0x8(%eax),%eax
8100048d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000490:	8b 45 08             	mov    0x8(%ebp),%eax
81000493:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000496:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100049a:	74 18                	je     810004b4 <_puts_r+0x74>
8100049c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100049f:	8b 40 38             	mov    0x38(%eax),%eax
810004a2:	85 c0                	test   %eax,%eax
810004a4:	75 0e                	jne    810004b4 <_puts_r+0x74>
810004a6:	83 ec 0c             	sub    $0xc,%esp
810004a9:	ff 75 ec             	push   -0x14(%ebp)
810004ac:	e8 fd 03 00 00       	call   810008ae <__sinit>
810004b1:	83 c4 10             	add    $0x10,%esp
810004b4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810004b7:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810004bb:	98                   	cwtl   
810004bc:	25 00 20 00 00       	and    $0x2000,%eax
810004c1:	85 c0                	test   %eax,%eax
810004c3:	75 24                	jne    810004e9 <_puts_r+0xa9>
810004c5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810004c8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810004cc:	80 cc 20             	or     $0x20,%ah
810004cf:	89 c2                	mov    %eax,%edx
810004d1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810004d4:	66 89 50 0c          	mov    %dx,0xc(%eax)
810004d8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810004db:	8b 40 64             	mov    0x64(%eax),%eax
810004de:	80 e4 df             	and    $0xdf,%ah
810004e1:	89 c2                	mov    %eax,%edx
810004e3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810004e6:	89 50 64             	mov    %edx,0x64(%eax)
810004e9:	83 ec 04             	sub    $0x4,%esp
810004ec:	8d 45 dc             	lea    -0x24(%ebp),%eax
810004ef:	50                   	push   %eax
810004f0:	ff 75 f0             	push   -0x10(%ebp)
810004f3:	ff 75 08             	push   0x8(%ebp)
810004f6:	e8 c0 04 00 00       	call   810009bb <__sfvwrite_r>
810004fb:	83 c4 10             	add    $0x10,%esp
810004fe:	85 c0                	test   %eax,%eax
81000500:	74 07                	je     81000509 <_puts_r+0xc9>
81000502:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000507:	eb 05                	jmp    8100050e <_puts_r+0xce>
81000509:	b8 0a 00 00 00       	mov    $0xa,%eax
8100050e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000511:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000514:	c9                   	leave  
81000515:	c3                   	ret    

81000516 <puts>:
81000516:	55                   	push   %ebp
81000517:	89 e5                	mov    %esp,%ebp
81000519:	83 ec 08             	sub    $0x8,%esp
8100051c:	a1 04 4f 00 81       	mov    0x81004f04,%eax
81000521:	83 ec 08             	sub    $0x8,%esp
81000524:	ff 75 08             	push   0x8(%ebp)
81000527:	50                   	push   %eax
81000528:	e8 13 ff ff ff       	call   81000440 <_puts_r>
8100052d:	83 c4 10             	add    $0x10,%esp
81000530:	c9                   	leave  
81000531:	c3                   	ret    
81000532:	66 90                	xchg   %ax,%ax
81000534:	66 90                	xchg   %ax,%ax
81000536:	66 90                	xchg   %ax,%ax
81000538:	66 90                	xchg   %ax,%ax
8100053a:	66 90                	xchg   %ax,%ax
8100053c:	66 90                	xchg   %ax,%ax
8100053e:	66 90                	xchg   %ax,%ax

81000540 <strlen>:
81000540:	55                   	push   %ebp
81000541:	89 e5                	mov    %esp,%ebp
81000543:	57                   	push   %edi
81000544:	8b 55 08             	mov    0x8(%ebp),%edx
81000547:	89 d7                	mov    %edx,%edi
81000549:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100054f:	74 25                	je     81000576 <L5>
81000551:	8a 0f                	mov    (%edi),%cl
81000553:	47                   	inc    %edi
81000554:	84 c9                	test   %cl,%cl
81000556:	74 56                	je     810005ae <L15>
81000558:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100055e:	74 16                	je     81000576 <L5>
81000560:	8a 0f                	mov    (%edi),%cl
81000562:	47                   	inc    %edi
81000563:	84 c9                	test   %cl,%cl
81000565:	74 47                	je     810005ae <L15>
81000567:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100056d:	74 07                	je     81000576 <L5>
8100056f:	8a 0f                	mov    (%edi),%cl
81000571:	47                   	inc    %edi
81000572:	84 c9                	test   %cl,%cl
81000574:	74 38                	je     810005ae <L15>

81000576 <L5>:
81000576:	83 ef 04             	sub    $0x4,%edi
81000579:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81000580 <L10>:
81000580:	83 c7 04             	add    $0x4,%edi
81000583:	8b 0f                	mov    (%edi),%ecx
81000585:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
8100058b:	f7 d1                	not    %ecx
8100058d:	21 c8                	and    %ecx,%eax
8100058f:	a9 80 80 80 80       	test   $0x80808080,%eax
81000594:	74 ea                	je     81000580 <L10>
81000596:	f7 d1                	not    %ecx
81000598:	47                   	inc    %edi
81000599:	84 c9                	test   %cl,%cl
8100059b:	74 11                	je     810005ae <L15>
8100059d:	47                   	inc    %edi
8100059e:	c1 e9 08             	shr    $0x8,%ecx
810005a1:	84 c9                	test   %cl,%cl
810005a3:	74 09                	je     810005ae <L15>
810005a5:	47                   	inc    %edi
810005a6:	c1 e9 08             	shr    $0x8,%ecx
810005a9:	84 c9                	test   %cl,%cl
810005ab:	74 01                	je     810005ae <L15>
810005ad:	47                   	inc    %edi

810005ae <L15>:
810005ae:	29 d7                	sub    %edx,%edi
810005b0:	8d 47 ff             	lea    -0x1(%edi),%eax
810005b3:	8d 65 fc             	lea    -0x4(%ebp),%esp
810005b6:	5f                   	pop    %edi
810005b7:	c9                   	leave  
810005b8:	c3                   	ret    

810005b9 <std>:
810005b9:	55                   	push   %ebp
810005ba:	89 e5                	mov    %esp,%ebp
810005bc:	83 ec 08             	sub    $0x8,%esp
810005bf:	8b 45 08             	mov    0x8(%ebp),%eax
810005c2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810005c8:	8b 45 08             	mov    0x8(%ebp),%eax
810005cb:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810005d2:	8b 45 08             	mov    0x8(%ebp),%eax
810005d5:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810005dc:	8b 45 0c             	mov    0xc(%ebp),%eax
810005df:	89 c2                	mov    %eax,%edx
810005e1:	8b 45 08             	mov    0x8(%ebp),%eax
810005e4:	66 89 50 0c          	mov    %dx,0xc(%eax)
810005e8:	8b 45 08             	mov    0x8(%ebp),%eax
810005eb:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
810005f2:	8b 45 10             	mov    0x10(%ebp),%eax
810005f5:	89 c2                	mov    %eax,%edx
810005f7:	8b 45 08             	mov    0x8(%ebp),%eax
810005fa:	66 89 50 0e          	mov    %dx,0xe(%eax)
810005fe:	8b 45 08             	mov    0x8(%ebp),%eax
81000601:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000608:	8b 45 08             	mov    0x8(%ebp),%eax
8100060b:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000612:	8b 45 08             	mov    0x8(%ebp),%eax
81000615:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8100061c:	8b 45 08             	mov    0x8(%ebp),%eax
8100061f:	83 c0 5c             	add    $0x5c,%eax
81000622:	83 ec 04             	sub    $0x4,%esp
81000625:	6a 08                	push   $0x8
81000627:	6a 00                	push   $0x0
81000629:	50                   	push   %eax
8100062a:	e8 2e 15 00 00       	call   81001b5d <memset>
8100062f:	83 c4 10             	add    $0x10,%esp
81000632:	8b 45 08             	mov    0x8(%ebp),%eax
81000635:	8b 55 08             	mov    0x8(%ebp),%edx
81000638:	89 50 1c             	mov    %edx,0x1c(%eax)
8100063b:	8b 45 08             	mov    0x8(%ebp),%eax
8100063e:	c7 40 20 5a 30 00 81 	movl   $0x8100305a,0x20(%eax)
81000645:	8b 45 08             	mov    0x8(%ebp),%eax
81000648:	c7 40 24 a8 30 00 81 	movl   $0x810030a8,0x24(%eax)
8100064f:	8b 45 08             	mov    0x8(%ebp),%eax
81000652:	c7 40 28 03 31 00 81 	movl   $0x81003103,0x28(%eax)
81000659:	8b 45 08             	mov    0x8(%ebp),%eax
8100065c:	c7 40 2c 4d 31 00 81 	movl   $0x8100314d,0x2c(%eax)
81000663:	90                   	nop
81000664:	c9                   	leave  
81000665:	c3                   	ret    

81000666 <stdin_init>:
81000666:	55                   	push   %ebp
81000667:	89 e5                	mov    %esp,%ebp
81000669:	83 ec 08             	sub    $0x8,%esp
8100066c:	83 ec 04             	sub    $0x4,%esp
8100066f:	6a 00                	push   $0x0
81000671:	6a 04                	push   $0x4
81000673:	ff 75 08             	push   0x8(%ebp)
81000676:	e8 3e ff ff ff       	call   810005b9 <std>
8100067b:	83 c4 10             	add    $0x10,%esp
8100067e:	90                   	nop
8100067f:	c9                   	leave  
81000680:	c3                   	ret    

81000681 <stdout_init>:
81000681:	55                   	push   %ebp
81000682:	89 e5                	mov    %esp,%ebp
81000684:	83 ec 08             	sub    $0x8,%esp
81000687:	83 ec 04             	sub    $0x4,%esp
8100068a:	6a 01                	push   $0x1
8100068c:	6a 09                	push   $0x9
8100068e:	ff 75 08             	push   0x8(%ebp)
81000691:	e8 23 ff ff ff       	call   810005b9 <std>
81000696:	83 c4 10             	add    $0x10,%esp
81000699:	90                   	nop
8100069a:	c9                   	leave  
8100069b:	c3                   	ret    

8100069c <stderr_init>:
8100069c:	55                   	push   %ebp
8100069d:	89 e5                	mov    %esp,%ebp
8100069f:	83 ec 08             	sub    $0x8,%esp
810006a2:	83 ec 04             	sub    $0x4,%esp
810006a5:	6a 02                	push   $0x2
810006a7:	6a 12                	push   $0x12
810006a9:	ff 75 08             	push   0x8(%ebp)
810006ac:	e8 08 ff ff ff       	call   810005b9 <std>
810006b1:	83 c4 10             	add    $0x10,%esp
810006b4:	90                   	nop
810006b5:	c9                   	leave  
810006b6:	c3                   	ret    

810006b7 <__sfmoreglue>:
810006b7:	55                   	push   %ebp
810006b8:	89 e5                	mov    %esp,%ebp
810006ba:	53                   	push   %ebx
810006bb:	83 ec 14             	sub    $0x14,%esp
810006be:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810006c1:	8d 43 ff             	lea    -0x1(%ebx),%eax
810006c4:	6b c0 68             	imul   $0x68,%eax,%eax
810006c7:	83 c0 74             	add    $0x74,%eax
810006ca:	83 ec 08             	sub    $0x8,%esp
810006cd:	50                   	push   %eax
810006ce:	ff 75 08             	push   0x8(%ebp)
810006d1:	e8 e9 0a 00 00       	call   810011bf <_malloc_r>
810006d6:	83 c4 10             	add    $0x10,%esp
810006d9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810006dc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810006e0:	75 07                	jne    810006e9 <__sfmoreglue+0x32>
810006e2:	b8 00 00 00 00       	mov    $0x0,%eax
810006e7:	eb 38                	jmp    81000721 <__sfmoreglue+0x6a>
810006e9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006ec:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810006f2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006f5:	89 58 04             	mov    %ebx,0x4(%eax)
810006f8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006fb:	8d 50 0c             	lea    0xc(%eax),%edx
810006fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000701:	89 50 08             	mov    %edx,0x8(%eax)
81000704:	89 d8                	mov    %ebx,%eax
81000706:	6b c0 68             	imul   $0x68,%eax,%eax
81000709:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100070c:	83 c2 0c             	add    $0xc,%edx
8100070f:	83 ec 04             	sub    $0x4,%esp
81000712:	50                   	push   %eax
81000713:	6a 00                	push   $0x0
81000715:	52                   	push   %edx
81000716:	e8 42 14 00 00       	call   81001b5d <memset>
8100071b:	83 c4 10             	add    $0x10,%esp
8100071e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000721:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000724:	c9                   	leave  
81000725:	c3                   	ret    

81000726 <__sfp>:
81000726:	55                   	push   %ebp
81000727:	89 e5                	mov    %esp,%ebp
81000729:	83 ec 18             	sub    $0x18,%esp
8100072c:	e8 16 02 00 00       	call   81000947 <__sfp_lock_acquire>
81000731:	a1 5c 47 00 81       	mov    0x8100475c,%eax
81000736:	8b 40 38             	mov    0x38(%eax),%eax
81000739:	85 c0                	test   %eax,%eax
8100073b:	75 11                	jne    8100074e <__sfp+0x28>
8100073d:	a1 5c 47 00 81       	mov    0x8100475c,%eax
81000742:	83 ec 0c             	sub    $0xc,%esp
81000745:	50                   	push   %eax
81000746:	e8 63 01 00 00       	call   810008ae <__sinit>
8100074b:	83 c4 10             	add    $0x10,%esp
8100074e:	a1 5c 47 00 81       	mov    0x8100475c,%eax
81000753:	05 e0 02 00 00       	add    $0x2e0,%eax
81000758:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100075b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100075e:	8b 40 08             	mov    0x8(%eax),%eax
81000761:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000764:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000767:	8b 40 04             	mov    0x4(%eax),%eax
8100076a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100076d:	eb 10                	jmp    8100077f <__sfp+0x59>
8100076f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000772:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000776:	66 85 c0             	test   %ax,%ax
81000779:	74 58                	je     810007d3 <__sfp+0xad>
8100077b:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
8100077f:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81000783:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000787:	79 e6                	jns    8100076f <__sfp+0x49>
81000789:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100078c:	8b 00                	mov    (%eax),%eax
8100078e:	85 c0                	test   %eax,%eax
81000790:	75 1e                	jne    810007b0 <__sfp+0x8a>
81000792:	83 ec 08             	sub    $0x8,%esp
81000795:	6a 04                	push   $0x4
81000797:	ff 75 08             	push   0x8(%ebp)
8100079a:	e8 18 ff ff ff       	call   810006b7 <__sfmoreglue>
8100079f:	83 c4 10             	add    $0x10,%esp
810007a2:	8b 55 ec             	mov    -0x14(%ebp),%edx
810007a5:	89 02                	mov    %eax,(%edx)
810007a7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810007aa:	8b 00                	mov    (%eax),%eax
810007ac:	85 c0                	test   %eax,%eax
810007ae:	74 0a                	je     810007ba <__sfp+0x94>
810007b0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810007b3:	8b 00                	mov    (%eax),%eax
810007b5:	89 45 ec             	mov    %eax,-0x14(%ebp)
810007b8:	eb a1                	jmp    8100075b <__sfp+0x35>
810007ba:	90                   	nop
810007bb:	e8 8d 01 00 00       	call   8100094d <__sfp_lock_release>
810007c0:	8b 45 08             	mov    0x8(%ebp),%eax
810007c3:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810007c9:	b8 00 00 00 00       	mov    $0x0,%eax
810007ce:	e9 9e 00 00 00       	jmp    81000871 <__sfp+0x14b>
810007d3:	90                   	nop
810007d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007d7:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
810007dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007e0:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
810007e6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007e9:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
810007f0:	e8 58 01 00 00       	call   8100094d <__sfp_lock_release>
810007f5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007f8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810007fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000801:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000808:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100080b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000812:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000815:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100081c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100081f:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000826:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000829:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000830:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000833:	83 c0 5c             	add    $0x5c,%eax
81000836:	83 ec 04             	sub    $0x4,%esp
81000839:	6a 08                	push   $0x8
8100083b:	6a 00                	push   $0x0
8100083d:	50                   	push   %eax
8100083e:	e8 1a 13 00 00       	call   81001b5d <memset>
81000843:	83 c4 10             	add    $0x10,%esp
81000846:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000849:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81000850:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000853:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
8100085a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100085d:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81000864:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000867:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
8100086e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000871:	c9                   	leave  
81000872:	c3                   	ret    

81000873 <_cleanup_r>:
81000873:	55                   	push   %ebp
81000874:	89 e5                	mov    %esp,%ebp
81000876:	83 ec 18             	sub    $0x18,%esp
81000879:	c7 45 f4 86 34 00 81 	movl   $0x81003486,-0xc(%ebp)
81000880:	83 ec 08             	sub    $0x8,%esp
81000883:	ff 75 f4             	push   -0xc(%ebp)
81000886:	ff 75 08             	push   0x8(%ebp)
81000889:	e8 33 06 00 00       	call   81000ec1 <_fwalk_reent>
8100088e:	83 c4 10             	add    $0x10,%esp
81000891:	90                   	nop
81000892:	c9                   	leave  
81000893:	c3                   	ret    

81000894 <_cleanup>:
81000894:	55                   	push   %ebp
81000895:	89 e5                	mov    %esp,%ebp
81000897:	83 ec 08             	sub    $0x8,%esp
8100089a:	a1 5c 47 00 81       	mov    0x8100475c,%eax
8100089f:	83 ec 0c             	sub    $0xc,%esp
810008a2:	50                   	push   %eax
810008a3:	e8 cb ff ff ff       	call   81000873 <_cleanup_r>
810008a8:	83 c4 10             	add    $0x10,%esp
810008ab:	90                   	nop
810008ac:	c9                   	leave  
810008ad:	c3                   	ret    

810008ae <__sinit>:
810008ae:	55                   	push   %ebp
810008af:	89 e5                	mov    %esp,%ebp
810008b1:	83 ec 08             	sub    $0x8,%esp
810008b4:	e8 9a 00 00 00       	call   81000953 <__sinit_lock_acquire>
810008b9:	8b 45 08             	mov    0x8(%ebp),%eax
810008bc:	8b 40 38             	mov    0x38(%eax),%eax
810008bf:	85 c0                	test   %eax,%eax
810008c1:	74 07                	je     810008ca <__sinit+0x1c>
810008c3:	e8 91 00 00 00       	call   81000959 <__sinit_lock_release>
810008c8:	eb 7b                	jmp    81000945 <__sinit+0x97>
810008ca:	8b 45 08             	mov    0x8(%ebp),%eax
810008cd:	c7 40 3c 73 08 00 81 	movl   $0x81000873,0x3c(%eax)
810008d4:	8b 45 08             	mov    0x8(%ebp),%eax
810008d7:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
810008de:	00 00 00 
810008e1:	8b 45 08             	mov    0x8(%ebp),%eax
810008e4:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
810008eb:	00 00 00 
810008ee:	8b 45 08             	mov    0x8(%ebp),%eax
810008f1:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
810008f7:	8b 45 08             	mov    0x8(%ebp),%eax
810008fa:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81000900:	8b 45 08             	mov    0x8(%ebp),%eax
81000903:	8b 40 04             	mov    0x4(%eax),%eax
81000906:	83 ec 0c             	sub    $0xc,%esp
81000909:	50                   	push   %eax
8100090a:	e8 57 fd ff ff       	call   81000666 <stdin_init>
8100090f:	83 c4 10             	add    $0x10,%esp
81000912:	8b 45 08             	mov    0x8(%ebp),%eax
81000915:	8b 40 08             	mov    0x8(%eax),%eax
81000918:	83 ec 0c             	sub    $0xc,%esp
8100091b:	50                   	push   %eax
8100091c:	e8 60 fd ff ff       	call   81000681 <stdout_init>
81000921:	83 c4 10             	add    $0x10,%esp
81000924:	8b 45 08             	mov    0x8(%ebp),%eax
81000927:	8b 40 0c             	mov    0xc(%eax),%eax
8100092a:	83 ec 0c             	sub    $0xc,%esp
8100092d:	50                   	push   %eax
8100092e:	e8 69 fd ff ff       	call   8100069c <stderr_init>
81000933:	83 c4 10             	add    $0x10,%esp
81000936:	8b 45 08             	mov    0x8(%ebp),%eax
81000939:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81000940:	e8 14 00 00 00       	call   81000959 <__sinit_lock_release>
81000945:	c9                   	leave  
81000946:	c3                   	ret    

81000947 <__sfp_lock_acquire>:
81000947:	55                   	push   %ebp
81000948:	89 e5                	mov    %esp,%ebp
8100094a:	90                   	nop
8100094b:	5d                   	pop    %ebp
8100094c:	c3                   	ret    

8100094d <__sfp_lock_release>:
8100094d:	55                   	push   %ebp
8100094e:	89 e5                	mov    %esp,%ebp
81000950:	90                   	nop
81000951:	5d                   	pop    %ebp
81000952:	c3                   	ret    

81000953 <__sinit_lock_acquire>:
81000953:	55                   	push   %ebp
81000954:	89 e5                	mov    %esp,%ebp
81000956:	90                   	nop
81000957:	5d                   	pop    %ebp
81000958:	c3                   	ret    

81000959 <__sinit_lock_release>:
81000959:	55                   	push   %ebp
8100095a:	89 e5                	mov    %esp,%ebp
8100095c:	90                   	nop
8100095d:	5d                   	pop    %ebp
8100095e:	c3                   	ret    

8100095f <__fp_lock>:
8100095f:	55                   	push   %ebp
81000960:	89 e5                	mov    %esp,%ebp
81000962:	b8 00 00 00 00       	mov    $0x0,%eax
81000967:	5d                   	pop    %ebp
81000968:	c3                   	ret    

81000969 <__fp_unlock>:
81000969:	55                   	push   %ebp
8100096a:	89 e5                	mov    %esp,%ebp
8100096c:	b8 00 00 00 00       	mov    $0x0,%eax
81000971:	5d                   	pop    %ebp
81000972:	c3                   	ret    

81000973 <__fp_lock_all>:
81000973:	55                   	push   %ebp
81000974:	89 e5                	mov    %esp,%ebp
81000976:	83 ec 08             	sub    $0x8,%esp
81000979:	e8 c9 ff ff ff       	call   81000947 <__sfp_lock_acquire>
8100097e:	a1 04 4f 00 81       	mov    0x81004f04,%eax
81000983:	83 ec 08             	sub    $0x8,%esp
81000986:	68 5f 09 00 81       	push   $0x8100095f
8100098b:	50                   	push   %eax
8100098c:	e8 c8 04 00 00       	call   81000e59 <_fwalk>
81000991:	83 c4 10             	add    $0x10,%esp
81000994:	90                   	nop
81000995:	c9                   	leave  
81000996:	c3                   	ret    

81000997 <__fp_unlock_all>:
81000997:	55                   	push   %ebp
81000998:	89 e5                	mov    %esp,%ebp
8100099a:	83 ec 08             	sub    $0x8,%esp
8100099d:	a1 04 4f 00 81       	mov    0x81004f04,%eax
810009a2:	83 ec 08             	sub    $0x8,%esp
810009a5:	68 69 09 00 81       	push   $0x81000969
810009aa:	50                   	push   %eax
810009ab:	e8 a9 04 00 00       	call   81000e59 <_fwalk>
810009b0:	83 c4 10             	add    $0x10,%esp
810009b3:	e8 95 ff ff ff       	call   8100094d <__sfp_lock_release>
810009b8:	90                   	nop
810009b9:	c9                   	leave  
810009ba:	c3                   	ret    

810009bb <__sfvwrite_r>:
810009bb:	55                   	push   %ebp
810009bc:	89 e5                	mov    %esp,%ebp
810009be:	57                   	push   %edi
810009bf:	56                   	push   %esi
810009c0:	53                   	push   %ebx
810009c1:	83 ec 3c             	sub    $0x3c,%esp
810009c4:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810009c7:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
810009ce:	8b 45 10             	mov    0x10(%ebp),%eax
810009d1:	8b 78 08             	mov    0x8(%eax),%edi
810009d4:	85 ff                	test   %edi,%edi
810009d6:	75 0a                	jne    810009e2 <__sfvwrite_r+0x27>
810009d8:	b8 00 00 00 00       	mov    $0x0,%eax
810009dd:	e9 6f 04 00 00       	jmp    81000e51 <__sfvwrite_r+0x496>
810009e2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810009e6:	98                   	cwtl   
810009e7:	83 e0 08             	and    $0x8,%eax
810009ea:	85 c0                	test   %eax,%eax
810009ec:	74 07                	je     810009f5 <__sfvwrite_r+0x3a>
810009ee:	8b 43 10             	mov    0x10(%ebx),%eax
810009f1:	85 c0                	test   %eax,%eax
810009f3:	75 1d                	jne    81000a12 <__sfvwrite_r+0x57>
810009f5:	83 ec 08             	sub    $0x8,%esp
810009f8:	53                   	push   %ebx
810009f9:	ff 75 08             	push   0x8(%ebp)
810009fc:	e8 ea 28 00 00       	call   810032eb <__swsetup_r>
81000a01:	83 c4 10             	add    $0x10,%esp
81000a04:	85 c0                	test   %eax,%eax
81000a06:	74 0a                	je     81000a12 <__sfvwrite_r+0x57>
81000a08:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000a0d:	e9 3f 04 00 00       	jmp    81000e51 <__sfvwrite_r+0x496>
81000a12:	8b 45 10             	mov    0x10(%ebp),%eax
81000a15:	8b 00                	mov    (%eax),%eax
81000a17:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000a1a:	bf 00 00 00 00       	mov    $0x0,%edi
81000a1f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a23:	98                   	cwtl   
81000a24:	83 e0 02             	and    $0x2,%eax
81000a27:	85 c0                	test   %eax,%eax
81000a29:	74 68                	je     81000a93 <__sfvwrite_r+0xd8>
81000a2b:	eb 11                	jmp    81000a3e <__sfvwrite_r+0x83>
81000a2d:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000a30:	8b 08                	mov    (%eax),%ecx
81000a32:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000a35:	8b 78 04             	mov    0x4(%eax),%edi
81000a38:	83 c0 08             	add    $0x8,%eax
81000a3b:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000a3e:	85 ff                	test   %edi,%edi
81000a40:	74 eb                	je     81000a2d <__sfvwrite_r+0x72>
81000a42:	8b 4b 24             	mov    0x24(%ebx),%ecx
81000a45:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
81000a4a:	39 c7                	cmp    %eax,%edi
81000a4c:	0f 46 c7             	cmovbe %edi,%eax
81000a4f:	89 c2                	mov    %eax,%edx
81000a51:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000a54:	52                   	push   %edx
81000a55:	ff 75 c4             	push   -0x3c(%ebp)
81000a58:	50                   	push   %eax
81000a59:	ff 75 08             	push   0x8(%ebp)
81000a5c:	ff d1                	call   *%ecx
81000a5e:	83 c4 10             	add    $0x10,%esp
81000a61:	89 c6                	mov    %eax,%esi
81000a63:	85 f6                	test   %esi,%esi
81000a65:	0f 8e cf 03 00 00    	jle    81000e3a <__sfvwrite_r+0x47f>
81000a6b:	89 f0                	mov    %esi,%eax
81000a6d:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000a70:	89 f0                	mov    %esi,%eax
81000a72:	29 c7                	sub    %eax,%edi
81000a74:	8b 45 10             	mov    0x10(%ebp),%eax
81000a77:	8b 40 08             	mov    0x8(%eax),%eax
81000a7a:	89 f2                	mov    %esi,%edx
81000a7c:	29 d0                	sub    %edx,%eax
81000a7e:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000a81:	89 41 08             	mov    %eax,0x8(%ecx)
81000a84:	8b 45 10             	mov    0x10(%ebp),%eax
81000a87:	8b 40 08             	mov    0x8(%eax),%eax
81000a8a:	85 c0                	test   %eax,%eax
81000a8c:	75 b0                	jne    81000a3e <__sfvwrite_r+0x83>
81000a8e:	e9 a0 03 00 00       	jmp    81000e33 <__sfvwrite_r+0x478>
81000a93:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a97:	98                   	cwtl   
81000a98:	83 e0 01             	and    $0x1,%eax
81000a9b:	85 c0                	test   %eax,%eax
81000a9d:	0f 85 44 02 00 00    	jne    81000ce7 <__sfvwrite_r+0x32c>
81000aa3:	eb 11                	jmp    81000ab6 <__sfvwrite_r+0xfb>
81000aa5:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000aa8:	8b 08                	mov    (%eax),%ecx
81000aaa:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000aad:	8b 78 04             	mov    0x4(%eax),%edi
81000ab0:	83 c0 08             	add    $0x8,%eax
81000ab3:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000ab6:	85 ff                	test   %edi,%edi
81000ab8:	74 eb                	je     81000aa5 <__sfvwrite_r+0xea>
81000aba:	8b 73 08             	mov    0x8(%ebx),%esi
81000abd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ac1:	98                   	cwtl   
81000ac2:	25 00 02 00 00       	and    $0x200,%eax
81000ac7:	85 c0                	test   %eax,%eax
81000ac9:	0f 84 4f 01 00 00    	je     81000c1e <__sfvwrite_r+0x263>
81000acf:	89 f0                	mov    %esi,%eax
81000ad1:	39 c7                	cmp    %eax,%edi
81000ad3:	0f 82 12 01 00 00    	jb     81000beb <__sfvwrite_r+0x230>
81000ad9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000add:	98                   	cwtl   
81000ade:	25 80 04 00 00       	and    $0x480,%eax
81000ae3:	85 c0                	test   %eax,%eax
81000ae5:	0f 84 00 01 00 00    	je     81000beb <__sfvwrite_r+0x230>
81000aeb:	8b 03                	mov    (%ebx),%eax
81000aed:	8b 53 10             	mov    0x10(%ebx),%edx
81000af0:	29 d0                	sub    %edx,%eax
81000af2:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000af5:	8b 53 14             	mov    0x14(%ebx),%edx
81000af8:	89 d0                	mov    %edx,%eax
81000afa:	01 c0                	add    %eax,%eax
81000afc:	01 d0                	add    %edx,%eax
81000afe:	89 c2                	mov    %eax,%edx
81000b00:	c1 ea 1f             	shr    $0x1f,%edx
81000b03:	01 d0                	add    %edx,%eax
81000b05:	d1 f8                	sar    %eax
81000b07:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000b0a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000b0d:	01 f8                	add    %edi,%eax
81000b0f:	8d 50 01             	lea    0x1(%eax),%edx
81000b12:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000b15:	39 c2                	cmp    %eax,%edx
81000b17:	76 0b                	jbe    81000b24 <__sfvwrite_r+0x169>
81000b19:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000b1c:	01 f8                	add    %edi,%eax
81000b1e:	83 c0 01             	add    $0x1,%eax
81000b21:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000b24:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b28:	98                   	cwtl   
81000b29:	25 00 04 00 00       	and    $0x400,%eax
81000b2e:	85 c0                	test   %eax,%eax
81000b30:	74 4f                	je     81000b81 <__sfvwrite_r+0x1c6>
81000b32:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000b35:	83 ec 08             	sub    $0x8,%esp
81000b38:	50                   	push   %eax
81000b39:	ff 75 08             	push   0x8(%ebp)
81000b3c:	e8 7e 06 00 00       	call   810011bf <_malloc_r>
81000b41:	83 c4 10             	add    $0x10,%esp
81000b44:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000b47:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000b4b:	75 0e                	jne    81000b5b <__sfvwrite_r+0x1a0>
81000b4d:	8b 45 08             	mov    0x8(%ebp),%eax
81000b50:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000b56:	e9 e6 02 00 00       	jmp    81000e41 <__sfvwrite_r+0x486>
81000b5b:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000b5e:	8b 43 10             	mov    0x10(%ebx),%eax
81000b61:	83 ec 04             	sub    $0x4,%esp
81000b64:	52                   	push   %edx
81000b65:	50                   	push   %eax
81000b66:	ff 75 dc             	push   -0x24(%ebp)
81000b69:	e8 1a 0f 00 00       	call   81001a88 <memcpy>
81000b6e:	83 c4 10             	add    $0x10,%esp
81000b71:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b75:	66 25 7f fb          	and    $0xfb7f,%ax
81000b79:	0c 80                	or     $0x80,%al
81000b7b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000b7f:	eb 49                	jmp    81000bca <__sfvwrite_r+0x20f>
81000b81:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000b84:	8b 43 10             	mov    0x10(%ebx),%eax
81000b87:	83 ec 04             	sub    $0x4,%esp
81000b8a:	52                   	push   %edx
81000b8b:	50                   	push   %eax
81000b8c:	ff 75 08             	push   0x8(%ebp)
81000b8f:	e8 ac 1b 00 00       	call   81002740 <_realloc_r>
81000b94:	83 c4 10             	add    $0x10,%esp
81000b97:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000b9a:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000b9e:	75 2a                	jne    81000bca <__sfvwrite_r+0x20f>
81000ba0:	8b 43 10             	mov    0x10(%ebx),%eax
81000ba3:	83 ec 08             	sub    $0x8,%esp
81000ba6:	50                   	push   %eax
81000ba7:	ff 75 08             	push   0x8(%ebp)
81000baa:	e8 67 2e 00 00       	call   81003a16 <_free_r>
81000baf:	83 c4 10             	add    $0x10,%esp
81000bb2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000bb6:	24 7f                	and    $0x7f,%al
81000bb8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000bbc:	8b 45 08             	mov    0x8(%ebp),%eax
81000bbf:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000bc5:	e9 77 02 00 00       	jmp    81000e41 <__sfvwrite_r+0x486>
81000bca:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000bcd:	89 43 10             	mov    %eax,0x10(%ebx)
81000bd0:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000bd3:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000bd6:	01 d0                	add    %edx,%eax
81000bd8:	89 03                	mov    %eax,(%ebx)
81000bda:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000bdd:	89 43 14             	mov    %eax,0x14(%ebx)
81000be0:	89 fe                	mov    %edi,%esi
81000be2:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000be5:	2b 45 d0             	sub    -0x30(%ebp),%eax
81000be8:	89 43 08             	mov    %eax,0x8(%ebx)
81000beb:	89 f0                	mov    %esi,%eax
81000bed:	39 c7                	cmp    %eax,%edi
81000bef:	73 02                	jae    81000bf3 <__sfvwrite_r+0x238>
81000bf1:	89 fe                	mov    %edi,%esi
81000bf3:	89 f2                	mov    %esi,%edx
81000bf5:	8b 03                	mov    (%ebx),%eax
81000bf7:	83 ec 04             	sub    $0x4,%esp
81000bfa:	52                   	push   %edx
81000bfb:	ff 75 c4             	push   -0x3c(%ebp)
81000bfe:	50                   	push   %eax
81000bff:	e8 cc 0e 00 00       	call   81001ad0 <memmove>
81000c04:	83 c4 10             	add    $0x10,%esp
81000c07:	8b 43 08             	mov    0x8(%ebx),%eax
81000c0a:	29 f0                	sub    %esi,%eax
81000c0c:	89 43 08             	mov    %eax,0x8(%ebx)
81000c0f:	8b 03                	mov    (%ebx),%eax
81000c11:	89 f2                	mov    %esi,%edx
81000c13:	01 d0                	add    %edx,%eax
81000c15:	89 03                	mov    %eax,(%ebx)
81000c17:	89 fe                	mov    %edi,%esi
81000c19:	e9 9d 00 00 00       	jmp    81000cbb <__sfvwrite_r+0x300>
81000c1e:	8b 13                	mov    (%ebx),%edx
81000c20:	8b 43 10             	mov    0x10(%ebx),%eax
81000c23:	39 c2                	cmp    %eax,%edx
81000c25:	77 07                	ja     81000c2e <__sfvwrite_r+0x273>
81000c27:	8b 43 14             	mov    0x14(%ebx),%eax
81000c2a:	39 c7                	cmp    %eax,%edi
81000c2c:	73 4c                	jae    81000c7a <__sfvwrite_r+0x2bf>
81000c2e:	89 f0                	mov    %esi,%eax
81000c30:	39 c7                	cmp    %eax,%edi
81000c32:	0f 46 c7             	cmovbe %edi,%eax
81000c35:	89 c6                	mov    %eax,%esi
81000c37:	89 f2                	mov    %esi,%edx
81000c39:	8b 03                	mov    (%ebx),%eax
81000c3b:	83 ec 04             	sub    $0x4,%esp
81000c3e:	52                   	push   %edx
81000c3f:	ff 75 c4             	push   -0x3c(%ebp)
81000c42:	50                   	push   %eax
81000c43:	e8 88 0e 00 00       	call   81001ad0 <memmove>
81000c48:	83 c4 10             	add    $0x10,%esp
81000c4b:	8b 43 08             	mov    0x8(%ebx),%eax
81000c4e:	29 f0                	sub    %esi,%eax
81000c50:	89 43 08             	mov    %eax,0x8(%ebx)
81000c53:	8b 03                	mov    (%ebx),%eax
81000c55:	89 f2                	mov    %esi,%edx
81000c57:	01 d0                	add    %edx,%eax
81000c59:	89 03                	mov    %eax,(%ebx)
81000c5b:	8b 43 08             	mov    0x8(%ebx),%eax
81000c5e:	85 c0                	test   %eax,%eax
81000c60:	75 58                	jne    81000cba <__sfvwrite_r+0x2ff>
81000c62:	83 ec 08             	sub    $0x8,%esp
81000c65:	53                   	push   %ebx
81000c66:	ff 75 08             	push   0x8(%ebp)
81000c69:	e8 62 2b 00 00       	call   810037d0 <_fflush_r>
81000c6e:	83 c4 10             	add    $0x10,%esp
81000c71:	85 c0                	test   %eax,%eax
81000c73:	74 45                	je     81000cba <__sfvwrite_r+0x2ff>
81000c75:	e9 c7 01 00 00       	jmp    81000e41 <__sfvwrite_r+0x486>
81000c7a:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81000c80:	77 04                	ja     81000c86 <__sfvwrite_r+0x2cb>
81000c82:	89 f8                	mov    %edi,%eax
81000c84:	eb 05                	jmp    81000c8b <__sfvwrite_r+0x2d0>
81000c86:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81000c8b:	8b 4b 14             	mov    0x14(%ebx),%ecx
81000c8e:	99                   	cltd   
81000c8f:	f7 f9                	idiv   %ecx
81000c91:	89 c2                	mov    %eax,%edx
81000c93:	8b 43 14             	mov    0x14(%ebx),%eax
81000c96:	89 d6                	mov    %edx,%esi
81000c98:	0f af f0             	imul   %eax,%esi
81000c9b:	8b 53 24             	mov    0x24(%ebx),%edx
81000c9e:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000ca1:	56                   	push   %esi
81000ca2:	ff 75 c4             	push   -0x3c(%ebp)
81000ca5:	50                   	push   %eax
81000ca6:	ff 75 08             	push   0x8(%ebp)
81000ca9:	ff d2                	call   *%edx
81000cab:	83 c4 10             	add    $0x10,%esp
81000cae:	89 c6                	mov    %eax,%esi
81000cb0:	85 f6                	test   %esi,%esi
81000cb2:	0f 8e 85 01 00 00    	jle    81000e3d <__sfvwrite_r+0x482>
81000cb8:	eb 01                	jmp    81000cbb <__sfvwrite_r+0x300>
81000cba:	90                   	nop
81000cbb:	89 f0                	mov    %esi,%eax
81000cbd:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000cc0:	89 f0                	mov    %esi,%eax
81000cc2:	29 c7                	sub    %eax,%edi
81000cc4:	8b 45 10             	mov    0x10(%ebp),%eax
81000cc7:	8b 40 08             	mov    0x8(%eax),%eax
81000cca:	89 f2                	mov    %esi,%edx
81000ccc:	29 d0                	sub    %edx,%eax
81000cce:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000cd1:	89 41 08             	mov    %eax,0x8(%ecx)
81000cd4:	8b 45 10             	mov    0x10(%ebp),%eax
81000cd7:	8b 40 08             	mov    0x8(%eax),%eax
81000cda:	85 c0                	test   %eax,%eax
81000cdc:	0f 85 d4 fd ff ff    	jne    81000ab6 <__sfvwrite_r+0xfb>
81000ce2:	e9 4c 01 00 00       	jmp    81000e33 <__sfvwrite_r+0x478>
81000ce7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000cee:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000cf5:	eb 18                	jmp    81000d0f <__sfvwrite_r+0x354>
81000cf7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000cfe:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000d01:	8b 08                	mov    (%eax),%ecx
81000d03:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000d06:	8b 78 04             	mov    0x4(%eax),%edi
81000d09:	83 c0 08             	add    $0x8,%eax
81000d0c:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000d0f:	85 ff                	test   %edi,%edi
81000d11:	74 e4                	je     81000cf7 <__sfvwrite_r+0x33c>
81000d13:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000d17:	75 32                	jne    81000d4b <__sfvwrite_r+0x390>
81000d19:	83 ec 04             	sub    $0x4,%esp
81000d1c:	57                   	push   %edi
81000d1d:	6a 0a                	push   $0xa
81000d1f:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81000d22:	56                   	push   %esi
81000d23:	e8 c8 0c 00 00       	call   810019f0 <memchr>
81000d28:	83 c4 10             	add    $0x10,%esp
81000d2b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81000d2e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81000d32:	74 0a                	je     81000d3e <__sfvwrite_r+0x383>
81000d34:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000d37:	83 c0 01             	add    $0x1,%eax
81000d3a:	29 f0                	sub    %esi,%eax
81000d3c:	eb 03                	jmp    81000d41 <__sfvwrite_r+0x386>
81000d3e:	8d 47 01             	lea    0x1(%edi),%eax
81000d41:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000d44:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81000d4b:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000d4e:	39 c7                	cmp    %eax,%edi
81000d50:	0f 46 c7             	cmovbe %edi,%eax
81000d53:	89 c1                	mov    %eax,%ecx
81000d55:	8b 53 08             	mov    0x8(%ebx),%edx
81000d58:	8b 43 14             	mov    0x14(%ebx),%eax
81000d5b:	8d 34 02             	lea    (%edx,%eax,1),%esi
81000d5e:	8b 13                	mov    (%ebx),%edx
81000d60:	8b 43 10             	mov    0x10(%ebx),%eax
81000d63:	39 c2                	cmp    %eax,%edx
81000d65:	76 38                	jbe    81000d9f <__sfvwrite_r+0x3e4>
81000d67:	39 f1                	cmp    %esi,%ecx
81000d69:	7e 34                	jle    81000d9f <__sfvwrite_r+0x3e4>
81000d6b:	89 f2                	mov    %esi,%edx
81000d6d:	8b 03                	mov    (%ebx),%eax
81000d6f:	83 ec 04             	sub    $0x4,%esp
81000d72:	52                   	push   %edx
81000d73:	ff 75 c4             	push   -0x3c(%ebp)
81000d76:	50                   	push   %eax
81000d77:	e8 54 0d 00 00       	call   81001ad0 <memmove>
81000d7c:	83 c4 10             	add    $0x10,%esp
81000d7f:	8b 03                	mov    (%ebx),%eax
81000d81:	89 f2                	mov    %esi,%edx
81000d83:	01 d0                	add    %edx,%eax
81000d85:	89 03                	mov    %eax,(%ebx)
81000d87:	83 ec 08             	sub    $0x8,%esp
81000d8a:	53                   	push   %ebx
81000d8b:	ff 75 08             	push   0x8(%ebp)
81000d8e:	e8 3d 2a 00 00       	call   810037d0 <_fflush_r>
81000d93:	83 c4 10             	add    $0x10,%esp
81000d96:	85 c0                	test   %eax,%eax
81000d98:	74 4f                	je     81000de9 <__sfvwrite_r+0x42e>
81000d9a:	e9 a2 00 00 00       	jmp    81000e41 <__sfvwrite_r+0x486>
81000d9f:	8b 73 14             	mov    0x14(%ebx),%esi
81000da2:	89 c8                	mov    %ecx,%eax
81000da4:	39 c6                	cmp    %eax,%esi
81000da6:	7f 1b                	jg     81000dc3 <__sfvwrite_r+0x408>
81000da8:	8b 53 24             	mov    0x24(%ebx),%edx
81000dab:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000dae:	56                   	push   %esi
81000daf:	ff 75 c4             	push   -0x3c(%ebp)
81000db2:	50                   	push   %eax
81000db3:	ff 75 08             	push   0x8(%ebp)
81000db6:	ff d2                	call   *%edx
81000db8:	83 c4 10             	add    $0x10,%esp
81000dbb:	89 c6                	mov    %eax,%esi
81000dbd:	85 f6                	test   %esi,%esi
81000dbf:	7f 28                	jg     81000de9 <__sfvwrite_r+0x42e>
81000dc1:	eb 7e                	jmp    81000e41 <__sfvwrite_r+0x486>
81000dc3:	89 ce                	mov    %ecx,%esi
81000dc5:	89 f2                	mov    %esi,%edx
81000dc7:	8b 03                	mov    (%ebx),%eax
81000dc9:	83 ec 04             	sub    $0x4,%esp
81000dcc:	52                   	push   %edx
81000dcd:	ff 75 c4             	push   -0x3c(%ebp)
81000dd0:	50                   	push   %eax
81000dd1:	e8 fa 0c 00 00       	call   81001ad0 <memmove>
81000dd6:	83 c4 10             	add    $0x10,%esp
81000dd9:	8b 43 08             	mov    0x8(%ebx),%eax
81000ddc:	29 f0                	sub    %esi,%eax
81000dde:	89 43 08             	mov    %eax,0x8(%ebx)
81000de1:	8b 03                	mov    (%ebx),%eax
81000de3:	89 f2                	mov    %esi,%edx
81000de5:	01 d0                	add    %edx,%eax
81000de7:	89 03                	mov    %eax,(%ebx)
81000de9:	29 75 e0             	sub    %esi,-0x20(%ebp)
81000dec:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000df0:	75 1a                	jne    81000e0c <__sfvwrite_r+0x451>
81000df2:	83 ec 08             	sub    $0x8,%esp
81000df5:	53                   	push   %ebx
81000df6:	ff 75 08             	push   0x8(%ebp)
81000df9:	e8 d2 29 00 00       	call   810037d0 <_fflush_r>
81000dfe:	83 c4 10             	add    $0x10,%esp
81000e01:	85 c0                	test   %eax,%eax
81000e03:	75 3b                	jne    81000e40 <__sfvwrite_r+0x485>
81000e05:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000e0c:	89 f0                	mov    %esi,%eax
81000e0e:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000e11:	89 f0                	mov    %esi,%eax
81000e13:	29 c7                	sub    %eax,%edi
81000e15:	8b 45 10             	mov    0x10(%ebp),%eax
81000e18:	8b 40 08             	mov    0x8(%eax),%eax
81000e1b:	89 f2                	mov    %esi,%edx
81000e1d:	29 d0                	sub    %edx,%eax
81000e1f:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000e22:	89 41 08             	mov    %eax,0x8(%ecx)
81000e25:	8b 45 10             	mov    0x10(%ebp),%eax
81000e28:	8b 40 08             	mov    0x8(%eax),%eax
81000e2b:	85 c0                	test   %eax,%eax
81000e2d:	0f 85 dc fe ff ff    	jne    81000d0f <__sfvwrite_r+0x354>
81000e33:	b8 00 00 00 00       	mov    $0x0,%eax
81000e38:	eb 17                	jmp    81000e51 <__sfvwrite_r+0x496>
81000e3a:	90                   	nop
81000e3b:	eb 04                	jmp    81000e41 <__sfvwrite_r+0x486>
81000e3d:	90                   	nop
81000e3e:	eb 01                	jmp    81000e41 <__sfvwrite_r+0x486>
81000e40:	90                   	nop
81000e41:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e45:	83 c8 40             	or     $0x40,%eax
81000e48:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000e4c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000e51:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000e54:	5b                   	pop    %ebx
81000e55:	5e                   	pop    %esi
81000e56:	5f                   	pop    %edi
81000e57:	5d                   	pop    %ebp
81000e58:	c3                   	ret    

81000e59 <_fwalk>:
81000e59:	55                   	push   %ebp
81000e5a:	89 e5                	mov    %esp,%ebp
81000e5c:	57                   	push   %edi
81000e5d:	56                   	push   %esi
81000e5e:	53                   	push   %ebx
81000e5f:	83 ec 1c             	sub    $0x1c,%esp
81000e62:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000e69:	8b 45 08             	mov    0x8(%ebp),%eax
81000e6c:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000e72:	eb 3e                	jmp    81000eb2 <_fwalk+0x59>
81000e74:	8b 5e 08             	mov    0x8(%esi),%ebx
81000e77:	8b 7e 04             	mov    0x4(%esi),%edi
81000e7a:	eb 2d                	jmp    81000ea9 <_fwalk+0x50>
81000e7c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e80:	66 85 c0             	test   %ax,%ax
81000e83:	74 21                	je     81000ea6 <_fwalk+0x4d>
81000e85:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e89:	66 83 f8 01          	cmp    $0x1,%ax
81000e8d:	74 17                	je     81000ea6 <_fwalk+0x4d>
81000e8f:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000e93:	66 83 f8 ff          	cmp    $0xffff,%ax
81000e97:	74 0d                	je     81000ea6 <_fwalk+0x4d>
81000e99:	83 ec 0c             	sub    $0xc,%esp
81000e9c:	53                   	push   %ebx
81000e9d:	ff 55 0c             	call   *0xc(%ebp)
81000ea0:	83 c4 10             	add    $0x10,%esp
81000ea3:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000ea6:	83 c3 68             	add    $0x68,%ebx
81000ea9:	83 ef 01             	sub    $0x1,%edi
81000eac:	85 ff                	test   %edi,%edi
81000eae:	79 cc                	jns    81000e7c <_fwalk+0x23>
81000eb0:	8b 36                	mov    (%esi),%esi
81000eb2:	85 f6                	test   %esi,%esi
81000eb4:	75 be                	jne    81000e74 <_fwalk+0x1b>
81000eb6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000eb9:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000ebc:	5b                   	pop    %ebx
81000ebd:	5e                   	pop    %esi
81000ebe:	5f                   	pop    %edi
81000ebf:	5d                   	pop    %ebp
81000ec0:	c3                   	ret    

81000ec1 <_fwalk_reent>:
81000ec1:	55                   	push   %ebp
81000ec2:	89 e5                	mov    %esp,%ebp
81000ec4:	57                   	push   %edi
81000ec5:	56                   	push   %esi
81000ec6:	53                   	push   %ebx
81000ec7:	83 ec 1c             	sub    $0x1c,%esp
81000eca:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000ed1:	8b 45 08             	mov    0x8(%ebp),%eax
81000ed4:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000eda:	eb 41                	jmp    81000f1d <_fwalk_reent+0x5c>
81000edc:	8b 5e 08             	mov    0x8(%esi),%ebx
81000edf:	8b 7e 04             	mov    0x4(%esi),%edi
81000ee2:	eb 30                	jmp    81000f14 <_fwalk_reent+0x53>
81000ee4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ee8:	66 85 c0             	test   %ax,%ax
81000eeb:	74 24                	je     81000f11 <_fwalk_reent+0x50>
81000eed:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ef1:	66 83 f8 01          	cmp    $0x1,%ax
81000ef5:	74 1a                	je     81000f11 <_fwalk_reent+0x50>
81000ef7:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000efb:	66 83 f8 ff          	cmp    $0xffff,%ax
81000eff:	74 10                	je     81000f11 <_fwalk_reent+0x50>
81000f01:	83 ec 08             	sub    $0x8,%esp
81000f04:	53                   	push   %ebx
81000f05:	ff 75 08             	push   0x8(%ebp)
81000f08:	ff 55 0c             	call   *0xc(%ebp)
81000f0b:	83 c4 10             	add    $0x10,%esp
81000f0e:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000f11:	83 c3 68             	add    $0x68,%ebx
81000f14:	83 ef 01             	sub    $0x1,%edi
81000f17:	85 ff                	test   %edi,%edi
81000f19:	79 c9                	jns    81000ee4 <_fwalk_reent+0x23>
81000f1b:	8b 36                	mov    (%esi),%esi
81000f1d:	85 f6                	test   %esi,%esi
81000f1f:	75 bb                	jne    81000edc <_fwalk_reent+0x1b>
81000f21:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000f24:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000f27:	5b                   	pop    %ebx
81000f28:	5e                   	pop    %esi
81000f29:	5f                   	pop    %edi
81000f2a:	5d                   	pop    %ebp
81000f2b:	c3                   	ret    

81000f2c <malloc_extend_top>:
81000f2c:	55                   	push   %ebp
81000f2d:	89 e5                	mov    %esp,%ebp
81000f2f:	83 ec 38             	sub    $0x38,%esp
81000f32:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000f39:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
81000f3e:	8b 40 08             	mov    0x8(%eax),%eax
81000f41:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000f44:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000f47:	8b 40 04             	mov    0x4(%eax),%eax
81000f4a:	83 e0 fc             	and    $0xfffffffc,%eax
81000f4d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000f50:	8b 55 e0             	mov    -0x20(%ebp),%edx
81000f53:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000f56:	01 d0                	add    %edx,%eax
81000f58:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000f5b:	8b 15 e0 54 00 81    	mov    0x810054e0,%edx
81000f61:	8b 45 0c             	mov    0xc(%ebp),%eax
81000f64:	01 d0                	add    %edx,%eax
81000f66:	83 c0 10             	add    $0x10,%eax
81000f69:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000f6c:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81000f73:	a1 2c 53 00 81       	mov    0x8100532c,%eax
81000f78:	83 f8 ff             	cmp    $0xffffffff,%eax
81000f7b:	74 15                	je     81000f92 <malloc_extend_top+0x66>
81000f7d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81000f80:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000f83:	01 d0                	add    %edx,%eax
81000f85:	8d 50 ff             	lea    -0x1(%eax),%edx
81000f88:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000f8b:	f7 d8                	neg    %eax
81000f8d:	21 d0                	and    %edx,%eax
81000f8f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000f92:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000f95:	83 ec 08             	sub    $0x8,%esp
81000f98:	50                   	push   %eax
81000f99:	ff 75 08             	push   0x8(%ebp)
81000f9c:	e8 79 20 00 00       	call   8100301a <_sbrk_r>
81000fa1:	83 c4 10             	add    $0x10,%esp
81000fa4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000fa7:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81000fab:	0f 84 0b 02 00 00    	je     810011bc <malloc_extend_top+0x290>
81000fb1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fb4:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81000fb7:	73 0e                	jae    81000fc7 <malloc_extend_top+0x9b>
81000fb9:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
81000fbe:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81000fc1:	0f 85 f5 01 00 00    	jne    810011bc <malloc_extend_top+0x290>
81000fc7:	a1 00 55 00 81       	mov    0x81005500,%eax
81000fcc:	89 c2                	mov    %eax,%edx
81000fce:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000fd1:	01 d0                	add    %edx,%eax
81000fd3:	a3 00 55 00 81       	mov    %eax,0x81005500
81000fd8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fdb:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81000fde:	75 30                	jne    81001010 <malloc_extend_top+0xe4>
81000fe0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000fe3:	8d 50 ff             	lea    -0x1(%eax),%edx
81000fe6:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000fe9:	21 d0                	and    %edx,%eax
81000feb:	85 c0                	test   %eax,%eax
81000fed:	75 21                	jne    81001010 <malloc_extend_top+0xe4>
81000fef:	8b 55 e8             	mov    -0x18(%ebp),%edx
81000ff2:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000ff5:	01 d0                	add    %edx,%eax
81000ff7:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000ffa:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
81000fff:	8b 40 08             	mov    0x8(%eax),%eax
81001002:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001005:	83 ca 01             	or     $0x1,%edx
81001008:	89 50 04             	mov    %edx,0x4(%eax)
8100100b:	e9 76 01 00 00       	jmp    81001186 <malloc_extend_top+0x25a>
81001010:	a1 2c 53 00 81       	mov    0x8100532c,%eax
81001015:	83 f8 ff             	cmp    $0xffffffff,%eax
81001018:	75 0a                	jne    81001024 <malloc_extend_top+0xf8>
8100101a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100101d:	a3 2c 53 00 81       	mov    %eax,0x8100532c
81001022:	eb 13                	jmp    81001037 <malloc_extend_top+0x10b>
81001024:	8b 15 00 55 00 81    	mov    0x81005500,%edx
8100102a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100102d:	2b 45 d8             	sub    -0x28(%ebp),%eax
81001030:	01 d0                	add    %edx,%eax
81001032:	a3 00 55 00 81       	mov    %eax,0x81005500
81001037:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100103a:	83 c0 08             	add    $0x8,%eax
8100103d:	83 e0 07             	and    $0x7,%eax
81001040:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001043:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81001047:	74 13                	je     8100105c <malloc_extend_top+0x130>
81001049:	b8 08 00 00 00       	mov    $0x8,%eax
8100104e:	2b 45 cc             	sub    -0x34(%ebp),%eax
81001051:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001054:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001057:	01 45 f4             	add    %eax,-0xc(%ebp)
8100105a:	eb 07                	jmp    81001063 <malloc_extend_top+0x137>
8100105c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001063:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001066:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001069:	01 d0                	add    %edx,%eax
8100106b:	89 c2                	mov    %eax,%edx
8100106d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001070:	83 e8 01             	sub    $0x1,%eax
81001073:	21 c2                	and    %eax,%edx
81001075:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001078:	29 d0                	sub    %edx,%eax
8100107a:	01 45 f0             	add    %eax,-0x10(%ebp)
8100107d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001080:	83 e8 01             	sub    $0x1,%eax
81001083:	21 45 f0             	and    %eax,-0x10(%ebp)
81001086:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001089:	83 ec 08             	sub    $0x8,%esp
8100108c:	50                   	push   %eax
8100108d:	ff 75 08             	push   0x8(%ebp)
81001090:	e8 85 1f 00 00       	call   8100301a <_sbrk_r>
81001095:	83 c4 10             	add    $0x10,%esp
81001098:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100109b:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
8100109f:	75 28                	jne    810010c9 <malloc_extend_top+0x19d>
810010a1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810010a8:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810010af:	8b 55 f4             	mov    -0xc(%ebp),%edx
810010b2:	8b 45 e8             	mov    -0x18(%ebp),%eax
810010b5:	01 d0                	add    %edx,%eax
810010b7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810010ba:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810010be:	74 09                	je     810010c9 <malloc_extend_top+0x19d>
810010c0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810010c3:	83 e8 08             	sub    $0x8,%eax
810010c6:	01 45 ec             	add    %eax,-0x14(%ebp)
810010c9:	a1 00 55 00 81       	mov    0x81005500,%eax
810010ce:	89 c2                	mov    %eax,%edx
810010d0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010d3:	01 d0                	add    %edx,%eax
810010d5:	a3 00 55 00 81       	mov    %eax,0x81005500
810010da:	ba 20 4f 00 81       	mov    $0x81004f20,%edx
810010df:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010e2:	89 42 08             	mov    %eax,0x8(%edx)
810010e5:	8b 45 ec             	mov    -0x14(%ebp),%eax
810010e8:	2b 45 f4             	sub    -0xc(%ebp),%eax
810010eb:	89 c2                	mov    %eax,%edx
810010ed:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010f0:	01 d0                	add    %edx,%eax
810010f2:	89 45 d0             	mov    %eax,-0x30(%ebp)
810010f5:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
810010fa:	8b 40 08             	mov    0x8(%eax),%eax
810010fd:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001100:	83 ca 01             	or     $0x1,%edx
81001103:	89 50 04             	mov    %edx,0x4(%eax)
81001106:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
8100110b:	39 45 e0             	cmp    %eax,-0x20(%ebp)
8100110e:	74 76                	je     81001186 <malloc_extend_top+0x25a>
81001110:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81001114:	77 14                	ja     8100112a <malloc_extend_top+0x1fe>
81001116:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
8100111b:	8b 40 08             	mov    0x8(%eax),%eax
8100111e:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81001125:	e9 93 00 00 00       	jmp    810011bd <malloc_extend_top+0x291>
8100112a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100112d:	83 e8 0c             	sub    $0xc,%eax
81001130:	83 e0 f8             	and    $0xfffffff8,%eax
81001133:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001136:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001139:	8b 40 04             	mov    0x4(%eax),%eax
8100113c:	83 e0 01             	and    $0x1,%eax
8100113f:	0b 45 dc             	or     -0x24(%ebp),%eax
81001142:	89 c2                	mov    %eax,%edx
81001144:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001147:	89 50 04             	mov    %edx,0x4(%eax)
8100114a:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100114d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001150:	01 d0                	add    %edx,%eax
81001152:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81001159:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100115c:	8d 50 04             	lea    0x4(%eax),%edx
8100115f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001162:	01 d0                	add    %edx,%eax
81001164:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8100116b:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
8100116f:	76 15                	jbe    81001186 <malloc_extend_top+0x25a>
81001171:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001174:	83 c0 08             	add    $0x8,%eax
81001177:	83 ec 08             	sub    $0x8,%esp
8100117a:	50                   	push   %eax
8100117b:	ff 75 08             	push   0x8(%ebp)
8100117e:	e8 93 28 00 00       	call   81003a16 <_free_r>
81001183:	83 c4 10             	add    $0x10,%esp
81001186:	a1 00 55 00 81       	mov    0x81005500,%eax
8100118b:	89 c2                	mov    %eax,%edx
8100118d:	a1 e4 54 00 81       	mov    0x810054e4,%eax
81001192:	39 c2                	cmp    %eax,%edx
81001194:	76 0a                	jbe    810011a0 <malloc_extend_top+0x274>
81001196:	a1 00 55 00 81       	mov    0x81005500,%eax
8100119b:	a3 e4 54 00 81       	mov    %eax,0x810054e4
810011a0:	a1 00 55 00 81       	mov    0x81005500,%eax
810011a5:	89 c2                	mov    %eax,%edx
810011a7:	a1 e8 54 00 81       	mov    0x810054e8,%eax
810011ac:	39 c2                	cmp    %eax,%edx
810011ae:	76 0d                	jbe    810011bd <malloc_extend_top+0x291>
810011b0:	a1 00 55 00 81       	mov    0x81005500,%eax
810011b5:	a3 e8 54 00 81       	mov    %eax,0x810054e8
810011ba:	eb 01                	jmp    810011bd <malloc_extend_top+0x291>
810011bc:	90                   	nop
810011bd:	c9                   	leave  
810011be:	c3                   	ret    

810011bf <_malloc_r>:
810011bf:	55                   	push   %ebp
810011c0:	89 e5                	mov    %esp,%ebp
810011c2:	53                   	push   %ebx
810011c3:	83 ec 44             	sub    $0x44,%esp
810011c6:	8b 45 0c             	mov    0xc(%ebp),%eax
810011c9:	83 c0 0b             	add    $0xb,%eax
810011cc:	83 f8 16             	cmp    $0x16,%eax
810011cf:	76 0b                	jbe    810011dc <_malloc_r+0x1d>
810011d1:	8b 45 0c             	mov    0xc(%ebp),%eax
810011d4:	83 c0 0b             	add    $0xb,%eax
810011d7:	83 e0 f8             	and    $0xfffffff8,%eax
810011da:	eb 05                	jmp    810011e1 <_malloc_r+0x22>
810011dc:	b8 10 00 00 00       	mov    $0x10,%eax
810011e1:	89 45 d0             	mov    %eax,-0x30(%ebp)
810011e4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810011e7:	85 c0                	test   %eax,%eax
810011e9:	78 08                	js     810011f3 <_malloc_r+0x34>
810011eb:	8b 45 d0             	mov    -0x30(%ebp),%eax
810011ee:	3b 45 0c             	cmp    0xc(%ebp),%eax
810011f1:	73 13                	jae    81001206 <_malloc_r+0x47>
810011f3:	8b 45 08             	mov    0x8(%ebp),%eax
810011f6:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810011fc:	b8 00 00 00 00       	mov    $0x0,%eax
81001201:	e9 d6 07 00 00       	jmp    810019dc <_malloc_r+0x81d>
81001206:	83 ec 0c             	sub    $0xc,%esp
81001209:	ff 75 08             	push   0x8(%ebp)
8100120c:	e8 d4 09 00 00       	call   81001be5 <__malloc_lock>
81001211:	83 c4 10             	add    $0x10,%esp
81001214:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
8100121b:	0f 87 b0 00 00 00    	ja     810012d1 <_malloc_r+0x112>
81001221:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001224:	c1 e8 03             	shr    $0x3,%eax
81001227:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100122a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100122d:	83 c0 01             	add    $0x1,%eax
81001230:	01 c0                	add    %eax,%eax
81001232:	c1 e0 02             	shl    $0x2,%eax
81001235:	05 20 4f 00 81       	add    $0x81004f20,%eax
8100123a:	83 e8 08             	sub    $0x8,%eax
8100123d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001240:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001243:	8b 40 0c             	mov    0xc(%eax),%eax
81001246:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001249:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100124c:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
8100124f:	75 0d                	jne    8100125e <_malloc_r+0x9f>
81001251:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81001255:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001258:	8b 40 0c             	mov    0xc(%eax),%eax
8100125b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100125e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001261:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81001264:	74 62                	je     810012c8 <_malloc_r+0x109>
81001266:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001269:	8b 40 04             	mov    0x4(%eax),%eax
8100126c:	83 e0 fc             	and    $0xfffffffc,%eax
8100126f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001272:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001275:	8b 40 0c             	mov    0xc(%eax),%eax
81001278:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100127b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100127e:	8b 40 08             	mov    0x8(%eax),%eax
81001281:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001284:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001287:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100128a:	89 50 0c             	mov    %edx,0xc(%eax)
8100128d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001290:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001293:	89 50 08             	mov    %edx,0x8(%eax)
81001296:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001299:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100129c:	01 d0                	add    %edx,%eax
8100129e:	8b 50 04             	mov    0x4(%eax),%edx
810012a1:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810012a4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810012a7:	01 c8                	add    %ecx,%eax
810012a9:	83 ca 01             	or     $0x1,%edx
810012ac:	89 50 04             	mov    %edx,0x4(%eax)
810012af:	83 ec 0c             	sub    $0xc,%esp
810012b2:	ff 75 08             	push   0x8(%ebp)
810012b5:	e8 31 09 00 00       	call   81001beb <__malloc_unlock>
810012ba:	83 c4 10             	add    $0x10,%esp
810012bd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012c0:	83 c0 08             	add    $0x8,%eax
810012c3:	e9 14 07 00 00       	jmp    810019dc <_malloc_r+0x81d>
810012c8:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
810012cc:	e9 46 01 00 00       	jmp    81001417 <_malloc_r+0x258>
810012d1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012d4:	c1 e8 09             	shr    $0x9,%eax
810012d7:	85 c0                	test   %eax,%eax
810012d9:	75 08                	jne    810012e3 <_malloc_r+0x124>
810012db:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012de:	c1 e8 03             	shr    $0x3,%eax
810012e1:	eb 77                	jmp    8100135a <_malloc_r+0x19b>
810012e3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012e6:	c1 e8 09             	shr    $0x9,%eax
810012e9:	83 f8 04             	cmp    $0x4,%eax
810012ec:	77 0b                	ja     810012f9 <_malloc_r+0x13a>
810012ee:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012f1:	c1 e8 06             	shr    $0x6,%eax
810012f4:	83 c0 38             	add    $0x38,%eax
810012f7:	eb 61                	jmp    8100135a <_malloc_r+0x19b>
810012f9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012fc:	c1 e8 09             	shr    $0x9,%eax
810012ff:	83 f8 14             	cmp    $0x14,%eax
81001302:	77 0b                	ja     8100130f <_malloc_r+0x150>
81001304:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001307:	c1 e8 09             	shr    $0x9,%eax
8100130a:	83 c0 5b             	add    $0x5b,%eax
8100130d:	eb 4b                	jmp    8100135a <_malloc_r+0x19b>
8100130f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001312:	c1 e8 09             	shr    $0x9,%eax
81001315:	83 f8 54             	cmp    $0x54,%eax
81001318:	77 0b                	ja     81001325 <_malloc_r+0x166>
8100131a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100131d:	c1 e8 0c             	shr    $0xc,%eax
81001320:	83 c0 6e             	add    $0x6e,%eax
81001323:	eb 35                	jmp    8100135a <_malloc_r+0x19b>
81001325:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001328:	c1 e8 09             	shr    $0x9,%eax
8100132b:	3d 54 01 00 00       	cmp    $0x154,%eax
81001330:	77 0b                	ja     8100133d <_malloc_r+0x17e>
81001332:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001335:	c1 e8 0f             	shr    $0xf,%eax
81001338:	83 c0 77             	add    $0x77,%eax
8100133b:	eb 1d                	jmp    8100135a <_malloc_r+0x19b>
8100133d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001340:	c1 e8 09             	shr    $0x9,%eax
81001343:	3d 54 05 00 00       	cmp    $0x554,%eax
81001348:	77 0b                	ja     81001355 <_malloc_r+0x196>
8100134a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100134d:	c1 e8 12             	shr    $0x12,%eax
81001350:	83 c0 7c             	add    $0x7c,%eax
81001353:	eb 05                	jmp    8100135a <_malloc_r+0x19b>
81001355:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100135a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100135d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001360:	83 c0 01             	add    $0x1,%eax
81001363:	01 c0                	add    %eax,%eax
81001365:	c1 e0 02             	shl    $0x2,%eax
81001368:	05 20 4f 00 81       	add    $0x81004f20,%eax
8100136d:	83 e8 08             	sub    $0x8,%eax
81001370:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001373:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001376:	8b 40 0c             	mov    0xc(%eax),%eax
81001379:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100137c:	e9 86 00 00 00       	jmp    81001407 <_malloc_r+0x248>
81001381:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001384:	8b 40 04             	mov    0x4(%eax),%eax
81001387:	83 e0 fc             	and    $0xfffffffc,%eax
8100138a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100138d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001390:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001393:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001396:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100139a:	7e 06                	jle    810013a2 <_malloc_r+0x1e3>
8100139c:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
810013a0:	eb 71                	jmp    81001413 <_malloc_r+0x254>
810013a2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810013a6:	78 56                	js     810013fe <_malloc_r+0x23f>
810013a8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013ab:	8b 40 0c             	mov    0xc(%eax),%eax
810013ae:	89 45 d8             	mov    %eax,-0x28(%ebp)
810013b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013b4:	8b 40 08             	mov    0x8(%eax),%eax
810013b7:	89 45 dc             	mov    %eax,-0x24(%ebp)
810013ba:	8b 45 dc             	mov    -0x24(%ebp),%eax
810013bd:	8b 55 d8             	mov    -0x28(%ebp),%edx
810013c0:	89 50 0c             	mov    %edx,0xc(%eax)
810013c3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810013c6:	8b 55 dc             	mov    -0x24(%ebp),%edx
810013c9:	89 50 08             	mov    %edx,0x8(%eax)
810013cc:	8b 55 f4             	mov    -0xc(%ebp),%edx
810013cf:	8b 45 cc             	mov    -0x34(%ebp),%eax
810013d2:	01 d0                	add    %edx,%eax
810013d4:	8b 50 04             	mov    0x4(%eax),%edx
810013d7:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810013da:	8b 45 cc             	mov    -0x34(%ebp),%eax
810013dd:	01 c8                	add    %ecx,%eax
810013df:	83 ca 01             	or     $0x1,%edx
810013e2:	89 50 04             	mov    %edx,0x4(%eax)
810013e5:	83 ec 0c             	sub    $0xc,%esp
810013e8:	ff 75 08             	push   0x8(%ebp)
810013eb:	e8 fb 07 00 00       	call   81001beb <__malloc_unlock>
810013f0:	83 c4 10             	add    $0x10,%esp
810013f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013f6:	83 c0 08             	add    $0x8,%eax
810013f9:	e9 de 05 00 00       	jmp    810019dc <_malloc_r+0x81d>
810013fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001401:	8b 40 0c             	mov    0xc(%eax),%eax
81001404:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001407:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100140a:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100140d:	0f 85 6e ff ff ff    	jne    81001381 <_malloc_r+0x1c2>
81001413:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001417:	b8 28 4f 00 81       	mov    $0x81004f28,%eax
8100141c:	8b 40 08             	mov    0x8(%eax),%eax
8100141f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001422:	b8 28 4f 00 81       	mov    $0x81004f28,%eax
81001427:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100142a:	0f 84 9c 02 00 00    	je     810016cc <_malloc_r+0x50d>
81001430:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001433:	8b 40 04             	mov    0x4(%eax),%eax
81001436:	83 e0 fc             	and    $0xfffffffc,%eax
81001439:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100143c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100143f:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001442:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001445:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001449:	7e 7a                	jle    810014c5 <_malloc_r+0x306>
8100144b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100144e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001451:	01 d0                	add    %edx,%eax
81001453:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001456:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001459:	83 c8 01             	or     $0x1,%eax
8100145c:	89 c2                	mov    %eax,%edx
8100145e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001461:	89 50 04             	mov    %edx,0x4(%eax)
81001464:	b8 28 4f 00 81       	mov    $0x81004f28,%eax
81001469:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100146c:	89 50 0c             	mov    %edx,0xc(%eax)
8100146f:	ba 28 4f 00 81       	mov    $0x81004f28,%edx
81001474:	8b 40 0c             	mov    0xc(%eax),%eax
81001477:	89 42 08             	mov    %eax,0x8(%edx)
8100147a:	ba 28 4f 00 81       	mov    $0x81004f28,%edx
8100147f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001482:	89 50 0c             	mov    %edx,0xc(%eax)
81001485:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001488:	8b 50 0c             	mov    0xc(%eax),%edx
8100148b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100148e:	89 50 08             	mov    %edx,0x8(%eax)
81001491:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001494:	83 c8 01             	or     $0x1,%eax
81001497:	89 c2                	mov    %eax,%edx
81001499:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100149c:	89 50 04             	mov    %edx,0x4(%eax)
8100149f:	8b 55 e8             	mov    -0x18(%ebp),%edx
810014a2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810014a5:	01 c2                	add    %eax,%edx
810014a7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810014aa:	89 02                	mov    %eax,(%edx)
810014ac:	83 ec 0c             	sub    $0xc,%esp
810014af:	ff 75 08             	push   0x8(%ebp)
810014b2:	e8 34 07 00 00       	call   81001beb <__malloc_unlock>
810014b7:	83 c4 10             	add    $0x10,%esp
810014ba:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014bd:	83 c0 08             	add    $0x8,%eax
810014c0:	e9 17 05 00 00       	jmp    810019dc <_malloc_r+0x81d>
810014c5:	b8 28 4f 00 81       	mov    $0x81004f28,%eax
810014ca:	ba 28 4f 00 81       	mov    $0x81004f28,%edx
810014cf:	89 50 0c             	mov    %edx,0xc(%eax)
810014d2:	ba 28 4f 00 81       	mov    $0x81004f28,%edx
810014d7:	8b 40 0c             	mov    0xc(%eax),%eax
810014da:	89 42 08             	mov    %eax,0x8(%edx)
810014dd:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810014e1:	78 32                	js     81001515 <_malloc_r+0x356>
810014e3:	8b 55 f4             	mov    -0xc(%ebp),%edx
810014e6:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014e9:	01 d0                	add    %edx,%eax
810014eb:	8b 50 04             	mov    0x4(%eax),%edx
810014ee:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810014f1:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014f4:	01 c8                	add    %ecx,%eax
810014f6:	83 ca 01             	or     $0x1,%edx
810014f9:	89 50 04             	mov    %edx,0x4(%eax)
810014fc:	83 ec 0c             	sub    $0xc,%esp
810014ff:	ff 75 08             	push   0x8(%ebp)
81001502:	e8 e4 06 00 00       	call   81001beb <__malloc_unlock>
81001507:	83 c4 10             	add    $0x10,%esp
8100150a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100150d:	83 c0 08             	add    $0x8,%eax
81001510:	e9 c7 04 00 00       	jmp    810019dc <_malloc_r+0x81d>
81001515:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
8100151c:	77 7f                	ja     8100159d <_malloc_r+0x3de>
8100151e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001521:	c1 e8 03             	shr    $0x3,%eax
81001524:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001527:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
8100152c:	8b 58 04             	mov    0x4(%eax),%ebx
8100152f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001532:	8d 50 03             	lea    0x3(%eax),%edx
81001535:	85 c0                	test   %eax,%eax
81001537:	0f 48 c2             	cmovs  %edx,%eax
8100153a:	c1 f8 02             	sar    $0x2,%eax
8100153d:	ba 01 00 00 00       	mov    $0x1,%edx
81001542:	89 c1                	mov    %eax,%ecx
81001544:	d3 e2                	shl    %cl,%edx
81001546:	89 d0                	mov    %edx,%eax
81001548:	ba 20 4f 00 81       	mov    $0x81004f20,%edx
8100154d:	09 d8                	or     %ebx,%eax
8100154f:	89 42 04             	mov    %eax,0x4(%edx)
81001552:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001555:	83 c0 01             	add    $0x1,%eax
81001558:	01 c0                	add    %eax,%eax
8100155a:	c1 e0 02             	shl    $0x2,%eax
8100155d:	05 20 4f 00 81       	add    $0x81004f20,%eax
81001562:	83 e8 08             	sub    $0x8,%eax
81001565:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001568:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100156b:	8b 40 08             	mov    0x8(%eax),%eax
8100156e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001571:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001574:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001577:	89 50 0c             	mov    %edx,0xc(%eax)
8100157a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100157d:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001580:	89 50 08             	mov    %edx,0x8(%eax)
81001583:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001586:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001589:	89 50 08             	mov    %edx,0x8(%eax)
8100158c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100158f:	8b 50 08             	mov    0x8(%eax),%edx
81001592:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001595:	89 50 0c             	mov    %edx,0xc(%eax)
81001598:	e9 2f 01 00 00       	jmp    810016cc <_malloc_r+0x50d>
8100159d:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015a0:	c1 e8 09             	shr    $0x9,%eax
810015a3:	85 c0                	test   %eax,%eax
810015a5:	75 08                	jne    810015af <_malloc_r+0x3f0>
810015a7:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015aa:	c1 e8 03             	shr    $0x3,%eax
810015ad:	eb 77                	jmp    81001626 <_malloc_r+0x467>
810015af:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015b2:	c1 e8 09             	shr    $0x9,%eax
810015b5:	83 f8 04             	cmp    $0x4,%eax
810015b8:	77 0b                	ja     810015c5 <_malloc_r+0x406>
810015ba:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015bd:	c1 e8 06             	shr    $0x6,%eax
810015c0:	83 c0 38             	add    $0x38,%eax
810015c3:	eb 61                	jmp    81001626 <_malloc_r+0x467>
810015c5:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015c8:	c1 e8 09             	shr    $0x9,%eax
810015cb:	83 f8 14             	cmp    $0x14,%eax
810015ce:	77 0b                	ja     810015db <_malloc_r+0x41c>
810015d0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015d3:	c1 e8 09             	shr    $0x9,%eax
810015d6:	83 c0 5b             	add    $0x5b,%eax
810015d9:	eb 4b                	jmp    81001626 <_malloc_r+0x467>
810015db:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015de:	c1 e8 09             	shr    $0x9,%eax
810015e1:	83 f8 54             	cmp    $0x54,%eax
810015e4:	77 0b                	ja     810015f1 <_malloc_r+0x432>
810015e6:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015e9:	c1 e8 0c             	shr    $0xc,%eax
810015ec:	83 c0 6e             	add    $0x6e,%eax
810015ef:	eb 35                	jmp    81001626 <_malloc_r+0x467>
810015f1:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015f4:	c1 e8 09             	shr    $0x9,%eax
810015f7:	3d 54 01 00 00       	cmp    $0x154,%eax
810015fc:	77 0b                	ja     81001609 <_malloc_r+0x44a>
810015fe:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001601:	c1 e8 0f             	shr    $0xf,%eax
81001604:	83 c0 77             	add    $0x77,%eax
81001607:	eb 1d                	jmp    81001626 <_malloc_r+0x467>
81001609:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100160c:	c1 e8 09             	shr    $0x9,%eax
8100160f:	3d 54 05 00 00       	cmp    $0x554,%eax
81001614:	77 0b                	ja     81001621 <_malloc_r+0x462>
81001616:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001619:	c1 e8 12             	shr    $0x12,%eax
8100161c:	83 c0 7c             	add    $0x7c,%eax
8100161f:	eb 05                	jmp    81001626 <_malloc_r+0x467>
81001621:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001626:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001629:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100162c:	83 c0 01             	add    $0x1,%eax
8100162f:	01 c0                	add    %eax,%eax
81001631:	c1 e0 02             	shl    $0x2,%eax
81001634:	05 20 4f 00 81       	add    $0x81004f20,%eax
81001639:	83 e8 08             	sub    $0x8,%eax
8100163c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100163f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001642:	8b 40 08             	mov    0x8(%eax),%eax
81001645:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001648:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100164b:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100164e:	75 36                	jne    81001686 <_malloc_r+0x4c7>
81001650:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
81001655:	8b 58 04             	mov    0x4(%eax),%ebx
81001658:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100165b:	8d 50 03             	lea    0x3(%eax),%edx
8100165e:	85 c0                	test   %eax,%eax
81001660:	0f 48 c2             	cmovs  %edx,%eax
81001663:	c1 f8 02             	sar    $0x2,%eax
81001666:	ba 01 00 00 00       	mov    $0x1,%edx
8100166b:	89 c1                	mov    %eax,%ecx
8100166d:	d3 e2                	shl    %cl,%edx
8100166f:	89 d0                	mov    %edx,%eax
81001671:	ba 20 4f 00 81       	mov    $0x81004f20,%edx
81001676:	09 d8                	or     %ebx,%eax
81001678:	89 42 04             	mov    %eax,0x4(%edx)
8100167b:	eb 28                	jmp    810016a5 <_malloc_r+0x4e6>
8100167d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001680:	8b 40 08             	mov    0x8(%eax),%eax
81001683:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001686:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001689:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100168c:	74 0e                	je     8100169c <_malloc_r+0x4dd>
8100168e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001691:	8b 40 04             	mov    0x4(%eax),%eax
81001694:	83 e0 fc             	and    $0xfffffffc,%eax
81001697:	39 45 cc             	cmp    %eax,-0x34(%ebp)
8100169a:	72 e1                	jb     8100167d <_malloc_r+0x4be>
8100169c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100169f:	8b 40 0c             	mov    0xc(%eax),%eax
810016a2:	89 45 d8             	mov    %eax,-0x28(%ebp)
810016a5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016a8:	8b 55 d8             	mov    -0x28(%ebp),%edx
810016ab:	89 50 0c             	mov    %edx,0xc(%eax)
810016ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016b1:	8b 55 dc             	mov    -0x24(%ebp),%edx
810016b4:	89 50 08             	mov    %edx,0x8(%eax)
810016b7:	8b 45 d8             	mov    -0x28(%ebp),%eax
810016ba:	8b 55 f4             	mov    -0xc(%ebp),%edx
810016bd:	89 50 08             	mov    %edx,0x8(%eax)
810016c0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810016c3:	8b 50 08             	mov    0x8(%eax),%edx
810016c6:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016c9:	89 50 0c             	mov    %edx,0xc(%eax)
810016cc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810016cf:	8d 50 03             	lea    0x3(%eax),%edx
810016d2:	85 c0                	test   %eax,%eax
810016d4:	0f 48 c2             	cmovs  %edx,%eax
810016d7:	c1 f8 02             	sar    $0x2,%eax
810016da:	ba 01 00 00 00       	mov    $0x1,%edx
810016df:	89 c1                	mov    %eax,%ecx
810016e1:	d3 e2                	shl    %cl,%edx
810016e3:	89 d0                	mov    %edx,%eax
810016e5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810016e8:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
810016ed:	8b 40 04             	mov    0x4(%eax),%eax
810016f0:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810016f3:	0f 87 13 02 00 00    	ja     8100190c <_malloc_r+0x74d>
810016f9:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
810016fe:	8b 40 04             	mov    0x4(%eax),%eax
81001701:	23 45 e4             	and    -0x1c(%ebp),%eax
81001704:	85 c0                	test   %eax,%eax
81001706:	75 27                	jne    8100172f <_malloc_r+0x570>
81001708:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100170b:	83 e0 fc             	and    $0xfffffffc,%eax
8100170e:	83 c0 04             	add    $0x4,%eax
81001711:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001714:	d1 65 e4             	shll   -0x1c(%ebp)
81001717:	eb 07                	jmp    81001720 <_malloc_r+0x561>
81001719:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
8100171d:	d1 65 e4             	shll   -0x1c(%ebp)
81001720:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
81001725:	8b 40 04             	mov    0x4(%eax),%eax
81001728:	23 45 e4             	and    -0x1c(%ebp),%eax
8100172b:	85 c0                	test   %eax,%eax
8100172d:	74 ea                	je     81001719 <_malloc_r+0x55a>
8100172f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001732:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001735:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001738:	83 c0 01             	add    $0x1,%eax
8100173b:	01 c0                	add    %eax,%eax
8100173d:	c1 e0 02             	shl    $0x2,%eax
81001740:	05 20 4f 00 81       	add    $0x81004f20,%eax
81001745:	83 e8 08             	sub    $0x8,%eax
81001748:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100174b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100174e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001751:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001754:	8b 40 0c             	mov    0xc(%eax),%eax
81001757:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100175a:	e9 22 01 00 00       	jmp    81001881 <_malloc_r+0x6c2>
8100175f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001762:	8b 40 04             	mov    0x4(%eax),%eax
81001765:	83 e0 fc             	and    $0xfffffffc,%eax
81001768:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100176b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100176e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001771:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001774:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001778:	0f 8e 9e 00 00 00    	jle    8100181c <_malloc_r+0x65d>
8100177e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001781:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001784:	01 d0                	add    %edx,%eax
81001786:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001789:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100178c:	83 c8 01             	or     $0x1,%eax
8100178f:	89 c2                	mov    %eax,%edx
81001791:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001794:	89 50 04             	mov    %edx,0x4(%eax)
81001797:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100179a:	8b 40 0c             	mov    0xc(%eax),%eax
8100179d:	89 45 d8             	mov    %eax,-0x28(%ebp)
810017a0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017a3:	8b 40 08             	mov    0x8(%eax),%eax
810017a6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810017a9:	8b 45 dc             	mov    -0x24(%ebp),%eax
810017ac:	8b 55 d8             	mov    -0x28(%ebp),%edx
810017af:	89 50 0c             	mov    %edx,0xc(%eax)
810017b2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810017b5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810017b8:	89 50 08             	mov    %edx,0x8(%eax)
810017bb:	b8 28 4f 00 81       	mov    $0x81004f28,%eax
810017c0:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810017c3:	89 50 0c             	mov    %edx,0xc(%eax)
810017c6:	ba 28 4f 00 81       	mov    $0x81004f28,%edx
810017cb:	8b 40 0c             	mov    0xc(%eax),%eax
810017ce:	89 42 08             	mov    %eax,0x8(%edx)
810017d1:	ba 28 4f 00 81       	mov    $0x81004f28,%edx
810017d6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017d9:	89 50 0c             	mov    %edx,0xc(%eax)
810017dc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017df:	8b 50 0c             	mov    0xc(%eax),%edx
810017e2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017e5:	89 50 08             	mov    %edx,0x8(%eax)
810017e8:	8b 45 e8             	mov    -0x18(%ebp),%eax
810017eb:	83 c8 01             	or     $0x1,%eax
810017ee:	89 c2                	mov    %eax,%edx
810017f0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017f3:	89 50 04             	mov    %edx,0x4(%eax)
810017f6:	8b 55 e8             	mov    -0x18(%ebp),%edx
810017f9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017fc:	01 c2                	add    %eax,%edx
810017fe:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001801:	89 02                	mov    %eax,(%edx)
81001803:	83 ec 0c             	sub    $0xc,%esp
81001806:	ff 75 08             	push   0x8(%ebp)
81001809:	e8 dd 03 00 00       	call   81001beb <__malloc_unlock>
8100180e:	83 c4 10             	add    $0x10,%esp
81001811:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001814:	83 c0 08             	add    $0x8,%eax
81001817:	e9 c0 01 00 00       	jmp    810019dc <_malloc_r+0x81d>
8100181c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001820:	78 56                	js     81001878 <_malloc_r+0x6b9>
81001822:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001825:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001828:	01 d0                	add    %edx,%eax
8100182a:	8b 50 04             	mov    0x4(%eax),%edx
8100182d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001830:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001833:	01 c8                	add    %ecx,%eax
81001835:	83 ca 01             	or     $0x1,%edx
81001838:	89 50 04             	mov    %edx,0x4(%eax)
8100183b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100183e:	8b 40 0c             	mov    0xc(%eax),%eax
81001841:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001844:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001847:	8b 40 08             	mov    0x8(%eax),%eax
8100184a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100184d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001850:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001853:	89 50 0c             	mov    %edx,0xc(%eax)
81001856:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001859:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100185c:	89 50 08             	mov    %edx,0x8(%eax)
8100185f:	83 ec 0c             	sub    $0xc,%esp
81001862:	ff 75 08             	push   0x8(%ebp)
81001865:	e8 81 03 00 00       	call   81001beb <__malloc_unlock>
8100186a:	83 c4 10             	add    $0x10,%esp
8100186d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001870:	83 c0 08             	add    $0x8,%eax
81001873:	e9 64 01 00 00       	jmp    810019dc <_malloc_r+0x81d>
81001878:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100187b:	8b 40 0c             	mov    0xc(%eax),%eax
8100187e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001881:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001884:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001887:	0f 85 d2 fe ff ff    	jne    8100175f <_malloc_r+0x5a0>
8100188d:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81001891:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001895:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001898:	83 e0 03             	and    $0x3,%eax
8100189b:	85 c0                	test   %eax,%eax
8100189d:	0f 85 ae fe ff ff    	jne    81001751 <_malloc_r+0x592>
810018a3:	8b 45 e0             	mov    -0x20(%ebp),%eax
810018a6:	83 e0 03             	and    $0x3,%eax
810018a9:	85 c0                	test   %eax,%eax
810018ab:	75 19                	jne    810018c6 <_malloc_r+0x707>
810018ad:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
810018b2:	8b 48 04             	mov    0x4(%eax),%ecx
810018b5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810018b8:	f7 d0                	not    %eax
810018ba:	ba 20 4f 00 81       	mov    $0x81004f20,%edx
810018bf:	21 c8                	and    %ecx,%eax
810018c1:	89 42 04             	mov    %eax,0x4(%edx)
810018c4:	eb 13                	jmp    810018d9 <_malloc_r+0x71a>
810018c6:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
810018ca:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
810018ce:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810018d1:	8b 40 08             	mov    0x8(%eax),%eax
810018d4:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
810018d7:	74 ca                	je     810018a3 <_malloc_r+0x6e4>
810018d9:	d1 65 e4             	shll   -0x1c(%ebp)
810018dc:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
810018e1:	8b 40 04             	mov    0x4(%eax),%eax
810018e4:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810018e7:	77 23                	ja     8100190c <_malloc_r+0x74d>
810018e9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810018ed:	74 1d                	je     8100190c <_malloc_r+0x74d>
810018ef:	eb 07                	jmp    810018f8 <_malloc_r+0x739>
810018f1:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
810018f5:	d1 65 e4             	shll   -0x1c(%ebp)
810018f8:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
810018fd:	8b 40 04             	mov    0x4(%eax),%eax
81001900:	23 45 e4             	and    -0x1c(%ebp),%eax
81001903:	85 c0                	test   %eax,%eax
81001905:	74 ea                	je     810018f1 <_malloc_r+0x732>
81001907:	e9 23 fe ff ff       	jmp    8100172f <_malloc_r+0x570>
8100190c:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
81001911:	8b 40 08             	mov    0x8(%eax),%eax
81001914:	8b 40 04             	mov    0x4(%eax),%eax
81001917:	83 e0 fc             	and    $0xfffffffc,%eax
8100191a:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100191d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001920:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
81001925:	8b 40 08             	mov    0x8(%eax),%eax
81001928:	8b 40 04             	mov    0x4(%eax),%eax
8100192b:	83 e0 fc             	and    $0xfffffffc,%eax
8100192e:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81001931:	77 06                	ja     81001939 <_malloc_r+0x77a>
81001933:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001937:	7f 53                	jg     8100198c <_malloc_r+0x7cd>
81001939:	83 ec 08             	sub    $0x8,%esp
8100193c:	ff 75 d0             	push   -0x30(%ebp)
8100193f:	ff 75 08             	push   0x8(%ebp)
81001942:	e8 e5 f5 ff ff       	call   81000f2c <malloc_extend_top>
81001947:	83 c4 10             	add    $0x10,%esp
8100194a:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
8100194f:	8b 40 08             	mov    0x8(%eax),%eax
81001952:	8b 40 04             	mov    0x4(%eax),%eax
81001955:	83 e0 fc             	and    $0xfffffffc,%eax
81001958:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100195b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100195e:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
81001963:	8b 40 08             	mov    0x8(%eax),%eax
81001966:	8b 40 04             	mov    0x4(%eax),%eax
81001969:	83 e0 fc             	and    $0xfffffffc,%eax
8100196c:	39 45 d0             	cmp    %eax,-0x30(%ebp)
8100196f:	77 06                	ja     81001977 <_malloc_r+0x7b8>
81001971:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001975:	7f 15                	jg     8100198c <_malloc_r+0x7cd>
81001977:	83 ec 0c             	sub    $0xc,%esp
8100197a:	ff 75 08             	push   0x8(%ebp)
8100197d:	e8 69 02 00 00       	call   81001beb <__malloc_unlock>
81001982:	83 c4 10             	add    $0x10,%esp
81001985:	b8 00 00 00 00       	mov    $0x0,%eax
8100198a:	eb 50                	jmp    810019dc <_malloc_r+0x81d>
8100198c:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
81001991:	8b 40 08             	mov    0x8(%eax),%eax
81001994:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001997:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100199a:	83 c8 01             	or     $0x1,%eax
8100199d:	89 c2                	mov    %eax,%edx
8100199f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019a2:	89 50 04             	mov    %edx,0x4(%eax)
810019a5:	ba 20 4f 00 81       	mov    $0x81004f20,%edx
810019aa:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810019ad:	8b 45 d0             	mov    -0x30(%ebp),%eax
810019b0:	01 c8                	add    %ecx,%eax
810019b2:	89 42 08             	mov    %eax,0x8(%edx)
810019b5:	8b 45 e8             	mov    -0x18(%ebp),%eax
810019b8:	83 c8 01             	or     $0x1,%eax
810019bb:	89 c2                	mov    %eax,%edx
810019bd:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
810019c2:	8b 40 08             	mov    0x8(%eax),%eax
810019c5:	89 50 04             	mov    %edx,0x4(%eax)
810019c8:	83 ec 0c             	sub    $0xc,%esp
810019cb:	ff 75 08             	push   0x8(%ebp)
810019ce:	e8 18 02 00 00       	call   81001beb <__malloc_unlock>
810019d3:	83 c4 10             	add    $0x10,%esp
810019d6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019d9:	83 c0 08             	add    $0x8,%eax
810019dc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810019df:	c9                   	leave  
810019e0:	c3                   	ret    
810019e1:	66 90                	xchg   %ax,%ax
810019e3:	66 90                	xchg   %ax,%ax
810019e5:	66 90                	xchg   %ax,%ax
810019e7:	66 90                	xchg   %ax,%ax
810019e9:	66 90                	xchg   %ax,%ax
810019eb:	66 90                	xchg   %ax,%ax
810019ed:	66 90                	xchg   %ax,%ax
810019ef:	90                   	nop

810019f0 <memchr>:
810019f0:	55                   	push   %ebp
810019f1:	89 e5                	mov    %esp,%ebp
810019f3:	57                   	push   %edi
810019f4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
810019f8:	8b 4d 10             	mov    0x10(%ebp),%ecx
810019fb:	8b 7d 08             	mov    0x8(%ebp),%edi
810019fe:	31 d2                	xor    %edx,%edx
81001a00:	85 c9                	test   %ecx,%ecx
81001a02:	74 79                	je     81001a7d <L20>
81001a04:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001a0a:	74 28                	je     81001a34 <L5>
81001a0c:	3a 07                	cmp    (%edi),%al
81001a0e:	74 6a                	je     81001a7a <L15>
81001a10:	47                   	inc    %edi
81001a11:	49                   	dec    %ecx
81001a12:	74 69                	je     81001a7d <L20>
81001a14:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001a1a:	74 18                	je     81001a34 <L5>
81001a1c:	3a 07                	cmp    (%edi),%al
81001a1e:	74 5a                	je     81001a7a <L15>
81001a20:	47                   	inc    %edi
81001a21:	49                   	dec    %ecx
81001a22:	74 59                	je     81001a7d <L20>
81001a24:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001a2a:	74 08                	je     81001a34 <L5>
81001a2c:	3a 07                	cmp    (%edi),%al
81001a2e:	74 4a                	je     81001a7a <L15>
81001a30:	47                   	inc    %edi
81001a31:	49                   	dec    %ecx
81001a32:	74 49                	je     81001a7d <L20>

81001a34 <L5>:
81001a34:	88 c4                	mov    %al,%ah
81001a36:	89 c2                	mov    %eax,%edx
81001a38:	c1 e2 10             	shl    $0x10,%edx
81001a3b:	09 d0                	or     %edx,%eax
81001a3d:	53                   	push   %ebx
81001a3e:	66 90                	xchg   %ax,%ax

81001a40 <L8>:
81001a40:	83 e9 04             	sub    $0x4,%ecx
81001a43:	72 1c                	jb     81001a61 <L9>
81001a45:	8b 17                	mov    (%edi),%edx
81001a47:	83 c7 04             	add    $0x4,%edi
81001a4a:	31 c2                	xor    %eax,%edx
81001a4c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81001a52:	f7 d2                	not    %edx
81001a54:	21 d3                	and    %edx,%ebx
81001a56:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
81001a5c:	74 e2                	je     81001a40 <L8>
81001a5e:	83 ef 04             	sub    $0x4,%edi

81001a61 <L9>:
81001a61:	5b                   	pop    %ebx
81001a62:	31 d2                	xor    %edx,%edx
81001a64:	83 c1 04             	add    $0x4,%ecx
81001a67:	74 14                	je     81001a7d <L20>
81001a69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81001a70 <L10>:
81001a70:	3a 07                	cmp    (%edi),%al
81001a72:	74 06                	je     81001a7a <L15>
81001a74:	47                   	inc    %edi
81001a75:	49                   	dec    %ecx
81001a76:	75 f8                	jne    81001a70 <L10>
81001a78:	31 ff                	xor    %edi,%edi

81001a7a <L15>:
81001a7a:	4a                   	dec    %edx
81001a7b:	21 fa                	and    %edi,%edx

81001a7d <L20>:
81001a7d:	89 d0                	mov    %edx,%eax
81001a7f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001a82:	5f                   	pop    %edi
81001a83:	c9                   	leave  
81001a84:	c3                   	ret    
81001a85:	66 90                	xchg   %ax,%ax
81001a87:	90                   	nop

81001a88 <memcpy>:
81001a88:	55                   	push   %ebp
81001a89:	89 e5                	mov    %esp,%ebp
81001a8b:	56                   	push   %esi
81001a8c:	57                   	push   %edi
81001a8d:	53                   	push   %ebx
81001a8e:	8b 7d 08             	mov    0x8(%ebp),%edi
81001a91:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001a94:	8b 75 0c             	mov    0xc(%ebp),%esi
81001a97:	fc                   	cld    
81001a98:	83 f9 08             	cmp    $0x8,%ecx
81001a9b:	76 26                	jbe    81001ac3 <memcpy+0x3b>
81001a9d:	89 fa                	mov    %edi,%edx
81001a9f:	89 cb                	mov    %ecx,%ebx
81001aa1:	83 e2 03             	and    $0x3,%edx
81001aa4:	74 10                	je     81001ab6 <memcpy+0x2e>
81001aa6:	b9 04 00 00 00       	mov    $0x4,%ecx
81001aab:	29 d1                	sub    %edx,%ecx
81001aad:	83 e1 03             	and    $0x3,%ecx
81001ab0:	29 cb                	sub    %ecx,%ebx
81001ab2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001ab4:	89 d9                	mov    %ebx,%ecx
81001ab6:	c1 e9 02             	shr    $0x2,%ecx
81001ab9:	8d 76 00             	lea    0x0(%esi),%esi
81001abc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001abe:	89 d9                	mov    %ebx,%ecx
81001ac0:	83 e1 03             	and    $0x3,%ecx
81001ac3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001ac5:	8b 45 08             	mov    0x8(%ebp),%eax
81001ac8:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001acb:	5b                   	pop    %ebx
81001acc:	5f                   	pop    %edi
81001acd:	5e                   	pop    %esi
81001ace:	c9                   	leave  
81001acf:	c3                   	ret    

81001ad0 <memmove>:
81001ad0:	55                   	push   %ebp
81001ad1:	89 e5                	mov    %esp,%ebp
81001ad3:	56                   	push   %esi
81001ad4:	57                   	push   %edi
81001ad5:	53                   	push   %ebx
81001ad6:	8b 7d 08             	mov    0x8(%ebp),%edi
81001ad9:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001adc:	8b 75 0c             	mov    0xc(%ebp),%esi
81001adf:	fc                   	cld    
81001ae0:	39 fe                	cmp    %edi,%esi
81001ae2:	73 43                	jae    81001b27 <memmove+0x57>
81001ae4:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81001ae8:	39 df                	cmp    %ebx,%edi
81001aea:	77 3b                	ja     81001b27 <memmove+0x57>
81001aec:	01 ce                	add    %ecx,%esi
81001aee:	01 cf                	add    %ecx,%edi
81001af0:	fd                   	std    
81001af1:	83 f9 08             	cmp    $0x8,%ecx
81001af4:	76 2b                	jbe    81001b21 <memmove+0x51>
81001af6:	89 fa                	mov    %edi,%edx
81001af8:	89 cb                	mov    %ecx,%ebx
81001afa:	83 e2 03             	and    $0x3,%edx
81001afd:	74 0c                	je     81001b0b <memmove+0x3b>
81001aff:	89 d1                	mov    %edx,%ecx
81001b01:	4e                   	dec    %esi
81001b02:	4f                   	dec    %edi
81001b03:	29 cb                	sub    %ecx,%ebx
81001b05:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b07:	89 d9                	mov    %ebx,%ecx
81001b09:	46                   	inc    %esi
81001b0a:	47                   	inc    %edi
81001b0b:	c1 e9 02             	shr    $0x2,%ecx
81001b0e:	83 ee 04             	sub    $0x4,%esi
81001b11:	83 ef 04             	sub    $0x4,%edi
81001b14:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001b16:	83 c6 04             	add    $0x4,%esi
81001b19:	83 c7 04             	add    $0x4,%edi
81001b1c:	89 d9                	mov    %ebx,%ecx
81001b1e:	83 e1 03             	and    $0x3,%ecx
81001b21:	4e                   	dec    %esi
81001b22:	4f                   	dec    %edi
81001b23:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b25:	eb 2a                	jmp    81001b51 <memmove+0x81>
81001b27:	83 f9 08             	cmp    $0x8,%ecx
81001b2a:	76 23                	jbe    81001b4f <memmove+0x7f>
81001b2c:	89 fa                	mov    %edi,%edx
81001b2e:	89 cb                	mov    %ecx,%ebx
81001b30:	83 e2 03             	and    $0x3,%edx
81001b33:	74 10                	je     81001b45 <memmove+0x75>
81001b35:	b9 04 00 00 00       	mov    $0x4,%ecx
81001b3a:	29 d1                	sub    %edx,%ecx
81001b3c:	83 e1 03             	and    $0x3,%ecx
81001b3f:	29 cb                	sub    %ecx,%ebx
81001b41:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b43:	89 d9                	mov    %ebx,%ecx
81001b45:	c1 e9 02             	shr    $0x2,%ecx
81001b48:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001b4a:	89 d9                	mov    %ebx,%ecx
81001b4c:	83 e1 03             	and    $0x3,%ecx
81001b4f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b51:	8b 45 08             	mov    0x8(%ebp),%eax
81001b54:	fc                   	cld    
81001b55:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001b58:	5b                   	pop    %ebx
81001b59:	5f                   	pop    %edi
81001b5a:	5e                   	pop    %esi
81001b5b:	c9                   	leave  
81001b5c:	c3                   	ret    

81001b5d <memset>:
81001b5d:	55                   	push   %ebp
81001b5e:	89 e5                	mov    %esp,%ebp
81001b60:	57                   	push   %edi
81001b61:	8b 7d 08             	mov    0x8(%ebp),%edi
81001b64:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001b68:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001b6b:	fc                   	cld    
81001b6c:	83 f9 10             	cmp    $0x10,%ecx
81001b6f:	76 69                	jbe    81001bda <memset+0x7d>
81001b71:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b77:	74 4c                	je     81001bc5 <memset+0x68>
81001b79:	88 07                	mov    %al,(%edi)
81001b7b:	47                   	inc    %edi
81001b7c:	49                   	dec    %ecx
81001b7d:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b83:	74 40                	je     81001bc5 <memset+0x68>
81001b85:	88 07                	mov    %al,(%edi)
81001b87:	47                   	inc    %edi
81001b88:	49                   	dec    %ecx
81001b89:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b8f:	74 34                	je     81001bc5 <memset+0x68>
81001b91:	88 07                	mov    %al,(%edi)
81001b93:	47                   	inc    %edi
81001b94:	49                   	dec    %ecx
81001b95:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b9b:	74 28                	je     81001bc5 <memset+0x68>
81001b9d:	88 07                	mov    %al,(%edi)
81001b9f:	47                   	inc    %edi
81001ba0:	49                   	dec    %ecx
81001ba1:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001ba7:	74 1c                	je     81001bc5 <memset+0x68>
81001ba9:	88 07                	mov    %al,(%edi)
81001bab:	47                   	inc    %edi
81001bac:	49                   	dec    %ecx
81001bad:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001bb3:	74 10                	je     81001bc5 <memset+0x68>
81001bb5:	88 07                	mov    %al,(%edi)
81001bb7:	47                   	inc    %edi
81001bb8:	49                   	dec    %ecx
81001bb9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001bbf:	74 04                	je     81001bc5 <memset+0x68>
81001bc1:	88 07                	mov    %al,(%edi)
81001bc3:	47                   	inc    %edi
81001bc4:	49                   	dec    %ecx
81001bc5:	88 c4                	mov    %al,%ah
81001bc7:	89 c2                	mov    %eax,%edx
81001bc9:	c1 e2 10             	shl    $0x10,%edx
81001bcc:	09 d0                	or     %edx,%eax
81001bce:	89 ca                	mov    %ecx,%edx
81001bd0:	c1 e9 02             	shr    $0x2,%ecx
81001bd3:	83 e2 03             	and    $0x3,%edx
81001bd6:	f3 ab                	rep stos %eax,%es:(%edi)
81001bd8:	89 d1                	mov    %edx,%ecx
81001bda:	f3 aa                	rep stos %al,%es:(%edi)
81001bdc:	8b 45 08             	mov    0x8(%ebp),%eax
81001bdf:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001be2:	5f                   	pop    %edi
81001be3:	c9                   	leave  
81001be4:	c3                   	ret    

81001be5 <__malloc_lock>:
81001be5:	55                   	push   %ebp
81001be6:	89 e5                	mov    %esp,%ebp
81001be8:	90                   	nop
81001be9:	5d                   	pop    %ebp
81001bea:	c3                   	ret    

81001beb <__malloc_unlock>:
81001beb:	55                   	push   %ebp
81001bec:	89 e5                	mov    %esp,%ebp
81001bee:	90                   	nop
81001bef:	5d                   	pop    %ebp
81001bf0:	c3                   	ret    

81001bf1 <__sprint_r>:
81001bf1:	55                   	push   %ebp
81001bf2:	89 e5                	mov    %esp,%ebp
81001bf4:	56                   	push   %esi
81001bf5:	53                   	push   %ebx
81001bf6:	83 ec 10             	sub    $0x10,%esp
81001bf9:	8b 5d 10             	mov    0x10(%ebp),%ebx
81001bfc:	be 00 00 00 00       	mov    $0x0,%esi
81001c01:	8b 43 08             	mov    0x8(%ebx),%eax
81001c04:	85 c0                	test   %eax,%eax
81001c06:	75 11                	jne    81001c19 <__sprint_r+0x28>
81001c08:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81001c0f:	b8 00 00 00 00       	mov    $0x0,%eax
81001c14:	e9 ad 00 00 00       	jmp    81001cc6 <__sprint_r+0xd5>
81001c19:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c1c:	8b 40 64             	mov    0x64(%eax),%eax
81001c1f:	25 00 20 00 00       	and    $0x2000,%eax
81001c24:	85 c0                	test   %eax,%eax
81001c26:	74 7a                	je     81001ca2 <__sprint_r+0xb1>
81001c28:	8b 03                	mov    (%ebx),%eax
81001c2a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001c2d:	eb 6a                	jmp    81001c99 <__sprint_r+0xa8>
81001c2f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001c32:	8b 00                	mov    (%eax),%eax
81001c34:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001c37:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001c3a:	8b 40 04             	mov    0x4(%eax),%eax
81001c3d:	c1 e8 02             	shr    $0x2,%eax
81001c40:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001c43:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001c4a:	eb 33                	jmp    81001c7f <__sprint_r+0x8e>
81001c4c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001c4f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001c56:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001c59:	01 d0                	add    %edx,%eax
81001c5b:	8b 00                	mov    (%eax),%eax
81001c5d:	83 ec 04             	sub    $0x4,%esp
81001c60:	ff 75 0c             	push   0xc(%ebp)
81001c63:	50                   	push   %eax
81001c64:	ff 75 08             	push   0x8(%ebp)
81001c67:	e8 0b 1d 00 00       	call   81003977 <_fputwc_r>
81001c6c:	83 c4 10             	add    $0x10,%esp
81001c6f:	83 f8 ff             	cmp    $0xffffffff,%eax
81001c72:	75 07                	jne    81001c7b <__sprint_r+0x8a>
81001c74:	be ff ff ff ff       	mov    $0xffffffff,%esi
81001c79:	eb 3b                	jmp    81001cb6 <__sprint_r+0xc5>
81001c7b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001c7f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001c82:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81001c85:	7c c5                	jl     81001c4c <__sprint_r+0x5b>
81001c87:	8b 43 08             	mov    0x8(%ebx),%eax
81001c8a:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001c8d:	c1 e2 02             	shl    $0x2,%edx
81001c90:	29 d0                	sub    %edx,%eax
81001c92:	89 43 08             	mov    %eax,0x8(%ebx)
81001c95:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
81001c99:	8b 43 08             	mov    0x8(%ebx),%eax
81001c9c:	85 c0                	test   %eax,%eax
81001c9e:	75 8f                	jne    81001c2f <__sprint_r+0x3e>
81001ca0:	eb 14                	jmp    81001cb6 <__sprint_r+0xc5>
81001ca2:	83 ec 04             	sub    $0x4,%esp
81001ca5:	53                   	push   %ebx
81001ca6:	ff 75 0c             	push   0xc(%ebp)
81001ca9:	ff 75 08             	push   0x8(%ebp)
81001cac:	e8 0a ed ff ff       	call   810009bb <__sfvwrite_r>
81001cb1:	83 c4 10             	add    $0x10,%esp
81001cb4:	89 c6                	mov    %eax,%esi
81001cb6:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81001cbd:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81001cc4:	89 f0                	mov    %esi,%eax
81001cc6:	8d 65 f8             	lea    -0x8(%ebp),%esp
81001cc9:	5b                   	pop    %ebx
81001cca:	5e                   	pop    %esi
81001ccb:	5d                   	pop    %ebp
81001ccc:	c3                   	ret    

81001ccd <__sfputc_r>:
81001ccd:	55                   	push   %ebp
81001cce:	89 e5                	mov    %esp,%ebp
81001cd0:	83 ec 08             	sub    $0x8,%esp
81001cd3:	8b 45 10             	mov    0x10(%ebp),%eax
81001cd6:	8b 40 08             	mov    0x8(%eax),%eax
81001cd9:	8d 50 ff             	lea    -0x1(%eax),%edx
81001cdc:	8b 45 10             	mov    0x10(%ebp),%eax
81001cdf:	89 50 08             	mov    %edx,0x8(%eax)
81001ce2:	8b 45 10             	mov    0x10(%ebp),%eax
81001ce5:	8b 40 08             	mov    0x8(%eax),%eax
81001ce8:	85 c0                	test   %eax,%eax
81001cea:	79 17                	jns    81001d03 <__sfputc_r+0x36>
81001cec:	8b 45 10             	mov    0x10(%ebp),%eax
81001cef:	8b 50 08             	mov    0x8(%eax),%edx
81001cf2:	8b 45 10             	mov    0x10(%ebp),%eax
81001cf5:	8b 40 18             	mov    0x18(%eax),%eax
81001cf8:	39 c2                	cmp    %eax,%edx
81001cfa:	7c 21                	jl     81001d1d <__sfputc_r+0x50>
81001cfc:	8b 45 0c             	mov    0xc(%ebp),%eax
81001cff:	3c 0a                	cmp    $0xa,%al
81001d01:	74 1a                	je     81001d1d <__sfputc_r+0x50>
81001d03:	8b 45 10             	mov    0x10(%ebp),%eax
81001d06:	8b 00                	mov    (%eax),%eax
81001d08:	8d 48 01             	lea    0x1(%eax),%ecx
81001d0b:	8b 55 10             	mov    0x10(%ebp),%edx
81001d0e:	89 0a                	mov    %ecx,(%edx)
81001d10:	8b 55 0c             	mov    0xc(%ebp),%edx
81001d13:	88 10                	mov    %dl,(%eax)
81001d15:	0f b6 00             	movzbl (%eax),%eax
81001d18:	0f b6 c0             	movzbl %al,%eax
81001d1b:	eb 14                	jmp    81001d31 <__sfputc_r+0x64>
81001d1d:	83 ec 04             	sub    $0x4,%esp
81001d20:	ff 75 10             	push   0x10(%ebp)
81001d23:	ff 75 0c             	push   0xc(%ebp)
81001d26:	ff 75 08             	push   0x8(%ebp)
81001d29:	e8 44 14 00 00       	call   81003172 <__swbuf_r>
81001d2e:	83 c4 10             	add    $0x10,%esp
81001d31:	c9                   	leave  
81001d32:	c3                   	ret    

81001d33 <__sfputs_r>:
81001d33:	55                   	push   %ebp
81001d34:	89 e5                	mov    %esp,%ebp
81001d36:	53                   	push   %ebx
81001d37:	83 ec 14             	sub    $0x14,%esp
81001d3a:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d3d:	8b 40 64             	mov    0x64(%eax),%eax
81001d40:	25 00 20 00 00       	and    $0x2000,%eax
81001d45:	85 c0                	test   %eax,%eax
81001d47:	74 4c                	je     81001d95 <__sfputs_r+0x62>
81001d49:	8b 45 10             	mov    0x10(%ebp),%eax
81001d4c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001d4f:	bb 00 00 00 00       	mov    $0x0,%ebx
81001d54:	eb 31                	jmp    81001d87 <__sfputs_r+0x54>
81001d56:	89 d8                	mov    %ebx,%eax
81001d58:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d5f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d62:	01 d0                	add    %edx,%eax
81001d64:	8b 00                	mov    (%eax),%eax
81001d66:	83 ec 04             	sub    $0x4,%esp
81001d69:	ff 75 0c             	push   0xc(%ebp)
81001d6c:	50                   	push   %eax
81001d6d:	ff 75 08             	push   0x8(%ebp)
81001d70:	e8 02 1c 00 00       	call   81003977 <_fputwc_r>
81001d75:	83 c4 10             	add    $0x10,%esp
81001d78:	83 f8 ff             	cmp    $0xffffffff,%eax
81001d7b:	75 07                	jne    81001d84 <__sfputs_r+0x51>
81001d7d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001d82:	eb 52                	jmp    81001dd6 <__sfputs_r+0xa3>
81001d84:	83 c3 01             	add    $0x1,%ebx
81001d87:	8b 45 14             	mov    0x14(%ebp),%eax
81001d8a:	c1 e8 02             	shr    $0x2,%eax
81001d8d:	89 da                	mov    %ebx,%edx
81001d8f:	39 d0                	cmp    %edx,%eax
81001d91:	77 c3                	ja     81001d56 <__sfputs_r+0x23>
81001d93:	eb 3c                	jmp    81001dd1 <__sfputs_r+0x9e>
81001d95:	bb 00 00 00 00       	mov    $0x0,%ebx
81001d9a:	eb 2e                	jmp    81001dca <__sfputs_r+0x97>
81001d9c:	89 da                	mov    %ebx,%edx
81001d9e:	8b 45 10             	mov    0x10(%ebp),%eax
81001da1:	01 d0                	add    %edx,%eax
81001da3:	0f b6 00             	movzbl (%eax),%eax
81001da6:	0f be c0             	movsbl %al,%eax
81001da9:	83 ec 04             	sub    $0x4,%esp
81001dac:	ff 75 0c             	push   0xc(%ebp)
81001daf:	50                   	push   %eax
81001db0:	ff 75 08             	push   0x8(%ebp)
81001db3:	e8 15 ff ff ff       	call   81001ccd <__sfputc_r>
81001db8:	83 c4 10             	add    $0x10,%esp
81001dbb:	83 f8 ff             	cmp    $0xffffffff,%eax
81001dbe:	75 07                	jne    81001dc7 <__sfputs_r+0x94>
81001dc0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001dc5:	eb 0f                	jmp    81001dd6 <__sfputs_r+0xa3>
81001dc7:	83 c3 01             	add    $0x1,%ebx
81001dca:	89 d8                	mov    %ebx,%eax
81001dcc:	39 45 14             	cmp    %eax,0x14(%ebp)
81001dcf:	77 cb                	ja     81001d9c <__sfputs_r+0x69>
81001dd1:	b8 00 00 00 00       	mov    $0x0,%eax
81001dd6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001dd9:	c9                   	leave  
81001dda:	c3                   	ret    

81001ddb <vfiprintf>:
81001ddb:	55                   	push   %ebp
81001ddc:	89 e5                	mov    %esp,%ebp
81001dde:	83 ec 18             	sub    $0x18,%esp
81001de1:	a1 04 4f 00 81       	mov    0x81004f04,%eax
81001de6:	ff 75 10             	push   0x10(%ebp)
81001de9:	ff 75 0c             	push   0xc(%ebp)
81001dec:	ff 75 08             	push   0x8(%ebp)
81001def:	50                   	push   %eax
81001df0:	e8 0b 00 00 00       	call   81001e00 <_vfiprintf_r>
81001df5:	83 c4 10             	add    $0x10,%esp
81001df8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001dfb:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001dfe:	c9                   	leave  
81001dff:	c3                   	ret    

81001e00 <_vfiprintf_r>:
81001e00:	55                   	push   %ebp
81001e01:	89 e5                	mov    %esp,%ebp
81001e03:	57                   	push   %edi
81001e04:	56                   	push   %esi
81001e05:	53                   	push   %ebx
81001e06:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
81001e0c:	c7 45 e4 33 1d 00 81 	movl   $0x81001d33,-0x1c(%ebp)
81001e13:	8b 45 08             	mov    0x8(%ebp),%eax
81001e16:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001e19:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81001e1d:	74 18                	je     81001e37 <_vfiprintf_r+0x37>
81001e1f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e22:	8b 40 38             	mov    0x38(%eax),%eax
81001e25:	85 c0                	test   %eax,%eax
81001e27:	75 0e                	jne    81001e37 <_vfiprintf_r+0x37>
81001e29:	83 ec 0c             	sub    $0xc,%esp
81001e2c:	ff 75 e0             	push   -0x20(%ebp)
81001e2f:	e8 7a ea ff ff       	call   810008ae <__sinit>
81001e34:	83 c4 10             	add    $0x10,%esp
81001e37:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e3a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001e3e:	98                   	cwtl   
81001e3f:	83 e0 08             	and    $0x8,%eax
81001e42:	85 c0                	test   %eax,%eax
81001e44:	74 0a                	je     81001e50 <_vfiprintf_r+0x50>
81001e46:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e49:	8b 40 10             	mov    0x10(%eax),%eax
81001e4c:	85 c0                	test   %eax,%eax
81001e4e:	75 1f                	jne    81001e6f <_vfiprintf_r+0x6f>
81001e50:	83 ec 08             	sub    $0x8,%esp
81001e53:	ff 75 0c             	push   0xc(%ebp)
81001e56:	ff 75 08             	push   0x8(%ebp)
81001e59:	e8 8d 14 00 00       	call   810032eb <__swsetup_r>
81001e5e:	83 c4 10             	add    $0x10,%esp
81001e61:	85 c0                	test   %eax,%eax
81001e63:	74 0a                	je     81001e6f <_vfiprintf_r+0x6f>
81001e65:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001e6a:	e9 df 02 00 00       	jmp    8100214e <_vfiprintf_r+0x34e>
81001e6f:	8b 5d 10             	mov    0x10(%ebp),%ebx
81001e72:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
81001e79:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81001e7d:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81001e81:	8b 45 14             	mov    0x14(%ebp),%eax
81001e84:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81001e8a:	89 de                	mov    %ebx,%esi
81001e8c:	eb 03                	jmp    81001e91 <_vfiprintf_r+0x91>
81001e8e:	83 c3 01             	add    $0x1,%ebx
81001e91:	0f b6 03             	movzbl (%ebx),%eax
81001e94:	84 c0                	test   %al,%al
81001e96:	74 07                	je     81001e9f <_vfiprintf_r+0x9f>
81001e98:	0f b6 03             	movzbl (%ebx),%eax
81001e9b:	3c 25                	cmp    $0x25,%al
81001e9d:	75 ef                	jne    81001e8e <_vfiprintf_r+0x8e>
81001e9f:	89 d8                	mov    %ebx,%eax
81001ea1:	29 f0                	sub    %esi,%eax
81001ea3:	85 c0                	test   %eax,%eax
81001ea5:	74 2b                	je     81001ed2 <_vfiprintf_r+0xd2>
81001ea7:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81001ead:	50                   	push   %eax
81001eae:	56                   	push   %esi
81001eaf:	ff 75 0c             	push   0xc(%ebp)
81001eb2:	ff 75 08             	push   0x8(%ebp)
81001eb5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001eb8:	ff d0                	call   *%eax
81001eba:	83 c4 10             	add    $0x10,%esp
81001ebd:	83 f8 ff             	cmp    $0xffffffff,%eax
81001ec0:	0f 84 68 02 00 00    	je     8100212e <_vfiprintf_r+0x32e>
81001ec6:	8b 45 94             	mov    -0x6c(%ebp),%eax
81001ec9:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81001ecf:	89 45 94             	mov    %eax,-0x6c(%ebp)
81001ed2:	0f b6 03             	movzbl (%ebx),%eax
81001ed5:	84 c0                	test   %al,%al
81001ed7:	0f 84 54 02 00 00    	je     81002131 <_vfiprintf_r+0x331>
81001edd:	83 c3 01             	add    $0x1,%ebx
81001ee0:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
81001ee7:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81001eee:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81001ef5:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
81001efc:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81001f00:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81001f07:	c7 45 dc 60 47 00 81 	movl   $0x81004760,-0x24(%ebp)
81001f0e:	eb 1b                	jmp    81001f2b <_vfiprintf_r+0x12b>
81001f10:	8b 55 80             	mov    -0x80(%ebp),%edx
81001f13:	89 f0                	mov    %esi,%eax
81001f15:	2b 45 dc             	sub    -0x24(%ebp),%eax
81001f18:	be 01 00 00 00       	mov    $0x1,%esi
81001f1d:	89 c1                	mov    %eax,%ecx
81001f1f:	d3 e6                	shl    %cl,%esi
81001f21:	89 f0                	mov    %esi,%eax
81001f23:	09 d0                	or     %edx,%eax
81001f25:	89 45 80             	mov    %eax,-0x80(%ebp)
81001f28:	83 c3 01             	add    $0x1,%ebx
81001f2b:	0f b6 03             	movzbl (%ebx),%eax
81001f2e:	0f be c0             	movsbl %al,%eax
81001f31:	83 ec 04             	sub    $0x4,%esp
81001f34:	6a 05                	push   $0x5
81001f36:	50                   	push   %eax
81001f37:	ff 75 dc             	push   -0x24(%ebp)
81001f3a:	e8 b1 fa ff ff       	call   810019f0 <memchr>
81001f3f:	83 c4 10             	add    $0x10,%esp
81001f42:	89 c6                	mov    %eax,%esi
81001f44:	85 f6                	test   %esi,%esi
81001f46:	75 c8                	jne    81001f10 <_vfiprintf_r+0x110>
81001f48:	8b 45 80             	mov    -0x80(%ebp),%eax
81001f4b:	83 e0 10             	and    $0x10,%eax
81001f4e:	85 c0                	test   %eax,%eax
81001f50:	74 04                	je     81001f56 <_vfiprintf_r+0x156>
81001f52:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81001f56:	8b 45 80             	mov    -0x80(%ebp),%eax
81001f59:	83 e0 08             	and    $0x8,%eax
81001f5c:	85 c0                	test   %eax,%eax
81001f5e:	74 04                	je     81001f64 <_vfiprintf_r+0x164>
81001f60:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81001f64:	0f b6 03             	movzbl (%ebx),%eax
81001f67:	3c 2a                	cmp    $0x2a,%al
81001f69:	75 50                	jne    81001fbb <_vfiprintf_r+0x1bb>
81001f6b:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81001f71:	8d 50 04             	lea    0x4(%eax),%edx
81001f74:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
81001f7a:	8b 00                	mov    (%eax),%eax
81001f7c:	89 45 8c             	mov    %eax,-0x74(%ebp)
81001f7f:	8b 45 8c             	mov    -0x74(%ebp),%eax
81001f82:	85 c0                	test   %eax,%eax
81001f84:	79 11                	jns    81001f97 <_vfiprintf_r+0x197>
81001f86:	8b 45 8c             	mov    -0x74(%ebp),%eax
81001f89:	f7 d8                	neg    %eax
81001f8b:	89 45 8c             	mov    %eax,-0x74(%ebp)
81001f8e:	8b 45 80             	mov    -0x80(%ebp),%eax
81001f91:	83 c8 02             	or     $0x2,%eax
81001f94:	89 45 80             	mov    %eax,-0x80(%ebp)
81001f97:	83 c3 01             	add    $0x1,%ebx
81001f9a:	eb 2d                	jmp    81001fc9 <_vfiprintf_r+0x1c9>
81001f9c:	8b 55 8c             	mov    -0x74(%ebp),%edx
81001f9f:	89 d0                	mov    %edx,%eax
81001fa1:	c1 e0 02             	shl    $0x2,%eax
81001fa4:	01 d0                	add    %edx,%eax
81001fa6:	01 c0                	add    %eax,%eax
81001fa8:	89 c2                	mov    %eax,%edx
81001faa:	0f b6 03             	movzbl (%ebx),%eax
81001fad:	0f be c0             	movsbl %al,%eax
81001fb0:	83 e8 30             	sub    $0x30,%eax
81001fb3:	01 d0                	add    %edx,%eax
81001fb5:	89 45 8c             	mov    %eax,-0x74(%ebp)
81001fb8:	83 c3 01             	add    $0x1,%ebx
81001fbb:	0f b6 03             	movzbl (%ebx),%eax
81001fbe:	0f be c0             	movsbl %al,%eax
81001fc1:	83 e8 30             	sub    $0x30,%eax
81001fc4:	83 f8 09             	cmp    $0x9,%eax
81001fc7:	76 d3                	jbe    81001f9c <_vfiprintf_r+0x19c>
81001fc9:	0f b6 03             	movzbl (%ebx),%eax
81001fcc:	3c 2e                	cmp    $0x2e,%al
81001fce:	75 67                	jne    81002037 <_vfiprintf_r+0x237>
81001fd0:	83 c3 01             	add    $0x1,%ebx
81001fd3:	0f b6 03             	movzbl (%ebx),%eax
81001fd6:	3c 2a                	cmp    $0x2a,%al
81001fd8:	75 27                	jne    81002001 <_vfiprintf_r+0x201>
81001fda:	83 c3 01             	add    $0x1,%ebx
81001fdd:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81001fe3:	8d 50 04             	lea    0x4(%eax),%edx
81001fe6:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
81001fec:	8b 00                	mov    (%eax),%eax
81001fee:	89 45 84             	mov    %eax,-0x7c(%ebp)
81001ff1:	8b 45 84             	mov    -0x7c(%ebp),%eax
81001ff4:	85 c0                	test   %eax,%eax
81001ff6:	79 3f                	jns    81002037 <_vfiprintf_r+0x237>
81001ff8:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81001fff:	eb 36                	jmp    81002037 <_vfiprintf_r+0x237>
81002001:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
81002008:	eb 1f                	jmp    81002029 <_vfiprintf_r+0x229>
8100200a:	8b 55 84             	mov    -0x7c(%ebp),%edx
8100200d:	89 d0                	mov    %edx,%eax
8100200f:	c1 e0 02             	shl    $0x2,%eax
81002012:	01 d0                	add    %edx,%eax
81002014:	01 c0                	add    %eax,%eax
81002016:	89 c2                	mov    %eax,%edx
81002018:	0f b6 03             	movzbl (%ebx),%eax
8100201b:	0f be c0             	movsbl %al,%eax
8100201e:	83 e8 30             	sub    $0x30,%eax
81002021:	01 d0                	add    %edx,%eax
81002023:	89 45 84             	mov    %eax,-0x7c(%ebp)
81002026:	83 c3 01             	add    $0x1,%ebx
81002029:	0f b6 03             	movzbl (%ebx),%eax
8100202c:	0f be c0             	movsbl %al,%eax
8100202f:	83 e8 30             	sub    $0x30,%eax
81002032:	83 f8 09             	cmp    $0x9,%eax
81002035:	76 d3                	jbe    8100200a <_vfiprintf_r+0x20a>
81002037:	c7 45 dc 66 47 00 81 	movl   $0x81004766,-0x24(%ebp)
8100203e:	0f b6 03             	movzbl (%ebx),%eax
81002041:	0f be c0             	movsbl %al,%eax
81002044:	83 ec 04             	sub    $0x4,%esp
81002047:	6a 03                	push   $0x3
81002049:	50                   	push   %eax
8100204a:	ff 75 dc             	push   -0x24(%ebp)
8100204d:	e8 9e f9 ff ff       	call   810019f0 <memchr>
81002052:	83 c4 10             	add    $0x10,%esp
81002055:	89 c6                	mov    %eax,%esi
81002057:	85 f6                	test   %esi,%esi
81002059:	74 1b                	je     81002076 <_vfiprintf_r+0x276>
8100205b:	8b 55 80             	mov    -0x80(%ebp),%edx
8100205e:	89 f0                	mov    %esi,%eax
81002060:	2b 45 dc             	sub    -0x24(%ebp),%eax
81002063:	be 40 00 00 00       	mov    $0x40,%esi
81002068:	89 c1                	mov    %eax,%ecx
8100206a:	d3 e6                	shl    %cl,%esi
8100206c:	89 f0                	mov    %esi,%eax
8100206e:	09 d0                	or     %edx,%eax
81002070:	89 45 80             	mov    %eax,-0x80(%ebp)
81002073:	83 c3 01             	add    $0x1,%ebx
81002076:	89 d8                	mov    %ebx,%eax
81002078:	8d 58 01             	lea    0x1(%eax),%ebx
8100207b:	0f b6 00             	movzbl (%eax),%eax
8100207e:	88 45 98             	mov    %al,-0x68(%ebp)
81002081:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
81002085:	0f be c0             	movsbl %al,%eax
81002088:	83 ec 04             	sub    $0x4,%esp
8100208b:	6a 06                	push   $0x6
8100208d:	50                   	push   %eax
8100208e:	68 6a 47 00 81       	push   $0x8100476a
81002093:	e8 58 f9 ff ff       	call   810019f0 <memchr>
81002098:	83 c4 10             	add    $0x10,%esp
8100209b:	89 c6                	mov    %eax,%esi
8100209d:	85 f6                	test   %esi,%esi
8100209f:	74 5a                	je     810020fb <_vfiprintf_r+0x2fb>
810020a1:	b8 00 00 00 00       	mov    $0x0,%eax
810020a6:	85 c0                	test   %eax,%eax
810020a8:	75 2e                	jne    810020d8 <_vfiprintf_r+0x2d8>
810020aa:	8b 45 80             	mov    -0x80(%ebp),%eax
810020ad:	25 00 01 00 00       	and    $0x100,%eax
810020b2:	85 c0                	test   %eax,%eax
810020b4:	74 11                	je     810020c7 <_vfiprintf_r+0x2c7>
810020b6:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810020bc:	83 c0 0c             	add    $0xc,%eax
810020bf:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810020c5:	eb 55                	jmp    8100211c <_vfiprintf_r+0x31c>
810020c7:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810020cd:	83 c0 08             	add    $0x8,%eax
810020d0:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810020d6:	eb 44                	jmp    8100211c <_vfiprintf_r+0x31c>
810020d8:	83 ec 0c             	sub    $0xc,%esp
810020db:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
810020e1:	50                   	push   %eax
810020e2:	ff 75 e4             	push   -0x1c(%ebp)
810020e5:	ff 75 0c             	push   0xc(%ebp)
810020e8:	8d 45 80             	lea    -0x80(%ebp),%eax
810020eb:	50                   	push   %eax
810020ec:	ff 75 08             	push   0x8(%ebp)
810020ef:	e8 0c df ff 7e       	call   0 <main-0x81000000>
810020f4:	83 c4 20             	add    $0x20,%esp
810020f7:	89 c7                	mov    %eax,%edi
810020f9:	eb 21                	jmp    8100211c <_vfiprintf_r+0x31c>
810020fb:	83 ec 0c             	sub    $0xc,%esp
810020fe:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81002104:	50                   	push   %eax
81002105:	ff 75 e4             	push   -0x1c(%ebp)
81002108:	ff 75 0c             	push   0xc(%ebp)
8100210b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100210e:	50                   	push   %eax
8100210f:	ff 75 08             	push   0x8(%ebp)
81002112:	e8 da 01 00 00       	call   810022f1 <_printf_i>
81002117:	83 c4 20             	add    $0x20,%esp
8100211a:	89 c7                	mov    %eax,%edi
8100211c:	83 ff ff             	cmp    $0xffffffff,%edi
8100211f:	74 13                	je     81002134 <_vfiprintf_r+0x334>
81002121:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002124:	01 f8                	add    %edi,%eax
81002126:	89 45 94             	mov    %eax,-0x6c(%ebp)
81002129:	e9 5c fd ff ff       	jmp    81001e8a <_vfiprintf_r+0x8a>
8100212e:	90                   	nop
8100212f:	eb 04                	jmp    81002135 <_vfiprintf_r+0x335>
81002131:	90                   	nop
81002132:	eb 01                	jmp    81002135 <_vfiprintf_r+0x335>
81002134:	90                   	nop
81002135:	8b 45 0c             	mov    0xc(%ebp),%eax
81002138:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100213c:	98                   	cwtl   
8100213d:	83 e0 40             	and    $0x40,%eax
81002140:	85 c0                	test   %eax,%eax
81002142:	75 05                	jne    81002149 <_vfiprintf_r+0x349>
81002144:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002147:	eb 05                	jmp    8100214e <_vfiprintf_r+0x34e>
81002149:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100214e:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002151:	5b                   	pop    %ebx
81002152:	5e                   	pop    %esi
81002153:	5f                   	pop    %edi
81002154:	5d                   	pop    %ebp
81002155:	c3                   	ret    

81002156 <_printf_common>:
81002156:	55                   	push   %ebp
81002157:	89 e5                	mov    %esp,%ebp
81002159:	83 ec 18             	sub    $0x18,%esp
8100215c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100215f:	8b 50 10             	mov    0x10(%eax),%edx
81002162:	8b 45 0c             	mov    0xc(%ebp),%eax
81002165:	8b 40 08             	mov    0x8(%eax),%eax
81002168:	39 c2                	cmp    %eax,%edx
8100216a:	0f 4c d0             	cmovl  %eax,%edx
8100216d:	8b 45 10             	mov    0x10(%ebp),%eax
81002170:	89 10                	mov    %edx,(%eax)
81002172:	8b 45 0c             	mov    0xc(%ebp),%eax
81002175:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81002179:	84 c0                	test   %al,%al
8100217b:	74 0d                	je     8100218a <_printf_common+0x34>
8100217d:	8b 45 10             	mov    0x10(%ebp),%eax
81002180:	8b 00                	mov    (%eax),%eax
81002182:	8d 50 01             	lea    0x1(%eax),%edx
81002185:	8b 45 10             	mov    0x10(%ebp),%eax
81002188:	89 10                	mov    %edx,(%eax)
8100218a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100218d:	8b 00                	mov    (%eax),%eax
8100218f:	83 e0 20             	and    $0x20,%eax
81002192:	85 c0                	test   %eax,%eax
81002194:	74 0d                	je     810021a3 <_printf_common+0x4d>
81002196:	8b 45 10             	mov    0x10(%ebp),%eax
81002199:	8b 00                	mov    (%eax),%eax
8100219b:	8d 50 02             	lea    0x2(%eax),%edx
8100219e:	8b 45 10             	mov    0x10(%ebp),%eax
810021a1:	89 10                	mov    %edx,(%eax)
810021a3:	8b 45 0c             	mov    0xc(%ebp),%eax
810021a6:	8b 00                	mov    (%eax),%eax
810021a8:	83 e0 06             	and    $0x6,%eax
810021ab:	85 c0                	test   %eax,%eax
810021ad:	75 41                	jne    810021f0 <_printf_common+0x9a>
810021af:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810021b6:	eb 24                	jmp    810021dc <_printf_common+0x86>
810021b8:	8b 45 0c             	mov    0xc(%ebp),%eax
810021bb:	83 c0 19             	add    $0x19,%eax
810021be:	6a 01                	push   $0x1
810021c0:	50                   	push   %eax
810021c1:	ff 75 14             	push   0x14(%ebp)
810021c4:	ff 75 08             	push   0x8(%ebp)
810021c7:	8b 45 18             	mov    0x18(%ebp),%eax
810021ca:	ff d0                	call   *%eax
810021cc:	83 c4 10             	add    $0x10,%esp
810021cf:	83 f8 ff             	cmp    $0xffffffff,%eax
810021d2:	0f 84 0b 01 00 00    	je     810022e3 <_printf_common+0x18d>
810021d8:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810021dc:	8b 45 0c             	mov    0xc(%ebp),%eax
810021df:	8b 50 0c             	mov    0xc(%eax),%edx
810021e2:	8b 45 10             	mov    0x10(%ebp),%eax
810021e5:	8b 08                	mov    (%eax),%ecx
810021e7:	89 d0                	mov    %edx,%eax
810021e9:	29 c8                	sub    %ecx,%eax
810021eb:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810021ee:	7c c8                	jl     810021b8 <_printf_common+0x62>
810021f0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810021f7:	8b 45 0c             	mov    0xc(%ebp),%eax
810021fa:	0f b6 40 43          	movzbl 0x43(%eax),%eax
810021fe:	84 c0                	test   %al,%al
81002200:	74 04                	je     81002206 <_printf_common+0xb0>
81002202:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81002206:	8b 45 0c             	mov    0xc(%ebp),%eax
81002209:	8b 00                	mov    (%eax),%eax
8100220b:	83 e0 20             	and    $0x20,%eax
8100220e:	85 c0                	test   %eax,%eax
81002210:	74 28                	je     8100223a <_printf_common+0xe4>
81002212:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002215:	8d 50 01             	lea    0x1(%eax),%edx
81002218:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100221b:	8b 55 0c             	mov    0xc(%ebp),%edx
8100221e:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81002223:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002226:	8d 50 01             	lea    0x1(%eax),%edx
81002229:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100222c:	8b 55 0c             	mov    0xc(%ebp),%edx
8100222f:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81002233:	8b 55 0c             	mov    0xc(%ebp),%edx
81002236:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
8100223a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100223d:	8b 55 0c             	mov    0xc(%ebp),%edx
81002240:	83 c2 43             	add    $0x43,%edx
81002243:	50                   	push   %eax
81002244:	52                   	push   %edx
81002245:	ff 75 14             	push   0x14(%ebp)
81002248:	ff 75 08             	push   0x8(%ebp)
8100224b:	8b 45 18             	mov    0x18(%ebp),%eax
8100224e:	ff d0                	call   *%eax
81002250:	83 c4 10             	add    $0x10,%esp
81002253:	83 f8 ff             	cmp    $0xffffffff,%eax
81002256:	0f 84 8a 00 00 00    	je     810022e6 <_printf_common+0x190>
8100225c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100225f:	8b 50 0c             	mov    0xc(%eax),%edx
81002262:	8b 45 10             	mov    0x10(%ebp),%eax
81002265:	8b 08                	mov    (%eax),%ecx
81002267:	89 d0                	mov    %edx,%eax
81002269:	29 c8                	sub    %ecx,%eax
8100226b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100226e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002271:	8b 00                	mov    (%eax),%eax
81002273:	83 e0 06             	and    $0x6,%eax
81002276:	83 f8 04             	cmp    $0x4,%eax
81002279:	75 06                	jne    81002281 <_printf_common+0x12b>
8100227b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100227f:	79 07                	jns    81002288 <_printf_common+0x132>
81002281:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81002288:	8b 45 0c             	mov    0xc(%ebp),%eax
8100228b:	8b 50 08             	mov    0x8(%eax),%edx
8100228e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002291:	8b 40 10             	mov    0x10(%eax),%eax
81002294:	39 c2                	cmp    %eax,%edx
81002296:	7e 13                	jle    810022ab <_printf_common+0x155>
81002298:	8b 45 0c             	mov    0xc(%ebp),%eax
8100229b:	8b 50 08             	mov    0x8(%eax),%edx
8100229e:	8b 45 0c             	mov    0xc(%ebp),%eax
810022a1:	8b 48 10             	mov    0x10(%eax),%ecx
810022a4:	89 d0                	mov    %edx,%eax
810022a6:	29 c8                	sub    %ecx,%eax
810022a8:	01 45 f4             	add    %eax,-0xc(%ebp)
810022ab:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810022b2:	eb 20                	jmp    810022d4 <_printf_common+0x17e>
810022b4:	8b 45 0c             	mov    0xc(%ebp),%eax
810022b7:	83 c0 1a             	add    $0x1a,%eax
810022ba:	6a 01                	push   $0x1
810022bc:	50                   	push   %eax
810022bd:	ff 75 14             	push   0x14(%ebp)
810022c0:	ff 75 08             	push   0x8(%ebp)
810022c3:	8b 45 18             	mov    0x18(%ebp),%eax
810022c6:	ff d0                	call   *%eax
810022c8:	83 c4 10             	add    $0x10,%esp
810022cb:	83 f8 ff             	cmp    $0xffffffff,%eax
810022ce:	74 19                	je     810022e9 <_printf_common+0x193>
810022d0:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
810022d4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810022d7:	3b 45 f4             	cmp    -0xc(%ebp),%eax
810022da:	7c d8                	jl     810022b4 <_printf_common+0x15e>
810022dc:	b8 00 00 00 00       	mov    $0x0,%eax
810022e1:	eb 0c                	jmp    810022ef <_printf_common+0x199>
810022e3:	90                   	nop
810022e4:	eb 04                	jmp    810022ea <_printf_common+0x194>
810022e6:	90                   	nop
810022e7:	eb 01                	jmp    810022ea <_printf_common+0x194>
810022e9:	90                   	nop
810022ea:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810022ef:	c9                   	leave  
810022f0:	c3                   	ret    

810022f1 <_printf_i>:
810022f1:	55                   	push   %ebp
810022f2:	89 e5                	mov    %esp,%ebp
810022f4:	53                   	push   %ebx
810022f5:	83 ec 24             	sub    $0x24,%esp
810022f8:	8b 45 0c             	mov    0xc(%ebp),%eax
810022fb:	83 c0 1b             	add    $0x1b,%eax
810022fe:	83 c0 28             	add    $0x28,%eax
81002301:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002304:	c7 45 e8 74 47 00 81 	movl   $0x81004774,-0x18(%ebp)
8100230b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100230e:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81002312:	0f be c0             	movsbl %al,%eax
81002315:	85 c0                	test   %eax,%eax
81002317:	0f 84 00 03 00 00    	je     8100261d <_printf_i+0x32c>
8100231d:	85 c0                	test   %eax,%eax
8100231f:	0f 88 52 03 00 00    	js     81002677 <_printf_i+0x386>
81002325:	83 f8 78             	cmp    $0x78,%eax
81002328:	0f 8f 49 03 00 00    	jg     81002677 <_printf_i+0x386>
8100232e:	83 f8 58             	cmp    $0x58,%eax
81002331:	0f 8c 40 03 00 00    	jl     81002677 <_printf_i+0x386>
81002337:	83 e8 58             	sub    $0x58,%eax
8100233a:	83 f8 20             	cmp    $0x20,%eax
8100233d:	0f 87 34 03 00 00    	ja     81002677 <_printf_i+0x386>
81002343:	8b 04 85 98 47 00 81 	mov    -0x7effb868(,%eax,4),%eax
8100234a:	ff e0                	jmp    *%eax
8100234c:	8b 45 18             	mov    0x18(%ebp),%eax
8100234f:	8b 00                	mov    (%eax),%eax
81002351:	8d 48 04             	lea    0x4(%eax),%ecx
81002354:	8b 55 18             	mov    0x18(%ebp),%edx
81002357:	89 0a                	mov    %ecx,(%edx)
81002359:	8b 00                	mov    (%eax),%eax
8100235b:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8100235f:	89 c2                	mov    %eax,%edx
81002361:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002364:	88 10                	mov    %dl,(%eax)
81002366:	8b 45 0c             	mov    0xc(%ebp),%eax
81002369:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002370:	e9 1c 03 00 00       	jmp    81002691 <_printf_i+0x3a0>
81002375:	8b 45 0c             	mov    0xc(%ebp),%eax
81002378:	8b 00                	mov    (%eax),%eax
8100237a:	25 80 00 00 00       	and    $0x80,%eax
8100237f:	85 c0                	test   %eax,%eax
81002381:	74 11                	je     81002394 <_printf_i+0xa3>
81002383:	8b 45 18             	mov    0x18(%ebp),%eax
81002386:	8b 00                	mov    (%eax),%eax
81002388:	8d 48 04             	lea    0x4(%eax),%ecx
8100238b:	8b 55 18             	mov    0x18(%ebp),%edx
8100238e:	89 0a                	mov    %ecx,(%edx)
81002390:	8b 00                	mov    (%eax),%eax
81002392:	eb 2d                	jmp    810023c1 <_printf_i+0xd0>
81002394:	8b 45 0c             	mov    0xc(%ebp),%eax
81002397:	8b 00                	mov    (%eax),%eax
81002399:	83 e0 40             	and    $0x40,%eax
8100239c:	85 c0                	test   %eax,%eax
8100239e:	74 12                	je     810023b2 <_printf_i+0xc1>
810023a0:	8b 45 18             	mov    0x18(%ebp),%eax
810023a3:	8b 00                	mov    (%eax),%eax
810023a5:	8d 48 04             	lea    0x4(%eax),%ecx
810023a8:	8b 55 18             	mov    0x18(%ebp),%edx
810023ab:	89 0a                	mov    %ecx,(%edx)
810023ad:	8b 00                	mov    (%eax),%eax
810023af:	98                   	cwtl   
810023b0:	eb 0f                	jmp    810023c1 <_printf_i+0xd0>
810023b2:	8b 45 18             	mov    0x18(%ebp),%eax
810023b5:	8b 00                	mov    (%eax),%eax
810023b7:	8d 48 04             	lea    0x4(%eax),%ecx
810023ba:	8b 55 18             	mov    0x18(%ebp),%edx
810023bd:	89 0a                	mov    %ecx,(%edx)
810023bf:	8b 00                	mov    (%eax),%eax
810023c1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810023c4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810023c7:	85 c0                	test   %eax,%eax
810023c9:	79 0a                	jns    810023d5 <_printf_i+0xe4>
810023cb:	f7 5d f4             	negl   -0xc(%ebp)
810023ce:	8b 45 0c             	mov    0xc(%ebp),%eax
810023d1:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
810023d5:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
810023dc:	e9 28 01 00 00       	jmp    81002509 <_printf_i+0x218>
810023e1:	8b 45 0c             	mov    0xc(%ebp),%eax
810023e4:	8b 00                	mov    (%eax),%eax
810023e6:	25 80 00 00 00       	and    $0x80,%eax
810023eb:	85 c0                	test   %eax,%eax
810023ed:	74 11                	je     81002400 <_printf_i+0x10f>
810023ef:	8b 45 18             	mov    0x18(%ebp),%eax
810023f2:	8b 00                	mov    (%eax),%eax
810023f4:	8d 48 04             	lea    0x4(%eax),%ecx
810023f7:	8b 55 18             	mov    0x18(%ebp),%edx
810023fa:	89 0a                	mov    %ecx,(%edx)
810023fc:	8b 00                	mov    (%eax),%eax
810023fe:	eb 2f                	jmp    8100242f <_printf_i+0x13e>
81002400:	8b 45 0c             	mov    0xc(%ebp),%eax
81002403:	8b 00                	mov    (%eax),%eax
81002405:	83 e0 40             	and    $0x40,%eax
81002408:	85 c0                	test   %eax,%eax
8100240a:	74 14                	je     81002420 <_printf_i+0x12f>
8100240c:	8b 45 18             	mov    0x18(%ebp),%eax
8100240f:	8b 00                	mov    (%eax),%eax
81002411:	8d 48 04             	lea    0x4(%eax),%ecx
81002414:	8b 55 18             	mov    0x18(%ebp),%edx
81002417:	89 0a                	mov    %ecx,(%edx)
81002419:	8b 00                	mov    (%eax),%eax
8100241b:	0f b7 c0             	movzwl %ax,%eax
8100241e:	eb 0f                	jmp    8100242f <_printf_i+0x13e>
81002420:	8b 45 18             	mov    0x18(%ebp),%eax
81002423:	8b 00                	mov    (%eax),%eax
81002425:	8d 48 04             	lea    0x4(%eax),%ecx
81002428:	8b 55 18             	mov    0x18(%ebp),%edx
8100242b:	89 0a                	mov    %ecx,(%edx)
8100242d:	8b 00                	mov    (%eax),%eax
8100242f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002432:	8b 45 0c             	mov    0xc(%ebp),%eax
81002435:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81002439:	3c 6f                	cmp    $0x6f,%al
8100243b:	75 07                	jne    81002444 <_printf_i+0x153>
8100243d:	b8 08 00 00 00       	mov    $0x8,%eax
81002442:	eb 05                	jmp    81002449 <_printf_i+0x158>
81002444:	b8 0a 00 00 00       	mov    $0xa,%eax
81002449:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100244c:	e9 b1 00 00 00       	jmp    81002502 <_printf_i+0x211>
81002451:	8b 45 0c             	mov    0xc(%ebp),%eax
81002454:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81002458:	eb 1d                	jmp    81002477 <_printf_i+0x186>
8100245a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100245d:	8b 00                	mov    (%eax),%eax
8100245f:	83 c8 20             	or     $0x20,%eax
81002462:	89 c2                	mov    %eax,%edx
81002464:	8b 45 0c             	mov    0xc(%ebp),%eax
81002467:	89 10                	mov    %edx,(%eax)
81002469:	8b 45 0c             	mov    0xc(%ebp),%eax
8100246c:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81002470:	c7 45 e8 85 47 00 81 	movl   $0x81004785,-0x18(%ebp)
81002477:	8b 45 0c             	mov    0xc(%ebp),%eax
8100247a:	8b 00                	mov    (%eax),%eax
8100247c:	25 80 00 00 00       	and    $0x80,%eax
81002481:	85 c0                	test   %eax,%eax
81002483:	74 11                	je     81002496 <_printf_i+0x1a5>
81002485:	8b 45 18             	mov    0x18(%ebp),%eax
81002488:	8b 00                	mov    (%eax),%eax
8100248a:	8d 48 04             	lea    0x4(%eax),%ecx
8100248d:	8b 55 18             	mov    0x18(%ebp),%edx
81002490:	89 0a                	mov    %ecx,(%edx)
81002492:	8b 00                	mov    (%eax),%eax
81002494:	eb 2f                	jmp    810024c5 <_printf_i+0x1d4>
81002496:	8b 45 0c             	mov    0xc(%ebp),%eax
81002499:	8b 00                	mov    (%eax),%eax
8100249b:	83 e0 40             	and    $0x40,%eax
8100249e:	85 c0                	test   %eax,%eax
810024a0:	74 14                	je     810024b6 <_printf_i+0x1c5>
810024a2:	8b 45 18             	mov    0x18(%ebp),%eax
810024a5:	8b 00                	mov    (%eax),%eax
810024a7:	8d 48 04             	lea    0x4(%eax),%ecx
810024aa:	8b 55 18             	mov    0x18(%ebp),%edx
810024ad:	89 0a                	mov    %ecx,(%edx)
810024af:	8b 00                	mov    (%eax),%eax
810024b1:	0f b7 c0             	movzwl %ax,%eax
810024b4:	eb 0f                	jmp    810024c5 <_printf_i+0x1d4>
810024b6:	8b 45 18             	mov    0x18(%ebp),%eax
810024b9:	8b 00                	mov    (%eax),%eax
810024bb:	8d 48 04             	lea    0x4(%eax),%ecx
810024be:	8b 55 18             	mov    0x18(%ebp),%edx
810024c1:	89 0a                	mov    %ecx,(%edx)
810024c3:	8b 00                	mov    (%eax),%eax
810024c5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810024c8:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
810024cf:	8b 45 0c             	mov    0xc(%ebp),%eax
810024d2:	8b 00                	mov    (%eax),%eax
810024d4:	83 e0 01             	and    $0x1,%eax
810024d7:	85 c0                	test   %eax,%eax
810024d9:	74 0f                	je     810024ea <_printf_i+0x1f9>
810024db:	8b 45 0c             	mov    0xc(%ebp),%eax
810024de:	8b 00                	mov    (%eax),%eax
810024e0:	83 c8 20             	or     $0x20,%eax
810024e3:	89 c2                	mov    %eax,%edx
810024e5:	8b 45 0c             	mov    0xc(%ebp),%eax
810024e8:	89 10                	mov    %edx,(%eax)
810024ea:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810024ee:	75 11                	jne    81002501 <_printf_i+0x210>
810024f0:	8b 45 0c             	mov    0xc(%ebp),%eax
810024f3:	8b 00                	mov    (%eax),%eax
810024f5:	83 e0 df             	and    $0xffffffdf,%eax
810024f8:	89 c2                	mov    %eax,%edx
810024fa:	8b 45 0c             	mov    0xc(%ebp),%eax
810024fd:	89 10                	mov    %edx,(%eax)
810024ff:	eb 01                	jmp    81002502 <_printf_i+0x211>
81002501:	90                   	nop
81002502:	8b 45 0c             	mov    0xc(%ebp),%eax
81002505:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81002509:	8b 45 0c             	mov    0xc(%ebp),%eax
8100250c:	8b 50 04             	mov    0x4(%eax),%edx
8100250f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002512:	89 50 08             	mov    %edx,0x8(%eax)
81002515:	8b 45 0c             	mov    0xc(%ebp),%eax
81002518:	8b 40 08             	mov    0x8(%eax),%eax
8100251b:	85 c0                	test   %eax,%eax
8100251d:	78 0f                	js     8100252e <_printf_i+0x23d>
8100251f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002522:	8b 00                	mov    (%eax),%eax
81002524:	83 e0 fb             	and    $0xfffffffb,%eax
81002527:	89 c2                	mov    %eax,%edx
81002529:	8b 45 0c             	mov    0xc(%ebp),%eax
8100252c:	89 10                	mov    %edx,(%eax)
8100252e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002532:	75 0a                	jne    8100253e <_printf_i+0x24d>
81002534:	8b 45 0c             	mov    0xc(%ebp),%eax
81002537:	8b 40 04             	mov    0x4(%eax),%eax
8100253a:	85 c0                	test   %eax,%eax
8100253c:	74 34                	je     81002572 <_printf_i+0x281>
8100253e:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81002541:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002544:	ba 00 00 00 00       	mov    $0x0,%edx
81002549:	f7 f1                	div    %ecx
8100254b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100254e:	01 d0                	add    %edx,%eax
81002550:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81002554:	0f b6 10             	movzbl (%eax),%edx
81002557:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100255a:	88 10                	mov    %dl,(%eax)
8100255c:	8b 5d f0             	mov    -0x10(%ebp),%ebx
8100255f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002562:	ba 00 00 00 00       	mov    $0x0,%edx
81002567:	f7 f3                	div    %ebx
81002569:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100256c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002570:	75 cc                	jne    8100253e <_printf_i+0x24d>
81002572:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81002576:	75 26                	jne    8100259e <_printf_i+0x2ad>
81002578:	8b 45 0c             	mov    0xc(%ebp),%eax
8100257b:	8b 00                	mov    (%eax),%eax
8100257d:	83 e0 01             	and    $0x1,%eax
81002580:	85 c0                	test   %eax,%eax
81002582:	74 1a                	je     8100259e <_printf_i+0x2ad>
81002584:	8b 45 0c             	mov    0xc(%ebp),%eax
81002587:	8b 50 04             	mov    0x4(%eax),%edx
8100258a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100258d:	8b 40 10             	mov    0x10(%eax),%eax
81002590:	39 c2                	cmp    %eax,%edx
81002592:	7f 0a                	jg     8100259e <_printf_i+0x2ad>
81002594:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81002598:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100259b:	c6 00 30             	movb   $0x30,(%eax)
8100259e:	8b 45 0c             	mov    0xc(%ebp),%eax
810025a1:	83 c0 1b             	add    $0x1b,%eax
810025a4:	83 c0 28             	add    $0x28,%eax
810025a7:	2b 45 ec             	sub    -0x14(%ebp),%eax
810025aa:	89 c2                	mov    %eax,%edx
810025ac:	8b 45 0c             	mov    0xc(%ebp),%eax
810025af:	89 50 10             	mov    %edx,0x10(%eax)
810025b2:	e9 e2 00 00 00       	jmp    81002699 <_printf_i+0x3a8>
810025b7:	8b 45 0c             	mov    0xc(%ebp),%eax
810025ba:	8b 00                	mov    (%eax),%eax
810025bc:	25 80 00 00 00       	and    $0x80,%eax
810025c1:	85 c0                	test   %eax,%eax
810025c3:	74 19                	je     810025de <_printf_i+0x2ed>
810025c5:	8b 45 18             	mov    0x18(%ebp),%eax
810025c8:	8b 00                	mov    (%eax),%eax
810025ca:	8d 48 04             	lea    0x4(%eax),%ecx
810025cd:	8b 55 18             	mov    0x18(%ebp),%edx
810025d0:	89 0a                	mov    %ecx,(%edx)
810025d2:	8b 00                	mov    (%eax),%eax
810025d4:	8b 55 0c             	mov    0xc(%ebp),%edx
810025d7:	8b 52 14             	mov    0x14(%edx),%edx
810025da:	89 10                	mov    %edx,(%eax)
810025dc:	eb 3f                	jmp    8100261d <_printf_i+0x32c>
810025de:	8b 45 0c             	mov    0xc(%ebp),%eax
810025e1:	8b 00                	mov    (%eax),%eax
810025e3:	83 e0 40             	and    $0x40,%eax
810025e6:	85 c0                	test   %eax,%eax
810025e8:	74 1c                	je     81002606 <_printf_i+0x315>
810025ea:	8b 45 0c             	mov    0xc(%ebp),%eax
810025ed:	8b 58 14             	mov    0x14(%eax),%ebx
810025f0:	8b 45 18             	mov    0x18(%ebp),%eax
810025f3:	8b 00                	mov    (%eax),%eax
810025f5:	8d 48 04             	lea    0x4(%eax),%ecx
810025f8:	8b 55 18             	mov    0x18(%ebp),%edx
810025fb:	89 0a                	mov    %ecx,(%edx)
810025fd:	8b 00                	mov    (%eax),%eax
810025ff:	89 da                	mov    %ebx,%edx
81002601:	66 89 10             	mov    %dx,(%eax)
81002604:	eb 17                	jmp    8100261d <_printf_i+0x32c>
81002606:	8b 45 18             	mov    0x18(%ebp),%eax
81002609:	8b 00                	mov    (%eax),%eax
8100260b:	8d 48 04             	lea    0x4(%eax),%ecx
8100260e:	8b 55 18             	mov    0x18(%ebp),%edx
81002611:	89 0a                	mov    %ecx,(%edx)
81002613:	8b 00                	mov    (%eax),%eax
81002615:	8b 55 0c             	mov    0xc(%ebp),%edx
81002618:	8b 52 14             	mov    0x14(%edx),%edx
8100261b:	89 10                	mov    %edx,(%eax)
8100261d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002620:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81002627:	eb 70                	jmp    81002699 <_printf_i+0x3a8>
81002629:	8b 45 18             	mov    0x18(%ebp),%eax
8100262c:	8b 00                	mov    (%eax),%eax
8100262e:	8d 48 04             	lea    0x4(%eax),%ecx
81002631:	8b 55 18             	mov    0x18(%ebp),%edx
81002634:	89 0a                	mov    %ecx,(%edx)
81002636:	8b 00                	mov    (%eax),%eax
81002638:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100263b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100263e:	8b 40 04             	mov    0x4(%eax),%eax
81002641:	83 ec 04             	sub    $0x4,%esp
81002644:	50                   	push   %eax
81002645:	6a 00                	push   $0x0
81002647:	ff 75 ec             	push   -0x14(%ebp)
8100264a:	e8 a1 f3 ff ff       	call   810019f0 <memchr>
8100264f:	83 c4 10             	add    $0x10,%esp
81002652:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002655:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81002659:	74 0e                	je     81002669 <_printf_i+0x378>
8100265b:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100265e:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002661:	89 c2                	mov    %eax,%edx
81002663:	8b 45 0c             	mov    0xc(%ebp),%eax
81002666:	89 50 04             	mov    %edx,0x4(%eax)
81002669:	8b 45 0c             	mov    0xc(%ebp),%eax
8100266c:	8b 50 04             	mov    0x4(%eax),%edx
8100266f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002672:	89 50 10             	mov    %edx,0x10(%eax)
81002675:	eb 1a                	jmp    81002691 <_printf_i+0x3a0>
81002677:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8100267b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100267e:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81002682:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002685:	88 10                	mov    %dl,(%eax)
81002687:	8b 45 0c             	mov    0xc(%ebp),%eax
8100268a:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002691:	8b 45 0c             	mov    0xc(%ebp),%eax
81002694:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81002698:	90                   	nop
81002699:	83 ec 0c             	sub    $0xc,%esp
8100269c:	ff 75 14             	push   0x14(%ebp)
8100269f:	ff 75 10             	push   0x10(%ebp)
810026a2:	8d 45 d8             	lea    -0x28(%ebp),%eax
810026a5:	50                   	push   %eax
810026a6:	ff 75 0c             	push   0xc(%ebp)
810026a9:	ff 75 08             	push   0x8(%ebp)
810026ac:	e8 a5 fa ff ff       	call   81002156 <_printf_common>
810026b1:	83 c4 20             	add    $0x20,%esp
810026b4:	89 45 dc             	mov    %eax,-0x24(%ebp)
810026b7:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
810026bb:	74 72                	je     8100272f <_printf_i+0x43e>
810026bd:	8b 45 0c             	mov    0xc(%ebp),%eax
810026c0:	8b 40 10             	mov    0x10(%eax),%eax
810026c3:	50                   	push   %eax
810026c4:	ff 75 ec             	push   -0x14(%ebp)
810026c7:	ff 75 10             	push   0x10(%ebp)
810026ca:	ff 75 08             	push   0x8(%ebp)
810026cd:	8b 45 14             	mov    0x14(%ebp),%eax
810026d0:	ff d0                	call   *%eax
810026d2:	83 c4 10             	add    $0x10,%esp
810026d5:	83 f8 ff             	cmp    $0xffffffff,%eax
810026d8:	74 58                	je     81002732 <_printf_i+0x441>
810026da:	8b 45 0c             	mov    0xc(%ebp),%eax
810026dd:	8b 00                	mov    (%eax),%eax
810026df:	83 e0 02             	and    $0x2,%eax
810026e2:	85 c0                	test   %eax,%eax
810026e4:	74 39                	je     8100271f <_printf_i+0x42e>
810026e6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810026ed:	eb 20                	jmp    8100270f <_printf_i+0x41e>
810026ef:	8b 45 0c             	mov    0xc(%ebp),%eax
810026f2:	83 c0 19             	add    $0x19,%eax
810026f5:	6a 01                	push   $0x1
810026f7:	50                   	push   %eax
810026f8:	ff 75 10             	push   0x10(%ebp)
810026fb:	ff 75 08             	push   0x8(%ebp)
810026fe:	8b 45 14             	mov    0x14(%ebp),%eax
81002701:	ff d0                	call   *%eax
81002703:	83 c4 10             	add    $0x10,%esp
81002706:	83 f8 ff             	cmp    $0xffffffff,%eax
81002709:	74 2a                	je     81002735 <_printf_i+0x444>
8100270b:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100270f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002712:	8b 40 0c             	mov    0xc(%eax),%eax
81002715:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002718:	29 d0                	sub    %edx,%eax
8100271a:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
8100271d:	7c d0                	jl     810026ef <_printf_i+0x3fe>
8100271f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002722:	8b 50 0c             	mov    0xc(%eax),%edx
81002725:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002728:	39 c2                	cmp    %eax,%edx
8100272a:	0f 4d c2             	cmovge %edx,%eax
8100272d:	eb 0c                	jmp    8100273b <_printf_i+0x44a>
8100272f:	90                   	nop
81002730:	eb 04                	jmp    81002736 <_printf_i+0x445>
81002732:	90                   	nop
81002733:	eb 01                	jmp    81002736 <_printf_i+0x445>
81002735:	90                   	nop
81002736:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100273b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100273e:	c9                   	leave  
8100273f:	c3                   	ret    

81002740 <_realloc_r>:
81002740:	55                   	push   %ebp
81002741:	89 e5                	mov    %esp,%ebp
81002743:	83 ec 78             	sub    $0x78,%esp
81002746:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100274a:	75 16                	jne    81002762 <_realloc_r+0x22>
8100274c:	83 ec 08             	sub    $0x8,%esp
8100274f:	ff 75 10             	push   0x10(%ebp)
81002752:	ff 75 08             	push   0x8(%ebp)
81002755:	e8 65 ea ff ff       	call   810011bf <_malloc_r>
8100275a:	83 c4 10             	add    $0x10,%esp
8100275d:	e9 b6 08 00 00       	jmp    81003018 <_realloc_r+0x8d8>
81002762:	83 ec 0c             	sub    $0xc,%esp
81002765:	ff 75 08             	push   0x8(%ebp)
81002768:	e8 78 f4 ff ff       	call   81001be5 <__malloc_lock>
8100276d:	83 c4 10             	add    $0x10,%esp
81002770:	8b 45 0c             	mov    0xc(%ebp),%eax
81002773:	83 e8 08             	sub    $0x8,%eax
81002776:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81002779:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100277c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100277f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002782:	8b 40 04             	mov    0x4(%eax),%eax
81002785:	83 e0 fc             	and    $0xfffffffc,%eax
81002788:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100278b:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100278e:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002791:	8b 45 10             	mov    0x10(%ebp),%eax
81002794:	83 c0 0b             	add    $0xb,%eax
81002797:	83 f8 16             	cmp    $0x16,%eax
8100279a:	76 0b                	jbe    810027a7 <_realloc_r+0x67>
8100279c:	8b 45 10             	mov    0x10(%ebp),%eax
8100279f:	83 c0 0b             	add    $0xb,%eax
810027a2:	83 e0 f8             	and    $0xfffffff8,%eax
810027a5:	eb 05                	jmp    810027ac <_realloc_r+0x6c>
810027a7:	b8 10 00 00 00       	mov    $0x10,%eax
810027ac:	89 45 bc             	mov    %eax,-0x44(%ebp)
810027af:	8b 45 bc             	mov    -0x44(%ebp),%eax
810027b2:	85 c0                	test   %eax,%eax
810027b4:	78 08                	js     810027be <_realloc_r+0x7e>
810027b6:	8b 45 bc             	mov    -0x44(%ebp),%eax
810027b9:	3b 45 10             	cmp    0x10(%ebp),%eax
810027bc:	73 13                	jae    810027d1 <_realloc_r+0x91>
810027be:	8b 45 08             	mov    0x8(%ebp),%eax
810027c1:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810027c7:	b8 00 00 00 00       	mov    $0x0,%eax
810027cc:	e9 47 08 00 00       	jmp    81003018 <_realloc_r+0x8d8>
810027d1:	8b 55 c0             	mov    -0x40(%ebp),%edx
810027d4:	8b 45 bc             	mov    -0x44(%ebp),%eax
810027d7:	39 c2                	cmp    %eax,%edx
810027d9:	0f 8d 8b 07 00 00    	jge    81002f6a <_realloc_r+0x82a>
810027df:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810027e2:	8b 45 c0             	mov    -0x40(%ebp),%eax
810027e5:	01 d0                	add    %edx,%eax
810027e7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810027ea:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
810027ef:	8b 40 08             	mov    0x8(%eax),%eax
810027f2:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810027f5:	74 1e                	je     81002815 <_realloc_r+0xd5>
810027f7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810027fa:	8b 40 04             	mov    0x4(%eax),%eax
810027fd:	83 e0 fe             	and    $0xfffffffe,%eax
81002800:	89 c2                	mov    %eax,%edx
81002802:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002805:	01 d0                	add    %edx,%eax
81002807:	8b 40 04             	mov    0x4(%eax),%eax
8100280a:	83 e0 01             	and    $0x1,%eax
8100280d:	85 c0                	test   %eax,%eax
8100280f:	0f 85 ca 00 00 00    	jne    810028df <_realloc_r+0x19f>
81002815:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002818:	8b 40 04             	mov    0x4(%eax),%eax
8100281b:	83 e0 fc             	and    $0xfffffffc,%eax
8100281e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002821:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
81002826:	8b 40 08             	mov    0x8(%eax),%eax
81002829:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100282c:	75 71                	jne    8100289f <_realloc_r+0x15f>
8100282e:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002831:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002834:	01 d0                	add    %edx,%eax
81002836:	89 c2                	mov    %eax,%edx
81002838:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100283b:	83 c0 10             	add    $0x10,%eax
8100283e:	39 c2                	cmp    %eax,%edx
81002840:	0f 8c a9 00 00 00    	jl     810028ef <_realloc_r+0x1af>
81002846:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002849:	01 45 f0             	add    %eax,-0x10(%ebp)
8100284c:	ba 20 4f 00 81       	mov    $0x81004f20,%edx
81002851:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81002854:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002857:	01 c8                	add    %ecx,%eax
81002859:	89 42 08             	mov    %eax,0x8(%edx)
8100285c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100285f:	2b 45 bc             	sub    -0x44(%ebp),%eax
81002862:	89 c2                	mov    %eax,%edx
81002864:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
81002869:	8b 40 08             	mov    0x8(%eax),%eax
8100286c:	83 ca 01             	or     $0x1,%edx
8100286f:	89 50 04             	mov    %edx,0x4(%eax)
81002872:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002875:	8b 40 04             	mov    0x4(%eax),%eax
81002878:	83 e0 01             	and    $0x1,%eax
8100287b:	0b 45 bc             	or     -0x44(%ebp),%eax
8100287e:	89 c2                	mov    %eax,%edx
81002880:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002883:	89 50 04             	mov    %edx,0x4(%eax)
81002886:	83 ec 0c             	sub    $0xc,%esp
81002889:	ff 75 08             	push   0x8(%ebp)
8100288c:	e8 5a f3 ff ff       	call   81001beb <__malloc_unlock>
81002891:	83 c4 10             	add    $0x10,%esp
81002894:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002897:	83 c0 08             	add    $0x8,%eax
8100289a:	e9 79 07 00 00       	jmp    81003018 <_realloc_r+0x8d8>
8100289f:	8b 55 e8             	mov    -0x18(%ebp),%edx
810028a2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810028a5:	01 d0                	add    %edx,%eax
810028a7:	89 c2                	mov    %eax,%edx
810028a9:	8b 45 bc             	mov    -0x44(%ebp),%eax
810028ac:	39 c2                	cmp    %eax,%edx
810028ae:	7c 3f                	jl     810028ef <_realloc_r+0x1af>
810028b0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810028b3:	8b 40 0c             	mov    0xc(%eax),%eax
810028b6:	89 45 b8             	mov    %eax,-0x48(%ebp)
810028b9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810028bc:	8b 40 08             	mov    0x8(%eax),%eax
810028bf:	89 45 b4             	mov    %eax,-0x4c(%ebp)
810028c2:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810028c5:	8b 55 b8             	mov    -0x48(%ebp),%edx
810028c8:	89 50 0c             	mov    %edx,0xc(%eax)
810028cb:	8b 45 b8             	mov    -0x48(%ebp),%eax
810028ce:	8b 55 b4             	mov    -0x4c(%ebp),%edx
810028d1:	89 50 08             	mov    %edx,0x8(%eax)
810028d4:	8b 45 e8             	mov    -0x18(%ebp),%eax
810028d7:	01 45 f0             	add    %eax,-0x10(%ebp)
810028da:	e9 8c 06 00 00       	jmp    81002f6b <_realloc_r+0x82b>
810028df:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810028e6:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810028ed:	eb 01                	jmp    810028f0 <_realloc_r+0x1b0>
810028ef:	90                   	nop
810028f0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810028f3:	8b 40 04             	mov    0x4(%eax),%eax
810028f6:	83 e0 01             	and    $0x1,%eax
810028f9:	85 c0                	test   %eax,%eax
810028fb:	0f 85 d6 04 00 00    	jne    81002dd7 <_realloc_r+0x697>
81002901:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002904:	8b 00                	mov    (%eax),%eax
81002906:	f7 d8                	neg    %eax
81002908:	89 c2                	mov    %eax,%edx
8100290a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100290d:	01 d0                	add    %edx,%eax
8100290f:	89 45 b0             	mov    %eax,-0x50(%ebp)
81002912:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002915:	8b 40 04             	mov    0x4(%eax),%eax
81002918:	83 e0 fc             	and    $0xfffffffc,%eax
8100291b:	89 45 ac             	mov    %eax,-0x54(%ebp)
8100291e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81002922:	0f 84 4a 03 00 00    	je     81002c72 <_realloc_r+0x532>
81002928:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
8100292d:	8b 40 08             	mov    0x8(%eax),%eax
81002930:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002933:	0f 85 b0 01 00 00    	jne    81002ae9 <_realloc_r+0x3a9>
81002939:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100293c:	8b 45 ac             	mov    -0x54(%ebp),%eax
8100293f:	01 c2                	add    %eax,%edx
81002941:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002944:	01 d0                	add    %edx,%eax
81002946:	89 c2                	mov    %eax,%edx
81002948:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100294b:	83 c0 10             	add    $0x10,%eax
8100294e:	39 c2                	cmp    %eax,%edx
81002950:	0f 8c 1c 03 00 00    	jl     81002c72 <_realloc_r+0x532>
81002956:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002959:	8b 40 0c             	mov    0xc(%eax),%eax
8100295c:	89 45 b8             	mov    %eax,-0x48(%ebp)
8100295f:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002962:	8b 40 08             	mov    0x8(%eax),%eax
81002965:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002968:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8100296b:	8b 55 b8             	mov    -0x48(%ebp),%edx
8100296e:	89 50 0c             	mov    %edx,0xc(%eax)
81002971:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002974:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002977:	89 50 08             	mov    %edx,0x8(%eax)
8100297a:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100297d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002980:	8b 55 ac             	mov    -0x54(%ebp),%edx
81002983:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002986:	01 d0                	add    %edx,%eax
81002988:	01 45 f0             	add    %eax,-0x10(%ebp)
8100298b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100298e:	83 c0 08             	add    $0x8,%eax
81002991:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002994:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002997:	83 e8 04             	sub    $0x4,%eax
8100299a:	89 45 a0             	mov    %eax,-0x60(%ebp)
8100299d:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
810029a1:	0f 87 de 00 00 00    	ja     81002a85 <_realloc_r+0x345>
810029a7:	8b 45 0c             	mov    0xc(%ebp),%eax
810029aa:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810029ad:	8b 45 a8             	mov    -0x58(%ebp),%eax
810029b0:	89 45 e0             	mov    %eax,-0x20(%ebp)
810029b3:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
810029b7:	0f 86 90 00 00 00    	jbe    81002a4d <_realloc_r+0x30d>
810029bd:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810029c0:	8d 42 04             	lea    0x4(%edx),%eax
810029c3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810029c6:	8b 45 e0             	mov    -0x20(%ebp),%eax
810029c9:	8d 48 04             	lea    0x4(%eax),%ecx
810029cc:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810029cf:	8b 12                	mov    (%edx),%edx
810029d1:	89 10                	mov    %edx,(%eax)
810029d3:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810029d6:	8d 42 04             	lea    0x4(%edx),%eax
810029d9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810029dc:	8b 45 e0             	mov    -0x20(%ebp),%eax
810029df:	8d 48 04             	lea    0x4(%eax),%ecx
810029e2:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810029e5:	8b 12                	mov    (%edx),%edx
810029e7:	89 10                	mov    %edx,(%eax)
810029e9:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
810029ed:	76 5e                	jbe    81002a4d <_realloc_r+0x30d>
810029ef:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810029f2:	8d 42 04             	lea    0x4(%edx),%eax
810029f5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810029f8:	8b 45 e0             	mov    -0x20(%ebp),%eax
810029fb:	8d 48 04             	lea    0x4(%eax),%ecx
810029fe:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a01:	8b 12                	mov    (%edx),%edx
81002a03:	89 10                	mov    %edx,(%eax)
81002a05:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a08:	8d 42 04             	lea    0x4(%edx),%eax
81002a0b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a0e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a11:	8d 48 04             	lea    0x4(%eax),%ecx
81002a14:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a17:	8b 12                	mov    (%edx),%edx
81002a19:	89 10                	mov    %edx,(%eax)
81002a1b:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81002a1f:	76 2c                	jbe    81002a4d <_realloc_r+0x30d>
81002a21:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a24:	8d 42 04             	lea    0x4(%edx),%eax
81002a27:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a2a:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a2d:	8d 48 04             	lea    0x4(%eax),%ecx
81002a30:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a33:	8b 12                	mov    (%edx),%edx
81002a35:	89 10                	mov    %edx,(%eax)
81002a37:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a3a:	8d 42 04             	lea    0x4(%edx),%eax
81002a3d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a40:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a43:	8d 48 04             	lea    0x4(%eax),%ecx
81002a46:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a49:	8b 12                	mov    (%edx),%edx
81002a4b:	89 10                	mov    %edx,(%eax)
81002a4d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a50:	8d 42 04             	lea    0x4(%edx),%eax
81002a53:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a56:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a59:	8d 48 04             	lea    0x4(%eax),%ecx
81002a5c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a5f:	8b 12                	mov    (%edx),%edx
81002a61:	89 10                	mov    %edx,(%eax)
81002a63:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a66:	8d 42 04             	lea    0x4(%edx),%eax
81002a69:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a6c:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a6f:	8d 48 04             	lea    0x4(%eax),%ecx
81002a72:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a75:	8b 12                	mov    (%edx),%edx
81002a77:	89 10                	mov    %edx,(%eax)
81002a79:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002a7c:	8b 10                	mov    (%eax),%edx
81002a7e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a81:	89 10                	mov    %edx,(%eax)
81002a83:	eb 14                	jmp    81002a99 <_realloc_r+0x359>
81002a85:	83 ec 04             	sub    $0x4,%esp
81002a88:	ff 75 a0             	push   -0x60(%ebp)
81002a8b:	ff 75 0c             	push   0xc(%ebp)
81002a8e:	ff 75 a8             	push   -0x58(%ebp)
81002a91:	e8 3a f0 ff ff       	call   81001ad0 <memmove>
81002a96:	83 c4 10             	add    $0x10,%esp
81002a99:	ba 20 4f 00 81       	mov    $0x81004f20,%edx
81002a9e:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002aa1:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002aa4:	01 c8                	add    %ecx,%eax
81002aa6:	89 42 08             	mov    %eax,0x8(%edx)
81002aa9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002aac:	2b 45 bc             	sub    -0x44(%ebp),%eax
81002aaf:	89 c2                	mov    %eax,%edx
81002ab1:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
81002ab6:	8b 40 08             	mov    0x8(%eax),%eax
81002ab9:	83 ca 01             	or     $0x1,%edx
81002abc:	89 50 04             	mov    %edx,0x4(%eax)
81002abf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ac2:	8b 40 04             	mov    0x4(%eax),%eax
81002ac5:	83 e0 01             	and    $0x1,%eax
81002ac8:	0b 45 bc             	or     -0x44(%ebp),%eax
81002acb:	89 c2                	mov    %eax,%edx
81002acd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ad0:	89 50 04             	mov    %edx,0x4(%eax)
81002ad3:	83 ec 0c             	sub    $0xc,%esp
81002ad6:	ff 75 08             	push   0x8(%ebp)
81002ad9:	e8 0d f1 ff ff       	call   81001beb <__malloc_unlock>
81002ade:	83 c4 10             	add    $0x10,%esp
81002ae1:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002ae4:	e9 2f 05 00 00       	jmp    81003018 <_realloc_r+0x8d8>
81002ae9:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002aec:	8b 45 ac             	mov    -0x54(%ebp),%eax
81002aef:	01 c2                	add    %eax,%edx
81002af1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002af4:	01 d0                	add    %edx,%eax
81002af6:	89 c2                	mov    %eax,%edx
81002af8:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002afb:	39 c2                	cmp    %eax,%edx
81002afd:	0f 8c 6f 01 00 00    	jl     81002c72 <_realloc_r+0x532>
81002b03:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002b06:	8b 40 0c             	mov    0xc(%eax),%eax
81002b09:	89 45 b8             	mov    %eax,-0x48(%ebp)
81002b0c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002b0f:	8b 40 08             	mov    0x8(%eax),%eax
81002b12:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002b15:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002b18:	8b 55 b8             	mov    -0x48(%ebp),%edx
81002b1b:	89 50 0c             	mov    %edx,0xc(%eax)
81002b1e:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002b21:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002b24:	89 50 08             	mov    %edx,0x8(%eax)
81002b27:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002b2a:	8b 40 0c             	mov    0xc(%eax),%eax
81002b2d:	89 45 b8             	mov    %eax,-0x48(%ebp)
81002b30:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002b33:	8b 40 08             	mov    0x8(%eax),%eax
81002b36:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002b39:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002b3c:	8b 55 b8             	mov    -0x48(%ebp),%edx
81002b3f:	89 50 0c             	mov    %edx,0xc(%eax)
81002b42:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002b45:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002b48:	89 50 08             	mov    %edx,0x8(%eax)
81002b4b:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002b4e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002b51:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002b54:	8b 45 ac             	mov    -0x54(%ebp),%eax
81002b57:	01 d0                	add    %edx,%eax
81002b59:	01 45 f0             	add    %eax,-0x10(%ebp)
81002b5c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b5f:	83 c0 08             	add    $0x8,%eax
81002b62:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002b65:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002b68:	83 e8 04             	sub    $0x4,%eax
81002b6b:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81002b6e:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81002b72:	0f 87 e1 00 00 00    	ja     81002c59 <_realloc_r+0x519>
81002b78:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b7b:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002b7e:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002b81:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002b84:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81002b88:	0f 86 90 00 00 00    	jbe    81002c1e <_realloc_r+0x4de>
81002b8e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002b91:	8d 42 04             	lea    0x4(%edx),%eax
81002b94:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002b97:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b9a:	8d 48 04             	lea    0x4(%eax),%ecx
81002b9d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002ba0:	8b 12                	mov    (%edx),%edx
81002ba2:	89 10                	mov    %edx,(%eax)
81002ba4:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002ba7:	8d 42 04             	lea    0x4(%edx),%eax
81002baa:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002bad:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002bb0:	8d 48 04             	lea    0x4(%eax),%ecx
81002bb3:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002bb6:	8b 12                	mov    (%edx),%edx
81002bb8:	89 10                	mov    %edx,(%eax)
81002bba:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81002bbe:	76 5e                	jbe    81002c1e <_realloc_r+0x4de>
81002bc0:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002bc3:	8d 42 04             	lea    0x4(%edx),%eax
81002bc6:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002bc9:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002bcc:	8d 48 04             	lea    0x4(%eax),%ecx
81002bcf:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002bd2:	8b 12                	mov    (%edx),%edx
81002bd4:	89 10                	mov    %edx,(%eax)
81002bd6:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002bd9:	8d 42 04             	lea    0x4(%edx),%eax
81002bdc:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002bdf:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002be2:	8d 48 04             	lea    0x4(%eax),%ecx
81002be5:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002be8:	8b 12                	mov    (%edx),%edx
81002bea:	89 10                	mov    %edx,(%eax)
81002bec:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81002bf0:	76 2c                	jbe    81002c1e <_realloc_r+0x4de>
81002bf2:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002bf5:	8d 42 04             	lea    0x4(%edx),%eax
81002bf8:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002bfb:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002bfe:	8d 48 04             	lea    0x4(%eax),%ecx
81002c01:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c04:	8b 12                	mov    (%edx),%edx
81002c06:	89 10                	mov    %edx,(%eax)
81002c08:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c0b:	8d 42 04             	lea    0x4(%edx),%eax
81002c0e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c11:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c14:	8d 48 04             	lea    0x4(%eax),%ecx
81002c17:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c1a:	8b 12                	mov    (%edx),%edx
81002c1c:	89 10                	mov    %edx,(%eax)
81002c1e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c21:	8d 42 04             	lea    0x4(%edx),%eax
81002c24:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c27:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c2a:	8d 48 04             	lea    0x4(%eax),%ecx
81002c2d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c30:	8b 12                	mov    (%edx),%edx
81002c32:	89 10                	mov    %edx,(%eax)
81002c34:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c37:	8d 42 04             	lea    0x4(%edx),%eax
81002c3a:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c3d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c40:	8d 48 04             	lea    0x4(%eax),%ecx
81002c43:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c46:	8b 12                	mov    (%edx),%edx
81002c48:	89 10                	mov    %edx,(%eax)
81002c4a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002c4d:	8b 10                	mov    (%eax),%edx
81002c4f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c52:	89 10                	mov    %edx,(%eax)
81002c54:	e9 12 03 00 00       	jmp    81002f6b <_realloc_r+0x82b>
81002c59:	83 ec 04             	sub    $0x4,%esp
81002c5c:	ff 75 a4             	push   -0x5c(%ebp)
81002c5f:	ff 75 0c             	push   0xc(%ebp)
81002c62:	ff 75 a8             	push   -0x58(%ebp)
81002c65:	e8 66 ee ff ff       	call   81001ad0 <memmove>
81002c6a:	83 c4 10             	add    $0x10,%esp
81002c6d:	e9 f9 02 00 00       	jmp    81002f6b <_realloc_r+0x82b>
81002c72:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81002c76:	0f 84 5b 01 00 00    	je     81002dd7 <_realloc_r+0x697>
81002c7c:	8b 55 ac             	mov    -0x54(%ebp),%edx
81002c7f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002c82:	01 d0                	add    %edx,%eax
81002c84:	89 c2                	mov    %eax,%edx
81002c86:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002c89:	39 c2                	cmp    %eax,%edx
81002c8b:	0f 8c 46 01 00 00    	jl     81002dd7 <_realloc_r+0x697>
81002c91:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002c94:	8b 40 0c             	mov    0xc(%eax),%eax
81002c97:	89 45 b8             	mov    %eax,-0x48(%ebp)
81002c9a:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002c9d:	8b 40 08             	mov    0x8(%eax),%eax
81002ca0:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002ca3:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002ca6:	8b 55 b8             	mov    -0x48(%ebp),%edx
81002ca9:	89 50 0c             	mov    %edx,0xc(%eax)
81002cac:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002caf:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002cb2:	89 50 08             	mov    %edx,0x8(%eax)
81002cb5:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002cb8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002cbb:	8b 45 ac             	mov    -0x54(%ebp),%eax
81002cbe:	01 45 f0             	add    %eax,-0x10(%ebp)
81002cc1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002cc4:	83 c0 08             	add    $0x8,%eax
81002cc7:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002cca:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002ccd:	83 e8 04             	sub    $0x4,%eax
81002cd0:	89 45 9c             	mov    %eax,-0x64(%ebp)
81002cd3:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
81002cd7:	0f 87 e1 00 00 00    	ja     81002dbe <_realloc_r+0x67e>
81002cdd:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ce0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002ce3:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002ce6:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002ce9:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81002ced:	0f 86 90 00 00 00    	jbe    81002d83 <_realloc_r+0x643>
81002cf3:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002cf6:	8d 42 04             	lea    0x4(%edx),%eax
81002cf9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002cfc:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002cff:	8d 48 04             	lea    0x4(%eax),%ecx
81002d02:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d05:	8b 12                	mov    (%edx),%edx
81002d07:	89 10                	mov    %edx,(%eax)
81002d09:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d0c:	8d 42 04             	lea    0x4(%edx),%eax
81002d0f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d12:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d15:	8d 48 04             	lea    0x4(%eax),%ecx
81002d18:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d1b:	8b 12                	mov    (%edx),%edx
81002d1d:	89 10                	mov    %edx,(%eax)
81002d1f:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
81002d23:	76 5e                	jbe    81002d83 <_realloc_r+0x643>
81002d25:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d28:	8d 42 04             	lea    0x4(%edx),%eax
81002d2b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d2e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d31:	8d 48 04             	lea    0x4(%eax),%ecx
81002d34:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d37:	8b 12                	mov    (%edx),%edx
81002d39:	89 10                	mov    %edx,(%eax)
81002d3b:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d3e:	8d 42 04             	lea    0x4(%edx),%eax
81002d41:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d44:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d47:	8d 48 04             	lea    0x4(%eax),%ecx
81002d4a:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d4d:	8b 12                	mov    (%edx),%edx
81002d4f:	89 10                	mov    %edx,(%eax)
81002d51:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81002d55:	76 2c                	jbe    81002d83 <_realloc_r+0x643>
81002d57:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d5a:	8d 42 04             	lea    0x4(%edx),%eax
81002d5d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d60:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d63:	8d 48 04             	lea    0x4(%eax),%ecx
81002d66:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d69:	8b 12                	mov    (%edx),%edx
81002d6b:	89 10                	mov    %edx,(%eax)
81002d6d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d70:	8d 42 04             	lea    0x4(%edx),%eax
81002d73:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d76:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d79:	8d 48 04             	lea    0x4(%eax),%ecx
81002d7c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d7f:	8b 12                	mov    (%edx),%edx
81002d81:	89 10                	mov    %edx,(%eax)
81002d83:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d86:	8d 42 04             	lea    0x4(%edx),%eax
81002d89:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d8c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d8f:	8d 48 04             	lea    0x4(%eax),%ecx
81002d92:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d95:	8b 12                	mov    (%edx),%edx
81002d97:	89 10                	mov    %edx,(%eax)
81002d99:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d9c:	8d 42 04             	lea    0x4(%edx),%eax
81002d9f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002da2:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002da5:	8d 48 04             	lea    0x4(%eax),%ecx
81002da8:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002dab:	8b 12                	mov    (%edx),%edx
81002dad:	89 10                	mov    %edx,(%eax)
81002daf:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002db2:	8b 10                	mov    (%eax),%edx
81002db4:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002db7:	89 10                	mov    %edx,(%eax)
81002db9:	e9 ad 01 00 00       	jmp    81002f6b <_realloc_r+0x82b>
81002dbe:	83 ec 04             	sub    $0x4,%esp
81002dc1:	ff 75 9c             	push   -0x64(%ebp)
81002dc4:	ff 75 0c             	push   0xc(%ebp)
81002dc7:	ff 75 a8             	push   -0x58(%ebp)
81002dca:	e8 01 ed ff ff       	call   81001ad0 <memmove>
81002dcf:	83 c4 10             	add    $0x10,%esp
81002dd2:	e9 94 01 00 00       	jmp    81002f6b <_realloc_r+0x82b>
81002dd7:	83 ec 08             	sub    $0x8,%esp
81002dda:	ff 75 10             	push   0x10(%ebp)
81002ddd:	ff 75 08             	push   0x8(%ebp)
81002de0:	e8 da e3 ff ff       	call   810011bf <_malloc_r>
81002de5:	83 c4 10             	add    $0x10,%esp
81002de8:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002deb:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81002def:	75 18                	jne    81002e09 <_realloc_r+0x6c9>
81002df1:	83 ec 0c             	sub    $0xc,%esp
81002df4:	ff 75 08             	push   0x8(%ebp)
81002df7:	e8 ef ed ff ff       	call   81001beb <__malloc_unlock>
81002dfc:	83 c4 10             	add    $0x10,%esp
81002dff:	b8 00 00 00 00       	mov    $0x0,%eax
81002e04:	e9 0f 02 00 00       	jmp    81003018 <_realloc_r+0x8d8>
81002e09:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002e0c:	83 e8 08             	sub    $0x8,%eax
81002e0f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002e12:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002e15:	8b 40 04             	mov    0x4(%eax),%eax
81002e18:	83 e0 fe             	and    $0xfffffffe,%eax
81002e1b:	89 c2                	mov    %eax,%edx
81002e1d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002e20:	01 d0                	add    %edx,%eax
81002e22:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81002e25:	75 17                	jne    81002e3e <_realloc_r+0x6fe>
81002e27:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e2a:	8b 40 04             	mov    0x4(%eax),%eax
81002e2d:	83 e0 fc             	and    $0xfffffffc,%eax
81002e30:	01 45 f0             	add    %eax,-0x10(%ebp)
81002e33:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002e36:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002e39:	e9 2d 01 00 00       	jmp    81002f6b <_realloc_r+0x82b>
81002e3e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002e41:	83 e8 04             	sub    $0x4,%eax
81002e44:	89 45 98             	mov    %eax,-0x68(%ebp)
81002e47:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81002e4b:	0f 87 de 00 00 00    	ja     81002f2f <_realloc_r+0x7ef>
81002e51:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e54:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002e57:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002e5a:	89 45 c8             	mov    %eax,-0x38(%ebp)
81002e5d:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81002e61:	0f 86 90 00 00 00    	jbe    81002ef7 <_realloc_r+0x7b7>
81002e67:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002e6a:	8d 42 04             	lea    0x4(%edx),%eax
81002e6d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002e70:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002e73:	8d 48 04             	lea    0x4(%eax),%ecx
81002e76:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002e79:	8b 12                	mov    (%edx),%edx
81002e7b:	89 10                	mov    %edx,(%eax)
81002e7d:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002e80:	8d 42 04             	lea    0x4(%edx),%eax
81002e83:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002e86:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002e89:	8d 48 04             	lea    0x4(%eax),%ecx
81002e8c:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002e8f:	8b 12                	mov    (%edx),%edx
81002e91:	89 10                	mov    %edx,(%eax)
81002e93:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81002e97:	76 5e                	jbe    81002ef7 <_realloc_r+0x7b7>
81002e99:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002e9c:	8d 42 04             	lea    0x4(%edx),%eax
81002e9f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002ea2:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002ea5:	8d 48 04             	lea    0x4(%eax),%ecx
81002ea8:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002eab:	8b 12                	mov    (%edx),%edx
81002ead:	89 10                	mov    %edx,(%eax)
81002eaf:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002eb2:	8d 42 04             	lea    0x4(%edx),%eax
81002eb5:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002eb8:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002ebb:	8d 48 04             	lea    0x4(%eax),%ecx
81002ebe:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002ec1:	8b 12                	mov    (%edx),%edx
81002ec3:	89 10                	mov    %edx,(%eax)
81002ec5:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
81002ec9:	76 2c                	jbe    81002ef7 <_realloc_r+0x7b7>
81002ecb:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002ece:	8d 42 04             	lea    0x4(%edx),%eax
81002ed1:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002ed4:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002ed7:	8d 48 04             	lea    0x4(%eax),%ecx
81002eda:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002edd:	8b 12                	mov    (%edx),%edx
81002edf:	89 10                	mov    %edx,(%eax)
81002ee1:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002ee4:	8d 42 04             	lea    0x4(%edx),%eax
81002ee7:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002eea:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002eed:	8d 48 04             	lea    0x4(%eax),%ecx
81002ef0:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002ef3:	8b 12                	mov    (%edx),%edx
81002ef5:	89 10                	mov    %edx,(%eax)
81002ef7:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002efa:	8d 42 04             	lea    0x4(%edx),%eax
81002efd:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002f00:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f03:	8d 48 04             	lea    0x4(%eax),%ecx
81002f06:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002f09:	8b 12                	mov    (%edx),%edx
81002f0b:	89 10                	mov    %edx,(%eax)
81002f0d:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002f10:	8d 42 04             	lea    0x4(%edx),%eax
81002f13:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002f16:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f19:	8d 48 04             	lea    0x4(%eax),%ecx
81002f1c:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002f1f:	8b 12                	mov    (%edx),%edx
81002f21:	89 10                	mov    %edx,(%eax)
81002f23:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002f26:	8b 10                	mov    (%eax),%edx
81002f28:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f2b:	89 10                	mov    %edx,(%eax)
81002f2d:	eb 14                	jmp    81002f43 <_realloc_r+0x803>
81002f2f:	83 ec 04             	sub    $0x4,%esp
81002f32:	ff 75 98             	push   -0x68(%ebp)
81002f35:	ff 75 0c             	push   0xc(%ebp)
81002f38:	ff 75 a8             	push   -0x58(%ebp)
81002f3b:	e8 90 eb ff ff       	call   81001ad0 <memmove>
81002f40:	83 c4 10             	add    $0x10,%esp
81002f43:	83 ec 08             	sub    $0x8,%esp
81002f46:	ff 75 0c             	push   0xc(%ebp)
81002f49:	ff 75 08             	push   0x8(%ebp)
81002f4c:	e8 c5 0a 00 00       	call   81003a16 <_free_r>
81002f51:	83 c4 10             	add    $0x10,%esp
81002f54:	83 ec 0c             	sub    $0xc,%esp
81002f57:	ff 75 08             	push   0x8(%ebp)
81002f5a:	e8 8c ec ff ff       	call   81001beb <__malloc_unlock>
81002f5f:	83 c4 10             	add    $0x10,%esp
81002f62:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002f65:	e9 ae 00 00 00       	jmp    81003018 <_realloc_r+0x8d8>
81002f6a:	90                   	nop
81002f6b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f6e:	2b 45 bc             	sub    -0x44(%ebp),%eax
81002f71:	89 45 94             	mov    %eax,-0x6c(%ebp)
81002f74:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81002f78:	76 5d                	jbe    81002fd7 <_realloc_r+0x897>
81002f7a:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002f7d:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002f80:	01 d0                	add    %edx,%eax
81002f82:	89 45 90             	mov    %eax,-0x70(%ebp)
81002f85:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f88:	8b 40 04             	mov    0x4(%eax),%eax
81002f8b:	83 e0 01             	and    $0x1,%eax
81002f8e:	0b 45 bc             	or     -0x44(%ebp),%eax
81002f91:	89 c2                	mov    %eax,%edx
81002f93:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f96:	89 50 04             	mov    %edx,0x4(%eax)
81002f99:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002f9c:	83 c8 01             	or     $0x1,%eax
81002f9f:	89 c2                	mov    %eax,%edx
81002fa1:	8b 45 90             	mov    -0x70(%ebp),%eax
81002fa4:	89 50 04             	mov    %edx,0x4(%eax)
81002fa7:	8b 55 90             	mov    -0x70(%ebp),%edx
81002faa:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002fad:	01 d0                	add    %edx,%eax
81002faf:	8b 50 04             	mov    0x4(%eax),%edx
81002fb2:	8b 4d 90             	mov    -0x70(%ebp),%ecx
81002fb5:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002fb8:	01 c8                	add    %ecx,%eax
81002fba:	83 ca 01             	or     $0x1,%edx
81002fbd:	89 50 04             	mov    %edx,0x4(%eax)
81002fc0:	8b 45 90             	mov    -0x70(%ebp),%eax
81002fc3:	83 c0 08             	add    $0x8,%eax
81002fc6:	83 ec 08             	sub    $0x8,%esp
81002fc9:	50                   	push   %eax
81002fca:	ff 75 08             	push   0x8(%ebp)
81002fcd:	e8 44 0a 00 00       	call   81003a16 <_free_r>
81002fd2:	83 c4 10             	add    $0x10,%esp
81002fd5:	eb 2d                	jmp    81003004 <_realloc_r+0x8c4>
81002fd7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fda:	8b 40 04             	mov    0x4(%eax),%eax
81002fdd:	83 e0 01             	and    $0x1,%eax
81002fe0:	0b 45 f0             	or     -0x10(%ebp),%eax
81002fe3:	89 c2                	mov    %eax,%edx
81002fe5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fe8:	89 50 04             	mov    %edx,0x4(%eax)
81002feb:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002fee:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002ff1:	01 d0                	add    %edx,%eax
81002ff3:	8b 50 04             	mov    0x4(%eax),%edx
81002ff6:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002ff9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002ffc:	01 c8                	add    %ecx,%eax
81002ffe:	83 ca 01             	or     $0x1,%edx
81003001:	89 50 04             	mov    %edx,0x4(%eax)
81003004:	83 ec 0c             	sub    $0xc,%esp
81003007:	ff 75 08             	push   0x8(%ebp)
8100300a:	e8 dc eb ff ff       	call   81001beb <__malloc_unlock>
8100300f:	83 c4 10             	add    $0x10,%esp
81003012:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003015:	83 c0 08             	add    $0x8,%eax
81003018:	c9                   	leave  
81003019:	c3                   	ret    

8100301a <_sbrk_r>:
8100301a:	55                   	push   %ebp
8100301b:	89 e5                	mov    %esp,%ebp
8100301d:	83 ec 18             	sub    $0x18,%esp
81003020:	c7 05 30 55 00 81 00 	movl   $0x0,0x81005530
81003027:	00 00 00 
8100302a:	83 ec 0c             	sub    $0xc,%esp
8100302d:	ff 75 0c             	push   0xc(%ebp)
81003030:	e8 88 d3 ff ff       	call   810003bd <sbrk>
81003035:	83 c4 10             	add    $0x10,%esp
81003038:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100303b:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100303f:	75 14                	jne    81003055 <_sbrk_r+0x3b>
81003041:	a1 30 55 00 81       	mov    0x81005530,%eax
81003046:	85 c0                	test   %eax,%eax
81003048:	74 0b                	je     81003055 <_sbrk_r+0x3b>
8100304a:	8b 15 30 55 00 81    	mov    0x81005530,%edx
81003050:	8b 45 08             	mov    0x8(%ebp),%eax
81003053:	89 10                	mov    %edx,(%eax)
81003055:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003058:	c9                   	leave  
81003059:	c3                   	ret    

8100305a <__sread>:
8100305a:	55                   	push   %ebp
8100305b:	89 e5                	mov    %esp,%ebp
8100305d:	56                   	push   %esi
8100305e:	53                   	push   %ebx
8100305f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003062:	8b 55 14             	mov    0x14(%ebp),%edx
81003065:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003069:	98                   	cwtl   
8100306a:	52                   	push   %edx
8100306b:	ff 75 10             	push   0x10(%ebp)
8100306e:	50                   	push   %eax
8100306f:	ff 75 08             	push   0x8(%ebp)
81003072:	e8 dd 11 00 00       	call   81004254 <_read_r>
81003077:	83 c4 10             	add    $0x10,%esp
8100307a:	89 c6                	mov    %eax,%esi
8100307c:	85 f6                	test   %esi,%esi
8100307e:	78 0a                	js     8100308a <__sread+0x30>
81003080:	8b 43 50             	mov    0x50(%ebx),%eax
81003083:	01 f0                	add    %esi,%eax
81003085:	89 43 50             	mov    %eax,0x50(%ebx)
81003088:	eb 0b                	jmp    81003095 <__sread+0x3b>
8100308a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100308e:	80 e4 ef             	and    $0xef,%ah
81003091:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003095:	89 f0                	mov    %esi,%eax
81003097:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100309a:	5b                   	pop    %ebx
8100309b:	5e                   	pop    %esi
8100309c:	5d                   	pop    %ebp
8100309d:	c3                   	ret    

8100309e <__seofread>:
8100309e:	55                   	push   %ebp
8100309f:	89 e5                	mov    %esp,%ebp
810030a1:	b8 00 00 00 00       	mov    $0x0,%eax
810030a6:	5d                   	pop    %ebp
810030a7:	c3                   	ret    

810030a8 <__swrite>:
810030a8:	55                   	push   %ebp
810030a9:	89 e5                	mov    %esp,%ebp
810030ab:	53                   	push   %ebx
810030ac:	83 ec 14             	sub    $0x14,%esp
810030af:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810030b2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810030b6:	98                   	cwtl   
810030b7:	25 00 01 00 00       	and    $0x100,%eax
810030bc:	85 c0                	test   %eax,%eax
810030be:	74 15                	je     810030d5 <__swrite+0x2d>
810030c0:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810030c4:	98                   	cwtl   
810030c5:	6a 02                	push   $0x2
810030c7:	6a 00                	push   $0x0
810030c9:	50                   	push   %eax
810030ca:	ff 75 08             	push   0x8(%ebp)
810030cd:	e8 26 0f 00 00       	call   81003ff8 <_lseek_r>
810030d2:	83 c4 10             	add    $0x10,%esp
810030d5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810030d9:	80 e4 ef             	and    $0xef,%ah
810030dc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810030e0:	8b 55 14             	mov    0x14(%ebp),%edx
810030e3:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810030e7:	98                   	cwtl   
810030e8:	52                   	push   %edx
810030e9:	ff 75 10             	push   0x10(%ebp)
810030ec:	50                   	push   %eax
810030ed:	ff 75 08             	push   0x8(%ebp)
810030f0:	e8 b0 01 00 00       	call   810032a5 <_write_r>
810030f5:	83 c4 10             	add    $0x10,%esp
810030f8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810030fb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810030fe:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003101:	c9                   	leave  
81003102:	c3                   	ret    

81003103 <__sseek>:
81003103:	55                   	push   %ebp
81003104:	89 e5                	mov    %esp,%ebp
81003106:	56                   	push   %esi
81003107:	53                   	push   %ebx
81003108:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100310b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100310f:	98                   	cwtl   
81003110:	ff 75 14             	push   0x14(%ebp)
81003113:	ff 75 10             	push   0x10(%ebp)
81003116:	50                   	push   %eax
81003117:	ff 75 08             	push   0x8(%ebp)
8100311a:	e8 d9 0e 00 00       	call   81003ff8 <_lseek_r>
8100311f:	83 c4 10             	add    $0x10,%esp
81003122:	89 c6                	mov    %eax,%esi
81003124:	83 fe ff             	cmp    $0xffffffff,%esi
81003127:	75 0d                	jne    81003136 <__sseek+0x33>
81003129:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100312d:	80 e4 ef             	and    $0xef,%ah
81003130:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003134:	eb 0e                	jmp    81003144 <__sseek+0x41>
81003136:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100313a:	80 cc 10             	or     $0x10,%ah
8100313d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003141:	89 73 50             	mov    %esi,0x50(%ebx)
81003144:	89 f0                	mov    %esi,%eax
81003146:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003149:	5b                   	pop    %ebx
8100314a:	5e                   	pop    %esi
8100314b:	5d                   	pop    %ebp
8100314c:	c3                   	ret    

8100314d <__sclose>:
8100314d:	55                   	push   %ebp
8100314e:	89 e5                	mov    %esp,%ebp
81003150:	83 ec 18             	sub    $0x18,%esp
81003153:	8b 45 0c             	mov    0xc(%ebp),%eax
81003156:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003159:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100315c:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003160:	98                   	cwtl   
81003161:	83 ec 08             	sub    $0x8,%esp
81003164:	50                   	push   %eax
81003165:	ff 75 08             	push   0x8(%ebp)
81003168:	e8 d9 02 00 00       	call   81003446 <_close_r>
8100316d:	83 c4 10             	add    $0x10,%esp
81003170:	c9                   	leave  
81003171:	c3                   	ret    

81003172 <__swbuf_r>:
81003172:	55                   	push   %ebp
81003173:	89 e5                	mov    %esp,%ebp
81003175:	57                   	push   %edi
81003176:	56                   	push   %esi
81003177:	53                   	push   %ebx
81003178:	83 ec 1c             	sub    $0x1c,%esp
8100317b:	8b 7d 0c             	mov    0xc(%ebp),%edi
8100317e:	8b 5d 10             	mov    0x10(%ebp),%ebx
81003181:	8b 45 08             	mov    0x8(%ebp),%eax
81003184:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003187:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100318b:	74 18                	je     810031a5 <__swbuf_r+0x33>
8100318d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003190:	8b 40 38             	mov    0x38(%eax),%eax
81003193:	85 c0                	test   %eax,%eax
81003195:	75 0e                	jne    810031a5 <__swbuf_r+0x33>
81003197:	83 ec 0c             	sub    $0xc,%esp
8100319a:	ff 75 e4             	push   -0x1c(%ebp)
8100319d:	e8 0c d7 ff ff       	call   810008ae <__sinit>
810031a2:	83 c4 10             	add    $0x10,%esp
810031a5:	8b 43 18             	mov    0x18(%ebx),%eax
810031a8:	89 43 08             	mov    %eax,0x8(%ebx)
810031ab:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810031af:	98                   	cwtl   
810031b0:	83 e0 08             	and    $0x8,%eax
810031b3:	85 c0                	test   %eax,%eax
810031b5:	74 07                	je     810031be <__swbuf_r+0x4c>
810031b7:	8b 43 10             	mov    0x10(%ebx),%eax
810031ba:	85 c0                	test   %eax,%eax
810031bc:	75 1d                	jne    810031db <__swbuf_r+0x69>
810031be:	83 ec 08             	sub    $0x8,%esp
810031c1:	53                   	push   %ebx
810031c2:	ff 75 08             	push   0x8(%ebp)
810031c5:	e8 21 01 00 00       	call   810032eb <__swsetup_r>
810031ca:	83 c4 10             	add    $0x10,%esp
810031cd:	85 c0                	test   %eax,%eax
810031cf:	74 0a                	je     810031db <__swbuf_r+0x69>
810031d1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810031d6:	e9 a1 00 00 00       	jmp    8100327c <__swbuf_r+0x10a>
810031db:	89 f8                	mov    %edi,%eax
810031dd:	0f b6 f8             	movzbl %al,%edi
810031e0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810031e4:	98                   	cwtl   
810031e5:	25 00 20 00 00       	and    $0x2000,%eax
810031ea:	85 c0                	test   %eax,%eax
810031ec:	75 14                	jne    81003202 <__swbuf_r+0x90>
810031ee:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810031f2:	80 cc 20             	or     $0x20,%ah
810031f5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810031f9:	8b 43 64             	mov    0x64(%ebx),%eax
810031fc:	80 e4 df             	and    $0xdf,%ah
810031ff:	89 43 64             	mov    %eax,0x64(%ebx)
81003202:	8b 03                	mov    (%ebx),%eax
81003204:	8b 53 10             	mov    0x10(%ebx),%edx
81003207:	29 d0                	sub    %edx,%eax
81003209:	89 c6                	mov    %eax,%esi
8100320b:	8b 43 14             	mov    0x14(%ebx),%eax
8100320e:	39 c6                	cmp    %eax,%esi
81003210:	7c 1f                	jl     81003231 <__swbuf_r+0xbf>
81003212:	83 ec 08             	sub    $0x8,%esp
81003215:	53                   	push   %ebx
81003216:	ff 75 08             	push   0x8(%ebp)
81003219:	e8 b2 05 00 00       	call   810037d0 <_fflush_r>
8100321e:	83 c4 10             	add    $0x10,%esp
81003221:	85 c0                	test   %eax,%eax
81003223:	74 07                	je     8100322c <__swbuf_r+0xba>
81003225:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100322a:	eb 50                	jmp    8100327c <__swbuf_r+0x10a>
8100322c:	be 00 00 00 00       	mov    $0x0,%esi
81003231:	8b 43 08             	mov    0x8(%ebx),%eax
81003234:	83 e8 01             	sub    $0x1,%eax
81003237:	89 43 08             	mov    %eax,0x8(%ebx)
8100323a:	8b 03                	mov    (%ebx),%eax
8100323c:	8d 50 01             	lea    0x1(%eax),%edx
8100323f:	89 13                	mov    %edx,(%ebx)
81003241:	89 fa                	mov    %edi,%edx
81003243:	88 10                	mov    %dl,(%eax)
81003245:	83 c6 01             	add    $0x1,%esi
81003248:	8b 43 14             	mov    0x14(%ebx),%eax
8100324b:	39 c6                	cmp    %eax,%esi
8100324d:	74 11                	je     81003260 <__swbuf_r+0xee>
8100324f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003253:	98                   	cwtl   
81003254:	83 e0 01             	and    $0x1,%eax
81003257:	85 c0                	test   %eax,%eax
81003259:	74 1f                	je     8100327a <__swbuf_r+0x108>
8100325b:	83 ff 0a             	cmp    $0xa,%edi
8100325e:	75 1a                	jne    8100327a <__swbuf_r+0x108>
81003260:	83 ec 08             	sub    $0x8,%esp
81003263:	53                   	push   %ebx
81003264:	ff 75 08             	push   0x8(%ebp)
81003267:	e8 64 05 00 00       	call   810037d0 <_fflush_r>
8100326c:	83 c4 10             	add    $0x10,%esp
8100326f:	85 c0                	test   %eax,%eax
81003271:	74 07                	je     8100327a <__swbuf_r+0x108>
81003273:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003278:	eb 02                	jmp    8100327c <__swbuf_r+0x10a>
8100327a:	89 f8                	mov    %edi,%eax
8100327c:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100327f:	5b                   	pop    %ebx
81003280:	5e                   	pop    %esi
81003281:	5f                   	pop    %edi
81003282:	5d                   	pop    %ebp
81003283:	c3                   	ret    

81003284 <__swbuf>:
81003284:	55                   	push   %ebp
81003285:	89 e5                	mov    %esp,%ebp
81003287:	83 ec 08             	sub    $0x8,%esp
8100328a:	8b 55 08             	mov    0x8(%ebp),%edx
8100328d:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81003290:	a1 04 4f 00 81       	mov    0x81004f04,%eax
81003295:	83 ec 04             	sub    $0x4,%esp
81003298:	51                   	push   %ecx
81003299:	52                   	push   %edx
8100329a:	50                   	push   %eax
8100329b:	e8 d2 fe ff ff       	call   81003172 <__swbuf_r>
810032a0:	83 c4 10             	add    $0x10,%esp
810032a3:	c9                   	leave  
810032a4:	c3                   	ret    

810032a5 <_write_r>:
810032a5:	55                   	push   %ebp
810032a6:	89 e5                	mov    %esp,%ebp
810032a8:	83 ec 18             	sub    $0x18,%esp
810032ab:	c7 05 30 55 00 81 00 	movl   $0x0,0x81005530
810032b2:	00 00 00 
810032b5:	83 ec 04             	sub    $0x4,%esp
810032b8:	ff 75 14             	push   0x14(%ebp)
810032bb:	ff 75 10             	push   0x10(%ebp)
810032be:	ff 75 0c             	push   0xc(%ebp)
810032c1:	e8 34 d0 ff ff       	call   810002fa <write>
810032c6:	83 c4 10             	add    $0x10,%esp
810032c9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810032cc:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810032d0:	75 14                	jne    810032e6 <_write_r+0x41>
810032d2:	a1 30 55 00 81       	mov    0x81005530,%eax
810032d7:	85 c0                	test   %eax,%eax
810032d9:	74 0b                	je     810032e6 <_write_r+0x41>
810032db:	8b 15 30 55 00 81    	mov    0x81005530,%edx
810032e1:	8b 45 08             	mov    0x8(%ebp),%eax
810032e4:	89 10                	mov    %edx,(%eax)
810032e6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810032e9:	c9                   	leave  
810032ea:	c3                   	ret    

810032eb <__swsetup_r>:
810032eb:	55                   	push   %ebp
810032ec:	89 e5                	mov    %esp,%ebp
810032ee:	53                   	push   %ebx
810032ef:	83 ec 14             	sub    $0x14,%esp
810032f2:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810032f5:	a1 04 4f 00 81       	mov    0x81004f04,%eax
810032fa:	89 45 f4             	mov    %eax,-0xc(%ebp)
810032fd:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003301:	74 18                	je     8100331b <__swsetup_r+0x30>
81003303:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003306:	8b 40 38             	mov    0x38(%eax),%eax
81003309:	85 c0                	test   %eax,%eax
8100330b:	75 0e                	jne    8100331b <__swsetup_r+0x30>
8100330d:	83 ec 0c             	sub    $0xc,%esp
81003310:	ff 75 f4             	push   -0xc(%ebp)
81003313:	e8 96 d5 ff ff       	call   810008ae <__sinit>
81003318:	83 c4 10             	add    $0x10,%esp
8100331b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100331f:	98                   	cwtl   
81003320:	83 e0 08             	and    $0x8,%eax
81003323:	85 c0                	test   %eax,%eax
81003325:	0f 85 82 00 00 00    	jne    810033ad <__swsetup_r+0xc2>
8100332b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100332f:	98                   	cwtl   
81003330:	83 e0 10             	and    $0x10,%eax
81003333:	85 c0                	test   %eax,%eax
81003335:	75 1e                	jne    81003355 <__swsetup_r+0x6a>
81003337:	8b 45 08             	mov    0x8(%ebp),%eax
8100333a:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81003340:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003344:	83 c8 40             	or     $0x40,%eax
81003347:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100334b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003350:	e9 ec 00 00 00       	jmp    81003441 <__swsetup_r+0x156>
81003355:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003359:	98                   	cwtl   
8100335a:	83 e0 04             	and    $0x4,%eax
8100335d:	85 c0                	test   %eax,%eax
8100335f:	74 41                	je     810033a2 <__swsetup_r+0xb7>
81003361:	8b 43 30             	mov    0x30(%ebx),%eax
81003364:	85 c0                	test   %eax,%eax
81003366:	74 23                	je     8100338b <__swsetup_r+0xa0>
81003368:	8b 53 30             	mov    0x30(%ebx),%edx
8100336b:	8d 43 40             	lea    0x40(%ebx),%eax
8100336e:	39 c2                	cmp    %eax,%edx
81003370:	74 12                	je     81003384 <__swsetup_r+0x99>
81003372:	8b 43 30             	mov    0x30(%ebx),%eax
81003375:	83 ec 08             	sub    $0x8,%esp
81003378:	50                   	push   %eax
81003379:	ff 75 08             	push   0x8(%ebp)
8100337c:	e8 95 06 00 00       	call   81003a16 <_free_r>
81003381:	83 c4 10             	add    $0x10,%esp
81003384:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100338b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100338f:	83 e0 db             	and    $0xffffffdb,%eax
81003392:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003396:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100339d:	8b 43 10             	mov    0x10(%ebx),%eax
810033a0:	89 03                	mov    %eax,(%ebx)
810033a2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033a6:	83 c8 08             	or     $0x8,%eax
810033a9:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810033ad:	8b 43 10             	mov    0x10(%ebx),%eax
810033b0:	85 c0                	test   %eax,%eax
810033b2:	75 2b                	jne    810033df <__swsetup_r+0xf4>
810033b4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033b8:	98                   	cwtl   
810033b9:	25 00 02 00 00       	and    $0x200,%eax
810033be:	85 c0                	test   %eax,%eax
810033c0:	74 0e                	je     810033d0 <__swsetup_r+0xe5>
810033c2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033c6:	98                   	cwtl   
810033c7:	25 80 00 00 00       	and    $0x80,%eax
810033cc:	85 c0                	test   %eax,%eax
810033ce:	74 0f                	je     810033df <__swsetup_r+0xf4>
810033d0:	83 ec 08             	sub    $0x8,%esp
810033d3:	53                   	push   %ebx
810033d4:	ff 75 08             	push   0x8(%ebp)
810033d7:	e8 62 0c 00 00       	call   8100403e <__smakebuf_r>
810033dc:	83 c4 10             	add    $0x10,%esp
810033df:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033e3:	98                   	cwtl   
810033e4:	83 e0 01             	and    $0x1,%eax
810033e7:	85 c0                	test   %eax,%eax
810033e9:	74 11                	je     810033fc <__swsetup_r+0x111>
810033eb:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810033f2:	8b 43 14             	mov    0x14(%ebx),%eax
810033f5:	f7 d8                	neg    %eax
810033f7:	89 43 18             	mov    %eax,0x18(%ebx)
810033fa:	eb 19                	jmp    81003415 <__swsetup_r+0x12a>
810033fc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003400:	98                   	cwtl   
81003401:	83 e0 02             	and    $0x2,%eax
81003404:	85 c0                	test   %eax,%eax
81003406:	75 05                	jne    8100340d <__swsetup_r+0x122>
81003408:	8b 43 14             	mov    0x14(%ebx),%eax
8100340b:	eb 05                	jmp    81003412 <__swsetup_r+0x127>
8100340d:	b8 00 00 00 00       	mov    $0x0,%eax
81003412:	89 43 08             	mov    %eax,0x8(%ebx)
81003415:	8b 43 10             	mov    0x10(%ebx),%eax
81003418:	85 c0                	test   %eax,%eax
8100341a:	75 20                	jne    8100343c <__swsetup_r+0x151>
8100341c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003420:	98                   	cwtl   
81003421:	25 80 00 00 00       	and    $0x80,%eax
81003426:	85 c0                	test   %eax,%eax
81003428:	74 12                	je     8100343c <__swsetup_r+0x151>
8100342a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100342e:	83 c8 40             	or     $0x40,%eax
81003431:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003435:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100343a:	eb 05                	jmp    81003441 <__swsetup_r+0x156>
8100343c:	b8 00 00 00 00       	mov    $0x0,%eax
81003441:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003444:	c9                   	leave  
81003445:	c3                   	ret    

81003446 <_close_r>:
81003446:	55                   	push   %ebp
81003447:	89 e5                	mov    %esp,%ebp
81003449:	83 ec 18             	sub    $0x18,%esp
8100344c:	c7 05 30 55 00 81 00 	movl   $0x0,0x81005530
81003453:	00 00 00 
81003456:	83 ec 0c             	sub    $0xc,%esp
81003459:	ff 75 0c             	push   0xc(%ebp)
8100345c:	e8 c6 ce ff ff       	call   81000327 <close>
81003461:	83 c4 10             	add    $0x10,%esp
81003464:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003467:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100346b:	75 14                	jne    81003481 <_close_r+0x3b>
8100346d:	a1 30 55 00 81       	mov    0x81005530,%eax
81003472:	85 c0                	test   %eax,%eax
81003474:	74 0b                	je     81003481 <_close_r+0x3b>
81003476:	8b 15 30 55 00 81    	mov    0x81005530,%edx
8100347c:	8b 45 08             	mov    0x8(%ebp),%eax
8100347f:	89 10                	mov    %edx,(%eax)
81003481:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003484:	c9                   	leave  
81003485:	c3                   	ret    

81003486 <_fclose_r>:
81003486:	55                   	push   %ebp
81003487:	89 e5                	mov    %esp,%ebp
81003489:	53                   	push   %ebx
8100348a:	83 ec 14             	sub    $0x14,%esp
8100348d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003490:	85 db                	test   %ebx,%ebx
81003492:	75 0a                	jne    8100349e <_fclose_r+0x18>
81003494:	b8 00 00 00 00       	mov    $0x0,%eax
81003499:	e9 ea 00 00 00       	jmp    81003588 <_fclose_r+0x102>
8100349e:	8b 45 08             	mov    0x8(%ebp),%eax
810034a1:	89 45 f0             	mov    %eax,-0x10(%ebp)
810034a4:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810034a8:	74 18                	je     810034c2 <_fclose_r+0x3c>
810034aa:	8b 45 f0             	mov    -0x10(%ebp),%eax
810034ad:	8b 40 38             	mov    0x38(%eax),%eax
810034b0:	85 c0                	test   %eax,%eax
810034b2:	75 0e                	jne    810034c2 <_fclose_r+0x3c>
810034b4:	83 ec 0c             	sub    $0xc,%esp
810034b7:	ff 75 f0             	push   -0x10(%ebp)
810034ba:	e8 ef d3 ff ff       	call   810008ae <__sinit>
810034bf:	83 c4 10             	add    $0x10,%esp
810034c2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810034c6:	66 85 c0             	test   %ax,%ax
810034c9:	75 0a                	jne    810034d5 <_fclose_r+0x4f>
810034cb:	b8 00 00 00 00       	mov    $0x0,%eax
810034d0:	e9 b3 00 00 00       	jmp    81003588 <_fclose_r+0x102>
810034d5:	83 ec 08             	sub    $0x8,%esp
810034d8:	53                   	push   %ebx
810034d9:	ff 75 08             	push   0x8(%ebp)
810034dc:	e8 c9 00 00 00       	call   810035aa <__sflush_r>
810034e1:	83 c4 10             	add    $0x10,%esp
810034e4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810034e7:	8b 43 2c             	mov    0x2c(%ebx),%eax
810034ea:	85 c0                	test   %eax,%eax
810034ec:	74 1d                	je     8100350b <_fclose_r+0x85>
810034ee:	8b 43 2c             	mov    0x2c(%ebx),%eax
810034f1:	8b 53 1c             	mov    0x1c(%ebx),%edx
810034f4:	83 ec 08             	sub    $0x8,%esp
810034f7:	52                   	push   %edx
810034f8:	ff 75 08             	push   0x8(%ebp)
810034fb:	ff d0                	call   *%eax
810034fd:	83 c4 10             	add    $0x10,%esp
81003500:	85 c0                	test   %eax,%eax
81003502:	79 07                	jns    8100350b <_fclose_r+0x85>
81003504:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
8100350b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100350f:	98                   	cwtl   
81003510:	25 80 00 00 00       	and    $0x80,%eax
81003515:	85 c0                	test   %eax,%eax
81003517:	74 12                	je     8100352b <_fclose_r+0xa5>
81003519:	8b 43 10             	mov    0x10(%ebx),%eax
8100351c:	83 ec 08             	sub    $0x8,%esp
8100351f:	50                   	push   %eax
81003520:	ff 75 08             	push   0x8(%ebp)
81003523:	e8 ee 04 00 00       	call   81003a16 <_free_r>
81003528:	83 c4 10             	add    $0x10,%esp
8100352b:	8b 43 30             	mov    0x30(%ebx),%eax
8100352e:	85 c0                	test   %eax,%eax
81003530:	74 23                	je     81003555 <_fclose_r+0xcf>
81003532:	8b 53 30             	mov    0x30(%ebx),%edx
81003535:	8d 43 40             	lea    0x40(%ebx),%eax
81003538:	39 c2                	cmp    %eax,%edx
8100353a:	74 12                	je     8100354e <_fclose_r+0xc8>
8100353c:	8b 43 30             	mov    0x30(%ebx),%eax
8100353f:	83 ec 08             	sub    $0x8,%esp
81003542:	50                   	push   %eax
81003543:	ff 75 08             	push   0x8(%ebp)
81003546:	e8 cb 04 00 00       	call   81003a16 <_free_r>
8100354b:	83 c4 10             	add    $0x10,%esp
8100354e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81003555:	8b 43 44             	mov    0x44(%ebx),%eax
81003558:	85 c0                	test   %eax,%eax
8100355a:	74 19                	je     81003575 <_fclose_r+0xef>
8100355c:	8b 43 44             	mov    0x44(%ebx),%eax
8100355f:	83 ec 08             	sub    $0x8,%esp
81003562:	50                   	push   %eax
81003563:	ff 75 08             	push   0x8(%ebp)
81003566:	e8 ab 04 00 00       	call   81003a16 <_free_r>
8100356b:	83 c4 10             	add    $0x10,%esp
8100356e:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81003575:	e8 cd d3 ff ff       	call   81000947 <__sfp_lock_acquire>
8100357a:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81003580:	e8 c8 d3 ff ff       	call   8100094d <__sfp_lock_release>
81003585:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003588:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100358b:	c9                   	leave  
8100358c:	c3                   	ret    

8100358d <fclose>:
8100358d:	55                   	push   %ebp
8100358e:	89 e5                	mov    %esp,%ebp
81003590:	83 ec 08             	sub    $0x8,%esp
81003593:	8b 55 08             	mov    0x8(%ebp),%edx
81003596:	a1 04 4f 00 81       	mov    0x81004f04,%eax
8100359b:	83 ec 08             	sub    $0x8,%esp
8100359e:	52                   	push   %edx
8100359f:	50                   	push   %eax
810035a0:	e8 e1 fe ff ff       	call   81003486 <_fclose_r>
810035a5:	83 c4 10             	add    $0x10,%esp
810035a8:	c9                   	leave  
810035a9:	c3                   	ret    

810035aa <__sflush_r>:
810035aa:	55                   	push   %ebp
810035ab:	89 e5                	mov    %esp,%ebp
810035ad:	57                   	push   %edi
810035ae:	56                   	push   %esi
810035af:	53                   	push   %ebx
810035b0:	83 ec 1c             	sub    $0x1c,%esp
810035b3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810035b6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810035ba:	66 89 45 de          	mov    %ax,-0x22(%ebp)
810035be:	0f bf 45 de          	movswl -0x22(%ebp),%eax
810035c2:	83 e0 08             	and    $0x8,%eax
810035c5:	85 c0                	test   %eax,%eax
810035c7:	0f 85 93 01 00 00    	jne    81003760 <__sflush_r+0x1b6>
810035cd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810035d1:	80 cc 08             	or     $0x8,%ah
810035d4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810035d8:	8b 43 04             	mov    0x4(%ebx),%eax
810035db:	85 c0                	test   %eax,%eax
810035dd:	7f 0b                	jg     810035ea <__sflush_r+0x40>
810035df:	8b 43 3c             	mov    0x3c(%ebx),%eax
810035e2:	85 c0                	test   %eax,%eax
810035e4:	0f 8e 6f 01 00 00    	jle    81003759 <__sflush_r+0x1af>
810035ea:	8b 43 28             	mov    0x28(%ebx),%eax
810035ed:	85 c0                	test   %eax,%eax
810035ef:	0f 84 64 01 00 00    	je     81003759 <__sflush_r+0x1af>
810035f5:	8b 45 08             	mov    0x8(%ebp),%eax
810035f8:	8b 00                	mov    (%eax),%eax
810035fa:	89 45 d8             	mov    %eax,-0x28(%ebp)
810035fd:	8b 45 08             	mov    0x8(%ebp),%eax
81003600:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003606:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100360a:	98                   	cwtl   
8100360b:	25 00 10 00 00       	and    $0x1000,%eax
81003610:	85 c0                	test   %eax,%eax
81003612:	74 08                	je     8100361c <__sflush_r+0x72>
81003614:	8b 43 50             	mov    0x50(%ebx),%eax
81003617:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100361a:	eb 64                	jmp    81003680 <__sflush_r+0xd6>
8100361c:	8b 43 28             	mov    0x28(%ebx),%eax
8100361f:	8b 53 1c             	mov    0x1c(%ebx),%edx
81003622:	6a 01                	push   $0x1
81003624:	6a 00                	push   $0x0
81003626:	52                   	push   %edx
81003627:	ff 75 08             	push   0x8(%ebp)
8100362a:	ff d0                	call   *%eax
8100362c:	83 c4 10             	add    $0x10,%esp
8100362f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003632:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81003636:	75 48                	jne    81003680 <__sflush_r+0xd6>
81003638:	8b 45 08             	mov    0x8(%ebp),%eax
8100363b:	8b 00                	mov    (%eax),%eax
8100363d:	85 c0                	test   %eax,%eax
8100363f:	74 3f                	je     81003680 <__sflush_r+0xd6>
81003641:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81003648:	8b 45 08             	mov    0x8(%ebp),%eax
8100364b:	8b 00                	mov    (%eax),%eax
8100364d:	83 f8 1d             	cmp    $0x1d,%eax
81003650:	74 0a                	je     8100365c <__sflush_r+0xb2>
81003652:	8b 45 08             	mov    0x8(%ebp),%eax
81003655:	8b 00                	mov    (%eax),%eax
81003657:	83 f8 16             	cmp    $0x16,%eax
8100365a:	75 11                	jne    8100366d <__sflush_r+0xc3>
8100365c:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81003663:	8b 45 08             	mov    0x8(%ebp),%eax
81003666:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003669:	89 10                	mov    %edx,(%eax)
8100366b:	eb 0b                	jmp    81003678 <__sflush_r+0xce>
8100366d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003671:	83 c8 40             	or     $0x40,%eax
81003674:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003678:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100367b:	e9 48 01 00 00       	jmp    810037c8 <__sflush_r+0x21e>
81003680:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003684:	98                   	cwtl   
81003685:	83 e0 04             	and    $0x4,%eax
81003688:	85 c0                	test   %eax,%eax
8100368a:	74 13                	je     8100369f <__sflush_r+0xf5>
8100368c:	8b 43 04             	mov    0x4(%ebx),%eax
8100368f:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81003692:	8b 43 30             	mov    0x30(%ebx),%eax
81003695:	85 c0                	test   %eax,%eax
81003697:	74 06                	je     8100369f <__sflush_r+0xf5>
81003699:	8b 43 3c             	mov    0x3c(%ebx),%eax
8100369c:	29 45 e4             	sub    %eax,-0x1c(%ebp)
8100369f:	8b 43 28             	mov    0x28(%ebx),%eax
810036a2:	8b 53 1c             	mov    0x1c(%ebx),%edx
810036a5:	6a 00                	push   $0x0
810036a7:	ff 75 e4             	push   -0x1c(%ebp)
810036aa:	52                   	push   %edx
810036ab:	ff 75 08             	push   0x8(%ebp)
810036ae:	ff d0                	call   *%eax
810036b0:	83 c4 10             	add    $0x10,%esp
810036b3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810036b6:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810036ba:	75 1d                	jne    810036d9 <__sflush_r+0x12f>
810036bc:	8b 45 08             	mov    0x8(%ebp),%eax
810036bf:	8b 00                	mov    (%eax),%eax
810036c1:	85 c0                	test   %eax,%eax
810036c3:	74 14                	je     810036d9 <__sflush_r+0x12f>
810036c5:	8b 45 08             	mov    0x8(%ebp),%eax
810036c8:	8b 00                	mov    (%eax),%eax
810036ca:	83 f8 1d             	cmp    $0x1d,%eax
810036cd:	74 0a                	je     810036d9 <__sflush_r+0x12f>
810036cf:	8b 45 08             	mov    0x8(%ebp),%eax
810036d2:	8b 00                	mov    (%eax),%eax
810036d4:	83 f8 16             	cmp    $0x16,%eax
810036d7:	75 6e                	jne    81003747 <__sflush_r+0x19d>
810036d9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810036dd:	80 e4 f7             	and    $0xf7,%ah
810036e0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810036e4:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810036eb:	8b 43 10             	mov    0x10(%ebx),%eax
810036ee:	89 03                	mov    %eax,(%ebx)
810036f0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810036f4:	98                   	cwtl   
810036f5:	25 00 10 00 00       	and    $0x1000,%eax
810036fa:	85 c0                	test   %eax,%eax
810036fc:	74 15                	je     81003713 <__sflush_r+0x169>
810036fe:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81003702:	75 09                	jne    8100370d <__sflush_r+0x163>
81003704:	8b 45 08             	mov    0x8(%ebp),%eax
81003707:	8b 00                	mov    (%eax),%eax
81003709:	85 c0                	test   %eax,%eax
8100370b:	75 06                	jne    81003713 <__sflush_r+0x169>
8100370d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003710:	89 43 50             	mov    %eax,0x50(%ebx)
81003713:	8b 45 08             	mov    0x8(%ebp),%eax
81003716:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003719:	89 10                	mov    %edx,(%eax)
8100371b:	8b 43 30             	mov    0x30(%ebx),%eax
8100371e:	85 c0                	test   %eax,%eax
81003720:	74 37                	je     81003759 <__sflush_r+0x1af>
81003722:	8b 53 30             	mov    0x30(%ebx),%edx
81003725:	8d 43 40             	lea    0x40(%ebx),%eax
81003728:	39 c2                	cmp    %eax,%edx
8100372a:	74 12                	je     8100373e <__sflush_r+0x194>
8100372c:	8b 43 30             	mov    0x30(%ebx),%eax
8100372f:	83 ec 08             	sub    $0x8,%esp
81003732:	50                   	push   %eax
81003733:	ff 75 08             	push   0x8(%ebp)
81003736:	e8 db 02 00 00       	call   81003a16 <_free_r>
8100373b:	83 c4 10             	add    $0x10,%esp
8100373e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81003745:	eb 12                	jmp    81003759 <__sflush_r+0x1af>
81003747:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100374b:	83 c8 40             	or     $0x40,%eax
8100374e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003752:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003757:	eb 6f                	jmp    810037c8 <__sflush_r+0x21e>
81003759:	b8 00 00 00 00       	mov    $0x0,%eax
8100375e:	eb 68                	jmp    810037c8 <__sflush_r+0x21e>
81003760:	8b 73 10             	mov    0x10(%ebx),%esi
81003763:	85 f6                	test   %esi,%esi
81003765:	75 07                	jne    8100376e <__sflush_r+0x1c4>
81003767:	b8 00 00 00 00       	mov    $0x0,%eax
8100376c:	eb 5a                	jmp    810037c8 <__sflush_r+0x21e>
8100376e:	8b 03                	mov    (%ebx),%eax
81003770:	29 f0                	sub    %esi,%eax
81003772:	89 c7                	mov    %eax,%edi
81003774:	89 33                	mov    %esi,(%ebx)
81003776:	0f bf 45 de          	movswl -0x22(%ebp),%eax
8100377a:	83 e0 03             	and    $0x3,%eax
8100377d:	85 c0                	test   %eax,%eax
8100377f:	75 05                	jne    81003786 <__sflush_r+0x1dc>
81003781:	8b 43 14             	mov    0x14(%ebx),%eax
81003784:	eb 05                	jmp    8100378b <__sflush_r+0x1e1>
81003786:	b8 00 00 00 00       	mov    $0x0,%eax
8100378b:	89 43 08             	mov    %eax,0x8(%ebx)
8100378e:	eb 2f                	jmp    810037bf <__sflush_r+0x215>
81003790:	8b 43 24             	mov    0x24(%ebx),%eax
81003793:	8b 53 1c             	mov    0x1c(%ebx),%edx
81003796:	57                   	push   %edi
81003797:	56                   	push   %esi
81003798:	52                   	push   %edx
81003799:	ff 75 08             	push   0x8(%ebp)
8100379c:	ff d0                	call   *%eax
8100379e:	83 c4 10             	add    $0x10,%esp
810037a1:	85 c0                	test   %eax,%eax
810037a3:	7f 12                	jg     810037b7 <__sflush_r+0x20d>
810037a5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810037a9:	83 c8 40             	or     $0x40,%eax
810037ac:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810037b0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810037b5:	eb 11                	jmp    810037c8 <__sflush_r+0x21e>
810037b7:	89 c1                	mov    %eax,%ecx
810037b9:	89 c8                	mov    %ecx,%eax
810037bb:	01 c6                	add    %eax,%esi
810037bd:	29 cf                	sub    %ecx,%edi
810037bf:	85 ff                	test   %edi,%edi
810037c1:	7f cd                	jg     81003790 <__sflush_r+0x1e6>
810037c3:	b8 00 00 00 00       	mov    $0x0,%eax
810037c8:	8d 65 f4             	lea    -0xc(%ebp),%esp
810037cb:	5b                   	pop    %ebx
810037cc:	5e                   	pop    %esi
810037cd:	5f                   	pop    %edi
810037ce:	5d                   	pop    %ebp
810037cf:	c3                   	ret    

810037d0 <_fflush_r>:
810037d0:	55                   	push   %ebp
810037d1:	89 e5                	mov    %esp,%ebp
810037d3:	53                   	push   %ebx
810037d4:	83 ec 14             	sub    $0x14,%esp
810037d7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810037da:	8b 45 08             	mov    0x8(%ebp),%eax
810037dd:	89 45 f4             	mov    %eax,-0xc(%ebp)
810037e0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810037e4:	74 18                	je     810037fe <_fflush_r+0x2e>
810037e6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810037e9:	8b 40 38             	mov    0x38(%eax),%eax
810037ec:	85 c0                	test   %eax,%eax
810037ee:	75 0e                	jne    810037fe <_fflush_r+0x2e>
810037f0:	83 ec 0c             	sub    $0xc,%esp
810037f3:	ff 75 f4             	push   -0xc(%ebp)
810037f6:	e8 b3 d0 ff ff       	call   810008ae <__sinit>
810037fb:	83 c4 10             	add    $0x10,%esp
810037fe:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003802:	66 85 c0             	test   %ax,%ax
81003805:	75 07                	jne    8100380e <_fflush_r+0x3e>
81003807:	b8 00 00 00 00       	mov    $0x0,%eax
8100380c:	eb 15                	jmp    81003823 <_fflush_r+0x53>
8100380e:	83 ec 08             	sub    $0x8,%esp
81003811:	53                   	push   %ebx
81003812:	ff 75 08             	push   0x8(%ebp)
81003815:	e8 90 fd ff ff       	call   810035aa <__sflush_r>
8100381a:	83 c4 10             	add    $0x10,%esp
8100381d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003820:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003823:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003826:	c9                   	leave  
81003827:	c3                   	ret    

81003828 <fflush>:
81003828:	55                   	push   %ebp
81003829:	89 e5                	mov    %esp,%ebp
8100382b:	83 ec 08             	sub    $0x8,%esp
8100382e:	8b 55 08             	mov    0x8(%ebp),%edx
81003831:	85 d2                	test   %edx,%edx
81003833:	75 18                	jne    8100384d <fflush+0x25>
81003835:	a1 5c 47 00 81       	mov    0x8100475c,%eax
8100383a:	83 ec 08             	sub    $0x8,%esp
8100383d:	68 d0 37 00 81       	push   $0x810037d0
81003842:	50                   	push   %eax
81003843:	e8 79 d6 ff ff       	call   81000ec1 <_fwalk_reent>
81003848:	83 c4 10             	add    $0x10,%esp
8100384b:	eb 12                	jmp    8100385f <fflush+0x37>
8100384d:	a1 04 4f 00 81       	mov    0x81004f04,%eax
81003852:	83 ec 08             	sub    $0x8,%esp
81003855:	52                   	push   %edx
81003856:	50                   	push   %eax
81003857:	e8 74 ff ff ff       	call   810037d0 <_fflush_r>
8100385c:	83 c4 10             	add    $0x10,%esp
8100385f:	c9                   	leave  
81003860:	c3                   	ret    

81003861 <__sputc_r>:
81003861:	55                   	push   %ebp
81003862:	89 e5                	mov    %esp,%ebp
81003864:	83 ec 08             	sub    $0x8,%esp
81003867:	8b 45 10             	mov    0x10(%ebp),%eax
8100386a:	8b 40 08             	mov    0x8(%eax),%eax
8100386d:	8d 50 ff             	lea    -0x1(%eax),%edx
81003870:	8b 45 10             	mov    0x10(%ebp),%eax
81003873:	89 50 08             	mov    %edx,0x8(%eax)
81003876:	8b 45 10             	mov    0x10(%ebp),%eax
81003879:	8b 40 08             	mov    0x8(%eax),%eax
8100387c:	85 c0                	test   %eax,%eax
8100387e:	79 17                	jns    81003897 <__sputc_r+0x36>
81003880:	8b 45 10             	mov    0x10(%ebp),%eax
81003883:	8b 50 08             	mov    0x8(%eax),%edx
81003886:	8b 45 10             	mov    0x10(%ebp),%eax
81003889:	8b 40 18             	mov    0x18(%eax),%eax
8100388c:	39 c2                	cmp    %eax,%edx
8100388e:	7c 21                	jl     810038b1 <__sputc_r+0x50>
81003890:	8b 45 0c             	mov    0xc(%ebp),%eax
81003893:	3c 0a                	cmp    $0xa,%al
81003895:	74 1a                	je     810038b1 <__sputc_r+0x50>
81003897:	8b 45 10             	mov    0x10(%ebp),%eax
8100389a:	8b 00                	mov    (%eax),%eax
8100389c:	8d 48 01             	lea    0x1(%eax),%ecx
8100389f:	8b 55 10             	mov    0x10(%ebp),%edx
810038a2:	89 0a                	mov    %ecx,(%edx)
810038a4:	8b 55 0c             	mov    0xc(%ebp),%edx
810038a7:	88 10                	mov    %dl,(%eax)
810038a9:	0f b6 00             	movzbl (%eax),%eax
810038ac:	0f b6 c0             	movzbl %al,%eax
810038af:	eb 14                	jmp    810038c5 <__sputc_r+0x64>
810038b1:	83 ec 04             	sub    $0x4,%esp
810038b4:	ff 75 10             	push   0x10(%ebp)
810038b7:	ff 75 0c             	push   0xc(%ebp)
810038ba:	ff 75 08             	push   0x8(%ebp)
810038bd:	e8 b0 f8 ff ff       	call   81003172 <__swbuf_r>
810038c2:	83 c4 10             	add    $0x10,%esp
810038c5:	c9                   	leave  
810038c6:	c3                   	ret    

810038c7 <__fputwc>:
810038c7:	55                   	push   %ebp
810038c8:	89 e5                	mov    %esp,%ebp
810038ca:	83 ec 18             	sub    $0x18,%esp
810038cd:	e8 f3 06 00 00       	call   81003fc5 <__locale_mb_cur_max>
810038d2:	83 f8 01             	cmp    $0x1,%eax
810038d5:	75 1e                	jne    810038f5 <__fputwc+0x2e>
810038d7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810038db:	7e 18                	jle    810038f5 <__fputwc+0x2e>
810038dd:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
810038e4:	7f 0f                	jg     810038f5 <__fputwc+0x2e>
810038e6:	8b 45 0c             	mov    0xc(%ebp),%eax
810038e9:	88 45 ef             	mov    %al,-0x11(%ebp)
810038ec:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
810038f3:	eb 3c                	jmp    81003931 <__fputwc+0x6a>
810038f5:	8b 45 10             	mov    0x10(%ebp),%eax
810038f8:	83 c0 5c             	add    $0x5c,%eax
810038fb:	50                   	push   %eax
810038fc:	ff 75 0c             	push   0xc(%ebp)
810038ff:	8d 45 ef             	lea    -0x11(%ebp),%eax
81003902:	50                   	push   %eax
81003903:	ff 75 08             	push   0x8(%ebp)
81003906:	e8 df 0b 00 00       	call   810044ea <_wcrtomb_r>
8100390b:	83 c4 10             	add    $0x10,%esp
8100390e:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003911:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81003915:	75 1a                	jne    81003931 <__fputwc+0x6a>
81003917:	8b 45 10             	mov    0x10(%ebp),%eax
8100391a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100391e:	83 c8 40             	or     $0x40,%eax
81003921:	89 c2                	mov    %eax,%edx
81003923:	8b 45 10             	mov    0x10(%ebp),%eax
81003926:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100392a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100392f:	eb 44                	jmp    81003975 <__fputwc+0xae>
81003931:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81003938:	eb 30                	jmp    8100396a <__fputwc+0xa3>
8100393a:	8d 55 ef             	lea    -0x11(%ebp),%edx
8100393d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003940:	01 d0                	add    %edx,%eax
81003942:	0f b6 00             	movzbl (%eax),%eax
81003945:	0f b6 c0             	movzbl %al,%eax
81003948:	83 ec 04             	sub    $0x4,%esp
8100394b:	ff 75 10             	push   0x10(%ebp)
8100394e:	50                   	push   %eax
8100394f:	ff 75 08             	push   0x8(%ebp)
81003952:	e8 0a ff ff ff       	call   81003861 <__sputc_r>
81003957:	83 c4 10             	add    $0x10,%esp
8100395a:	83 f8 ff             	cmp    $0xffffffff,%eax
8100395d:	75 07                	jne    81003966 <__fputwc+0x9f>
8100395f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003964:	eb 0f                	jmp    81003975 <__fputwc+0xae>
81003966:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8100396a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100396d:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81003970:	72 c8                	jb     8100393a <__fputwc+0x73>
81003972:	8b 45 0c             	mov    0xc(%ebp),%eax
81003975:	c9                   	leave  
81003976:	c3                   	ret    

81003977 <_fputwc_r>:
81003977:	55                   	push   %ebp
81003978:	89 e5                	mov    %esp,%ebp
8100397a:	83 ec 18             	sub    $0x18,%esp
8100397d:	8b 45 10             	mov    0x10(%ebp),%eax
81003980:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003984:	98                   	cwtl   
81003985:	25 00 20 00 00       	and    $0x2000,%eax
8100398a:	85 c0                	test   %eax,%eax
8100398c:	75 24                	jne    810039b2 <_fputwc_r+0x3b>
8100398e:	8b 45 10             	mov    0x10(%ebp),%eax
81003991:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003995:	80 cc 20             	or     $0x20,%ah
81003998:	89 c2                	mov    %eax,%edx
8100399a:	8b 45 10             	mov    0x10(%ebp),%eax
8100399d:	66 89 50 0c          	mov    %dx,0xc(%eax)
810039a1:	8b 45 10             	mov    0x10(%ebp),%eax
810039a4:	8b 40 64             	mov    0x64(%eax),%eax
810039a7:	80 cc 20             	or     $0x20,%ah
810039aa:	89 c2                	mov    %eax,%edx
810039ac:	8b 45 10             	mov    0x10(%ebp),%eax
810039af:	89 50 64             	mov    %edx,0x64(%eax)
810039b2:	83 ec 04             	sub    $0x4,%esp
810039b5:	ff 75 10             	push   0x10(%ebp)
810039b8:	ff 75 0c             	push   0xc(%ebp)
810039bb:	ff 75 08             	push   0x8(%ebp)
810039be:	e8 04 ff ff ff       	call   810038c7 <__fputwc>
810039c3:	83 c4 10             	add    $0x10,%esp
810039c6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810039c9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039cc:	c9                   	leave  
810039cd:	c3                   	ret    

810039ce <fputwc>:
810039ce:	55                   	push   %ebp
810039cf:	89 e5                	mov    %esp,%ebp
810039d1:	83 ec 18             	sub    $0x18,%esp
810039d4:	a1 04 4f 00 81       	mov    0x81004f04,%eax
810039d9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810039dc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039df:	89 45 f0             	mov    %eax,-0x10(%ebp)
810039e2:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810039e6:	74 18                	je     81003a00 <fputwc+0x32>
810039e8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810039eb:	8b 40 38             	mov    0x38(%eax),%eax
810039ee:	85 c0                	test   %eax,%eax
810039f0:	75 0e                	jne    81003a00 <fputwc+0x32>
810039f2:	83 ec 0c             	sub    $0xc,%esp
810039f5:	ff 75 f0             	push   -0x10(%ebp)
810039f8:	e8 b1 ce ff ff       	call   810008ae <__sinit>
810039fd:	83 c4 10             	add    $0x10,%esp
81003a00:	83 ec 04             	sub    $0x4,%esp
81003a03:	ff 75 0c             	push   0xc(%ebp)
81003a06:	ff 75 08             	push   0x8(%ebp)
81003a09:	ff 75 f4             	push   -0xc(%ebp)
81003a0c:	e8 66 ff ff ff       	call   81003977 <_fputwc_r>
81003a11:	83 c4 10             	add    $0x10,%esp
81003a14:	c9                   	leave  
81003a15:	c3                   	ret    

81003a16 <_free_r>:
81003a16:	55                   	push   %ebp
81003a17:	89 e5                	mov    %esp,%ebp
81003a19:	53                   	push   %ebx
81003a1a:	83 ec 34             	sub    $0x34,%esp
81003a1d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81003a21:	0f 84 c4 03 00 00    	je     81003deb <_free_r+0x3d5>
81003a27:	83 ec 0c             	sub    $0xc,%esp
81003a2a:	ff 75 08             	push   0x8(%ebp)
81003a2d:	e8 b3 e1 ff ff       	call   81001be5 <__malloc_lock>
81003a32:	83 c4 10             	add    $0x10,%esp
81003a35:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a38:	83 e8 08             	sub    $0x8,%eax
81003a3b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003a3e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a41:	8b 40 04             	mov    0x4(%eax),%eax
81003a44:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003a47:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003a4a:	83 e0 fe             	and    $0xfffffffe,%eax
81003a4d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003a50:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003a53:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003a56:	01 d0                	add    %edx,%eax
81003a58:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003a5b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a5e:	8b 40 04             	mov    0x4(%eax),%eax
81003a61:	83 e0 fc             	and    $0xfffffffc,%eax
81003a64:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003a67:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
81003a6c:	8b 40 08             	mov    0x8(%eax),%eax
81003a6f:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81003a72:	0f 85 94 00 00 00    	jne    81003b0c <_free_r+0xf6>
81003a78:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003a7b:	01 45 f0             	add    %eax,-0x10(%ebp)
81003a7e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003a81:	83 e0 01             	and    $0x1,%eax
81003a84:	85 c0                	test   %eax,%eax
81003a86:	75 3a                	jne    81003ac2 <_free_r+0xac>
81003a88:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a8b:	8b 00                	mov    (%eax),%eax
81003a8d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003a90:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003a93:	f7 d8                	neg    %eax
81003a95:	01 45 f4             	add    %eax,-0xc(%ebp)
81003a98:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003a9b:	01 45 f0             	add    %eax,-0x10(%ebp)
81003a9e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003aa1:	8b 40 0c             	mov    0xc(%eax),%eax
81003aa4:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003aa7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003aaa:	8b 40 08             	mov    0x8(%eax),%eax
81003aad:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003ab0:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003ab3:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003ab6:	89 50 0c             	mov    %edx,0xc(%eax)
81003ab9:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003abc:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003abf:	89 50 08             	mov    %edx,0x8(%eax)
81003ac2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003ac5:	83 c8 01             	or     $0x1,%eax
81003ac8:	89 c2                	mov    %eax,%edx
81003aca:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003acd:	89 50 04             	mov    %edx,0x4(%eax)
81003ad0:	ba 20 4f 00 81       	mov    $0x81004f20,%edx
81003ad5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ad8:	89 42 08             	mov    %eax,0x8(%edx)
81003adb:	a1 28 53 00 81       	mov    0x81005328,%eax
81003ae0:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81003ae3:	72 14                	jb     81003af9 <_free_r+0xe3>
81003ae5:	a1 e0 54 00 81       	mov    0x810054e0,%eax
81003aea:	83 ec 08             	sub    $0x8,%esp
81003aed:	50                   	push   %eax
81003aee:	ff 75 08             	push   0x8(%ebp)
81003af1:	e8 fb 02 00 00       	call   81003df1 <_malloc_trim_r>
81003af6:	83 c4 10             	add    $0x10,%esp
81003af9:	83 ec 0c             	sub    $0xc,%esp
81003afc:	ff 75 08             	push   0x8(%ebp)
81003aff:	e8 e7 e0 ff ff       	call   81001beb <__malloc_unlock>
81003b04:	83 c4 10             	add    $0x10,%esp
81003b07:	e9 e0 02 00 00       	jmp    81003dec <_free_r+0x3d6>
81003b0c:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b0f:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003b12:	89 50 04             	mov    %edx,0x4(%eax)
81003b15:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003b1c:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003b1f:	83 e0 01             	and    $0x1,%eax
81003b22:	85 c0                	test   %eax,%eax
81003b24:	75 52                	jne    81003b78 <_free_r+0x162>
81003b26:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b29:	8b 00                	mov    (%eax),%eax
81003b2b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003b2e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003b31:	f7 d8                	neg    %eax
81003b33:	01 45 f4             	add    %eax,-0xc(%ebp)
81003b36:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003b39:	01 45 f0             	add    %eax,-0x10(%ebp)
81003b3c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b3f:	8b 40 08             	mov    0x8(%eax),%eax
81003b42:	ba 28 4f 00 81       	mov    $0x81004f28,%edx
81003b47:	39 d0                	cmp    %edx,%eax
81003b49:	75 09                	jne    81003b54 <_free_r+0x13e>
81003b4b:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81003b52:	eb 24                	jmp    81003b78 <_free_r+0x162>
81003b54:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b57:	8b 40 0c             	mov    0xc(%eax),%eax
81003b5a:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003b5d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b60:	8b 40 08             	mov    0x8(%eax),%eax
81003b63:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003b66:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003b69:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003b6c:	89 50 0c             	mov    %edx,0xc(%eax)
81003b6f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003b72:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003b75:	89 50 08             	mov    %edx,0x8(%eax)
81003b78:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003b7b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b7e:	01 d0                	add    %edx,%eax
81003b80:	8b 40 04             	mov    0x4(%eax),%eax
81003b83:	83 e0 01             	and    $0x1,%eax
81003b86:	85 c0                	test   %eax,%eax
81003b88:	75 75                	jne    81003bff <_free_r+0x1e9>
81003b8a:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b8d:	01 45 f0             	add    %eax,-0x10(%ebp)
81003b90:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003b94:	75 45                	jne    81003bdb <_free_r+0x1c5>
81003b96:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b99:	8b 40 08             	mov    0x8(%eax),%eax
81003b9c:	ba 28 4f 00 81       	mov    $0x81004f28,%edx
81003ba1:	39 d0                	cmp    %edx,%eax
81003ba3:	75 36                	jne    81003bdb <_free_r+0x1c5>
81003ba5:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81003bac:	b8 28 4f 00 81       	mov    $0x81004f28,%eax
81003bb1:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003bb4:	89 50 0c             	mov    %edx,0xc(%eax)
81003bb7:	ba 28 4f 00 81       	mov    $0x81004f28,%edx
81003bbc:	8b 40 0c             	mov    0xc(%eax),%eax
81003bbf:	89 42 08             	mov    %eax,0x8(%edx)
81003bc2:	ba 28 4f 00 81       	mov    $0x81004f28,%edx
81003bc7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003bca:	89 50 0c             	mov    %edx,0xc(%eax)
81003bcd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003bd0:	8b 50 0c             	mov    0xc(%eax),%edx
81003bd3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003bd6:	89 50 08             	mov    %edx,0x8(%eax)
81003bd9:	eb 24                	jmp    81003bff <_free_r+0x1e9>
81003bdb:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003bde:	8b 40 0c             	mov    0xc(%eax),%eax
81003be1:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003be4:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003be7:	8b 40 08             	mov    0x8(%eax),%eax
81003bea:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003bed:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003bf0:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003bf3:	89 50 0c             	mov    %edx,0xc(%eax)
81003bf6:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003bf9:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003bfc:	89 50 08             	mov    %edx,0x8(%eax)
81003bff:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c02:	83 c8 01             	or     $0x1,%eax
81003c05:	89 c2                	mov    %eax,%edx
81003c07:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c0a:	89 50 04             	mov    %edx,0x4(%eax)
81003c0d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003c10:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c13:	01 c2                	add    %eax,%edx
81003c15:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c18:	89 02                	mov    %eax,(%edx)
81003c1a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003c1e:	0f 85 b7 01 00 00    	jne    81003ddb <_free_r+0x3c5>
81003c24:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81003c2b:	77 7f                	ja     81003cac <_free_r+0x296>
81003c2d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c30:	c1 e8 03             	shr    $0x3,%eax
81003c33:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003c36:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
81003c3b:	8b 58 04             	mov    0x4(%eax),%ebx
81003c3e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c41:	8d 50 03             	lea    0x3(%eax),%edx
81003c44:	85 c0                	test   %eax,%eax
81003c46:	0f 48 c2             	cmovs  %edx,%eax
81003c49:	c1 f8 02             	sar    $0x2,%eax
81003c4c:	ba 01 00 00 00       	mov    $0x1,%edx
81003c51:	89 c1                	mov    %eax,%ecx
81003c53:	d3 e2                	shl    %cl,%edx
81003c55:	89 d0                	mov    %edx,%eax
81003c57:	ba 20 4f 00 81       	mov    $0x81004f20,%edx
81003c5c:	09 d8                	or     %ebx,%eax
81003c5e:	89 42 04             	mov    %eax,0x4(%edx)
81003c61:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c64:	83 c0 01             	add    $0x1,%eax
81003c67:	01 c0                	add    %eax,%eax
81003c69:	c1 e0 02             	shl    $0x2,%eax
81003c6c:	05 20 4f 00 81       	add    $0x81004f20,%eax
81003c71:	83 e8 08             	sub    $0x8,%eax
81003c74:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003c77:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003c7a:	8b 40 08             	mov    0x8(%eax),%eax
81003c7d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003c80:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c83:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003c86:	89 50 0c             	mov    %edx,0xc(%eax)
81003c89:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c8c:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003c8f:	89 50 08             	mov    %edx,0x8(%eax)
81003c92:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003c95:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003c98:	89 50 08             	mov    %edx,0x8(%eax)
81003c9b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003c9e:	8b 50 08             	mov    0x8(%eax),%edx
81003ca1:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003ca4:	89 50 0c             	mov    %edx,0xc(%eax)
81003ca7:	e9 2f 01 00 00       	jmp    81003ddb <_free_r+0x3c5>
81003cac:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003caf:	c1 e8 09             	shr    $0x9,%eax
81003cb2:	85 c0                	test   %eax,%eax
81003cb4:	75 08                	jne    81003cbe <_free_r+0x2a8>
81003cb6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003cb9:	c1 e8 03             	shr    $0x3,%eax
81003cbc:	eb 77                	jmp    81003d35 <_free_r+0x31f>
81003cbe:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003cc1:	c1 e8 09             	shr    $0x9,%eax
81003cc4:	83 f8 04             	cmp    $0x4,%eax
81003cc7:	77 0b                	ja     81003cd4 <_free_r+0x2be>
81003cc9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003ccc:	c1 e8 06             	shr    $0x6,%eax
81003ccf:	83 c0 38             	add    $0x38,%eax
81003cd2:	eb 61                	jmp    81003d35 <_free_r+0x31f>
81003cd4:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003cd7:	c1 e8 09             	shr    $0x9,%eax
81003cda:	83 f8 14             	cmp    $0x14,%eax
81003cdd:	77 0b                	ja     81003cea <_free_r+0x2d4>
81003cdf:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003ce2:	c1 e8 09             	shr    $0x9,%eax
81003ce5:	83 c0 5b             	add    $0x5b,%eax
81003ce8:	eb 4b                	jmp    81003d35 <_free_r+0x31f>
81003cea:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003ced:	c1 e8 09             	shr    $0x9,%eax
81003cf0:	83 f8 54             	cmp    $0x54,%eax
81003cf3:	77 0b                	ja     81003d00 <_free_r+0x2ea>
81003cf5:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003cf8:	c1 e8 0c             	shr    $0xc,%eax
81003cfb:	83 c0 6e             	add    $0x6e,%eax
81003cfe:	eb 35                	jmp    81003d35 <_free_r+0x31f>
81003d00:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d03:	c1 e8 09             	shr    $0x9,%eax
81003d06:	3d 54 01 00 00       	cmp    $0x154,%eax
81003d0b:	77 0b                	ja     81003d18 <_free_r+0x302>
81003d0d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d10:	c1 e8 0f             	shr    $0xf,%eax
81003d13:	83 c0 77             	add    $0x77,%eax
81003d16:	eb 1d                	jmp    81003d35 <_free_r+0x31f>
81003d18:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d1b:	c1 e8 09             	shr    $0x9,%eax
81003d1e:	3d 54 05 00 00       	cmp    $0x554,%eax
81003d23:	77 0b                	ja     81003d30 <_free_r+0x31a>
81003d25:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d28:	c1 e8 12             	shr    $0x12,%eax
81003d2b:	83 c0 7c             	add    $0x7c,%eax
81003d2e:	eb 05                	jmp    81003d35 <_free_r+0x31f>
81003d30:	b8 7e 00 00 00       	mov    $0x7e,%eax
81003d35:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003d38:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d3b:	83 c0 01             	add    $0x1,%eax
81003d3e:	01 c0                	add    %eax,%eax
81003d40:	c1 e0 02             	shl    $0x2,%eax
81003d43:	05 20 4f 00 81       	add    $0x81004f20,%eax
81003d48:	83 e8 08             	sub    $0x8,%eax
81003d4b:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003d4e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003d51:	8b 40 08             	mov    0x8(%eax),%eax
81003d54:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003d57:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003d5a:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003d5d:	75 36                	jne    81003d95 <_free_r+0x37f>
81003d5f:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
81003d64:	8b 58 04             	mov    0x4(%eax),%ebx
81003d67:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d6a:	8d 50 03             	lea    0x3(%eax),%edx
81003d6d:	85 c0                	test   %eax,%eax
81003d6f:	0f 48 c2             	cmovs  %edx,%eax
81003d72:	c1 f8 02             	sar    $0x2,%eax
81003d75:	ba 01 00 00 00       	mov    $0x1,%edx
81003d7a:	89 c1                	mov    %eax,%ecx
81003d7c:	d3 e2                	shl    %cl,%edx
81003d7e:	89 d0                	mov    %edx,%eax
81003d80:	ba 20 4f 00 81       	mov    $0x81004f20,%edx
81003d85:	09 d8                	or     %ebx,%eax
81003d87:	89 42 04             	mov    %eax,0x4(%edx)
81003d8a:	eb 28                	jmp    81003db4 <_free_r+0x39e>
81003d8c:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003d8f:	8b 40 08             	mov    0x8(%eax),%eax
81003d92:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003d95:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003d98:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003d9b:	74 0e                	je     81003dab <_free_r+0x395>
81003d9d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003da0:	8b 40 04             	mov    0x4(%eax),%eax
81003da3:	83 e0 fc             	and    $0xfffffffc,%eax
81003da6:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81003da9:	72 e1                	jb     81003d8c <_free_r+0x376>
81003dab:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003dae:	8b 40 0c             	mov    0xc(%eax),%eax
81003db1:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003db4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003db7:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003dba:	89 50 0c             	mov    %edx,0xc(%eax)
81003dbd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003dc0:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003dc3:	89 50 08             	mov    %edx,0x8(%eax)
81003dc6:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003dc9:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003dcc:	89 50 08             	mov    %edx,0x8(%eax)
81003dcf:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003dd2:	8b 50 08             	mov    0x8(%eax),%edx
81003dd5:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003dd8:	89 50 0c             	mov    %edx,0xc(%eax)
81003ddb:	83 ec 0c             	sub    $0xc,%esp
81003dde:	ff 75 08             	push   0x8(%ebp)
81003de1:	e8 05 de ff ff       	call   81001beb <__malloc_unlock>
81003de6:	83 c4 10             	add    $0x10,%esp
81003de9:	eb 01                	jmp    81003dec <_free_r+0x3d6>
81003deb:	90                   	nop
81003dec:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003def:	c9                   	leave  
81003df0:	c3                   	ret    

81003df1 <_malloc_trim_r>:
81003df1:	55                   	push   %ebp
81003df2:	89 e5                	mov    %esp,%ebp
81003df4:	83 ec 28             	sub    $0x28,%esp
81003df7:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81003dfe:	83 ec 0c             	sub    $0xc,%esp
81003e01:	ff 75 08             	push   0x8(%ebp)
81003e04:	e8 dc dd ff ff       	call   81001be5 <__malloc_lock>
81003e09:	83 c4 10             	add    $0x10,%esp
81003e0c:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
81003e11:	8b 40 08             	mov    0x8(%eax),%eax
81003e14:	8b 40 04             	mov    0x4(%eax),%eax
81003e17:	83 e0 fc             	and    $0xfffffffc,%eax
81003e1a:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003e1d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003e20:	2b 45 0c             	sub    0xc(%ebp),%eax
81003e23:	89 c2                	mov    %eax,%edx
81003e25:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e28:	01 d0                	add    %edx,%eax
81003e2a:	83 e8 11             	sub    $0x11,%eax
81003e2d:	ba 00 00 00 00       	mov    $0x0,%edx
81003e32:	f7 75 f4             	divl   -0xc(%ebp)
81003e35:	83 e8 01             	sub    $0x1,%eax
81003e38:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81003e3c:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003e3f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e42:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81003e45:	7d 18                	jge    81003e5f <_malloc_trim_r+0x6e>
81003e47:	83 ec 0c             	sub    $0xc,%esp
81003e4a:	ff 75 08             	push   0x8(%ebp)
81003e4d:	e8 99 dd ff ff       	call   81001beb <__malloc_unlock>
81003e52:	83 c4 10             	add    $0x10,%esp
81003e55:	b8 00 00 00 00       	mov    $0x0,%eax
81003e5a:	e9 f1 00 00 00       	jmp    81003f50 <_malloc_trim_r+0x15f>
81003e5f:	83 ec 08             	sub    $0x8,%esp
81003e62:	6a 00                	push   $0x0
81003e64:	ff 75 08             	push   0x8(%ebp)
81003e67:	e8 ae f1 ff ff       	call   8100301a <_sbrk_r>
81003e6c:	83 c4 10             	add    $0x10,%esp
81003e6f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003e72:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
81003e77:	8b 50 08             	mov    0x8(%eax),%edx
81003e7a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003e7d:	01 d0                	add    %edx,%eax
81003e7f:	39 45 e8             	cmp    %eax,-0x18(%ebp)
81003e82:	74 18                	je     81003e9c <_malloc_trim_r+0xab>
81003e84:	83 ec 0c             	sub    $0xc,%esp
81003e87:	ff 75 08             	push   0x8(%ebp)
81003e8a:	e8 5c dd ff ff       	call   81001beb <__malloc_unlock>
81003e8f:	83 c4 10             	add    $0x10,%esp
81003e92:	b8 00 00 00 00       	mov    $0x0,%eax
81003e97:	e9 b4 00 00 00       	jmp    81003f50 <_malloc_trim_r+0x15f>
81003e9c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003e9f:	f7 d8                	neg    %eax
81003ea1:	83 ec 08             	sub    $0x8,%esp
81003ea4:	50                   	push   %eax
81003ea5:	ff 75 08             	push   0x8(%ebp)
81003ea8:	e8 6d f1 ff ff       	call   8100301a <_sbrk_r>
81003ead:	83 c4 10             	add    $0x10,%esp
81003eb0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003eb3:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81003eb7:	75 61                	jne    81003f1a <_malloc_trim_r+0x129>
81003eb9:	83 ec 08             	sub    $0x8,%esp
81003ebc:	6a 00                	push   $0x0
81003ebe:	ff 75 08             	push   0x8(%ebp)
81003ec1:	e8 54 f1 ff ff       	call   8100301a <_sbrk_r>
81003ec6:	83 c4 10             	add    $0x10,%esp
81003ec9:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003ecc:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
81003ed1:	8b 50 08             	mov    0x8(%eax),%edx
81003ed4:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003ed7:	29 d0                	sub    %edx,%eax
81003ed9:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003edc:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81003ee0:	7e 23                	jle    81003f05 <_malloc_trim_r+0x114>
81003ee2:	8b 15 2c 53 00 81    	mov    0x8100532c,%edx
81003ee8:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003eeb:	29 d0                	sub    %edx,%eax
81003eed:	a3 00 55 00 81       	mov    %eax,0x81005500
81003ef2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003ef5:	83 c8 01             	or     $0x1,%eax
81003ef8:	89 c2                	mov    %eax,%edx
81003efa:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
81003eff:	8b 40 08             	mov    0x8(%eax),%eax
81003f02:	89 50 04             	mov    %edx,0x4(%eax)
81003f05:	83 ec 0c             	sub    $0xc,%esp
81003f08:	ff 75 08             	push   0x8(%ebp)
81003f0b:	e8 db dc ff ff       	call   81001beb <__malloc_unlock>
81003f10:	83 c4 10             	add    $0x10,%esp
81003f13:	b8 00 00 00 00       	mov    $0x0,%eax
81003f18:	eb 36                	jmp    81003f50 <_malloc_trim_r+0x15f>
81003f1a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f1d:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003f20:	83 c8 01             	or     $0x1,%eax
81003f23:	89 c2                	mov    %eax,%edx
81003f25:	b8 20 4f 00 81       	mov    $0x81004f20,%eax
81003f2a:	8b 40 08             	mov    0x8(%eax),%eax
81003f2d:	89 50 04             	mov    %edx,0x4(%eax)
81003f30:	a1 00 55 00 81       	mov    0x81005500,%eax
81003f35:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003f38:	a3 00 55 00 81       	mov    %eax,0x81005500
81003f3d:	83 ec 0c             	sub    $0xc,%esp
81003f40:	ff 75 08             	push   0x8(%ebp)
81003f43:	e8 a3 dc ff ff       	call   81001beb <__malloc_unlock>
81003f48:	83 c4 10             	add    $0x10,%esp
81003f4b:	b8 01 00 00 00       	mov    $0x1,%eax
81003f50:	c9                   	leave  
81003f51:	c3                   	ret    

81003f52 <__get_global_locale>:
81003f52:	55                   	push   %ebp
81003f53:	89 e5                	mov    %esp,%ebp
81003f55:	b8 40 53 00 81       	mov    $0x81005340,%eax
81003f5a:	5d                   	pop    %ebp
81003f5b:	c3                   	ret    

81003f5c <__get_current_locale>:
81003f5c:	55                   	push   %ebp
81003f5d:	89 e5                	mov    %esp,%ebp
81003f5f:	e8 ee ff ff ff       	call   81003f52 <__get_global_locale>
81003f64:	5d                   	pop    %ebp
81003f65:	c3                   	ret    

81003f66 <_setlocale_r>:
81003f66:	55                   	push   %ebp
81003f67:	89 e5                	mov    %esp,%ebp
81003f69:	83 ec 08             	sub    $0x8,%esp
81003f6c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003f70:	74 4c                	je     81003fbe <_setlocale_r+0x58>
81003f72:	83 ec 08             	sub    $0x8,%esp
81003f75:	68 1f 48 00 81       	push   $0x8100481f
81003f7a:	ff 75 10             	push   0x10(%ebp)
81003f7d:	e8 af 04 00 00       	call   81004431 <strcmp>
81003f82:	83 c4 10             	add    $0x10,%esp
81003f85:	85 c0                	test   %eax,%eax
81003f87:	74 35                	je     81003fbe <_setlocale_r+0x58>
81003f89:	83 ec 08             	sub    $0x8,%esp
81003f8c:	68 25 48 00 81       	push   $0x81004825
81003f91:	ff 75 10             	push   0x10(%ebp)
81003f94:	e8 98 04 00 00       	call   81004431 <strcmp>
81003f99:	83 c4 10             	add    $0x10,%esp
81003f9c:	85 c0                	test   %eax,%eax
81003f9e:	74 1e                	je     81003fbe <_setlocale_r+0x58>
81003fa0:	83 ec 08             	sub    $0x8,%esp
81003fa3:	68 1e 48 00 81       	push   $0x8100481e
81003fa8:	ff 75 10             	push   0x10(%ebp)
81003fab:	e8 81 04 00 00       	call   81004431 <strcmp>
81003fb0:	83 c4 10             	add    $0x10,%esp
81003fb3:	85 c0                	test   %eax,%eax
81003fb5:	74 07                	je     81003fbe <_setlocale_r+0x58>
81003fb7:	b8 00 00 00 00       	mov    $0x0,%eax
81003fbc:	eb 05                	jmp    81003fc3 <_setlocale_r+0x5d>
81003fbe:	b8 25 48 00 81       	mov    $0x81004825,%eax
81003fc3:	c9                   	leave  
81003fc4:	c3                   	ret    

81003fc5 <__locale_mb_cur_max>:
81003fc5:	55                   	push   %ebp
81003fc6:	89 e5                	mov    %esp,%ebp
81003fc8:	e8 8f ff ff ff       	call   81003f5c <__get_current_locale>
81003fcd:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
81003fd4:	0f be c0             	movsbl %al,%eax
81003fd7:	5d                   	pop    %ebp
81003fd8:	c3                   	ret    

81003fd9 <setlocale>:
81003fd9:	55                   	push   %ebp
81003fda:	89 e5                	mov    %esp,%ebp
81003fdc:	83 ec 08             	sub    $0x8,%esp
81003fdf:	a1 04 4f 00 81       	mov    0x81004f04,%eax
81003fe4:	83 ec 04             	sub    $0x4,%esp
81003fe7:	ff 75 0c             	push   0xc(%ebp)
81003fea:	ff 75 08             	push   0x8(%ebp)
81003fed:	50                   	push   %eax
81003fee:	e8 73 ff ff ff       	call   81003f66 <_setlocale_r>
81003ff3:	83 c4 10             	add    $0x10,%esp
81003ff6:	c9                   	leave  
81003ff7:	c3                   	ret    

81003ff8 <_lseek_r>:
81003ff8:	55                   	push   %ebp
81003ff9:	89 e5                	mov    %esp,%ebp
81003ffb:	83 ec 18             	sub    $0x18,%esp
81003ffe:	c7 05 30 55 00 81 00 	movl   $0x0,0x81005530
81004005:	00 00 00 
81004008:	83 ec 04             	sub    $0x4,%esp
8100400b:	ff 75 14             	push   0x14(%ebp)
8100400e:	ff 75 10             	push   0x10(%ebp)
81004011:	ff 75 0c             	push   0xc(%ebp)
81004014:	e8 2f c3 ff ff       	call   81000348 <lseek>
81004019:	83 c4 10             	add    $0x10,%esp
8100401c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100401f:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004023:	75 14                	jne    81004039 <_lseek_r+0x41>
81004025:	a1 30 55 00 81       	mov    0x81005530,%eax
8100402a:	85 c0                	test   %eax,%eax
8100402c:	74 0b                	je     81004039 <_lseek_r+0x41>
8100402e:	8b 15 30 55 00 81    	mov    0x81005530,%edx
81004034:	8b 45 08             	mov    0x8(%ebp),%eax
81004037:	89 10                	mov    %edx,(%eax)
81004039:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100403c:	c9                   	leave  
8100403d:	c3                   	ret    

8100403e <__smakebuf_r>:
8100403e:	55                   	push   %ebp
8100403f:	89 e5                	mov    %esp,%ebp
81004041:	56                   	push   %esi
81004042:	53                   	push   %ebx
81004043:	83 ec 10             	sub    $0x10,%esp
81004046:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004049:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100404d:	98                   	cwtl   
8100404e:	83 e0 02             	and    $0x2,%eax
81004051:	85 c0                	test   %eax,%eax
81004053:	74 16                	je     8100406b <__smakebuf_r+0x2d>
81004055:	8d 43 43             	lea    0x43(%ebx),%eax
81004058:	89 03                	mov    %eax,(%ebx)
8100405a:	8b 03                	mov    (%ebx),%eax
8100405c:	89 43 10             	mov    %eax,0x10(%ebx)
8100405f:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81004066:	e9 b9 00 00 00       	jmp    81004124 <__smakebuf_r+0xe6>
8100406b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100406e:	50                   	push   %eax
8100406f:	8d 45 f0             	lea    -0x10(%ebp),%eax
81004072:	50                   	push   %eax
81004073:	53                   	push   %ebx
81004074:	ff 75 08             	push   0x8(%ebp)
81004077:	e8 af 00 00 00       	call   8100412b <__swhatbuf_r>
8100407c:	83 c4 10             	add    $0x10,%esp
8100407f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004082:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004085:	83 ec 08             	sub    $0x8,%esp
81004088:	50                   	push   %eax
81004089:	ff 75 08             	push   0x8(%ebp)
8100408c:	e8 2e d1 ff ff       	call   810011bf <_malloc_r>
81004091:	83 c4 10             	add    $0x10,%esp
81004094:	89 c6                	mov    %eax,%esi
81004096:	85 f6                	test   %esi,%esi
81004098:	75 2f                	jne    810040c9 <__smakebuf_r+0x8b>
8100409a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100409e:	98                   	cwtl   
8100409f:	25 00 02 00 00       	and    $0x200,%eax
810040a4:	85 c0                	test   %eax,%eax
810040a6:	75 7c                	jne    81004124 <__smakebuf_r+0xe6>
810040a8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810040ac:	83 e0 fc             	and    $0xfffffffc,%eax
810040af:	83 c8 02             	or     $0x2,%eax
810040b2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810040b6:	8d 43 43             	lea    0x43(%ebx),%eax
810040b9:	89 03                	mov    %eax,(%ebx)
810040bb:	8b 03                	mov    (%ebx),%eax
810040bd:	89 43 10             	mov    %eax,0x10(%ebx)
810040c0:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810040c7:	eb 5b                	jmp    81004124 <__smakebuf_r+0xe6>
810040c9:	8b 45 08             	mov    0x8(%ebp),%eax
810040cc:	c7 40 3c 73 08 00 81 	movl   $0x81000873,0x3c(%eax)
810040d3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810040d7:	0c 80                	or     $0x80,%al
810040d9:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810040dd:	89 33                	mov    %esi,(%ebx)
810040df:	8b 03                	mov    (%ebx),%eax
810040e1:	89 43 10             	mov    %eax,0x10(%ebx)
810040e4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040e7:	89 43 14             	mov    %eax,0x14(%ebx)
810040ea:	8b 45 ec             	mov    -0x14(%ebp),%eax
810040ed:	85 c0                	test   %eax,%eax
810040ef:	74 26                	je     81004117 <__smakebuf_r+0xd9>
810040f1:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810040f5:	98                   	cwtl   
810040f6:	83 ec 08             	sub    $0x8,%esp
810040f9:	50                   	push   %eax
810040fa:	ff 75 08             	push   0x8(%ebp)
810040fd:	e8 9c 05 00 00       	call   8100469e <_isatty_r>
81004102:	83 c4 10             	add    $0x10,%esp
81004105:	85 c0                	test   %eax,%eax
81004107:	74 0e                	je     81004117 <__smakebuf_r+0xd9>
81004109:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100410d:	83 e0 fc             	and    $0xfffffffc,%eax
81004110:	83 c8 01             	or     $0x1,%eax
81004113:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004117:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
8100411b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100411e:	09 d0                	or     %edx,%eax
81004120:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004124:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004127:	5b                   	pop    %ebx
81004128:	5e                   	pop    %esi
81004129:	5d                   	pop    %ebp
8100412a:	c3                   	ret    

8100412b <__swhatbuf_r>:
8100412b:	55                   	push   %ebp
8100412c:	89 e5                	mov    %esp,%ebp
8100412e:	83 ec 58             	sub    $0x58,%esp
81004131:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81004138:	8b 45 0c             	mov    0xc(%ebp),%eax
8100413b:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100413f:	66 85 c0             	test   %ax,%ax
81004142:	78 1f                	js     81004163 <__swhatbuf_r+0x38>
81004144:	8b 45 0c             	mov    0xc(%ebp),%eax
81004147:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100414b:	98                   	cwtl   
8100414c:	83 ec 04             	sub    $0x4,%esp
8100414f:	8d 55 ac             	lea    -0x54(%ebp),%edx
81004152:	52                   	push   %edx
81004153:	50                   	push   %eax
81004154:	ff 75 08             	push   0x8(%ebp)
81004157:	e8 ff 04 00 00       	call   8100465b <_fstat_r>
8100415c:	83 c4 10             	add    $0x10,%esp
8100415f:	85 c0                	test   %eax,%eax
81004161:	79 35                	jns    81004198 <__swhatbuf_r+0x6d>
81004163:	8b 45 14             	mov    0x14(%ebp),%eax
81004166:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100416c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100416f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004173:	98                   	cwtl   
81004174:	25 80 00 00 00       	and    $0x80,%eax
81004179:	85 c0                	test   %eax,%eax
8100417b:	74 0b                	je     81004188 <__swhatbuf_r+0x5d>
8100417d:	8b 45 10             	mov    0x10(%ebp),%eax
81004180:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81004186:	eb 09                	jmp    81004191 <__swhatbuf_r+0x66>
81004188:	8b 45 10             	mov    0x10(%ebp),%eax
8100418b:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81004191:	b8 00 00 00 00       	mov    $0x0,%eax
81004196:	eb 24                	jmp    810041bc <__swhatbuf_r+0x91>
81004198:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100419b:	25 00 f0 00 00       	and    $0xf000,%eax
810041a0:	3d 00 20 00 00       	cmp    $0x2000,%eax
810041a5:	0f 94 c0             	sete   %al
810041a8:	0f b6 d0             	movzbl %al,%edx
810041ab:	8b 45 14             	mov    0x14(%ebp),%eax
810041ae:	89 10                	mov    %edx,(%eax)
810041b0:	8b 45 10             	mov    0x10(%ebp),%eax
810041b3:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810041b9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041bc:	c9                   	leave  
810041bd:	c3                   	ret    

810041be <__get_global_locale>:
810041be:	55                   	push   %ebp
810041bf:	89 e5                	mov    %esp,%ebp
810041c1:	b8 40 53 00 81       	mov    $0x81005340,%eax
810041c6:	5d                   	pop    %ebp
810041c7:	c3                   	ret    

810041c8 <__get_current_locale>:
810041c8:	55                   	push   %ebp
810041c9:	89 e5                	mov    %esp,%ebp
810041cb:	e8 ee ff ff ff       	call   810041be <__get_global_locale>
810041d0:	5d                   	pop    %ebp
810041d1:	c3                   	ret    

810041d2 <_mbtowc_r>:
810041d2:	55                   	push   %ebp
810041d3:	89 e5                	mov    %esp,%ebp
810041d5:	83 ec 08             	sub    $0x8,%esp
810041d8:	e8 eb ff ff ff       	call   810041c8 <__get_current_locale>
810041dd:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
810041e3:	83 ec 0c             	sub    $0xc,%esp
810041e6:	ff 75 18             	push   0x18(%ebp)
810041e9:	ff 75 14             	push   0x14(%ebp)
810041ec:	ff 75 10             	push   0x10(%ebp)
810041ef:	ff 75 0c             	push   0xc(%ebp)
810041f2:	ff 75 08             	push   0x8(%ebp)
810041f5:	ff d0                	call   *%eax
810041f7:	83 c4 20             	add    $0x20,%esp
810041fa:	c9                   	leave  
810041fb:	c3                   	ret    

810041fc <__ascii_mbtowc>:
810041fc:	55                   	push   %ebp
810041fd:	89 e5                	mov    %esp,%ebp
810041ff:	83 ec 10             	sub    $0x10,%esp
81004202:	8b 45 10             	mov    0x10(%ebp),%eax
81004205:	89 45 fc             	mov    %eax,-0x4(%ebp)
81004208:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100420c:	75 06                	jne    81004214 <__ascii_mbtowc+0x18>
8100420e:	8d 45 f8             	lea    -0x8(%ebp),%eax
81004211:	89 45 0c             	mov    %eax,0xc(%ebp)
81004214:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81004218:	75 07                	jne    81004221 <__ascii_mbtowc+0x25>
8100421a:	b8 00 00 00 00       	mov    $0x0,%eax
8100421f:	eb 31                	jmp    81004252 <__ascii_mbtowc+0x56>
81004221:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81004225:	75 07                	jne    8100422e <__ascii_mbtowc+0x32>
81004227:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
8100422c:	eb 24                	jmp    81004252 <__ascii_mbtowc+0x56>
8100422e:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004231:	0f b6 00             	movzbl (%eax),%eax
81004234:	0f b6 d0             	movzbl %al,%edx
81004237:	8b 45 0c             	mov    0xc(%ebp),%eax
8100423a:	89 10                	mov    %edx,(%eax)
8100423c:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100423f:	0f b6 00             	movzbl (%eax),%eax
81004242:	84 c0                	test   %al,%al
81004244:	75 07                	jne    8100424d <__ascii_mbtowc+0x51>
81004246:	b8 00 00 00 00       	mov    $0x0,%eax
8100424b:	eb 05                	jmp    81004252 <__ascii_mbtowc+0x56>
8100424d:	b8 01 00 00 00       	mov    $0x1,%eax
81004252:	c9                   	leave  
81004253:	c3                   	ret    

81004254 <_read_r>:
81004254:	55                   	push   %ebp
81004255:	89 e5                	mov    %esp,%ebp
81004257:	83 ec 18             	sub    $0x18,%esp
8100425a:	c7 05 30 55 00 81 00 	movl   $0x0,0x81005530
81004261:	00 00 00 
81004264:	83 ec 04             	sub    $0x4,%esp
81004267:	ff 75 14             	push   0x14(%ebp)
8100426a:	ff 75 10             	push   0x10(%ebp)
8100426d:	ff 75 0c             	push   0xc(%ebp)
81004270:	e8 58 c0 ff ff       	call   810002cd <read>
81004275:	83 c4 10             	add    $0x10,%esp
81004278:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100427b:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100427f:	75 14                	jne    81004295 <_read_r+0x41>
81004281:	a1 30 55 00 81       	mov    0x81005530,%eax
81004286:	85 c0                	test   %eax,%eax
81004288:	74 0b                	je     81004295 <_read_r+0x41>
8100428a:	8b 15 30 55 00 81    	mov    0x81005530,%edx
81004290:	8b 45 08             	mov    0x8(%ebp),%eax
81004293:	89 10                	mov    %edx,(%eax)
81004295:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004298:	c9                   	leave  
81004299:	c3                   	ret    

8100429a <cleanup_glue>:
8100429a:	55                   	push   %ebp
8100429b:	89 e5                	mov    %esp,%ebp
8100429d:	83 ec 08             	sub    $0x8,%esp
810042a0:	8b 45 0c             	mov    0xc(%ebp),%eax
810042a3:	8b 00                	mov    (%eax),%eax
810042a5:	85 c0                	test   %eax,%eax
810042a7:	74 14                	je     810042bd <cleanup_glue+0x23>
810042a9:	8b 45 0c             	mov    0xc(%ebp),%eax
810042ac:	8b 00                	mov    (%eax),%eax
810042ae:	83 ec 08             	sub    $0x8,%esp
810042b1:	50                   	push   %eax
810042b2:	ff 75 08             	push   0x8(%ebp)
810042b5:	e8 e0 ff ff ff       	call   8100429a <cleanup_glue>
810042ba:	83 c4 10             	add    $0x10,%esp
810042bd:	83 ec 08             	sub    $0x8,%esp
810042c0:	ff 75 0c             	push   0xc(%ebp)
810042c3:	ff 75 08             	push   0x8(%ebp)
810042c6:	e8 4b f7 ff ff       	call   81003a16 <_free_r>
810042cb:	83 c4 10             	add    $0x10,%esp
810042ce:	90                   	nop
810042cf:	c9                   	leave  
810042d0:	c3                   	ret    

810042d1 <_reclaim_reent>:
810042d1:	55                   	push   %ebp
810042d2:	89 e5                	mov    %esp,%ebp
810042d4:	83 ec 28             	sub    $0x28,%esp
810042d7:	a1 04 4f 00 81       	mov    0x81004f04,%eax
810042dc:	39 45 08             	cmp    %eax,0x8(%ebp)
810042df:	0f 84 49 01 00 00    	je     8100442e <_reclaim_reent+0x15d>
810042e5:	8b 45 08             	mov    0x8(%ebp),%eax
810042e8:	8b 40 4c             	mov    0x4c(%eax),%eax
810042eb:	85 c0                	test   %eax,%eax
810042ed:	74 64                	je     81004353 <_reclaim_reent+0x82>
810042ef:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810042f6:	eb 3e                	jmp    81004336 <_reclaim_reent+0x65>
810042f8:	8b 45 08             	mov    0x8(%ebp),%eax
810042fb:	8b 50 4c             	mov    0x4c(%eax),%edx
810042fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004301:	c1 e0 02             	shl    $0x2,%eax
81004304:	01 d0                	add    %edx,%eax
81004306:	8b 00                	mov    (%eax),%eax
81004308:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100430b:	eb 1f                	jmp    8100432c <_reclaim_reent+0x5b>
8100430d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004310:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004313:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004316:	8b 00                	mov    (%eax),%eax
81004318:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100431b:	83 ec 08             	sub    $0x8,%esp
8100431e:	ff 75 e8             	push   -0x18(%ebp)
81004321:	ff 75 08             	push   0x8(%ebp)
81004324:	e8 ed f6 ff ff       	call   81003a16 <_free_r>
81004329:	83 c4 10             	add    $0x10,%esp
8100432c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004330:	75 db                	jne    8100430d <_reclaim_reent+0x3c>
81004332:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81004336:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004339:	83 f8 1f             	cmp    $0x1f,%eax
8100433c:	76 ba                	jbe    810042f8 <_reclaim_reent+0x27>
8100433e:	8b 45 08             	mov    0x8(%ebp),%eax
81004341:	8b 40 4c             	mov    0x4c(%eax),%eax
81004344:	83 ec 08             	sub    $0x8,%esp
81004347:	50                   	push   %eax
81004348:	ff 75 08             	push   0x8(%ebp)
8100434b:	e8 c6 f6 ff ff       	call   81003a16 <_free_r>
81004350:	83 c4 10             	add    $0x10,%esp
81004353:	8b 45 08             	mov    0x8(%ebp),%eax
81004356:	8b 40 40             	mov    0x40(%eax),%eax
81004359:	85 c0                	test   %eax,%eax
8100435b:	74 15                	je     81004372 <_reclaim_reent+0xa1>
8100435d:	8b 45 08             	mov    0x8(%ebp),%eax
81004360:	8b 40 40             	mov    0x40(%eax),%eax
81004363:	83 ec 08             	sub    $0x8,%esp
81004366:	50                   	push   %eax
81004367:	ff 75 08             	push   0x8(%ebp)
8100436a:	e8 a7 f6 ff ff       	call   81003a16 <_free_r>
8100436f:	83 c4 10             	add    $0x10,%esp
81004372:	8b 45 08             	mov    0x8(%ebp),%eax
81004375:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
8100437b:	85 c0                	test   %eax,%eax
8100437d:	74 50                	je     810043cf <_reclaim_reent+0xfe>
8100437f:	8b 45 08             	mov    0x8(%ebp),%eax
81004382:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81004388:	8b 55 08             	mov    0x8(%ebp),%edx
8100438b:	81 c2 4c 01 00 00    	add    $0x14c,%edx
81004391:	39 d0                	cmp    %edx,%eax
81004393:	74 3a                	je     810043cf <_reclaim_reent+0xfe>
81004395:	8b 45 08             	mov    0x8(%ebp),%eax
81004398:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
8100439e:	89 45 ec             	mov    %eax,-0x14(%ebp)
810043a1:	eb 1f                	jmp    810043c2 <_reclaim_reent+0xf1>
810043a3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810043a6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810043a9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810043ac:	8b 00                	mov    (%eax),%eax
810043ae:	89 45 ec             	mov    %eax,-0x14(%ebp)
810043b1:	83 ec 08             	sub    $0x8,%esp
810043b4:	ff 75 e4             	push   -0x1c(%ebp)
810043b7:	ff 75 08             	push   0x8(%ebp)
810043ba:	e8 57 f6 ff ff       	call   81003a16 <_free_r>
810043bf:	83 c4 10             	add    $0x10,%esp
810043c2:	8b 45 08             	mov    0x8(%ebp),%eax
810043c5:	05 4c 01 00 00       	add    $0x14c,%eax
810043ca:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810043cd:	75 d4                	jne    810043a3 <_reclaim_reent+0xd2>
810043cf:	8b 45 08             	mov    0x8(%ebp),%eax
810043d2:	8b 40 54             	mov    0x54(%eax),%eax
810043d5:	85 c0                	test   %eax,%eax
810043d7:	74 15                	je     810043ee <_reclaim_reent+0x11d>
810043d9:	8b 45 08             	mov    0x8(%ebp),%eax
810043dc:	8b 40 54             	mov    0x54(%eax),%eax
810043df:	83 ec 08             	sub    $0x8,%esp
810043e2:	50                   	push   %eax
810043e3:	ff 75 08             	push   0x8(%ebp)
810043e6:	e8 2b f6 ff ff       	call   81003a16 <_free_r>
810043eb:	83 c4 10             	add    $0x10,%esp
810043ee:	8b 45 08             	mov    0x8(%ebp),%eax
810043f1:	8b 40 38             	mov    0x38(%eax),%eax
810043f4:	85 c0                	test   %eax,%eax
810043f6:	74 36                	je     8100442e <_reclaim_reent+0x15d>
810043f8:	8b 45 08             	mov    0x8(%ebp),%eax
810043fb:	8b 40 3c             	mov    0x3c(%eax),%eax
810043fe:	83 ec 0c             	sub    $0xc,%esp
81004401:	ff 75 08             	push   0x8(%ebp)
81004404:	ff d0                	call   *%eax
81004406:	83 c4 10             	add    $0x10,%esp
81004409:	8b 45 08             	mov    0x8(%ebp),%eax
8100440c:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81004412:	85 c0                	test   %eax,%eax
81004414:	74 18                	je     8100442e <_reclaim_reent+0x15d>
81004416:	8b 45 08             	mov    0x8(%ebp),%eax
81004419:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
8100441f:	83 ec 08             	sub    $0x8,%esp
81004422:	50                   	push   %eax
81004423:	ff 75 08             	push   0x8(%ebp)
81004426:	e8 6f fe ff ff       	call   8100429a <cleanup_glue>
8100442b:	83 c4 10             	add    $0x10,%esp
8100442e:	90                   	nop
8100442f:	c9                   	leave  
81004430:	c3                   	ret    

81004431 <strcmp>:
81004431:	55                   	push   %ebp
81004432:	89 e5                	mov    %esp,%ebp
81004434:	83 ec 10             	sub    $0x10,%esp
81004437:	8b 55 08             	mov    0x8(%ebp),%edx
8100443a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100443d:	09 d0                	or     %edx,%eax
8100443f:	83 e0 03             	and    $0x3,%eax
81004442:	85 c0                	test   %eax,%eax
81004444:	75 5e                	jne    810044a4 <strcmp+0x73>
81004446:	8b 45 08             	mov    0x8(%ebp),%eax
81004449:	89 45 fc             	mov    %eax,-0x4(%ebp)
8100444c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100444f:	89 45 f8             	mov    %eax,-0x8(%ebp)
81004452:	eb 2c                	jmp    81004480 <strcmp+0x4f>
81004454:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004457:	8b 00                	mov    (%eax),%eax
81004459:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
8100445f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004462:	8b 00                	mov    (%eax),%eax
81004464:	f7 d0                	not    %eax
81004466:	21 d0                	and    %edx,%eax
81004468:	25 80 80 80 80       	and    $0x80808080,%eax
8100446d:	85 c0                	test   %eax,%eax
8100446f:	74 07                	je     81004478 <strcmp+0x47>
81004471:	b8 00 00 00 00       	mov    $0x0,%eax
81004476:	eb 5c                	jmp    810044d4 <strcmp+0xa3>
81004478:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
8100447c:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81004480:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004483:	8b 10                	mov    (%eax),%edx
81004485:	8b 45 f8             	mov    -0x8(%ebp),%eax
81004488:	8b 00                	mov    (%eax),%eax
8100448a:	39 c2                	cmp    %eax,%edx
8100448c:	74 c6                	je     81004454 <strcmp+0x23>
8100448e:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004491:	89 45 08             	mov    %eax,0x8(%ebp)
81004494:	8b 45 f8             	mov    -0x8(%ebp),%eax
81004497:	89 45 0c             	mov    %eax,0xc(%ebp)
8100449a:	eb 08                	jmp    810044a4 <strcmp+0x73>
8100449c:	83 45 08 01          	addl   $0x1,0x8(%ebp)
810044a0:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
810044a4:	8b 45 08             	mov    0x8(%ebp),%eax
810044a7:	0f b6 00             	movzbl (%eax),%eax
810044aa:	84 c0                	test   %al,%al
810044ac:	74 10                	je     810044be <strcmp+0x8d>
810044ae:	8b 45 08             	mov    0x8(%ebp),%eax
810044b1:	0f b6 10             	movzbl (%eax),%edx
810044b4:	8b 45 0c             	mov    0xc(%ebp),%eax
810044b7:	0f b6 00             	movzbl (%eax),%eax
810044ba:	38 c2                	cmp    %al,%dl
810044bc:	74 de                	je     8100449c <strcmp+0x6b>
810044be:	8b 45 08             	mov    0x8(%ebp),%eax
810044c1:	0f b6 00             	movzbl (%eax),%eax
810044c4:	0f b6 d0             	movzbl %al,%edx
810044c7:	8b 45 0c             	mov    0xc(%ebp),%eax
810044ca:	0f b6 00             	movzbl (%eax),%eax
810044cd:	0f b6 c8             	movzbl %al,%ecx
810044d0:	89 d0                	mov    %edx,%eax
810044d2:	29 c8                	sub    %ecx,%eax
810044d4:	c9                   	leave  
810044d5:	c3                   	ret    

810044d6 <__get_global_locale>:
810044d6:	55                   	push   %ebp
810044d7:	89 e5                	mov    %esp,%ebp
810044d9:	b8 40 53 00 81       	mov    $0x81005340,%eax
810044de:	5d                   	pop    %ebp
810044df:	c3                   	ret    

810044e0 <__get_current_locale>:
810044e0:	55                   	push   %ebp
810044e1:	89 e5                	mov    %esp,%ebp
810044e3:	e8 ee ff ff ff       	call   810044d6 <__get_global_locale>
810044e8:	5d                   	pop    %ebp
810044e9:	c3                   	ret    

810044ea <_wcrtomb_r>:
810044ea:	55                   	push   %ebp
810044eb:	89 e5                	mov    %esp,%ebp
810044ed:	83 ec 18             	sub    $0x18,%esp
810044f0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810044f7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810044fb:	75 21                	jne    8100451e <_wcrtomb_r+0x34>
810044fd:	e8 de ff ff ff       	call   810044e0 <__get_current_locale>
81004502:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004508:	ff 75 14             	push   0x14(%ebp)
8100450b:	6a 00                	push   $0x0
8100450d:	8d 55 ea             	lea    -0x16(%ebp),%edx
81004510:	52                   	push   %edx
81004511:	ff 75 08             	push   0x8(%ebp)
81004514:	ff d0                	call   *%eax
81004516:	83 c4 10             	add    $0x10,%esp
81004519:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100451c:	eb 1f                	jmp    8100453d <_wcrtomb_r+0x53>
8100451e:	e8 bd ff ff ff       	call   810044e0 <__get_current_locale>
81004523:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004529:	ff 75 14             	push   0x14(%ebp)
8100452c:	ff 75 10             	push   0x10(%ebp)
8100452f:	ff 75 0c             	push   0xc(%ebp)
81004532:	ff 75 08             	push   0x8(%ebp)
81004535:	ff d0                	call   *%eax
81004537:	83 c4 10             	add    $0x10,%esp
8100453a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100453d:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004541:	75 19                	jne    8100455c <_wcrtomb_r+0x72>
81004543:	8b 45 14             	mov    0x14(%ebp),%eax
81004546:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100454c:	8b 45 08             	mov    0x8(%ebp),%eax
8100454f:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81004555:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100455a:	eb 03                	jmp    8100455f <_wcrtomb_r+0x75>
8100455c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100455f:	c9                   	leave  
81004560:	c3                   	ret    

81004561 <wcrtomb>:
81004561:	55                   	push   %ebp
81004562:	89 e5                	mov    %esp,%ebp
81004564:	83 ec 28             	sub    $0x28,%esp
81004567:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100456e:	a1 04 4f 00 81       	mov    0x81004f04,%eax
81004573:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004576:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100457a:	75 21                	jne    8100459d <wcrtomb+0x3c>
8100457c:	e8 5f ff ff ff       	call   810044e0 <__get_current_locale>
81004581:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004587:	ff 75 10             	push   0x10(%ebp)
8100458a:	6a 00                	push   $0x0
8100458c:	8d 55 e6             	lea    -0x1a(%ebp),%edx
8100458f:	52                   	push   %edx
81004590:	ff 75 f0             	push   -0x10(%ebp)
81004593:	ff d0                	call   *%eax
81004595:	83 c4 10             	add    $0x10,%esp
81004598:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100459b:	eb 1f                	jmp    810045bc <wcrtomb+0x5b>
8100459d:	e8 3e ff ff ff       	call   810044e0 <__get_current_locale>
810045a2:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810045a8:	ff 75 10             	push   0x10(%ebp)
810045ab:	ff 75 0c             	push   0xc(%ebp)
810045ae:	ff 75 08             	push   0x8(%ebp)
810045b1:	ff 75 f0             	push   -0x10(%ebp)
810045b4:	ff d0                	call   *%eax
810045b6:	83 c4 10             	add    $0x10,%esp
810045b9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810045bc:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810045c0:	75 19                	jne    810045db <wcrtomb+0x7a>
810045c2:	8b 45 10             	mov    0x10(%ebp),%eax
810045c5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810045cb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810045ce:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810045d4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810045d9:	eb 03                	jmp    810045de <wcrtomb+0x7d>
810045db:	8b 45 f4             	mov    -0xc(%ebp),%eax
810045de:	c9                   	leave  
810045df:	c3                   	ret    

810045e0 <__get_global_locale>:
810045e0:	55                   	push   %ebp
810045e1:	89 e5                	mov    %esp,%ebp
810045e3:	b8 40 53 00 81       	mov    $0x81005340,%eax
810045e8:	5d                   	pop    %ebp
810045e9:	c3                   	ret    

810045ea <__get_current_locale>:
810045ea:	55                   	push   %ebp
810045eb:	89 e5                	mov    %esp,%ebp
810045ed:	e8 ee ff ff ff       	call   810045e0 <__get_global_locale>
810045f2:	5d                   	pop    %ebp
810045f3:	c3                   	ret    

810045f4 <_wctomb_r>:
810045f4:	55                   	push   %ebp
810045f5:	89 e5                	mov    %esp,%ebp
810045f7:	83 ec 08             	sub    $0x8,%esp
810045fa:	e8 eb ff ff ff       	call   810045ea <__get_current_locale>
810045ff:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004605:	ff 75 14             	push   0x14(%ebp)
81004608:	ff 75 10             	push   0x10(%ebp)
8100460b:	ff 75 0c             	push   0xc(%ebp)
8100460e:	ff 75 08             	push   0x8(%ebp)
81004611:	ff d0                	call   *%eax
81004613:	83 c4 10             	add    $0x10,%esp
81004616:	c9                   	leave  
81004617:	c3                   	ret    

81004618 <__ascii_wctomb>:
81004618:	55                   	push   %ebp
81004619:	89 e5                	mov    %esp,%ebp
8100461b:	83 ec 10             	sub    $0x10,%esp
8100461e:	8b 45 10             	mov    0x10(%ebp),%eax
81004621:	89 45 fc             	mov    %eax,-0x4(%ebp)
81004624:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81004628:	75 07                	jne    81004631 <__ascii_wctomb+0x19>
8100462a:	b8 00 00 00 00       	mov    $0x0,%eax
8100462f:	eb 28                	jmp    81004659 <__ascii_wctomb+0x41>
81004631:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
81004638:	76 10                	jbe    8100464a <__ascii_wctomb+0x32>
8100463a:	8b 45 08             	mov    0x8(%ebp),%eax
8100463d:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81004643:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004648:	eb 0f                	jmp    81004659 <__ascii_wctomb+0x41>
8100464a:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100464d:	89 c2                	mov    %eax,%edx
8100464f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004652:	88 10                	mov    %dl,(%eax)
81004654:	b8 01 00 00 00       	mov    $0x1,%eax
81004659:	c9                   	leave  
8100465a:	c3                   	ret    

8100465b <_fstat_r>:
8100465b:	55                   	push   %ebp
8100465c:	89 e5                	mov    %esp,%ebp
8100465e:	83 ec 18             	sub    $0x18,%esp
81004661:	c7 05 30 55 00 81 00 	movl   $0x0,0x81005530
81004668:	00 00 00 
8100466b:	83 ec 08             	sub    $0x8,%esp
8100466e:	ff 75 10             	push   0x10(%ebp)
81004671:	ff 75 0c             	push   0xc(%ebp)
81004674:	e8 1d bd ff ff       	call   81000396 <fstat>
81004679:	83 c4 10             	add    $0x10,%esp
8100467c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100467f:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004683:	75 14                	jne    81004699 <_fstat_r+0x3e>
81004685:	a1 30 55 00 81       	mov    0x81005530,%eax
8100468a:	85 c0                	test   %eax,%eax
8100468c:	74 0b                	je     81004699 <_fstat_r+0x3e>
8100468e:	8b 15 30 55 00 81    	mov    0x81005530,%edx
81004694:	8b 45 08             	mov    0x8(%ebp),%eax
81004697:	89 10                	mov    %edx,(%eax)
81004699:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100469c:	c9                   	leave  
8100469d:	c3                   	ret    

8100469e <_isatty_r>:
8100469e:	55                   	push   %ebp
8100469f:	89 e5                	mov    %esp,%ebp
810046a1:	83 ec 18             	sub    $0x18,%esp
810046a4:	c7 05 30 55 00 81 00 	movl   $0x0,0x81005530
810046ab:	00 00 00 
810046ae:	83 ec 0c             	sub    $0xc,%esp
810046b1:	ff 75 0c             	push   0xc(%ebp)
810046b4:	e8 bc bc ff ff       	call   81000375 <isatty>
810046b9:	83 c4 10             	add    $0x10,%esp
810046bc:	89 45 f4             	mov    %eax,-0xc(%ebp)
810046bf:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810046c3:	75 14                	jne    810046d9 <_isatty_r+0x3b>
810046c5:	a1 30 55 00 81       	mov    0x81005530,%eax
810046ca:	85 c0                	test   %eax,%eax
810046cc:	74 0b                	je     810046d9 <_isatty_r+0x3b>
810046ce:	8b 15 30 55 00 81    	mov    0x81005530,%edx
810046d4:	8b 45 08             	mov    0x8(%ebp),%eax
810046d7:	89 10                	mov    %edx,(%eax)
810046d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810046dc:	c9                   	leave  
810046dd:	c3                   	ret    
