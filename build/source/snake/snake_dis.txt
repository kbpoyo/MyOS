
/home/kbpoyo/code/cpp/MyOs/build/source/snake/snake.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/snake/snake.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x84000000

Program Header:
    LOAD off    0x00001000 vaddr 0x84000000 paddr 0x84000000 align 2**12
         filesz 0x0000636c memsz 0x000063f8 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000556f  84000000  84000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00000401  84005580  84005580  00006580  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009cc  840059a0  840059a0  000069a0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000078  84006380  84006380  0000736c  2**5
                  ALLOC
  4 .debug_line   00003d21  00000000  00000000  0000736c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_line_str 000010a2  00000000  00000000  0000b08d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   0001bb65  00000000  00000000  0000c12f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 00006398  00000000  00000000  00027c94  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_aranges 00000630  00000000  00000000  0002e030  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_str    0000135b  00000000  00000000  0002e660  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003d  00000000  00000000  0002f9bb  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00001540  00000000  00000000  0002f9f8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000004e  00000000  00000000  00030f38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 main.c
84006380 l     O .bss	00000004 row_max
84006384 l     O .bss	00000004 col_max
84006388 l     O .bss	00000004 food
8400638c l     O .bss	0000000c snake
8400041c l     F .text	00000052 is_hit_itself
8400046e l     F .text	00000051 is_hit_wall
840004bf l     F .text	00000037 is_hit_food
840004f6 l     F .text	00000030 show_char
84000526 l     F .text	0000001f show_string
84000630 l     F .text	00000051 add_head
84000681 l     F .text	00000071 remove_tail
840006f2 l     F .text	00000070 create_snake
84000762 l     F .text	00000103 create_food
84000865 l     F .text	00000024 free_food
84000889 l     F .text	0000015f move_forward
840009e8 l     F .text	0000007a show_welcome
84000a62 l     F .text	0000002c begin_game
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
84000eed l     F .text	000000ad std
84000f9a l     F .text	0000001b stdin_init
84000fb5 l     F .text	0000001b stdout_init
84000fd0 l     F .text	0000001b stderr_init
84006398 l     O .bss	00000004 __sfp_recursive_mutex
8400639c l     O .bss	00000004 __sinit_recursive_mutex
84001293 l     F .text	0000000a __fp_lock
8400129d l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 getchar.c
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 impure.c
840059a0 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
84001983 l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 mlock.c
840063e8 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 __call_atexit.c
840063ec l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
84002f5a l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fputwc.c
84003eb8 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
8400458e l     F .text	0000000a __get_global_locale
84004598 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 mbtowc_r.c
84004634 l     F .text	0000000a __get_global_locale
8400463e l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lib_a-memchr.o
8400475d l       .text	00000000 L20
84004714 l       .text	00000000 L5
8400475a l       .text	00000000 L15
84004720 l       .text	00000000 L8
84004741 l       .text	00000000 L9
84004750 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
84005117 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
840053ea l     F .text	0000000a __get_global_locale
840053f4 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
840054f4 l     F .text	0000000a __get_global_locale
840054fe l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 ctype_.c
8400454e g     F .text	00000040 _isatty_r
84003a13 g     F .text	00000037 cleanup_glue
84002cb8 g     F .text	00000046 _lseek_r
8400014f g     F .text	0000001b yield
840003e3 g     F .text	00000039 ioctl
840024f9 g     F .text	00000035 printf
840053fe g     F .text	00000077 _wcrtomb_r
840028b4 g     F .text	0000004a __sseek
840011e2 g     F .text	00000099 __sinit
84003c2a g     F .text	00000112 __swbuf_r
840045a2 g     F .text	0000005f _setlocale_r
84000feb g     F .text	0000006f __sfmoreglue
840024c6 g     F .text	00000006 __malloc_unlock
840047b0 g       .text	00000000 memmove
840011c8 g     F .text	0000001a _cleanup
8400406d g     F .text	00000043 _fstat_r
840063f0 g     O .bss	00000004 errno
84003c0d g     F .text	0000001d __srget
8400284f g     F .text	0000000a __seofread
84000122 g     F .text	0000002d execve
840000c4 g     F .text	0000001b getpid
84002be2 g     F .text	00000067 _getc_r
84002c49 g     F .text	0000006f getc
84004768 g       .text	00000000 memcpy
840025ff g     F .text	0000020c setvbuf
840011a7 g     F .text	00000021 _cleanup_r
8400194a g     F .text	0000001c malloc
840024cc g     F .text	0000002d _printf_r
84000239 g     F .text	00000021 isatty
84001940 g     F .text	0000000a __getreent
840063a0 g     O .bss	00000004 __malloc_top_pad
84006380 g       .bss	00000000 __bss_start__
840040b0 g     F .text	0000049e __sfvwrite_r
840025bf g     F .text	00000040 _sbrk_r
8400036e g     F .text	00000040 readdir
840039cd g     F .text	00000046 _read_r
84002abe g     F .text	00000107 _fclose_r
84000eb4 g     F .text	00000039 fflush
840063a4 g     O .bss	00000004 __malloc_max_sbrked_mem
8400020c g     F .text	0000002d lseek
84005618 g     O .rodata	00000004 _global_impure_ptr
8400483d g     F .text	000008da _realloc_r
84003fce g     F .text	00000057 _fputwc_r
840012a7 g     F .text	00000024 __fp_lock_all
84003a4a g     F .text	00000160 _reclaim_reent
840001be g     F .text	0000002d write
8400025a g     F .text	00000027 fstat
8400004e g     F .text	0000004c sys_call
84002fc0 g     F .text	000000a8 __sfputs_r
8400127b g     F .text	00000006 __sfp_lock_acquire
840046d0 g       .text	00000000 memchr
840063f8 g       .bss	00000000 __bss_end__
840012ef g     F .text	000003db _free_r
840002e5 g     F .text	00000021 wait
84005700 g     O .rodata	00000180 _ctype_b
84004601 g     F .text	00000014 __locale_mb_cur_max
84003baa g     F .text	00000063 __srget_r
84002969 g     F .text	00000115 __call_exitprocs
840061ec g     O .data	00000004 __malloc_sbrk_base
84000000 g       .text	00000000 _start
84002556 g     F .text	00000069 rand
84000191 g     F .text	0000002d read
84000563 g     F .text	000000cd create_map
84000545 g     F .text	0000001e clear_map
840063c0 g     O .bss	00000028 __malloc_current_mallinfo
840024cc g     F .text	0000002d _iprintf_r
84002a7e g     F .text	00000040 _close_r
84000107 g     F .text	0000001b fork
84003d5d g     F .text	0000015b __swsetup_r
8400105a g     F .text	0000014d __sfp
84005de0 g     O .data	00000408 __malloc_av_
8400128d g     F .text	00000006 __sinit_lock_release
8400280b g     F .text	00000044 __sread
840024c0 g     F .text	00000006 __malloc_lock
84000281 g     F .text	00000021 sbrk
84000e5c g     F .text	00000058 _fflush_r
84000010 g     F .text	0000003e cstart
84002438 g       .text	00000000 memset
84000a8e g     F .text	00000164 main
840063a8 g     O .bss	00000004 __malloc_max_total_mem
84003d3c g     F .text	00000021 __swbuf
8400252e g     F .text	00000028 srand
840028fe g     F .text	00000025 __sclose
84002bc5 g     F .text	0000001d fclose
8400191b g     F .text	00000025 getchar
84001c16 g     F .text	00000822 _malloc_r
8400552c g     F .text	00000043 __ascii_wctomb
84000306 g     F .text	00000068 opendir
8400182b g     F .text	00000068 _fwalk
84004648 g     F .text	0000002a _mbtowc_r
840016ca g     F .text	00000161 _malloc_trim_r
84005345 g     F .text	000000a5 strcmp
84003068 g     F .text	00000025 vfiprintf
840002a2 g     F .text	00000021 dup
840024f9 g     F .text	00000035 iprintf
840063f4 g     O .bss	00000004 _PathLocale
84002923 g     F .text	00000046 _write_r
84004615 g     F .text	0000001f setlocale
840033e3 g     F .text	0000019b _printf_common
84005dc4 g     O .data	00000004 _impure_ptr
84000c36 g     F .text	00000226 __sflush_r
84005144 g     F .text	00000201 __srefill_r
84004672 g     F .text	00000058 __ascii_mbtowc
840012cb g     F .text	00000024 __fp_unlock_all
840000df g     F .text	00000028 print_msg
84002deb g     F .text	00000093 __swhatbuf_r
840018fe g     F .text	0000001d _getchar_r
84003f1e g     F .text	000000b0 __fputwc
84002859 g     F .text	0000005b __swrite
840061e8 g     O .data	00000004 __malloc_trim_threshold
84000bf2 g     F .text	00000044 exit
8400308d g     F .text	00000356 _vfiprintf_r
84001893 g     F .text	0000006b _fwalk_reent
84001281 g     F .text	00000006 __sfp_lock_release
84005880 g     O .rodata	00000101 _ctype_
840002c3 g     F .text	00000022 _exit
84002cfe g     F .text	000000ed __smakebuf_r
8400357e g     F .text	0000044f _printf_i
8400016a g     F .text	00000027 open
84002e7e g     F .text	000000dc __sprint_r
840003ae g     F .text	00000035 closedir
84005508 g     F .text	00000024 _wctomb_r
8400308d g     F .text	00000356 _vfprintf_r
8400009a g     F .text	0000002a msleep
84005475 g     F .text	0000007f wcrtomb
840001eb g     F .text	00000021 close
84006200 g     O .data	0000016c __global_locale
84003068 g     F .text	00000025 vfprintf
84004025 g     F .text	00000048 fputwc
84001966 g     F .text	0000001d free
84001287 g     F .text	00000006 __sinit_lock_acquire



Disassembly of section .text:

84000000 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
84000000:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
84000003:	8e d8                	mov    %eax,%ds
	mov %ax, %es
84000005:	8e c0                	mov    %eax,%es
	mov %ax, %fs
84000007:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
84000009:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
8400000b:	e9 00 00 00 00       	jmp    84000010 <cstart>

84000010 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
84000010:	55                   	push   %ebp
84000011:	89 e5                	mov    %esp,%ebp
84000013:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
84000016:	c7 45 f4 80 63 00 84 	movl   $0x84006380,-0xc(%ebp)
    while (start < __bss_end__) {
8400001d:	eb 0c                	jmp    8400002b <cstart+0x1b>
        *(start++) = 0;
8400001f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000022:	8d 50 01             	lea    0x1(%eax),%edx
84000025:	89 55 f4             	mov    %edx,-0xc(%ebp)
84000028:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
8400002b:	81 7d f4 f8 63 00 84 	cmpl   $0x840063f8,-0xc(%ebp)
84000032:	72 eb                	jb     8400001f <cstart+0xf>
    }
    
    exit(main(argc, argv));
84000034:	83 ec 08             	sub    $0x8,%esp
84000037:	ff 75 0c             	push   0xc(%ebp)
8400003a:	ff 75 08             	push   0x8(%ebp)
8400003d:	e8 4c 0a 00 00       	call   84000a8e <main>
84000042:	83 c4 10             	add    $0x10,%esp
84000045:	83 ec 0c             	sub    $0xc,%esp
84000048:	50                   	push   %eax
84000049:	e8 a4 0b 00 00       	call   84000bf2 <exit>

8400004e <sys_call>:
#include    "os_cfg.h"
#include    "lib_syscall.h"
#include    <stdlib.h>


int sys_call(syscall_args_t *args) {
8400004e:	55                   	push   %ebp
8400004f:	89 e5                	mov    %esp,%ebp
84000051:	57                   	push   %edi
84000052:	56                   	push   %esi
84000053:	53                   	push   %ebx
84000054:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
84000057:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8400005e:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
84000065:	8b 45 08             	mov    0x8(%ebp),%eax
84000068:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
8400006b:	8b 55 08             	mov    0x8(%ebp),%edx
8400006e:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
84000071:	8b 4d 08             	mov    0x8(%ebp),%ecx
84000074:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
84000077:	8b 5d 08             	mov    0x8(%ebp),%ebx
8400007a:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
8400007d:	8b 75 08             	mov    0x8(%ebp),%esi
84000080:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
84000082:	8d 7d e8             	lea    -0x18(%ebp),%edi
84000085:	50                   	push   %eax
84000086:	52                   	push   %edx
84000087:	51                   	push   %ecx
84000088:	53                   	push   %ebx
84000089:	56                   	push   %esi
8400008a:	ff 1f                	lcall  *(%edi)
8400008c:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
8400008f:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
84000092:	83 c4 10             	add    $0x10,%esp
84000095:	5b                   	pop    %ebx
84000096:	5e                   	pop    %esi
84000097:	5f                   	pop    %edi
84000098:	5d                   	pop    %ebp
84000099:	c3                   	ret    

8400009a <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
8400009a:	55                   	push   %ebp
8400009b:	89 e5                	mov    %esp,%ebp
8400009d:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
840000a0:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
840000a4:	7e 1b                	jle    840000c1 <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
840000a6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
840000ad:	8b 45 08             	mov    0x8(%ebp),%eax
840000b0:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
840000b3:	8d 45 ec             	lea    -0x14(%ebp),%eax
840000b6:	50                   	push   %eax
840000b7:	e8 92 ff ff ff       	call   8400004e <sys_call>
840000bc:	83 c4 04             	add    $0x4,%esp
840000bf:	eb 01                	jmp    840000c2 <msleep+0x28>
    if (ms <= 0) return;
840000c1:	90                   	nop

}
840000c2:	c9                   	leave  
840000c3:	c3                   	ret    

840000c4 <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
840000c4:	55                   	push   %ebp
840000c5:	89 e5                	mov    %esp,%ebp
840000c7:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
840000ca:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
840000d1:	8d 45 ec             	lea    -0x14(%ebp),%eax
840000d4:	50                   	push   %eax
840000d5:	e8 74 ff ff ff       	call   8400004e <sys_call>
840000da:	83 c4 04             	add    $0x4,%esp
}
840000dd:	c9                   	leave  
840000de:	c3                   	ret    

840000df <print_msg>:

void print_msg(const char *fmt, int arg) {
840000df:	55                   	push   %ebp
840000e0:	89 e5                	mov    %esp,%ebp
840000e2:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
840000e5:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
840000ec:	8b 45 08             	mov    0x8(%ebp),%eax
840000ef:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
840000f2:	8b 45 0c             	mov    0xc(%ebp),%eax
840000f5:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
840000f8:	8d 45 ec             	lea    -0x14(%ebp),%eax
840000fb:	50                   	push   %eax
840000fc:	e8 4d ff ff ff       	call   8400004e <sys_call>
84000101:	83 c4 04             	add    $0x4,%esp
}
84000104:	90                   	nop
84000105:	c9                   	leave  
84000106:	c3                   	ret    

84000107 <fork>:

int fork (void) {
84000107:	55                   	push   %ebp
84000108:	89 e5                	mov    %esp,%ebp
8400010a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
8400010d:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
84000114:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000117:	50                   	push   %eax
84000118:	e8 31 ff ff ff       	call   8400004e <sys_call>
8400011d:	83 c4 04             	add    $0x4,%esp
}
84000120:	c9                   	leave  
84000121:	c3                   	ret    

84000122 <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
84000122:	55                   	push   %ebp
84000123:	89 e5                	mov    %esp,%ebp
84000125:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
84000128:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
8400012f:	8b 45 08             	mov    0x8(%ebp),%eax
84000132:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
84000135:	8b 45 0c             	mov    0xc(%ebp),%eax
84000138:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
8400013b:	8b 45 10             	mov    0x10(%ebp),%eax
8400013e:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
84000141:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000144:	50                   	push   %eax
84000145:	e8 04 ff ff ff       	call   8400004e <sys_call>
8400014a:	83 c4 04             	add    $0x4,%esp
}
8400014d:	c9                   	leave  
8400014e:	c3                   	ret    

8400014f <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
8400014f:	55                   	push   %ebp
84000150:	89 e5                	mov    %esp,%ebp
84000152:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
84000155:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
8400015c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8400015f:	50                   	push   %eax
84000160:	e8 e9 fe ff ff       	call   8400004e <sys_call>
84000165:	83 c4 04             	add    $0x4,%esp
}
84000168:	c9                   	leave  
84000169:	c3                   	ret    

8400016a <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
8400016a:	55                   	push   %ebp
8400016b:	89 e5                	mov    %esp,%ebp
8400016d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
84000170:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
84000177:	8b 45 08             	mov    0x8(%ebp),%eax
8400017a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
8400017d:	8b 45 0c             	mov    0xc(%ebp),%eax
84000180:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
84000183:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000186:	50                   	push   %eax
84000187:	e8 c2 fe ff ff       	call   8400004e <sys_call>
8400018c:	83 c4 04             	add    $0x4,%esp
}
8400018f:	c9                   	leave  
84000190:	c3                   	ret    

84000191 <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
84000191:	55                   	push   %ebp
84000192:	89 e5                	mov    %esp,%ebp
84000194:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
84000197:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
8400019e:	8b 45 08             	mov    0x8(%ebp),%eax
840001a1:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
840001a4:	8b 45 0c             	mov    0xc(%ebp),%eax
840001a7:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
840001aa:	8b 45 10             	mov    0x10(%ebp),%eax
840001ad:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
840001b0:	8d 45 ec             	lea    -0x14(%ebp),%eax
840001b3:	50                   	push   %eax
840001b4:	e8 95 fe ff ff       	call   8400004e <sys_call>
840001b9:	83 c4 04             	add    $0x4,%esp
}
840001bc:	c9                   	leave  
840001bd:	c3                   	ret    

840001be <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
840001be:	55                   	push   %ebp
840001bf:	89 e5                	mov    %esp,%ebp
840001c1:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
840001c4:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
840001cb:	8b 45 08             	mov    0x8(%ebp),%eax
840001ce:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
840001d1:	8b 45 0c             	mov    0xc(%ebp),%eax
840001d4:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
840001d7:	8b 45 10             	mov    0x10(%ebp),%eax
840001da:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
840001dd:	8d 45 ec             	lea    -0x14(%ebp),%eax
840001e0:	50                   	push   %eax
840001e1:	e8 68 fe ff ff       	call   8400004e <sys_call>
840001e6:	83 c4 04             	add    $0x4,%esp
}
840001e9:	c9                   	leave  
840001ea:	c3                   	ret    

840001eb <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
840001eb:	55                   	push   %ebp
840001ec:	89 e5                	mov    %esp,%ebp
840001ee:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
840001f1:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
840001f8:	8b 45 08             	mov    0x8(%ebp),%eax
840001fb:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
840001fe:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000201:	50                   	push   %eax
84000202:	e8 47 fe ff ff       	call   8400004e <sys_call>
84000207:	83 c4 04             	add    $0x4,%esp
}
8400020a:	c9                   	leave  
8400020b:	c3                   	ret    

8400020c <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
8400020c:	55                   	push   %ebp
8400020d:	89 e5                	mov    %esp,%ebp
8400020f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
84000212:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
84000219:	8b 45 08             	mov    0x8(%ebp),%eax
8400021c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
8400021f:	8b 45 0c             	mov    0xc(%ebp),%eax
84000222:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
84000225:	8b 45 10             	mov    0x10(%ebp),%eax
84000228:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8400022b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8400022e:	50                   	push   %eax
8400022f:	e8 1a fe ff ff       	call   8400004e <sys_call>
84000234:	83 c4 04             	add    $0x4,%esp
}
84000237:	c9                   	leave  
84000238:	c3                   	ret    

84000239 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
84000239:	55                   	push   %ebp
8400023a:	89 e5                	mov    %esp,%ebp
8400023c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
8400023f:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
84000246:	8b 45 08             	mov    0x8(%ebp),%eax
84000249:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8400024c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8400024f:	50                   	push   %eax
84000250:	e8 f9 fd ff ff       	call   8400004e <sys_call>
84000255:	83 c4 04             	add    $0x4,%esp
}
84000258:	c9                   	leave  
84000259:	c3                   	ret    

8400025a <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
8400025a:	55                   	push   %ebp
8400025b:	89 e5                	mov    %esp,%ebp
8400025d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
84000260:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
84000267:	8b 45 08             	mov    0x8(%ebp),%eax
8400026a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
8400026d:	8b 45 0c             	mov    0xc(%ebp),%eax
84000270:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
84000273:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000276:	50                   	push   %eax
84000277:	e8 d2 fd ff ff       	call   8400004e <sys_call>
8400027c:	83 c4 04             	add    $0x4,%esp
}
8400027f:	c9                   	leave  
84000280:	c3                   	ret    

84000281 <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
84000281:	55                   	push   %ebp
84000282:	89 e5                	mov    %esp,%ebp
84000284:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
84000287:	c7 45 ec 3b 00 00 00 	movl   $0x3b,-0x14(%ebp)
    args.arg0 = (int)incr;
8400028e:	8b 45 08             	mov    0x8(%ebp),%eax
84000291:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
84000294:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000297:	50                   	push   %eax
84000298:	e8 b1 fd ff ff       	call   8400004e <sys_call>
8400029d:	83 c4 04             	add    $0x4,%esp
}
840002a0:	c9                   	leave  
840002a1:	c3                   	ret    

840002a2 <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
840002a2:	55                   	push   %ebp
840002a3:	89 e5                	mov    %esp,%ebp
840002a5:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
840002a8:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = file;
840002af:	8b 45 08             	mov    0x8(%ebp),%eax
840002b2:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
840002b5:	8d 45 ec             	lea    -0x14(%ebp),%eax
840002b8:	50                   	push   %eax
840002b9:	e8 90 fd ff ff       	call   8400004e <sys_call>
840002be:	83 c4 04             	add    $0x4,%esp
}
840002c1:	c9                   	leave  
840002c2:	c3                   	ret    

840002c3 <_exit>:
/**
 * @brief 进程退出的系统调用
 * 
 * @param status 
 */
void _exit(int status) {
840002c3:	55                   	push   %ebp
840002c4:	89 e5                	mov    %esp,%ebp
840002c6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
840002c9:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = status;
840002d0:	8b 45 08             	mov    0x8(%ebp),%eax
840002d3:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    sys_call(&args);
840002d6:	8d 45 ec             	lea    -0x14(%ebp),%eax
840002d9:	50                   	push   %eax
840002da:	e8 6f fd ff ff       	call   8400004e <sys_call>
840002df:	83 c4 04             	add    $0x4,%esp
}
840002e2:	90                   	nop
840002e3:	c9                   	leave  
840002e4:	c3                   	ret    

840002e5 <wait>:
 * @brief 回收进程资源
 * 
 * @param status 
 * @return int 
 */
int wait(int *status) {
840002e5:	55                   	push   %ebp
840002e6:	89 e5                	mov    %esp,%ebp
840002e8:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
840002eb:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
840002f2:	8b 45 08             	mov    0x8(%ebp),%eax
840002f5:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    return sys_call(&args);
840002f8:	8d 45 ec             	lea    -0x14(%ebp),%eax
840002fb:	50                   	push   %eax
840002fc:	e8 4d fd ff ff       	call   8400004e <sys_call>
84000301:	83 c4 04             	add    $0x4,%esp
}
84000304:	c9                   	leave  
84000305:	c3                   	ret    

84000306 <opendir>:
 * @brief 打开一个目录
 * 
 * @param path 
 * @return DIR* 
 */
DIR *opendir(const char *path) {
84000306:	55                   	push   %ebp
84000307:	89 e5                	mov    %esp,%ebp
84000309:	83 ec 28             	sub    $0x28,%esp
    DIR *dir = (DIR*)malloc(sizeof(DIR));
8400030c:	83 ec 0c             	sub    $0xc,%esp
8400030f:	6a 20                	push   $0x20
84000311:	e8 34 16 00 00       	call   8400194a <malloc>
84000316:	83 c4 10             	add    $0x10,%esp
84000319:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR*)0) {
8400031c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84000320:	75 07                	jne    84000329 <opendir+0x23>
        return (DIR*)0;
84000322:	b8 00 00 00 00       	mov    $0x0,%eax
84000327:	eb 43                	jmp    8400036c <opendir+0x66>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
84000329:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)path;
84000330:	8b 45 08             	mov    0x8(%ebp),%eax
84000333:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
84000336:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000339:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
8400033c:	83 ec 0c             	sub    $0xc,%esp
8400033f:	8d 45 dc             	lea    -0x24(%ebp),%eax
84000342:	50                   	push   %eax
84000343:	e8 06 fd ff ff       	call   8400004e <sys_call>
84000348:	83 c4 10             	add    $0x10,%esp
8400034b:	89 45 f0             	mov    %eax,-0x10(%ebp)

    if (err < 0) {
8400034e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
84000352:	79 15                	jns    84000369 <opendir+0x63>
        free(dir);
84000354:	83 ec 0c             	sub    $0xc,%esp
84000357:	ff 75 f4             	push   -0xc(%ebp)
8400035a:	e8 07 16 00 00       	call   84001966 <free>
8400035f:	83 c4 10             	add    $0x10,%esp
        return (DIR*)0;
84000362:	b8 00 00 00 00       	mov    $0x0,%eax
84000367:	eb 03                	jmp    8400036c <opendir+0x66>
    }

    return dir;    
84000369:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
8400036c:	c9                   	leave  
8400036d:	c3                   	ret    

8400036e <readdir>:
 * @brief 读取目录信息得到目录项表
 * 
 * @param dir 
 * @return struct dirent* 
 */
struct dirent *readdir(DIR *dir) {
8400036e:	55                   	push   %ebp
8400036f:	89 e5                	mov    %esp,%ebp
84000371:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_readdir;
84000374:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
8400037b:	8b 45 08             	mov    0x8(%ebp),%eax
8400037e:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&(dir->dirent);
84000381:	8b 45 08             	mov    0x8(%ebp),%eax
84000384:	83 c0 04             	add    $0x4,%eax
84000387:	89 45 f0             	mov    %eax,-0x10(%ebp)

    int err = sys_call(&args);
8400038a:	8d 45 e8             	lea    -0x18(%ebp),%eax
8400038d:	50                   	push   %eax
8400038e:	e8 bb fc ff ff       	call   8400004e <sys_call>
84000393:	83 c4 04             	add    $0x4,%esp
84000396:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0) {
84000399:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
8400039d:	79 07                	jns    840003a6 <readdir+0x38>
        return (struct dirent*)0;
8400039f:	b8 00 00 00 00       	mov    $0x0,%eax
840003a4:	eb 06                	jmp    840003ac <readdir+0x3e>
    }

    return &dir->dirent;   
840003a6:	8b 45 08             	mov    0x8(%ebp),%eax
840003a9:	83 c0 04             	add    $0x4,%eax
}
840003ac:	c9                   	leave  
840003ad:	c3                   	ret    

840003ae <closedir>:
 * @brief 关闭目录
 * 
 * @param dir 
 * @return int 
 */
int closedir(DIR *dir) {
840003ae:	55                   	push   %ebp
840003af:	89 e5                	mov    %esp,%ebp
840003b1:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
840003b4:	c7 45 e0 3e 00 00 00 	movl   $0x3e,-0x20(%ebp)
    args.arg0 = (int)dir;
840003bb:	8b 45 08             	mov    0x8(%ebp),%eax
840003be:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
840003c1:	8d 45 e0             	lea    -0x20(%ebp),%eax
840003c4:	50                   	push   %eax
840003c5:	e8 84 fc ff ff       	call   8400004e <sys_call>
840003ca:	83 c4 04             	add    $0x4,%esp
840003cd:	89 45 f4             	mov    %eax,-0xc(%ebp)
    free(dir);
840003d0:	83 ec 0c             	sub    $0xc,%esp
840003d3:	ff 75 08             	push   0x8(%ebp)
840003d6:	e8 8b 15 00 00       	call   84001966 <free>
840003db:	83 c4 10             	add    $0x10,%esp

    return err;   
840003de:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
840003e1:	c9                   	leave  
840003e2:	c3                   	ret    

840003e3 <ioctl>:
 * @param cmd 
 * @param arg0 
 * @param arg1 
 * @return int 
 */
int ioctl(int file, int cmd, int arg0, int arg1) {
840003e3:	55                   	push   %ebp
840003e4:	89 e5                	mov    %esp,%ebp
840003e6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_ioctl;
840003e9:	c7 45 e8 3a 00 00 00 	movl   $0x3a,-0x18(%ebp)
    args.arg0 = file;
840003f0:	8b 45 08             	mov    0x8(%ebp),%eax
840003f3:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = cmd;
840003f6:	8b 45 0c             	mov    0xc(%ebp),%eax
840003f9:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg2 = arg0;
840003fc:	8b 45 10             	mov    0x10(%ebp),%eax
840003ff:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg3 = arg1;
84000402:	8b 45 14             	mov    0x14(%ebp),%eax
84000405:	89 45 f8             	mov    %eax,-0x8(%ebp)

    int err = sys_call(&args);
84000408:	8d 45 e8             	lea    -0x18(%ebp),%eax
8400040b:	50                   	push   %eax
8400040c:	e8 3d fc ff ff       	call   8400004e <sys_call>
84000411:	83 c4 04             	add    $0x4,%esp
84000414:	89 45 fc             	mov    %eax,-0x4(%ebp)

    return err;   
84000417:	8b 45 fc             	mov    -0x4(%ebp),%eax
8400041a:	c9                   	leave  
8400041b:	c3                   	ret    

8400041c <is_hit_itself>:
static snake_t snake;		// 目前只支持一条蛇

/**
 * 判断蛇是否咬到自己
 */
static int is_hit_itself (void) {
8400041c:	55                   	push   %ebp
8400041d:	89 e5                	mov    %esp,%ebp
8400041f:	83 ec 10             	sub    $0x10,%esp
	for (body_part_t * body = snake.head->next; body; body = body->next) {
84000422:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000427:	8b 40 08             	mov    0x8(%eax),%eax
8400042a:	89 45 fc             	mov    %eax,-0x4(%ebp)
8400042d:	eb 32                	jmp    84000461 <is_hit_itself+0x45>
		if ((body->row == snake.head->row) && (body->col == snake.head->col)) {
8400042f:	8b 45 fc             	mov    -0x4(%ebp),%eax
84000432:	8b 10                	mov    (%eax),%edx
84000434:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000439:	8b 00                	mov    (%eax),%eax
8400043b:	39 c2                	cmp    %eax,%edx
8400043d:	75 19                	jne    84000458 <is_hit_itself+0x3c>
8400043f:	8b 45 fc             	mov    -0x4(%ebp),%eax
84000442:	8b 50 04             	mov    0x4(%eax),%edx
84000445:	a1 8c 63 00 84       	mov    0x8400638c,%eax
8400044a:	8b 40 04             	mov    0x4(%eax),%eax
8400044d:	39 c2                	cmp    %eax,%edx
8400044f:	75 07                	jne    84000458 <is_hit_itself+0x3c>
			return 1;
84000451:	b8 01 00 00 00       	mov    $0x1,%eax
84000456:	eb 14                	jmp    8400046c <is_hit_itself+0x50>
	for (body_part_t * body = snake.head->next; body; body = body->next) {
84000458:	8b 45 fc             	mov    -0x4(%ebp),%eax
8400045b:	8b 40 08             	mov    0x8(%eax),%eax
8400045e:	89 45 fc             	mov    %eax,-0x4(%ebp)
84000461:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
84000465:	75 c8                	jne    8400042f <is_hit_itself+0x13>
		}
	}
	return 0;
84000467:	b8 00 00 00 00       	mov    $0x0,%eax
}
8400046c:	c9                   	leave  
8400046d:	c3                   	ret    

8400046e <is_hit_wall>:

/**
 * 判断是否碰到墙
 */
static int is_hit_wall (void) {
8400046e:	55                   	push   %ebp
8400046f:	89 e5                	mov    %esp,%ebp
	return ((snake.head->row <= 0) 
84000471:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000476:	8b 00                	mov    (%eax),%eax
			|| (snake.head->col <= 0))
			|| (snake.head->row >= row_max - 1) 
			|| (snake.head->col >= col_max - 1);
84000478:	85 c0                	test   %eax,%eax
8400047a:	7e 35                	jle    840004b1 <is_hit_wall+0x43>
			|| (snake.head->col <= 0))
8400047c:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000481:	8b 40 04             	mov    0x4(%eax),%eax
84000484:	85 c0                	test   %eax,%eax
84000486:	7e 29                	jle    840004b1 <is_hit_wall+0x43>
			|| (snake.head->row >= row_max - 1) 
84000488:	a1 8c 63 00 84       	mov    0x8400638c,%eax
8400048d:	8b 00                	mov    (%eax),%eax
8400048f:	8b 15 80 63 00 84    	mov    0x84006380,%edx
84000495:	83 ea 01             	sub    $0x1,%edx
84000498:	39 d0                	cmp    %edx,%eax
8400049a:	7d 15                	jge    840004b1 <is_hit_wall+0x43>
			|| (snake.head->col >= col_max - 1);
8400049c:	a1 8c 63 00 84       	mov    0x8400638c,%eax
840004a1:	8b 40 04             	mov    0x4(%eax),%eax
840004a4:	8b 15 84 63 00 84    	mov    0x84006384,%edx
840004aa:	83 ea 01             	sub    $0x1,%edx
840004ad:	39 d0                	cmp    %edx,%eax
840004af:	7c 07                	jl     840004b8 <is_hit_wall+0x4a>
840004b1:	b8 01 00 00 00       	mov    $0x1,%eax
840004b6:	eb 05                	jmp    840004bd <is_hit_wall+0x4f>
840004b8:	b8 00 00 00 00       	mov    $0x0,%eax
}
840004bd:	5d                   	pop    %ebp
840004be:	c3                   	ret    

840004bf <is_hit_food>:

/**
 * 判断是否吃到食物
 */
static int is_hit_food (void) {
840004bf:	55                   	push   %ebp
840004c0:	89 e5                	mov    %esp,%ebp
	return ((snake.head->row == food->row) && (snake.head->col == food->col));
840004c2:	a1 8c 63 00 84       	mov    0x8400638c,%eax
840004c7:	8b 10                	mov    (%eax),%edx
840004c9:	a1 88 63 00 84       	mov    0x84006388,%eax
840004ce:	8b 00                	mov    (%eax),%eax
840004d0:	39 c2                	cmp    %eax,%edx
840004d2:	75 1b                	jne    840004ef <is_hit_food+0x30>
840004d4:	a1 8c 63 00 84       	mov    0x8400638c,%eax
840004d9:	8b 50 04             	mov    0x4(%eax),%edx
840004dc:	a1 88 63 00 84       	mov    0x84006388,%eax
840004e1:	8b 40 04             	mov    0x4(%eax),%eax
840004e4:	39 c2                	cmp    %eax,%edx
840004e6:	75 07                	jne    840004ef <is_hit_food+0x30>
840004e8:	b8 01 00 00 00       	mov    $0x1,%eax
840004ed:	eb 05                	jmp    840004f4 <is_hit_food+0x35>
840004ef:	b8 00 00 00 00       	mov    $0x0,%eax
}
840004f4:	5d                   	pop    %ebp
840004f5:	c3                   	ret    

840004f6 <show_char>:

static inline void show_char(int row, int col, char c) {
840004f6:	55                   	push   %ebp
840004f7:	89 e5                	mov    %esp,%ebp
840004f9:	83 ec 18             	sub    $0x18,%esp
840004fc:	8b 45 10             	mov    0x10(%ebp),%eax
840004ff:	88 45 f4             	mov    %al,-0xc(%ebp)
    printf("\x1b[%d;%dH%c\x1b[%d;%dH", row, col, c, row, col);
84000502:	0f be 45 f4          	movsbl -0xc(%ebp),%eax
84000506:	83 ec 08             	sub    $0x8,%esp
84000509:	ff 75 0c             	push   0xc(%ebp)
8400050c:	ff 75 08             	push   0x8(%ebp)
8400050f:	50                   	push   %eax
84000510:	ff 75 0c             	push   0xc(%ebp)
84000513:	ff 75 08             	push   0x8(%ebp)
84000516:	68 80 55 00 84       	push   $0x84005580
8400051b:	e8 d9 1f 00 00       	call   840024f9 <iprintf>
84000520:	83 c4 20             	add    $0x20,%esp
}
84000523:	90                   	nop
84000524:	c9                   	leave  
84000525:	c3                   	ret    

84000526 <show_string>:

static inline void show_string (int row, int col, char * str) {
84000526:	55                   	push   %ebp
84000527:	89 e5                	mov    %esp,%ebp
84000529:	83 ec 08             	sub    $0x8,%esp
    printf("\x1b[%d;%dH%s", row, col, str);
8400052c:	ff 75 10             	push   0x10(%ebp)
8400052f:	ff 75 0c             	push   0xc(%ebp)
84000532:	ff 75 08             	push   0x8(%ebp)
84000535:	68 93 55 00 84       	push   $0x84005593
8400053a:	e8 ba 1f 00 00       	call   840024f9 <iprintf>
8400053f:	83 c4 10             	add    $0x10,%esp
}
84000542:	90                   	nop
84000543:	c9                   	leave  
84000544:	c3                   	ret    

84000545 <clear_map>:

/**
 * 清空整个地图
 */
void clear_map (void) {
84000545:	55                   	push   %ebp
84000546:	89 e5                	mov    %esp,%ebp
84000548:	83 ec 08             	sub    $0x8,%esp
    printf("%s", ESC_CLEAR_SCREEN);
8400054b:	83 ec 08             	sub    $0x8,%esp
8400054e:	68 9e 55 00 84       	push   $0x8400559e
84000553:	68 a3 55 00 84       	push   $0x840055a3
84000558:	e8 9c 1f 00 00       	call   840024f9 <iprintf>
8400055d:	83 c4 10             	add    $0x10,%esp
}
84000560:	90                   	nop
84000561:	c9                   	leave  
84000562:	c3                   	ret    

84000563 <create_map>:

/**
 * 创建地图
 */
void create_map(void) {
84000563:	55                   	push   %ebp
84000564:	89 e5                	mov    %esp,%ebp
84000566:	83 ec 18             	sub    $0x18,%esp
	clear_map();
84000569:	e8 d7 ff ff ff       	call   84000545 <clear_map>

    // 上下行
    for (int col = 1; col < col_max - 1; col++) {
8400056e:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
84000575:	eb 16                	jmp    8400058d <create_map+0x2a>
        show_char(0, col, '=');
84000577:	83 ec 04             	sub    $0x4,%esp
8400057a:	6a 3d                	push   $0x3d
8400057c:	ff 75 f4             	push   -0xc(%ebp)
8400057f:	6a 00                	push   $0x0
84000581:	e8 70 ff ff ff       	call   840004f6 <show_char>
84000586:	83 c4 10             	add    $0x10,%esp
    for (int col = 1; col < col_max - 1; col++) {
84000589:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8400058d:	a1 84 63 00 84       	mov    0x84006384,%eax
84000592:	83 e8 01             	sub    $0x1,%eax
84000595:	39 45 f4             	cmp    %eax,-0xc(%ebp)
84000598:	7c dd                	jl     84000577 <create_map+0x14>
    }
    for (int col = 1; col < col_max - 1; col++) {
8400059a:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
840005a1:	eb 1d                	jmp    840005c0 <create_map+0x5d>
        show_char(row_max -1, col, '=');
840005a3:	a1 80 63 00 84       	mov    0x84006380,%eax
840005a8:	83 e8 01             	sub    $0x1,%eax
840005ab:	83 ec 04             	sub    $0x4,%esp
840005ae:	6a 3d                	push   $0x3d
840005b0:	ff 75 f0             	push   -0x10(%ebp)
840005b3:	50                   	push   %eax
840005b4:	e8 3d ff ff ff       	call   840004f6 <show_char>
840005b9:	83 c4 10             	add    $0x10,%esp
    for (int col = 1; col < col_max - 1; col++) {
840005bc:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
840005c0:	a1 84 63 00 84       	mov    0x84006384,%eax
840005c5:	83 e8 01             	sub    $0x1,%eax
840005c8:	39 45 f0             	cmp    %eax,-0x10(%ebp)
840005cb:	7c d6                	jl     840005a3 <create_map+0x40>
    }

    // 左右边界
    for (int row = 1; row < row_max - 1; row++) {
840005cd:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
840005d4:	eb 16                	jmp    840005ec <create_map+0x89>
        show_char(row, 0, '|');
840005d6:	83 ec 04             	sub    $0x4,%esp
840005d9:	6a 7c                	push   $0x7c
840005db:	6a 00                	push   $0x0
840005dd:	ff 75 ec             	push   -0x14(%ebp)
840005e0:	e8 11 ff ff ff       	call   840004f6 <show_char>
840005e5:	83 c4 10             	add    $0x10,%esp
    for (int row = 1; row < row_max - 1; row++) {
840005e8:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
840005ec:	a1 80 63 00 84       	mov    0x84006380,%eax
840005f1:	83 e8 01             	sub    $0x1,%eax
840005f4:	39 45 ec             	cmp    %eax,-0x14(%ebp)
840005f7:	7c dd                	jl     840005d6 <create_map+0x73>
    }
    for (int row = 1; row < row_max - 1; row++) {
840005f9:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
84000600:	eb 1d                	jmp    8400061f <create_map+0xbc>
        show_char(row, col_max - 1, '|');
84000602:	a1 84 63 00 84       	mov    0x84006384,%eax
84000607:	83 e8 01             	sub    $0x1,%eax
8400060a:	83 ec 04             	sub    $0x4,%esp
8400060d:	6a 7c                	push   $0x7c
8400060f:	50                   	push   %eax
84000610:	ff 75 e8             	push   -0x18(%ebp)
84000613:	e8 de fe ff ff       	call   840004f6 <show_char>
84000618:	83 c4 10             	add    $0x10,%esp
    for (int row = 1; row < row_max - 1; row++) {
8400061b:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
8400061f:	a1 80 63 00 84       	mov    0x84006380,%eax
84000624:	83 e8 01             	sub    $0x1,%eax
84000627:	39 45 e8             	cmp    %eax,-0x18(%ebp)
8400062a:	7c d6                	jl     84000602 <create_map+0x9f>
    }
}
8400062c:	90                   	nop
8400062d:	90                   	nop
8400062e:	c9                   	leave  
8400062f:	c3                   	ret    

84000630 <add_head>:

/**
 * 给蛇添加头部
 */
static void add_head (int row, int col) {
84000630:	55                   	push   %ebp
84000631:	89 e5                	mov    %esp,%ebp
84000633:	83 ec 18             	sub    $0x18,%esp
	body_part_t * part = (body_part_t *)malloc(sizeof(body_part_t));
84000636:	83 ec 0c             	sub    $0xc,%esp
84000639:	6a 0c                	push   $0xc
8400063b:	e8 0a 13 00 00       	call   8400194a <malloc>
84000640:	83 c4 10             	add    $0x10,%esp
84000643:	89 45 f4             	mov    %eax,-0xc(%ebp)
	part->row = row;
84000646:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000649:	8b 55 08             	mov    0x8(%ebp),%edx
8400064c:	89 10                	mov    %edx,(%eax)
	part->col = col;
8400064e:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000651:	8b 55 0c             	mov    0xc(%ebp),%edx
84000654:	89 50 04             	mov    %edx,0x4(%eax)
	part->next = snake.head;
84000657:	8b 15 8c 63 00 84    	mov    0x8400638c,%edx
8400065d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000660:	89 50 08             	mov    %edx,0x8(%eax)
	snake.head = part;
84000663:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000666:	a3 8c 63 00 84       	mov    %eax,0x8400638c
	show_char(row, col, '*');
8400066b:	83 ec 04             	sub    $0x4,%esp
8400066e:	6a 2a                	push   $0x2a
84000670:	ff 75 0c             	push   0xc(%ebp)
84000673:	ff 75 08             	push   0x8(%ebp)
84000676:	e8 7b fe ff ff       	call   840004f6 <show_char>
8400067b:	83 c4 10             	add    $0x10,%esp
}
8400067e:	90                   	nop
8400067f:	c9                   	leave  
84000680:	c3                   	ret    

84000681 <remove_tail>:

/**
 * 移除蛇尾的最后一个结点
 */
static void remove_tail (void) {
84000681:	55                   	push   %ebp
84000682:	89 e5                	mov    %esp,%ebp
84000684:	83 ec 18             	sub    $0x18,%esp
	// 先定位curr到最后一个结点
	body_part_t * pre = (body_part_t *)0;
84000687:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
	body_part_t * curr = snake.head;
8400068e:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000693:	89 45 f0             	mov    %eax,-0x10(%ebp)
	while (curr->next) {
84000696:	eb 0f                	jmp    840006a7 <remove_tail+0x26>
		pre = curr;
84000698:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400069b:	89 45 f4             	mov    %eax,-0xc(%ebp)
		curr = curr->next;
8400069e:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006a1:	8b 40 08             	mov    0x8(%eax),%eax
840006a4:	89 45 f0             	mov    %eax,-0x10(%ebp)
	while (curr->next) {
840006a7:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006aa:	8b 40 08             	mov    0x8(%eax),%eax
840006ad:	85 c0                	test   %eax,%eax
840006af:	75 e7                	jne    84000698 <remove_tail+0x17>
	}

	show_char(curr->row, curr->col, ' ');
840006b1:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006b4:	8b 50 04             	mov    0x4(%eax),%edx
840006b7:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006ba:	8b 00                	mov    (%eax),%eax
840006bc:	83 ec 04             	sub    $0x4,%esp
840006bf:	6a 20                	push   $0x20
840006c1:	52                   	push   %edx
840006c2:	50                   	push   %eax
840006c3:	e8 2e fe ff ff       	call   840004f6 <show_char>
840006c8:	83 c4 10             	add    $0x10,%esp

	// 再移除
	pre->next = curr->next;
840006cb:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006ce:	8b 50 08             	mov    0x8(%eax),%edx
840006d1:	8b 45 f4             	mov    -0xc(%ebp),%eax
840006d4:	89 50 08             	mov    %edx,0x8(%eax)
	curr->next = (body_part_t *)0;
840006d7:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006da:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
	free(curr);
840006e1:	83 ec 0c             	sub    $0xc,%esp
840006e4:	ff 75 f0             	push   -0x10(%ebp)
840006e7:	e8 7a 12 00 00       	call   84001966 <free>
840006ec:	83 c4 10             	add    $0x10,%esp
}
840006ef:	90                   	nop
840006f0:	c9                   	leave  
840006f1:	c3                   	ret    

840006f2 <create_snake>:

/**
 * 创建蛇。最开始只有一个头
 */
static void create_snake (void) {
840006f2:	55                   	push   %ebp
840006f3:	89 e5                	mov    %esp,%ebp
840006f5:	83 ec 08             	sub    $0x8,%esp
	snake.head = (body_part_t *)malloc(sizeof(body_part_t));
840006f8:	83 ec 0c             	sub    $0xc,%esp
840006fb:	6a 0c                	push   $0xc
840006fd:	e8 48 12 00 00       	call   8400194a <malloc>
84000702:	83 c4 10             	add    $0x10,%esp
84000705:	a3 8c 63 00 84       	mov    %eax,0x8400638c
	snake.head->row = 10;        // 初始位置
8400070a:	a1 8c 63 00 84       	mov    0x8400638c,%eax
8400070f:	c7 00 0a 00 00 00    	movl   $0xa,(%eax)
	snake.head->col = 20;
84000715:	a1 8c 63 00 84       	mov    0x8400638c,%eax
8400071a:	c7 40 04 14 00 00 00 	movl   $0x14,0x4(%eax)
	snake.head->next = (body_part_t *)0;
84000721:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000726:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
	snake.status = SNAKE_BIT_NONE;
8400072d:	c7 05 90 63 00 84 00 	movl   $0x0,0x84006390
84000734:	00 00 00 
	snake.dir = PLAYER1_KEY_LEFT;
84000737:	c7 05 94 63 00 84 61 	movl   $0x61,0x84006394
8400073e:	00 00 00 
    show_char(snake.head->row, snake.head->col, '*');
84000741:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000746:	8b 50 04             	mov    0x4(%eax),%edx
84000749:	a1 8c 63 00 84       	mov    0x8400638c,%eax
8400074e:	8b 00                	mov    (%eax),%eax
84000750:	83 ec 04             	sub    $0x4,%esp
84000753:	6a 2a                	push   $0x2a
84000755:	52                   	push   %edx
84000756:	50                   	push   %eax
84000757:	e8 9a fd ff ff       	call   840004f6 <show_char>
8400075c:	83 c4 10             	add    $0x10,%esp
}
8400075f:	90                   	nop
84000760:	c9                   	leave  
84000761:	c3                   	ret    

84000762 <create_food>:

/**
 * 创建食物
 */
static void create_food(void)  {
84000762:	55                   	push   %ebp
84000763:	89 e5                	mov    %esp,%ebp
84000765:	83 ec 18             	sub    $0x18,%esp
	// 创建一个body
	food = (body_part_t *)malloc(sizeof(body_part_t));
84000768:	83 ec 0c             	sub    $0xc,%esp
8400076b:	6a 0c                	push   $0xc
8400076d:	e8 d8 11 00 00       	call   8400194a <malloc>
84000772:	83 c4 10             	add    $0x10,%esp
84000775:	a3 88 63 00 84       	mov    %eax,0x84006388

	// 在设定位置时要避免与身体重合，所以要反复调整
	body_part_t * part = snake.head;
8400077a:	a1 8c 63 00 84       	mov    0x8400638c,%eax
8400077f:	89 45 f4             	mov    %eax,-0xc(%ebp)
	do {
		// 设定一个随机的位置，没有随机数怎么办？
		// 只要让每次出现的位置有变化即可，不一定要真的随机
		food->row = 1 + rand() % (row_max - 3);
84000782:	e8 cf 1d 00 00       	call   84002556 <rand>
84000787:	8b 15 80 63 00 84    	mov    0x84006380,%edx
8400078d:	8d 4a fd             	lea    -0x3(%edx),%ecx
84000790:	99                   	cltd   
84000791:	f7 f9                	idiv   %ecx
84000793:	a1 88 63 00 84       	mov    0x84006388,%eax
84000798:	83 c2 01             	add    $0x1,%edx
8400079b:	89 10                	mov    %edx,(%eax)
		food->col = 1 + rand() % (col_max - 3);
8400079d:	e8 b4 1d 00 00       	call   84002556 <rand>
840007a2:	8b 15 84 63 00 84    	mov    0x84006384,%edx
840007a8:	8d 4a fd             	lea    -0x3(%edx),%ecx
840007ab:	99                   	cltd   
840007ac:	f7 f9                	idiv   %ecx
840007ae:	a1 88 63 00 84       	mov    0x84006388,%eax
840007b3:	83 c2 01             	add    $0x1,%edx
840007b6:	89 50 04             	mov    %edx,0x4(%eax)

		// 食物不能在墙上
		if ((food->row < 0) || (food->row >= row_max)
840007b9:	a1 88 63 00 84       	mov    0x84006388,%eax
840007be:	8b 00                	mov    (%eax),%eax
840007c0:	85 c0                	test   %eax,%eax
840007c2:	0f 88 95 00 00 00    	js     8400085d <create_food+0xfb>
840007c8:	a1 88 63 00 84       	mov    0x84006388,%eax
840007cd:	8b 10                	mov    (%eax),%edx
840007cf:	a1 80 63 00 84       	mov    0x84006380,%eax
840007d4:	39 c2                	cmp    %eax,%edx
840007d6:	0f 8d 81 00 00 00    	jge    8400085d <create_food+0xfb>
				|| (food->col < 0) || (food->col >= col_max)) {
840007dc:	a1 88 63 00 84       	mov    0x84006388,%eax
840007e1:	8b 40 04             	mov    0x4(%eax),%eax
840007e4:	85 c0                	test   %eax,%eax
840007e6:	78 75                	js     8400085d <create_food+0xfb>
840007e8:	a1 88 63 00 84       	mov    0x84006388,%eax
840007ed:	8b 50 04             	mov    0x4(%eax),%edx
840007f0:	a1 84 63 00 84       	mov    0x84006384,%eax
840007f5:	39 c2                	cmp    %eax,%edx
840007f7:	7d 64                	jge    8400085d <create_food+0xfb>
			continue;
		}

		// 食物不能在蛇身上
		// 遍历，如果有重合，则重来。没有则退出
		while (part) {
840007f9:	eb 4f                	jmp    8400084a <create_food+0xe8>
			if ((food->row != snake.head->row) || (food->col != snake.head->col)) {
840007fb:	a1 88 63 00 84       	mov    0x84006388,%eax
84000800:	8b 10                	mov    (%eax),%edx
84000802:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000807:	8b 00                	mov    (%eax),%eax
84000809:	39 c2                	cmp    %eax,%edx
8400080b:	75 14                	jne    84000821 <create_food+0xbf>
8400080d:	a1 88 63 00 84       	mov    0x84006388,%eax
84000812:	8b 50 04             	mov    0x4(%eax),%edx
84000815:	a1 8c 63 00 84       	mov    0x8400638c,%eax
8400081a:	8b 40 04             	mov    0x4(%eax),%eax
8400081d:	39 c2                	cmp    %eax,%edx
8400081f:	74 20                	je     84000841 <create_food+0xdf>
				// 将食物显示出来
				show_char(food->row, food->col, '*');
84000821:	a1 88 63 00 84       	mov    0x84006388,%eax
84000826:	8b 50 04             	mov    0x4(%eax),%edx
84000829:	a1 88 63 00 84       	mov    0x84006388,%eax
8400082e:	8b 00                	mov    (%eax),%eax
84000830:	83 ec 04             	sub    $0x4,%esp
84000833:	6a 2a                	push   $0x2a
84000835:	52                   	push   %edx
84000836:	50                   	push   %eax
84000837:	e8 ba fc ff ff       	call   840004f6 <show_char>
8400083c:	83 c4 10             	add    $0x10,%esp
				return;
8400083f:	eb 22                	jmp    84000863 <create_food+0x101>
			}
			part = part->next;
84000841:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000844:	8b 40 08             	mov    0x8(%eax),%eax
84000847:	89 45 f4             	mov    %eax,-0xc(%ebp)
		while (part) {
8400084a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8400084e:	75 ab                	jne    840007fb <create_food+0x99>
		}
		part = snake.head;
84000850:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000855:	89 45 f4             	mov    %eax,-0xc(%ebp)
84000858:	e9 25 ff ff ff       	jmp    84000782 <create_food+0x20>
			continue;
8400085d:	90                   	nop
		food->row = 1 + rand() % (row_max - 3);
8400085e:	e9 1f ff ff ff       	jmp    84000782 <create_food+0x20>
	} while (1);
}
84000863:	c9                   	leave  
84000864:	c3                   	ret    

84000865 <free_food>:

/**
 * 释放掉食物
 */
static void free_food (void) {
84000865:	55                   	push   %ebp
84000866:	89 e5                	mov    %esp,%ebp
84000868:	83 ec 08             	sub    $0x8,%esp
	free(food);
8400086b:	a1 88 63 00 84       	mov    0x84006388,%eax
84000870:	83 ec 0c             	sub    $0xc,%esp
84000873:	50                   	push   %eax
84000874:	e8 ed 10 00 00       	call   84001966 <free>
84000879:	83 c4 10             	add    $0x10,%esp
	food = (body_part_t *)0;
8400087c:	c7 05 88 63 00 84 00 	movl   $0x0,0x84006388
84000883:	00 00 00 
}
84000886:	90                   	nop
84000887:	c9                   	leave  
84000888:	c3                   	ret    

84000889 <move_forward>:

/**
 * 蛇向前移动一个位置，具体移动方向由键盘控制
 */
static void move_forward (int dir) {
84000889:	55                   	push   %ebp
8400088a:	89 e5                	mov    %esp,%ebp
8400088c:	83 ec 18             	sub    $0x18,%esp
	int next_row, next_col;

	// 计算下一位置
	switch (dir) {
8400088f:	83 7d 08 77          	cmpl   $0x77,0x8(%ebp)
84000893:	74 5f                	je     840008f4 <move_forward+0x6b>
84000895:	83 7d 08 77          	cmpl   $0x77,0x8(%ebp)
84000899:	0f 8f 43 01 00 00    	jg     840009e2 <move_forward+0x159>
8400089f:	83 7d 08 73          	cmpl   $0x73,0x8(%ebp)
840008a3:	74 69                	je     8400090e <move_forward+0x85>
840008a5:	83 7d 08 73          	cmpl   $0x73,0x8(%ebp)
840008a9:	0f 8f 33 01 00 00    	jg     840009e2 <move_forward+0x159>
840008af:	83 7d 08 61          	cmpl   $0x61,0x8(%ebp)
840008b3:	74 0b                	je     840008c0 <move_forward+0x37>
840008b5:	83 7d 08 64          	cmpl   $0x64,0x8(%ebp)
840008b9:	74 1f                	je     840008da <move_forward+0x51>
	case PLAYER1_KEY_DOWN:
		next_row = snake.head->row + 1;
		next_col = snake.head->col;
		break;
	default:
		return;
840008bb:	e9 22 01 00 00       	jmp    840009e2 <move_forward+0x159>
		next_row = snake.head->row;
840008c0:	a1 8c 63 00 84       	mov    0x8400638c,%eax
840008c5:	8b 00                	mov    (%eax),%eax
840008c7:	89 45 f4             	mov    %eax,-0xc(%ebp)
		next_col = snake.head->col - 1;
840008ca:	a1 8c 63 00 84       	mov    0x8400638c,%eax
840008cf:	8b 40 04             	mov    0x4(%eax),%eax
840008d2:	83 e8 01             	sub    $0x1,%eax
840008d5:	89 45 f0             	mov    %eax,-0x10(%ebp)
		break;
840008d8:	eb 4d                	jmp    84000927 <move_forward+0x9e>
		next_row = snake.head->row;
840008da:	a1 8c 63 00 84       	mov    0x8400638c,%eax
840008df:	8b 00                	mov    (%eax),%eax
840008e1:	89 45 f4             	mov    %eax,-0xc(%ebp)
		next_col = snake.head->col + 1;
840008e4:	a1 8c 63 00 84       	mov    0x8400638c,%eax
840008e9:	8b 40 04             	mov    0x4(%eax),%eax
840008ec:	83 c0 01             	add    $0x1,%eax
840008ef:	89 45 f0             	mov    %eax,-0x10(%ebp)
		break;
840008f2:	eb 33                	jmp    84000927 <move_forward+0x9e>
		next_row = snake.head->row - 1;
840008f4:	a1 8c 63 00 84       	mov    0x8400638c,%eax
840008f9:	8b 00                	mov    (%eax),%eax
840008fb:	83 e8 01             	sub    $0x1,%eax
840008fe:	89 45 f4             	mov    %eax,-0xc(%ebp)
		next_col = snake.head->col;
84000901:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000906:	8b 40 04             	mov    0x4(%eax),%eax
84000909:	89 45 f0             	mov    %eax,-0x10(%ebp)
		break;
8400090c:	eb 19                	jmp    84000927 <move_forward+0x9e>
		next_row = snake.head->row + 1;
8400090e:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000913:	8b 00                	mov    (%eax),%eax
84000915:	83 c0 01             	add    $0x1,%eax
84000918:	89 45 f4             	mov    %eax,-0xc(%ebp)
		next_col = snake.head->col;
8400091b:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000920:	8b 40 04             	mov    0x4(%eax),%eax
84000923:	89 45 f0             	mov    %eax,-0x10(%ebp)
		break;
84000926:	90                   	nop
	}

	body_part_t * next_part = snake.head->next;
84000927:	a1 8c 63 00 84       	mov    0x8400638c,%eax
8400092c:	8b 40 08             	mov    0x8(%eax),%eax
8400092f:	89 45 ec             	mov    %eax,-0x14(%ebp)
	if (next_part) {
84000932:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
84000936:	74 19                	je     84000951 <move_forward+0xc8>
		if ((next_row == next_part->row) && (next_col == next_part->col)) {
84000938:	8b 45 ec             	mov    -0x14(%ebp),%eax
8400093b:	8b 00                	mov    (%eax),%eax
8400093d:	39 45 f4             	cmp    %eax,-0xc(%ebp)
84000940:	75 0f                	jne    84000951 <move_forward+0xc8>
84000942:	8b 45 ec             	mov    -0x14(%ebp),%eax
84000945:	8b 40 04             	mov    0x4(%eax),%eax
84000948:	39 45 f0             	cmp    %eax,-0x10(%ebp)
8400094b:	0f 84 94 00 00 00    	je     840009e5 <move_forward+0x15c>
			return;
		}
	}

	// 先不管有没有食物，都生成一个头部，然后前移
	add_head(next_row, next_col);
84000951:	83 ec 08             	sub    $0x8,%esp
84000954:	ff 75 f0             	push   -0x10(%ebp)
84000957:	ff 75 f4             	push   -0xc(%ebp)
8400095a:	e8 d1 fc ff ff       	call   84000630 <add_head>
8400095f:	83 c4 10             	add    $0x10,%esp

	// 然后检查相应的异常情况
	if (is_hit_itself()) {
84000962:	e8 b5 fa ff ff       	call   8400041c <is_hit_itself>
84000967:	85 c0                	test   %eax,%eax
84000969:	74 11                	je     8400097c <move_forward+0xf3>
		snake.status = SNAKE_BIT_ITSELF;
8400096b:	c7 05 90 63 00 84 01 	movl   $0x1,0x84006390
84000972:	00 00 00 
		remove_tail();
84000975:	e8 07 fd ff ff       	call   84000681 <remove_tail>
8400097a:	eb 48                	jmp    840009c4 <move_forward+0x13b>
	} else if (is_hit_wall()) {
8400097c:	e8 ed fa ff ff       	call   8400046e <is_hit_wall>
84000981:	85 c0                	test   %eax,%eax
84000983:	74 11                	je     84000996 <move_forward+0x10d>
		snake.status = SNAKE_BIT_WALL;
84000985:	c7 05 90 63 00 84 02 	movl   $0x2,0x84006390
8400098c:	00 00 00 
		remove_tail();
8400098f:	e8 ed fc ff ff       	call   84000681 <remove_tail>
84000994:	eb 2e                	jmp    840009c4 <move_forward+0x13b>
	} else if (is_hit_food()){
84000996:	e8 24 fb ff ff       	call   840004bf <is_hit_food>
8400099b:	85 c0                	test   %eax,%eax
8400099d:	74 16                	je     840009b5 <move_forward+0x12c>
		// 食物被吃掉, 回收，重新生成
		free_food();
8400099f:	e8 c1 fe ff ff       	call   84000865 <free_food>
		create_food();
840009a4:	e8 b9 fd ff ff       	call   84000762 <create_food>
		snake.status = SNAKE_BIT_FOOD;
840009a9:	c7 05 90 63 00 84 03 	movl   $0x3,0x84006390
840009b0:	00 00 00 
840009b3:	eb 0f                	jmp    840009c4 <move_forward+0x13b>
	} else {
		// 没有吃到食物，需要移除尾部
		remove_tail();
840009b5:	e8 c7 fc ff ff       	call   84000681 <remove_tail>
		snake.status = SNAKE_BIT_NONE;
840009ba:	c7 05 90 63 00 84 00 	movl   $0x0,0x84006390
840009c1:	00 00 00 
	}

	snake.dir = dir;
840009c4:	8b 45 08             	mov    0x8(%ebp),%eax
840009c7:	a3 94 63 00 84       	mov    %eax,0x84006394
	fflush(stdout);
840009cc:	e8 6f 0f 00 00       	call   84001940 <__getreent>
840009d1:	8b 40 08             	mov    0x8(%eax),%eax
840009d4:	83 ec 0c             	sub    $0xc,%esp
840009d7:	50                   	push   %eax
840009d8:	e8 d7 04 00 00       	call   84000eb4 <fflush>
840009dd:	83 c4 10             	add    $0x10,%esp
840009e0:	eb 04                	jmp    840009e6 <move_forward+0x15d>
		return;
840009e2:	90                   	nop
840009e3:	eb 01                	jmp    840009e6 <move_forward+0x15d>
			return;
840009e5:	90                   	nop
}
840009e6:	c9                   	leave  
840009e7:	c3                   	ret    

840009e8 <show_welcome>:

/**
 * 初始化游戏
 */
static void show_welcome (void) {
840009e8:	55                   	push   %ebp
840009e9:	89 e5                	mov    %esp,%ebp
840009eb:	83 ec 08             	sub    $0x8,%esp
	clear_map();
840009ee:	e8 52 fb ff ff       	call   84000545 <clear_map>
	// setvbuf(stdout, NULL, _IONBF, 0); 调试用

    show_string(0, 0, "Welcome to sname game");
840009f3:	83 ec 04             	sub    $0x4,%esp
840009f6:	68 a6 55 00 84       	push   $0x840055a6
840009fb:	6a 00                	push   $0x0
840009fd:	6a 00                	push   $0x0
840009ff:	e8 22 fb ff ff       	call   84000526 <show_string>
84000a04:	83 c4 10             	add    $0x10,%esp
    show_string(1, 0, "Use a.w.s.d to move snake");
84000a07:	83 ec 04             	sub    $0x4,%esp
84000a0a:	68 bc 55 00 84       	push   $0x840055bc
84000a0f:	6a 00                	push   $0x0
84000a11:	6a 01                	push   $0x1
84000a13:	e8 0e fb ff ff       	call   84000526 <show_string>
84000a18:	83 c4 10             	add    $0x10,%esp
    show_string(2, 0, "Press any key to start game");
84000a1b:	83 ec 04             	sub    $0x4,%esp
84000a1e:	68 d6 55 00 84       	push   $0x840055d6
84000a23:	6a 00                	push   $0x0
84000a25:	6a 02                	push   $0x2
84000a27:	e8 fa fa ff ff       	call   84000526 <show_string>
84000a2c:	83 c4 10             	add    $0x10,%esp
	fflush(stdout);
84000a2f:	e8 0c 0f 00 00       	call   84001940 <__getreent>
84000a34:	8b 40 08             	mov    0x8(%eax),%eax
84000a37:	83 ec 0c             	sub    $0xc,%esp
84000a3a:	50                   	push   %eax
84000a3b:	e8 74 04 00 00       	call   84000eb4 <fflush>
84000a40:	83 c4 10             	add    $0x10,%esp
	
	// 按Q即退出，所以无缓存输入
	setvbuf(stdin, NULL, _IONBF, 0);
84000a43:	e8 f8 0e 00 00       	call   84001940 <__getreent>
84000a48:	8b 40 04             	mov    0x4(%eax),%eax
84000a4b:	6a 00                	push   $0x0
84000a4d:	6a 02                	push   $0x2
84000a4f:	6a 00                	push   $0x0
84000a51:	50                   	push   %eax
84000a52:	e8 a8 1b 00 00       	call   840025ff <setvbuf>
84000a57:	83 c4 10             	add    $0x10,%esp
    getchar();
84000a5a:	e8 bc 0e 00 00       	call   8400191b <getchar>
}
84000a5f:	90                   	nop
84000a60:	c9                   	leave  
84000a61:	c3                   	ret    

84000a62 <begin_game>:

/**
 * @brief 开始游戏
 */
static void begin_game (void) {
84000a62:	55                   	push   %ebp
84000a63:	89 e5                	mov    %esp,%ebp
84000a65:	83 ec 08             	sub    $0x8,%esp
    create_map();
84000a68:	e8 f6 fa ff ff       	call   84000563 <create_map>
    create_snake();
84000a6d:	e8 80 fc ff ff       	call   840006f2 <create_snake>
    create_food();
84000a72:	e8 eb fc ff ff       	call   84000762 <create_food>
	fflush(stdout);
84000a77:	e8 c4 0e 00 00       	call   84001940 <__getreent>
84000a7c:	8b 40 08             	mov    0x8(%eax),%eax
84000a7f:	83 ec 0c             	sub    $0xc,%esp
84000a82:	50                   	push   %eax
84000a83:	e8 2c 04 00 00       	call   84000eb4 <fflush>
84000a88:	83 c4 10             	add    $0x10,%esp
}
84000a8b:	90                   	nop
84000a8c:	c9                   	leave  
84000a8d:	c3                   	ret    

84000a8e <main>:

int main (int argc, char ** argv) {
84000a8e:	8d 4c 24 04          	lea    0x4(%esp),%ecx
84000a92:	83 e4 f0             	and    $0xfffffff0,%esp
84000a95:	ff 71 fc             	push   -0x4(%ecx)
84000a98:	55                   	push   %ebp
84000a99:	89 e5                	mov    %esp,%ebp
84000a9b:	51                   	push   %ecx
84000a9c:	83 ec 24             	sub    $0x24,%esp
	row_max = 25;
84000a9f:	c7 05 80 63 00 84 19 	movl   $0x19,0x84006380
84000aa6:	00 00 00 
	col_max = 80;
84000aa9:	c7 05 84 63 00 84 50 	movl   $0x50,0x84006384
84000ab0:	00 00 00 

	ioctl(0, TTY_CMD_ECHO, 0, 0);
84000ab3:	6a 00                	push   $0x0
84000ab5:	6a 00                	push   $0x0
84000ab7:	6a 01                	push   $0x1
84000ab9:	6a 00                	push   $0x0
84000abb:	e8 23 f9 ff ff       	call   840003e3 <ioctl>
84000ac0:	83 c4 10             	add    $0x10,%esp

	show_welcome();
84000ac3:	e8 20 ff ff ff       	call   840009e8 <show_welcome>
    begin_game();
84000ac8:	e8 95 ff ff ff       	call   84000a62 <begin_game>

    int count;
	int cnt = 0;
84000acd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
	do {
		// 检查是否有键盘输入
		ioctl(0, TTY_CMD_IN_COUNT, (int)&count, 0);
84000ad4:	8d 45 e4             	lea    -0x1c(%ebp),%eax
84000ad7:	6a 00                	push   $0x0
84000ad9:	50                   	push   %eax
84000ada:	6a 02                	push   $0x2
84000adc:	6a 00                	push   $0x0
84000ade:	e8 00 f9 ff ff       	call   840003e3 <ioctl>
84000ae3:	83 c4 10             	add    $0x10,%esp
		if (count) {
84000ae6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84000ae9:	85 c0                	test   %eax,%eax
84000aeb:	74 18                	je     84000b05 <main+0x77>
			int ch = getchar();
84000aed:	e8 29 0e 00 00       	call   8400191b <getchar>
84000af2:	89 45 f0             	mov    %eax,-0x10(%ebp)
			move_forward(ch);
84000af5:	83 ec 0c             	sub    $0xc,%esp
84000af8:	ff 75 f0             	push   -0x10(%ebp)
84000afb:	e8 89 fd ff ff       	call   84000889 <move_forward>
84000b00:	83 c4 10             	add    $0x10,%esp
84000b03:	eb 38                	jmp    84000b3d <main+0xaf>
		} else if (++cnt % 50 == 0) {
84000b05:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
84000b09:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84000b0c:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
84000b11:	89 c8                	mov    %ecx,%eax
84000b13:	f7 ea                	imul   %edx
84000b15:	89 d0                	mov    %edx,%eax
84000b17:	c1 f8 04             	sar    $0x4,%eax
84000b1a:	89 ca                	mov    %ecx,%edx
84000b1c:	c1 fa 1f             	sar    $0x1f,%edx
84000b1f:	29 d0                	sub    %edx,%eax
84000b21:	6b d0 32             	imul   $0x32,%eax,%edx
84000b24:	89 c8                	mov    %ecx,%eax
84000b26:	29 d0                	sub    %edx,%eax
84000b28:	85 c0                	test   %eax,%eax
84000b2a:	75 11                	jne    84000b3d <main+0xaf>
			// 每隔一段时间自动往前移
			move_forward(snake.dir);
84000b2c:	a1 94 63 00 84       	mov    0x84006394,%eax
84000b31:	83 ec 0c             	sub    $0xc,%esp
84000b34:	50                   	push   %eax
84000b35:	e8 4f fd ff ff       	call   84000889 <move_forward>
84000b3a:	83 c4 10             	add    $0x10,%esp
		}

		if ((snake.status == SNAKE_BIT_ITSELF) || (snake.status == SNAKE_BIT_WALL)) {
84000b3d:	a1 90 63 00 84       	mov    0x84006390,%eax
84000b42:	83 f8 01             	cmp    $0x1,%eax
84000b45:	74 0a                	je     84000b51 <main+0xc3>
84000b47:	a1 90 63 00 84       	mov    0x84006390,%eax
84000b4c:	83 f8 02             	cmp    $0x2,%eax
84000b4f:	75 6d                	jne    84000bbe <main+0x130>
			int row = row_max / 2, col = col_max / 2;
84000b51:	a1 80 63 00 84       	mov    0x84006380,%eax
84000b56:	89 c2                	mov    %eax,%edx
84000b58:	c1 ea 1f             	shr    $0x1f,%edx
84000b5b:	01 d0                	add    %edx,%eax
84000b5d:	d1 f8                	sar    %eax
84000b5f:	89 45 ec             	mov    %eax,-0x14(%ebp)
84000b62:	a1 84 63 00 84       	mov    0x84006384,%eax
84000b67:	89 c2                	mov    %eax,%edx
84000b69:	c1 ea 1f             	shr    $0x1f,%edx
84000b6c:	01 d0                	add    %edx,%eax
84000b6e:	d1 f8                	sar    %eax
84000b70:	89 45 e8             	mov    %eax,-0x18(%ebp)
			show_string(row, col,  "GAME OVER");
84000b73:	83 ec 04             	sub    $0x4,%esp
84000b76:	68 f2 55 00 84       	push   $0x840055f2
84000b7b:	ff 75 e8             	push   -0x18(%ebp)
84000b7e:	ff 75 ec             	push   -0x14(%ebp)
84000b81:	e8 a0 f9 ff ff       	call   84000526 <show_string>
84000b86:	83 c4 10             	add    $0x10,%esp
			show_string(row + 1, col,  "Press Any key to continue");
84000b89:	8b 45 ec             	mov    -0x14(%ebp),%eax
84000b8c:	83 c0 01             	add    $0x1,%eax
84000b8f:	83 ec 04             	sub    $0x4,%esp
84000b92:	68 fc 55 00 84       	push   $0x840055fc
84000b97:	ff 75 e8             	push   -0x18(%ebp)
84000b9a:	50                   	push   %eax
84000b9b:	e8 86 f9 ff ff       	call   84000526 <show_string>
84000ba0:	83 c4 10             	add    $0x10,%esp
			fflush(stdout);
84000ba3:	e8 98 0d 00 00       	call   84001940 <__getreent>
84000ba8:	8b 40 08             	mov    0x8(%eax),%eax
84000bab:	83 ec 0c             	sub    $0xc,%esp
84000bae:	50                   	push   %eax
84000baf:	e8 00 03 00 00       	call   84000eb4 <fflush>
84000bb4:	83 c4 10             	add    $0x10,%esp
			getchar();
84000bb7:	e8 5f 0d 00 00       	call   8400191b <getchar>
			break;
84000bbc:	eb 12                	jmp    84000bd0 <main+0x142>
		}

		msleep(10);
84000bbe:	83 ec 0c             	sub    $0xc,%esp
84000bc1:	6a 0a                	push   $0xa
84000bc3:	e8 d2 f4 ff ff       	call   8400009a <msleep>
84000bc8:	83 c4 10             	add    $0x10,%esp
		ioctl(0, TTY_CMD_IN_COUNT, (int)&count, 0);
84000bcb:	e9 04 ff ff ff       	jmp    84000ad4 <main+0x46>
	}while (1);

	// 这里是有危险的，如果进程异常退出，将导致回显失败
	ioctl(0, TTY_CMD_ECHO, 1, 0);
84000bd0:	6a 00                	push   $0x0
84000bd2:	6a 01                	push   $0x1
84000bd4:	6a 01                	push   $0x1
84000bd6:	6a 00                	push   $0x0
84000bd8:	e8 06 f8 ff ff       	call   840003e3 <ioctl>
84000bdd:	83 c4 10             	add    $0x10,%esp
	clear_map();
84000be0:	e8 60 f9 ff ff       	call   84000545 <clear_map>
    return 0;
84000be5:	b8 00 00 00 00       	mov    $0x0,%eax
}
84000bea:	8b 4d fc             	mov    -0x4(%ebp),%ecx
84000bed:	c9                   	leave  
84000bee:	8d 61 fc             	lea    -0x4(%ecx),%esp
84000bf1:	c3                   	ret    

84000bf2 <exit>:
84000bf2:	55                   	push   %ebp
84000bf3:	89 e5                	mov    %esp,%ebp
84000bf5:	83 ec 08             	sub    $0x8,%esp
84000bf8:	83 ec 08             	sub    $0x8,%esp
84000bfb:	6a 00                	push   $0x0
84000bfd:	ff 75 08             	push   0x8(%ebp)
84000c00:	e8 64 1d 00 00       	call   84002969 <__call_exitprocs>
84000c05:	83 c4 10             	add    $0x10,%esp
84000c08:	a1 18 56 00 84       	mov    0x84005618,%eax
84000c0d:	8b 40 3c             	mov    0x3c(%eax),%eax
84000c10:	85 c0                	test   %eax,%eax
84000c12:	74 17                	je     84000c2b <exit+0x39>
84000c14:	a1 18 56 00 84       	mov    0x84005618,%eax
84000c19:	8b 40 3c             	mov    0x3c(%eax),%eax
84000c1c:	8b 15 18 56 00 84    	mov    0x84005618,%edx
84000c22:	83 ec 0c             	sub    $0xc,%esp
84000c25:	52                   	push   %edx
84000c26:	ff d0                	call   *%eax
84000c28:	83 c4 10             	add    $0x10,%esp
84000c2b:	83 ec 0c             	sub    $0xc,%esp
84000c2e:	ff 75 08             	push   0x8(%ebp)
84000c31:	e8 8d f6 ff ff       	call   840002c3 <_exit>

84000c36 <__sflush_r>:
84000c36:	55                   	push   %ebp
84000c37:	89 e5                	mov    %esp,%ebp
84000c39:	57                   	push   %edi
84000c3a:	56                   	push   %esi
84000c3b:	53                   	push   %ebx
84000c3c:	83 ec 1c             	sub    $0x1c,%esp
84000c3f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84000c42:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000c46:	66 89 45 de          	mov    %ax,-0x22(%ebp)
84000c4a:	0f bf 45 de          	movswl -0x22(%ebp),%eax
84000c4e:	83 e0 08             	and    $0x8,%eax
84000c51:	85 c0                	test   %eax,%eax
84000c53:	0f 85 93 01 00 00    	jne    84000dec <__sflush_r+0x1b6>
84000c59:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000c5d:	80 cc 08             	or     $0x8,%ah
84000c60:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84000c64:	8b 43 04             	mov    0x4(%ebx),%eax
84000c67:	85 c0                	test   %eax,%eax
84000c69:	7f 0b                	jg     84000c76 <__sflush_r+0x40>
84000c6b:	8b 43 3c             	mov    0x3c(%ebx),%eax
84000c6e:	85 c0                	test   %eax,%eax
84000c70:	0f 8e 6f 01 00 00    	jle    84000de5 <__sflush_r+0x1af>
84000c76:	8b 43 28             	mov    0x28(%ebx),%eax
84000c79:	85 c0                	test   %eax,%eax
84000c7b:	0f 84 64 01 00 00    	je     84000de5 <__sflush_r+0x1af>
84000c81:	8b 45 08             	mov    0x8(%ebp),%eax
84000c84:	8b 00                	mov    (%eax),%eax
84000c86:	89 45 d8             	mov    %eax,-0x28(%ebp)
84000c89:	8b 45 08             	mov    0x8(%ebp),%eax
84000c8c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
84000c92:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000c96:	98                   	cwtl   
84000c97:	25 00 10 00 00       	and    $0x1000,%eax
84000c9c:	85 c0                	test   %eax,%eax
84000c9e:	74 08                	je     84000ca8 <__sflush_r+0x72>
84000ca0:	8b 43 50             	mov    0x50(%ebx),%eax
84000ca3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84000ca6:	eb 64                	jmp    84000d0c <__sflush_r+0xd6>
84000ca8:	8b 43 28             	mov    0x28(%ebx),%eax
84000cab:	8b 53 1c             	mov    0x1c(%ebx),%edx
84000cae:	6a 01                	push   $0x1
84000cb0:	6a 00                	push   $0x0
84000cb2:	52                   	push   %edx
84000cb3:	ff 75 08             	push   0x8(%ebp)
84000cb6:	ff d0                	call   *%eax
84000cb8:	83 c4 10             	add    $0x10,%esp
84000cbb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84000cbe:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
84000cc2:	75 48                	jne    84000d0c <__sflush_r+0xd6>
84000cc4:	8b 45 08             	mov    0x8(%ebp),%eax
84000cc7:	8b 00                	mov    (%eax),%eax
84000cc9:	85 c0                	test   %eax,%eax
84000ccb:	74 3f                	je     84000d0c <__sflush_r+0xd6>
84000ccd:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
84000cd4:	8b 45 08             	mov    0x8(%ebp),%eax
84000cd7:	8b 00                	mov    (%eax),%eax
84000cd9:	83 f8 1d             	cmp    $0x1d,%eax
84000cdc:	74 0a                	je     84000ce8 <__sflush_r+0xb2>
84000cde:	8b 45 08             	mov    0x8(%ebp),%eax
84000ce1:	8b 00                	mov    (%eax),%eax
84000ce3:	83 f8 16             	cmp    $0x16,%eax
84000ce6:	75 11                	jne    84000cf9 <__sflush_r+0xc3>
84000ce8:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
84000cef:	8b 45 08             	mov    0x8(%ebp),%eax
84000cf2:	8b 55 d8             	mov    -0x28(%ebp),%edx
84000cf5:	89 10                	mov    %edx,(%eax)
84000cf7:	eb 0b                	jmp    84000d04 <__sflush_r+0xce>
84000cf9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000cfd:	83 c8 40             	or     $0x40,%eax
84000d00:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84000d04:	8b 45 e0             	mov    -0x20(%ebp),%eax
84000d07:	e9 48 01 00 00       	jmp    84000e54 <__sflush_r+0x21e>
84000d0c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000d10:	98                   	cwtl   
84000d11:	83 e0 04             	and    $0x4,%eax
84000d14:	85 c0                	test   %eax,%eax
84000d16:	74 13                	je     84000d2b <__sflush_r+0xf5>
84000d18:	8b 43 04             	mov    0x4(%ebx),%eax
84000d1b:	29 45 e4             	sub    %eax,-0x1c(%ebp)
84000d1e:	8b 43 30             	mov    0x30(%ebx),%eax
84000d21:	85 c0                	test   %eax,%eax
84000d23:	74 06                	je     84000d2b <__sflush_r+0xf5>
84000d25:	8b 43 3c             	mov    0x3c(%ebx),%eax
84000d28:	29 45 e4             	sub    %eax,-0x1c(%ebp)
84000d2b:	8b 43 28             	mov    0x28(%ebx),%eax
84000d2e:	8b 53 1c             	mov    0x1c(%ebx),%edx
84000d31:	6a 00                	push   $0x0
84000d33:	ff 75 e4             	push   -0x1c(%ebp)
84000d36:	52                   	push   %edx
84000d37:	ff 75 08             	push   0x8(%ebp)
84000d3a:	ff d0                	call   *%eax
84000d3c:	83 c4 10             	add    $0x10,%esp
84000d3f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84000d42:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
84000d46:	75 1d                	jne    84000d65 <__sflush_r+0x12f>
84000d48:	8b 45 08             	mov    0x8(%ebp),%eax
84000d4b:	8b 00                	mov    (%eax),%eax
84000d4d:	85 c0                	test   %eax,%eax
84000d4f:	74 14                	je     84000d65 <__sflush_r+0x12f>
84000d51:	8b 45 08             	mov    0x8(%ebp),%eax
84000d54:	8b 00                	mov    (%eax),%eax
84000d56:	83 f8 1d             	cmp    $0x1d,%eax
84000d59:	74 0a                	je     84000d65 <__sflush_r+0x12f>
84000d5b:	8b 45 08             	mov    0x8(%ebp),%eax
84000d5e:	8b 00                	mov    (%eax),%eax
84000d60:	83 f8 16             	cmp    $0x16,%eax
84000d63:	75 6e                	jne    84000dd3 <__sflush_r+0x19d>
84000d65:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000d69:	80 e4 f7             	and    $0xf7,%ah
84000d6c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84000d70:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
84000d77:	8b 43 10             	mov    0x10(%ebx),%eax
84000d7a:	89 03                	mov    %eax,(%ebx)
84000d7c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000d80:	98                   	cwtl   
84000d81:	25 00 10 00 00       	and    $0x1000,%eax
84000d86:	85 c0                	test   %eax,%eax
84000d88:	74 15                	je     84000d9f <__sflush_r+0x169>
84000d8a:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
84000d8e:	75 09                	jne    84000d99 <__sflush_r+0x163>
84000d90:	8b 45 08             	mov    0x8(%ebp),%eax
84000d93:	8b 00                	mov    (%eax),%eax
84000d95:	85 c0                	test   %eax,%eax
84000d97:	75 06                	jne    84000d9f <__sflush_r+0x169>
84000d99:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84000d9c:	89 43 50             	mov    %eax,0x50(%ebx)
84000d9f:	8b 45 08             	mov    0x8(%ebp),%eax
84000da2:	8b 55 d8             	mov    -0x28(%ebp),%edx
84000da5:	89 10                	mov    %edx,(%eax)
84000da7:	8b 43 30             	mov    0x30(%ebx),%eax
84000daa:	85 c0                	test   %eax,%eax
84000dac:	74 37                	je     84000de5 <__sflush_r+0x1af>
84000dae:	8b 53 30             	mov    0x30(%ebx),%edx
84000db1:	8d 43 40             	lea    0x40(%ebx),%eax
84000db4:	39 c2                	cmp    %eax,%edx
84000db6:	74 12                	je     84000dca <__sflush_r+0x194>
84000db8:	8b 43 30             	mov    0x30(%ebx),%eax
84000dbb:	83 ec 08             	sub    $0x8,%esp
84000dbe:	50                   	push   %eax
84000dbf:	ff 75 08             	push   0x8(%ebp)
84000dc2:	e8 28 05 00 00       	call   840012ef <_free_r>
84000dc7:	83 c4 10             	add    $0x10,%esp
84000dca:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
84000dd1:	eb 12                	jmp    84000de5 <__sflush_r+0x1af>
84000dd3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000dd7:	83 c8 40             	or     $0x40,%eax
84000dda:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84000dde:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84000de3:	eb 6f                	jmp    84000e54 <__sflush_r+0x21e>
84000de5:	b8 00 00 00 00       	mov    $0x0,%eax
84000dea:	eb 68                	jmp    84000e54 <__sflush_r+0x21e>
84000dec:	8b 73 10             	mov    0x10(%ebx),%esi
84000def:	85 f6                	test   %esi,%esi
84000df1:	75 07                	jne    84000dfa <__sflush_r+0x1c4>
84000df3:	b8 00 00 00 00       	mov    $0x0,%eax
84000df8:	eb 5a                	jmp    84000e54 <__sflush_r+0x21e>
84000dfa:	8b 03                	mov    (%ebx),%eax
84000dfc:	29 f0                	sub    %esi,%eax
84000dfe:	89 c7                	mov    %eax,%edi
84000e00:	89 33                	mov    %esi,(%ebx)
84000e02:	0f bf 45 de          	movswl -0x22(%ebp),%eax
84000e06:	83 e0 03             	and    $0x3,%eax
84000e09:	85 c0                	test   %eax,%eax
84000e0b:	75 05                	jne    84000e12 <__sflush_r+0x1dc>
84000e0d:	8b 43 14             	mov    0x14(%ebx),%eax
84000e10:	eb 05                	jmp    84000e17 <__sflush_r+0x1e1>
84000e12:	b8 00 00 00 00       	mov    $0x0,%eax
84000e17:	89 43 08             	mov    %eax,0x8(%ebx)
84000e1a:	eb 2f                	jmp    84000e4b <__sflush_r+0x215>
84000e1c:	8b 43 24             	mov    0x24(%ebx),%eax
84000e1f:	8b 53 1c             	mov    0x1c(%ebx),%edx
84000e22:	57                   	push   %edi
84000e23:	56                   	push   %esi
84000e24:	52                   	push   %edx
84000e25:	ff 75 08             	push   0x8(%ebp)
84000e28:	ff d0                	call   *%eax
84000e2a:	83 c4 10             	add    $0x10,%esp
84000e2d:	85 c0                	test   %eax,%eax
84000e2f:	7f 12                	jg     84000e43 <__sflush_r+0x20d>
84000e31:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000e35:	83 c8 40             	or     $0x40,%eax
84000e38:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84000e3c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84000e41:	eb 11                	jmp    84000e54 <__sflush_r+0x21e>
84000e43:	89 c1                	mov    %eax,%ecx
84000e45:	89 c8                	mov    %ecx,%eax
84000e47:	01 c6                	add    %eax,%esi
84000e49:	29 cf                	sub    %ecx,%edi
84000e4b:	85 ff                	test   %edi,%edi
84000e4d:	7f cd                	jg     84000e1c <__sflush_r+0x1e6>
84000e4f:	b8 00 00 00 00       	mov    $0x0,%eax
84000e54:	8d 65 f4             	lea    -0xc(%ebp),%esp
84000e57:	5b                   	pop    %ebx
84000e58:	5e                   	pop    %esi
84000e59:	5f                   	pop    %edi
84000e5a:	5d                   	pop    %ebp
84000e5b:	c3                   	ret    

84000e5c <_fflush_r>:
84000e5c:	55                   	push   %ebp
84000e5d:	89 e5                	mov    %esp,%ebp
84000e5f:	53                   	push   %ebx
84000e60:	83 ec 14             	sub    $0x14,%esp
84000e63:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84000e66:	8b 45 08             	mov    0x8(%ebp),%eax
84000e69:	89 45 f4             	mov    %eax,-0xc(%ebp)
84000e6c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84000e70:	74 18                	je     84000e8a <_fflush_r+0x2e>
84000e72:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000e75:	8b 40 38             	mov    0x38(%eax),%eax
84000e78:	85 c0                	test   %eax,%eax
84000e7a:	75 0e                	jne    84000e8a <_fflush_r+0x2e>
84000e7c:	83 ec 0c             	sub    $0xc,%esp
84000e7f:	ff 75 f4             	push   -0xc(%ebp)
84000e82:	e8 5b 03 00 00       	call   840011e2 <__sinit>
84000e87:	83 c4 10             	add    $0x10,%esp
84000e8a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000e8e:	66 85 c0             	test   %ax,%ax
84000e91:	75 07                	jne    84000e9a <_fflush_r+0x3e>
84000e93:	b8 00 00 00 00       	mov    $0x0,%eax
84000e98:	eb 15                	jmp    84000eaf <_fflush_r+0x53>
84000e9a:	83 ec 08             	sub    $0x8,%esp
84000e9d:	53                   	push   %ebx
84000e9e:	ff 75 08             	push   0x8(%ebp)
84000ea1:	e8 90 fd ff ff       	call   84000c36 <__sflush_r>
84000ea6:	83 c4 10             	add    $0x10,%esp
84000ea9:	89 45 f0             	mov    %eax,-0x10(%ebp)
84000eac:	8b 45 f0             	mov    -0x10(%ebp),%eax
84000eaf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84000eb2:	c9                   	leave  
84000eb3:	c3                   	ret    

84000eb4 <fflush>:
84000eb4:	55                   	push   %ebp
84000eb5:	89 e5                	mov    %esp,%ebp
84000eb7:	83 ec 08             	sub    $0x8,%esp
84000eba:	8b 55 08             	mov    0x8(%ebp),%edx
84000ebd:	85 d2                	test   %edx,%edx
84000ebf:	75 18                	jne    84000ed9 <fflush+0x25>
84000ec1:	a1 18 56 00 84       	mov    0x84005618,%eax
84000ec6:	83 ec 08             	sub    $0x8,%esp
84000ec9:	68 5c 0e 00 84       	push   $0x84000e5c
84000ece:	50                   	push   %eax
84000ecf:	e8 bf 09 00 00       	call   84001893 <_fwalk_reent>
84000ed4:	83 c4 10             	add    $0x10,%esp
84000ed7:	eb 12                	jmp    84000eeb <fflush+0x37>
84000ed9:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84000ede:	83 ec 08             	sub    $0x8,%esp
84000ee1:	52                   	push   %edx
84000ee2:	50                   	push   %eax
84000ee3:	e8 74 ff ff ff       	call   84000e5c <_fflush_r>
84000ee8:	83 c4 10             	add    $0x10,%esp
84000eeb:	c9                   	leave  
84000eec:	c3                   	ret    

84000eed <std>:
84000eed:	55                   	push   %ebp
84000eee:	89 e5                	mov    %esp,%ebp
84000ef0:	83 ec 08             	sub    $0x8,%esp
84000ef3:	8b 45 08             	mov    0x8(%ebp),%eax
84000ef6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
84000efc:	8b 45 08             	mov    0x8(%ebp),%eax
84000eff:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
84000f06:	8b 45 08             	mov    0x8(%ebp),%eax
84000f09:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
84000f10:	8b 45 0c             	mov    0xc(%ebp),%eax
84000f13:	89 c2                	mov    %eax,%edx
84000f15:	8b 45 08             	mov    0x8(%ebp),%eax
84000f18:	66 89 50 0c          	mov    %dx,0xc(%eax)
84000f1c:	8b 45 08             	mov    0x8(%ebp),%eax
84000f1f:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
84000f26:	8b 45 10             	mov    0x10(%ebp),%eax
84000f29:	89 c2                	mov    %eax,%edx
84000f2b:	8b 45 08             	mov    0x8(%ebp),%eax
84000f2e:	66 89 50 0e          	mov    %dx,0xe(%eax)
84000f32:	8b 45 08             	mov    0x8(%ebp),%eax
84000f35:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
84000f3c:	8b 45 08             	mov    0x8(%ebp),%eax
84000f3f:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
84000f46:	8b 45 08             	mov    0x8(%ebp),%eax
84000f49:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
84000f50:	8b 45 08             	mov    0x8(%ebp),%eax
84000f53:	83 c0 5c             	add    $0x5c,%eax
84000f56:	83 ec 04             	sub    $0x4,%esp
84000f59:	6a 08                	push   $0x8
84000f5b:	6a 00                	push   $0x0
84000f5d:	50                   	push   %eax
84000f5e:	e8 d5 14 00 00       	call   84002438 <memset>
84000f63:	83 c4 10             	add    $0x10,%esp
84000f66:	8b 45 08             	mov    0x8(%ebp),%eax
84000f69:	8b 55 08             	mov    0x8(%ebp),%edx
84000f6c:	89 50 1c             	mov    %edx,0x1c(%eax)
84000f6f:	8b 45 08             	mov    0x8(%ebp),%eax
84000f72:	c7 40 20 0b 28 00 84 	movl   $0x8400280b,0x20(%eax)
84000f79:	8b 45 08             	mov    0x8(%ebp),%eax
84000f7c:	c7 40 24 59 28 00 84 	movl   $0x84002859,0x24(%eax)
84000f83:	8b 45 08             	mov    0x8(%ebp),%eax
84000f86:	c7 40 28 b4 28 00 84 	movl   $0x840028b4,0x28(%eax)
84000f8d:	8b 45 08             	mov    0x8(%ebp),%eax
84000f90:	c7 40 2c fe 28 00 84 	movl   $0x840028fe,0x2c(%eax)
84000f97:	90                   	nop
84000f98:	c9                   	leave  
84000f99:	c3                   	ret    

84000f9a <stdin_init>:
84000f9a:	55                   	push   %ebp
84000f9b:	89 e5                	mov    %esp,%ebp
84000f9d:	83 ec 08             	sub    $0x8,%esp
84000fa0:	83 ec 04             	sub    $0x4,%esp
84000fa3:	6a 00                	push   $0x0
84000fa5:	6a 04                	push   $0x4
84000fa7:	ff 75 08             	push   0x8(%ebp)
84000faa:	e8 3e ff ff ff       	call   84000eed <std>
84000faf:	83 c4 10             	add    $0x10,%esp
84000fb2:	90                   	nop
84000fb3:	c9                   	leave  
84000fb4:	c3                   	ret    

84000fb5 <stdout_init>:
84000fb5:	55                   	push   %ebp
84000fb6:	89 e5                	mov    %esp,%ebp
84000fb8:	83 ec 08             	sub    $0x8,%esp
84000fbb:	83 ec 04             	sub    $0x4,%esp
84000fbe:	6a 01                	push   $0x1
84000fc0:	6a 09                	push   $0x9
84000fc2:	ff 75 08             	push   0x8(%ebp)
84000fc5:	e8 23 ff ff ff       	call   84000eed <std>
84000fca:	83 c4 10             	add    $0x10,%esp
84000fcd:	90                   	nop
84000fce:	c9                   	leave  
84000fcf:	c3                   	ret    

84000fd0 <stderr_init>:
84000fd0:	55                   	push   %ebp
84000fd1:	89 e5                	mov    %esp,%ebp
84000fd3:	83 ec 08             	sub    $0x8,%esp
84000fd6:	83 ec 04             	sub    $0x4,%esp
84000fd9:	6a 02                	push   $0x2
84000fdb:	6a 12                	push   $0x12
84000fdd:	ff 75 08             	push   0x8(%ebp)
84000fe0:	e8 08 ff ff ff       	call   84000eed <std>
84000fe5:	83 c4 10             	add    $0x10,%esp
84000fe8:	90                   	nop
84000fe9:	c9                   	leave  
84000fea:	c3                   	ret    

84000feb <__sfmoreglue>:
84000feb:	55                   	push   %ebp
84000fec:	89 e5                	mov    %esp,%ebp
84000fee:	53                   	push   %ebx
84000fef:	83 ec 14             	sub    $0x14,%esp
84000ff2:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84000ff5:	8d 43 ff             	lea    -0x1(%ebx),%eax
84000ff8:	6b c0 68             	imul   $0x68,%eax,%eax
84000ffb:	83 c0 74             	add    $0x74,%eax
84000ffe:	83 ec 08             	sub    $0x8,%esp
84001001:	50                   	push   %eax
84001002:	ff 75 08             	push   0x8(%ebp)
84001005:	e8 0c 0c 00 00       	call   84001c16 <_malloc_r>
8400100a:	83 c4 10             	add    $0x10,%esp
8400100d:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001010:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84001014:	75 07                	jne    8400101d <__sfmoreglue+0x32>
84001016:	b8 00 00 00 00       	mov    $0x0,%eax
8400101b:	eb 38                	jmp    84001055 <__sfmoreglue+0x6a>
8400101d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001020:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
84001026:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001029:	89 58 04             	mov    %ebx,0x4(%eax)
8400102c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400102f:	8d 50 0c             	lea    0xc(%eax),%edx
84001032:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001035:	89 50 08             	mov    %edx,0x8(%eax)
84001038:	89 d8                	mov    %ebx,%eax
8400103a:	6b c0 68             	imul   $0x68,%eax,%eax
8400103d:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001040:	83 c2 0c             	add    $0xc,%edx
84001043:	83 ec 04             	sub    $0x4,%esp
84001046:	50                   	push   %eax
84001047:	6a 00                	push   $0x0
84001049:	52                   	push   %edx
8400104a:	e8 e9 13 00 00       	call   84002438 <memset>
8400104f:	83 c4 10             	add    $0x10,%esp
84001052:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001055:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84001058:	c9                   	leave  
84001059:	c3                   	ret    

8400105a <__sfp>:
8400105a:	55                   	push   %ebp
8400105b:	89 e5                	mov    %esp,%ebp
8400105d:	83 ec 18             	sub    $0x18,%esp
84001060:	e8 16 02 00 00       	call   8400127b <__sfp_lock_acquire>
84001065:	a1 18 56 00 84       	mov    0x84005618,%eax
8400106a:	8b 40 38             	mov    0x38(%eax),%eax
8400106d:	85 c0                	test   %eax,%eax
8400106f:	75 11                	jne    84001082 <__sfp+0x28>
84001071:	a1 18 56 00 84       	mov    0x84005618,%eax
84001076:	83 ec 0c             	sub    $0xc,%esp
84001079:	50                   	push   %eax
8400107a:	e8 63 01 00 00       	call   840011e2 <__sinit>
8400107f:	83 c4 10             	add    $0x10,%esp
84001082:	a1 18 56 00 84       	mov    0x84005618,%eax
84001087:	05 e0 02 00 00       	add    $0x2e0,%eax
8400108c:	89 45 ec             	mov    %eax,-0x14(%ebp)
8400108f:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001092:	8b 40 08             	mov    0x8(%eax),%eax
84001095:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001098:	8b 45 ec             	mov    -0x14(%ebp),%eax
8400109b:	8b 40 04             	mov    0x4(%eax),%eax
8400109e:	89 45 f0             	mov    %eax,-0x10(%ebp)
840010a1:	eb 10                	jmp    840010b3 <__sfp+0x59>
840010a3:	8b 45 f4             	mov    -0xc(%ebp),%eax
840010a6:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
840010aa:	66 85 c0             	test   %ax,%ax
840010ad:	74 58                	je     84001107 <__sfp+0xad>
840010af:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
840010b3:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
840010b7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
840010bb:	79 e6                	jns    840010a3 <__sfp+0x49>
840010bd:	8b 45 ec             	mov    -0x14(%ebp),%eax
840010c0:	8b 00                	mov    (%eax),%eax
840010c2:	85 c0                	test   %eax,%eax
840010c4:	75 1e                	jne    840010e4 <__sfp+0x8a>
840010c6:	83 ec 08             	sub    $0x8,%esp
840010c9:	6a 04                	push   $0x4
840010cb:	ff 75 08             	push   0x8(%ebp)
840010ce:	e8 18 ff ff ff       	call   84000feb <__sfmoreglue>
840010d3:	83 c4 10             	add    $0x10,%esp
840010d6:	8b 55 ec             	mov    -0x14(%ebp),%edx
840010d9:	89 02                	mov    %eax,(%edx)
840010db:	8b 45 ec             	mov    -0x14(%ebp),%eax
840010de:	8b 00                	mov    (%eax),%eax
840010e0:	85 c0                	test   %eax,%eax
840010e2:	74 0a                	je     840010ee <__sfp+0x94>
840010e4:	8b 45 ec             	mov    -0x14(%ebp),%eax
840010e7:	8b 00                	mov    (%eax),%eax
840010e9:	89 45 ec             	mov    %eax,-0x14(%ebp)
840010ec:	eb a1                	jmp    8400108f <__sfp+0x35>
840010ee:	90                   	nop
840010ef:	e8 8d 01 00 00       	call   84001281 <__sfp_lock_release>
840010f4:	8b 45 08             	mov    0x8(%ebp),%eax
840010f7:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
840010fd:	b8 00 00 00 00       	mov    $0x0,%eax
84001102:	e9 9e 00 00 00       	jmp    840011a5 <__sfp+0x14b>
84001107:	90                   	nop
84001108:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400110b:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
84001111:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001114:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
8400111a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400111d:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
84001124:	e8 58 01 00 00       	call   84001281 <__sfp_lock_release>
84001129:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400112c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
84001132:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001135:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
8400113c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400113f:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
84001146:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001149:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
84001150:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001153:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
8400115a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400115d:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
84001164:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001167:	83 c0 5c             	add    $0x5c,%eax
8400116a:	83 ec 04             	sub    $0x4,%esp
8400116d:	6a 08                	push   $0x8
8400116f:	6a 00                	push   $0x0
84001171:	50                   	push   %eax
84001172:	e8 c1 12 00 00       	call   84002438 <memset>
84001177:	83 c4 10             	add    $0x10,%esp
8400117a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400117d:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
84001184:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001187:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
8400118e:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001191:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
84001198:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400119b:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
840011a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
840011a5:	c9                   	leave  
840011a6:	c3                   	ret    

840011a7 <_cleanup_r>:
840011a7:	55                   	push   %ebp
840011a8:	89 e5                	mov    %esp,%ebp
840011aa:	83 ec 18             	sub    $0x18,%esp
840011ad:	c7 45 f4 be 2a 00 84 	movl   $0x84002abe,-0xc(%ebp)
840011b4:	83 ec 08             	sub    $0x8,%esp
840011b7:	ff 75 f4             	push   -0xc(%ebp)
840011ba:	ff 75 08             	push   0x8(%ebp)
840011bd:	e8 d1 06 00 00       	call   84001893 <_fwalk_reent>
840011c2:	83 c4 10             	add    $0x10,%esp
840011c5:	90                   	nop
840011c6:	c9                   	leave  
840011c7:	c3                   	ret    

840011c8 <_cleanup>:
840011c8:	55                   	push   %ebp
840011c9:	89 e5                	mov    %esp,%ebp
840011cb:	83 ec 08             	sub    $0x8,%esp
840011ce:	a1 18 56 00 84       	mov    0x84005618,%eax
840011d3:	83 ec 0c             	sub    $0xc,%esp
840011d6:	50                   	push   %eax
840011d7:	e8 cb ff ff ff       	call   840011a7 <_cleanup_r>
840011dc:	83 c4 10             	add    $0x10,%esp
840011df:	90                   	nop
840011e0:	c9                   	leave  
840011e1:	c3                   	ret    

840011e2 <__sinit>:
840011e2:	55                   	push   %ebp
840011e3:	89 e5                	mov    %esp,%ebp
840011e5:	83 ec 08             	sub    $0x8,%esp
840011e8:	e8 9a 00 00 00       	call   84001287 <__sinit_lock_acquire>
840011ed:	8b 45 08             	mov    0x8(%ebp),%eax
840011f0:	8b 40 38             	mov    0x38(%eax),%eax
840011f3:	85 c0                	test   %eax,%eax
840011f5:	74 07                	je     840011fe <__sinit+0x1c>
840011f7:	e8 91 00 00 00       	call   8400128d <__sinit_lock_release>
840011fc:	eb 7b                	jmp    84001279 <__sinit+0x97>
840011fe:	8b 45 08             	mov    0x8(%ebp),%eax
84001201:	c7 40 3c a7 11 00 84 	movl   $0x840011a7,0x3c(%eax)
84001208:	8b 45 08             	mov    0x8(%ebp),%eax
8400120b:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
84001212:	00 00 00 
84001215:	8b 45 08             	mov    0x8(%ebp),%eax
84001218:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
8400121f:	00 00 00 
84001222:	8b 45 08             	mov    0x8(%ebp),%eax
84001225:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
8400122b:	8b 45 08             	mov    0x8(%ebp),%eax
8400122e:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
84001234:	8b 45 08             	mov    0x8(%ebp),%eax
84001237:	8b 40 04             	mov    0x4(%eax),%eax
8400123a:	83 ec 0c             	sub    $0xc,%esp
8400123d:	50                   	push   %eax
8400123e:	e8 57 fd ff ff       	call   84000f9a <stdin_init>
84001243:	83 c4 10             	add    $0x10,%esp
84001246:	8b 45 08             	mov    0x8(%ebp),%eax
84001249:	8b 40 08             	mov    0x8(%eax),%eax
8400124c:	83 ec 0c             	sub    $0xc,%esp
8400124f:	50                   	push   %eax
84001250:	e8 60 fd ff ff       	call   84000fb5 <stdout_init>
84001255:	83 c4 10             	add    $0x10,%esp
84001258:	8b 45 08             	mov    0x8(%ebp),%eax
8400125b:	8b 40 0c             	mov    0xc(%eax),%eax
8400125e:	83 ec 0c             	sub    $0xc,%esp
84001261:	50                   	push   %eax
84001262:	e8 69 fd ff ff       	call   84000fd0 <stderr_init>
84001267:	83 c4 10             	add    $0x10,%esp
8400126a:	8b 45 08             	mov    0x8(%ebp),%eax
8400126d:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
84001274:	e8 14 00 00 00       	call   8400128d <__sinit_lock_release>
84001279:	c9                   	leave  
8400127a:	c3                   	ret    

8400127b <__sfp_lock_acquire>:
8400127b:	55                   	push   %ebp
8400127c:	89 e5                	mov    %esp,%ebp
8400127e:	90                   	nop
8400127f:	5d                   	pop    %ebp
84001280:	c3                   	ret    

84001281 <__sfp_lock_release>:
84001281:	55                   	push   %ebp
84001282:	89 e5                	mov    %esp,%ebp
84001284:	90                   	nop
84001285:	5d                   	pop    %ebp
84001286:	c3                   	ret    

84001287 <__sinit_lock_acquire>:
84001287:	55                   	push   %ebp
84001288:	89 e5                	mov    %esp,%ebp
8400128a:	90                   	nop
8400128b:	5d                   	pop    %ebp
8400128c:	c3                   	ret    

8400128d <__sinit_lock_release>:
8400128d:	55                   	push   %ebp
8400128e:	89 e5                	mov    %esp,%ebp
84001290:	90                   	nop
84001291:	5d                   	pop    %ebp
84001292:	c3                   	ret    

84001293 <__fp_lock>:
84001293:	55                   	push   %ebp
84001294:	89 e5                	mov    %esp,%ebp
84001296:	b8 00 00 00 00       	mov    $0x0,%eax
8400129b:	5d                   	pop    %ebp
8400129c:	c3                   	ret    

8400129d <__fp_unlock>:
8400129d:	55                   	push   %ebp
8400129e:	89 e5                	mov    %esp,%ebp
840012a0:	b8 00 00 00 00       	mov    $0x0,%eax
840012a5:	5d                   	pop    %ebp
840012a6:	c3                   	ret    

840012a7 <__fp_lock_all>:
840012a7:	55                   	push   %ebp
840012a8:	89 e5                	mov    %esp,%ebp
840012aa:	83 ec 08             	sub    $0x8,%esp
840012ad:	e8 c9 ff ff ff       	call   8400127b <__sfp_lock_acquire>
840012b2:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
840012b7:	83 ec 08             	sub    $0x8,%esp
840012ba:	68 93 12 00 84       	push   $0x84001293
840012bf:	50                   	push   %eax
840012c0:	e8 66 05 00 00       	call   8400182b <_fwalk>
840012c5:	83 c4 10             	add    $0x10,%esp
840012c8:	90                   	nop
840012c9:	c9                   	leave  
840012ca:	c3                   	ret    

840012cb <__fp_unlock_all>:
840012cb:	55                   	push   %ebp
840012cc:	89 e5                	mov    %esp,%ebp
840012ce:	83 ec 08             	sub    $0x8,%esp
840012d1:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
840012d6:	83 ec 08             	sub    $0x8,%esp
840012d9:	68 9d 12 00 84       	push   $0x8400129d
840012de:	50                   	push   %eax
840012df:	e8 47 05 00 00       	call   8400182b <_fwalk>
840012e4:	83 c4 10             	add    $0x10,%esp
840012e7:	e8 95 ff ff ff       	call   84001281 <__sfp_lock_release>
840012ec:	90                   	nop
840012ed:	c9                   	leave  
840012ee:	c3                   	ret    

840012ef <_free_r>:
840012ef:	55                   	push   %ebp
840012f0:	89 e5                	mov    %esp,%ebp
840012f2:	53                   	push   %ebx
840012f3:	83 ec 34             	sub    $0x34,%esp
840012f6:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
840012fa:	0f 84 c4 03 00 00    	je     840016c4 <_free_r+0x3d5>
84001300:	83 ec 0c             	sub    $0xc,%esp
84001303:	ff 75 08             	push   0x8(%ebp)
84001306:	e8 b5 11 00 00       	call   840024c0 <__malloc_lock>
8400130b:	83 c4 10             	add    $0x10,%esp
8400130e:	8b 45 0c             	mov    0xc(%ebp),%eax
84001311:	83 e8 08             	sub    $0x8,%eax
84001314:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001317:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400131a:	8b 40 04             	mov    0x4(%eax),%eax
8400131d:	89 45 e0             	mov    %eax,-0x20(%ebp)
84001320:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001323:	83 e0 fe             	and    $0xfffffffe,%eax
84001326:	89 45 f0             	mov    %eax,-0x10(%ebp)
84001329:	8b 55 f4             	mov    -0xc(%ebp),%edx
8400132c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400132f:	01 d0                	add    %edx,%eax
84001331:	89 45 dc             	mov    %eax,-0x24(%ebp)
84001334:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001337:	8b 40 04             	mov    0x4(%eax),%eax
8400133a:	83 e0 fc             	and    $0xfffffffc,%eax
8400133d:	89 45 d8             	mov    %eax,-0x28(%ebp)
84001340:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84001345:	8b 40 08             	mov    0x8(%eax),%eax
84001348:	39 45 dc             	cmp    %eax,-0x24(%ebp)
8400134b:	0f 85 94 00 00 00    	jne    840013e5 <_free_r+0xf6>
84001351:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001354:	01 45 f0             	add    %eax,-0x10(%ebp)
84001357:	8b 45 e0             	mov    -0x20(%ebp),%eax
8400135a:	83 e0 01             	and    $0x1,%eax
8400135d:	85 c0                	test   %eax,%eax
8400135f:	75 3a                	jne    8400139b <_free_r+0xac>
84001361:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001364:	8b 00                	mov    (%eax),%eax
84001366:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84001369:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8400136c:	f7 d8                	neg    %eax
8400136e:	01 45 f4             	add    %eax,-0xc(%ebp)
84001371:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001374:	01 45 f0             	add    %eax,-0x10(%ebp)
84001377:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400137a:	8b 40 0c             	mov    0xc(%eax),%eax
8400137d:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001380:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001383:	8b 40 08             	mov    0x8(%eax),%eax
84001386:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001389:	8b 45 e8             	mov    -0x18(%ebp),%eax
8400138c:	8b 55 ec             	mov    -0x14(%ebp),%edx
8400138f:	89 50 0c             	mov    %edx,0xc(%eax)
84001392:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001395:	8b 55 e8             	mov    -0x18(%ebp),%edx
84001398:	89 50 08             	mov    %edx,0x8(%eax)
8400139b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400139e:	83 c8 01             	or     $0x1,%eax
840013a1:	89 c2                	mov    %eax,%edx
840013a3:	8b 45 f4             	mov    -0xc(%ebp),%eax
840013a6:	89 50 04             	mov    %edx,0x4(%eax)
840013a9:	ba e0 5d 00 84       	mov    $0x84005de0,%edx
840013ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
840013b1:	89 42 08             	mov    %eax,0x8(%edx)
840013b4:	a1 e8 61 00 84       	mov    0x840061e8,%eax
840013b9:	39 45 f0             	cmp    %eax,-0x10(%ebp)
840013bc:	72 14                	jb     840013d2 <_free_r+0xe3>
840013be:	a1 a0 63 00 84       	mov    0x840063a0,%eax
840013c3:	83 ec 08             	sub    $0x8,%esp
840013c6:	50                   	push   %eax
840013c7:	ff 75 08             	push   0x8(%ebp)
840013ca:	e8 fb 02 00 00       	call   840016ca <_malloc_trim_r>
840013cf:	83 c4 10             	add    $0x10,%esp
840013d2:	83 ec 0c             	sub    $0xc,%esp
840013d5:	ff 75 08             	push   0x8(%ebp)
840013d8:	e8 e9 10 00 00       	call   840024c6 <__malloc_unlock>
840013dd:	83 c4 10             	add    $0x10,%esp
840013e0:	e9 e0 02 00 00       	jmp    840016c5 <_free_r+0x3d6>
840013e5:	8b 45 dc             	mov    -0x24(%ebp),%eax
840013e8:	8b 55 d8             	mov    -0x28(%ebp),%edx
840013eb:	89 50 04             	mov    %edx,0x4(%eax)
840013ee:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
840013f5:	8b 45 e0             	mov    -0x20(%ebp),%eax
840013f8:	83 e0 01             	and    $0x1,%eax
840013fb:	85 c0                	test   %eax,%eax
840013fd:	75 52                	jne    84001451 <_free_r+0x162>
840013ff:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001402:	8b 00                	mov    (%eax),%eax
84001404:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84001407:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8400140a:	f7 d8                	neg    %eax
8400140c:	01 45 f4             	add    %eax,-0xc(%ebp)
8400140f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001412:	01 45 f0             	add    %eax,-0x10(%ebp)
84001415:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001418:	8b 40 08             	mov    0x8(%eax),%eax
8400141b:	ba e8 5d 00 84       	mov    $0x84005de8,%edx
84001420:	39 d0                	cmp    %edx,%eax
84001422:	75 09                	jne    8400142d <_free_r+0x13e>
84001424:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8400142b:	eb 24                	jmp    84001451 <_free_r+0x162>
8400142d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001430:	8b 40 0c             	mov    0xc(%eax),%eax
84001433:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001436:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001439:	8b 40 08             	mov    0x8(%eax),%eax
8400143c:	89 45 e8             	mov    %eax,-0x18(%ebp)
8400143f:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001442:	8b 55 ec             	mov    -0x14(%ebp),%edx
84001445:	89 50 0c             	mov    %edx,0xc(%eax)
84001448:	8b 45 ec             	mov    -0x14(%ebp),%eax
8400144b:	8b 55 e8             	mov    -0x18(%ebp),%edx
8400144e:	89 50 08             	mov    %edx,0x8(%eax)
84001451:	8b 55 dc             	mov    -0x24(%ebp),%edx
84001454:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001457:	01 d0                	add    %edx,%eax
84001459:	8b 40 04             	mov    0x4(%eax),%eax
8400145c:	83 e0 01             	and    $0x1,%eax
8400145f:	85 c0                	test   %eax,%eax
84001461:	75 75                	jne    840014d8 <_free_r+0x1e9>
84001463:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001466:	01 45 f0             	add    %eax,-0x10(%ebp)
84001469:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8400146d:	75 45                	jne    840014b4 <_free_r+0x1c5>
8400146f:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001472:	8b 40 08             	mov    0x8(%eax),%eax
84001475:	ba e8 5d 00 84       	mov    $0x84005de8,%edx
8400147a:	39 d0                	cmp    %edx,%eax
8400147c:	75 36                	jne    840014b4 <_free_r+0x1c5>
8400147e:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
84001485:	b8 e8 5d 00 84       	mov    $0x84005de8,%eax
8400148a:	8b 55 f4             	mov    -0xc(%ebp),%edx
8400148d:	89 50 0c             	mov    %edx,0xc(%eax)
84001490:	ba e8 5d 00 84       	mov    $0x84005de8,%edx
84001495:	8b 40 0c             	mov    0xc(%eax),%eax
84001498:	89 42 08             	mov    %eax,0x8(%edx)
8400149b:	ba e8 5d 00 84       	mov    $0x84005de8,%edx
840014a0:	8b 45 f4             	mov    -0xc(%ebp),%eax
840014a3:	89 50 0c             	mov    %edx,0xc(%eax)
840014a6:	8b 45 f4             	mov    -0xc(%ebp),%eax
840014a9:	8b 50 0c             	mov    0xc(%eax),%edx
840014ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
840014af:	89 50 08             	mov    %edx,0x8(%eax)
840014b2:	eb 24                	jmp    840014d8 <_free_r+0x1e9>
840014b4:	8b 45 dc             	mov    -0x24(%ebp),%eax
840014b7:	8b 40 0c             	mov    0xc(%eax),%eax
840014ba:	89 45 ec             	mov    %eax,-0x14(%ebp)
840014bd:	8b 45 dc             	mov    -0x24(%ebp),%eax
840014c0:	8b 40 08             	mov    0x8(%eax),%eax
840014c3:	89 45 e8             	mov    %eax,-0x18(%ebp)
840014c6:	8b 45 e8             	mov    -0x18(%ebp),%eax
840014c9:	8b 55 ec             	mov    -0x14(%ebp),%edx
840014cc:	89 50 0c             	mov    %edx,0xc(%eax)
840014cf:	8b 45 ec             	mov    -0x14(%ebp),%eax
840014d2:	8b 55 e8             	mov    -0x18(%ebp),%edx
840014d5:	89 50 08             	mov    %edx,0x8(%eax)
840014d8:	8b 45 f0             	mov    -0x10(%ebp),%eax
840014db:	83 c8 01             	or     $0x1,%eax
840014de:	89 c2                	mov    %eax,%edx
840014e0:	8b 45 f4             	mov    -0xc(%ebp),%eax
840014e3:	89 50 04             	mov    %edx,0x4(%eax)
840014e6:	8b 55 f4             	mov    -0xc(%ebp),%edx
840014e9:	8b 45 f0             	mov    -0x10(%ebp),%eax
840014ec:	01 c2                	add    %eax,%edx
840014ee:	8b 45 f0             	mov    -0x10(%ebp),%eax
840014f1:	89 02                	mov    %eax,(%edx)
840014f3:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
840014f7:	0f 85 b7 01 00 00    	jne    840016b4 <_free_r+0x3c5>
840014fd:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
84001504:	77 7f                	ja     84001585 <_free_r+0x296>
84001506:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001509:	c1 e8 03             	shr    $0x3,%eax
8400150c:	89 45 d0             	mov    %eax,-0x30(%ebp)
8400150f:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84001514:	8b 58 04             	mov    0x4(%eax),%ebx
84001517:	8b 45 d0             	mov    -0x30(%ebp),%eax
8400151a:	8d 50 03             	lea    0x3(%eax),%edx
8400151d:	85 c0                	test   %eax,%eax
8400151f:	0f 48 c2             	cmovs  %edx,%eax
84001522:	c1 f8 02             	sar    $0x2,%eax
84001525:	ba 01 00 00 00       	mov    $0x1,%edx
8400152a:	89 c1                	mov    %eax,%ecx
8400152c:	d3 e2                	shl    %cl,%edx
8400152e:	89 d0                	mov    %edx,%eax
84001530:	ba e0 5d 00 84       	mov    $0x84005de0,%edx
84001535:	09 d8                	or     %ebx,%eax
84001537:	89 42 04             	mov    %eax,0x4(%edx)
8400153a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8400153d:	83 c0 01             	add    $0x1,%eax
84001540:	01 c0                	add    %eax,%eax
84001542:	c1 e0 02             	shl    $0x2,%eax
84001545:	05 e0 5d 00 84       	add    $0x84005de0,%eax
8400154a:	83 e8 08             	sub    $0x8,%eax
8400154d:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001550:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001553:	8b 40 08             	mov    0x8(%eax),%eax
84001556:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001559:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400155c:	8b 55 ec             	mov    -0x14(%ebp),%edx
8400155f:	89 50 0c             	mov    %edx,0xc(%eax)
84001562:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001565:	8b 55 e8             	mov    -0x18(%ebp),%edx
84001568:	89 50 08             	mov    %edx,0x8(%eax)
8400156b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8400156e:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001571:	89 50 08             	mov    %edx,0x8(%eax)
84001574:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001577:	8b 50 08             	mov    0x8(%eax),%edx
8400157a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8400157d:	89 50 0c             	mov    %edx,0xc(%eax)
84001580:	e9 2f 01 00 00       	jmp    840016b4 <_free_r+0x3c5>
84001585:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001588:	c1 e8 09             	shr    $0x9,%eax
8400158b:	85 c0                	test   %eax,%eax
8400158d:	75 08                	jne    84001597 <_free_r+0x2a8>
8400158f:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001592:	c1 e8 03             	shr    $0x3,%eax
84001595:	eb 77                	jmp    8400160e <_free_r+0x31f>
84001597:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400159a:	c1 e8 09             	shr    $0x9,%eax
8400159d:	83 f8 04             	cmp    $0x4,%eax
840015a0:	77 0b                	ja     840015ad <_free_r+0x2be>
840015a2:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015a5:	c1 e8 06             	shr    $0x6,%eax
840015a8:	83 c0 38             	add    $0x38,%eax
840015ab:	eb 61                	jmp    8400160e <_free_r+0x31f>
840015ad:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015b0:	c1 e8 09             	shr    $0x9,%eax
840015b3:	83 f8 14             	cmp    $0x14,%eax
840015b6:	77 0b                	ja     840015c3 <_free_r+0x2d4>
840015b8:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015bb:	c1 e8 09             	shr    $0x9,%eax
840015be:	83 c0 5b             	add    $0x5b,%eax
840015c1:	eb 4b                	jmp    8400160e <_free_r+0x31f>
840015c3:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015c6:	c1 e8 09             	shr    $0x9,%eax
840015c9:	83 f8 54             	cmp    $0x54,%eax
840015cc:	77 0b                	ja     840015d9 <_free_r+0x2ea>
840015ce:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015d1:	c1 e8 0c             	shr    $0xc,%eax
840015d4:	83 c0 6e             	add    $0x6e,%eax
840015d7:	eb 35                	jmp    8400160e <_free_r+0x31f>
840015d9:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015dc:	c1 e8 09             	shr    $0x9,%eax
840015df:	3d 54 01 00 00       	cmp    $0x154,%eax
840015e4:	77 0b                	ja     840015f1 <_free_r+0x302>
840015e6:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015e9:	c1 e8 0f             	shr    $0xf,%eax
840015ec:	83 c0 77             	add    $0x77,%eax
840015ef:	eb 1d                	jmp    8400160e <_free_r+0x31f>
840015f1:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015f4:	c1 e8 09             	shr    $0x9,%eax
840015f7:	3d 54 05 00 00       	cmp    $0x554,%eax
840015fc:	77 0b                	ja     84001609 <_free_r+0x31a>
840015fe:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001601:	c1 e8 12             	shr    $0x12,%eax
84001604:	83 c0 7c             	add    $0x7c,%eax
84001607:	eb 05                	jmp    8400160e <_free_r+0x31f>
84001609:	b8 7e 00 00 00       	mov    $0x7e,%eax
8400160e:	89 45 d0             	mov    %eax,-0x30(%ebp)
84001611:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001614:	83 c0 01             	add    $0x1,%eax
84001617:	01 c0                	add    %eax,%eax
84001619:	c1 e0 02             	shl    $0x2,%eax
8400161c:	05 e0 5d 00 84       	add    $0x84005de0,%eax
84001621:	83 e8 08             	sub    $0x8,%eax
84001624:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001627:	8b 45 ec             	mov    -0x14(%ebp),%eax
8400162a:	8b 40 08             	mov    0x8(%eax),%eax
8400162d:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001630:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001633:	3b 45 ec             	cmp    -0x14(%ebp),%eax
84001636:	75 36                	jne    8400166e <_free_r+0x37f>
84001638:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
8400163d:	8b 58 04             	mov    0x4(%eax),%ebx
84001640:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001643:	8d 50 03             	lea    0x3(%eax),%edx
84001646:	85 c0                	test   %eax,%eax
84001648:	0f 48 c2             	cmovs  %edx,%eax
8400164b:	c1 f8 02             	sar    $0x2,%eax
8400164e:	ba 01 00 00 00       	mov    $0x1,%edx
84001653:	89 c1                	mov    %eax,%ecx
84001655:	d3 e2                	shl    %cl,%edx
84001657:	89 d0                	mov    %edx,%eax
84001659:	ba e0 5d 00 84       	mov    $0x84005de0,%edx
8400165e:	09 d8                	or     %ebx,%eax
84001660:	89 42 04             	mov    %eax,0x4(%edx)
84001663:	eb 28                	jmp    8400168d <_free_r+0x39e>
84001665:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001668:	8b 40 08             	mov    0x8(%eax),%eax
8400166b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8400166e:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001671:	3b 45 ec             	cmp    -0x14(%ebp),%eax
84001674:	74 0e                	je     84001684 <_free_r+0x395>
84001676:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001679:	8b 40 04             	mov    0x4(%eax),%eax
8400167c:	83 e0 fc             	and    $0xfffffffc,%eax
8400167f:	39 45 f0             	cmp    %eax,-0x10(%ebp)
84001682:	72 e1                	jb     84001665 <_free_r+0x376>
84001684:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001687:	8b 40 0c             	mov    0xc(%eax),%eax
8400168a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8400168d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001690:	8b 55 ec             	mov    -0x14(%ebp),%edx
84001693:	89 50 0c             	mov    %edx,0xc(%eax)
84001696:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001699:	8b 55 e8             	mov    -0x18(%ebp),%edx
8400169c:	89 50 08             	mov    %edx,0x8(%eax)
8400169f:	8b 45 ec             	mov    -0x14(%ebp),%eax
840016a2:	8b 55 f4             	mov    -0xc(%ebp),%edx
840016a5:	89 50 08             	mov    %edx,0x8(%eax)
840016a8:	8b 45 ec             	mov    -0x14(%ebp),%eax
840016ab:	8b 50 08             	mov    0x8(%eax),%edx
840016ae:	8b 45 e8             	mov    -0x18(%ebp),%eax
840016b1:	89 50 0c             	mov    %edx,0xc(%eax)
840016b4:	83 ec 0c             	sub    $0xc,%esp
840016b7:	ff 75 08             	push   0x8(%ebp)
840016ba:	e8 07 0e 00 00       	call   840024c6 <__malloc_unlock>
840016bf:	83 c4 10             	add    $0x10,%esp
840016c2:	eb 01                	jmp    840016c5 <_free_r+0x3d6>
840016c4:	90                   	nop
840016c5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
840016c8:	c9                   	leave  
840016c9:	c3                   	ret    

840016ca <_malloc_trim_r>:
840016ca:	55                   	push   %ebp
840016cb:	89 e5                	mov    %esp,%ebp
840016cd:	83 ec 28             	sub    $0x28,%esp
840016d0:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
840016d7:	83 ec 0c             	sub    $0xc,%esp
840016da:	ff 75 08             	push   0x8(%ebp)
840016dd:	e8 de 0d 00 00       	call   840024c0 <__malloc_lock>
840016e2:	83 c4 10             	add    $0x10,%esp
840016e5:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
840016ea:	8b 40 08             	mov    0x8(%eax),%eax
840016ed:	8b 40 04             	mov    0x4(%eax),%eax
840016f0:	83 e0 fc             	and    $0xfffffffc,%eax
840016f3:	89 45 f0             	mov    %eax,-0x10(%ebp)
840016f6:	8b 45 f0             	mov    -0x10(%ebp),%eax
840016f9:	2b 45 0c             	sub    0xc(%ebp),%eax
840016fc:	89 c2                	mov    %eax,%edx
840016fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001701:	01 d0                	add    %edx,%eax
84001703:	83 e8 11             	sub    $0x11,%eax
84001706:	ba 00 00 00 00       	mov    $0x0,%edx
8400170b:	f7 75 f4             	divl   -0xc(%ebp)
8400170e:	83 e8 01             	sub    $0x1,%eax
84001711:	0f af 45 f4          	imul   -0xc(%ebp),%eax
84001715:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001718:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400171b:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8400171e:	7d 18                	jge    84001738 <_malloc_trim_r+0x6e>
84001720:	83 ec 0c             	sub    $0xc,%esp
84001723:	ff 75 08             	push   0x8(%ebp)
84001726:	e8 9b 0d 00 00       	call   840024c6 <__malloc_unlock>
8400172b:	83 c4 10             	add    $0x10,%esp
8400172e:	b8 00 00 00 00       	mov    $0x0,%eax
84001733:	e9 f1 00 00 00       	jmp    84001829 <_malloc_trim_r+0x15f>
84001738:	83 ec 08             	sub    $0x8,%esp
8400173b:	6a 00                	push   $0x0
8400173d:	ff 75 08             	push   0x8(%ebp)
84001740:	e8 7a 0e 00 00       	call   840025bf <_sbrk_r>
84001745:	83 c4 10             	add    $0x10,%esp
84001748:	89 45 e8             	mov    %eax,-0x18(%ebp)
8400174b:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84001750:	8b 50 08             	mov    0x8(%eax),%edx
84001753:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001756:	01 d0                	add    %edx,%eax
84001758:	39 45 e8             	cmp    %eax,-0x18(%ebp)
8400175b:	74 18                	je     84001775 <_malloc_trim_r+0xab>
8400175d:	83 ec 0c             	sub    $0xc,%esp
84001760:	ff 75 08             	push   0x8(%ebp)
84001763:	e8 5e 0d 00 00       	call   840024c6 <__malloc_unlock>
84001768:	83 c4 10             	add    $0x10,%esp
8400176b:	b8 00 00 00 00       	mov    $0x0,%eax
84001770:	e9 b4 00 00 00       	jmp    84001829 <_malloc_trim_r+0x15f>
84001775:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001778:	f7 d8                	neg    %eax
8400177a:	83 ec 08             	sub    $0x8,%esp
8400177d:	50                   	push   %eax
8400177e:	ff 75 08             	push   0x8(%ebp)
84001781:	e8 39 0e 00 00       	call   840025bf <_sbrk_r>
84001786:	83 c4 10             	add    $0x10,%esp
84001789:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8400178c:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
84001790:	75 61                	jne    840017f3 <_malloc_trim_r+0x129>
84001792:	83 ec 08             	sub    $0x8,%esp
84001795:	6a 00                	push   $0x0
84001797:	ff 75 08             	push   0x8(%ebp)
8400179a:	e8 20 0e 00 00       	call   840025bf <_sbrk_r>
8400179f:	83 c4 10             	add    $0x10,%esp
840017a2:	89 45 e8             	mov    %eax,-0x18(%ebp)
840017a5:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
840017aa:	8b 50 08             	mov    0x8(%eax),%edx
840017ad:	8b 45 e8             	mov    -0x18(%ebp),%eax
840017b0:	29 d0                	sub    %edx,%eax
840017b2:	89 45 f0             	mov    %eax,-0x10(%ebp)
840017b5:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
840017b9:	7e 23                	jle    840017de <_malloc_trim_r+0x114>
840017bb:	8b 15 ec 61 00 84    	mov    0x840061ec,%edx
840017c1:	8b 45 e8             	mov    -0x18(%ebp),%eax
840017c4:	29 d0                	sub    %edx,%eax
840017c6:	a3 c0 63 00 84       	mov    %eax,0x840063c0
840017cb:	8b 45 f0             	mov    -0x10(%ebp),%eax
840017ce:	83 c8 01             	or     $0x1,%eax
840017d1:	89 c2                	mov    %eax,%edx
840017d3:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
840017d8:	8b 40 08             	mov    0x8(%eax),%eax
840017db:	89 50 04             	mov    %edx,0x4(%eax)
840017de:	83 ec 0c             	sub    $0xc,%esp
840017e1:	ff 75 08             	push   0x8(%ebp)
840017e4:	e8 dd 0c 00 00       	call   840024c6 <__malloc_unlock>
840017e9:	83 c4 10             	add    $0x10,%esp
840017ec:	b8 00 00 00 00       	mov    $0x0,%eax
840017f1:	eb 36                	jmp    84001829 <_malloc_trim_r+0x15f>
840017f3:	8b 45 f0             	mov    -0x10(%ebp),%eax
840017f6:	2b 45 ec             	sub    -0x14(%ebp),%eax
840017f9:	83 c8 01             	or     $0x1,%eax
840017fc:	89 c2                	mov    %eax,%edx
840017fe:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84001803:	8b 40 08             	mov    0x8(%eax),%eax
84001806:	89 50 04             	mov    %edx,0x4(%eax)
84001809:	a1 c0 63 00 84       	mov    0x840063c0,%eax
8400180e:	2b 45 ec             	sub    -0x14(%ebp),%eax
84001811:	a3 c0 63 00 84       	mov    %eax,0x840063c0
84001816:	83 ec 0c             	sub    $0xc,%esp
84001819:	ff 75 08             	push   0x8(%ebp)
8400181c:	e8 a5 0c 00 00       	call   840024c6 <__malloc_unlock>
84001821:	83 c4 10             	add    $0x10,%esp
84001824:	b8 01 00 00 00       	mov    $0x1,%eax
84001829:	c9                   	leave  
8400182a:	c3                   	ret    

8400182b <_fwalk>:
8400182b:	55                   	push   %ebp
8400182c:	89 e5                	mov    %esp,%ebp
8400182e:	57                   	push   %edi
8400182f:	56                   	push   %esi
84001830:	53                   	push   %ebx
84001831:	83 ec 1c             	sub    $0x1c,%esp
84001834:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8400183b:	8b 45 08             	mov    0x8(%ebp),%eax
8400183e:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
84001844:	eb 3e                	jmp    84001884 <_fwalk+0x59>
84001846:	8b 5e 08             	mov    0x8(%esi),%ebx
84001849:	8b 7e 04             	mov    0x4(%esi),%edi
8400184c:	eb 2d                	jmp    8400187b <_fwalk+0x50>
8400184e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84001852:	66 85 c0             	test   %ax,%ax
84001855:	74 21                	je     84001878 <_fwalk+0x4d>
84001857:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400185b:	66 83 f8 01          	cmp    $0x1,%ax
8400185f:	74 17                	je     84001878 <_fwalk+0x4d>
84001861:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
84001865:	66 83 f8 ff          	cmp    $0xffff,%ax
84001869:	74 0d                	je     84001878 <_fwalk+0x4d>
8400186b:	83 ec 0c             	sub    $0xc,%esp
8400186e:	53                   	push   %ebx
8400186f:	ff 55 0c             	call   *0xc(%ebp)
84001872:	83 c4 10             	add    $0x10,%esp
84001875:	09 45 e4             	or     %eax,-0x1c(%ebp)
84001878:	83 c3 68             	add    $0x68,%ebx
8400187b:	83 ef 01             	sub    $0x1,%edi
8400187e:	85 ff                	test   %edi,%edi
84001880:	79 cc                	jns    8400184e <_fwalk+0x23>
84001882:	8b 36                	mov    (%esi),%esi
84001884:	85 f6                	test   %esi,%esi
84001886:	75 be                	jne    84001846 <_fwalk+0x1b>
84001888:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8400188b:	8d 65 f4             	lea    -0xc(%ebp),%esp
8400188e:	5b                   	pop    %ebx
8400188f:	5e                   	pop    %esi
84001890:	5f                   	pop    %edi
84001891:	5d                   	pop    %ebp
84001892:	c3                   	ret    

84001893 <_fwalk_reent>:
84001893:	55                   	push   %ebp
84001894:	89 e5                	mov    %esp,%ebp
84001896:	57                   	push   %edi
84001897:	56                   	push   %esi
84001898:	53                   	push   %ebx
84001899:	83 ec 1c             	sub    $0x1c,%esp
8400189c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
840018a3:	8b 45 08             	mov    0x8(%ebp),%eax
840018a6:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
840018ac:	eb 41                	jmp    840018ef <_fwalk_reent+0x5c>
840018ae:	8b 5e 08             	mov    0x8(%esi),%ebx
840018b1:	8b 7e 04             	mov    0x4(%esi),%edi
840018b4:	eb 30                	jmp    840018e6 <_fwalk_reent+0x53>
840018b6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840018ba:	66 85 c0             	test   %ax,%ax
840018bd:	74 24                	je     840018e3 <_fwalk_reent+0x50>
840018bf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840018c3:	66 83 f8 01          	cmp    $0x1,%ax
840018c7:	74 1a                	je     840018e3 <_fwalk_reent+0x50>
840018c9:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
840018cd:	66 83 f8 ff          	cmp    $0xffff,%ax
840018d1:	74 10                	je     840018e3 <_fwalk_reent+0x50>
840018d3:	83 ec 08             	sub    $0x8,%esp
840018d6:	53                   	push   %ebx
840018d7:	ff 75 08             	push   0x8(%ebp)
840018da:	ff 55 0c             	call   *0xc(%ebp)
840018dd:	83 c4 10             	add    $0x10,%esp
840018e0:	09 45 e4             	or     %eax,-0x1c(%ebp)
840018e3:	83 c3 68             	add    $0x68,%ebx
840018e6:	83 ef 01             	sub    $0x1,%edi
840018e9:	85 ff                	test   %edi,%edi
840018eb:	79 c9                	jns    840018b6 <_fwalk_reent+0x23>
840018ed:	8b 36                	mov    (%esi),%esi
840018ef:	85 f6                	test   %esi,%esi
840018f1:	75 bb                	jne    840018ae <_fwalk_reent+0x1b>
840018f3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
840018f6:	8d 65 f4             	lea    -0xc(%ebp),%esp
840018f9:	5b                   	pop    %ebx
840018fa:	5e                   	pop    %esi
840018fb:	5f                   	pop    %edi
840018fc:	5d                   	pop    %ebp
840018fd:	c3                   	ret    

840018fe <_getchar_r>:
840018fe:	55                   	push   %ebp
840018ff:	89 e5                	mov    %esp,%ebp
84001901:	83 ec 08             	sub    $0x8,%esp
84001904:	8b 45 08             	mov    0x8(%ebp),%eax
84001907:	8b 40 04             	mov    0x4(%eax),%eax
8400190a:	83 ec 08             	sub    $0x8,%esp
8400190d:	50                   	push   %eax
8400190e:	ff 75 08             	push   0x8(%ebp)
84001911:	e8 cc 12 00 00       	call   84002be2 <_getc_r>
84001916:	83 c4 10             	add    $0x10,%esp
84001919:	c9                   	leave  
8400191a:	c3                   	ret    

8400191b <getchar>:
8400191b:	55                   	push   %ebp
8400191c:	89 e5                	mov    %esp,%ebp
8400191e:	83 ec 18             	sub    $0x18,%esp
84001921:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84001926:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001929:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400192c:	8b 40 04             	mov    0x4(%eax),%eax
8400192f:	83 ec 08             	sub    $0x8,%esp
84001932:	50                   	push   %eax
84001933:	ff 75 f4             	push   -0xc(%ebp)
84001936:	e8 a7 12 00 00       	call   84002be2 <_getc_r>
8400193b:	83 c4 10             	add    $0x10,%esp
8400193e:	c9                   	leave  
8400193f:	c3                   	ret    

84001940 <__getreent>:
84001940:	55                   	push   %ebp
84001941:	89 e5                	mov    %esp,%ebp
84001943:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84001948:	5d                   	pop    %ebp
84001949:	c3                   	ret    

8400194a <malloc>:
8400194a:	55                   	push   %ebp
8400194b:	89 e5                	mov    %esp,%ebp
8400194d:	83 ec 08             	sub    $0x8,%esp
84001950:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84001955:	83 ec 08             	sub    $0x8,%esp
84001958:	ff 75 08             	push   0x8(%ebp)
8400195b:	50                   	push   %eax
8400195c:	e8 b5 02 00 00       	call   84001c16 <_malloc_r>
84001961:	83 c4 10             	add    $0x10,%esp
84001964:	c9                   	leave  
84001965:	c3                   	ret    

84001966 <free>:
84001966:	55                   	push   %ebp
84001967:	89 e5                	mov    %esp,%ebp
84001969:	83 ec 08             	sub    $0x8,%esp
8400196c:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84001971:	83 ec 08             	sub    $0x8,%esp
84001974:	ff 75 08             	push   0x8(%ebp)
84001977:	50                   	push   %eax
84001978:	e8 72 f9 ff ff       	call   840012ef <_free_r>
8400197d:	83 c4 10             	add    $0x10,%esp
84001980:	90                   	nop
84001981:	c9                   	leave  
84001982:	c3                   	ret    

84001983 <malloc_extend_top>:
84001983:	55                   	push   %ebp
84001984:	89 e5                	mov    %esp,%ebp
84001986:	83 ec 38             	sub    $0x38,%esp
84001989:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
84001990:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84001995:	8b 40 08             	mov    0x8(%eax),%eax
84001998:	89 45 e0             	mov    %eax,-0x20(%ebp)
8400199b:	8b 45 e0             	mov    -0x20(%ebp),%eax
8400199e:	8b 40 04             	mov    0x4(%eax),%eax
840019a1:	83 e0 fc             	and    $0xfffffffc,%eax
840019a4:	89 45 dc             	mov    %eax,-0x24(%ebp)
840019a7:	8b 55 e0             	mov    -0x20(%ebp),%edx
840019aa:	8b 45 dc             	mov    -0x24(%ebp),%eax
840019ad:	01 d0                	add    %edx,%eax
840019af:	89 45 d8             	mov    %eax,-0x28(%ebp)
840019b2:	8b 15 a0 63 00 84    	mov    0x840063a0,%edx
840019b8:	8b 45 0c             	mov    0xc(%ebp),%eax
840019bb:	01 d0                	add    %edx,%eax
840019bd:	83 c0 10             	add    $0x10,%eax
840019c0:	89 45 e8             	mov    %eax,-0x18(%ebp)
840019c3:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
840019ca:	a1 ec 61 00 84       	mov    0x840061ec,%eax
840019cf:	83 f8 ff             	cmp    $0xffffffff,%eax
840019d2:	74 15                	je     840019e9 <malloc_extend_top+0x66>
840019d4:	8b 55 d4             	mov    -0x2c(%ebp),%edx
840019d7:	8b 45 e8             	mov    -0x18(%ebp),%eax
840019da:	01 d0                	add    %edx,%eax
840019dc:	8d 50 ff             	lea    -0x1(%eax),%edx
840019df:	8b 45 d4             	mov    -0x2c(%ebp),%eax
840019e2:	f7 d8                	neg    %eax
840019e4:	21 d0                	and    %edx,%eax
840019e6:	89 45 e8             	mov    %eax,-0x18(%ebp)
840019e9:	8b 45 e8             	mov    -0x18(%ebp),%eax
840019ec:	83 ec 08             	sub    $0x8,%esp
840019ef:	50                   	push   %eax
840019f0:	ff 75 08             	push   0x8(%ebp)
840019f3:	e8 c7 0b 00 00       	call   840025bf <_sbrk_r>
840019f8:	83 c4 10             	add    $0x10,%esp
840019fb:	89 45 f4             	mov    %eax,-0xc(%ebp)
840019fe:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84001a02:	0f 84 0b 02 00 00    	je     84001c13 <malloc_extend_top+0x290>
84001a08:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001a0b:	3b 45 d8             	cmp    -0x28(%ebp),%eax
84001a0e:	73 0e                	jae    84001a1e <malloc_extend_top+0x9b>
84001a10:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84001a15:	39 45 e0             	cmp    %eax,-0x20(%ebp)
84001a18:	0f 85 f5 01 00 00    	jne    84001c13 <malloc_extend_top+0x290>
84001a1e:	a1 c0 63 00 84       	mov    0x840063c0,%eax
84001a23:	89 c2                	mov    %eax,%edx
84001a25:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001a28:	01 d0                	add    %edx,%eax
84001a2a:	a3 c0 63 00 84       	mov    %eax,0x840063c0
84001a2f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001a32:	3b 45 d8             	cmp    -0x28(%ebp),%eax
84001a35:	75 30                	jne    84001a67 <malloc_extend_top+0xe4>
84001a37:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001a3a:	8d 50 ff             	lea    -0x1(%eax),%edx
84001a3d:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001a40:	21 d0                	and    %edx,%eax
84001a42:	85 c0                	test   %eax,%eax
84001a44:	75 21                	jne    84001a67 <malloc_extend_top+0xe4>
84001a46:	8b 55 e8             	mov    -0x18(%ebp),%edx
84001a49:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001a4c:	01 d0                	add    %edx,%eax
84001a4e:	89 45 d0             	mov    %eax,-0x30(%ebp)
84001a51:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84001a56:	8b 40 08             	mov    0x8(%eax),%eax
84001a59:	8b 55 d0             	mov    -0x30(%ebp),%edx
84001a5c:	83 ca 01             	or     $0x1,%edx
84001a5f:	89 50 04             	mov    %edx,0x4(%eax)
84001a62:	e9 76 01 00 00       	jmp    84001bdd <malloc_extend_top+0x25a>
84001a67:	a1 ec 61 00 84       	mov    0x840061ec,%eax
84001a6c:	83 f8 ff             	cmp    $0xffffffff,%eax
84001a6f:	75 0a                	jne    84001a7b <malloc_extend_top+0xf8>
84001a71:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001a74:	a3 ec 61 00 84       	mov    %eax,0x840061ec
84001a79:	eb 13                	jmp    84001a8e <malloc_extend_top+0x10b>
84001a7b:	8b 15 c0 63 00 84    	mov    0x840063c0,%edx
84001a81:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001a84:	2b 45 d8             	sub    -0x28(%ebp),%eax
84001a87:	01 d0                	add    %edx,%eax
84001a89:	a3 c0 63 00 84       	mov    %eax,0x840063c0
84001a8e:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001a91:	83 c0 08             	add    $0x8,%eax
84001a94:	83 e0 07             	and    $0x7,%eax
84001a97:	89 45 cc             	mov    %eax,-0x34(%ebp)
84001a9a:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
84001a9e:	74 13                	je     84001ab3 <malloc_extend_top+0x130>
84001aa0:	b8 08 00 00 00       	mov    $0x8,%eax
84001aa5:	2b 45 cc             	sub    -0x34(%ebp),%eax
84001aa8:	89 45 f0             	mov    %eax,-0x10(%ebp)
84001aab:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001aae:	01 45 f4             	add    %eax,-0xc(%ebp)
84001ab1:	eb 07                	jmp    84001aba <malloc_extend_top+0x137>
84001ab3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
84001aba:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001abd:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001ac0:	01 d0                	add    %edx,%eax
84001ac2:	89 c2                	mov    %eax,%edx
84001ac4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001ac7:	83 e8 01             	sub    $0x1,%eax
84001aca:	21 c2                	and    %eax,%edx
84001acc:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001acf:	29 d0                	sub    %edx,%eax
84001ad1:	01 45 f0             	add    %eax,-0x10(%ebp)
84001ad4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001ad7:	83 e8 01             	sub    $0x1,%eax
84001ada:	21 45 f0             	and    %eax,-0x10(%ebp)
84001add:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001ae0:	83 ec 08             	sub    $0x8,%esp
84001ae3:	50                   	push   %eax
84001ae4:	ff 75 08             	push   0x8(%ebp)
84001ae7:	e8 d3 0a 00 00       	call   840025bf <_sbrk_r>
84001aec:	83 c4 10             	add    $0x10,%esp
84001aef:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001af2:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
84001af6:	75 28                	jne    84001b20 <malloc_extend_top+0x19d>
84001af8:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
84001aff:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
84001b06:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001b09:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001b0c:	01 d0                	add    %edx,%eax
84001b0e:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001b11:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
84001b15:	74 09                	je     84001b20 <malloc_extend_top+0x19d>
84001b17:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001b1a:	83 e8 08             	sub    $0x8,%eax
84001b1d:	01 45 ec             	add    %eax,-0x14(%ebp)
84001b20:	a1 c0 63 00 84       	mov    0x840063c0,%eax
84001b25:	89 c2                	mov    %eax,%edx
84001b27:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001b2a:	01 d0                	add    %edx,%eax
84001b2c:	a3 c0 63 00 84       	mov    %eax,0x840063c0
84001b31:	ba e0 5d 00 84       	mov    $0x84005de0,%edx
84001b36:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001b39:	89 42 08             	mov    %eax,0x8(%edx)
84001b3c:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001b3f:	2b 45 f4             	sub    -0xc(%ebp),%eax
84001b42:	89 c2                	mov    %eax,%edx
84001b44:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001b47:	01 d0                	add    %edx,%eax
84001b49:	89 45 d0             	mov    %eax,-0x30(%ebp)
84001b4c:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84001b51:	8b 40 08             	mov    0x8(%eax),%eax
84001b54:	8b 55 d0             	mov    -0x30(%ebp),%edx
84001b57:	83 ca 01             	or     $0x1,%edx
84001b5a:	89 50 04             	mov    %edx,0x4(%eax)
84001b5d:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84001b62:	39 45 e0             	cmp    %eax,-0x20(%ebp)
84001b65:	74 76                	je     84001bdd <malloc_extend_top+0x25a>
84001b67:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
84001b6b:	77 14                	ja     84001b81 <malloc_extend_top+0x1fe>
84001b6d:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84001b72:	8b 40 08             	mov    0x8(%eax),%eax
84001b75:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
84001b7c:	e9 93 00 00 00       	jmp    84001c14 <malloc_extend_top+0x291>
84001b81:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001b84:	83 e8 0c             	sub    $0xc,%eax
84001b87:	83 e0 f8             	and    $0xfffffff8,%eax
84001b8a:	89 45 dc             	mov    %eax,-0x24(%ebp)
84001b8d:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001b90:	8b 40 04             	mov    0x4(%eax),%eax
84001b93:	83 e0 01             	and    $0x1,%eax
84001b96:	0b 45 dc             	or     -0x24(%ebp),%eax
84001b99:	89 c2                	mov    %eax,%edx
84001b9b:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001b9e:	89 50 04             	mov    %edx,0x4(%eax)
84001ba1:	8b 55 e0             	mov    -0x20(%ebp),%edx
84001ba4:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001ba7:	01 d0                	add    %edx,%eax
84001ba9:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
84001bb0:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001bb3:	8d 50 04             	lea    0x4(%eax),%edx
84001bb6:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001bb9:	01 d0                	add    %edx,%eax
84001bbb:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
84001bc2:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
84001bc6:	76 15                	jbe    84001bdd <malloc_extend_top+0x25a>
84001bc8:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001bcb:	83 c0 08             	add    $0x8,%eax
84001bce:	83 ec 08             	sub    $0x8,%esp
84001bd1:	50                   	push   %eax
84001bd2:	ff 75 08             	push   0x8(%ebp)
84001bd5:	e8 15 f7 ff ff       	call   840012ef <_free_r>
84001bda:	83 c4 10             	add    $0x10,%esp
84001bdd:	a1 c0 63 00 84       	mov    0x840063c0,%eax
84001be2:	89 c2                	mov    %eax,%edx
84001be4:	a1 a4 63 00 84       	mov    0x840063a4,%eax
84001be9:	39 c2                	cmp    %eax,%edx
84001beb:	76 0a                	jbe    84001bf7 <malloc_extend_top+0x274>
84001bed:	a1 c0 63 00 84       	mov    0x840063c0,%eax
84001bf2:	a3 a4 63 00 84       	mov    %eax,0x840063a4
84001bf7:	a1 c0 63 00 84       	mov    0x840063c0,%eax
84001bfc:	89 c2                	mov    %eax,%edx
84001bfe:	a1 a8 63 00 84       	mov    0x840063a8,%eax
84001c03:	39 c2                	cmp    %eax,%edx
84001c05:	76 0d                	jbe    84001c14 <malloc_extend_top+0x291>
84001c07:	a1 c0 63 00 84       	mov    0x840063c0,%eax
84001c0c:	a3 a8 63 00 84       	mov    %eax,0x840063a8
84001c11:	eb 01                	jmp    84001c14 <malloc_extend_top+0x291>
84001c13:	90                   	nop
84001c14:	c9                   	leave  
84001c15:	c3                   	ret    

84001c16 <_malloc_r>:
84001c16:	55                   	push   %ebp
84001c17:	89 e5                	mov    %esp,%ebp
84001c19:	53                   	push   %ebx
84001c1a:	83 ec 44             	sub    $0x44,%esp
84001c1d:	8b 45 0c             	mov    0xc(%ebp),%eax
84001c20:	83 c0 0b             	add    $0xb,%eax
84001c23:	83 f8 16             	cmp    $0x16,%eax
84001c26:	76 0b                	jbe    84001c33 <_malloc_r+0x1d>
84001c28:	8b 45 0c             	mov    0xc(%ebp),%eax
84001c2b:	83 c0 0b             	add    $0xb,%eax
84001c2e:	83 e0 f8             	and    $0xfffffff8,%eax
84001c31:	eb 05                	jmp    84001c38 <_malloc_r+0x22>
84001c33:	b8 10 00 00 00       	mov    $0x10,%eax
84001c38:	89 45 d0             	mov    %eax,-0x30(%ebp)
84001c3b:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001c3e:	85 c0                	test   %eax,%eax
84001c40:	78 08                	js     84001c4a <_malloc_r+0x34>
84001c42:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001c45:	3b 45 0c             	cmp    0xc(%ebp),%eax
84001c48:	73 13                	jae    84001c5d <_malloc_r+0x47>
84001c4a:	8b 45 08             	mov    0x8(%ebp),%eax
84001c4d:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
84001c53:	b8 00 00 00 00       	mov    $0x0,%eax
84001c58:	e9 d6 07 00 00       	jmp    84002433 <_malloc_r+0x81d>
84001c5d:	83 ec 0c             	sub    $0xc,%esp
84001c60:	ff 75 08             	push   0x8(%ebp)
84001c63:	e8 58 08 00 00       	call   840024c0 <__malloc_lock>
84001c68:	83 c4 10             	add    $0x10,%esp
84001c6b:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
84001c72:	0f 87 b0 00 00 00    	ja     84001d28 <_malloc_r+0x112>
84001c78:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001c7b:	c1 e8 03             	shr    $0x3,%eax
84001c7e:	89 45 f0             	mov    %eax,-0x10(%ebp)
84001c81:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001c84:	83 c0 01             	add    $0x1,%eax
84001c87:	01 c0                	add    %eax,%eax
84001c89:	c1 e0 02             	shl    $0x2,%eax
84001c8c:	05 e0 5d 00 84       	add    $0x84005de0,%eax
84001c91:	83 e8 08             	sub    $0x8,%eax
84001c94:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84001c97:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001c9a:	8b 40 0c             	mov    0xc(%eax),%eax
84001c9d:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001ca0:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001ca3:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
84001ca6:	75 0d                	jne    84001cb5 <_malloc_r+0x9f>
84001ca8:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
84001cac:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001caf:	8b 40 0c             	mov    0xc(%eax),%eax
84001cb2:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001cb5:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001cb8:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
84001cbb:	74 62                	je     84001d1f <_malloc_r+0x109>
84001cbd:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001cc0:	8b 40 04             	mov    0x4(%eax),%eax
84001cc3:	83 e0 fc             	and    $0xfffffffc,%eax
84001cc6:	89 45 cc             	mov    %eax,-0x34(%ebp)
84001cc9:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001ccc:	8b 40 0c             	mov    0xc(%eax),%eax
84001ccf:	89 45 d8             	mov    %eax,-0x28(%ebp)
84001cd2:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001cd5:	8b 40 08             	mov    0x8(%eax),%eax
84001cd8:	89 45 dc             	mov    %eax,-0x24(%ebp)
84001cdb:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001cde:	8b 55 d8             	mov    -0x28(%ebp),%edx
84001ce1:	89 50 0c             	mov    %edx,0xc(%eax)
84001ce4:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001ce7:	8b 55 dc             	mov    -0x24(%ebp),%edx
84001cea:	89 50 08             	mov    %edx,0x8(%eax)
84001ced:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001cf0:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001cf3:	01 d0                	add    %edx,%eax
84001cf5:	8b 50 04             	mov    0x4(%eax),%edx
84001cf8:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84001cfb:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001cfe:	01 c8                	add    %ecx,%eax
84001d00:	83 ca 01             	or     $0x1,%edx
84001d03:	89 50 04             	mov    %edx,0x4(%eax)
84001d06:	83 ec 0c             	sub    $0xc,%esp
84001d09:	ff 75 08             	push   0x8(%ebp)
84001d0c:	e8 b5 07 00 00       	call   840024c6 <__malloc_unlock>
84001d11:	83 c4 10             	add    $0x10,%esp
84001d14:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001d17:	83 c0 08             	add    $0x8,%eax
84001d1a:	e9 14 07 00 00       	jmp    84002433 <_malloc_r+0x81d>
84001d1f:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
84001d23:	e9 46 01 00 00       	jmp    84001e6e <_malloc_r+0x258>
84001d28:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d2b:	c1 e8 09             	shr    $0x9,%eax
84001d2e:	85 c0                	test   %eax,%eax
84001d30:	75 08                	jne    84001d3a <_malloc_r+0x124>
84001d32:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d35:	c1 e8 03             	shr    $0x3,%eax
84001d38:	eb 77                	jmp    84001db1 <_malloc_r+0x19b>
84001d3a:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d3d:	c1 e8 09             	shr    $0x9,%eax
84001d40:	83 f8 04             	cmp    $0x4,%eax
84001d43:	77 0b                	ja     84001d50 <_malloc_r+0x13a>
84001d45:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d48:	c1 e8 06             	shr    $0x6,%eax
84001d4b:	83 c0 38             	add    $0x38,%eax
84001d4e:	eb 61                	jmp    84001db1 <_malloc_r+0x19b>
84001d50:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d53:	c1 e8 09             	shr    $0x9,%eax
84001d56:	83 f8 14             	cmp    $0x14,%eax
84001d59:	77 0b                	ja     84001d66 <_malloc_r+0x150>
84001d5b:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d5e:	c1 e8 09             	shr    $0x9,%eax
84001d61:	83 c0 5b             	add    $0x5b,%eax
84001d64:	eb 4b                	jmp    84001db1 <_malloc_r+0x19b>
84001d66:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d69:	c1 e8 09             	shr    $0x9,%eax
84001d6c:	83 f8 54             	cmp    $0x54,%eax
84001d6f:	77 0b                	ja     84001d7c <_malloc_r+0x166>
84001d71:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d74:	c1 e8 0c             	shr    $0xc,%eax
84001d77:	83 c0 6e             	add    $0x6e,%eax
84001d7a:	eb 35                	jmp    84001db1 <_malloc_r+0x19b>
84001d7c:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d7f:	c1 e8 09             	shr    $0x9,%eax
84001d82:	3d 54 01 00 00       	cmp    $0x154,%eax
84001d87:	77 0b                	ja     84001d94 <_malloc_r+0x17e>
84001d89:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d8c:	c1 e8 0f             	shr    $0xf,%eax
84001d8f:	83 c0 77             	add    $0x77,%eax
84001d92:	eb 1d                	jmp    84001db1 <_malloc_r+0x19b>
84001d94:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d97:	c1 e8 09             	shr    $0x9,%eax
84001d9a:	3d 54 05 00 00       	cmp    $0x554,%eax
84001d9f:	77 0b                	ja     84001dac <_malloc_r+0x196>
84001da1:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001da4:	c1 e8 12             	shr    $0x12,%eax
84001da7:	83 c0 7c             	add    $0x7c,%eax
84001daa:	eb 05                	jmp    84001db1 <_malloc_r+0x19b>
84001dac:	b8 7e 00 00 00       	mov    $0x7e,%eax
84001db1:	89 45 f0             	mov    %eax,-0x10(%ebp)
84001db4:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001db7:	83 c0 01             	add    $0x1,%eax
84001dba:	01 c0                	add    %eax,%eax
84001dbc:	c1 e0 02             	shl    $0x2,%eax
84001dbf:	05 e0 5d 00 84       	add    $0x84005de0,%eax
84001dc4:	83 e8 08             	sub    $0x8,%eax
84001dc7:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001dca:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001dcd:	8b 40 0c             	mov    0xc(%eax),%eax
84001dd0:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001dd3:	e9 86 00 00 00       	jmp    84001e5e <_malloc_r+0x248>
84001dd8:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001ddb:	8b 40 04             	mov    0x4(%eax),%eax
84001dde:	83 e0 fc             	and    $0xfffffffc,%eax
84001de1:	89 45 cc             	mov    %eax,-0x34(%ebp)
84001de4:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001de7:	2b 45 d0             	sub    -0x30(%ebp),%eax
84001dea:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001ded:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
84001df1:	7e 06                	jle    84001df9 <_malloc_r+0x1e3>
84001df3:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
84001df7:	eb 71                	jmp    84001e6a <_malloc_r+0x254>
84001df9:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
84001dfd:	78 56                	js     84001e55 <_malloc_r+0x23f>
84001dff:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e02:	8b 40 0c             	mov    0xc(%eax),%eax
84001e05:	89 45 d8             	mov    %eax,-0x28(%ebp)
84001e08:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e0b:	8b 40 08             	mov    0x8(%eax),%eax
84001e0e:	89 45 dc             	mov    %eax,-0x24(%ebp)
84001e11:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001e14:	8b 55 d8             	mov    -0x28(%ebp),%edx
84001e17:	89 50 0c             	mov    %edx,0xc(%eax)
84001e1a:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001e1d:	8b 55 dc             	mov    -0x24(%ebp),%edx
84001e20:	89 50 08             	mov    %edx,0x8(%eax)
84001e23:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001e26:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001e29:	01 d0                	add    %edx,%eax
84001e2b:	8b 50 04             	mov    0x4(%eax),%edx
84001e2e:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84001e31:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001e34:	01 c8                	add    %ecx,%eax
84001e36:	83 ca 01             	or     $0x1,%edx
84001e39:	89 50 04             	mov    %edx,0x4(%eax)
84001e3c:	83 ec 0c             	sub    $0xc,%esp
84001e3f:	ff 75 08             	push   0x8(%ebp)
84001e42:	e8 7f 06 00 00       	call   840024c6 <__malloc_unlock>
84001e47:	83 c4 10             	add    $0x10,%esp
84001e4a:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e4d:	83 c0 08             	add    $0x8,%eax
84001e50:	e9 de 05 00 00       	jmp    84002433 <_malloc_r+0x81d>
84001e55:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e58:	8b 40 0c             	mov    0xc(%eax),%eax
84001e5b:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001e5e:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e61:	3b 45 ec             	cmp    -0x14(%ebp),%eax
84001e64:	0f 85 6e ff ff ff    	jne    84001dd8 <_malloc_r+0x1c2>
84001e6a:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
84001e6e:	b8 e8 5d 00 84       	mov    $0x84005de8,%eax
84001e73:	8b 40 08             	mov    0x8(%eax),%eax
84001e76:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001e79:	b8 e8 5d 00 84       	mov    $0x84005de8,%eax
84001e7e:	39 45 f4             	cmp    %eax,-0xc(%ebp)
84001e81:	0f 84 9c 02 00 00    	je     84002123 <_malloc_r+0x50d>
84001e87:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e8a:	8b 40 04             	mov    0x4(%eax),%eax
84001e8d:	83 e0 fc             	and    $0xfffffffc,%eax
84001e90:	89 45 cc             	mov    %eax,-0x34(%ebp)
84001e93:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001e96:	2b 45 d0             	sub    -0x30(%ebp),%eax
84001e99:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001e9c:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
84001ea0:	7e 7a                	jle    84001f1c <_malloc_r+0x306>
84001ea2:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001ea5:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001ea8:	01 d0                	add    %edx,%eax
84001eaa:	89 45 c4             	mov    %eax,-0x3c(%ebp)
84001ead:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001eb0:	83 c8 01             	or     $0x1,%eax
84001eb3:	89 c2                	mov    %eax,%edx
84001eb5:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001eb8:	89 50 04             	mov    %edx,0x4(%eax)
84001ebb:	b8 e8 5d 00 84       	mov    $0x84005de8,%eax
84001ec0:	8b 55 c4             	mov    -0x3c(%ebp),%edx
84001ec3:	89 50 0c             	mov    %edx,0xc(%eax)
84001ec6:	ba e8 5d 00 84       	mov    $0x84005de8,%edx
84001ecb:	8b 40 0c             	mov    0xc(%eax),%eax
84001ece:	89 42 08             	mov    %eax,0x8(%edx)
84001ed1:	ba e8 5d 00 84       	mov    $0x84005de8,%edx
84001ed6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84001ed9:	89 50 0c             	mov    %edx,0xc(%eax)
84001edc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84001edf:	8b 50 0c             	mov    0xc(%eax),%edx
84001ee2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84001ee5:	89 50 08             	mov    %edx,0x8(%eax)
84001ee8:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001eeb:	83 c8 01             	or     $0x1,%eax
84001eee:	89 c2                	mov    %eax,%edx
84001ef0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84001ef3:	89 50 04             	mov    %edx,0x4(%eax)
84001ef6:	8b 55 e8             	mov    -0x18(%ebp),%edx
84001ef9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84001efc:	01 c2                	add    %eax,%edx
84001efe:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001f01:	89 02                	mov    %eax,(%edx)
84001f03:	83 ec 0c             	sub    $0xc,%esp
84001f06:	ff 75 08             	push   0x8(%ebp)
84001f09:	e8 b8 05 00 00       	call   840024c6 <__malloc_unlock>
84001f0e:	83 c4 10             	add    $0x10,%esp
84001f11:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001f14:	83 c0 08             	add    $0x8,%eax
84001f17:	e9 17 05 00 00       	jmp    84002433 <_malloc_r+0x81d>
84001f1c:	b8 e8 5d 00 84       	mov    $0x84005de8,%eax
84001f21:	ba e8 5d 00 84       	mov    $0x84005de8,%edx
84001f26:	89 50 0c             	mov    %edx,0xc(%eax)
84001f29:	ba e8 5d 00 84       	mov    $0x84005de8,%edx
84001f2e:	8b 40 0c             	mov    0xc(%eax),%eax
84001f31:	89 42 08             	mov    %eax,0x8(%edx)
84001f34:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
84001f38:	78 32                	js     84001f6c <_malloc_r+0x356>
84001f3a:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001f3d:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001f40:	01 d0                	add    %edx,%eax
84001f42:	8b 50 04             	mov    0x4(%eax),%edx
84001f45:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84001f48:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001f4b:	01 c8                	add    %ecx,%eax
84001f4d:	83 ca 01             	or     $0x1,%edx
84001f50:	89 50 04             	mov    %edx,0x4(%eax)
84001f53:	83 ec 0c             	sub    $0xc,%esp
84001f56:	ff 75 08             	push   0x8(%ebp)
84001f59:	e8 68 05 00 00       	call   840024c6 <__malloc_unlock>
84001f5e:	83 c4 10             	add    $0x10,%esp
84001f61:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001f64:	83 c0 08             	add    $0x8,%eax
84001f67:	e9 c7 04 00 00       	jmp    84002433 <_malloc_r+0x81d>
84001f6c:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
84001f73:	77 7f                	ja     84001ff4 <_malloc_r+0x3de>
84001f75:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001f78:	c1 e8 03             	shr    $0x3,%eax
84001f7b:	89 45 c8             	mov    %eax,-0x38(%ebp)
84001f7e:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84001f83:	8b 58 04             	mov    0x4(%eax),%ebx
84001f86:	8b 45 c8             	mov    -0x38(%ebp),%eax
84001f89:	8d 50 03             	lea    0x3(%eax),%edx
84001f8c:	85 c0                	test   %eax,%eax
84001f8e:	0f 48 c2             	cmovs  %edx,%eax
84001f91:	c1 f8 02             	sar    $0x2,%eax
84001f94:	ba 01 00 00 00       	mov    $0x1,%edx
84001f99:	89 c1                	mov    %eax,%ecx
84001f9b:	d3 e2                	shl    %cl,%edx
84001f9d:	89 d0                	mov    %edx,%eax
84001f9f:	ba e0 5d 00 84       	mov    $0x84005de0,%edx
84001fa4:	09 d8                	or     %ebx,%eax
84001fa6:	89 42 04             	mov    %eax,0x4(%edx)
84001fa9:	8b 45 c8             	mov    -0x38(%ebp),%eax
84001fac:	83 c0 01             	add    $0x1,%eax
84001faf:	01 c0                	add    %eax,%eax
84001fb1:	c1 e0 02             	shl    $0x2,%eax
84001fb4:	05 e0 5d 00 84       	add    $0x84005de0,%eax
84001fb9:	83 e8 08             	sub    $0x8,%eax
84001fbc:	89 45 d8             	mov    %eax,-0x28(%ebp)
84001fbf:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001fc2:	8b 40 08             	mov    0x8(%eax),%eax
84001fc5:	89 45 dc             	mov    %eax,-0x24(%ebp)
84001fc8:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001fcb:	8b 55 d8             	mov    -0x28(%ebp),%edx
84001fce:	89 50 0c             	mov    %edx,0xc(%eax)
84001fd1:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001fd4:	8b 55 dc             	mov    -0x24(%ebp),%edx
84001fd7:	89 50 08             	mov    %edx,0x8(%eax)
84001fda:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001fdd:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001fe0:	89 50 08             	mov    %edx,0x8(%eax)
84001fe3:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001fe6:	8b 50 08             	mov    0x8(%eax),%edx
84001fe9:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001fec:	89 50 0c             	mov    %edx,0xc(%eax)
84001fef:	e9 2f 01 00 00       	jmp    84002123 <_malloc_r+0x50d>
84001ff4:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001ff7:	c1 e8 09             	shr    $0x9,%eax
84001ffa:	85 c0                	test   %eax,%eax
84001ffc:	75 08                	jne    84002006 <_malloc_r+0x3f0>
84001ffe:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002001:	c1 e8 03             	shr    $0x3,%eax
84002004:	eb 77                	jmp    8400207d <_malloc_r+0x467>
84002006:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002009:	c1 e8 09             	shr    $0x9,%eax
8400200c:	83 f8 04             	cmp    $0x4,%eax
8400200f:	77 0b                	ja     8400201c <_malloc_r+0x406>
84002011:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002014:	c1 e8 06             	shr    $0x6,%eax
84002017:	83 c0 38             	add    $0x38,%eax
8400201a:	eb 61                	jmp    8400207d <_malloc_r+0x467>
8400201c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8400201f:	c1 e8 09             	shr    $0x9,%eax
84002022:	83 f8 14             	cmp    $0x14,%eax
84002025:	77 0b                	ja     84002032 <_malloc_r+0x41c>
84002027:	8b 45 cc             	mov    -0x34(%ebp),%eax
8400202a:	c1 e8 09             	shr    $0x9,%eax
8400202d:	83 c0 5b             	add    $0x5b,%eax
84002030:	eb 4b                	jmp    8400207d <_malloc_r+0x467>
84002032:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002035:	c1 e8 09             	shr    $0x9,%eax
84002038:	83 f8 54             	cmp    $0x54,%eax
8400203b:	77 0b                	ja     84002048 <_malloc_r+0x432>
8400203d:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002040:	c1 e8 0c             	shr    $0xc,%eax
84002043:	83 c0 6e             	add    $0x6e,%eax
84002046:	eb 35                	jmp    8400207d <_malloc_r+0x467>
84002048:	8b 45 cc             	mov    -0x34(%ebp),%eax
8400204b:	c1 e8 09             	shr    $0x9,%eax
8400204e:	3d 54 01 00 00       	cmp    $0x154,%eax
84002053:	77 0b                	ja     84002060 <_malloc_r+0x44a>
84002055:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002058:	c1 e8 0f             	shr    $0xf,%eax
8400205b:	83 c0 77             	add    $0x77,%eax
8400205e:	eb 1d                	jmp    8400207d <_malloc_r+0x467>
84002060:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002063:	c1 e8 09             	shr    $0x9,%eax
84002066:	3d 54 05 00 00       	cmp    $0x554,%eax
8400206b:	77 0b                	ja     84002078 <_malloc_r+0x462>
8400206d:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002070:	c1 e8 12             	shr    $0x12,%eax
84002073:	83 c0 7c             	add    $0x7c,%eax
84002076:	eb 05                	jmp    8400207d <_malloc_r+0x467>
84002078:	b8 7e 00 00 00       	mov    $0x7e,%eax
8400207d:	89 45 c8             	mov    %eax,-0x38(%ebp)
84002080:	8b 45 c8             	mov    -0x38(%ebp),%eax
84002083:	83 c0 01             	add    $0x1,%eax
84002086:	01 c0                	add    %eax,%eax
84002088:	c1 e0 02             	shl    $0x2,%eax
8400208b:	05 e0 5d 00 84       	add    $0x84005de0,%eax
84002090:	83 e8 08             	sub    $0x8,%eax
84002093:	89 45 d8             	mov    %eax,-0x28(%ebp)
84002096:	8b 45 d8             	mov    -0x28(%ebp),%eax
84002099:	8b 40 08             	mov    0x8(%eax),%eax
8400209c:	89 45 dc             	mov    %eax,-0x24(%ebp)
8400209f:	8b 45 dc             	mov    -0x24(%ebp),%eax
840020a2:	3b 45 d8             	cmp    -0x28(%ebp),%eax
840020a5:	75 36                	jne    840020dd <_malloc_r+0x4c7>
840020a7:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
840020ac:	8b 58 04             	mov    0x4(%eax),%ebx
840020af:	8b 45 c8             	mov    -0x38(%ebp),%eax
840020b2:	8d 50 03             	lea    0x3(%eax),%edx
840020b5:	85 c0                	test   %eax,%eax
840020b7:	0f 48 c2             	cmovs  %edx,%eax
840020ba:	c1 f8 02             	sar    $0x2,%eax
840020bd:	ba 01 00 00 00       	mov    $0x1,%edx
840020c2:	89 c1                	mov    %eax,%ecx
840020c4:	d3 e2                	shl    %cl,%edx
840020c6:	89 d0                	mov    %edx,%eax
840020c8:	ba e0 5d 00 84       	mov    $0x84005de0,%edx
840020cd:	09 d8                	or     %ebx,%eax
840020cf:	89 42 04             	mov    %eax,0x4(%edx)
840020d2:	eb 28                	jmp    840020fc <_malloc_r+0x4e6>
840020d4:	8b 45 dc             	mov    -0x24(%ebp),%eax
840020d7:	8b 40 08             	mov    0x8(%eax),%eax
840020da:	89 45 dc             	mov    %eax,-0x24(%ebp)
840020dd:	8b 45 dc             	mov    -0x24(%ebp),%eax
840020e0:	3b 45 d8             	cmp    -0x28(%ebp),%eax
840020e3:	74 0e                	je     840020f3 <_malloc_r+0x4dd>
840020e5:	8b 45 dc             	mov    -0x24(%ebp),%eax
840020e8:	8b 40 04             	mov    0x4(%eax),%eax
840020eb:	83 e0 fc             	and    $0xfffffffc,%eax
840020ee:	39 45 cc             	cmp    %eax,-0x34(%ebp)
840020f1:	72 e1                	jb     840020d4 <_malloc_r+0x4be>
840020f3:	8b 45 dc             	mov    -0x24(%ebp),%eax
840020f6:	8b 40 0c             	mov    0xc(%eax),%eax
840020f9:	89 45 d8             	mov    %eax,-0x28(%ebp)
840020fc:	8b 45 f4             	mov    -0xc(%ebp),%eax
840020ff:	8b 55 d8             	mov    -0x28(%ebp),%edx
84002102:	89 50 0c             	mov    %edx,0xc(%eax)
84002105:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002108:	8b 55 dc             	mov    -0x24(%ebp),%edx
8400210b:	89 50 08             	mov    %edx,0x8(%eax)
8400210e:	8b 45 d8             	mov    -0x28(%ebp),%eax
84002111:	8b 55 f4             	mov    -0xc(%ebp),%edx
84002114:	89 50 08             	mov    %edx,0x8(%eax)
84002117:	8b 45 d8             	mov    -0x28(%ebp),%eax
8400211a:	8b 50 08             	mov    0x8(%eax),%edx
8400211d:	8b 45 dc             	mov    -0x24(%ebp),%eax
84002120:	89 50 0c             	mov    %edx,0xc(%eax)
84002123:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002126:	8d 50 03             	lea    0x3(%eax),%edx
84002129:	85 c0                	test   %eax,%eax
8400212b:	0f 48 c2             	cmovs  %edx,%eax
8400212e:	c1 f8 02             	sar    $0x2,%eax
84002131:	ba 01 00 00 00       	mov    $0x1,%edx
84002136:	89 c1                	mov    %eax,%ecx
84002138:	d3 e2                	shl    %cl,%edx
8400213a:	89 d0                	mov    %edx,%eax
8400213c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8400213f:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84002144:	8b 40 04             	mov    0x4(%eax),%eax
84002147:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
8400214a:	0f 87 13 02 00 00    	ja     84002363 <_malloc_r+0x74d>
84002150:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84002155:	8b 40 04             	mov    0x4(%eax),%eax
84002158:	23 45 e4             	and    -0x1c(%ebp),%eax
8400215b:	85 c0                	test   %eax,%eax
8400215d:	75 27                	jne    84002186 <_malloc_r+0x570>
8400215f:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002162:	83 e0 fc             	and    $0xfffffffc,%eax
84002165:	83 c0 04             	add    $0x4,%eax
84002168:	89 45 f0             	mov    %eax,-0x10(%ebp)
8400216b:	d1 65 e4             	shll   -0x1c(%ebp)
8400216e:	eb 07                	jmp    84002177 <_malloc_r+0x561>
84002170:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
84002174:	d1 65 e4             	shll   -0x1c(%ebp)
84002177:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
8400217c:	8b 40 04             	mov    0x4(%eax),%eax
8400217f:	23 45 e4             	and    -0x1c(%ebp),%eax
84002182:	85 c0                	test   %eax,%eax
84002184:	74 ea                	je     84002170 <_malloc_r+0x55a>
84002186:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002189:	89 45 e0             	mov    %eax,-0x20(%ebp)
8400218c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400218f:	83 c0 01             	add    $0x1,%eax
84002192:	01 c0                	add    %eax,%eax
84002194:	c1 e0 02             	shl    $0x2,%eax
84002197:	05 e0 5d 00 84       	add    $0x84005de0,%eax
8400219c:	83 e8 08             	sub    $0x8,%eax
8400219f:	89 45 ec             	mov    %eax,-0x14(%ebp)
840021a2:	8b 45 ec             	mov    -0x14(%ebp),%eax
840021a5:	89 45 d4             	mov    %eax,-0x2c(%ebp)
840021a8:	8b 45 ec             	mov    -0x14(%ebp),%eax
840021ab:	8b 40 0c             	mov    0xc(%eax),%eax
840021ae:	89 45 f4             	mov    %eax,-0xc(%ebp)
840021b1:	e9 22 01 00 00       	jmp    840022d8 <_malloc_r+0x6c2>
840021b6:	8b 45 f4             	mov    -0xc(%ebp),%eax
840021b9:	8b 40 04             	mov    0x4(%eax),%eax
840021bc:	83 e0 fc             	and    $0xfffffffc,%eax
840021bf:	89 45 cc             	mov    %eax,-0x34(%ebp)
840021c2:	8b 45 cc             	mov    -0x34(%ebp),%eax
840021c5:	2b 45 d0             	sub    -0x30(%ebp),%eax
840021c8:	89 45 e8             	mov    %eax,-0x18(%ebp)
840021cb:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
840021cf:	0f 8e 9e 00 00 00    	jle    84002273 <_malloc_r+0x65d>
840021d5:	8b 55 f4             	mov    -0xc(%ebp),%edx
840021d8:	8b 45 d0             	mov    -0x30(%ebp),%eax
840021db:	01 d0                	add    %edx,%eax
840021dd:	89 45 c4             	mov    %eax,-0x3c(%ebp)
840021e0:	8b 45 d0             	mov    -0x30(%ebp),%eax
840021e3:	83 c8 01             	or     $0x1,%eax
840021e6:	89 c2                	mov    %eax,%edx
840021e8:	8b 45 f4             	mov    -0xc(%ebp),%eax
840021eb:	89 50 04             	mov    %edx,0x4(%eax)
840021ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
840021f1:	8b 40 0c             	mov    0xc(%eax),%eax
840021f4:	89 45 d8             	mov    %eax,-0x28(%ebp)
840021f7:	8b 45 f4             	mov    -0xc(%ebp),%eax
840021fa:	8b 40 08             	mov    0x8(%eax),%eax
840021fd:	89 45 dc             	mov    %eax,-0x24(%ebp)
84002200:	8b 45 dc             	mov    -0x24(%ebp),%eax
84002203:	8b 55 d8             	mov    -0x28(%ebp),%edx
84002206:	89 50 0c             	mov    %edx,0xc(%eax)
84002209:	8b 45 d8             	mov    -0x28(%ebp),%eax
8400220c:	8b 55 dc             	mov    -0x24(%ebp),%edx
8400220f:	89 50 08             	mov    %edx,0x8(%eax)
84002212:	b8 e8 5d 00 84       	mov    $0x84005de8,%eax
84002217:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8400221a:	89 50 0c             	mov    %edx,0xc(%eax)
8400221d:	ba e8 5d 00 84       	mov    $0x84005de8,%edx
84002222:	8b 40 0c             	mov    0xc(%eax),%eax
84002225:	89 42 08             	mov    %eax,0x8(%edx)
84002228:	ba e8 5d 00 84       	mov    $0x84005de8,%edx
8400222d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84002230:	89 50 0c             	mov    %edx,0xc(%eax)
84002233:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84002236:	8b 50 0c             	mov    0xc(%eax),%edx
84002239:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8400223c:	89 50 08             	mov    %edx,0x8(%eax)
8400223f:	8b 45 e8             	mov    -0x18(%ebp),%eax
84002242:	83 c8 01             	or     $0x1,%eax
84002245:	89 c2                	mov    %eax,%edx
84002247:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8400224a:	89 50 04             	mov    %edx,0x4(%eax)
8400224d:	8b 55 e8             	mov    -0x18(%ebp),%edx
84002250:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84002253:	01 c2                	add    %eax,%edx
84002255:	8b 45 e8             	mov    -0x18(%ebp),%eax
84002258:	89 02                	mov    %eax,(%edx)
8400225a:	83 ec 0c             	sub    $0xc,%esp
8400225d:	ff 75 08             	push   0x8(%ebp)
84002260:	e8 61 02 00 00       	call   840024c6 <__malloc_unlock>
84002265:	83 c4 10             	add    $0x10,%esp
84002268:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400226b:	83 c0 08             	add    $0x8,%eax
8400226e:	e9 c0 01 00 00       	jmp    84002433 <_malloc_r+0x81d>
84002273:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
84002277:	78 56                	js     840022cf <_malloc_r+0x6b9>
84002279:	8b 55 f4             	mov    -0xc(%ebp),%edx
8400227c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8400227f:	01 d0                	add    %edx,%eax
84002281:	8b 50 04             	mov    0x4(%eax),%edx
84002284:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84002287:	8b 45 cc             	mov    -0x34(%ebp),%eax
8400228a:	01 c8                	add    %ecx,%eax
8400228c:	83 ca 01             	or     $0x1,%edx
8400228f:	89 50 04             	mov    %edx,0x4(%eax)
84002292:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002295:	8b 40 0c             	mov    0xc(%eax),%eax
84002298:	89 45 d8             	mov    %eax,-0x28(%ebp)
8400229b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400229e:	8b 40 08             	mov    0x8(%eax),%eax
840022a1:	89 45 dc             	mov    %eax,-0x24(%ebp)
840022a4:	8b 45 dc             	mov    -0x24(%ebp),%eax
840022a7:	8b 55 d8             	mov    -0x28(%ebp),%edx
840022aa:	89 50 0c             	mov    %edx,0xc(%eax)
840022ad:	8b 45 d8             	mov    -0x28(%ebp),%eax
840022b0:	8b 55 dc             	mov    -0x24(%ebp),%edx
840022b3:	89 50 08             	mov    %edx,0x8(%eax)
840022b6:	83 ec 0c             	sub    $0xc,%esp
840022b9:	ff 75 08             	push   0x8(%ebp)
840022bc:	e8 05 02 00 00       	call   840024c6 <__malloc_unlock>
840022c1:	83 c4 10             	add    $0x10,%esp
840022c4:	8b 45 f4             	mov    -0xc(%ebp),%eax
840022c7:	83 c0 08             	add    $0x8,%eax
840022ca:	e9 64 01 00 00       	jmp    84002433 <_malloc_r+0x81d>
840022cf:	8b 45 f4             	mov    -0xc(%ebp),%eax
840022d2:	8b 40 0c             	mov    0xc(%eax),%eax
840022d5:	89 45 f4             	mov    %eax,-0xc(%ebp)
840022d8:	8b 45 f4             	mov    -0xc(%ebp),%eax
840022db:	3b 45 ec             	cmp    -0x14(%ebp),%eax
840022de:	0f 85 d2 fe ff ff    	jne    840021b6 <_malloc_r+0x5a0>
840022e4:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
840022e8:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
840022ec:	8b 45 f0             	mov    -0x10(%ebp),%eax
840022ef:	83 e0 03             	and    $0x3,%eax
840022f2:	85 c0                	test   %eax,%eax
840022f4:	0f 85 ae fe ff ff    	jne    840021a8 <_malloc_r+0x592>
840022fa:	8b 45 e0             	mov    -0x20(%ebp),%eax
840022fd:	83 e0 03             	and    $0x3,%eax
84002300:	85 c0                	test   %eax,%eax
84002302:	75 19                	jne    8400231d <_malloc_r+0x707>
84002304:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84002309:	8b 48 04             	mov    0x4(%eax),%ecx
8400230c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8400230f:	f7 d0                	not    %eax
84002311:	ba e0 5d 00 84       	mov    $0x84005de0,%edx
84002316:	21 c8                	and    %ecx,%eax
84002318:	89 42 04             	mov    %eax,0x4(%edx)
8400231b:	eb 13                	jmp    84002330 <_malloc_r+0x71a>
8400231d:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
84002321:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
84002325:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84002328:	8b 40 08             	mov    0x8(%eax),%eax
8400232b:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
8400232e:	74 ca                	je     840022fa <_malloc_r+0x6e4>
84002330:	d1 65 e4             	shll   -0x1c(%ebp)
84002333:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84002338:	8b 40 04             	mov    0x4(%eax),%eax
8400233b:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
8400233e:	77 23                	ja     84002363 <_malloc_r+0x74d>
84002340:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
84002344:	74 1d                	je     84002363 <_malloc_r+0x74d>
84002346:	eb 07                	jmp    8400234f <_malloc_r+0x739>
84002348:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
8400234c:	d1 65 e4             	shll   -0x1c(%ebp)
8400234f:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84002354:	8b 40 04             	mov    0x4(%eax),%eax
84002357:	23 45 e4             	and    -0x1c(%ebp),%eax
8400235a:	85 c0                	test   %eax,%eax
8400235c:	74 ea                	je     84002348 <_malloc_r+0x732>
8400235e:	e9 23 fe ff ff       	jmp    84002186 <_malloc_r+0x570>
84002363:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84002368:	8b 40 08             	mov    0x8(%eax),%eax
8400236b:	8b 40 04             	mov    0x4(%eax),%eax
8400236e:	83 e0 fc             	and    $0xfffffffc,%eax
84002371:	2b 45 d0             	sub    -0x30(%ebp),%eax
84002374:	89 45 e8             	mov    %eax,-0x18(%ebp)
84002377:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
8400237c:	8b 40 08             	mov    0x8(%eax),%eax
8400237f:	8b 40 04             	mov    0x4(%eax),%eax
84002382:	83 e0 fc             	and    $0xfffffffc,%eax
84002385:	39 45 d0             	cmp    %eax,-0x30(%ebp)
84002388:	77 06                	ja     84002390 <_malloc_r+0x77a>
8400238a:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8400238e:	7f 53                	jg     840023e3 <_malloc_r+0x7cd>
84002390:	83 ec 08             	sub    $0x8,%esp
84002393:	ff 75 d0             	push   -0x30(%ebp)
84002396:	ff 75 08             	push   0x8(%ebp)
84002399:	e8 e5 f5 ff ff       	call   84001983 <malloc_extend_top>
8400239e:	83 c4 10             	add    $0x10,%esp
840023a1:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
840023a6:	8b 40 08             	mov    0x8(%eax),%eax
840023a9:	8b 40 04             	mov    0x4(%eax),%eax
840023ac:	83 e0 fc             	and    $0xfffffffc,%eax
840023af:	2b 45 d0             	sub    -0x30(%ebp),%eax
840023b2:	89 45 e8             	mov    %eax,-0x18(%ebp)
840023b5:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
840023ba:	8b 40 08             	mov    0x8(%eax),%eax
840023bd:	8b 40 04             	mov    0x4(%eax),%eax
840023c0:	83 e0 fc             	and    $0xfffffffc,%eax
840023c3:	39 45 d0             	cmp    %eax,-0x30(%ebp)
840023c6:	77 06                	ja     840023ce <_malloc_r+0x7b8>
840023c8:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
840023cc:	7f 15                	jg     840023e3 <_malloc_r+0x7cd>
840023ce:	83 ec 0c             	sub    $0xc,%esp
840023d1:	ff 75 08             	push   0x8(%ebp)
840023d4:	e8 ed 00 00 00       	call   840024c6 <__malloc_unlock>
840023d9:	83 c4 10             	add    $0x10,%esp
840023dc:	b8 00 00 00 00       	mov    $0x0,%eax
840023e1:	eb 50                	jmp    84002433 <_malloc_r+0x81d>
840023e3:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
840023e8:	8b 40 08             	mov    0x8(%eax),%eax
840023eb:	89 45 f4             	mov    %eax,-0xc(%ebp)
840023ee:	8b 45 d0             	mov    -0x30(%ebp),%eax
840023f1:	83 c8 01             	or     $0x1,%eax
840023f4:	89 c2                	mov    %eax,%edx
840023f6:	8b 45 f4             	mov    -0xc(%ebp),%eax
840023f9:	89 50 04             	mov    %edx,0x4(%eax)
840023fc:	ba e0 5d 00 84       	mov    $0x84005de0,%edx
84002401:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84002404:	8b 45 d0             	mov    -0x30(%ebp),%eax
84002407:	01 c8                	add    %ecx,%eax
84002409:	89 42 08             	mov    %eax,0x8(%edx)
8400240c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8400240f:	83 c8 01             	or     $0x1,%eax
84002412:	89 c2                	mov    %eax,%edx
84002414:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84002419:	8b 40 08             	mov    0x8(%eax),%eax
8400241c:	89 50 04             	mov    %edx,0x4(%eax)
8400241f:	83 ec 0c             	sub    $0xc,%esp
84002422:	ff 75 08             	push   0x8(%ebp)
84002425:	e8 9c 00 00 00       	call   840024c6 <__malloc_unlock>
8400242a:	83 c4 10             	add    $0x10,%esp
8400242d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002430:	83 c0 08             	add    $0x8,%eax
84002433:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84002436:	c9                   	leave  
84002437:	c3                   	ret    

84002438 <memset>:
84002438:	55                   	push   %ebp
84002439:	89 e5                	mov    %esp,%ebp
8400243b:	57                   	push   %edi
8400243c:	8b 7d 08             	mov    0x8(%ebp),%edi
8400243f:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
84002443:	8b 4d 10             	mov    0x10(%ebp),%ecx
84002446:	fc                   	cld    
84002447:	83 f9 10             	cmp    $0x10,%ecx
8400244a:	76 69                	jbe    840024b5 <memset+0x7d>
8400244c:	f7 c7 07 00 00 00    	test   $0x7,%edi
84002452:	74 4c                	je     840024a0 <memset+0x68>
84002454:	88 07                	mov    %al,(%edi)
84002456:	47                   	inc    %edi
84002457:	49                   	dec    %ecx
84002458:	f7 c7 07 00 00 00    	test   $0x7,%edi
8400245e:	74 40                	je     840024a0 <memset+0x68>
84002460:	88 07                	mov    %al,(%edi)
84002462:	47                   	inc    %edi
84002463:	49                   	dec    %ecx
84002464:	f7 c7 07 00 00 00    	test   $0x7,%edi
8400246a:	74 34                	je     840024a0 <memset+0x68>
8400246c:	88 07                	mov    %al,(%edi)
8400246e:	47                   	inc    %edi
8400246f:	49                   	dec    %ecx
84002470:	f7 c7 07 00 00 00    	test   $0x7,%edi
84002476:	74 28                	je     840024a0 <memset+0x68>
84002478:	88 07                	mov    %al,(%edi)
8400247a:	47                   	inc    %edi
8400247b:	49                   	dec    %ecx
8400247c:	f7 c7 07 00 00 00    	test   $0x7,%edi
84002482:	74 1c                	je     840024a0 <memset+0x68>
84002484:	88 07                	mov    %al,(%edi)
84002486:	47                   	inc    %edi
84002487:	49                   	dec    %ecx
84002488:	f7 c7 07 00 00 00    	test   $0x7,%edi
8400248e:	74 10                	je     840024a0 <memset+0x68>
84002490:	88 07                	mov    %al,(%edi)
84002492:	47                   	inc    %edi
84002493:	49                   	dec    %ecx
84002494:	f7 c7 07 00 00 00    	test   $0x7,%edi
8400249a:	74 04                	je     840024a0 <memset+0x68>
8400249c:	88 07                	mov    %al,(%edi)
8400249e:	47                   	inc    %edi
8400249f:	49                   	dec    %ecx
840024a0:	88 c4                	mov    %al,%ah
840024a2:	89 c2                	mov    %eax,%edx
840024a4:	c1 e2 10             	shl    $0x10,%edx
840024a7:	09 d0                	or     %edx,%eax
840024a9:	89 ca                	mov    %ecx,%edx
840024ab:	c1 e9 02             	shr    $0x2,%ecx
840024ae:	83 e2 03             	and    $0x3,%edx
840024b1:	f3 ab                	rep stos %eax,%es:(%edi)
840024b3:	89 d1                	mov    %edx,%ecx
840024b5:	f3 aa                	rep stos %al,%es:(%edi)
840024b7:	8b 45 08             	mov    0x8(%ebp),%eax
840024ba:	8d 65 fc             	lea    -0x4(%ebp),%esp
840024bd:	5f                   	pop    %edi
840024be:	c9                   	leave  
840024bf:	c3                   	ret    

840024c0 <__malloc_lock>:
840024c0:	55                   	push   %ebp
840024c1:	89 e5                	mov    %esp,%ebp
840024c3:	90                   	nop
840024c4:	5d                   	pop    %ebp
840024c5:	c3                   	ret    

840024c6 <__malloc_unlock>:
840024c6:	55                   	push   %ebp
840024c7:	89 e5                	mov    %esp,%ebp
840024c9:	90                   	nop
840024ca:	5d                   	pop    %ebp
840024cb:	c3                   	ret    

840024cc <_iprintf_r>:
840024cc:	55                   	push   %ebp
840024cd:	89 e5                	mov    %esp,%ebp
840024cf:	83 ec 18             	sub    $0x18,%esp
840024d2:	8d 45 10             	lea    0x10(%ebp),%eax
840024d5:	89 45 f0             	mov    %eax,-0x10(%ebp)
840024d8:	8b 55 f0             	mov    -0x10(%ebp),%edx
840024db:	8b 45 08             	mov    0x8(%ebp),%eax
840024de:	8b 40 08             	mov    0x8(%eax),%eax
840024e1:	52                   	push   %edx
840024e2:	ff 75 0c             	push   0xc(%ebp)
840024e5:	50                   	push   %eax
840024e6:	ff 75 08             	push   0x8(%ebp)
840024e9:	e8 9f 0b 00 00       	call   8400308d <_vfiprintf_r>
840024ee:	83 c4 10             	add    $0x10,%esp
840024f1:	89 45 f4             	mov    %eax,-0xc(%ebp)
840024f4:	8b 45 f4             	mov    -0xc(%ebp),%eax
840024f7:	c9                   	leave  
840024f8:	c3                   	ret    

840024f9 <iprintf>:
840024f9:	55                   	push   %ebp
840024fa:	89 e5                	mov    %esp,%ebp
840024fc:	83 ec 18             	sub    $0x18,%esp
840024ff:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84002504:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002507:	8d 45 0c             	lea    0xc(%ebp),%eax
8400250a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8400250d:	8b 55 ec             	mov    -0x14(%ebp),%edx
84002510:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002513:	8b 40 08             	mov    0x8(%eax),%eax
84002516:	52                   	push   %edx
84002517:	ff 75 08             	push   0x8(%ebp)
8400251a:	50                   	push   %eax
8400251b:	ff 75 f4             	push   -0xc(%ebp)
8400251e:	e8 6a 0b 00 00       	call   8400308d <_vfiprintf_r>
84002523:	83 c4 10             	add    $0x10,%esp
84002526:	89 45 f0             	mov    %eax,-0x10(%ebp)
84002529:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400252c:	c9                   	leave  
8400252d:	c3                   	ret    

8400252e <srand>:
8400252e:	55                   	push   %ebp
8400252f:	89 e5                	mov    %esp,%ebp
84002531:	83 ec 10             	sub    $0x10,%esp
84002534:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84002539:	89 45 fc             	mov    %eax,-0x4(%ebp)
8400253c:	8b 45 08             	mov    0x8(%ebp),%eax
8400253f:	ba 00 00 00 00       	mov    $0x0,%edx
84002544:	8b 4d fc             	mov    -0x4(%ebp),%ecx
84002547:	89 81 a4 00 00 00    	mov    %eax,0xa4(%ecx)
8400254d:	89 91 a8 00 00 00    	mov    %edx,0xa8(%ecx)
84002553:	90                   	nop
84002554:	c9                   	leave  
84002555:	c3                   	ret    

84002556 <rand>:
84002556:	55                   	push   %ebp
84002557:	89 e5                	mov    %esp,%ebp
84002559:	53                   	push   %ebx
8400255a:	83 ec 14             	sub    $0x14,%esp
8400255d:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84002562:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002565:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002568:	8b 90 a8 00 00 00    	mov    0xa8(%eax),%edx
8400256e:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax
84002574:	69 da 2d 7f 95 4c    	imul   $0x4c957f2d,%edx,%ebx
8400257a:	69 c8 2d f4 51 58    	imul   $0x5851f42d,%eax,%ecx
84002580:	01 d9                	add    %ebx,%ecx
84002582:	bb 2d 7f 95 4c       	mov    $0x4c957f2d,%ebx
84002587:	f7 e3                	mul    %ebx
84002589:	01 d1                	add    %edx,%ecx
8400258b:	89 ca                	mov    %ecx,%edx
8400258d:	83 c0 01             	add    $0x1,%eax
84002590:	83 d2 00             	adc    $0x0,%edx
84002593:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84002596:	89 81 a4 00 00 00    	mov    %eax,0xa4(%ecx)
8400259c:	89 91 a8 00 00 00    	mov    %edx,0xa8(%ecx)
840025a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
840025a5:	8b 90 a8 00 00 00    	mov    0xa8(%eax),%edx
840025ab:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax
840025b1:	89 d0                	mov    %edx,%eax
840025b3:	31 d2                	xor    %edx,%edx
840025b5:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
840025ba:	8b 5d fc             	mov    -0x4(%ebp),%ebx
840025bd:	c9                   	leave  
840025be:	c3                   	ret    

840025bf <_sbrk_r>:
840025bf:	55                   	push   %ebp
840025c0:	89 e5                	mov    %esp,%ebp
840025c2:	83 ec 18             	sub    $0x18,%esp
840025c5:	c7 05 f0 63 00 84 00 	movl   $0x0,0x840063f0
840025cc:	00 00 00 
840025cf:	83 ec 0c             	sub    $0xc,%esp
840025d2:	ff 75 0c             	push   0xc(%ebp)
840025d5:	e8 a7 dc ff ff       	call   84000281 <sbrk>
840025da:	83 c4 10             	add    $0x10,%esp
840025dd:	89 45 f4             	mov    %eax,-0xc(%ebp)
840025e0:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
840025e4:	75 14                	jne    840025fa <_sbrk_r+0x3b>
840025e6:	a1 f0 63 00 84       	mov    0x840063f0,%eax
840025eb:	85 c0                	test   %eax,%eax
840025ed:	74 0b                	je     840025fa <_sbrk_r+0x3b>
840025ef:	8b 15 f0 63 00 84    	mov    0x840063f0,%edx
840025f5:	8b 45 08             	mov    0x8(%ebp),%eax
840025f8:	89 10                	mov    %edx,(%eax)
840025fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
840025fd:	c9                   	leave  
840025fe:	c3                   	ret    

840025ff <setvbuf>:
840025ff:	55                   	push   %ebp
84002600:	89 e5                	mov    %esp,%ebp
84002602:	57                   	push   %edi
84002603:	56                   	push   %esi
84002604:	53                   	push   %ebx
84002605:	83 ec 2c             	sub    $0x2c,%esp
84002608:	8b 5d 08             	mov    0x8(%ebp),%ebx
8400260b:	8b 7d 10             	mov    0x10(%ebp),%edi
8400260e:	8b 75 14             	mov    0x14(%ebp),%esi
84002611:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
84002618:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
8400261d:	89 45 e0             	mov    %eax,-0x20(%ebp)
84002620:	8b 45 e0             	mov    -0x20(%ebp),%eax
84002623:	89 45 dc             	mov    %eax,-0x24(%ebp)
84002626:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8400262a:	74 18                	je     84002644 <setvbuf+0x45>
8400262c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8400262f:	8b 40 38             	mov    0x38(%eax),%eax
84002632:	85 c0                	test   %eax,%eax
84002634:	75 0e                	jne    84002644 <setvbuf+0x45>
84002636:	83 ec 0c             	sub    $0xc,%esp
84002639:	ff 75 dc             	push   -0x24(%ebp)
8400263c:	e8 a1 eb ff ff       	call   840011e2 <__sinit>
84002641:	83 c4 10             	add    $0x10,%esp
84002644:	83 ff 02             	cmp    $0x2,%edi
84002647:	74 19                	je     84002662 <setvbuf+0x63>
84002649:	85 ff                	test   %edi,%edi
8400264b:	74 05                	je     84002652 <setvbuf+0x53>
8400264d:	83 ff 01             	cmp    $0x1,%edi
84002650:	75 06                	jne    84002658 <setvbuf+0x59>
84002652:	89 f0                	mov    %esi,%eax
84002654:	85 c0                	test   %eax,%eax
84002656:	79 0a                	jns    84002662 <setvbuf+0x63>
84002658:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400265d:	e9 a1 01 00 00       	jmp    84002803 <setvbuf+0x204>
84002662:	83 ec 08             	sub    $0x8,%esp
84002665:	53                   	push   %ebx
84002666:	ff 75 e0             	push   -0x20(%ebp)
84002669:	e8 ee e7 ff ff       	call   84000e5c <_fflush_r>
8400266e:	83 c4 10             	add    $0x10,%esp
84002671:	8b 43 30             	mov    0x30(%ebx),%eax
84002674:	85 c0                	test   %eax,%eax
84002676:	74 23                	je     8400269b <setvbuf+0x9c>
84002678:	8b 53 30             	mov    0x30(%ebx),%edx
8400267b:	8d 43 40             	lea    0x40(%ebx),%eax
8400267e:	39 c2                	cmp    %eax,%edx
84002680:	74 12                	je     84002694 <setvbuf+0x95>
84002682:	8b 43 30             	mov    0x30(%ebx),%eax
84002685:	83 ec 08             	sub    $0x8,%esp
84002688:	50                   	push   %eax
84002689:	ff 75 e0             	push   -0x20(%ebp)
8400268c:	e8 5e ec ff ff       	call   840012ef <_free_r>
84002691:	83 c4 10             	add    $0x10,%esp
84002694:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8400269b:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
840026a2:	8b 43 18             	mov    0x18(%ebx),%eax
840026a5:	89 43 04             	mov    %eax,0x4(%ebx)
840026a8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840026ac:	98                   	cwtl   
840026ad:	25 80 00 00 00       	and    $0x80,%eax
840026b2:	85 c0                	test   %eax,%eax
840026b4:	74 12                	je     840026c8 <setvbuf+0xc9>
840026b6:	8b 43 10             	mov    0x10(%ebx),%eax
840026b9:	83 ec 08             	sub    $0x8,%esp
840026bc:	50                   	push   %eax
840026bd:	ff 75 e0             	push   -0x20(%ebp)
840026c0:	e8 2a ec ff ff       	call   840012ef <_free_r>
840026c5:	83 c4 10             	add    $0x10,%esp
840026c8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840026cc:	66 25 5c f3          	and    $0xf35c,%ax
840026d0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840026d4:	83 ff 02             	cmp    $0x2,%edi
840026d7:	74 6f                	je     84002748 <setvbuf+0x149>
840026d9:	8d 45 d4             	lea    -0x2c(%ebp),%eax
840026dc:	50                   	push   %eax
840026dd:	8d 45 d8             	lea    -0x28(%ebp),%eax
840026e0:	50                   	push   %eax
840026e1:	53                   	push   %ebx
840026e2:	ff 75 e0             	push   -0x20(%ebp)
840026e5:	e8 01 07 00 00       	call   84002deb <__swhatbuf_r>
840026ea:	83 c4 10             	add    $0x10,%esp
840026ed:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
840026f1:	09 d0                	or     %edx,%eax
840026f3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840026f7:	85 f6                	test   %esi,%esi
840026f9:	75 0a                	jne    84002705 <setvbuf+0x106>
840026fb:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
84002702:	8b 75 d8             	mov    -0x28(%ebp),%esi
84002705:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
84002709:	75 73                	jne    8400277e <setvbuf+0x17f>
8400270b:	83 ec 0c             	sub    $0xc,%esp
8400270e:	56                   	push   %esi
8400270f:	e8 36 f2 ff ff       	call   8400194a <malloc>
84002714:	83 c4 10             	add    $0x10,%esp
84002717:	89 45 0c             	mov    %eax,0xc(%ebp)
8400271a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8400271e:	75 20                	jne    84002740 <setvbuf+0x141>
84002720:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
84002727:	8b 45 d8             	mov    -0x28(%ebp),%eax
8400272a:	39 c6                	cmp    %eax,%esi
8400272c:	74 12                	je     84002740 <setvbuf+0x141>
8400272e:	8b 75 d8             	mov    -0x28(%ebp),%esi
84002731:	83 ec 0c             	sub    $0xc,%esp
84002734:	56                   	push   %esi
84002735:	e8 10 f2 ff ff       	call   8400194a <malloc>
8400273a:	83 c4 10             	add    $0x10,%esp
8400273d:	89 45 0c             	mov    %eax,0xc(%ebp)
84002740:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
84002744:	75 2e                	jne    84002774 <setvbuf+0x175>
84002746:	eb 01                	jmp    84002749 <setvbuf+0x14a>
84002748:	90                   	nop
84002749:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400274d:	83 c8 02             	or     $0x2,%eax
84002750:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002754:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8400275b:	8d 43 43             	lea    0x43(%ebx),%eax
8400275e:	89 03                	mov    %eax,(%ebx)
84002760:	8b 03                	mov    (%ebx),%eax
84002762:	89 43 10             	mov    %eax,0x10(%ebx)
84002765:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
8400276c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8400276f:	e9 8f 00 00 00       	jmp    84002803 <setvbuf+0x204>
84002774:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002778:	0c 80                	or     $0x80,%al
8400277a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8400277e:	8b 45 e0             	mov    -0x20(%ebp),%eax
84002781:	8b 40 38             	mov    0x38(%eax),%eax
84002784:	85 c0                	test   %eax,%eax
84002786:	75 0e                	jne    84002796 <setvbuf+0x197>
84002788:	83 ec 0c             	sub    $0xc,%esp
8400278b:	ff 75 e0             	push   -0x20(%ebp)
8400278e:	e8 4f ea ff ff       	call   840011e2 <__sinit>
84002793:	83 c4 10             	add    $0x10,%esp
84002796:	8b 45 d8             	mov    -0x28(%ebp),%eax
84002799:	39 c6                	cmp    %eax,%esi
8400279b:	74 0b                	je     840027a8 <setvbuf+0x1a9>
8400279d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840027a1:	80 cc 08             	or     $0x8,%ah
840027a4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840027a8:	83 ff 01             	cmp    $0x1,%edi
840027ab:	75 0b                	jne    840027b8 <setvbuf+0x1b9>
840027ad:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840027b1:	83 c8 01             	or     $0x1,%eax
840027b4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840027b8:	8b 45 0c             	mov    0xc(%ebp),%eax
840027bb:	89 03                	mov    %eax,(%ebx)
840027bd:	8b 03                	mov    (%ebx),%eax
840027bf:	89 43 10             	mov    %eax,0x10(%ebx)
840027c2:	89 f0                	mov    %esi,%eax
840027c4:	89 43 14             	mov    %eax,0x14(%ebx)
840027c7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840027cb:	98                   	cwtl   
840027cc:	83 e0 08             	and    $0x8,%eax
840027cf:	85 c0                	test   %eax,%eax
840027d1:	74 24                	je     840027f7 <setvbuf+0x1f8>
840027d3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840027d7:	98                   	cwtl   
840027d8:	83 e0 01             	and    $0x1,%eax
840027db:	85 c0                	test   %eax,%eax
840027dd:	74 11                	je     840027f0 <setvbuf+0x1f1>
840027df:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
840027e6:	8b 43 14             	mov    0x14(%ebx),%eax
840027e9:	f7 d8                	neg    %eax
840027eb:	89 43 18             	mov    %eax,0x18(%ebx)
840027ee:	eb 0e                	jmp    840027fe <setvbuf+0x1ff>
840027f0:	89 f0                	mov    %esi,%eax
840027f2:	89 43 08             	mov    %eax,0x8(%ebx)
840027f5:	eb 07                	jmp    840027fe <setvbuf+0x1ff>
840027f7:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
840027fe:	b8 00 00 00 00       	mov    $0x0,%eax
84002803:	8d 65 f4             	lea    -0xc(%ebp),%esp
84002806:	5b                   	pop    %ebx
84002807:	5e                   	pop    %esi
84002808:	5f                   	pop    %edi
84002809:	5d                   	pop    %ebp
8400280a:	c3                   	ret    

8400280b <__sread>:
8400280b:	55                   	push   %ebp
8400280c:	89 e5                	mov    %esp,%ebp
8400280e:	56                   	push   %esi
8400280f:	53                   	push   %ebx
84002810:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84002813:	8b 55 14             	mov    0x14(%ebp),%edx
84002816:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8400281a:	98                   	cwtl   
8400281b:	52                   	push   %edx
8400281c:	ff 75 10             	push   0x10(%ebp)
8400281f:	50                   	push   %eax
84002820:	ff 75 08             	push   0x8(%ebp)
84002823:	e8 a5 11 00 00       	call   840039cd <_read_r>
84002828:	83 c4 10             	add    $0x10,%esp
8400282b:	89 c6                	mov    %eax,%esi
8400282d:	85 f6                	test   %esi,%esi
8400282f:	78 0a                	js     8400283b <__sread+0x30>
84002831:	8b 43 50             	mov    0x50(%ebx),%eax
84002834:	01 f0                	add    %esi,%eax
84002836:	89 43 50             	mov    %eax,0x50(%ebx)
84002839:	eb 0b                	jmp    84002846 <__sread+0x3b>
8400283b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400283f:	80 e4 ef             	and    $0xef,%ah
84002842:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002846:	89 f0                	mov    %esi,%eax
84002848:	8d 65 f8             	lea    -0x8(%ebp),%esp
8400284b:	5b                   	pop    %ebx
8400284c:	5e                   	pop    %esi
8400284d:	5d                   	pop    %ebp
8400284e:	c3                   	ret    

8400284f <__seofread>:
8400284f:	55                   	push   %ebp
84002850:	89 e5                	mov    %esp,%ebp
84002852:	b8 00 00 00 00       	mov    $0x0,%eax
84002857:	5d                   	pop    %ebp
84002858:	c3                   	ret    

84002859 <__swrite>:
84002859:	55                   	push   %ebp
8400285a:	89 e5                	mov    %esp,%ebp
8400285c:	53                   	push   %ebx
8400285d:	83 ec 14             	sub    $0x14,%esp
84002860:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84002863:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002867:	98                   	cwtl   
84002868:	25 00 01 00 00       	and    $0x100,%eax
8400286d:	85 c0                	test   %eax,%eax
8400286f:	74 15                	je     84002886 <__swrite+0x2d>
84002871:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
84002875:	98                   	cwtl   
84002876:	6a 02                	push   $0x2
84002878:	6a 00                	push   $0x0
8400287a:	50                   	push   %eax
8400287b:	ff 75 08             	push   0x8(%ebp)
8400287e:	e8 35 04 00 00       	call   84002cb8 <_lseek_r>
84002883:	83 c4 10             	add    $0x10,%esp
84002886:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400288a:	80 e4 ef             	and    $0xef,%ah
8400288d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002891:	8b 55 14             	mov    0x14(%ebp),%edx
84002894:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
84002898:	98                   	cwtl   
84002899:	52                   	push   %edx
8400289a:	ff 75 10             	push   0x10(%ebp)
8400289d:	50                   	push   %eax
8400289e:	ff 75 08             	push   0x8(%ebp)
840028a1:	e8 7d 00 00 00       	call   84002923 <_write_r>
840028a6:	83 c4 10             	add    $0x10,%esp
840028a9:	89 45 f4             	mov    %eax,-0xc(%ebp)
840028ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
840028af:	8b 5d fc             	mov    -0x4(%ebp),%ebx
840028b2:	c9                   	leave  
840028b3:	c3                   	ret    

840028b4 <__sseek>:
840028b4:	55                   	push   %ebp
840028b5:	89 e5                	mov    %esp,%ebp
840028b7:	56                   	push   %esi
840028b8:	53                   	push   %ebx
840028b9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
840028bc:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
840028c0:	98                   	cwtl   
840028c1:	ff 75 14             	push   0x14(%ebp)
840028c4:	ff 75 10             	push   0x10(%ebp)
840028c7:	50                   	push   %eax
840028c8:	ff 75 08             	push   0x8(%ebp)
840028cb:	e8 e8 03 00 00       	call   84002cb8 <_lseek_r>
840028d0:	83 c4 10             	add    $0x10,%esp
840028d3:	89 c6                	mov    %eax,%esi
840028d5:	83 fe ff             	cmp    $0xffffffff,%esi
840028d8:	75 0d                	jne    840028e7 <__sseek+0x33>
840028da:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840028de:	80 e4 ef             	and    $0xef,%ah
840028e1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840028e5:	eb 0e                	jmp    840028f5 <__sseek+0x41>
840028e7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840028eb:	80 cc 10             	or     $0x10,%ah
840028ee:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840028f2:	89 73 50             	mov    %esi,0x50(%ebx)
840028f5:	89 f0                	mov    %esi,%eax
840028f7:	8d 65 f8             	lea    -0x8(%ebp),%esp
840028fa:	5b                   	pop    %ebx
840028fb:	5e                   	pop    %esi
840028fc:	5d                   	pop    %ebp
840028fd:	c3                   	ret    

840028fe <__sclose>:
840028fe:	55                   	push   %ebp
840028ff:	89 e5                	mov    %esp,%ebp
84002901:	83 ec 18             	sub    $0x18,%esp
84002904:	8b 45 0c             	mov    0xc(%ebp),%eax
84002907:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400290a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400290d:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
84002911:	98                   	cwtl   
84002912:	83 ec 08             	sub    $0x8,%esp
84002915:	50                   	push   %eax
84002916:	ff 75 08             	push   0x8(%ebp)
84002919:	e8 60 01 00 00       	call   84002a7e <_close_r>
8400291e:	83 c4 10             	add    $0x10,%esp
84002921:	c9                   	leave  
84002922:	c3                   	ret    

84002923 <_write_r>:
84002923:	55                   	push   %ebp
84002924:	89 e5                	mov    %esp,%ebp
84002926:	83 ec 18             	sub    $0x18,%esp
84002929:	c7 05 f0 63 00 84 00 	movl   $0x0,0x840063f0
84002930:	00 00 00 
84002933:	83 ec 04             	sub    $0x4,%esp
84002936:	ff 75 14             	push   0x14(%ebp)
84002939:	ff 75 10             	push   0x10(%ebp)
8400293c:	ff 75 0c             	push   0xc(%ebp)
8400293f:	e8 7a d8 ff ff       	call   840001be <write>
84002944:	83 c4 10             	add    $0x10,%esp
84002947:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400294a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8400294e:	75 14                	jne    84002964 <_write_r+0x41>
84002950:	a1 f0 63 00 84       	mov    0x840063f0,%eax
84002955:	85 c0                	test   %eax,%eax
84002957:	74 0b                	je     84002964 <_write_r+0x41>
84002959:	8b 15 f0 63 00 84    	mov    0x840063f0,%edx
8400295f:	8b 45 08             	mov    0x8(%ebp),%eax
84002962:	89 10                	mov    %edx,(%eax)
84002964:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002967:	c9                   	leave  
84002968:	c3                   	ret    

84002969 <__call_exitprocs>:
84002969:	55                   	push   %ebp
8400296a:	89 e5                	mov    %esp,%ebp
8400296c:	57                   	push   %edi
8400296d:	56                   	push   %esi
8400296e:	53                   	push   %ebx
8400296f:	83 ec 1c             	sub    $0x1c,%esp
84002972:	a1 18 56 00 84       	mov    0x84005618,%eax
84002977:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
8400297d:	a1 18 56 00 84       	mov    0x84005618,%eax
84002982:	05 48 01 00 00       	add    $0x148,%eax
84002987:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8400298a:	90                   	nop
8400298b:	85 db                	test   %ebx,%ebx
8400298d:	0f 84 e1 00 00 00    	je     84002a74 <__call_exitprocs+0x10b>
84002993:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
84002999:	8b 43 04             	mov    0x4(%ebx),%eax
8400299c:	8d 70 ff             	lea    -0x1(%eax),%esi
8400299f:	e9 c6 00 00 00       	jmp    84002a6a <__call_exitprocs+0x101>
840029a4:	b8 01 00 00 00       	mov    $0x1,%eax
840029a9:	89 f1                	mov    %esi,%ecx
840029ab:	d3 e0                	shl    %cl,%eax
840029ad:	89 45 e0             	mov    %eax,-0x20(%ebp)
840029b0:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
840029b4:	74 17                	je     840029cd <__call_exitprocs+0x64>
840029b6:	85 ff                	test   %edi,%edi
840029b8:	0f 84 a5 00 00 00    	je     84002a63 <__call_exitprocs+0xfa>
840029be:	8d 46 20             	lea    0x20(%esi),%eax
840029c1:	8b 04 87             	mov    (%edi,%eax,4),%eax
840029c4:	39 45 0c             	cmp    %eax,0xc(%ebp)
840029c7:	0f 85 96 00 00 00    	jne    84002a63 <__call_exitprocs+0xfa>
840029cd:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
840029d1:	89 45 dc             	mov    %eax,-0x24(%ebp)
840029d4:	8b 43 04             	mov    0x4(%ebx),%eax
840029d7:	83 e8 01             	sub    $0x1,%eax
840029da:	39 c6                	cmp    %eax,%esi
840029dc:	75 0b                	jne    840029e9 <__call_exitprocs+0x80>
840029de:	8b 43 04             	mov    0x4(%ebx),%eax
840029e1:	83 e8 01             	sub    $0x1,%eax
840029e4:	89 43 04             	mov    %eax,0x4(%ebx)
840029e7:	eb 08                	jmp    840029f1 <__call_exitprocs+0x88>
840029e9:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
840029f0:	00 
840029f1:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
840029f5:	74 6f                	je     84002a66 <__call_exitprocs+0xfd>
840029f7:	8b 43 04             	mov    0x4(%ebx),%eax
840029fa:	89 45 d8             	mov    %eax,-0x28(%ebp)
840029fd:	85 ff                	test   %edi,%edi
840029ff:	74 0f                	je     84002a10 <__call_exitprocs+0xa7>
84002a01:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
84002a07:	8b 45 e0             	mov    -0x20(%ebp),%eax
84002a0a:	21 d0                	and    %edx,%eax
84002a0c:	85 c0                	test   %eax,%eax
84002a0e:	75 07                	jne    84002a17 <__call_exitprocs+0xae>
84002a10:	8b 45 dc             	mov    -0x24(%ebp),%eax
84002a13:	ff d0                	call   *%eax
84002a15:	eb 32                	jmp    84002a49 <__call_exitprocs+0xe0>
84002a17:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
84002a1d:	8b 45 e0             	mov    -0x20(%ebp),%eax
84002a20:	21 d0                	and    %edx,%eax
84002a22:	85 c0                	test   %eax,%eax
84002a24:	75 14                	jne    84002a3a <__call_exitprocs+0xd1>
84002a26:	8b 04 b7             	mov    (%edi,%esi,4),%eax
84002a29:	83 ec 08             	sub    $0x8,%esp
84002a2c:	50                   	push   %eax
84002a2d:	ff 75 08             	push   0x8(%ebp)
84002a30:	8b 45 dc             	mov    -0x24(%ebp),%eax
84002a33:	ff d0                	call   *%eax
84002a35:	83 c4 10             	add    $0x10,%esp
84002a38:	eb 0f                	jmp    84002a49 <__call_exitprocs+0xe0>
84002a3a:	8b 04 b7             	mov    (%edi,%esi,4),%eax
84002a3d:	83 ec 0c             	sub    $0xc,%esp
84002a40:	50                   	push   %eax
84002a41:	8b 45 dc             	mov    -0x24(%ebp),%eax
84002a44:	ff d0                	call   *%eax
84002a46:	83 c4 10             	add    $0x10,%esp
84002a49:	8b 43 04             	mov    0x4(%ebx),%eax
84002a4c:	39 45 d8             	cmp    %eax,-0x28(%ebp)
84002a4f:	0f 85 1d ff ff ff    	jne    84002972 <__call_exitprocs+0x9>
84002a55:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84002a58:	8b 00                	mov    (%eax),%eax
84002a5a:	39 c3                	cmp    %eax,%ebx
84002a5c:	74 09                	je     84002a67 <__call_exitprocs+0xfe>
84002a5e:	e9 0f ff ff ff       	jmp    84002972 <__call_exitprocs+0x9>
84002a63:	90                   	nop
84002a64:	eb 01                	jmp    84002a67 <__call_exitprocs+0xfe>
84002a66:	90                   	nop
84002a67:	83 ee 01             	sub    $0x1,%esi
84002a6a:	85 f6                	test   %esi,%esi
84002a6c:	0f 89 32 ff ff ff    	jns    840029a4 <__call_exitprocs+0x3b>
84002a72:	eb 01                	jmp    84002a75 <__call_exitprocs+0x10c>
84002a74:	90                   	nop
84002a75:	90                   	nop
84002a76:	8d 65 f4             	lea    -0xc(%ebp),%esp
84002a79:	5b                   	pop    %ebx
84002a7a:	5e                   	pop    %esi
84002a7b:	5f                   	pop    %edi
84002a7c:	5d                   	pop    %ebp
84002a7d:	c3                   	ret    

84002a7e <_close_r>:
84002a7e:	55                   	push   %ebp
84002a7f:	89 e5                	mov    %esp,%ebp
84002a81:	83 ec 18             	sub    $0x18,%esp
84002a84:	c7 05 f0 63 00 84 00 	movl   $0x0,0x840063f0
84002a8b:	00 00 00 
84002a8e:	83 ec 0c             	sub    $0xc,%esp
84002a91:	ff 75 0c             	push   0xc(%ebp)
84002a94:	e8 52 d7 ff ff       	call   840001eb <close>
84002a99:	83 c4 10             	add    $0x10,%esp
84002a9c:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002a9f:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84002aa3:	75 14                	jne    84002ab9 <_close_r+0x3b>
84002aa5:	a1 f0 63 00 84       	mov    0x840063f0,%eax
84002aaa:	85 c0                	test   %eax,%eax
84002aac:	74 0b                	je     84002ab9 <_close_r+0x3b>
84002aae:	8b 15 f0 63 00 84    	mov    0x840063f0,%edx
84002ab4:	8b 45 08             	mov    0x8(%ebp),%eax
84002ab7:	89 10                	mov    %edx,(%eax)
84002ab9:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002abc:	c9                   	leave  
84002abd:	c3                   	ret    

84002abe <_fclose_r>:
84002abe:	55                   	push   %ebp
84002abf:	89 e5                	mov    %esp,%ebp
84002ac1:	53                   	push   %ebx
84002ac2:	83 ec 14             	sub    $0x14,%esp
84002ac5:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84002ac8:	85 db                	test   %ebx,%ebx
84002aca:	75 0a                	jne    84002ad6 <_fclose_r+0x18>
84002acc:	b8 00 00 00 00       	mov    $0x0,%eax
84002ad1:	e9 ea 00 00 00       	jmp    84002bc0 <_fclose_r+0x102>
84002ad6:	8b 45 08             	mov    0x8(%ebp),%eax
84002ad9:	89 45 f0             	mov    %eax,-0x10(%ebp)
84002adc:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
84002ae0:	74 18                	je     84002afa <_fclose_r+0x3c>
84002ae2:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002ae5:	8b 40 38             	mov    0x38(%eax),%eax
84002ae8:	85 c0                	test   %eax,%eax
84002aea:	75 0e                	jne    84002afa <_fclose_r+0x3c>
84002aec:	83 ec 0c             	sub    $0xc,%esp
84002aef:	ff 75 f0             	push   -0x10(%ebp)
84002af2:	e8 eb e6 ff ff       	call   840011e2 <__sinit>
84002af7:	83 c4 10             	add    $0x10,%esp
84002afa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002afe:	66 85 c0             	test   %ax,%ax
84002b01:	75 0a                	jne    84002b0d <_fclose_r+0x4f>
84002b03:	b8 00 00 00 00       	mov    $0x0,%eax
84002b08:	e9 b3 00 00 00       	jmp    84002bc0 <_fclose_r+0x102>
84002b0d:	83 ec 08             	sub    $0x8,%esp
84002b10:	53                   	push   %ebx
84002b11:	ff 75 08             	push   0x8(%ebp)
84002b14:	e8 1d e1 ff ff       	call   84000c36 <__sflush_r>
84002b19:	83 c4 10             	add    $0x10,%esp
84002b1c:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002b1f:	8b 43 2c             	mov    0x2c(%ebx),%eax
84002b22:	85 c0                	test   %eax,%eax
84002b24:	74 1d                	je     84002b43 <_fclose_r+0x85>
84002b26:	8b 43 2c             	mov    0x2c(%ebx),%eax
84002b29:	8b 53 1c             	mov    0x1c(%ebx),%edx
84002b2c:	83 ec 08             	sub    $0x8,%esp
84002b2f:	52                   	push   %edx
84002b30:	ff 75 08             	push   0x8(%ebp)
84002b33:	ff d0                	call   *%eax
84002b35:	83 c4 10             	add    $0x10,%esp
84002b38:	85 c0                	test   %eax,%eax
84002b3a:	79 07                	jns    84002b43 <_fclose_r+0x85>
84002b3c:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
84002b43:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002b47:	98                   	cwtl   
84002b48:	25 80 00 00 00       	and    $0x80,%eax
84002b4d:	85 c0                	test   %eax,%eax
84002b4f:	74 12                	je     84002b63 <_fclose_r+0xa5>
84002b51:	8b 43 10             	mov    0x10(%ebx),%eax
84002b54:	83 ec 08             	sub    $0x8,%esp
84002b57:	50                   	push   %eax
84002b58:	ff 75 08             	push   0x8(%ebp)
84002b5b:	e8 8f e7 ff ff       	call   840012ef <_free_r>
84002b60:	83 c4 10             	add    $0x10,%esp
84002b63:	8b 43 30             	mov    0x30(%ebx),%eax
84002b66:	85 c0                	test   %eax,%eax
84002b68:	74 23                	je     84002b8d <_fclose_r+0xcf>
84002b6a:	8b 53 30             	mov    0x30(%ebx),%edx
84002b6d:	8d 43 40             	lea    0x40(%ebx),%eax
84002b70:	39 c2                	cmp    %eax,%edx
84002b72:	74 12                	je     84002b86 <_fclose_r+0xc8>
84002b74:	8b 43 30             	mov    0x30(%ebx),%eax
84002b77:	83 ec 08             	sub    $0x8,%esp
84002b7a:	50                   	push   %eax
84002b7b:	ff 75 08             	push   0x8(%ebp)
84002b7e:	e8 6c e7 ff ff       	call   840012ef <_free_r>
84002b83:	83 c4 10             	add    $0x10,%esp
84002b86:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
84002b8d:	8b 43 44             	mov    0x44(%ebx),%eax
84002b90:	85 c0                	test   %eax,%eax
84002b92:	74 19                	je     84002bad <_fclose_r+0xef>
84002b94:	8b 43 44             	mov    0x44(%ebx),%eax
84002b97:	83 ec 08             	sub    $0x8,%esp
84002b9a:	50                   	push   %eax
84002b9b:	ff 75 08             	push   0x8(%ebp)
84002b9e:	e8 4c e7 ff ff       	call   840012ef <_free_r>
84002ba3:	83 c4 10             	add    $0x10,%esp
84002ba6:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
84002bad:	e8 c9 e6 ff ff       	call   8400127b <__sfp_lock_acquire>
84002bb2:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
84002bb8:	e8 c4 e6 ff ff       	call   84001281 <__sfp_lock_release>
84002bbd:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002bc0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84002bc3:	c9                   	leave  
84002bc4:	c3                   	ret    

84002bc5 <fclose>:
84002bc5:	55                   	push   %ebp
84002bc6:	89 e5                	mov    %esp,%ebp
84002bc8:	83 ec 08             	sub    $0x8,%esp
84002bcb:	8b 55 08             	mov    0x8(%ebp),%edx
84002bce:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84002bd3:	83 ec 08             	sub    $0x8,%esp
84002bd6:	52                   	push   %edx
84002bd7:	50                   	push   %eax
84002bd8:	e8 e1 fe ff ff       	call   84002abe <_fclose_r>
84002bdd:	83 c4 10             	add    $0x10,%esp
84002be0:	c9                   	leave  
84002be1:	c3                   	ret    

84002be2 <_getc_r>:
84002be2:	55                   	push   %ebp
84002be3:	89 e5                	mov    %esp,%ebp
84002be5:	53                   	push   %ebx
84002be6:	83 ec 14             	sub    $0x14,%esp
84002be9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84002bec:	8b 45 08             	mov    0x8(%ebp),%eax
84002bef:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002bf2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84002bf6:	74 18                	je     84002c10 <_getc_r+0x2e>
84002bf8:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002bfb:	8b 40 38             	mov    0x38(%eax),%eax
84002bfe:	85 c0                	test   %eax,%eax
84002c00:	75 0e                	jne    84002c10 <_getc_r+0x2e>
84002c02:	83 ec 0c             	sub    $0xc,%esp
84002c05:	ff 75 f4             	push   -0xc(%ebp)
84002c08:	e8 d5 e5 ff ff       	call   840011e2 <__sinit>
84002c0d:	83 c4 10             	add    $0x10,%esp
84002c10:	8b 43 04             	mov    0x4(%ebx),%eax
84002c13:	83 e8 01             	sub    $0x1,%eax
84002c16:	89 43 04             	mov    %eax,0x4(%ebx)
84002c19:	8b 43 04             	mov    0x4(%ebx),%eax
84002c1c:	85 c0                	test   %eax,%eax
84002c1e:	79 11                	jns    84002c31 <_getc_r+0x4f>
84002c20:	83 ec 08             	sub    $0x8,%esp
84002c23:	53                   	push   %ebx
84002c24:	ff 75 08             	push   0x8(%ebp)
84002c27:	e8 7e 0f 00 00       	call   84003baa <__srget_r>
84002c2c:	83 c4 10             	add    $0x10,%esp
84002c2f:	eb 0d                	jmp    84002c3e <_getc_r+0x5c>
84002c31:	8b 03                	mov    (%ebx),%eax
84002c33:	8d 50 01             	lea    0x1(%eax),%edx
84002c36:	89 13                	mov    %edx,(%ebx)
84002c38:	0f b6 00             	movzbl (%eax),%eax
84002c3b:	0f b6 c0             	movzbl %al,%eax
84002c3e:	89 45 f0             	mov    %eax,-0x10(%ebp)
84002c41:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002c44:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84002c47:	c9                   	leave  
84002c48:	c3                   	ret    

84002c49 <getc>:
84002c49:	55                   	push   %ebp
84002c4a:	89 e5                	mov    %esp,%ebp
84002c4c:	53                   	push   %ebx
84002c4d:	83 ec 14             	sub    $0x14,%esp
84002c50:	8b 5d 08             	mov    0x8(%ebp),%ebx
84002c53:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84002c58:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002c5b:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002c5e:	89 45 f0             	mov    %eax,-0x10(%ebp)
84002c61:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
84002c65:	74 18                	je     84002c7f <getc+0x36>
84002c67:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002c6a:	8b 40 38             	mov    0x38(%eax),%eax
84002c6d:	85 c0                	test   %eax,%eax
84002c6f:	75 0e                	jne    84002c7f <getc+0x36>
84002c71:	83 ec 0c             	sub    $0xc,%esp
84002c74:	ff 75 f0             	push   -0x10(%ebp)
84002c77:	e8 66 e5 ff ff       	call   840011e2 <__sinit>
84002c7c:	83 c4 10             	add    $0x10,%esp
84002c7f:	8b 43 04             	mov    0x4(%ebx),%eax
84002c82:	83 e8 01             	sub    $0x1,%eax
84002c85:	89 43 04             	mov    %eax,0x4(%ebx)
84002c88:	8b 43 04             	mov    0x4(%ebx),%eax
84002c8b:	85 c0                	test   %eax,%eax
84002c8d:	79 11                	jns    84002ca0 <getc+0x57>
84002c8f:	83 ec 08             	sub    $0x8,%esp
84002c92:	53                   	push   %ebx
84002c93:	ff 75 f4             	push   -0xc(%ebp)
84002c96:	e8 0f 0f 00 00       	call   84003baa <__srget_r>
84002c9b:	83 c4 10             	add    $0x10,%esp
84002c9e:	eb 0d                	jmp    84002cad <getc+0x64>
84002ca0:	8b 03                	mov    (%ebx),%eax
84002ca2:	8d 50 01             	lea    0x1(%eax),%edx
84002ca5:	89 13                	mov    %edx,(%ebx)
84002ca7:	0f b6 00             	movzbl (%eax),%eax
84002caa:	0f b6 c0             	movzbl %al,%eax
84002cad:	89 45 ec             	mov    %eax,-0x14(%ebp)
84002cb0:	8b 45 ec             	mov    -0x14(%ebp),%eax
84002cb3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84002cb6:	c9                   	leave  
84002cb7:	c3                   	ret    

84002cb8 <_lseek_r>:
84002cb8:	55                   	push   %ebp
84002cb9:	89 e5                	mov    %esp,%ebp
84002cbb:	83 ec 18             	sub    $0x18,%esp
84002cbe:	c7 05 f0 63 00 84 00 	movl   $0x0,0x840063f0
84002cc5:	00 00 00 
84002cc8:	83 ec 04             	sub    $0x4,%esp
84002ccb:	ff 75 14             	push   0x14(%ebp)
84002cce:	ff 75 10             	push   0x10(%ebp)
84002cd1:	ff 75 0c             	push   0xc(%ebp)
84002cd4:	e8 33 d5 ff ff       	call   8400020c <lseek>
84002cd9:	83 c4 10             	add    $0x10,%esp
84002cdc:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002cdf:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84002ce3:	75 14                	jne    84002cf9 <_lseek_r+0x41>
84002ce5:	a1 f0 63 00 84       	mov    0x840063f0,%eax
84002cea:	85 c0                	test   %eax,%eax
84002cec:	74 0b                	je     84002cf9 <_lseek_r+0x41>
84002cee:	8b 15 f0 63 00 84    	mov    0x840063f0,%edx
84002cf4:	8b 45 08             	mov    0x8(%ebp),%eax
84002cf7:	89 10                	mov    %edx,(%eax)
84002cf9:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002cfc:	c9                   	leave  
84002cfd:	c3                   	ret    

84002cfe <__smakebuf_r>:
84002cfe:	55                   	push   %ebp
84002cff:	89 e5                	mov    %esp,%ebp
84002d01:	56                   	push   %esi
84002d02:	53                   	push   %ebx
84002d03:	83 ec 10             	sub    $0x10,%esp
84002d06:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84002d09:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002d0d:	98                   	cwtl   
84002d0e:	83 e0 02             	and    $0x2,%eax
84002d11:	85 c0                	test   %eax,%eax
84002d13:	74 16                	je     84002d2b <__smakebuf_r+0x2d>
84002d15:	8d 43 43             	lea    0x43(%ebx),%eax
84002d18:	89 03                	mov    %eax,(%ebx)
84002d1a:	8b 03                	mov    (%ebx),%eax
84002d1c:	89 43 10             	mov    %eax,0x10(%ebx)
84002d1f:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
84002d26:	e9 b9 00 00 00       	jmp    84002de4 <__smakebuf_r+0xe6>
84002d2b:	8d 45 ec             	lea    -0x14(%ebp),%eax
84002d2e:	50                   	push   %eax
84002d2f:	8d 45 f0             	lea    -0x10(%ebp),%eax
84002d32:	50                   	push   %eax
84002d33:	53                   	push   %ebx
84002d34:	ff 75 08             	push   0x8(%ebp)
84002d37:	e8 af 00 00 00       	call   84002deb <__swhatbuf_r>
84002d3c:	83 c4 10             	add    $0x10,%esp
84002d3f:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002d42:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002d45:	83 ec 08             	sub    $0x8,%esp
84002d48:	50                   	push   %eax
84002d49:	ff 75 08             	push   0x8(%ebp)
84002d4c:	e8 c5 ee ff ff       	call   84001c16 <_malloc_r>
84002d51:	83 c4 10             	add    $0x10,%esp
84002d54:	89 c6                	mov    %eax,%esi
84002d56:	85 f6                	test   %esi,%esi
84002d58:	75 2f                	jne    84002d89 <__smakebuf_r+0x8b>
84002d5a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002d5e:	98                   	cwtl   
84002d5f:	25 00 02 00 00       	and    $0x200,%eax
84002d64:	85 c0                	test   %eax,%eax
84002d66:	75 7c                	jne    84002de4 <__smakebuf_r+0xe6>
84002d68:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002d6c:	83 e0 fc             	and    $0xfffffffc,%eax
84002d6f:	83 c8 02             	or     $0x2,%eax
84002d72:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002d76:	8d 43 43             	lea    0x43(%ebx),%eax
84002d79:	89 03                	mov    %eax,(%ebx)
84002d7b:	8b 03                	mov    (%ebx),%eax
84002d7d:	89 43 10             	mov    %eax,0x10(%ebx)
84002d80:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
84002d87:	eb 5b                	jmp    84002de4 <__smakebuf_r+0xe6>
84002d89:	8b 45 08             	mov    0x8(%ebp),%eax
84002d8c:	c7 40 3c a7 11 00 84 	movl   $0x840011a7,0x3c(%eax)
84002d93:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002d97:	0c 80                	or     $0x80,%al
84002d99:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002d9d:	89 33                	mov    %esi,(%ebx)
84002d9f:	8b 03                	mov    (%ebx),%eax
84002da1:	89 43 10             	mov    %eax,0x10(%ebx)
84002da4:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002da7:	89 43 14             	mov    %eax,0x14(%ebx)
84002daa:	8b 45 ec             	mov    -0x14(%ebp),%eax
84002dad:	85 c0                	test   %eax,%eax
84002daf:	74 26                	je     84002dd7 <__smakebuf_r+0xd9>
84002db1:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
84002db5:	98                   	cwtl   
84002db6:	83 ec 08             	sub    $0x8,%esp
84002db9:	50                   	push   %eax
84002dba:	ff 75 08             	push   0x8(%ebp)
84002dbd:	e8 8c 17 00 00       	call   8400454e <_isatty_r>
84002dc2:	83 c4 10             	add    $0x10,%esp
84002dc5:	85 c0                	test   %eax,%eax
84002dc7:	74 0e                	je     84002dd7 <__smakebuf_r+0xd9>
84002dc9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002dcd:	83 e0 fc             	and    $0xfffffffc,%eax
84002dd0:	83 c8 01             	or     $0x1,%eax
84002dd3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002dd7:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
84002ddb:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002dde:	09 d0                	or     %edx,%eax
84002de0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002de4:	8d 65 f8             	lea    -0x8(%ebp),%esp
84002de7:	5b                   	pop    %ebx
84002de8:	5e                   	pop    %esi
84002de9:	5d                   	pop    %ebp
84002dea:	c3                   	ret    

84002deb <__swhatbuf_r>:
84002deb:	55                   	push   %ebp
84002dec:	89 e5                	mov    %esp,%ebp
84002dee:	83 ec 58             	sub    $0x58,%esp
84002df1:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
84002df8:	8b 45 0c             	mov    0xc(%ebp),%eax
84002dfb:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
84002dff:	66 85 c0             	test   %ax,%ax
84002e02:	78 1f                	js     84002e23 <__swhatbuf_r+0x38>
84002e04:	8b 45 0c             	mov    0xc(%ebp),%eax
84002e07:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
84002e0b:	98                   	cwtl   
84002e0c:	83 ec 04             	sub    $0x4,%esp
84002e0f:	8d 55 ac             	lea    -0x54(%ebp),%edx
84002e12:	52                   	push   %edx
84002e13:	50                   	push   %eax
84002e14:	ff 75 08             	push   0x8(%ebp)
84002e17:	e8 51 12 00 00       	call   8400406d <_fstat_r>
84002e1c:	83 c4 10             	add    $0x10,%esp
84002e1f:	85 c0                	test   %eax,%eax
84002e21:	79 35                	jns    84002e58 <__swhatbuf_r+0x6d>
84002e23:	8b 45 14             	mov    0x14(%ebp),%eax
84002e26:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
84002e2c:	8b 45 0c             	mov    0xc(%ebp),%eax
84002e2f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
84002e33:	98                   	cwtl   
84002e34:	25 80 00 00 00       	and    $0x80,%eax
84002e39:	85 c0                	test   %eax,%eax
84002e3b:	74 0b                	je     84002e48 <__swhatbuf_r+0x5d>
84002e3d:	8b 45 10             	mov    0x10(%ebp),%eax
84002e40:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
84002e46:	eb 09                	jmp    84002e51 <__swhatbuf_r+0x66>
84002e48:	8b 45 10             	mov    0x10(%ebp),%eax
84002e4b:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
84002e51:	b8 00 00 00 00       	mov    $0x0,%eax
84002e56:	eb 24                	jmp    84002e7c <__swhatbuf_r+0x91>
84002e58:	8b 45 b0             	mov    -0x50(%ebp),%eax
84002e5b:	25 00 f0 00 00       	and    $0xf000,%eax
84002e60:	3d 00 20 00 00       	cmp    $0x2000,%eax
84002e65:	0f 94 c0             	sete   %al
84002e68:	0f b6 d0             	movzbl %al,%edx
84002e6b:	8b 45 14             	mov    0x14(%ebp),%eax
84002e6e:	89 10                	mov    %edx,(%eax)
84002e70:	8b 45 10             	mov    0x10(%ebp),%eax
84002e73:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
84002e79:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002e7c:	c9                   	leave  
84002e7d:	c3                   	ret    

84002e7e <__sprint_r>:
84002e7e:	55                   	push   %ebp
84002e7f:	89 e5                	mov    %esp,%ebp
84002e81:	56                   	push   %esi
84002e82:	53                   	push   %ebx
84002e83:	83 ec 10             	sub    $0x10,%esp
84002e86:	8b 5d 10             	mov    0x10(%ebp),%ebx
84002e89:	be 00 00 00 00       	mov    $0x0,%esi
84002e8e:	8b 43 08             	mov    0x8(%ebx),%eax
84002e91:	85 c0                	test   %eax,%eax
84002e93:	75 11                	jne    84002ea6 <__sprint_r+0x28>
84002e95:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
84002e9c:	b8 00 00 00 00       	mov    $0x0,%eax
84002ea1:	e9 ad 00 00 00       	jmp    84002f53 <__sprint_r+0xd5>
84002ea6:	8b 45 0c             	mov    0xc(%ebp),%eax
84002ea9:	8b 40 64             	mov    0x64(%eax),%eax
84002eac:	25 00 20 00 00       	and    $0x2000,%eax
84002eb1:	85 c0                	test   %eax,%eax
84002eb3:	74 7a                	je     84002f2f <__sprint_r+0xb1>
84002eb5:	8b 03                	mov    (%ebx),%eax
84002eb7:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002eba:	eb 6a                	jmp    84002f26 <__sprint_r+0xa8>
84002ebc:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002ebf:	8b 00                	mov    (%eax),%eax
84002ec1:	89 45 ec             	mov    %eax,-0x14(%ebp)
84002ec4:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002ec7:	8b 40 04             	mov    0x4(%eax),%eax
84002eca:	c1 e8 02             	shr    $0x2,%eax
84002ecd:	89 45 e8             	mov    %eax,-0x18(%ebp)
84002ed0:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
84002ed7:	eb 33                	jmp    84002f0c <__sprint_r+0x8e>
84002ed9:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002edc:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
84002ee3:	8b 45 ec             	mov    -0x14(%ebp),%eax
84002ee6:	01 d0                	add    %edx,%eax
84002ee8:	8b 00                	mov    (%eax),%eax
84002eea:	83 ec 04             	sub    $0x4,%esp
84002eed:	ff 75 0c             	push   0xc(%ebp)
84002ef0:	50                   	push   %eax
84002ef1:	ff 75 08             	push   0x8(%ebp)
84002ef4:	e8 d5 10 00 00       	call   84003fce <_fputwc_r>
84002ef9:	83 c4 10             	add    $0x10,%esp
84002efc:	83 f8 ff             	cmp    $0xffffffff,%eax
84002eff:	75 07                	jne    84002f08 <__sprint_r+0x8a>
84002f01:	be ff ff ff ff       	mov    $0xffffffff,%esi
84002f06:	eb 3b                	jmp    84002f43 <__sprint_r+0xc5>
84002f08:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
84002f0c:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002f0f:	3b 45 e8             	cmp    -0x18(%ebp),%eax
84002f12:	7c c5                	jl     84002ed9 <__sprint_r+0x5b>
84002f14:	8b 43 08             	mov    0x8(%ebx),%eax
84002f17:	8b 55 e8             	mov    -0x18(%ebp),%edx
84002f1a:	c1 e2 02             	shl    $0x2,%edx
84002f1d:	29 d0                	sub    %edx,%eax
84002f1f:	89 43 08             	mov    %eax,0x8(%ebx)
84002f22:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
84002f26:	8b 43 08             	mov    0x8(%ebx),%eax
84002f29:	85 c0                	test   %eax,%eax
84002f2b:	75 8f                	jne    84002ebc <__sprint_r+0x3e>
84002f2d:	eb 14                	jmp    84002f43 <__sprint_r+0xc5>
84002f2f:	83 ec 04             	sub    $0x4,%esp
84002f32:	53                   	push   %ebx
84002f33:	ff 75 0c             	push   0xc(%ebp)
84002f36:	ff 75 08             	push   0x8(%ebp)
84002f39:	e8 72 11 00 00       	call   840040b0 <__sfvwrite_r>
84002f3e:	83 c4 10             	add    $0x10,%esp
84002f41:	89 c6                	mov    %eax,%esi
84002f43:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
84002f4a:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
84002f51:	89 f0                	mov    %esi,%eax
84002f53:	8d 65 f8             	lea    -0x8(%ebp),%esp
84002f56:	5b                   	pop    %ebx
84002f57:	5e                   	pop    %esi
84002f58:	5d                   	pop    %ebp
84002f59:	c3                   	ret    

84002f5a <__sfputc_r>:
84002f5a:	55                   	push   %ebp
84002f5b:	89 e5                	mov    %esp,%ebp
84002f5d:	83 ec 08             	sub    $0x8,%esp
84002f60:	8b 45 10             	mov    0x10(%ebp),%eax
84002f63:	8b 40 08             	mov    0x8(%eax),%eax
84002f66:	8d 50 ff             	lea    -0x1(%eax),%edx
84002f69:	8b 45 10             	mov    0x10(%ebp),%eax
84002f6c:	89 50 08             	mov    %edx,0x8(%eax)
84002f6f:	8b 45 10             	mov    0x10(%ebp),%eax
84002f72:	8b 40 08             	mov    0x8(%eax),%eax
84002f75:	85 c0                	test   %eax,%eax
84002f77:	79 17                	jns    84002f90 <__sfputc_r+0x36>
84002f79:	8b 45 10             	mov    0x10(%ebp),%eax
84002f7c:	8b 50 08             	mov    0x8(%eax),%edx
84002f7f:	8b 45 10             	mov    0x10(%ebp),%eax
84002f82:	8b 40 18             	mov    0x18(%eax),%eax
84002f85:	39 c2                	cmp    %eax,%edx
84002f87:	7c 21                	jl     84002faa <__sfputc_r+0x50>
84002f89:	8b 45 0c             	mov    0xc(%ebp),%eax
84002f8c:	3c 0a                	cmp    $0xa,%al
84002f8e:	74 1a                	je     84002faa <__sfputc_r+0x50>
84002f90:	8b 45 10             	mov    0x10(%ebp),%eax
84002f93:	8b 00                	mov    (%eax),%eax
84002f95:	8d 48 01             	lea    0x1(%eax),%ecx
84002f98:	8b 55 10             	mov    0x10(%ebp),%edx
84002f9b:	89 0a                	mov    %ecx,(%edx)
84002f9d:	8b 55 0c             	mov    0xc(%ebp),%edx
84002fa0:	88 10                	mov    %dl,(%eax)
84002fa2:	0f b6 00             	movzbl (%eax),%eax
84002fa5:	0f b6 c0             	movzbl %al,%eax
84002fa8:	eb 14                	jmp    84002fbe <__sfputc_r+0x64>
84002faa:	83 ec 04             	sub    $0x4,%esp
84002fad:	ff 75 10             	push   0x10(%ebp)
84002fb0:	ff 75 0c             	push   0xc(%ebp)
84002fb3:	ff 75 08             	push   0x8(%ebp)
84002fb6:	e8 6f 0c 00 00       	call   84003c2a <__swbuf_r>
84002fbb:	83 c4 10             	add    $0x10,%esp
84002fbe:	c9                   	leave  
84002fbf:	c3                   	ret    

84002fc0 <__sfputs_r>:
84002fc0:	55                   	push   %ebp
84002fc1:	89 e5                	mov    %esp,%ebp
84002fc3:	53                   	push   %ebx
84002fc4:	83 ec 14             	sub    $0x14,%esp
84002fc7:	8b 45 0c             	mov    0xc(%ebp),%eax
84002fca:	8b 40 64             	mov    0x64(%eax),%eax
84002fcd:	25 00 20 00 00       	and    $0x2000,%eax
84002fd2:	85 c0                	test   %eax,%eax
84002fd4:	74 4c                	je     84003022 <__sfputs_r+0x62>
84002fd6:	8b 45 10             	mov    0x10(%ebp),%eax
84002fd9:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002fdc:	bb 00 00 00 00       	mov    $0x0,%ebx
84002fe1:	eb 31                	jmp    84003014 <__sfputs_r+0x54>
84002fe3:	89 d8                	mov    %ebx,%eax
84002fe5:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
84002fec:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002fef:	01 d0                	add    %edx,%eax
84002ff1:	8b 00                	mov    (%eax),%eax
84002ff3:	83 ec 04             	sub    $0x4,%esp
84002ff6:	ff 75 0c             	push   0xc(%ebp)
84002ff9:	50                   	push   %eax
84002ffa:	ff 75 08             	push   0x8(%ebp)
84002ffd:	e8 cc 0f 00 00       	call   84003fce <_fputwc_r>
84003002:	83 c4 10             	add    $0x10,%esp
84003005:	83 f8 ff             	cmp    $0xffffffff,%eax
84003008:	75 07                	jne    84003011 <__sfputs_r+0x51>
8400300a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400300f:	eb 52                	jmp    84003063 <__sfputs_r+0xa3>
84003011:	83 c3 01             	add    $0x1,%ebx
84003014:	8b 45 14             	mov    0x14(%ebp),%eax
84003017:	c1 e8 02             	shr    $0x2,%eax
8400301a:	89 da                	mov    %ebx,%edx
8400301c:	39 d0                	cmp    %edx,%eax
8400301e:	77 c3                	ja     84002fe3 <__sfputs_r+0x23>
84003020:	eb 3c                	jmp    8400305e <__sfputs_r+0x9e>
84003022:	bb 00 00 00 00       	mov    $0x0,%ebx
84003027:	eb 2e                	jmp    84003057 <__sfputs_r+0x97>
84003029:	89 da                	mov    %ebx,%edx
8400302b:	8b 45 10             	mov    0x10(%ebp),%eax
8400302e:	01 d0                	add    %edx,%eax
84003030:	0f b6 00             	movzbl (%eax),%eax
84003033:	0f be c0             	movsbl %al,%eax
84003036:	83 ec 04             	sub    $0x4,%esp
84003039:	ff 75 0c             	push   0xc(%ebp)
8400303c:	50                   	push   %eax
8400303d:	ff 75 08             	push   0x8(%ebp)
84003040:	e8 15 ff ff ff       	call   84002f5a <__sfputc_r>
84003045:	83 c4 10             	add    $0x10,%esp
84003048:	83 f8 ff             	cmp    $0xffffffff,%eax
8400304b:	75 07                	jne    84003054 <__sfputs_r+0x94>
8400304d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003052:	eb 0f                	jmp    84003063 <__sfputs_r+0xa3>
84003054:	83 c3 01             	add    $0x1,%ebx
84003057:	89 d8                	mov    %ebx,%eax
84003059:	39 45 14             	cmp    %eax,0x14(%ebp)
8400305c:	77 cb                	ja     84003029 <__sfputs_r+0x69>
8400305e:	b8 00 00 00 00       	mov    $0x0,%eax
84003063:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84003066:	c9                   	leave  
84003067:	c3                   	ret    

84003068 <vfiprintf>:
84003068:	55                   	push   %ebp
84003069:	89 e5                	mov    %esp,%ebp
8400306b:	83 ec 18             	sub    $0x18,%esp
8400306e:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84003073:	ff 75 10             	push   0x10(%ebp)
84003076:	ff 75 0c             	push   0xc(%ebp)
84003079:	ff 75 08             	push   0x8(%ebp)
8400307c:	50                   	push   %eax
8400307d:	e8 0b 00 00 00       	call   8400308d <_vfiprintf_r>
84003082:	83 c4 10             	add    $0x10,%esp
84003085:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003088:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400308b:	c9                   	leave  
8400308c:	c3                   	ret    

8400308d <_vfiprintf_r>:
8400308d:	55                   	push   %ebp
8400308e:	89 e5                	mov    %esp,%ebp
84003090:	57                   	push   %edi
84003091:	56                   	push   %esi
84003092:	53                   	push   %ebx
84003093:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
84003099:	c7 45 e4 c0 2f 00 84 	movl   $0x84002fc0,-0x1c(%ebp)
840030a0:	8b 45 08             	mov    0x8(%ebp),%eax
840030a3:	89 45 e0             	mov    %eax,-0x20(%ebp)
840030a6:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
840030aa:	74 18                	je     840030c4 <_vfiprintf_r+0x37>
840030ac:	8b 45 e0             	mov    -0x20(%ebp),%eax
840030af:	8b 40 38             	mov    0x38(%eax),%eax
840030b2:	85 c0                	test   %eax,%eax
840030b4:	75 0e                	jne    840030c4 <_vfiprintf_r+0x37>
840030b6:	83 ec 0c             	sub    $0xc,%esp
840030b9:	ff 75 e0             	push   -0x20(%ebp)
840030bc:	e8 21 e1 ff ff       	call   840011e2 <__sinit>
840030c1:	83 c4 10             	add    $0x10,%esp
840030c4:	8b 45 0c             	mov    0xc(%ebp),%eax
840030c7:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
840030cb:	98                   	cwtl   
840030cc:	83 e0 08             	and    $0x8,%eax
840030cf:	85 c0                	test   %eax,%eax
840030d1:	74 0a                	je     840030dd <_vfiprintf_r+0x50>
840030d3:	8b 45 0c             	mov    0xc(%ebp),%eax
840030d6:	8b 40 10             	mov    0x10(%eax),%eax
840030d9:	85 c0                	test   %eax,%eax
840030db:	75 1f                	jne    840030fc <_vfiprintf_r+0x6f>
840030dd:	83 ec 08             	sub    $0x8,%esp
840030e0:	ff 75 0c             	push   0xc(%ebp)
840030e3:	ff 75 08             	push   0x8(%ebp)
840030e6:	e8 72 0c 00 00       	call   84003d5d <__swsetup_r>
840030eb:	83 c4 10             	add    $0x10,%esp
840030ee:	85 c0                	test   %eax,%eax
840030f0:	74 0a                	je     840030fc <_vfiprintf_r+0x6f>
840030f2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
840030f7:	e9 df 02 00 00       	jmp    840033db <_vfiprintf_r+0x34e>
840030fc:	8b 5d 10             	mov    0x10(%ebp),%ebx
840030ff:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
84003106:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
8400310a:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
8400310e:	8b 45 14             	mov    0x14(%ebp),%eax
84003111:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
84003117:	89 de                	mov    %ebx,%esi
84003119:	eb 03                	jmp    8400311e <_vfiprintf_r+0x91>
8400311b:	83 c3 01             	add    $0x1,%ebx
8400311e:	0f b6 03             	movzbl (%ebx),%eax
84003121:	84 c0                	test   %al,%al
84003123:	74 07                	je     8400312c <_vfiprintf_r+0x9f>
84003125:	0f b6 03             	movzbl (%ebx),%eax
84003128:	3c 25                	cmp    $0x25,%al
8400312a:	75 ef                	jne    8400311b <_vfiprintf_r+0x8e>
8400312c:	89 d8                	mov    %ebx,%eax
8400312e:	29 f0                	sub    %esi,%eax
84003130:	85 c0                	test   %eax,%eax
84003132:	74 2b                	je     8400315f <_vfiprintf_r+0xd2>
84003134:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
8400313a:	50                   	push   %eax
8400313b:	56                   	push   %esi
8400313c:	ff 75 0c             	push   0xc(%ebp)
8400313f:	ff 75 08             	push   0x8(%ebp)
84003142:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84003145:	ff d0                	call   *%eax
84003147:	83 c4 10             	add    $0x10,%esp
8400314a:	83 f8 ff             	cmp    $0xffffffff,%eax
8400314d:	0f 84 68 02 00 00    	je     840033bb <_vfiprintf_r+0x32e>
84003153:	8b 45 94             	mov    -0x6c(%ebp),%eax
84003156:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
8400315c:	89 45 94             	mov    %eax,-0x6c(%ebp)
8400315f:	0f b6 03             	movzbl (%ebx),%eax
84003162:	84 c0                	test   %al,%al
84003164:	0f 84 54 02 00 00    	je     840033be <_vfiprintf_r+0x331>
8400316a:	83 c3 01             	add    $0x1,%ebx
8400316d:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
84003174:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
8400317b:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
84003182:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
84003189:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
8400318d:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
84003194:	c7 45 dc 1c 56 00 84 	movl   $0x8400561c,-0x24(%ebp)
8400319b:	eb 1b                	jmp    840031b8 <_vfiprintf_r+0x12b>
8400319d:	8b 55 80             	mov    -0x80(%ebp),%edx
840031a0:	89 f0                	mov    %esi,%eax
840031a2:	2b 45 dc             	sub    -0x24(%ebp),%eax
840031a5:	be 01 00 00 00       	mov    $0x1,%esi
840031aa:	89 c1                	mov    %eax,%ecx
840031ac:	d3 e6                	shl    %cl,%esi
840031ae:	89 f0                	mov    %esi,%eax
840031b0:	09 d0                	or     %edx,%eax
840031b2:	89 45 80             	mov    %eax,-0x80(%ebp)
840031b5:	83 c3 01             	add    $0x1,%ebx
840031b8:	0f b6 03             	movzbl (%ebx),%eax
840031bb:	0f be c0             	movsbl %al,%eax
840031be:	83 ec 04             	sub    $0x4,%esp
840031c1:	6a 05                	push   $0x5
840031c3:	50                   	push   %eax
840031c4:	ff 75 dc             	push   -0x24(%ebp)
840031c7:	e8 04 15 00 00       	call   840046d0 <memchr>
840031cc:	83 c4 10             	add    $0x10,%esp
840031cf:	89 c6                	mov    %eax,%esi
840031d1:	85 f6                	test   %esi,%esi
840031d3:	75 c8                	jne    8400319d <_vfiprintf_r+0x110>
840031d5:	8b 45 80             	mov    -0x80(%ebp),%eax
840031d8:	83 e0 10             	and    $0x10,%eax
840031db:	85 c0                	test   %eax,%eax
840031dd:	74 04                	je     840031e3 <_vfiprintf_r+0x156>
840031df:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
840031e3:	8b 45 80             	mov    -0x80(%ebp),%eax
840031e6:	83 e0 08             	and    $0x8,%eax
840031e9:	85 c0                	test   %eax,%eax
840031eb:	74 04                	je     840031f1 <_vfiprintf_r+0x164>
840031ed:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
840031f1:	0f b6 03             	movzbl (%ebx),%eax
840031f4:	3c 2a                	cmp    $0x2a,%al
840031f6:	75 50                	jne    84003248 <_vfiprintf_r+0x1bb>
840031f8:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
840031fe:	8d 50 04             	lea    0x4(%eax),%edx
84003201:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
84003207:	8b 00                	mov    (%eax),%eax
84003209:	89 45 8c             	mov    %eax,-0x74(%ebp)
8400320c:	8b 45 8c             	mov    -0x74(%ebp),%eax
8400320f:	85 c0                	test   %eax,%eax
84003211:	79 11                	jns    84003224 <_vfiprintf_r+0x197>
84003213:	8b 45 8c             	mov    -0x74(%ebp),%eax
84003216:	f7 d8                	neg    %eax
84003218:	89 45 8c             	mov    %eax,-0x74(%ebp)
8400321b:	8b 45 80             	mov    -0x80(%ebp),%eax
8400321e:	83 c8 02             	or     $0x2,%eax
84003221:	89 45 80             	mov    %eax,-0x80(%ebp)
84003224:	83 c3 01             	add    $0x1,%ebx
84003227:	eb 2d                	jmp    84003256 <_vfiprintf_r+0x1c9>
84003229:	8b 55 8c             	mov    -0x74(%ebp),%edx
8400322c:	89 d0                	mov    %edx,%eax
8400322e:	c1 e0 02             	shl    $0x2,%eax
84003231:	01 d0                	add    %edx,%eax
84003233:	01 c0                	add    %eax,%eax
84003235:	89 c2                	mov    %eax,%edx
84003237:	0f b6 03             	movzbl (%ebx),%eax
8400323a:	0f be c0             	movsbl %al,%eax
8400323d:	83 e8 30             	sub    $0x30,%eax
84003240:	01 d0                	add    %edx,%eax
84003242:	89 45 8c             	mov    %eax,-0x74(%ebp)
84003245:	83 c3 01             	add    $0x1,%ebx
84003248:	0f b6 03             	movzbl (%ebx),%eax
8400324b:	0f be c0             	movsbl %al,%eax
8400324e:	83 e8 30             	sub    $0x30,%eax
84003251:	83 f8 09             	cmp    $0x9,%eax
84003254:	76 d3                	jbe    84003229 <_vfiprintf_r+0x19c>
84003256:	0f b6 03             	movzbl (%ebx),%eax
84003259:	3c 2e                	cmp    $0x2e,%al
8400325b:	75 67                	jne    840032c4 <_vfiprintf_r+0x237>
8400325d:	83 c3 01             	add    $0x1,%ebx
84003260:	0f b6 03             	movzbl (%ebx),%eax
84003263:	3c 2a                	cmp    $0x2a,%al
84003265:	75 27                	jne    8400328e <_vfiprintf_r+0x201>
84003267:	83 c3 01             	add    $0x1,%ebx
8400326a:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
84003270:	8d 50 04             	lea    0x4(%eax),%edx
84003273:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
84003279:	8b 00                	mov    (%eax),%eax
8400327b:	89 45 84             	mov    %eax,-0x7c(%ebp)
8400327e:	8b 45 84             	mov    -0x7c(%ebp),%eax
84003281:	85 c0                	test   %eax,%eax
84003283:	79 3f                	jns    840032c4 <_vfiprintf_r+0x237>
84003285:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
8400328c:	eb 36                	jmp    840032c4 <_vfiprintf_r+0x237>
8400328e:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
84003295:	eb 1f                	jmp    840032b6 <_vfiprintf_r+0x229>
84003297:	8b 55 84             	mov    -0x7c(%ebp),%edx
8400329a:	89 d0                	mov    %edx,%eax
8400329c:	c1 e0 02             	shl    $0x2,%eax
8400329f:	01 d0                	add    %edx,%eax
840032a1:	01 c0                	add    %eax,%eax
840032a3:	89 c2                	mov    %eax,%edx
840032a5:	0f b6 03             	movzbl (%ebx),%eax
840032a8:	0f be c0             	movsbl %al,%eax
840032ab:	83 e8 30             	sub    $0x30,%eax
840032ae:	01 d0                	add    %edx,%eax
840032b0:	89 45 84             	mov    %eax,-0x7c(%ebp)
840032b3:	83 c3 01             	add    $0x1,%ebx
840032b6:	0f b6 03             	movzbl (%ebx),%eax
840032b9:	0f be c0             	movsbl %al,%eax
840032bc:	83 e8 30             	sub    $0x30,%eax
840032bf:	83 f8 09             	cmp    $0x9,%eax
840032c2:	76 d3                	jbe    84003297 <_vfiprintf_r+0x20a>
840032c4:	c7 45 dc 22 56 00 84 	movl   $0x84005622,-0x24(%ebp)
840032cb:	0f b6 03             	movzbl (%ebx),%eax
840032ce:	0f be c0             	movsbl %al,%eax
840032d1:	83 ec 04             	sub    $0x4,%esp
840032d4:	6a 03                	push   $0x3
840032d6:	50                   	push   %eax
840032d7:	ff 75 dc             	push   -0x24(%ebp)
840032da:	e8 f1 13 00 00       	call   840046d0 <memchr>
840032df:	83 c4 10             	add    $0x10,%esp
840032e2:	89 c6                	mov    %eax,%esi
840032e4:	85 f6                	test   %esi,%esi
840032e6:	74 1b                	je     84003303 <_vfiprintf_r+0x276>
840032e8:	8b 55 80             	mov    -0x80(%ebp),%edx
840032eb:	89 f0                	mov    %esi,%eax
840032ed:	2b 45 dc             	sub    -0x24(%ebp),%eax
840032f0:	be 40 00 00 00       	mov    $0x40,%esi
840032f5:	89 c1                	mov    %eax,%ecx
840032f7:	d3 e6                	shl    %cl,%esi
840032f9:	89 f0                	mov    %esi,%eax
840032fb:	09 d0                	or     %edx,%eax
840032fd:	89 45 80             	mov    %eax,-0x80(%ebp)
84003300:	83 c3 01             	add    $0x1,%ebx
84003303:	89 d8                	mov    %ebx,%eax
84003305:	8d 58 01             	lea    0x1(%eax),%ebx
84003308:	0f b6 00             	movzbl (%eax),%eax
8400330b:	88 45 98             	mov    %al,-0x68(%ebp)
8400330e:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
84003312:	0f be c0             	movsbl %al,%eax
84003315:	83 ec 04             	sub    $0x4,%esp
84003318:	6a 06                	push   $0x6
8400331a:	50                   	push   %eax
8400331b:	68 26 56 00 84       	push   $0x84005626
84003320:	e8 ab 13 00 00       	call   840046d0 <memchr>
84003325:	83 c4 10             	add    $0x10,%esp
84003328:	89 c6                	mov    %eax,%esi
8400332a:	85 f6                	test   %esi,%esi
8400332c:	74 5a                	je     84003388 <_vfiprintf_r+0x2fb>
8400332e:	b8 00 00 00 00       	mov    $0x0,%eax
84003333:	85 c0                	test   %eax,%eax
84003335:	75 2e                	jne    84003365 <_vfiprintf_r+0x2d8>
84003337:	8b 45 80             	mov    -0x80(%ebp),%eax
8400333a:	25 00 01 00 00       	and    $0x100,%eax
8400333f:	85 c0                	test   %eax,%eax
84003341:	74 11                	je     84003354 <_vfiprintf_r+0x2c7>
84003343:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
84003349:	83 c0 0c             	add    $0xc,%eax
8400334c:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
84003352:	eb 55                	jmp    840033a9 <_vfiprintf_r+0x31c>
84003354:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
8400335a:	83 c0 08             	add    $0x8,%eax
8400335d:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
84003363:	eb 44                	jmp    840033a9 <_vfiprintf_r+0x31c>
84003365:	83 ec 0c             	sub    $0xc,%esp
84003368:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
8400336e:	50                   	push   %eax
8400336f:	ff 75 e4             	push   -0x1c(%ebp)
84003372:	ff 75 0c             	push   0xc(%ebp)
84003375:	8d 45 80             	lea    -0x80(%ebp),%eax
84003378:	50                   	push   %eax
84003379:	ff 75 08             	push   0x8(%ebp)
8400337c:	e8 7f cc ff 7b       	call   0 <_start-0x84000000>
84003381:	83 c4 20             	add    $0x20,%esp
84003384:	89 c7                	mov    %eax,%edi
84003386:	eb 21                	jmp    840033a9 <_vfiprintf_r+0x31c>
84003388:	83 ec 0c             	sub    $0xc,%esp
8400338b:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
84003391:	50                   	push   %eax
84003392:	ff 75 e4             	push   -0x1c(%ebp)
84003395:	ff 75 0c             	push   0xc(%ebp)
84003398:	8d 45 80             	lea    -0x80(%ebp),%eax
8400339b:	50                   	push   %eax
8400339c:	ff 75 08             	push   0x8(%ebp)
8400339f:	e8 da 01 00 00       	call   8400357e <_printf_i>
840033a4:	83 c4 20             	add    $0x20,%esp
840033a7:	89 c7                	mov    %eax,%edi
840033a9:	83 ff ff             	cmp    $0xffffffff,%edi
840033ac:	74 13                	je     840033c1 <_vfiprintf_r+0x334>
840033ae:	8b 45 94             	mov    -0x6c(%ebp),%eax
840033b1:	01 f8                	add    %edi,%eax
840033b3:	89 45 94             	mov    %eax,-0x6c(%ebp)
840033b6:	e9 5c fd ff ff       	jmp    84003117 <_vfiprintf_r+0x8a>
840033bb:	90                   	nop
840033bc:	eb 04                	jmp    840033c2 <_vfiprintf_r+0x335>
840033be:	90                   	nop
840033bf:	eb 01                	jmp    840033c2 <_vfiprintf_r+0x335>
840033c1:	90                   	nop
840033c2:	8b 45 0c             	mov    0xc(%ebp),%eax
840033c5:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
840033c9:	98                   	cwtl   
840033ca:	83 e0 40             	and    $0x40,%eax
840033cd:	85 c0                	test   %eax,%eax
840033cf:	75 05                	jne    840033d6 <_vfiprintf_r+0x349>
840033d1:	8b 45 94             	mov    -0x6c(%ebp),%eax
840033d4:	eb 05                	jmp    840033db <_vfiprintf_r+0x34e>
840033d6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
840033db:	8d 65 f4             	lea    -0xc(%ebp),%esp
840033de:	5b                   	pop    %ebx
840033df:	5e                   	pop    %esi
840033e0:	5f                   	pop    %edi
840033e1:	5d                   	pop    %ebp
840033e2:	c3                   	ret    

840033e3 <_printf_common>:
840033e3:	55                   	push   %ebp
840033e4:	89 e5                	mov    %esp,%ebp
840033e6:	83 ec 18             	sub    $0x18,%esp
840033e9:	8b 45 0c             	mov    0xc(%ebp),%eax
840033ec:	8b 50 10             	mov    0x10(%eax),%edx
840033ef:	8b 45 0c             	mov    0xc(%ebp),%eax
840033f2:	8b 40 08             	mov    0x8(%eax),%eax
840033f5:	39 c2                	cmp    %eax,%edx
840033f7:	0f 4c d0             	cmovl  %eax,%edx
840033fa:	8b 45 10             	mov    0x10(%ebp),%eax
840033fd:	89 10                	mov    %edx,(%eax)
840033ff:	8b 45 0c             	mov    0xc(%ebp),%eax
84003402:	0f b6 40 43          	movzbl 0x43(%eax),%eax
84003406:	84 c0                	test   %al,%al
84003408:	74 0d                	je     84003417 <_printf_common+0x34>
8400340a:	8b 45 10             	mov    0x10(%ebp),%eax
8400340d:	8b 00                	mov    (%eax),%eax
8400340f:	8d 50 01             	lea    0x1(%eax),%edx
84003412:	8b 45 10             	mov    0x10(%ebp),%eax
84003415:	89 10                	mov    %edx,(%eax)
84003417:	8b 45 0c             	mov    0xc(%ebp),%eax
8400341a:	8b 00                	mov    (%eax),%eax
8400341c:	83 e0 20             	and    $0x20,%eax
8400341f:	85 c0                	test   %eax,%eax
84003421:	74 0d                	je     84003430 <_printf_common+0x4d>
84003423:	8b 45 10             	mov    0x10(%ebp),%eax
84003426:	8b 00                	mov    (%eax),%eax
84003428:	8d 50 02             	lea    0x2(%eax),%edx
8400342b:	8b 45 10             	mov    0x10(%ebp),%eax
8400342e:	89 10                	mov    %edx,(%eax)
84003430:	8b 45 0c             	mov    0xc(%ebp),%eax
84003433:	8b 00                	mov    (%eax),%eax
84003435:	83 e0 06             	and    $0x6,%eax
84003438:	85 c0                	test   %eax,%eax
8400343a:	75 41                	jne    8400347d <_printf_common+0x9a>
8400343c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
84003443:	eb 24                	jmp    84003469 <_printf_common+0x86>
84003445:	8b 45 0c             	mov    0xc(%ebp),%eax
84003448:	83 c0 19             	add    $0x19,%eax
8400344b:	6a 01                	push   $0x1
8400344d:	50                   	push   %eax
8400344e:	ff 75 14             	push   0x14(%ebp)
84003451:	ff 75 08             	push   0x8(%ebp)
84003454:	8b 45 18             	mov    0x18(%ebp),%eax
84003457:	ff d0                	call   *%eax
84003459:	83 c4 10             	add    $0x10,%esp
8400345c:	83 f8 ff             	cmp    $0xffffffff,%eax
8400345f:	0f 84 0b 01 00 00    	je     84003570 <_printf_common+0x18d>
84003465:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
84003469:	8b 45 0c             	mov    0xc(%ebp),%eax
8400346c:	8b 50 0c             	mov    0xc(%eax),%edx
8400346f:	8b 45 10             	mov    0x10(%ebp),%eax
84003472:	8b 08                	mov    (%eax),%ecx
84003474:	89 d0                	mov    %edx,%eax
84003476:	29 c8                	sub    %ecx,%eax
84003478:	39 45 f0             	cmp    %eax,-0x10(%ebp)
8400347b:	7c c8                	jl     84003445 <_printf_common+0x62>
8400347d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
84003484:	8b 45 0c             	mov    0xc(%ebp),%eax
84003487:	0f b6 40 43          	movzbl 0x43(%eax),%eax
8400348b:	84 c0                	test   %al,%al
8400348d:	74 04                	je     84003493 <_printf_common+0xb0>
8400348f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
84003493:	8b 45 0c             	mov    0xc(%ebp),%eax
84003496:	8b 00                	mov    (%eax),%eax
84003498:	83 e0 20             	and    $0x20,%eax
8400349b:	85 c0                	test   %eax,%eax
8400349d:	74 28                	je     840034c7 <_printf_common+0xe4>
8400349f:	8b 45 f4             	mov    -0xc(%ebp),%eax
840034a2:	8d 50 01             	lea    0x1(%eax),%edx
840034a5:	89 55 f4             	mov    %edx,-0xc(%ebp)
840034a8:	8b 55 0c             	mov    0xc(%ebp),%edx
840034ab:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
840034b0:	8b 45 f4             	mov    -0xc(%ebp),%eax
840034b3:	8d 50 01             	lea    0x1(%eax),%edx
840034b6:	89 55 f4             	mov    %edx,-0xc(%ebp)
840034b9:	8b 55 0c             	mov    0xc(%ebp),%edx
840034bc:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
840034c0:	8b 55 0c             	mov    0xc(%ebp),%edx
840034c3:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
840034c7:	8b 45 f4             	mov    -0xc(%ebp),%eax
840034ca:	8b 55 0c             	mov    0xc(%ebp),%edx
840034cd:	83 c2 43             	add    $0x43,%edx
840034d0:	50                   	push   %eax
840034d1:	52                   	push   %edx
840034d2:	ff 75 14             	push   0x14(%ebp)
840034d5:	ff 75 08             	push   0x8(%ebp)
840034d8:	8b 45 18             	mov    0x18(%ebp),%eax
840034db:	ff d0                	call   *%eax
840034dd:	83 c4 10             	add    $0x10,%esp
840034e0:	83 f8 ff             	cmp    $0xffffffff,%eax
840034e3:	0f 84 8a 00 00 00    	je     84003573 <_printf_common+0x190>
840034e9:	8b 45 0c             	mov    0xc(%ebp),%eax
840034ec:	8b 50 0c             	mov    0xc(%eax),%edx
840034ef:	8b 45 10             	mov    0x10(%ebp),%eax
840034f2:	8b 08                	mov    (%eax),%ecx
840034f4:	89 d0                	mov    %edx,%eax
840034f6:	29 c8                	sub    %ecx,%eax
840034f8:	89 45 f4             	mov    %eax,-0xc(%ebp)
840034fb:	8b 45 0c             	mov    0xc(%ebp),%eax
840034fe:	8b 00                	mov    (%eax),%eax
84003500:	83 e0 06             	and    $0x6,%eax
84003503:	83 f8 04             	cmp    $0x4,%eax
84003506:	75 06                	jne    8400350e <_printf_common+0x12b>
84003508:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8400350c:	79 07                	jns    84003515 <_printf_common+0x132>
8400350e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
84003515:	8b 45 0c             	mov    0xc(%ebp),%eax
84003518:	8b 50 08             	mov    0x8(%eax),%edx
8400351b:	8b 45 0c             	mov    0xc(%ebp),%eax
8400351e:	8b 40 10             	mov    0x10(%eax),%eax
84003521:	39 c2                	cmp    %eax,%edx
84003523:	7e 13                	jle    84003538 <_printf_common+0x155>
84003525:	8b 45 0c             	mov    0xc(%ebp),%eax
84003528:	8b 50 08             	mov    0x8(%eax),%edx
8400352b:	8b 45 0c             	mov    0xc(%ebp),%eax
8400352e:	8b 48 10             	mov    0x10(%eax),%ecx
84003531:	89 d0                	mov    %edx,%eax
84003533:	29 c8                	sub    %ecx,%eax
84003535:	01 45 f4             	add    %eax,-0xc(%ebp)
84003538:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
8400353f:	eb 20                	jmp    84003561 <_printf_common+0x17e>
84003541:	8b 45 0c             	mov    0xc(%ebp),%eax
84003544:	83 c0 1a             	add    $0x1a,%eax
84003547:	6a 01                	push   $0x1
84003549:	50                   	push   %eax
8400354a:	ff 75 14             	push   0x14(%ebp)
8400354d:	ff 75 08             	push   0x8(%ebp)
84003550:	8b 45 18             	mov    0x18(%ebp),%eax
84003553:	ff d0                	call   *%eax
84003555:	83 c4 10             	add    $0x10,%esp
84003558:	83 f8 ff             	cmp    $0xffffffff,%eax
8400355b:	74 19                	je     84003576 <_printf_common+0x193>
8400355d:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
84003561:	8b 45 ec             	mov    -0x14(%ebp),%eax
84003564:	3b 45 f4             	cmp    -0xc(%ebp),%eax
84003567:	7c d8                	jl     84003541 <_printf_common+0x15e>
84003569:	b8 00 00 00 00       	mov    $0x0,%eax
8400356e:	eb 0c                	jmp    8400357c <_printf_common+0x199>
84003570:	90                   	nop
84003571:	eb 04                	jmp    84003577 <_printf_common+0x194>
84003573:	90                   	nop
84003574:	eb 01                	jmp    84003577 <_printf_common+0x194>
84003576:	90                   	nop
84003577:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400357c:	c9                   	leave  
8400357d:	c3                   	ret    

8400357e <_printf_i>:
8400357e:	55                   	push   %ebp
8400357f:	89 e5                	mov    %esp,%ebp
84003581:	53                   	push   %ebx
84003582:	83 ec 24             	sub    $0x24,%esp
84003585:	8b 45 0c             	mov    0xc(%ebp),%eax
84003588:	83 c0 1b             	add    $0x1b,%eax
8400358b:	83 c0 28             	add    $0x28,%eax
8400358e:	89 45 ec             	mov    %eax,-0x14(%ebp)
84003591:	c7 45 e8 30 56 00 84 	movl   $0x84005630,-0x18(%ebp)
84003598:	8b 45 0c             	mov    0xc(%ebp),%eax
8400359b:	0f b6 40 18          	movzbl 0x18(%eax),%eax
8400359f:	0f be c0             	movsbl %al,%eax
840035a2:	85 c0                	test   %eax,%eax
840035a4:	0f 84 00 03 00 00    	je     840038aa <_printf_i+0x32c>
840035aa:	85 c0                	test   %eax,%eax
840035ac:	0f 88 52 03 00 00    	js     84003904 <_printf_i+0x386>
840035b2:	83 f8 78             	cmp    $0x78,%eax
840035b5:	0f 8f 49 03 00 00    	jg     84003904 <_printf_i+0x386>
840035bb:	83 f8 58             	cmp    $0x58,%eax
840035be:	0f 8c 40 03 00 00    	jl     84003904 <_printf_i+0x386>
840035c4:	83 e8 58             	sub    $0x58,%eax
840035c7:	83 f8 20             	cmp    $0x20,%eax
840035ca:	0f 87 34 03 00 00    	ja     84003904 <_printf_i+0x386>
840035d0:	8b 04 85 54 56 00 84 	mov    -0x7bffa9ac(,%eax,4),%eax
840035d7:	ff e0                	jmp    *%eax
840035d9:	8b 45 18             	mov    0x18(%ebp),%eax
840035dc:	8b 00                	mov    (%eax),%eax
840035de:	8d 48 04             	lea    0x4(%eax),%ecx
840035e1:	8b 55 18             	mov    0x18(%ebp),%edx
840035e4:	89 0a                	mov    %ecx,(%edx)
840035e6:	8b 00                	mov    (%eax),%eax
840035e8:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
840035ec:	89 c2                	mov    %eax,%edx
840035ee:	8b 45 ec             	mov    -0x14(%ebp),%eax
840035f1:	88 10                	mov    %dl,(%eax)
840035f3:	8b 45 0c             	mov    0xc(%ebp),%eax
840035f6:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
840035fd:	e9 1c 03 00 00       	jmp    8400391e <_printf_i+0x3a0>
84003602:	8b 45 0c             	mov    0xc(%ebp),%eax
84003605:	8b 00                	mov    (%eax),%eax
84003607:	25 80 00 00 00       	and    $0x80,%eax
8400360c:	85 c0                	test   %eax,%eax
8400360e:	74 11                	je     84003621 <_printf_i+0xa3>
84003610:	8b 45 18             	mov    0x18(%ebp),%eax
84003613:	8b 00                	mov    (%eax),%eax
84003615:	8d 48 04             	lea    0x4(%eax),%ecx
84003618:	8b 55 18             	mov    0x18(%ebp),%edx
8400361b:	89 0a                	mov    %ecx,(%edx)
8400361d:	8b 00                	mov    (%eax),%eax
8400361f:	eb 2d                	jmp    8400364e <_printf_i+0xd0>
84003621:	8b 45 0c             	mov    0xc(%ebp),%eax
84003624:	8b 00                	mov    (%eax),%eax
84003626:	83 e0 40             	and    $0x40,%eax
84003629:	85 c0                	test   %eax,%eax
8400362b:	74 12                	je     8400363f <_printf_i+0xc1>
8400362d:	8b 45 18             	mov    0x18(%ebp),%eax
84003630:	8b 00                	mov    (%eax),%eax
84003632:	8d 48 04             	lea    0x4(%eax),%ecx
84003635:	8b 55 18             	mov    0x18(%ebp),%edx
84003638:	89 0a                	mov    %ecx,(%edx)
8400363a:	8b 00                	mov    (%eax),%eax
8400363c:	98                   	cwtl   
8400363d:	eb 0f                	jmp    8400364e <_printf_i+0xd0>
8400363f:	8b 45 18             	mov    0x18(%ebp),%eax
84003642:	8b 00                	mov    (%eax),%eax
84003644:	8d 48 04             	lea    0x4(%eax),%ecx
84003647:	8b 55 18             	mov    0x18(%ebp),%edx
8400364a:	89 0a                	mov    %ecx,(%edx)
8400364c:	8b 00                	mov    (%eax),%eax
8400364e:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003651:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003654:	85 c0                	test   %eax,%eax
84003656:	79 0a                	jns    84003662 <_printf_i+0xe4>
84003658:	f7 5d f4             	negl   -0xc(%ebp)
8400365b:	8b 45 0c             	mov    0xc(%ebp),%eax
8400365e:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
84003662:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
84003669:	e9 28 01 00 00       	jmp    84003796 <_printf_i+0x218>
8400366e:	8b 45 0c             	mov    0xc(%ebp),%eax
84003671:	8b 00                	mov    (%eax),%eax
84003673:	25 80 00 00 00       	and    $0x80,%eax
84003678:	85 c0                	test   %eax,%eax
8400367a:	74 11                	je     8400368d <_printf_i+0x10f>
8400367c:	8b 45 18             	mov    0x18(%ebp),%eax
8400367f:	8b 00                	mov    (%eax),%eax
84003681:	8d 48 04             	lea    0x4(%eax),%ecx
84003684:	8b 55 18             	mov    0x18(%ebp),%edx
84003687:	89 0a                	mov    %ecx,(%edx)
84003689:	8b 00                	mov    (%eax),%eax
8400368b:	eb 2f                	jmp    840036bc <_printf_i+0x13e>
8400368d:	8b 45 0c             	mov    0xc(%ebp),%eax
84003690:	8b 00                	mov    (%eax),%eax
84003692:	83 e0 40             	and    $0x40,%eax
84003695:	85 c0                	test   %eax,%eax
84003697:	74 14                	je     840036ad <_printf_i+0x12f>
84003699:	8b 45 18             	mov    0x18(%ebp),%eax
8400369c:	8b 00                	mov    (%eax),%eax
8400369e:	8d 48 04             	lea    0x4(%eax),%ecx
840036a1:	8b 55 18             	mov    0x18(%ebp),%edx
840036a4:	89 0a                	mov    %ecx,(%edx)
840036a6:	8b 00                	mov    (%eax),%eax
840036a8:	0f b7 c0             	movzwl %ax,%eax
840036ab:	eb 0f                	jmp    840036bc <_printf_i+0x13e>
840036ad:	8b 45 18             	mov    0x18(%ebp),%eax
840036b0:	8b 00                	mov    (%eax),%eax
840036b2:	8d 48 04             	lea    0x4(%eax),%ecx
840036b5:	8b 55 18             	mov    0x18(%ebp),%edx
840036b8:	89 0a                	mov    %ecx,(%edx)
840036ba:	8b 00                	mov    (%eax),%eax
840036bc:	89 45 f4             	mov    %eax,-0xc(%ebp)
840036bf:	8b 45 0c             	mov    0xc(%ebp),%eax
840036c2:	0f b6 40 18          	movzbl 0x18(%eax),%eax
840036c6:	3c 6f                	cmp    $0x6f,%al
840036c8:	75 07                	jne    840036d1 <_printf_i+0x153>
840036ca:	b8 08 00 00 00       	mov    $0x8,%eax
840036cf:	eb 05                	jmp    840036d6 <_printf_i+0x158>
840036d1:	b8 0a 00 00 00       	mov    $0xa,%eax
840036d6:	89 45 f0             	mov    %eax,-0x10(%ebp)
840036d9:	e9 b1 00 00 00       	jmp    8400378f <_printf_i+0x211>
840036de:	8b 45 0c             	mov    0xc(%ebp),%eax
840036e1:	c6 40 45 58          	movb   $0x58,0x45(%eax)
840036e5:	eb 1d                	jmp    84003704 <_printf_i+0x186>
840036e7:	8b 45 0c             	mov    0xc(%ebp),%eax
840036ea:	8b 00                	mov    (%eax),%eax
840036ec:	83 c8 20             	or     $0x20,%eax
840036ef:	89 c2                	mov    %eax,%edx
840036f1:	8b 45 0c             	mov    0xc(%ebp),%eax
840036f4:	89 10                	mov    %edx,(%eax)
840036f6:	8b 45 0c             	mov    0xc(%ebp),%eax
840036f9:	c6 40 45 78          	movb   $0x78,0x45(%eax)
840036fd:	c7 45 e8 41 56 00 84 	movl   $0x84005641,-0x18(%ebp)
84003704:	8b 45 0c             	mov    0xc(%ebp),%eax
84003707:	8b 00                	mov    (%eax),%eax
84003709:	25 80 00 00 00       	and    $0x80,%eax
8400370e:	85 c0                	test   %eax,%eax
84003710:	74 11                	je     84003723 <_printf_i+0x1a5>
84003712:	8b 45 18             	mov    0x18(%ebp),%eax
84003715:	8b 00                	mov    (%eax),%eax
84003717:	8d 48 04             	lea    0x4(%eax),%ecx
8400371a:	8b 55 18             	mov    0x18(%ebp),%edx
8400371d:	89 0a                	mov    %ecx,(%edx)
8400371f:	8b 00                	mov    (%eax),%eax
84003721:	eb 2f                	jmp    84003752 <_printf_i+0x1d4>
84003723:	8b 45 0c             	mov    0xc(%ebp),%eax
84003726:	8b 00                	mov    (%eax),%eax
84003728:	83 e0 40             	and    $0x40,%eax
8400372b:	85 c0                	test   %eax,%eax
8400372d:	74 14                	je     84003743 <_printf_i+0x1c5>
8400372f:	8b 45 18             	mov    0x18(%ebp),%eax
84003732:	8b 00                	mov    (%eax),%eax
84003734:	8d 48 04             	lea    0x4(%eax),%ecx
84003737:	8b 55 18             	mov    0x18(%ebp),%edx
8400373a:	89 0a                	mov    %ecx,(%edx)
8400373c:	8b 00                	mov    (%eax),%eax
8400373e:	0f b7 c0             	movzwl %ax,%eax
84003741:	eb 0f                	jmp    84003752 <_printf_i+0x1d4>
84003743:	8b 45 18             	mov    0x18(%ebp),%eax
84003746:	8b 00                	mov    (%eax),%eax
84003748:	8d 48 04             	lea    0x4(%eax),%ecx
8400374b:	8b 55 18             	mov    0x18(%ebp),%edx
8400374e:	89 0a                	mov    %ecx,(%edx)
84003750:	8b 00                	mov    (%eax),%eax
84003752:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003755:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
8400375c:	8b 45 0c             	mov    0xc(%ebp),%eax
8400375f:	8b 00                	mov    (%eax),%eax
84003761:	83 e0 01             	and    $0x1,%eax
84003764:	85 c0                	test   %eax,%eax
84003766:	74 0f                	je     84003777 <_printf_i+0x1f9>
84003768:	8b 45 0c             	mov    0xc(%ebp),%eax
8400376b:	8b 00                	mov    (%eax),%eax
8400376d:	83 c8 20             	or     $0x20,%eax
84003770:	89 c2                	mov    %eax,%edx
84003772:	8b 45 0c             	mov    0xc(%ebp),%eax
84003775:	89 10                	mov    %edx,(%eax)
84003777:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8400377b:	75 11                	jne    8400378e <_printf_i+0x210>
8400377d:	8b 45 0c             	mov    0xc(%ebp),%eax
84003780:	8b 00                	mov    (%eax),%eax
84003782:	83 e0 df             	and    $0xffffffdf,%eax
84003785:	89 c2                	mov    %eax,%edx
84003787:	8b 45 0c             	mov    0xc(%ebp),%eax
8400378a:	89 10                	mov    %edx,(%eax)
8400378c:	eb 01                	jmp    8400378f <_printf_i+0x211>
8400378e:	90                   	nop
8400378f:	8b 45 0c             	mov    0xc(%ebp),%eax
84003792:	c6 40 43 00          	movb   $0x0,0x43(%eax)
84003796:	8b 45 0c             	mov    0xc(%ebp),%eax
84003799:	8b 50 04             	mov    0x4(%eax),%edx
8400379c:	8b 45 0c             	mov    0xc(%ebp),%eax
8400379f:	89 50 08             	mov    %edx,0x8(%eax)
840037a2:	8b 45 0c             	mov    0xc(%ebp),%eax
840037a5:	8b 40 08             	mov    0x8(%eax),%eax
840037a8:	85 c0                	test   %eax,%eax
840037aa:	78 0f                	js     840037bb <_printf_i+0x23d>
840037ac:	8b 45 0c             	mov    0xc(%ebp),%eax
840037af:	8b 00                	mov    (%eax),%eax
840037b1:	83 e0 fb             	and    $0xfffffffb,%eax
840037b4:	89 c2                	mov    %eax,%edx
840037b6:	8b 45 0c             	mov    0xc(%ebp),%eax
840037b9:	89 10                	mov    %edx,(%eax)
840037bb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
840037bf:	75 0a                	jne    840037cb <_printf_i+0x24d>
840037c1:	8b 45 0c             	mov    0xc(%ebp),%eax
840037c4:	8b 40 04             	mov    0x4(%eax),%eax
840037c7:	85 c0                	test   %eax,%eax
840037c9:	74 34                	je     840037ff <_printf_i+0x281>
840037cb:	8b 4d f0             	mov    -0x10(%ebp),%ecx
840037ce:	8b 45 f4             	mov    -0xc(%ebp),%eax
840037d1:	ba 00 00 00 00       	mov    $0x0,%edx
840037d6:	f7 f1                	div    %ecx
840037d8:	8b 45 e8             	mov    -0x18(%ebp),%eax
840037db:	01 d0                	add    %edx,%eax
840037dd:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
840037e1:	0f b6 10             	movzbl (%eax),%edx
840037e4:	8b 45 ec             	mov    -0x14(%ebp),%eax
840037e7:	88 10                	mov    %dl,(%eax)
840037e9:	8b 5d f0             	mov    -0x10(%ebp),%ebx
840037ec:	8b 45 f4             	mov    -0xc(%ebp),%eax
840037ef:	ba 00 00 00 00       	mov    $0x0,%edx
840037f4:	f7 f3                	div    %ebx
840037f6:	89 45 f4             	mov    %eax,-0xc(%ebp)
840037f9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
840037fd:	75 cc                	jne    840037cb <_printf_i+0x24d>
840037ff:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
84003803:	75 26                	jne    8400382b <_printf_i+0x2ad>
84003805:	8b 45 0c             	mov    0xc(%ebp),%eax
84003808:	8b 00                	mov    (%eax),%eax
8400380a:	83 e0 01             	and    $0x1,%eax
8400380d:	85 c0                	test   %eax,%eax
8400380f:	74 1a                	je     8400382b <_printf_i+0x2ad>
84003811:	8b 45 0c             	mov    0xc(%ebp),%eax
84003814:	8b 50 04             	mov    0x4(%eax),%edx
84003817:	8b 45 0c             	mov    0xc(%ebp),%eax
8400381a:	8b 40 10             	mov    0x10(%eax),%eax
8400381d:	39 c2                	cmp    %eax,%edx
8400381f:	7f 0a                	jg     8400382b <_printf_i+0x2ad>
84003821:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
84003825:	8b 45 ec             	mov    -0x14(%ebp),%eax
84003828:	c6 00 30             	movb   $0x30,(%eax)
8400382b:	8b 45 0c             	mov    0xc(%ebp),%eax
8400382e:	83 c0 1b             	add    $0x1b,%eax
84003831:	83 c0 28             	add    $0x28,%eax
84003834:	2b 45 ec             	sub    -0x14(%ebp),%eax
84003837:	89 c2                	mov    %eax,%edx
84003839:	8b 45 0c             	mov    0xc(%ebp),%eax
8400383c:	89 50 10             	mov    %edx,0x10(%eax)
8400383f:	e9 e2 00 00 00       	jmp    84003926 <_printf_i+0x3a8>
84003844:	8b 45 0c             	mov    0xc(%ebp),%eax
84003847:	8b 00                	mov    (%eax),%eax
84003849:	25 80 00 00 00       	and    $0x80,%eax
8400384e:	85 c0                	test   %eax,%eax
84003850:	74 19                	je     8400386b <_printf_i+0x2ed>
84003852:	8b 45 18             	mov    0x18(%ebp),%eax
84003855:	8b 00                	mov    (%eax),%eax
84003857:	8d 48 04             	lea    0x4(%eax),%ecx
8400385a:	8b 55 18             	mov    0x18(%ebp),%edx
8400385d:	89 0a                	mov    %ecx,(%edx)
8400385f:	8b 00                	mov    (%eax),%eax
84003861:	8b 55 0c             	mov    0xc(%ebp),%edx
84003864:	8b 52 14             	mov    0x14(%edx),%edx
84003867:	89 10                	mov    %edx,(%eax)
84003869:	eb 3f                	jmp    840038aa <_printf_i+0x32c>
8400386b:	8b 45 0c             	mov    0xc(%ebp),%eax
8400386e:	8b 00                	mov    (%eax),%eax
84003870:	83 e0 40             	and    $0x40,%eax
84003873:	85 c0                	test   %eax,%eax
84003875:	74 1c                	je     84003893 <_printf_i+0x315>
84003877:	8b 45 0c             	mov    0xc(%ebp),%eax
8400387a:	8b 58 14             	mov    0x14(%eax),%ebx
8400387d:	8b 45 18             	mov    0x18(%ebp),%eax
84003880:	8b 00                	mov    (%eax),%eax
84003882:	8d 48 04             	lea    0x4(%eax),%ecx
84003885:	8b 55 18             	mov    0x18(%ebp),%edx
84003888:	89 0a                	mov    %ecx,(%edx)
8400388a:	8b 00                	mov    (%eax),%eax
8400388c:	89 da                	mov    %ebx,%edx
8400388e:	66 89 10             	mov    %dx,(%eax)
84003891:	eb 17                	jmp    840038aa <_printf_i+0x32c>
84003893:	8b 45 18             	mov    0x18(%ebp),%eax
84003896:	8b 00                	mov    (%eax),%eax
84003898:	8d 48 04             	lea    0x4(%eax),%ecx
8400389b:	8b 55 18             	mov    0x18(%ebp),%edx
8400389e:	89 0a                	mov    %ecx,(%edx)
840038a0:	8b 00                	mov    (%eax),%eax
840038a2:	8b 55 0c             	mov    0xc(%ebp),%edx
840038a5:	8b 52 14             	mov    0x14(%edx),%edx
840038a8:	89 10                	mov    %edx,(%eax)
840038aa:	8b 45 0c             	mov    0xc(%ebp),%eax
840038ad:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
840038b4:	eb 70                	jmp    84003926 <_printf_i+0x3a8>
840038b6:	8b 45 18             	mov    0x18(%ebp),%eax
840038b9:	8b 00                	mov    (%eax),%eax
840038bb:	8d 48 04             	lea    0x4(%eax),%ecx
840038be:	8b 55 18             	mov    0x18(%ebp),%edx
840038c1:	89 0a                	mov    %ecx,(%edx)
840038c3:	8b 00                	mov    (%eax),%eax
840038c5:	89 45 ec             	mov    %eax,-0x14(%ebp)
840038c8:	8b 45 0c             	mov    0xc(%ebp),%eax
840038cb:	8b 40 04             	mov    0x4(%eax),%eax
840038ce:	83 ec 04             	sub    $0x4,%esp
840038d1:	50                   	push   %eax
840038d2:	6a 00                	push   $0x0
840038d4:	ff 75 ec             	push   -0x14(%ebp)
840038d7:	e8 f4 0d 00 00       	call   840046d0 <memchr>
840038dc:	83 c4 10             	add    $0x10,%esp
840038df:	89 45 e0             	mov    %eax,-0x20(%ebp)
840038e2:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
840038e6:	74 0e                	je     840038f6 <_printf_i+0x378>
840038e8:	8b 45 e0             	mov    -0x20(%ebp),%eax
840038eb:	2b 45 ec             	sub    -0x14(%ebp),%eax
840038ee:	89 c2                	mov    %eax,%edx
840038f0:	8b 45 0c             	mov    0xc(%ebp),%eax
840038f3:	89 50 04             	mov    %edx,0x4(%eax)
840038f6:	8b 45 0c             	mov    0xc(%ebp),%eax
840038f9:	8b 50 04             	mov    0x4(%eax),%edx
840038fc:	8b 45 0c             	mov    0xc(%ebp),%eax
840038ff:	89 50 10             	mov    %edx,0x10(%eax)
84003902:	eb 1a                	jmp    8400391e <_printf_i+0x3a0>
84003904:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
84003908:	8b 45 0c             	mov    0xc(%ebp),%eax
8400390b:	0f b6 50 18          	movzbl 0x18(%eax),%edx
8400390f:	8b 45 ec             	mov    -0x14(%ebp),%eax
84003912:	88 10                	mov    %dl,(%eax)
84003914:	8b 45 0c             	mov    0xc(%ebp),%eax
84003917:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8400391e:	8b 45 0c             	mov    0xc(%ebp),%eax
84003921:	c6 40 43 00          	movb   $0x0,0x43(%eax)
84003925:	90                   	nop
84003926:	83 ec 0c             	sub    $0xc,%esp
84003929:	ff 75 14             	push   0x14(%ebp)
8400392c:	ff 75 10             	push   0x10(%ebp)
8400392f:	8d 45 d8             	lea    -0x28(%ebp),%eax
84003932:	50                   	push   %eax
84003933:	ff 75 0c             	push   0xc(%ebp)
84003936:	ff 75 08             	push   0x8(%ebp)
84003939:	e8 a5 fa ff ff       	call   840033e3 <_printf_common>
8400393e:	83 c4 20             	add    $0x20,%esp
84003941:	89 45 dc             	mov    %eax,-0x24(%ebp)
84003944:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
84003948:	74 72                	je     840039bc <_printf_i+0x43e>
8400394a:	8b 45 0c             	mov    0xc(%ebp),%eax
8400394d:	8b 40 10             	mov    0x10(%eax),%eax
84003950:	50                   	push   %eax
84003951:	ff 75 ec             	push   -0x14(%ebp)
84003954:	ff 75 10             	push   0x10(%ebp)
84003957:	ff 75 08             	push   0x8(%ebp)
8400395a:	8b 45 14             	mov    0x14(%ebp),%eax
8400395d:	ff d0                	call   *%eax
8400395f:	83 c4 10             	add    $0x10,%esp
84003962:	83 f8 ff             	cmp    $0xffffffff,%eax
84003965:	74 58                	je     840039bf <_printf_i+0x441>
84003967:	8b 45 0c             	mov    0xc(%ebp),%eax
8400396a:	8b 00                	mov    (%eax),%eax
8400396c:	83 e0 02             	and    $0x2,%eax
8400396f:	85 c0                	test   %eax,%eax
84003971:	74 39                	je     840039ac <_printf_i+0x42e>
84003973:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8400397a:	eb 20                	jmp    8400399c <_printf_i+0x41e>
8400397c:	8b 45 0c             	mov    0xc(%ebp),%eax
8400397f:	83 c0 19             	add    $0x19,%eax
84003982:	6a 01                	push   $0x1
84003984:	50                   	push   %eax
84003985:	ff 75 10             	push   0x10(%ebp)
84003988:	ff 75 08             	push   0x8(%ebp)
8400398b:	8b 45 14             	mov    0x14(%ebp),%eax
8400398e:	ff d0                	call   *%eax
84003990:	83 c4 10             	add    $0x10,%esp
84003993:	83 f8 ff             	cmp    $0xffffffff,%eax
84003996:	74 2a                	je     840039c2 <_printf_i+0x444>
84003998:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8400399c:	8b 45 0c             	mov    0xc(%ebp),%eax
8400399f:	8b 40 0c             	mov    0xc(%eax),%eax
840039a2:	8b 55 d8             	mov    -0x28(%ebp),%edx
840039a5:	29 d0                	sub    %edx,%eax
840039a7:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
840039aa:	7c d0                	jl     8400397c <_printf_i+0x3fe>
840039ac:	8b 45 0c             	mov    0xc(%ebp),%eax
840039af:	8b 50 0c             	mov    0xc(%eax),%edx
840039b2:	8b 45 d8             	mov    -0x28(%ebp),%eax
840039b5:	39 c2                	cmp    %eax,%edx
840039b7:	0f 4d c2             	cmovge %edx,%eax
840039ba:	eb 0c                	jmp    840039c8 <_printf_i+0x44a>
840039bc:	90                   	nop
840039bd:	eb 04                	jmp    840039c3 <_printf_i+0x445>
840039bf:	90                   	nop
840039c0:	eb 01                	jmp    840039c3 <_printf_i+0x445>
840039c2:	90                   	nop
840039c3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
840039c8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
840039cb:	c9                   	leave  
840039cc:	c3                   	ret    

840039cd <_read_r>:
840039cd:	55                   	push   %ebp
840039ce:	89 e5                	mov    %esp,%ebp
840039d0:	83 ec 18             	sub    $0x18,%esp
840039d3:	c7 05 f0 63 00 84 00 	movl   $0x0,0x840063f0
840039da:	00 00 00 
840039dd:	83 ec 04             	sub    $0x4,%esp
840039e0:	ff 75 14             	push   0x14(%ebp)
840039e3:	ff 75 10             	push   0x10(%ebp)
840039e6:	ff 75 0c             	push   0xc(%ebp)
840039e9:	e8 a3 c7 ff ff       	call   84000191 <read>
840039ee:	83 c4 10             	add    $0x10,%esp
840039f1:	89 45 f4             	mov    %eax,-0xc(%ebp)
840039f4:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
840039f8:	75 14                	jne    84003a0e <_read_r+0x41>
840039fa:	a1 f0 63 00 84       	mov    0x840063f0,%eax
840039ff:	85 c0                	test   %eax,%eax
84003a01:	74 0b                	je     84003a0e <_read_r+0x41>
84003a03:	8b 15 f0 63 00 84    	mov    0x840063f0,%edx
84003a09:	8b 45 08             	mov    0x8(%ebp),%eax
84003a0c:	89 10                	mov    %edx,(%eax)
84003a0e:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003a11:	c9                   	leave  
84003a12:	c3                   	ret    

84003a13 <cleanup_glue>:
84003a13:	55                   	push   %ebp
84003a14:	89 e5                	mov    %esp,%ebp
84003a16:	83 ec 08             	sub    $0x8,%esp
84003a19:	8b 45 0c             	mov    0xc(%ebp),%eax
84003a1c:	8b 00                	mov    (%eax),%eax
84003a1e:	85 c0                	test   %eax,%eax
84003a20:	74 14                	je     84003a36 <cleanup_glue+0x23>
84003a22:	8b 45 0c             	mov    0xc(%ebp),%eax
84003a25:	8b 00                	mov    (%eax),%eax
84003a27:	83 ec 08             	sub    $0x8,%esp
84003a2a:	50                   	push   %eax
84003a2b:	ff 75 08             	push   0x8(%ebp)
84003a2e:	e8 e0 ff ff ff       	call   84003a13 <cleanup_glue>
84003a33:	83 c4 10             	add    $0x10,%esp
84003a36:	83 ec 08             	sub    $0x8,%esp
84003a39:	ff 75 0c             	push   0xc(%ebp)
84003a3c:	ff 75 08             	push   0x8(%ebp)
84003a3f:	e8 ab d8 ff ff       	call   840012ef <_free_r>
84003a44:	83 c4 10             	add    $0x10,%esp
84003a47:	90                   	nop
84003a48:	c9                   	leave  
84003a49:	c3                   	ret    

84003a4a <_reclaim_reent>:
84003a4a:	55                   	push   %ebp
84003a4b:	89 e5                	mov    %esp,%ebp
84003a4d:	83 ec 28             	sub    $0x28,%esp
84003a50:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84003a55:	39 45 08             	cmp    %eax,0x8(%ebp)
84003a58:	0f 84 49 01 00 00    	je     84003ba7 <_reclaim_reent+0x15d>
84003a5e:	8b 45 08             	mov    0x8(%ebp),%eax
84003a61:	8b 40 4c             	mov    0x4c(%eax),%eax
84003a64:	85 c0                	test   %eax,%eax
84003a66:	74 64                	je     84003acc <_reclaim_reent+0x82>
84003a68:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
84003a6f:	eb 3e                	jmp    84003aaf <_reclaim_reent+0x65>
84003a71:	8b 45 08             	mov    0x8(%ebp),%eax
84003a74:	8b 50 4c             	mov    0x4c(%eax),%edx
84003a77:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003a7a:	c1 e0 02             	shl    $0x2,%eax
84003a7d:	01 d0                	add    %edx,%eax
84003a7f:	8b 00                	mov    (%eax),%eax
84003a81:	89 45 f0             	mov    %eax,-0x10(%ebp)
84003a84:	eb 1f                	jmp    84003aa5 <_reclaim_reent+0x5b>
84003a86:	8b 45 f0             	mov    -0x10(%ebp),%eax
84003a89:	89 45 e8             	mov    %eax,-0x18(%ebp)
84003a8c:	8b 45 f0             	mov    -0x10(%ebp),%eax
84003a8f:	8b 00                	mov    (%eax),%eax
84003a91:	89 45 f0             	mov    %eax,-0x10(%ebp)
84003a94:	83 ec 08             	sub    $0x8,%esp
84003a97:	ff 75 e8             	push   -0x18(%ebp)
84003a9a:	ff 75 08             	push   0x8(%ebp)
84003a9d:	e8 4d d8 ff ff       	call   840012ef <_free_r>
84003aa2:	83 c4 10             	add    $0x10,%esp
84003aa5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
84003aa9:	75 db                	jne    84003a86 <_reclaim_reent+0x3c>
84003aab:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
84003aaf:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003ab2:	83 f8 1f             	cmp    $0x1f,%eax
84003ab5:	76 ba                	jbe    84003a71 <_reclaim_reent+0x27>
84003ab7:	8b 45 08             	mov    0x8(%ebp),%eax
84003aba:	8b 40 4c             	mov    0x4c(%eax),%eax
84003abd:	83 ec 08             	sub    $0x8,%esp
84003ac0:	50                   	push   %eax
84003ac1:	ff 75 08             	push   0x8(%ebp)
84003ac4:	e8 26 d8 ff ff       	call   840012ef <_free_r>
84003ac9:	83 c4 10             	add    $0x10,%esp
84003acc:	8b 45 08             	mov    0x8(%ebp),%eax
84003acf:	8b 40 40             	mov    0x40(%eax),%eax
84003ad2:	85 c0                	test   %eax,%eax
84003ad4:	74 15                	je     84003aeb <_reclaim_reent+0xa1>
84003ad6:	8b 45 08             	mov    0x8(%ebp),%eax
84003ad9:	8b 40 40             	mov    0x40(%eax),%eax
84003adc:	83 ec 08             	sub    $0x8,%esp
84003adf:	50                   	push   %eax
84003ae0:	ff 75 08             	push   0x8(%ebp)
84003ae3:	e8 07 d8 ff ff       	call   840012ef <_free_r>
84003ae8:	83 c4 10             	add    $0x10,%esp
84003aeb:	8b 45 08             	mov    0x8(%ebp),%eax
84003aee:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
84003af4:	85 c0                	test   %eax,%eax
84003af6:	74 50                	je     84003b48 <_reclaim_reent+0xfe>
84003af8:	8b 45 08             	mov    0x8(%ebp),%eax
84003afb:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
84003b01:	8b 55 08             	mov    0x8(%ebp),%edx
84003b04:	81 c2 4c 01 00 00    	add    $0x14c,%edx
84003b0a:	39 d0                	cmp    %edx,%eax
84003b0c:	74 3a                	je     84003b48 <_reclaim_reent+0xfe>
84003b0e:	8b 45 08             	mov    0x8(%ebp),%eax
84003b11:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
84003b17:	89 45 ec             	mov    %eax,-0x14(%ebp)
84003b1a:	eb 1f                	jmp    84003b3b <_reclaim_reent+0xf1>
84003b1c:	8b 45 ec             	mov    -0x14(%ebp),%eax
84003b1f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84003b22:	8b 45 ec             	mov    -0x14(%ebp),%eax
84003b25:	8b 00                	mov    (%eax),%eax
84003b27:	89 45 ec             	mov    %eax,-0x14(%ebp)
84003b2a:	83 ec 08             	sub    $0x8,%esp
84003b2d:	ff 75 e4             	push   -0x1c(%ebp)
84003b30:	ff 75 08             	push   0x8(%ebp)
84003b33:	e8 b7 d7 ff ff       	call   840012ef <_free_r>
84003b38:	83 c4 10             	add    $0x10,%esp
84003b3b:	8b 45 08             	mov    0x8(%ebp),%eax
84003b3e:	05 4c 01 00 00       	add    $0x14c,%eax
84003b43:	39 45 ec             	cmp    %eax,-0x14(%ebp)
84003b46:	75 d4                	jne    84003b1c <_reclaim_reent+0xd2>
84003b48:	8b 45 08             	mov    0x8(%ebp),%eax
84003b4b:	8b 40 54             	mov    0x54(%eax),%eax
84003b4e:	85 c0                	test   %eax,%eax
84003b50:	74 15                	je     84003b67 <_reclaim_reent+0x11d>
84003b52:	8b 45 08             	mov    0x8(%ebp),%eax
84003b55:	8b 40 54             	mov    0x54(%eax),%eax
84003b58:	83 ec 08             	sub    $0x8,%esp
84003b5b:	50                   	push   %eax
84003b5c:	ff 75 08             	push   0x8(%ebp)
84003b5f:	e8 8b d7 ff ff       	call   840012ef <_free_r>
84003b64:	83 c4 10             	add    $0x10,%esp
84003b67:	8b 45 08             	mov    0x8(%ebp),%eax
84003b6a:	8b 40 38             	mov    0x38(%eax),%eax
84003b6d:	85 c0                	test   %eax,%eax
84003b6f:	74 36                	je     84003ba7 <_reclaim_reent+0x15d>
84003b71:	8b 45 08             	mov    0x8(%ebp),%eax
84003b74:	8b 40 3c             	mov    0x3c(%eax),%eax
84003b77:	83 ec 0c             	sub    $0xc,%esp
84003b7a:	ff 75 08             	push   0x8(%ebp)
84003b7d:	ff d0                	call   *%eax
84003b7f:	83 c4 10             	add    $0x10,%esp
84003b82:	8b 45 08             	mov    0x8(%ebp),%eax
84003b85:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
84003b8b:	85 c0                	test   %eax,%eax
84003b8d:	74 18                	je     84003ba7 <_reclaim_reent+0x15d>
84003b8f:	8b 45 08             	mov    0x8(%ebp),%eax
84003b92:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
84003b98:	83 ec 08             	sub    $0x8,%esp
84003b9b:	50                   	push   %eax
84003b9c:	ff 75 08             	push   0x8(%ebp)
84003b9f:	e8 6f fe ff ff       	call   84003a13 <cleanup_glue>
84003ba4:	83 c4 10             	add    $0x10,%esp
84003ba7:	90                   	nop
84003ba8:	c9                   	leave  
84003ba9:	c3                   	ret    

84003baa <__srget_r>:
84003baa:	55                   	push   %ebp
84003bab:	89 e5                	mov    %esp,%ebp
84003bad:	53                   	push   %ebx
84003bae:	83 ec 14             	sub    $0x14,%esp
84003bb1:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84003bb4:	8b 45 08             	mov    0x8(%ebp),%eax
84003bb7:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003bba:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84003bbe:	74 18                	je     84003bd8 <__srget_r+0x2e>
84003bc0:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003bc3:	8b 40 38             	mov    0x38(%eax),%eax
84003bc6:	85 c0                	test   %eax,%eax
84003bc8:	75 0e                	jne    84003bd8 <__srget_r+0x2e>
84003bca:	83 ec 0c             	sub    $0xc,%esp
84003bcd:	ff 75 f4             	push   -0xc(%ebp)
84003bd0:	e8 0d d6 ff ff       	call   840011e2 <__sinit>
84003bd5:	83 c4 10             	add    $0x10,%esp
84003bd8:	83 ec 08             	sub    $0x8,%esp
84003bdb:	53                   	push   %ebx
84003bdc:	ff 75 08             	push   0x8(%ebp)
84003bdf:	e8 60 15 00 00       	call   84005144 <__srefill_r>
84003be4:	83 c4 10             	add    $0x10,%esp
84003be7:	85 c0                	test   %eax,%eax
84003be9:	75 18                	jne    84003c03 <__srget_r+0x59>
84003beb:	8b 43 04             	mov    0x4(%ebx),%eax
84003bee:	83 e8 01             	sub    $0x1,%eax
84003bf1:	89 43 04             	mov    %eax,0x4(%ebx)
84003bf4:	8b 03                	mov    (%ebx),%eax
84003bf6:	8d 50 01             	lea    0x1(%eax),%edx
84003bf9:	89 13                	mov    %edx,(%ebx)
84003bfb:	0f b6 00             	movzbl (%eax),%eax
84003bfe:	0f b6 c0             	movzbl %al,%eax
84003c01:	eb 05                	jmp    84003c08 <__srget_r+0x5e>
84003c03:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003c08:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84003c0b:	c9                   	leave  
84003c0c:	c3                   	ret    

84003c0d <__srget>:
84003c0d:	55                   	push   %ebp
84003c0e:	89 e5                	mov    %esp,%ebp
84003c10:	83 ec 08             	sub    $0x8,%esp
84003c13:	8b 55 08             	mov    0x8(%ebp),%edx
84003c16:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84003c1b:	83 ec 08             	sub    $0x8,%esp
84003c1e:	52                   	push   %edx
84003c1f:	50                   	push   %eax
84003c20:	e8 85 ff ff ff       	call   84003baa <__srget_r>
84003c25:	83 c4 10             	add    $0x10,%esp
84003c28:	c9                   	leave  
84003c29:	c3                   	ret    

84003c2a <__swbuf_r>:
84003c2a:	55                   	push   %ebp
84003c2b:	89 e5                	mov    %esp,%ebp
84003c2d:	57                   	push   %edi
84003c2e:	56                   	push   %esi
84003c2f:	53                   	push   %ebx
84003c30:	83 ec 1c             	sub    $0x1c,%esp
84003c33:	8b 7d 0c             	mov    0xc(%ebp),%edi
84003c36:	8b 5d 10             	mov    0x10(%ebp),%ebx
84003c39:	8b 45 08             	mov    0x8(%ebp),%eax
84003c3c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84003c3f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
84003c43:	74 18                	je     84003c5d <__swbuf_r+0x33>
84003c45:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84003c48:	8b 40 38             	mov    0x38(%eax),%eax
84003c4b:	85 c0                	test   %eax,%eax
84003c4d:	75 0e                	jne    84003c5d <__swbuf_r+0x33>
84003c4f:	83 ec 0c             	sub    $0xc,%esp
84003c52:	ff 75 e4             	push   -0x1c(%ebp)
84003c55:	e8 88 d5 ff ff       	call   840011e2 <__sinit>
84003c5a:	83 c4 10             	add    $0x10,%esp
84003c5d:	8b 43 18             	mov    0x18(%ebx),%eax
84003c60:	89 43 08             	mov    %eax,0x8(%ebx)
84003c63:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003c67:	98                   	cwtl   
84003c68:	83 e0 08             	and    $0x8,%eax
84003c6b:	85 c0                	test   %eax,%eax
84003c6d:	74 07                	je     84003c76 <__swbuf_r+0x4c>
84003c6f:	8b 43 10             	mov    0x10(%ebx),%eax
84003c72:	85 c0                	test   %eax,%eax
84003c74:	75 1d                	jne    84003c93 <__swbuf_r+0x69>
84003c76:	83 ec 08             	sub    $0x8,%esp
84003c79:	53                   	push   %ebx
84003c7a:	ff 75 08             	push   0x8(%ebp)
84003c7d:	e8 db 00 00 00       	call   84003d5d <__swsetup_r>
84003c82:	83 c4 10             	add    $0x10,%esp
84003c85:	85 c0                	test   %eax,%eax
84003c87:	74 0a                	je     84003c93 <__swbuf_r+0x69>
84003c89:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003c8e:	e9 a1 00 00 00       	jmp    84003d34 <__swbuf_r+0x10a>
84003c93:	89 f8                	mov    %edi,%eax
84003c95:	0f b6 f8             	movzbl %al,%edi
84003c98:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003c9c:	98                   	cwtl   
84003c9d:	25 00 20 00 00       	and    $0x2000,%eax
84003ca2:	85 c0                	test   %eax,%eax
84003ca4:	75 14                	jne    84003cba <__swbuf_r+0x90>
84003ca6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003caa:	80 cc 20             	or     $0x20,%ah
84003cad:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84003cb1:	8b 43 64             	mov    0x64(%ebx),%eax
84003cb4:	80 e4 df             	and    $0xdf,%ah
84003cb7:	89 43 64             	mov    %eax,0x64(%ebx)
84003cba:	8b 03                	mov    (%ebx),%eax
84003cbc:	8b 53 10             	mov    0x10(%ebx),%edx
84003cbf:	29 d0                	sub    %edx,%eax
84003cc1:	89 c6                	mov    %eax,%esi
84003cc3:	8b 43 14             	mov    0x14(%ebx),%eax
84003cc6:	39 c6                	cmp    %eax,%esi
84003cc8:	7c 1f                	jl     84003ce9 <__swbuf_r+0xbf>
84003cca:	83 ec 08             	sub    $0x8,%esp
84003ccd:	53                   	push   %ebx
84003cce:	ff 75 08             	push   0x8(%ebp)
84003cd1:	e8 86 d1 ff ff       	call   84000e5c <_fflush_r>
84003cd6:	83 c4 10             	add    $0x10,%esp
84003cd9:	85 c0                	test   %eax,%eax
84003cdb:	74 07                	je     84003ce4 <__swbuf_r+0xba>
84003cdd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003ce2:	eb 50                	jmp    84003d34 <__swbuf_r+0x10a>
84003ce4:	be 00 00 00 00       	mov    $0x0,%esi
84003ce9:	8b 43 08             	mov    0x8(%ebx),%eax
84003cec:	83 e8 01             	sub    $0x1,%eax
84003cef:	89 43 08             	mov    %eax,0x8(%ebx)
84003cf2:	8b 03                	mov    (%ebx),%eax
84003cf4:	8d 50 01             	lea    0x1(%eax),%edx
84003cf7:	89 13                	mov    %edx,(%ebx)
84003cf9:	89 fa                	mov    %edi,%edx
84003cfb:	88 10                	mov    %dl,(%eax)
84003cfd:	83 c6 01             	add    $0x1,%esi
84003d00:	8b 43 14             	mov    0x14(%ebx),%eax
84003d03:	39 c6                	cmp    %eax,%esi
84003d05:	74 11                	je     84003d18 <__swbuf_r+0xee>
84003d07:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003d0b:	98                   	cwtl   
84003d0c:	83 e0 01             	and    $0x1,%eax
84003d0f:	85 c0                	test   %eax,%eax
84003d11:	74 1f                	je     84003d32 <__swbuf_r+0x108>
84003d13:	83 ff 0a             	cmp    $0xa,%edi
84003d16:	75 1a                	jne    84003d32 <__swbuf_r+0x108>
84003d18:	83 ec 08             	sub    $0x8,%esp
84003d1b:	53                   	push   %ebx
84003d1c:	ff 75 08             	push   0x8(%ebp)
84003d1f:	e8 38 d1 ff ff       	call   84000e5c <_fflush_r>
84003d24:	83 c4 10             	add    $0x10,%esp
84003d27:	85 c0                	test   %eax,%eax
84003d29:	74 07                	je     84003d32 <__swbuf_r+0x108>
84003d2b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003d30:	eb 02                	jmp    84003d34 <__swbuf_r+0x10a>
84003d32:	89 f8                	mov    %edi,%eax
84003d34:	8d 65 f4             	lea    -0xc(%ebp),%esp
84003d37:	5b                   	pop    %ebx
84003d38:	5e                   	pop    %esi
84003d39:	5f                   	pop    %edi
84003d3a:	5d                   	pop    %ebp
84003d3b:	c3                   	ret    

84003d3c <__swbuf>:
84003d3c:	55                   	push   %ebp
84003d3d:	89 e5                	mov    %esp,%ebp
84003d3f:	83 ec 08             	sub    $0x8,%esp
84003d42:	8b 55 08             	mov    0x8(%ebp),%edx
84003d45:	8b 4d 0c             	mov    0xc(%ebp),%ecx
84003d48:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84003d4d:	83 ec 04             	sub    $0x4,%esp
84003d50:	51                   	push   %ecx
84003d51:	52                   	push   %edx
84003d52:	50                   	push   %eax
84003d53:	e8 d2 fe ff ff       	call   84003c2a <__swbuf_r>
84003d58:	83 c4 10             	add    $0x10,%esp
84003d5b:	c9                   	leave  
84003d5c:	c3                   	ret    

84003d5d <__swsetup_r>:
84003d5d:	55                   	push   %ebp
84003d5e:	89 e5                	mov    %esp,%ebp
84003d60:	53                   	push   %ebx
84003d61:	83 ec 14             	sub    $0x14,%esp
84003d64:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84003d67:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84003d6c:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003d6f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84003d73:	74 18                	je     84003d8d <__swsetup_r+0x30>
84003d75:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003d78:	8b 40 38             	mov    0x38(%eax),%eax
84003d7b:	85 c0                	test   %eax,%eax
84003d7d:	75 0e                	jne    84003d8d <__swsetup_r+0x30>
84003d7f:	83 ec 0c             	sub    $0xc,%esp
84003d82:	ff 75 f4             	push   -0xc(%ebp)
84003d85:	e8 58 d4 ff ff       	call   840011e2 <__sinit>
84003d8a:	83 c4 10             	add    $0x10,%esp
84003d8d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003d91:	98                   	cwtl   
84003d92:	83 e0 08             	and    $0x8,%eax
84003d95:	85 c0                	test   %eax,%eax
84003d97:	0f 85 82 00 00 00    	jne    84003e1f <__swsetup_r+0xc2>
84003d9d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003da1:	98                   	cwtl   
84003da2:	83 e0 10             	and    $0x10,%eax
84003da5:	85 c0                	test   %eax,%eax
84003da7:	75 1e                	jne    84003dc7 <__swsetup_r+0x6a>
84003da9:	8b 45 08             	mov    0x8(%ebp),%eax
84003dac:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
84003db2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003db6:	83 c8 40             	or     $0x40,%eax
84003db9:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84003dbd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003dc2:	e9 ec 00 00 00       	jmp    84003eb3 <__swsetup_r+0x156>
84003dc7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003dcb:	98                   	cwtl   
84003dcc:	83 e0 04             	and    $0x4,%eax
84003dcf:	85 c0                	test   %eax,%eax
84003dd1:	74 41                	je     84003e14 <__swsetup_r+0xb7>
84003dd3:	8b 43 30             	mov    0x30(%ebx),%eax
84003dd6:	85 c0                	test   %eax,%eax
84003dd8:	74 23                	je     84003dfd <__swsetup_r+0xa0>
84003dda:	8b 53 30             	mov    0x30(%ebx),%edx
84003ddd:	8d 43 40             	lea    0x40(%ebx),%eax
84003de0:	39 c2                	cmp    %eax,%edx
84003de2:	74 12                	je     84003df6 <__swsetup_r+0x99>
84003de4:	8b 43 30             	mov    0x30(%ebx),%eax
84003de7:	83 ec 08             	sub    $0x8,%esp
84003dea:	50                   	push   %eax
84003deb:	ff 75 08             	push   0x8(%ebp)
84003dee:	e8 fc d4 ff ff       	call   840012ef <_free_r>
84003df3:	83 c4 10             	add    $0x10,%esp
84003df6:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
84003dfd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e01:	83 e0 db             	and    $0xffffffdb,%eax
84003e04:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84003e08:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
84003e0f:	8b 43 10             	mov    0x10(%ebx),%eax
84003e12:	89 03                	mov    %eax,(%ebx)
84003e14:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e18:	83 c8 08             	or     $0x8,%eax
84003e1b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84003e1f:	8b 43 10             	mov    0x10(%ebx),%eax
84003e22:	85 c0                	test   %eax,%eax
84003e24:	75 2b                	jne    84003e51 <__swsetup_r+0xf4>
84003e26:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e2a:	98                   	cwtl   
84003e2b:	25 00 02 00 00       	and    $0x200,%eax
84003e30:	85 c0                	test   %eax,%eax
84003e32:	74 0e                	je     84003e42 <__swsetup_r+0xe5>
84003e34:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e38:	98                   	cwtl   
84003e39:	25 80 00 00 00       	and    $0x80,%eax
84003e3e:	85 c0                	test   %eax,%eax
84003e40:	74 0f                	je     84003e51 <__swsetup_r+0xf4>
84003e42:	83 ec 08             	sub    $0x8,%esp
84003e45:	53                   	push   %ebx
84003e46:	ff 75 08             	push   0x8(%ebp)
84003e49:	e8 b0 ee ff ff       	call   84002cfe <__smakebuf_r>
84003e4e:	83 c4 10             	add    $0x10,%esp
84003e51:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e55:	98                   	cwtl   
84003e56:	83 e0 01             	and    $0x1,%eax
84003e59:	85 c0                	test   %eax,%eax
84003e5b:	74 11                	je     84003e6e <__swsetup_r+0x111>
84003e5d:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
84003e64:	8b 43 14             	mov    0x14(%ebx),%eax
84003e67:	f7 d8                	neg    %eax
84003e69:	89 43 18             	mov    %eax,0x18(%ebx)
84003e6c:	eb 19                	jmp    84003e87 <__swsetup_r+0x12a>
84003e6e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e72:	98                   	cwtl   
84003e73:	83 e0 02             	and    $0x2,%eax
84003e76:	85 c0                	test   %eax,%eax
84003e78:	75 05                	jne    84003e7f <__swsetup_r+0x122>
84003e7a:	8b 43 14             	mov    0x14(%ebx),%eax
84003e7d:	eb 05                	jmp    84003e84 <__swsetup_r+0x127>
84003e7f:	b8 00 00 00 00       	mov    $0x0,%eax
84003e84:	89 43 08             	mov    %eax,0x8(%ebx)
84003e87:	8b 43 10             	mov    0x10(%ebx),%eax
84003e8a:	85 c0                	test   %eax,%eax
84003e8c:	75 20                	jne    84003eae <__swsetup_r+0x151>
84003e8e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e92:	98                   	cwtl   
84003e93:	25 80 00 00 00       	and    $0x80,%eax
84003e98:	85 c0                	test   %eax,%eax
84003e9a:	74 12                	je     84003eae <__swsetup_r+0x151>
84003e9c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003ea0:	83 c8 40             	or     $0x40,%eax
84003ea3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84003ea7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003eac:	eb 05                	jmp    84003eb3 <__swsetup_r+0x156>
84003eae:	b8 00 00 00 00       	mov    $0x0,%eax
84003eb3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84003eb6:	c9                   	leave  
84003eb7:	c3                   	ret    

84003eb8 <__sputc_r>:
84003eb8:	55                   	push   %ebp
84003eb9:	89 e5                	mov    %esp,%ebp
84003ebb:	83 ec 08             	sub    $0x8,%esp
84003ebe:	8b 45 10             	mov    0x10(%ebp),%eax
84003ec1:	8b 40 08             	mov    0x8(%eax),%eax
84003ec4:	8d 50 ff             	lea    -0x1(%eax),%edx
84003ec7:	8b 45 10             	mov    0x10(%ebp),%eax
84003eca:	89 50 08             	mov    %edx,0x8(%eax)
84003ecd:	8b 45 10             	mov    0x10(%ebp),%eax
84003ed0:	8b 40 08             	mov    0x8(%eax),%eax
84003ed3:	85 c0                	test   %eax,%eax
84003ed5:	79 17                	jns    84003eee <__sputc_r+0x36>
84003ed7:	8b 45 10             	mov    0x10(%ebp),%eax
84003eda:	8b 50 08             	mov    0x8(%eax),%edx
84003edd:	8b 45 10             	mov    0x10(%ebp),%eax
84003ee0:	8b 40 18             	mov    0x18(%eax),%eax
84003ee3:	39 c2                	cmp    %eax,%edx
84003ee5:	7c 21                	jl     84003f08 <__sputc_r+0x50>
84003ee7:	8b 45 0c             	mov    0xc(%ebp),%eax
84003eea:	3c 0a                	cmp    $0xa,%al
84003eec:	74 1a                	je     84003f08 <__sputc_r+0x50>
84003eee:	8b 45 10             	mov    0x10(%ebp),%eax
84003ef1:	8b 00                	mov    (%eax),%eax
84003ef3:	8d 48 01             	lea    0x1(%eax),%ecx
84003ef6:	8b 55 10             	mov    0x10(%ebp),%edx
84003ef9:	89 0a                	mov    %ecx,(%edx)
84003efb:	8b 55 0c             	mov    0xc(%ebp),%edx
84003efe:	88 10                	mov    %dl,(%eax)
84003f00:	0f b6 00             	movzbl (%eax),%eax
84003f03:	0f b6 c0             	movzbl %al,%eax
84003f06:	eb 14                	jmp    84003f1c <__sputc_r+0x64>
84003f08:	83 ec 04             	sub    $0x4,%esp
84003f0b:	ff 75 10             	push   0x10(%ebp)
84003f0e:	ff 75 0c             	push   0xc(%ebp)
84003f11:	ff 75 08             	push   0x8(%ebp)
84003f14:	e8 11 fd ff ff       	call   84003c2a <__swbuf_r>
84003f19:	83 c4 10             	add    $0x10,%esp
84003f1c:	c9                   	leave  
84003f1d:	c3                   	ret    

84003f1e <__fputwc>:
84003f1e:	55                   	push   %ebp
84003f1f:	89 e5                	mov    %esp,%ebp
84003f21:	83 ec 18             	sub    $0x18,%esp
84003f24:	e8 d8 06 00 00       	call   84004601 <__locale_mb_cur_max>
84003f29:	83 f8 01             	cmp    $0x1,%eax
84003f2c:	75 1e                	jne    84003f4c <__fputwc+0x2e>
84003f2e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
84003f32:	7e 18                	jle    84003f4c <__fputwc+0x2e>
84003f34:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
84003f3b:	7f 0f                	jg     84003f4c <__fputwc+0x2e>
84003f3d:	8b 45 0c             	mov    0xc(%ebp),%eax
84003f40:	88 45 ef             	mov    %al,-0x11(%ebp)
84003f43:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
84003f4a:	eb 3c                	jmp    84003f88 <__fputwc+0x6a>
84003f4c:	8b 45 10             	mov    0x10(%ebp),%eax
84003f4f:	83 c0 5c             	add    $0x5c,%eax
84003f52:	50                   	push   %eax
84003f53:	ff 75 0c             	push   0xc(%ebp)
84003f56:	8d 45 ef             	lea    -0x11(%ebp),%eax
84003f59:	50                   	push   %eax
84003f5a:	ff 75 08             	push   0x8(%ebp)
84003f5d:	e8 9c 14 00 00       	call   840053fe <_wcrtomb_r>
84003f62:	83 c4 10             	add    $0x10,%esp
84003f65:	89 45 f0             	mov    %eax,-0x10(%ebp)
84003f68:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
84003f6c:	75 1a                	jne    84003f88 <__fputwc+0x6a>
84003f6e:	8b 45 10             	mov    0x10(%ebp),%eax
84003f71:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
84003f75:	83 c8 40             	or     $0x40,%eax
84003f78:	89 c2                	mov    %eax,%edx
84003f7a:	8b 45 10             	mov    0x10(%ebp),%eax
84003f7d:	66 89 50 0c          	mov    %dx,0xc(%eax)
84003f81:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003f86:	eb 44                	jmp    84003fcc <__fputwc+0xae>
84003f88:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
84003f8f:	eb 30                	jmp    84003fc1 <__fputwc+0xa3>
84003f91:	8d 55 ef             	lea    -0x11(%ebp),%edx
84003f94:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003f97:	01 d0                	add    %edx,%eax
84003f99:	0f b6 00             	movzbl (%eax),%eax
84003f9c:	0f b6 c0             	movzbl %al,%eax
84003f9f:	83 ec 04             	sub    $0x4,%esp
84003fa2:	ff 75 10             	push   0x10(%ebp)
84003fa5:	50                   	push   %eax
84003fa6:	ff 75 08             	push   0x8(%ebp)
84003fa9:	e8 0a ff ff ff       	call   84003eb8 <__sputc_r>
84003fae:	83 c4 10             	add    $0x10,%esp
84003fb1:	83 f8 ff             	cmp    $0xffffffff,%eax
84003fb4:	75 07                	jne    84003fbd <__fputwc+0x9f>
84003fb6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003fbb:	eb 0f                	jmp    84003fcc <__fputwc+0xae>
84003fbd:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
84003fc1:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003fc4:	3b 45 f0             	cmp    -0x10(%ebp),%eax
84003fc7:	72 c8                	jb     84003f91 <__fputwc+0x73>
84003fc9:	8b 45 0c             	mov    0xc(%ebp),%eax
84003fcc:	c9                   	leave  
84003fcd:	c3                   	ret    

84003fce <_fputwc_r>:
84003fce:	55                   	push   %ebp
84003fcf:	89 e5                	mov    %esp,%ebp
84003fd1:	83 ec 18             	sub    $0x18,%esp
84003fd4:	8b 45 10             	mov    0x10(%ebp),%eax
84003fd7:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
84003fdb:	98                   	cwtl   
84003fdc:	25 00 20 00 00       	and    $0x2000,%eax
84003fe1:	85 c0                	test   %eax,%eax
84003fe3:	75 24                	jne    84004009 <_fputwc_r+0x3b>
84003fe5:	8b 45 10             	mov    0x10(%ebp),%eax
84003fe8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
84003fec:	80 cc 20             	or     $0x20,%ah
84003fef:	89 c2                	mov    %eax,%edx
84003ff1:	8b 45 10             	mov    0x10(%ebp),%eax
84003ff4:	66 89 50 0c          	mov    %dx,0xc(%eax)
84003ff8:	8b 45 10             	mov    0x10(%ebp),%eax
84003ffb:	8b 40 64             	mov    0x64(%eax),%eax
84003ffe:	80 cc 20             	or     $0x20,%ah
84004001:	89 c2                	mov    %eax,%edx
84004003:	8b 45 10             	mov    0x10(%ebp),%eax
84004006:	89 50 64             	mov    %edx,0x64(%eax)
84004009:	83 ec 04             	sub    $0x4,%esp
8400400c:	ff 75 10             	push   0x10(%ebp)
8400400f:	ff 75 0c             	push   0xc(%ebp)
84004012:	ff 75 08             	push   0x8(%ebp)
84004015:	e8 04 ff ff ff       	call   84003f1e <__fputwc>
8400401a:	83 c4 10             	add    $0x10,%esp
8400401d:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004020:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004023:	c9                   	leave  
84004024:	c3                   	ret    

84004025 <fputwc>:
84004025:	55                   	push   %ebp
84004026:	89 e5                	mov    %esp,%ebp
84004028:	83 ec 18             	sub    $0x18,%esp
8400402b:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84004030:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004033:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004036:	89 45 f0             	mov    %eax,-0x10(%ebp)
84004039:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8400403d:	74 18                	je     84004057 <fputwc+0x32>
8400403f:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004042:	8b 40 38             	mov    0x38(%eax),%eax
84004045:	85 c0                	test   %eax,%eax
84004047:	75 0e                	jne    84004057 <fputwc+0x32>
84004049:	83 ec 0c             	sub    $0xc,%esp
8400404c:	ff 75 f0             	push   -0x10(%ebp)
8400404f:	e8 8e d1 ff ff       	call   840011e2 <__sinit>
84004054:	83 c4 10             	add    $0x10,%esp
84004057:	83 ec 04             	sub    $0x4,%esp
8400405a:	ff 75 0c             	push   0xc(%ebp)
8400405d:	ff 75 08             	push   0x8(%ebp)
84004060:	ff 75 f4             	push   -0xc(%ebp)
84004063:	e8 66 ff ff ff       	call   84003fce <_fputwc_r>
84004068:	83 c4 10             	add    $0x10,%esp
8400406b:	c9                   	leave  
8400406c:	c3                   	ret    

8400406d <_fstat_r>:
8400406d:	55                   	push   %ebp
8400406e:	89 e5                	mov    %esp,%ebp
84004070:	83 ec 18             	sub    $0x18,%esp
84004073:	c7 05 f0 63 00 84 00 	movl   $0x0,0x840063f0
8400407a:	00 00 00 
8400407d:	83 ec 08             	sub    $0x8,%esp
84004080:	ff 75 10             	push   0x10(%ebp)
84004083:	ff 75 0c             	push   0xc(%ebp)
84004086:	e8 cf c1 ff ff       	call   8400025a <fstat>
8400408b:	83 c4 10             	add    $0x10,%esp
8400408e:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004091:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84004095:	75 14                	jne    840040ab <_fstat_r+0x3e>
84004097:	a1 f0 63 00 84       	mov    0x840063f0,%eax
8400409c:	85 c0                	test   %eax,%eax
8400409e:	74 0b                	je     840040ab <_fstat_r+0x3e>
840040a0:	8b 15 f0 63 00 84    	mov    0x840063f0,%edx
840040a6:	8b 45 08             	mov    0x8(%ebp),%eax
840040a9:	89 10                	mov    %edx,(%eax)
840040ab:	8b 45 f4             	mov    -0xc(%ebp),%eax
840040ae:	c9                   	leave  
840040af:	c3                   	ret    

840040b0 <__sfvwrite_r>:
840040b0:	55                   	push   %ebp
840040b1:	89 e5                	mov    %esp,%ebp
840040b3:	57                   	push   %edi
840040b4:	56                   	push   %esi
840040b5:	53                   	push   %ebx
840040b6:	83 ec 3c             	sub    $0x3c,%esp
840040b9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
840040bc:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
840040c3:	8b 45 10             	mov    0x10(%ebp),%eax
840040c6:	8b 78 08             	mov    0x8(%eax),%edi
840040c9:	85 ff                	test   %edi,%edi
840040cb:	75 0a                	jne    840040d7 <__sfvwrite_r+0x27>
840040cd:	b8 00 00 00 00       	mov    $0x0,%eax
840040d2:	e9 6f 04 00 00       	jmp    84004546 <__sfvwrite_r+0x496>
840040d7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840040db:	98                   	cwtl   
840040dc:	83 e0 08             	and    $0x8,%eax
840040df:	85 c0                	test   %eax,%eax
840040e1:	74 07                	je     840040ea <__sfvwrite_r+0x3a>
840040e3:	8b 43 10             	mov    0x10(%ebx),%eax
840040e6:	85 c0                	test   %eax,%eax
840040e8:	75 1d                	jne    84004107 <__sfvwrite_r+0x57>
840040ea:	83 ec 08             	sub    $0x8,%esp
840040ed:	53                   	push   %ebx
840040ee:	ff 75 08             	push   0x8(%ebp)
840040f1:	e8 67 fc ff ff       	call   84003d5d <__swsetup_r>
840040f6:	83 c4 10             	add    $0x10,%esp
840040f9:	85 c0                	test   %eax,%eax
840040fb:	74 0a                	je     84004107 <__sfvwrite_r+0x57>
840040fd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84004102:	e9 3f 04 00 00       	jmp    84004546 <__sfvwrite_r+0x496>
84004107:	8b 45 10             	mov    0x10(%ebp),%eax
8400410a:	8b 00                	mov    (%eax),%eax
8400410c:	89 45 c0             	mov    %eax,-0x40(%ebp)
8400410f:	bf 00 00 00 00       	mov    $0x0,%edi
84004114:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84004118:	98                   	cwtl   
84004119:	83 e0 02             	and    $0x2,%eax
8400411c:	85 c0                	test   %eax,%eax
8400411e:	74 68                	je     84004188 <__sfvwrite_r+0xd8>
84004120:	eb 11                	jmp    84004133 <__sfvwrite_r+0x83>
84004122:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004125:	8b 08                	mov    (%eax),%ecx
84004127:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
8400412a:	8b 78 04             	mov    0x4(%eax),%edi
8400412d:	83 c0 08             	add    $0x8,%eax
84004130:	89 45 c0             	mov    %eax,-0x40(%ebp)
84004133:	85 ff                	test   %edi,%edi
84004135:	74 eb                	je     84004122 <__sfvwrite_r+0x72>
84004137:	8b 4b 24             	mov    0x24(%ebx),%ecx
8400413a:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
8400413f:	39 c7                	cmp    %eax,%edi
84004141:	0f 46 c7             	cmovbe %edi,%eax
84004144:	89 c2                	mov    %eax,%edx
84004146:	8b 43 1c             	mov    0x1c(%ebx),%eax
84004149:	52                   	push   %edx
8400414a:	ff 75 c4             	push   -0x3c(%ebp)
8400414d:	50                   	push   %eax
8400414e:	ff 75 08             	push   0x8(%ebp)
84004151:	ff d1                	call   *%ecx
84004153:	83 c4 10             	add    $0x10,%esp
84004156:	89 c6                	mov    %eax,%esi
84004158:	85 f6                	test   %esi,%esi
8400415a:	0f 8e cf 03 00 00    	jle    8400452f <__sfvwrite_r+0x47f>
84004160:	89 f0                	mov    %esi,%eax
84004162:	01 45 c4             	add    %eax,-0x3c(%ebp)
84004165:	89 f0                	mov    %esi,%eax
84004167:	29 c7                	sub    %eax,%edi
84004169:	8b 45 10             	mov    0x10(%ebp),%eax
8400416c:	8b 40 08             	mov    0x8(%eax),%eax
8400416f:	89 f2                	mov    %esi,%edx
84004171:	29 d0                	sub    %edx,%eax
84004173:	8b 4d 10             	mov    0x10(%ebp),%ecx
84004176:	89 41 08             	mov    %eax,0x8(%ecx)
84004179:	8b 45 10             	mov    0x10(%ebp),%eax
8400417c:	8b 40 08             	mov    0x8(%eax),%eax
8400417f:	85 c0                	test   %eax,%eax
84004181:	75 b0                	jne    84004133 <__sfvwrite_r+0x83>
84004183:	e9 a0 03 00 00       	jmp    84004528 <__sfvwrite_r+0x478>
84004188:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400418c:	98                   	cwtl   
8400418d:	83 e0 01             	and    $0x1,%eax
84004190:	85 c0                	test   %eax,%eax
84004192:	0f 85 44 02 00 00    	jne    840043dc <__sfvwrite_r+0x32c>
84004198:	eb 11                	jmp    840041ab <__sfvwrite_r+0xfb>
8400419a:	8b 45 c0             	mov    -0x40(%ebp),%eax
8400419d:	8b 08                	mov    (%eax),%ecx
8400419f:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
840041a2:	8b 78 04             	mov    0x4(%eax),%edi
840041a5:	83 c0 08             	add    $0x8,%eax
840041a8:	89 45 c0             	mov    %eax,-0x40(%ebp)
840041ab:	85 ff                	test   %edi,%edi
840041ad:	74 eb                	je     8400419a <__sfvwrite_r+0xea>
840041af:	8b 73 08             	mov    0x8(%ebx),%esi
840041b2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840041b6:	98                   	cwtl   
840041b7:	25 00 02 00 00       	and    $0x200,%eax
840041bc:	85 c0                	test   %eax,%eax
840041be:	0f 84 4f 01 00 00    	je     84004313 <__sfvwrite_r+0x263>
840041c4:	89 f0                	mov    %esi,%eax
840041c6:	39 c7                	cmp    %eax,%edi
840041c8:	0f 82 12 01 00 00    	jb     840042e0 <__sfvwrite_r+0x230>
840041ce:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840041d2:	98                   	cwtl   
840041d3:	25 80 04 00 00       	and    $0x480,%eax
840041d8:	85 c0                	test   %eax,%eax
840041da:	0f 84 00 01 00 00    	je     840042e0 <__sfvwrite_r+0x230>
840041e0:	8b 03                	mov    (%ebx),%eax
840041e2:	8b 53 10             	mov    0x10(%ebx),%edx
840041e5:	29 d0                	sub    %edx,%eax
840041e7:	89 45 d0             	mov    %eax,-0x30(%ebp)
840041ea:	8b 53 14             	mov    0x14(%ebx),%edx
840041ed:	89 d0                	mov    %edx,%eax
840041ef:	01 c0                	add    %eax,%eax
840041f1:	01 d0                	add    %edx,%eax
840041f3:	89 c2                	mov    %eax,%edx
840041f5:	c1 ea 1f             	shr    $0x1f,%edx
840041f8:	01 d0                	add    %edx,%eax
840041fa:	d1 f8                	sar    %eax
840041fc:	89 45 d8             	mov    %eax,-0x28(%ebp)
840041ff:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004202:	01 f8                	add    %edi,%eax
84004204:	8d 50 01             	lea    0x1(%eax),%edx
84004207:	8b 45 d8             	mov    -0x28(%ebp),%eax
8400420a:	39 c2                	cmp    %eax,%edx
8400420c:	76 0b                	jbe    84004219 <__sfvwrite_r+0x169>
8400420e:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004211:	01 f8                	add    %edi,%eax
84004213:	83 c0 01             	add    $0x1,%eax
84004216:	89 45 d8             	mov    %eax,-0x28(%ebp)
84004219:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400421d:	98                   	cwtl   
8400421e:	25 00 04 00 00       	and    $0x400,%eax
84004223:	85 c0                	test   %eax,%eax
84004225:	74 4f                	je     84004276 <__sfvwrite_r+0x1c6>
84004227:	8b 45 d8             	mov    -0x28(%ebp),%eax
8400422a:	83 ec 08             	sub    $0x8,%esp
8400422d:	50                   	push   %eax
8400422e:	ff 75 08             	push   0x8(%ebp)
84004231:	e8 e0 d9 ff ff       	call   84001c16 <_malloc_r>
84004236:	83 c4 10             	add    $0x10,%esp
84004239:	89 45 dc             	mov    %eax,-0x24(%ebp)
8400423c:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
84004240:	75 0e                	jne    84004250 <__sfvwrite_r+0x1a0>
84004242:	8b 45 08             	mov    0x8(%ebp),%eax
84004245:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8400424b:	e9 e6 02 00 00       	jmp    84004536 <__sfvwrite_r+0x486>
84004250:	8b 55 d0             	mov    -0x30(%ebp),%edx
84004253:	8b 43 10             	mov    0x10(%ebx),%eax
84004256:	83 ec 04             	sub    $0x4,%esp
84004259:	52                   	push   %edx
8400425a:	50                   	push   %eax
8400425b:	ff 75 dc             	push   -0x24(%ebp)
8400425e:	e8 05 05 00 00       	call   84004768 <memcpy>
84004263:	83 c4 10             	add    $0x10,%esp
84004266:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400426a:	66 25 7f fb          	and    $0xfb7f,%ax
8400426e:	0c 80                	or     $0x80,%al
84004270:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84004274:	eb 49                	jmp    840042bf <__sfvwrite_r+0x20f>
84004276:	8b 55 d8             	mov    -0x28(%ebp),%edx
84004279:	8b 43 10             	mov    0x10(%ebx),%eax
8400427c:	83 ec 04             	sub    $0x4,%esp
8400427f:	52                   	push   %edx
84004280:	50                   	push   %eax
84004281:	ff 75 08             	push   0x8(%ebp)
84004284:	e8 b4 05 00 00       	call   8400483d <_realloc_r>
84004289:	83 c4 10             	add    $0x10,%esp
8400428c:	89 45 dc             	mov    %eax,-0x24(%ebp)
8400428f:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
84004293:	75 2a                	jne    840042bf <__sfvwrite_r+0x20f>
84004295:	8b 43 10             	mov    0x10(%ebx),%eax
84004298:	83 ec 08             	sub    $0x8,%esp
8400429b:	50                   	push   %eax
8400429c:	ff 75 08             	push   0x8(%ebp)
8400429f:	e8 4b d0 ff ff       	call   840012ef <_free_r>
840042a4:	83 c4 10             	add    $0x10,%esp
840042a7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840042ab:	24 7f                	and    $0x7f,%al
840042ad:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840042b1:	8b 45 08             	mov    0x8(%ebp),%eax
840042b4:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
840042ba:	e9 77 02 00 00       	jmp    84004536 <__sfvwrite_r+0x486>
840042bf:	8b 45 dc             	mov    -0x24(%ebp),%eax
840042c2:	89 43 10             	mov    %eax,0x10(%ebx)
840042c5:	8b 55 d0             	mov    -0x30(%ebp),%edx
840042c8:	8b 45 dc             	mov    -0x24(%ebp),%eax
840042cb:	01 d0                	add    %edx,%eax
840042cd:	89 03                	mov    %eax,(%ebx)
840042cf:	8b 45 d8             	mov    -0x28(%ebp),%eax
840042d2:	89 43 14             	mov    %eax,0x14(%ebx)
840042d5:	89 fe                	mov    %edi,%esi
840042d7:	8b 45 d8             	mov    -0x28(%ebp),%eax
840042da:	2b 45 d0             	sub    -0x30(%ebp),%eax
840042dd:	89 43 08             	mov    %eax,0x8(%ebx)
840042e0:	89 f0                	mov    %esi,%eax
840042e2:	39 c7                	cmp    %eax,%edi
840042e4:	73 02                	jae    840042e8 <__sfvwrite_r+0x238>
840042e6:	89 fe                	mov    %edi,%esi
840042e8:	89 f2                	mov    %esi,%edx
840042ea:	8b 03                	mov    (%ebx),%eax
840042ec:	83 ec 04             	sub    $0x4,%esp
840042ef:	52                   	push   %edx
840042f0:	ff 75 c4             	push   -0x3c(%ebp)
840042f3:	50                   	push   %eax
840042f4:	e8 b7 04 00 00       	call   840047b0 <memmove>
840042f9:	83 c4 10             	add    $0x10,%esp
840042fc:	8b 43 08             	mov    0x8(%ebx),%eax
840042ff:	29 f0                	sub    %esi,%eax
84004301:	89 43 08             	mov    %eax,0x8(%ebx)
84004304:	8b 03                	mov    (%ebx),%eax
84004306:	89 f2                	mov    %esi,%edx
84004308:	01 d0                	add    %edx,%eax
8400430a:	89 03                	mov    %eax,(%ebx)
8400430c:	89 fe                	mov    %edi,%esi
8400430e:	e9 9d 00 00 00       	jmp    840043b0 <__sfvwrite_r+0x300>
84004313:	8b 13                	mov    (%ebx),%edx
84004315:	8b 43 10             	mov    0x10(%ebx),%eax
84004318:	39 c2                	cmp    %eax,%edx
8400431a:	77 07                	ja     84004323 <__sfvwrite_r+0x273>
8400431c:	8b 43 14             	mov    0x14(%ebx),%eax
8400431f:	39 c7                	cmp    %eax,%edi
84004321:	73 4c                	jae    8400436f <__sfvwrite_r+0x2bf>
84004323:	89 f0                	mov    %esi,%eax
84004325:	39 c7                	cmp    %eax,%edi
84004327:	0f 46 c7             	cmovbe %edi,%eax
8400432a:	89 c6                	mov    %eax,%esi
8400432c:	89 f2                	mov    %esi,%edx
8400432e:	8b 03                	mov    (%ebx),%eax
84004330:	83 ec 04             	sub    $0x4,%esp
84004333:	52                   	push   %edx
84004334:	ff 75 c4             	push   -0x3c(%ebp)
84004337:	50                   	push   %eax
84004338:	e8 73 04 00 00       	call   840047b0 <memmove>
8400433d:	83 c4 10             	add    $0x10,%esp
84004340:	8b 43 08             	mov    0x8(%ebx),%eax
84004343:	29 f0                	sub    %esi,%eax
84004345:	89 43 08             	mov    %eax,0x8(%ebx)
84004348:	8b 03                	mov    (%ebx),%eax
8400434a:	89 f2                	mov    %esi,%edx
8400434c:	01 d0                	add    %edx,%eax
8400434e:	89 03                	mov    %eax,(%ebx)
84004350:	8b 43 08             	mov    0x8(%ebx),%eax
84004353:	85 c0                	test   %eax,%eax
84004355:	75 58                	jne    840043af <__sfvwrite_r+0x2ff>
84004357:	83 ec 08             	sub    $0x8,%esp
8400435a:	53                   	push   %ebx
8400435b:	ff 75 08             	push   0x8(%ebp)
8400435e:	e8 f9 ca ff ff       	call   84000e5c <_fflush_r>
84004363:	83 c4 10             	add    $0x10,%esp
84004366:	85 c0                	test   %eax,%eax
84004368:	74 45                	je     840043af <__sfvwrite_r+0x2ff>
8400436a:	e9 c7 01 00 00       	jmp    84004536 <__sfvwrite_r+0x486>
8400436f:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
84004375:	77 04                	ja     8400437b <__sfvwrite_r+0x2cb>
84004377:	89 f8                	mov    %edi,%eax
84004379:	eb 05                	jmp    84004380 <__sfvwrite_r+0x2d0>
8400437b:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
84004380:	8b 4b 14             	mov    0x14(%ebx),%ecx
84004383:	99                   	cltd   
84004384:	f7 f9                	idiv   %ecx
84004386:	89 c2                	mov    %eax,%edx
84004388:	8b 43 14             	mov    0x14(%ebx),%eax
8400438b:	89 d6                	mov    %edx,%esi
8400438d:	0f af f0             	imul   %eax,%esi
84004390:	8b 53 24             	mov    0x24(%ebx),%edx
84004393:	8b 43 1c             	mov    0x1c(%ebx),%eax
84004396:	56                   	push   %esi
84004397:	ff 75 c4             	push   -0x3c(%ebp)
8400439a:	50                   	push   %eax
8400439b:	ff 75 08             	push   0x8(%ebp)
8400439e:	ff d2                	call   *%edx
840043a0:	83 c4 10             	add    $0x10,%esp
840043a3:	89 c6                	mov    %eax,%esi
840043a5:	85 f6                	test   %esi,%esi
840043a7:	0f 8e 85 01 00 00    	jle    84004532 <__sfvwrite_r+0x482>
840043ad:	eb 01                	jmp    840043b0 <__sfvwrite_r+0x300>
840043af:	90                   	nop
840043b0:	89 f0                	mov    %esi,%eax
840043b2:	01 45 c4             	add    %eax,-0x3c(%ebp)
840043b5:	89 f0                	mov    %esi,%eax
840043b7:	29 c7                	sub    %eax,%edi
840043b9:	8b 45 10             	mov    0x10(%ebp),%eax
840043bc:	8b 40 08             	mov    0x8(%eax),%eax
840043bf:	89 f2                	mov    %esi,%edx
840043c1:	29 d0                	sub    %edx,%eax
840043c3:	8b 4d 10             	mov    0x10(%ebp),%ecx
840043c6:	89 41 08             	mov    %eax,0x8(%ecx)
840043c9:	8b 45 10             	mov    0x10(%ebp),%eax
840043cc:	8b 40 08             	mov    0x8(%eax),%eax
840043cf:	85 c0                	test   %eax,%eax
840043d1:	0f 85 d4 fd ff ff    	jne    840041ab <__sfvwrite_r+0xfb>
840043d7:	e9 4c 01 00 00       	jmp    84004528 <__sfvwrite_r+0x478>
840043dc:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
840043e3:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
840043ea:	eb 18                	jmp    84004404 <__sfvwrite_r+0x354>
840043ec:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
840043f3:	8b 45 c0             	mov    -0x40(%ebp),%eax
840043f6:	8b 08                	mov    (%eax),%ecx
840043f8:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
840043fb:	8b 78 04             	mov    0x4(%eax),%edi
840043fe:	83 c0 08             	add    $0x8,%eax
84004401:	89 45 c0             	mov    %eax,-0x40(%ebp)
84004404:	85 ff                	test   %edi,%edi
84004406:	74 e4                	je     840043ec <__sfvwrite_r+0x33c>
84004408:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8400440c:	75 32                	jne    84004440 <__sfvwrite_r+0x390>
8400440e:	83 ec 04             	sub    $0x4,%esp
84004411:	57                   	push   %edi
84004412:	6a 0a                	push   $0xa
84004414:	8b 75 c4             	mov    -0x3c(%ebp),%esi
84004417:	56                   	push   %esi
84004418:	e8 b3 02 00 00       	call   840046d0 <memchr>
8400441d:	83 c4 10             	add    $0x10,%esp
84004420:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004423:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
84004427:	74 0a                	je     84004433 <__sfvwrite_r+0x383>
84004429:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8400442c:	83 c0 01             	add    $0x1,%eax
8400442f:	29 f0                	sub    %esi,%eax
84004431:	eb 03                	jmp    84004436 <__sfvwrite_r+0x386>
84004433:	8d 47 01             	lea    0x1(%edi),%eax
84004436:	89 45 e0             	mov    %eax,-0x20(%ebp)
84004439:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
84004440:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004443:	39 c7                	cmp    %eax,%edi
84004445:	0f 46 c7             	cmovbe %edi,%eax
84004448:	89 c1                	mov    %eax,%ecx
8400444a:	8b 53 08             	mov    0x8(%ebx),%edx
8400444d:	8b 43 14             	mov    0x14(%ebx),%eax
84004450:	8d 34 02             	lea    (%edx,%eax,1),%esi
84004453:	8b 13                	mov    (%ebx),%edx
84004455:	8b 43 10             	mov    0x10(%ebx),%eax
84004458:	39 c2                	cmp    %eax,%edx
8400445a:	76 38                	jbe    84004494 <__sfvwrite_r+0x3e4>
8400445c:	39 f1                	cmp    %esi,%ecx
8400445e:	7e 34                	jle    84004494 <__sfvwrite_r+0x3e4>
84004460:	89 f2                	mov    %esi,%edx
84004462:	8b 03                	mov    (%ebx),%eax
84004464:	83 ec 04             	sub    $0x4,%esp
84004467:	52                   	push   %edx
84004468:	ff 75 c4             	push   -0x3c(%ebp)
8400446b:	50                   	push   %eax
8400446c:	e8 3f 03 00 00       	call   840047b0 <memmove>
84004471:	83 c4 10             	add    $0x10,%esp
84004474:	8b 03                	mov    (%ebx),%eax
84004476:	89 f2                	mov    %esi,%edx
84004478:	01 d0                	add    %edx,%eax
8400447a:	89 03                	mov    %eax,(%ebx)
8400447c:	83 ec 08             	sub    $0x8,%esp
8400447f:	53                   	push   %ebx
84004480:	ff 75 08             	push   0x8(%ebp)
84004483:	e8 d4 c9 ff ff       	call   84000e5c <_fflush_r>
84004488:	83 c4 10             	add    $0x10,%esp
8400448b:	85 c0                	test   %eax,%eax
8400448d:	74 4f                	je     840044de <__sfvwrite_r+0x42e>
8400448f:	e9 a2 00 00 00       	jmp    84004536 <__sfvwrite_r+0x486>
84004494:	8b 73 14             	mov    0x14(%ebx),%esi
84004497:	89 c8                	mov    %ecx,%eax
84004499:	39 c6                	cmp    %eax,%esi
8400449b:	7f 1b                	jg     840044b8 <__sfvwrite_r+0x408>
8400449d:	8b 53 24             	mov    0x24(%ebx),%edx
840044a0:	8b 43 1c             	mov    0x1c(%ebx),%eax
840044a3:	56                   	push   %esi
840044a4:	ff 75 c4             	push   -0x3c(%ebp)
840044a7:	50                   	push   %eax
840044a8:	ff 75 08             	push   0x8(%ebp)
840044ab:	ff d2                	call   *%edx
840044ad:	83 c4 10             	add    $0x10,%esp
840044b0:	89 c6                	mov    %eax,%esi
840044b2:	85 f6                	test   %esi,%esi
840044b4:	7f 28                	jg     840044de <__sfvwrite_r+0x42e>
840044b6:	eb 7e                	jmp    84004536 <__sfvwrite_r+0x486>
840044b8:	89 ce                	mov    %ecx,%esi
840044ba:	89 f2                	mov    %esi,%edx
840044bc:	8b 03                	mov    (%ebx),%eax
840044be:	83 ec 04             	sub    $0x4,%esp
840044c1:	52                   	push   %edx
840044c2:	ff 75 c4             	push   -0x3c(%ebp)
840044c5:	50                   	push   %eax
840044c6:	e8 e5 02 00 00       	call   840047b0 <memmove>
840044cb:	83 c4 10             	add    $0x10,%esp
840044ce:	8b 43 08             	mov    0x8(%ebx),%eax
840044d1:	29 f0                	sub    %esi,%eax
840044d3:	89 43 08             	mov    %eax,0x8(%ebx)
840044d6:	8b 03                	mov    (%ebx),%eax
840044d8:	89 f2                	mov    %esi,%edx
840044da:	01 d0                	add    %edx,%eax
840044dc:	89 03                	mov    %eax,(%ebx)
840044de:	29 75 e0             	sub    %esi,-0x20(%ebp)
840044e1:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
840044e5:	75 1a                	jne    84004501 <__sfvwrite_r+0x451>
840044e7:	83 ec 08             	sub    $0x8,%esp
840044ea:	53                   	push   %ebx
840044eb:	ff 75 08             	push   0x8(%ebp)
840044ee:	e8 69 c9 ff ff       	call   84000e5c <_fflush_r>
840044f3:	83 c4 10             	add    $0x10,%esp
840044f6:	85 c0                	test   %eax,%eax
840044f8:	75 3b                	jne    84004535 <__sfvwrite_r+0x485>
840044fa:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
84004501:	89 f0                	mov    %esi,%eax
84004503:	01 45 c4             	add    %eax,-0x3c(%ebp)
84004506:	89 f0                	mov    %esi,%eax
84004508:	29 c7                	sub    %eax,%edi
8400450a:	8b 45 10             	mov    0x10(%ebp),%eax
8400450d:	8b 40 08             	mov    0x8(%eax),%eax
84004510:	89 f2                	mov    %esi,%edx
84004512:	29 d0                	sub    %edx,%eax
84004514:	8b 4d 10             	mov    0x10(%ebp),%ecx
84004517:	89 41 08             	mov    %eax,0x8(%ecx)
8400451a:	8b 45 10             	mov    0x10(%ebp),%eax
8400451d:	8b 40 08             	mov    0x8(%eax),%eax
84004520:	85 c0                	test   %eax,%eax
84004522:	0f 85 dc fe ff ff    	jne    84004404 <__sfvwrite_r+0x354>
84004528:	b8 00 00 00 00       	mov    $0x0,%eax
8400452d:	eb 17                	jmp    84004546 <__sfvwrite_r+0x496>
8400452f:	90                   	nop
84004530:	eb 04                	jmp    84004536 <__sfvwrite_r+0x486>
84004532:	90                   	nop
84004533:	eb 01                	jmp    84004536 <__sfvwrite_r+0x486>
84004535:	90                   	nop
84004536:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400453a:	83 c8 40             	or     $0x40,%eax
8400453d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84004541:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84004546:	8d 65 f4             	lea    -0xc(%ebp),%esp
84004549:	5b                   	pop    %ebx
8400454a:	5e                   	pop    %esi
8400454b:	5f                   	pop    %edi
8400454c:	5d                   	pop    %ebp
8400454d:	c3                   	ret    

8400454e <_isatty_r>:
8400454e:	55                   	push   %ebp
8400454f:	89 e5                	mov    %esp,%ebp
84004551:	83 ec 18             	sub    $0x18,%esp
84004554:	c7 05 f0 63 00 84 00 	movl   $0x0,0x840063f0
8400455b:	00 00 00 
8400455e:	83 ec 0c             	sub    $0xc,%esp
84004561:	ff 75 0c             	push   0xc(%ebp)
84004564:	e8 d0 bc ff ff       	call   84000239 <isatty>
84004569:	83 c4 10             	add    $0x10,%esp
8400456c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400456f:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84004573:	75 14                	jne    84004589 <_isatty_r+0x3b>
84004575:	a1 f0 63 00 84       	mov    0x840063f0,%eax
8400457a:	85 c0                	test   %eax,%eax
8400457c:	74 0b                	je     84004589 <_isatty_r+0x3b>
8400457e:	8b 15 f0 63 00 84    	mov    0x840063f0,%edx
84004584:	8b 45 08             	mov    0x8(%ebp),%eax
84004587:	89 10                	mov    %edx,(%eax)
84004589:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400458c:	c9                   	leave  
8400458d:	c3                   	ret    

8400458e <__get_global_locale>:
8400458e:	55                   	push   %ebp
8400458f:	89 e5                	mov    %esp,%ebp
84004591:	b8 00 62 00 84       	mov    $0x84006200,%eax
84004596:	5d                   	pop    %ebp
84004597:	c3                   	ret    

84004598 <__get_current_locale>:
84004598:	55                   	push   %ebp
84004599:	89 e5                	mov    %esp,%ebp
8400459b:	e8 ee ff ff ff       	call   8400458e <__get_global_locale>
840045a0:	5d                   	pop    %ebp
840045a1:	c3                   	ret    

840045a2 <_setlocale_r>:
840045a2:	55                   	push   %ebp
840045a3:	89 e5                	mov    %esp,%ebp
840045a5:	83 ec 08             	sub    $0x8,%esp
840045a8:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
840045ac:	74 4c                	je     840045fa <_setlocale_r+0x58>
840045ae:	83 ec 08             	sub    $0x8,%esp
840045b1:	68 db 56 00 84       	push   $0x840056db
840045b6:	ff 75 10             	push   0x10(%ebp)
840045b9:	e8 87 0d 00 00       	call   84005345 <strcmp>
840045be:	83 c4 10             	add    $0x10,%esp
840045c1:	85 c0                	test   %eax,%eax
840045c3:	74 35                	je     840045fa <_setlocale_r+0x58>
840045c5:	83 ec 08             	sub    $0x8,%esp
840045c8:	68 e1 56 00 84       	push   $0x840056e1
840045cd:	ff 75 10             	push   0x10(%ebp)
840045d0:	e8 70 0d 00 00       	call   84005345 <strcmp>
840045d5:	83 c4 10             	add    $0x10,%esp
840045d8:	85 c0                	test   %eax,%eax
840045da:	74 1e                	je     840045fa <_setlocale_r+0x58>
840045dc:	83 ec 08             	sub    $0x8,%esp
840045df:	68 da 56 00 84       	push   $0x840056da
840045e4:	ff 75 10             	push   0x10(%ebp)
840045e7:	e8 59 0d 00 00       	call   84005345 <strcmp>
840045ec:	83 c4 10             	add    $0x10,%esp
840045ef:	85 c0                	test   %eax,%eax
840045f1:	74 07                	je     840045fa <_setlocale_r+0x58>
840045f3:	b8 00 00 00 00       	mov    $0x0,%eax
840045f8:	eb 05                	jmp    840045ff <_setlocale_r+0x5d>
840045fa:	b8 e1 56 00 84       	mov    $0x840056e1,%eax
840045ff:	c9                   	leave  
84004600:	c3                   	ret    

84004601 <__locale_mb_cur_max>:
84004601:	55                   	push   %ebp
84004602:	89 e5                	mov    %esp,%ebp
84004604:	e8 8f ff ff ff       	call   84004598 <__get_current_locale>
84004609:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
84004610:	0f be c0             	movsbl %al,%eax
84004613:	5d                   	pop    %ebp
84004614:	c3                   	ret    

84004615 <setlocale>:
84004615:	55                   	push   %ebp
84004616:	89 e5                	mov    %esp,%ebp
84004618:	83 ec 08             	sub    $0x8,%esp
8400461b:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84004620:	83 ec 04             	sub    $0x4,%esp
84004623:	ff 75 0c             	push   0xc(%ebp)
84004626:	ff 75 08             	push   0x8(%ebp)
84004629:	50                   	push   %eax
8400462a:	e8 73 ff ff ff       	call   840045a2 <_setlocale_r>
8400462f:	83 c4 10             	add    $0x10,%esp
84004632:	c9                   	leave  
84004633:	c3                   	ret    

84004634 <__get_global_locale>:
84004634:	55                   	push   %ebp
84004635:	89 e5                	mov    %esp,%ebp
84004637:	b8 00 62 00 84       	mov    $0x84006200,%eax
8400463c:	5d                   	pop    %ebp
8400463d:	c3                   	ret    

8400463e <__get_current_locale>:
8400463e:	55                   	push   %ebp
8400463f:	89 e5                	mov    %esp,%ebp
84004641:	e8 ee ff ff ff       	call   84004634 <__get_global_locale>
84004646:	5d                   	pop    %ebp
84004647:	c3                   	ret    

84004648 <_mbtowc_r>:
84004648:	55                   	push   %ebp
84004649:	89 e5                	mov    %esp,%ebp
8400464b:	83 ec 08             	sub    $0x8,%esp
8400464e:	e8 eb ff ff ff       	call   8400463e <__get_current_locale>
84004653:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
84004659:	83 ec 0c             	sub    $0xc,%esp
8400465c:	ff 75 18             	push   0x18(%ebp)
8400465f:	ff 75 14             	push   0x14(%ebp)
84004662:	ff 75 10             	push   0x10(%ebp)
84004665:	ff 75 0c             	push   0xc(%ebp)
84004668:	ff 75 08             	push   0x8(%ebp)
8400466b:	ff d0                	call   *%eax
8400466d:	83 c4 20             	add    $0x20,%esp
84004670:	c9                   	leave  
84004671:	c3                   	ret    

84004672 <__ascii_mbtowc>:
84004672:	55                   	push   %ebp
84004673:	89 e5                	mov    %esp,%ebp
84004675:	83 ec 10             	sub    $0x10,%esp
84004678:	8b 45 10             	mov    0x10(%ebp),%eax
8400467b:	89 45 fc             	mov    %eax,-0x4(%ebp)
8400467e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
84004682:	75 06                	jne    8400468a <__ascii_mbtowc+0x18>
84004684:	8d 45 f8             	lea    -0x8(%ebp),%eax
84004687:	89 45 0c             	mov    %eax,0xc(%ebp)
8400468a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8400468e:	75 07                	jne    84004697 <__ascii_mbtowc+0x25>
84004690:	b8 00 00 00 00       	mov    $0x0,%eax
84004695:	eb 31                	jmp    840046c8 <__ascii_mbtowc+0x56>
84004697:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8400469b:	75 07                	jne    840046a4 <__ascii_mbtowc+0x32>
8400469d:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
840046a2:	eb 24                	jmp    840046c8 <__ascii_mbtowc+0x56>
840046a4:	8b 45 fc             	mov    -0x4(%ebp),%eax
840046a7:	0f b6 00             	movzbl (%eax),%eax
840046aa:	0f b6 d0             	movzbl %al,%edx
840046ad:	8b 45 0c             	mov    0xc(%ebp),%eax
840046b0:	89 10                	mov    %edx,(%eax)
840046b2:	8b 45 fc             	mov    -0x4(%ebp),%eax
840046b5:	0f b6 00             	movzbl (%eax),%eax
840046b8:	84 c0                	test   %al,%al
840046ba:	75 07                	jne    840046c3 <__ascii_mbtowc+0x51>
840046bc:	b8 00 00 00 00       	mov    $0x0,%eax
840046c1:	eb 05                	jmp    840046c8 <__ascii_mbtowc+0x56>
840046c3:	b8 01 00 00 00       	mov    $0x1,%eax
840046c8:	c9                   	leave  
840046c9:	c3                   	ret    
840046ca:	66 90                	xchg   %ax,%ax
840046cc:	66 90                	xchg   %ax,%ax
840046ce:	66 90                	xchg   %ax,%ax

840046d0 <memchr>:
840046d0:	55                   	push   %ebp
840046d1:	89 e5                	mov    %esp,%ebp
840046d3:	57                   	push   %edi
840046d4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
840046d8:	8b 4d 10             	mov    0x10(%ebp),%ecx
840046db:	8b 7d 08             	mov    0x8(%ebp),%edi
840046de:	31 d2                	xor    %edx,%edx
840046e0:	85 c9                	test   %ecx,%ecx
840046e2:	74 79                	je     8400475d <L20>
840046e4:	f7 c7 03 00 00 00    	test   $0x3,%edi
840046ea:	74 28                	je     84004714 <L5>
840046ec:	3a 07                	cmp    (%edi),%al
840046ee:	74 6a                	je     8400475a <L15>
840046f0:	47                   	inc    %edi
840046f1:	49                   	dec    %ecx
840046f2:	74 69                	je     8400475d <L20>
840046f4:	f7 c7 03 00 00 00    	test   $0x3,%edi
840046fa:	74 18                	je     84004714 <L5>
840046fc:	3a 07                	cmp    (%edi),%al
840046fe:	74 5a                	je     8400475a <L15>
84004700:	47                   	inc    %edi
84004701:	49                   	dec    %ecx
84004702:	74 59                	je     8400475d <L20>
84004704:	f7 c7 03 00 00 00    	test   $0x3,%edi
8400470a:	74 08                	je     84004714 <L5>
8400470c:	3a 07                	cmp    (%edi),%al
8400470e:	74 4a                	je     8400475a <L15>
84004710:	47                   	inc    %edi
84004711:	49                   	dec    %ecx
84004712:	74 49                	je     8400475d <L20>

84004714 <L5>:
84004714:	88 c4                	mov    %al,%ah
84004716:	89 c2                	mov    %eax,%edx
84004718:	c1 e2 10             	shl    $0x10,%edx
8400471b:	09 d0                	or     %edx,%eax
8400471d:	53                   	push   %ebx
8400471e:	66 90                	xchg   %ax,%ax

84004720 <L8>:
84004720:	83 e9 04             	sub    $0x4,%ecx
84004723:	72 1c                	jb     84004741 <L9>
84004725:	8b 17                	mov    (%edi),%edx
84004727:	83 c7 04             	add    $0x4,%edi
8400472a:	31 c2                	xor    %eax,%edx
8400472c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
84004732:	f7 d2                	not    %edx
84004734:	21 d3                	and    %edx,%ebx
84004736:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
8400473c:	74 e2                	je     84004720 <L8>
8400473e:	83 ef 04             	sub    $0x4,%edi

84004741 <L9>:
84004741:	5b                   	pop    %ebx
84004742:	31 d2                	xor    %edx,%edx
84004744:	83 c1 04             	add    $0x4,%ecx
84004747:	74 14                	je     8400475d <L20>
84004749:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

84004750 <L10>:
84004750:	3a 07                	cmp    (%edi),%al
84004752:	74 06                	je     8400475a <L15>
84004754:	47                   	inc    %edi
84004755:	49                   	dec    %ecx
84004756:	75 f8                	jne    84004750 <L10>
84004758:	31 ff                	xor    %edi,%edi

8400475a <L15>:
8400475a:	4a                   	dec    %edx
8400475b:	21 fa                	and    %edi,%edx

8400475d <L20>:
8400475d:	89 d0                	mov    %edx,%eax
8400475f:	8d 65 fc             	lea    -0x4(%ebp),%esp
84004762:	5f                   	pop    %edi
84004763:	c9                   	leave  
84004764:	c3                   	ret    
84004765:	66 90                	xchg   %ax,%ax
84004767:	90                   	nop

84004768 <memcpy>:
84004768:	55                   	push   %ebp
84004769:	89 e5                	mov    %esp,%ebp
8400476b:	56                   	push   %esi
8400476c:	57                   	push   %edi
8400476d:	53                   	push   %ebx
8400476e:	8b 7d 08             	mov    0x8(%ebp),%edi
84004771:	8b 4d 10             	mov    0x10(%ebp),%ecx
84004774:	8b 75 0c             	mov    0xc(%ebp),%esi
84004777:	fc                   	cld    
84004778:	83 f9 08             	cmp    $0x8,%ecx
8400477b:	76 26                	jbe    840047a3 <memcpy+0x3b>
8400477d:	89 fa                	mov    %edi,%edx
8400477f:	89 cb                	mov    %ecx,%ebx
84004781:	83 e2 03             	and    $0x3,%edx
84004784:	74 10                	je     84004796 <memcpy+0x2e>
84004786:	b9 04 00 00 00       	mov    $0x4,%ecx
8400478b:	29 d1                	sub    %edx,%ecx
8400478d:	83 e1 03             	and    $0x3,%ecx
84004790:	29 cb                	sub    %ecx,%ebx
84004792:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
84004794:	89 d9                	mov    %ebx,%ecx
84004796:	c1 e9 02             	shr    $0x2,%ecx
84004799:	8d 76 00             	lea    0x0(%esi),%esi
8400479c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
8400479e:	89 d9                	mov    %ebx,%ecx
840047a0:	83 e1 03             	and    $0x3,%ecx
840047a3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
840047a5:	8b 45 08             	mov    0x8(%ebp),%eax
840047a8:	8d 65 f4             	lea    -0xc(%ebp),%esp
840047ab:	5b                   	pop    %ebx
840047ac:	5f                   	pop    %edi
840047ad:	5e                   	pop    %esi
840047ae:	c9                   	leave  
840047af:	c3                   	ret    

840047b0 <memmove>:
840047b0:	55                   	push   %ebp
840047b1:	89 e5                	mov    %esp,%ebp
840047b3:	56                   	push   %esi
840047b4:	57                   	push   %edi
840047b5:	53                   	push   %ebx
840047b6:	8b 7d 08             	mov    0x8(%ebp),%edi
840047b9:	8b 4d 10             	mov    0x10(%ebp),%ecx
840047bc:	8b 75 0c             	mov    0xc(%ebp),%esi
840047bf:	fc                   	cld    
840047c0:	39 fe                	cmp    %edi,%esi
840047c2:	73 43                	jae    84004807 <memmove+0x57>
840047c4:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
840047c8:	39 df                	cmp    %ebx,%edi
840047ca:	77 3b                	ja     84004807 <memmove+0x57>
840047cc:	01 ce                	add    %ecx,%esi
840047ce:	01 cf                	add    %ecx,%edi
840047d0:	fd                   	std    
840047d1:	83 f9 08             	cmp    $0x8,%ecx
840047d4:	76 2b                	jbe    84004801 <memmove+0x51>
840047d6:	89 fa                	mov    %edi,%edx
840047d8:	89 cb                	mov    %ecx,%ebx
840047da:	83 e2 03             	and    $0x3,%edx
840047dd:	74 0c                	je     840047eb <memmove+0x3b>
840047df:	89 d1                	mov    %edx,%ecx
840047e1:	4e                   	dec    %esi
840047e2:	4f                   	dec    %edi
840047e3:	29 cb                	sub    %ecx,%ebx
840047e5:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
840047e7:	89 d9                	mov    %ebx,%ecx
840047e9:	46                   	inc    %esi
840047ea:	47                   	inc    %edi
840047eb:	c1 e9 02             	shr    $0x2,%ecx
840047ee:	83 ee 04             	sub    $0x4,%esi
840047f1:	83 ef 04             	sub    $0x4,%edi
840047f4:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
840047f6:	83 c6 04             	add    $0x4,%esi
840047f9:	83 c7 04             	add    $0x4,%edi
840047fc:	89 d9                	mov    %ebx,%ecx
840047fe:	83 e1 03             	and    $0x3,%ecx
84004801:	4e                   	dec    %esi
84004802:	4f                   	dec    %edi
84004803:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
84004805:	eb 2a                	jmp    84004831 <memmove+0x81>
84004807:	83 f9 08             	cmp    $0x8,%ecx
8400480a:	76 23                	jbe    8400482f <memmove+0x7f>
8400480c:	89 fa                	mov    %edi,%edx
8400480e:	89 cb                	mov    %ecx,%ebx
84004810:	83 e2 03             	and    $0x3,%edx
84004813:	74 10                	je     84004825 <memmove+0x75>
84004815:	b9 04 00 00 00       	mov    $0x4,%ecx
8400481a:	29 d1                	sub    %edx,%ecx
8400481c:	83 e1 03             	and    $0x3,%ecx
8400481f:	29 cb                	sub    %ecx,%ebx
84004821:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
84004823:	89 d9                	mov    %ebx,%ecx
84004825:	c1 e9 02             	shr    $0x2,%ecx
84004828:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
8400482a:	89 d9                	mov    %ebx,%ecx
8400482c:	83 e1 03             	and    $0x3,%ecx
8400482f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
84004831:	8b 45 08             	mov    0x8(%ebp),%eax
84004834:	fc                   	cld    
84004835:	8d 65 f4             	lea    -0xc(%ebp),%esp
84004838:	5b                   	pop    %ebx
84004839:	5f                   	pop    %edi
8400483a:	5e                   	pop    %esi
8400483b:	c9                   	leave  
8400483c:	c3                   	ret    

8400483d <_realloc_r>:
8400483d:	55                   	push   %ebp
8400483e:	89 e5                	mov    %esp,%ebp
84004840:	83 ec 78             	sub    $0x78,%esp
84004843:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
84004847:	75 16                	jne    8400485f <_realloc_r+0x22>
84004849:	83 ec 08             	sub    $0x8,%esp
8400484c:	ff 75 10             	push   0x10(%ebp)
8400484f:	ff 75 08             	push   0x8(%ebp)
84004852:	e8 bf d3 ff ff       	call   84001c16 <_malloc_r>
84004857:	83 c4 10             	add    $0x10,%esp
8400485a:	e9 b6 08 00 00       	jmp    84005115 <_realloc_r+0x8d8>
8400485f:	83 ec 0c             	sub    $0xc,%esp
84004862:	ff 75 08             	push   0x8(%ebp)
84004865:	e8 56 dc ff ff       	call   840024c0 <__malloc_lock>
8400486a:	83 c4 10             	add    $0x10,%esp
8400486d:	8b 45 0c             	mov    0xc(%ebp),%eax
84004870:	83 e8 08             	sub    $0x8,%eax
84004873:	89 45 c4             	mov    %eax,-0x3c(%ebp)
84004876:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004879:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400487c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8400487f:	8b 40 04             	mov    0x4(%eax),%eax
84004882:	83 e0 fc             	and    $0xfffffffc,%eax
84004885:	89 45 c0             	mov    %eax,-0x40(%ebp)
84004888:	8b 45 c0             	mov    -0x40(%ebp),%eax
8400488b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8400488e:	8b 45 10             	mov    0x10(%ebp),%eax
84004891:	83 c0 0b             	add    $0xb,%eax
84004894:	83 f8 16             	cmp    $0x16,%eax
84004897:	76 0b                	jbe    840048a4 <_realloc_r+0x67>
84004899:	8b 45 10             	mov    0x10(%ebp),%eax
8400489c:	83 c0 0b             	add    $0xb,%eax
8400489f:	83 e0 f8             	and    $0xfffffff8,%eax
840048a2:	eb 05                	jmp    840048a9 <_realloc_r+0x6c>
840048a4:	b8 10 00 00 00       	mov    $0x10,%eax
840048a9:	89 45 bc             	mov    %eax,-0x44(%ebp)
840048ac:	8b 45 bc             	mov    -0x44(%ebp),%eax
840048af:	85 c0                	test   %eax,%eax
840048b1:	78 08                	js     840048bb <_realloc_r+0x7e>
840048b3:	8b 45 bc             	mov    -0x44(%ebp),%eax
840048b6:	3b 45 10             	cmp    0x10(%ebp),%eax
840048b9:	73 13                	jae    840048ce <_realloc_r+0x91>
840048bb:	8b 45 08             	mov    0x8(%ebp),%eax
840048be:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
840048c4:	b8 00 00 00 00       	mov    $0x0,%eax
840048c9:	e9 47 08 00 00       	jmp    84005115 <_realloc_r+0x8d8>
840048ce:	8b 55 c0             	mov    -0x40(%ebp),%edx
840048d1:	8b 45 bc             	mov    -0x44(%ebp),%eax
840048d4:	39 c2                	cmp    %eax,%edx
840048d6:	0f 8d 8b 07 00 00    	jge    84005067 <_realloc_r+0x82a>
840048dc:	8b 55 c4             	mov    -0x3c(%ebp),%edx
840048df:	8b 45 c0             	mov    -0x40(%ebp),%eax
840048e2:	01 d0                	add    %edx,%eax
840048e4:	89 45 ec             	mov    %eax,-0x14(%ebp)
840048e7:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
840048ec:	8b 40 08             	mov    0x8(%eax),%eax
840048ef:	39 45 ec             	cmp    %eax,-0x14(%ebp)
840048f2:	74 1e                	je     84004912 <_realloc_r+0xd5>
840048f4:	8b 45 ec             	mov    -0x14(%ebp),%eax
840048f7:	8b 40 04             	mov    0x4(%eax),%eax
840048fa:	83 e0 fe             	and    $0xfffffffe,%eax
840048fd:	89 c2                	mov    %eax,%edx
840048ff:	8b 45 ec             	mov    -0x14(%ebp),%eax
84004902:	01 d0                	add    %edx,%eax
84004904:	8b 40 04             	mov    0x4(%eax),%eax
84004907:	83 e0 01             	and    $0x1,%eax
8400490a:	85 c0                	test   %eax,%eax
8400490c:	0f 85 ca 00 00 00    	jne    840049dc <_realloc_r+0x19f>
84004912:	8b 45 ec             	mov    -0x14(%ebp),%eax
84004915:	8b 40 04             	mov    0x4(%eax),%eax
84004918:	83 e0 fc             	and    $0xfffffffc,%eax
8400491b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8400491e:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84004923:	8b 40 08             	mov    0x8(%eax),%eax
84004926:	39 45 ec             	cmp    %eax,-0x14(%ebp)
84004929:	75 71                	jne    8400499c <_realloc_r+0x15f>
8400492b:	8b 55 e8             	mov    -0x18(%ebp),%edx
8400492e:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004931:	01 d0                	add    %edx,%eax
84004933:	89 c2                	mov    %eax,%edx
84004935:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004938:	83 c0 10             	add    $0x10,%eax
8400493b:	39 c2                	cmp    %eax,%edx
8400493d:	0f 8c a9 00 00 00    	jl     840049ec <_realloc_r+0x1af>
84004943:	8b 45 e8             	mov    -0x18(%ebp),%eax
84004946:	01 45 f0             	add    %eax,-0x10(%ebp)
84004949:	ba e0 5d 00 84       	mov    $0x84005de0,%edx
8400494e:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
84004951:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004954:	01 c8                	add    %ecx,%eax
84004956:	89 42 08             	mov    %eax,0x8(%edx)
84004959:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400495c:	2b 45 bc             	sub    -0x44(%ebp),%eax
8400495f:	89 c2                	mov    %eax,%edx
84004961:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84004966:	8b 40 08             	mov    0x8(%eax),%eax
84004969:	83 ca 01             	or     $0x1,%edx
8400496c:	89 50 04             	mov    %edx,0x4(%eax)
8400496f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004972:	8b 40 04             	mov    0x4(%eax),%eax
84004975:	83 e0 01             	and    $0x1,%eax
84004978:	0b 45 bc             	or     -0x44(%ebp),%eax
8400497b:	89 c2                	mov    %eax,%edx
8400497d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004980:	89 50 04             	mov    %edx,0x4(%eax)
84004983:	83 ec 0c             	sub    $0xc,%esp
84004986:	ff 75 08             	push   0x8(%ebp)
84004989:	e8 38 db ff ff       	call   840024c6 <__malloc_unlock>
8400498e:	83 c4 10             	add    $0x10,%esp
84004991:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004994:	83 c0 08             	add    $0x8,%eax
84004997:	e9 79 07 00 00       	jmp    84005115 <_realloc_r+0x8d8>
8400499c:	8b 55 e8             	mov    -0x18(%ebp),%edx
8400499f:	8b 45 f0             	mov    -0x10(%ebp),%eax
840049a2:	01 d0                	add    %edx,%eax
840049a4:	89 c2                	mov    %eax,%edx
840049a6:	8b 45 bc             	mov    -0x44(%ebp),%eax
840049a9:	39 c2                	cmp    %eax,%edx
840049ab:	7c 3f                	jl     840049ec <_realloc_r+0x1af>
840049ad:	8b 45 ec             	mov    -0x14(%ebp),%eax
840049b0:	8b 40 0c             	mov    0xc(%eax),%eax
840049b3:	89 45 b8             	mov    %eax,-0x48(%ebp)
840049b6:	8b 45 ec             	mov    -0x14(%ebp),%eax
840049b9:	8b 40 08             	mov    0x8(%eax),%eax
840049bc:	89 45 b4             	mov    %eax,-0x4c(%ebp)
840049bf:	8b 45 b4             	mov    -0x4c(%ebp),%eax
840049c2:	8b 55 b8             	mov    -0x48(%ebp),%edx
840049c5:	89 50 0c             	mov    %edx,0xc(%eax)
840049c8:	8b 45 b8             	mov    -0x48(%ebp),%eax
840049cb:	8b 55 b4             	mov    -0x4c(%ebp),%edx
840049ce:	89 50 08             	mov    %edx,0x8(%eax)
840049d1:	8b 45 e8             	mov    -0x18(%ebp),%eax
840049d4:	01 45 f0             	add    %eax,-0x10(%ebp)
840049d7:	e9 8c 06 00 00       	jmp    84005068 <_realloc_r+0x82b>
840049dc:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
840049e3:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
840049ea:	eb 01                	jmp    840049ed <_realloc_r+0x1b0>
840049ec:	90                   	nop
840049ed:	8b 45 c4             	mov    -0x3c(%ebp),%eax
840049f0:	8b 40 04             	mov    0x4(%eax),%eax
840049f3:	83 e0 01             	and    $0x1,%eax
840049f6:	85 c0                	test   %eax,%eax
840049f8:	0f 85 d6 04 00 00    	jne    84004ed4 <_realloc_r+0x697>
840049fe:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004a01:	8b 00                	mov    (%eax),%eax
84004a03:	f7 d8                	neg    %eax
84004a05:	89 c2                	mov    %eax,%edx
84004a07:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004a0a:	01 d0                	add    %edx,%eax
84004a0c:	89 45 b0             	mov    %eax,-0x50(%ebp)
84004a0f:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004a12:	8b 40 04             	mov    0x4(%eax),%eax
84004a15:	83 e0 fc             	and    $0xfffffffc,%eax
84004a18:	89 45 ac             	mov    %eax,-0x54(%ebp)
84004a1b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
84004a1f:	0f 84 4a 03 00 00    	je     84004d6f <_realloc_r+0x532>
84004a25:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84004a2a:	8b 40 08             	mov    0x8(%eax),%eax
84004a2d:	39 45 ec             	cmp    %eax,-0x14(%ebp)
84004a30:	0f 85 b0 01 00 00    	jne    84004be6 <_realloc_r+0x3a9>
84004a36:	8b 55 e8             	mov    -0x18(%ebp),%edx
84004a39:	8b 45 ac             	mov    -0x54(%ebp),%eax
84004a3c:	01 c2                	add    %eax,%edx
84004a3e:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004a41:	01 d0                	add    %edx,%eax
84004a43:	89 c2                	mov    %eax,%edx
84004a45:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004a48:	83 c0 10             	add    $0x10,%eax
84004a4b:	39 c2                	cmp    %eax,%edx
84004a4d:	0f 8c 1c 03 00 00    	jl     84004d6f <_realloc_r+0x532>
84004a53:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004a56:	8b 40 0c             	mov    0xc(%eax),%eax
84004a59:	89 45 b8             	mov    %eax,-0x48(%ebp)
84004a5c:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004a5f:	8b 40 08             	mov    0x8(%eax),%eax
84004a62:	89 45 b4             	mov    %eax,-0x4c(%ebp)
84004a65:	8b 45 b4             	mov    -0x4c(%ebp),%eax
84004a68:	8b 55 b8             	mov    -0x48(%ebp),%edx
84004a6b:	89 50 0c             	mov    %edx,0xc(%eax)
84004a6e:	8b 45 b8             	mov    -0x48(%ebp),%eax
84004a71:	8b 55 b4             	mov    -0x4c(%ebp),%edx
84004a74:	89 50 08             	mov    %edx,0x8(%eax)
84004a77:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004a7a:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004a7d:	8b 55 ac             	mov    -0x54(%ebp),%edx
84004a80:	8b 45 e8             	mov    -0x18(%ebp),%eax
84004a83:	01 d0                	add    %edx,%eax
84004a85:	01 45 f0             	add    %eax,-0x10(%ebp)
84004a88:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004a8b:	83 c0 08             	add    $0x8,%eax
84004a8e:	89 45 a8             	mov    %eax,-0x58(%ebp)
84004a91:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004a94:	83 e8 04             	sub    $0x4,%eax
84004a97:	89 45 a0             	mov    %eax,-0x60(%ebp)
84004a9a:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
84004a9e:	0f 87 de 00 00 00    	ja     84004b82 <_realloc_r+0x345>
84004aa4:	8b 45 0c             	mov    0xc(%ebp),%eax
84004aa7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004aaa:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004aad:	89 45 e0             	mov    %eax,-0x20(%ebp)
84004ab0:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
84004ab4:	0f 86 90 00 00 00    	jbe    84004b4a <_realloc_r+0x30d>
84004aba:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004abd:	8d 42 04             	lea    0x4(%edx),%eax
84004ac0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004ac3:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004ac6:	8d 48 04             	lea    0x4(%eax),%ecx
84004ac9:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004acc:	8b 12                	mov    (%edx),%edx
84004ace:	89 10                	mov    %edx,(%eax)
84004ad0:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004ad3:	8d 42 04             	lea    0x4(%edx),%eax
84004ad6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004ad9:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004adc:	8d 48 04             	lea    0x4(%eax),%ecx
84004adf:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004ae2:	8b 12                	mov    (%edx),%edx
84004ae4:	89 10                	mov    %edx,(%eax)
84004ae6:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
84004aea:	76 5e                	jbe    84004b4a <_realloc_r+0x30d>
84004aec:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004aef:	8d 42 04             	lea    0x4(%edx),%eax
84004af2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004af5:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004af8:	8d 48 04             	lea    0x4(%eax),%ecx
84004afb:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004afe:	8b 12                	mov    (%edx),%edx
84004b00:	89 10                	mov    %edx,(%eax)
84004b02:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b05:	8d 42 04             	lea    0x4(%edx),%eax
84004b08:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b0b:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b0e:	8d 48 04             	lea    0x4(%eax),%ecx
84004b11:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b14:	8b 12                	mov    (%edx),%edx
84004b16:	89 10                	mov    %edx,(%eax)
84004b18:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
84004b1c:	76 2c                	jbe    84004b4a <_realloc_r+0x30d>
84004b1e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b21:	8d 42 04             	lea    0x4(%edx),%eax
84004b24:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b27:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b2a:	8d 48 04             	lea    0x4(%eax),%ecx
84004b2d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b30:	8b 12                	mov    (%edx),%edx
84004b32:	89 10                	mov    %edx,(%eax)
84004b34:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b37:	8d 42 04             	lea    0x4(%edx),%eax
84004b3a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b3d:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b40:	8d 48 04             	lea    0x4(%eax),%ecx
84004b43:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b46:	8b 12                	mov    (%edx),%edx
84004b48:	89 10                	mov    %edx,(%eax)
84004b4a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b4d:	8d 42 04             	lea    0x4(%edx),%eax
84004b50:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b53:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b56:	8d 48 04             	lea    0x4(%eax),%ecx
84004b59:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b5c:	8b 12                	mov    (%edx),%edx
84004b5e:	89 10                	mov    %edx,(%eax)
84004b60:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b63:	8d 42 04             	lea    0x4(%edx),%eax
84004b66:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b69:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b6c:	8d 48 04             	lea    0x4(%eax),%ecx
84004b6f:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b72:	8b 12                	mov    (%edx),%edx
84004b74:	89 10                	mov    %edx,(%eax)
84004b76:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84004b79:	8b 10                	mov    (%eax),%edx
84004b7b:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b7e:	89 10                	mov    %edx,(%eax)
84004b80:	eb 14                	jmp    84004b96 <_realloc_r+0x359>
84004b82:	83 ec 04             	sub    $0x4,%esp
84004b85:	ff 75 a0             	push   -0x60(%ebp)
84004b88:	ff 75 0c             	push   0xc(%ebp)
84004b8b:	ff 75 a8             	push   -0x58(%ebp)
84004b8e:	e8 1d fc ff ff       	call   840047b0 <memmove>
84004b93:	83 c4 10             	add    $0x10,%esp
84004b96:	ba e0 5d 00 84       	mov    $0x84005de0,%edx
84004b9b:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84004b9e:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004ba1:	01 c8                	add    %ecx,%eax
84004ba3:	89 42 08             	mov    %eax,0x8(%edx)
84004ba6:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004ba9:	2b 45 bc             	sub    -0x44(%ebp),%eax
84004bac:	89 c2                	mov    %eax,%edx
84004bae:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84004bb3:	8b 40 08             	mov    0x8(%eax),%eax
84004bb6:	83 ca 01             	or     $0x1,%edx
84004bb9:	89 50 04             	mov    %edx,0x4(%eax)
84004bbc:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004bbf:	8b 40 04             	mov    0x4(%eax),%eax
84004bc2:	83 e0 01             	and    $0x1,%eax
84004bc5:	0b 45 bc             	or     -0x44(%ebp),%eax
84004bc8:	89 c2                	mov    %eax,%edx
84004bca:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004bcd:	89 50 04             	mov    %edx,0x4(%eax)
84004bd0:	83 ec 0c             	sub    $0xc,%esp
84004bd3:	ff 75 08             	push   0x8(%ebp)
84004bd6:	e8 eb d8 ff ff       	call   840024c6 <__malloc_unlock>
84004bdb:	83 c4 10             	add    $0x10,%esp
84004bde:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004be1:	e9 2f 05 00 00       	jmp    84005115 <_realloc_r+0x8d8>
84004be6:	8b 55 e8             	mov    -0x18(%ebp),%edx
84004be9:	8b 45 ac             	mov    -0x54(%ebp),%eax
84004bec:	01 c2                	add    %eax,%edx
84004bee:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004bf1:	01 d0                	add    %edx,%eax
84004bf3:	89 c2                	mov    %eax,%edx
84004bf5:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004bf8:	39 c2                	cmp    %eax,%edx
84004bfa:	0f 8c 6f 01 00 00    	jl     84004d6f <_realloc_r+0x532>
84004c00:	8b 45 ec             	mov    -0x14(%ebp),%eax
84004c03:	8b 40 0c             	mov    0xc(%eax),%eax
84004c06:	89 45 b8             	mov    %eax,-0x48(%ebp)
84004c09:	8b 45 ec             	mov    -0x14(%ebp),%eax
84004c0c:	8b 40 08             	mov    0x8(%eax),%eax
84004c0f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
84004c12:	8b 45 b4             	mov    -0x4c(%ebp),%eax
84004c15:	8b 55 b8             	mov    -0x48(%ebp),%edx
84004c18:	89 50 0c             	mov    %edx,0xc(%eax)
84004c1b:	8b 45 b8             	mov    -0x48(%ebp),%eax
84004c1e:	8b 55 b4             	mov    -0x4c(%ebp),%edx
84004c21:	89 50 08             	mov    %edx,0x8(%eax)
84004c24:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004c27:	8b 40 0c             	mov    0xc(%eax),%eax
84004c2a:	89 45 b8             	mov    %eax,-0x48(%ebp)
84004c2d:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004c30:	8b 40 08             	mov    0x8(%eax),%eax
84004c33:	89 45 b4             	mov    %eax,-0x4c(%ebp)
84004c36:	8b 45 b4             	mov    -0x4c(%ebp),%eax
84004c39:	8b 55 b8             	mov    -0x48(%ebp),%edx
84004c3c:	89 50 0c             	mov    %edx,0xc(%eax)
84004c3f:	8b 45 b8             	mov    -0x48(%ebp),%eax
84004c42:	8b 55 b4             	mov    -0x4c(%ebp),%edx
84004c45:	89 50 08             	mov    %edx,0x8(%eax)
84004c48:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004c4b:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004c4e:	8b 55 e8             	mov    -0x18(%ebp),%edx
84004c51:	8b 45 ac             	mov    -0x54(%ebp),%eax
84004c54:	01 d0                	add    %edx,%eax
84004c56:	01 45 f0             	add    %eax,-0x10(%ebp)
84004c59:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004c5c:	83 c0 08             	add    $0x8,%eax
84004c5f:	89 45 a8             	mov    %eax,-0x58(%ebp)
84004c62:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004c65:	83 e8 04             	sub    $0x4,%eax
84004c68:	89 45 a4             	mov    %eax,-0x5c(%ebp)
84004c6b:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
84004c6f:	0f 87 e1 00 00 00    	ja     84004d56 <_realloc_r+0x519>
84004c75:	8b 45 0c             	mov    0xc(%ebp),%eax
84004c78:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004c7b:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004c7e:	89 45 d8             	mov    %eax,-0x28(%ebp)
84004c81:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
84004c85:	0f 86 90 00 00 00    	jbe    84004d1b <_realloc_r+0x4de>
84004c8b:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004c8e:	8d 42 04             	lea    0x4(%edx),%eax
84004c91:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004c94:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004c97:	8d 48 04             	lea    0x4(%eax),%ecx
84004c9a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004c9d:	8b 12                	mov    (%edx),%edx
84004c9f:	89 10                	mov    %edx,(%eax)
84004ca1:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004ca4:	8d 42 04             	lea    0x4(%edx),%eax
84004ca7:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004caa:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004cad:	8d 48 04             	lea    0x4(%eax),%ecx
84004cb0:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004cb3:	8b 12                	mov    (%edx),%edx
84004cb5:	89 10                	mov    %edx,(%eax)
84004cb7:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
84004cbb:	76 5e                	jbe    84004d1b <_realloc_r+0x4de>
84004cbd:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004cc0:	8d 42 04             	lea    0x4(%edx),%eax
84004cc3:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004cc6:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004cc9:	8d 48 04             	lea    0x4(%eax),%ecx
84004ccc:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004ccf:	8b 12                	mov    (%edx),%edx
84004cd1:	89 10                	mov    %edx,(%eax)
84004cd3:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004cd6:	8d 42 04             	lea    0x4(%edx),%eax
84004cd9:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004cdc:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004cdf:	8d 48 04             	lea    0x4(%eax),%ecx
84004ce2:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004ce5:	8b 12                	mov    (%edx),%edx
84004ce7:	89 10                	mov    %edx,(%eax)
84004ce9:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
84004ced:	76 2c                	jbe    84004d1b <_realloc_r+0x4de>
84004cef:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004cf2:	8d 42 04             	lea    0x4(%edx),%eax
84004cf5:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004cf8:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004cfb:	8d 48 04             	lea    0x4(%eax),%ecx
84004cfe:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004d01:	8b 12                	mov    (%edx),%edx
84004d03:	89 10                	mov    %edx,(%eax)
84004d05:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004d08:	8d 42 04             	lea    0x4(%edx),%eax
84004d0b:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004d0e:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004d11:	8d 48 04             	lea    0x4(%eax),%ecx
84004d14:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004d17:	8b 12                	mov    (%edx),%edx
84004d19:	89 10                	mov    %edx,(%eax)
84004d1b:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004d1e:	8d 42 04             	lea    0x4(%edx),%eax
84004d21:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004d24:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004d27:	8d 48 04             	lea    0x4(%eax),%ecx
84004d2a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004d2d:	8b 12                	mov    (%edx),%edx
84004d2f:	89 10                	mov    %edx,(%eax)
84004d31:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004d34:	8d 42 04             	lea    0x4(%edx),%eax
84004d37:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004d3a:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004d3d:	8d 48 04             	lea    0x4(%eax),%ecx
84004d40:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004d43:	8b 12                	mov    (%edx),%edx
84004d45:	89 10                	mov    %edx,(%eax)
84004d47:	8b 45 dc             	mov    -0x24(%ebp),%eax
84004d4a:	8b 10                	mov    (%eax),%edx
84004d4c:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004d4f:	89 10                	mov    %edx,(%eax)
84004d51:	e9 12 03 00 00       	jmp    84005068 <_realloc_r+0x82b>
84004d56:	83 ec 04             	sub    $0x4,%esp
84004d59:	ff 75 a4             	push   -0x5c(%ebp)
84004d5c:	ff 75 0c             	push   0xc(%ebp)
84004d5f:	ff 75 a8             	push   -0x58(%ebp)
84004d62:	e8 49 fa ff ff       	call   840047b0 <memmove>
84004d67:	83 c4 10             	add    $0x10,%esp
84004d6a:	e9 f9 02 00 00       	jmp    84005068 <_realloc_r+0x82b>
84004d6f:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
84004d73:	0f 84 5b 01 00 00    	je     84004ed4 <_realloc_r+0x697>
84004d79:	8b 55 ac             	mov    -0x54(%ebp),%edx
84004d7c:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004d7f:	01 d0                	add    %edx,%eax
84004d81:	89 c2                	mov    %eax,%edx
84004d83:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004d86:	39 c2                	cmp    %eax,%edx
84004d88:	0f 8c 46 01 00 00    	jl     84004ed4 <_realloc_r+0x697>
84004d8e:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004d91:	8b 40 0c             	mov    0xc(%eax),%eax
84004d94:	89 45 b8             	mov    %eax,-0x48(%ebp)
84004d97:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004d9a:	8b 40 08             	mov    0x8(%eax),%eax
84004d9d:	89 45 b4             	mov    %eax,-0x4c(%ebp)
84004da0:	8b 45 b4             	mov    -0x4c(%ebp),%eax
84004da3:	8b 55 b8             	mov    -0x48(%ebp),%edx
84004da6:	89 50 0c             	mov    %edx,0xc(%eax)
84004da9:	8b 45 b8             	mov    -0x48(%ebp),%eax
84004dac:	8b 55 b4             	mov    -0x4c(%ebp),%edx
84004daf:	89 50 08             	mov    %edx,0x8(%eax)
84004db2:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004db5:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004db8:	8b 45 ac             	mov    -0x54(%ebp),%eax
84004dbb:	01 45 f0             	add    %eax,-0x10(%ebp)
84004dbe:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004dc1:	83 c0 08             	add    $0x8,%eax
84004dc4:	89 45 a8             	mov    %eax,-0x58(%ebp)
84004dc7:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004dca:	83 e8 04             	sub    $0x4,%eax
84004dcd:	89 45 9c             	mov    %eax,-0x64(%ebp)
84004dd0:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
84004dd4:	0f 87 e1 00 00 00    	ja     84004ebb <_realloc_r+0x67e>
84004dda:	8b 45 0c             	mov    0xc(%ebp),%eax
84004ddd:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004de0:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004de3:	89 45 d0             	mov    %eax,-0x30(%ebp)
84004de6:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
84004dea:	0f 86 90 00 00 00    	jbe    84004e80 <_realloc_r+0x643>
84004df0:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004df3:	8d 42 04             	lea    0x4(%edx),%eax
84004df6:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004df9:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004dfc:	8d 48 04             	lea    0x4(%eax),%ecx
84004dff:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e02:	8b 12                	mov    (%edx),%edx
84004e04:	89 10                	mov    %edx,(%eax)
84004e06:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e09:	8d 42 04             	lea    0x4(%edx),%eax
84004e0c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e0f:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e12:	8d 48 04             	lea    0x4(%eax),%ecx
84004e15:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e18:	8b 12                	mov    (%edx),%edx
84004e1a:	89 10                	mov    %edx,(%eax)
84004e1c:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
84004e20:	76 5e                	jbe    84004e80 <_realloc_r+0x643>
84004e22:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e25:	8d 42 04             	lea    0x4(%edx),%eax
84004e28:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e2b:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e2e:	8d 48 04             	lea    0x4(%eax),%ecx
84004e31:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e34:	8b 12                	mov    (%edx),%edx
84004e36:	89 10                	mov    %edx,(%eax)
84004e38:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e3b:	8d 42 04             	lea    0x4(%edx),%eax
84004e3e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e41:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e44:	8d 48 04             	lea    0x4(%eax),%ecx
84004e47:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e4a:	8b 12                	mov    (%edx),%edx
84004e4c:	89 10                	mov    %edx,(%eax)
84004e4e:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
84004e52:	76 2c                	jbe    84004e80 <_realloc_r+0x643>
84004e54:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e57:	8d 42 04             	lea    0x4(%edx),%eax
84004e5a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e5d:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e60:	8d 48 04             	lea    0x4(%eax),%ecx
84004e63:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e66:	8b 12                	mov    (%edx),%edx
84004e68:	89 10                	mov    %edx,(%eax)
84004e6a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e6d:	8d 42 04             	lea    0x4(%edx),%eax
84004e70:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e73:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e76:	8d 48 04             	lea    0x4(%eax),%ecx
84004e79:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e7c:	8b 12                	mov    (%edx),%edx
84004e7e:	89 10                	mov    %edx,(%eax)
84004e80:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e83:	8d 42 04             	lea    0x4(%edx),%eax
84004e86:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e89:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e8c:	8d 48 04             	lea    0x4(%eax),%ecx
84004e8f:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e92:	8b 12                	mov    (%edx),%edx
84004e94:	89 10                	mov    %edx,(%eax)
84004e96:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e99:	8d 42 04             	lea    0x4(%edx),%eax
84004e9c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e9f:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004ea2:	8d 48 04             	lea    0x4(%eax),%ecx
84004ea5:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004ea8:	8b 12                	mov    (%edx),%edx
84004eaa:	89 10                	mov    %edx,(%eax)
84004eac:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84004eaf:	8b 10                	mov    (%eax),%edx
84004eb1:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004eb4:	89 10                	mov    %edx,(%eax)
84004eb6:	e9 ad 01 00 00       	jmp    84005068 <_realloc_r+0x82b>
84004ebb:	83 ec 04             	sub    $0x4,%esp
84004ebe:	ff 75 9c             	push   -0x64(%ebp)
84004ec1:	ff 75 0c             	push   0xc(%ebp)
84004ec4:	ff 75 a8             	push   -0x58(%ebp)
84004ec7:	e8 e4 f8 ff ff       	call   840047b0 <memmove>
84004ecc:	83 c4 10             	add    $0x10,%esp
84004ecf:	e9 94 01 00 00       	jmp    84005068 <_realloc_r+0x82b>
84004ed4:	83 ec 08             	sub    $0x8,%esp
84004ed7:	ff 75 10             	push   0x10(%ebp)
84004eda:	ff 75 08             	push   0x8(%ebp)
84004edd:	e8 34 cd ff ff       	call   84001c16 <_malloc_r>
84004ee2:	83 c4 10             	add    $0x10,%esp
84004ee5:	89 45 a8             	mov    %eax,-0x58(%ebp)
84004ee8:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
84004eec:	75 18                	jne    84004f06 <_realloc_r+0x6c9>
84004eee:	83 ec 0c             	sub    $0xc,%esp
84004ef1:	ff 75 08             	push   0x8(%ebp)
84004ef4:	e8 cd d5 ff ff       	call   840024c6 <__malloc_unlock>
84004ef9:	83 c4 10             	add    $0x10,%esp
84004efc:	b8 00 00 00 00       	mov    $0x0,%eax
84004f01:	e9 0f 02 00 00       	jmp    84005115 <_realloc_r+0x8d8>
84004f06:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004f09:	83 e8 08             	sub    $0x8,%eax
84004f0c:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004f0f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004f12:	8b 40 04             	mov    0x4(%eax),%eax
84004f15:	83 e0 fe             	and    $0xfffffffe,%eax
84004f18:	89 c2                	mov    %eax,%edx
84004f1a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004f1d:	01 d0                	add    %edx,%eax
84004f1f:	39 45 f4             	cmp    %eax,-0xc(%ebp)
84004f22:	75 17                	jne    84004f3b <_realloc_r+0x6fe>
84004f24:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004f27:	8b 40 04             	mov    0x4(%eax),%eax
84004f2a:	83 e0 fc             	and    $0xfffffffc,%eax
84004f2d:	01 45 f0             	add    %eax,-0x10(%ebp)
84004f30:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004f33:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004f36:	e9 2d 01 00 00       	jmp    84005068 <_realloc_r+0x82b>
84004f3b:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004f3e:	83 e8 04             	sub    $0x4,%eax
84004f41:	89 45 98             	mov    %eax,-0x68(%ebp)
84004f44:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
84004f48:	0f 87 de 00 00 00    	ja     8400502c <_realloc_r+0x7ef>
84004f4e:	8b 45 0c             	mov    0xc(%ebp),%eax
84004f51:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004f54:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004f57:	89 45 c8             	mov    %eax,-0x38(%ebp)
84004f5a:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
84004f5e:	0f 86 90 00 00 00    	jbe    84004ff4 <_realloc_r+0x7b7>
84004f64:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004f67:	8d 42 04             	lea    0x4(%edx),%eax
84004f6a:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004f6d:	8b 45 c8             	mov    -0x38(%ebp),%eax
84004f70:	8d 48 04             	lea    0x4(%eax),%ecx
84004f73:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84004f76:	8b 12                	mov    (%edx),%edx
84004f78:	89 10                	mov    %edx,(%eax)
84004f7a:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004f7d:	8d 42 04             	lea    0x4(%edx),%eax
84004f80:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004f83:	8b 45 c8             	mov    -0x38(%ebp),%eax
84004f86:	8d 48 04             	lea    0x4(%eax),%ecx
84004f89:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84004f8c:	8b 12                	mov    (%edx),%edx
84004f8e:	89 10                	mov    %edx,(%eax)
84004f90:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
84004f94:	76 5e                	jbe    84004ff4 <_realloc_r+0x7b7>
84004f96:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004f99:	8d 42 04             	lea    0x4(%edx),%eax
84004f9c:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004f9f:	8b 45 c8             	mov    -0x38(%ebp),%eax
84004fa2:	8d 48 04             	lea    0x4(%eax),%ecx
84004fa5:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84004fa8:	8b 12                	mov    (%edx),%edx
84004faa:	89 10                	mov    %edx,(%eax)
84004fac:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004faf:	8d 42 04             	lea    0x4(%edx),%eax
84004fb2:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004fb5:	8b 45 c8             	mov    -0x38(%ebp),%eax
84004fb8:	8d 48 04             	lea    0x4(%eax),%ecx
84004fbb:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84004fbe:	8b 12                	mov    (%edx),%edx
84004fc0:	89 10                	mov    %edx,(%eax)
84004fc2:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
84004fc6:	76 2c                	jbe    84004ff4 <_realloc_r+0x7b7>
84004fc8:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004fcb:	8d 42 04             	lea    0x4(%edx),%eax
84004fce:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004fd1:	8b 45 c8             	mov    -0x38(%ebp),%eax
84004fd4:	8d 48 04             	lea    0x4(%eax),%ecx
84004fd7:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84004fda:	8b 12                	mov    (%edx),%edx
84004fdc:	89 10                	mov    %edx,(%eax)
84004fde:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004fe1:	8d 42 04             	lea    0x4(%edx),%eax
84004fe4:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004fe7:	8b 45 c8             	mov    -0x38(%ebp),%eax
84004fea:	8d 48 04             	lea    0x4(%eax),%ecx
84004fed:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84004ff0:	8b 12                	mov    (%edx),%edx
84004ff2:	89 10                	mov    %edx,(%eax)
84004ff4:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004ff7:	8d 42 04             	lea    0x4(%edx),%eax
84004ffa:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004ffd:	8b 45 c8             	mov    -0x38(%ebp),%eax
84005000:	8d 48 04             	lea    0x4(%eax),%ecx
84005003:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84005006:	8b 12                	mov    (%edx),%edx
84005008:	89 10                	mov    %edx,(%eax)
8400500a:	8b 55 cc             	mov    -0x34(%ebp),%edx
8400500d:	8d 42 04             	lea    0x4(%edx),%eax
84005010:	89 45 cc             	mov    %eax,-0x34(%ebp)
84005013:	8b 45 c8             	mov    -0x38(%ebp),%eax
84005016:	8d 48 04             	lea    0x4(%eax),%ecx
84005019:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8400501c:	8b 12                	mov    (%edx),%edx
8400501e:	89 10                	mov    %edx,(%eax)
84005020:	8b 45 cc             	mov    -0x34(%ebp),%eax
84005023:	8b 10                	mov    (%eax),%edx
84005025:	8b 45 c8             	mov    -0x38(%ebp),%eax
84005028:	89 10                	mov    %edx,(%eax)
8400502a:	eb 14                	jmp    84005040 <_realloc_r+0x803>
8400502c:	83 ec 04             	sub    $0x4,%esp
8400502f:	ff 75 98             	push   -0x68(%ebp)
84005032:	ff 75 0c             	push   0xc(%ebp)
84005035:	ff 75 a8             	push   -0x58(%ebp)
84005038:	e8 73 f7 ff ff       	call   840047b0 <memmove>
8400503d:	83 c4 10             	add    $0x10,%esp
84005040:	83 ec 08             	sub    $0x8,%esp
84005043:	ff 75 0c             	push   0xc(%ebp)
84005046:	ff 75 08             	push   0x8(%ebp)
84005049:	e8 a1 c2 ff ff       	call   840012ef <_free_r>
8400504e:	83 c4 10             	add    $0x10,%esp
84005051:	83 ec 0c             	sub    $0xc,%esp
84005054:	ff 75 08             	push   0x8(%ebp)
84005057:	e8 6a d4 ff ff       	call   840024c6 <__malloc_unlock>
8400505c:	83 c4 10             	add    $0x10,%esp
8400505f:	8b 45 a8             	mov    -0x58(%ebp),%eax
84005062:	e9 ae 00 00 00       	jmp    84005115 <_realloc_r+0x8d8>
84005067:	90                   	nop
84005068:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400506b:	2b 45 bc             	sub    -0x44(%ebp),%eax
8400506e:	89 45 94             	mov    %eax,-0x6c(%ebp)
84005071:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
84005075:	76 5d                	jbe    840050d4 <_realloc_r+0x897>
84005077:	8b 55 f4             	mov    -0xc(%ebp),%edx
8400507a:	8b 45 bc             	mov    -0x44(%ebp),%eax
8400507d:	01 d0                	add    %edx,%eax
8400507f:	89 45 90             	mov    %eax,-0x70(%ebp)
84005082:	8b 45 f4             	mov    -0xc(%ebp),%eax
84005085:	8b 40 04             	mov    0x4(%eax),%eax
84005088:	83 e0 01             	and    $0x1,%eax
8400508b:	0b 45 bc             	or     -0x44(%ebp),%eax
8400508e:	89 c2                	mov    %eax,%edx
84005090:	8b 45 f4             	mov    -0xc(%ebp),%eax
84005093:	89 50 04             	mov    %edx,0x4(%eax)
84005096:	8b 45 94             	mov    -0x6c(%ebp),%eax
84005099:	83 c8 01             	or     $0x1,%eax
8400509c:	89 c2                	mov    %eax,%edx
8400509e:	8b 45 90             	mov    -0x70(%ebp),%eax
840050a1:	89 50 04             	mov    %edx,0x4(%eax)
840050a4:	8b 55 90             	mov    -0x70(%ebp),%edx
840050a7:	8b 45 94             	mov    -0x6c(%ebp),%eax
840050aa:	01 d0                	add    %edx,%eax
840050ac:	8b 50 04             	mov    0x4(%eax),%edx
840050af:	8b 4d 90             	mov    -0x70(%ebp),%ecx
840050b2:	8b 45 94             	mov    -0x6c(%ebp),%eax
840050b5:	01 c8                	add    %ecx,%eax
840050b7:	83 ca 01             	or     $0x1,%edx
840050ba:	89 50 04             	mov    %edx,0x4(%eax)
840050bd:	8b 45 90             	mov    -0x70(%ebp),%eax
840050c0:	83 c0 08             	add    $0x8,%eax
840050c3:	83 ec 08             	sub    $0x8,%esp
840050c6:	50                   	push   %eax
840050c7:	ff 75 08             	push   0x8(%ebp)
840050ca:	e8 20 c2 ff ff       	call   840012ef <_free_r>
840050cf:	83 c4 10             	add    $0x10,%esp
840050d2:	eb 2d                	jmp    84005101 <_realloc_r+0x8c4>
840050d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
840050d7:	8b 40 04             	mov    0x4(%eax),%eax
840050da:	83 e0 01             	and    $0x1,%eax
840050dd:	0b 45 f0             	or     -0x10(%ebp),%eax
840050e0:	89 c2                	mov    %eax,%edx
840050e2:	8b 45 f4             	mov    -0xc(%ebp),%eax
840050e5:	89 50 04             	mov    %edx,0x4(%eax)
840050e8:	8b 55 f4             	mov    -0xc(%ebp),%edx
840050eb:	8b 45 f0             	mov    -0x10(%ebp),%eax
840050ee:	01 d0                	add    %edx,%eax
840050f0:	8b 50 04             	mov    0x4(%eax),%edx
840050f3:	8b 4d f4             	mov    -0xc(%ebp),%ecx
840050f6:	8b 45 f0             	mov    -0x10(%ebp),%eax
840050f9:	01 c8                	add    %ecx,%eax
840050fb:	83 ca 01             	or     $0x1,%edx
840050fe:	89 50 04             	mov    %edx,0x4(%eax)
84005101:	83 ec 0c             	sub    $0xc,%esp
84005104:	ff 75 08             	push   0x8(%ebp)
84005107:	e8 ba d3 ff ff       	call   840024c6 <__malloc_unlock>
8400510c:	83 c4 10             	add    $0x10,%esp
8400510f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84005112:	83 c0 08             	add    $0x8,%eax
84005115:	c9                   	leave  
84005116:	c3                   	ret    

84005117 <lflush>:
84005117:	55                   	push   %ebp
84005118:	89 e5                	mov    %esp,%ebp
8400511a:	83 ec 08             	sub    $0x8,%esp
8400511d:	8b 45 08             	mov    0x8(%ebp),%eax
84005120:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
84005124:	98                   	cwtl   
84005125:	83 e0 09             	and    $0x9,%eax
84005128:	83 f8 09             	cmp    $0x9,%eax
8400512b:	75 10                	jne    8400513d <lflush+0x26>
8400512d:	83 ec 0c             	sub    $0xc,%esp
84005130:	ff 75 08             	push   0x8(%ebp)
84005133:	e8 7c bd ff ff       	call   84000eb4 <fflush>
84005138:	83 c4 10             	add    $0x10,%esp
8400513b:	eb 05                	jmp    84005142 <lflush+0x2b>
8400513d:	b8 00 00 00 00       	mov    $0x0,%eax
84005142:	c9                   	leave  
84005143:	c3                   	ret    

84005144 <__srefill_r>:
84005144:	55                   	push   %ebp
84005145:	89 e5                	mov    %esp,%ebp
84005147:	56                   	push   %esi
84005148:	53                   	push   %ebx
84005149:	83 ec 10             	sub    $0x10,%esp
8400514c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8400514f:	8b 45 08             	mov    0x8(%ebp),%eax
84005152:	89 45 f4             	mov    %eax,-0xc(%ebp)
84005155:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84005159:	74 18                	je     84005173 <__srefill_r+0x2f>
8400515b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400515e:	8b 40 38             	mov    0x38(%eax),%eax
84005161:	85 c0                	test   %eax,%eax
84005163:	75 0e                	jne    84005173 <__srefill_r+0x2f>
84005165:	83 ec 0c             	sub    $0xc,%esp
84005168:	ff 75 f4             	push   -0xc(%ebp)
8400516b:	e8 72 c0 ff ff       	call   840011e2 <__sinit>
84005170:	83 c4 10             	add    $0x10,%esp
84005173:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84005177:	98                   	cwtl   
84005178:	25 00 20 00 00       	and    $0x2000,%eax
8400517d:	85 c0                	test   %eax,%eax
8400517f:	75 14                	jne    84005195 <__srefill_r+0x51>
84005181:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84005185:	80 cc 20             	or     $0x20,%ah
84005188:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8400518c:	8b 43 64             	mov    0x64(%ebx),%eax
8400518f:	80 e4 df             	and    $0xdf,%ah
84005192:	89 43 64             	mov    %eax,0x64(%ebx)
84005195:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8400519c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840051a0:	98                   	cwtl   
840051a1:	83 e0 20             	and    $0x20,%eax
840051a4:	85 c0                	test   %eax,%eax
840051a6:	74 0a                	je     840051b2 <__srefill_r+0x6e>
840051a8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
840051ad:	e9 8c 01 00 00       	jmp    8400533e <__srefill_r+0x1fa>
840051b2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840051b6:	98                   	cwtl   
840051b7:	83 e0 04             	and    $0x4,%eax
840051ba:	85 c0                	test   %eax,%eax
840051bc:	75 79                	jne    84005237 <__srefill_r+0xf3>
840051be:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840051c2:	98                   	cwtl   
840051c3:	83 e0 10             	and    $0x10,%eax
840051c6:	85 c0                	test   %eax,%eax
840051c8:	75 1e                	jne    840051e8 <__srefill_r+0xa4>
840051ca:	8b 45 08             	mov    0x8(%ebp),%eax
840051cd:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
840051d3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840051d7:	83 c8 40             	or     $0x40,%eax
840051da:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840051de:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
840051e3:	e9 56 01 00 00       	jmp    8400533e <__srefill_r+0x1fa>
840051e8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840051ec:	98                   	cwtl   
840051ed:	83 e0 08             	and    $0x8,%eax
840051f0:	85 c0                	test   %eax,%eax
840051f2:	74 36                	je     8400522a <__srefill_r+0xe6>
840051f4:	83 ec 08             	sub    $0x8,%esp
840051f7:	53                   	push   %ebx
840051f8:	ff 75 08             	push   0x8(%ebp)
840051fb:	e8 5c bc ff ff       	call   84000e5c <_fflush_r>
84005200:	83 c4 10             	add    $0x10,%esp
84005203:	85 c0                	test   %eax,%eax
84005205:	74 0a                	je     84005211 <__srefill_r+0xcd>
84005207:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400520c:	e9 2d 01 00 00       	jmp    8400533e <__srefill_r+0x1fa>
84005211:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84005215:	83 e0 f7             	and    $0xfffffff7,%eax
84005218:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8400521c:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
84005223:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
8400522a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400522e:	83 c8 04             	or     $0x4,%eax
84005231:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84005235:	eb 46                	jmp    8400527d <__srefill_r+0x139>
84005237:	8b 43 30             	mov    0x30(%ebx),%eax
8400523a:	85 c0                	test   %eax,%eax
8400523c:	74 3f                	je     8400527d <__srefill_r+0x139>
8400523e:	8b 53 30             	mov    0x30(%ebx),%edx
84005241:	8d 43 40             	lea    0x40(%ebx),%eax
84005244:	39 c2                	cmp    %eax,%edx
84005246:	74 12                	je     8400525a <__srefill_r+0x116>
84005248:	8b 43 30             	mov    0x30(%ebx),%eax
8400524b:	83 ec 08             	sub    $0x8,%esp
8400524e:	50                   	push   %eax
8400524f:	ff 75 08             	push   0x8(%ebp)
84005252:	e8 98 c0 ff ff       	call   840012ef <_free_r>
84005257:	83 c4 10             	add    $0x10,%esp
8400525a:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
84005261:	8b 43 3c             	mov    0x3c(%ebx),%eax
84005264:	89 43 04             	mov    %eax,0x4(%ebx)
84005267:	8b 43 04             	mov    0x4(%ebx),%eax
8400526a:	85 c0                	test   %eax,%eax
8400526c:	74 0f                	je     8400527d <__srefill_r+0x139>
8400526e:	8b 43 38             	mov    0x38(%ebx),%eax
84005271:	89 03                	mov    %eax,(%ebx)
84005273:	b8 00 00 00 00       	mov    $0x0,%eax
84005278:	e9 c1 00 00 00       	jmp    8400533e <__srefill_r+0x1fa>
8400527d:	8b 43 10             	mov    0x10(%ebx),%eax
84005280:	85 c0                	test   %eax,%eax
84005282:	75 0f                	jne    84005293 <__srefill_r+0x14f>
84005284:	83 ec 08             	sub    $0x8,%esp
84005287:	53                   	push   %ebx
84005288:	ff 75 08             	push   0x8(%ebp)
8400528b:	e8 6e da ff ff       	call   84002cfe <__smakebuf_r>
84005290:	83 c4 10             	add    $0x10,%esp
84005293:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84005297:	98                   	cwtl   
84005298:	83 e0 03             	and    $0x3,%eax
8400529b:	85 c0                	test   %eax,%eax
8400529d:	74 48                	je     840052e7 <__srefill_r+0x1a3>
8400529f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840052a3:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
840052a7:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
840052ad:	a1 18 56 00 84       	mov    0x84005618,%eax
840052b2:	83 ec 08             	sub    $0x8,%esp
840052b5:	68 17 51 00 84       	push   $0x84005117
840052ba:	50                   	push   %eax
840052bb:	e8 6b c5 ff ff       	call   8400182b <_fwalk>
840052c0:	83 c4 10             	add    $0x10,%esp
840052c3:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
840052c7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840052cb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840052cf:	98                   	cwtl   
840052d0:	83 e0 09             	and    $0x9,%eax
840052d3:	83 f8 09             	cmp    $0x9,%eax
840052d6:	75 0f                	jne    840052e7 <__srefill_r+0x1a3>
840052d8:	83 ec 08             	sub    $0x8,%esp
840052db:	53                   	push   %ebx
840052dc:	ff 75 08             	push   0x8(%ebp)
840052df:	e8 52 b9 ff ff       	call   84000c36 <__sflush_r>
840052e4:	83 c4 10             	add    $0x10,%esp
840052e7:	8b 43 10             	mov    0x10(%ebx),%eax
840052ea:	89 03                	mov    %eax,(%ebx)
840052ec:	8b 43 20             	mov    0x20(%ebx),%eax
840052ef:	8b 73 14             	mov    0x14(%ebx),%esi
840052f2:	8b 0b                	mov    (%ebx),%ecx
840052f4:	8b 53 1c             	mov    0x1c(%ebx),%edx
840052f7:	56                   	push   %esi
840052f8:	51                   	push   %ecx
840052f9:	52                   	push   %edx
840052fa:	ff 75 08             	push   0x8(%ebp)
840052fd:	ff d0                	call   *%eax
840052ff:	83 c4 10             	add    $0x10,%esp
84005302:	89 43 04             	mov    %eax,0x4(%ebx)
84005305:	8b 43 04             	mov    0x4(%ebx),%eax
84005308:	85 c0                	test   %eax,%eax
8400530a:	7f 2d                	jg     84005339 <__srefill_r+0x1f5>
8400530c:	8b 43 04             	mov    0x4(%ebx),%eax
8400530f:	85 c0                	test   %eax,%eax
84005311:	75 0d                	jne    84005320 <__srefill_r+0x1dc>
84005313:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84005317:	83 c8 20             	or     $0x20,%eax
8400531a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8400531e:	eb 12                	jmp    84005332 <__srefill_r+0x1ee>
84005320:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
84005327:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400532b:	83 c8 40             	or     $0x40,%eax
8400532e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84005332:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84005337:	eb 05                	jmp    8400533e <__srefill_r+0x1fa>
84005339:	b8 00 00 00 00       	mov    $0x0,%eax
8400533e:	8d 65 f8             	lea    -0x8(%ebp),%esp
84005341:	5b                   	pop    %ebx
84005342:	5e                   	pop    %esi
84005343:	5d                   	pop    %ebp
84005344:	c3                   	ret    

84005345 <strcmp>:
84005345:	55                   	push   %ebp
84005346:	89 e5                	mov    %esp,%ebp
84005348:	83 ec 10             	sub    $0x10,%esp
8400534b:	8b 55 08             	mov    0x8(%ebp),%edx
8400534e:	8b 45 0c             	mov    0xc(%ebp),%eax
84005351:	09 d0                	or     %edx,%eax
84005353:	83 e0 03             	and    $0x3,%eax
84005356:	85 c0                	test   %eax,%eax
84005358:	75 5e                	jne    840053b8 <strcmp+0x73>
8400535a:	8b 45 08             	mov    0x8(%ebp),%eax
8400535d:	89 45 fc             	mov    %eax,-0x4(%ebp)
84005360:	8b 45 0c             	mov    0xc(%ebp),%eax
84005363:	89 45 f8             	mov    %eax,-0x8(%ebp)
84005366:	eb 2c                	jmp    84005394 <strcmp+0x4f>
84005368:	8b 45 fc             	mov    -0x4(%ebp),%eax
8400536b:	8b 00                	mov    (%eax),%eax
8400536d:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
84005373:	8b 45 fc             	mov    -0x4(%ebp),%eax
84005376:	8b 00                	mov    (%eax),%eax
84005378:	f7 d0                	not    %eax
8400537a:	21 d0                	and    %edx,%eax
8400537c:	25 80 80 80 80       	and    $0x80808080,%eax
84005381:	85 c0                	test   %eax,%eax
84005383:	74 07                	je     8400538c <strcmp+0x47>
84005385:	b8 00 00 00 00       	mov    $0x0,%eax
8400538a:	eb 5c                	jmp    840053e8 <strcmp+0xa3>
8400538c:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
84005390:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
84005394:	8b 45 fc             	mov    -0x4(%ebp),%eax
84005397:	8b 10                	mov    (%eax),%edx
84005399:	8b 45 f8             	mov    -0x8(%ebp),%eax
8400539c:	8b 00                	mov    (%eax),%eax
8400539e:	39 c2                	cmp    %eax,%edx
840053a0:	74 c6                	je     84005368 <strcmp+0x23>
840053a2:	8b 45 fc             	mov    -0x4(%ebp),%eax
840053a5:	89 45 08             	mov    %eax,0x8(%ebp)
840053a8:	8b 45 f8             	mov    -0x8(%ebp),%eax
840053ab:	89 45 0c             	mov    %eax,0xc(%ebp)
840053ae:	eb 08                	jmp    840053b8 <strcmp+0x73>
840053b0:	83 45 08 01          	addl   $0x1,0x8(%ebp)
840053b4:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
840053b8:	8b 45 08             	mov    0x8(%ebp),%eax
840053bb:	0f b6 00             	movzbl (%eax),%eax
840053be:	84 c0                	test   %al,%al
840053c0:	74 10                	je     840053d2 <strcmp+0x8d>
840053c2:	8b 45 08             	mov    0x8(%ebp),%eax
840053c5:	0f b6 10             	movzbl (%eax),%edx
840053c8:	8b 45 0c             	mov    0xc(%ebp),%eax
840053cb:	0f b6 00             	movzbl (%eax),%eax
840053ce:	38 c2                	cmp    %al,%dl
840053d0:	74 de                	je     840053b0 <strcmp+0x6b>
840053d2:	8b 45 08             	mov    0x8(%ebp),%eax
840053d5:	0f b6 00             	movzbl (%eax),%eax
840053d8:	0f b6 d0             	movzbl %al,%edx
840053db:	8b 45 0c             	mov    0xc(%ebp),%eax
840053de:	0f b6 00             	movzbl (%eax),%eax
840053e1:	0f b6 c8             	movzbl %al,%ecx
840053e4:	89 d0                	mov    %edx,%eax
840053e6:	29 c8                	sub    %ecx,%eax
840053e8:	c9                   	leave  
840053e9:	c3                   	ret    

840053ea <__get_global_locale>:
840053ea:	55                   	push   %ebp
840053eb:	89 e5                	mov    %esp,%ebp
840053ed:	b8 00 62 00 84       	mov    $0x84006200,%eax
840053f2:	5d                   	pop    %ebp
840053f3:	c3                   	ret    

840053f4 <__get_current_locale>:
840053f4:	55                   	push   %ebp
840053f5:	89 e5                	mov    %esp,%ebp
840053f7:	e8 ee ff ff ff       	call   840053ea <__get_global_locale>
840053fc:	5d                   	pop    %ebp
840053fd:	c3                   	ret    

840053fe <_wcrtomb_r>:
840053fe:	55                   	push   %ebp
840053ff:	89 e5                	mov    %esp,%ebp
84005401:	83 ec 18             	sub    $0x18,%esp
84005404:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8400540b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8400540f:	75 21                	jne    84005432 <_wcrtomb_r+0x34>
84005411:	e8 de ff ff ff       	call   840053f4 <__get_current_locale>
84005416:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8400541c:	ff 75 14             	push   0x14(%ebp)
8400541f:	6a 00                	push   $0x0
84005421:	8d 55 ea             	lea    -0x16(%ebp),%edx
84005424:	52                   	push   %edx
84005425:	ff 75 08             	push   0x8(%ebp)
84005428:	ff d0                	call   *%eax
8400542a:	83 c4 10             	add    $0x10,%esp
8400542d:	89 45 f4             	mov    %eax,-0xc(%ebp)
84005430:	eb 1f                	jmp    84005451 <_wcrtomb_r+0x53>
84005432:	e8 bd ff ff ff       	call   840053f4 <__get_current_locale>
84005437:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8400543d:	ff 75 14             	push   0x14(%ebp)
84005440:	ff 75 10             	push   0x10(%ebp)
84005443:	ff 75 0c             	push   0xc(%ebp)
84005446:	ff 75 08             	push   0x8(%ebp)
84005449:	ff d0                	call   *%eax
8400544b:	83 c4 10             	add    $0x10,%esp
8400544e:	89 45 f4             	mov    %eax,-0xc(%ebp)
84005451:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84005455:	75 19                	jne    84005470 <_wcrtomb_r+0x72>
84005457:	8b 45 14             	mov    0x14(%ebp),%eax
8400545a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
84005460:	8b 45 08             	mov    0x8(%ebp),%eax
84005463:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
84005469:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400546e:	eb 03                	jmp    84005473 <_wcrtomb_r+0x75>
84005470:	8b 45 f4             	mov    -0xc(%ebp),%eax
84005473:	c9                   	leave  
84005474:	c3                   	ret    

84005475 <wcrtomb>:
84005475:	55                   	push   %ebp
84005476:	89 e5                	mov    %esp,%ebp
84005478:	83 ec 28             	sub    $0x28,%esp
8400547b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
84005482:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84005487:	89 45 f0             	mov    %eax,-0x10(%ebp)
8400548a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8400548e:	75 21                	jne    840054b1 <wcrtomb+0x3c>
84005490:	e8 5f ff ff ff       	call   840053f4 <__get_current_locale>
84005495:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8400549b:	ff 75 10             	push   0x10(%ebp)
8400549e:	6a 00                	push   $0x0
840054a0:	8d 55 e6             	lea    -0x1a(%ebp),%edx
840054a3:	52                   	push   %edx
840054a4:	ff 75 f0             	push   -0x10(%ebp)
840054a7:	ff d0                	call   *%eax
840054a9:	83 c4 10             	add    $0x10,%esp
840054ac:	89 45 f4             	mov    %eax,-0xc(%ebp)
840054af:	eb 1f                	jmp    840054d0 <wcrtomb+0x5b>
840054b1:	e8 3e ff ff ff       	call   840053f4 <__get_current_locale>
840054b6:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
840054bc:	ff 75 10             	push   0x10(%ebp)
840054bf:	ff 75 0c             	push   0xc(%ebp)
840054c2:	ff 75 08             	push   0x8(%ebp)
840054c5:	ff 75 f0             	push   -0x10(%ebp)
840054c8:	ff d0                	call   *%eax
840054ca:	83 c4 10             	add    $0x10,%esp
840054cd:	89 45 f4             	mov    %eax,-0xc(%ebp)
840054d0:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
840054d4:	75 19                	jne    840054ef <wcrtomb+0x7a>
840054d6:	8b 45 10             	mov    0x10(%ebp),%eax
840054d9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
840054df:	8b 45 f0             	mov    -0x10(%ebp),%eax
840054e2:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
840054e8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
840054ed:	eb 03                	jmp    840054f2 <wcrtomb+0x7d>
840054ef:	8b 45 f4             	mov    -0xc(%ebp),%eax
840054f2:	c9                   	leave  
840054f3:	c3                   	ret    

840054f4 <__get_global_locale>:
840054f4:	55                   	push   %ebp
840054f5:	89 e5                	mov    %esp,%ebp
840054f7:	b8 00 62 00 84       	mov    $0x84006200,%eax
840054fc:	5d                   	pop    %ebp
840054fd:	c3                   	ret    

840054fe <__get_current_locale>:
840054fe:	55                   	push   %ebp
840054ff:	89 e5                	mov    %esp,%ebp
84005501:	e8 ee ff ff ff       	call   840054f4 <__get_global_locale>
84005506:	5d                   	pop    %ebp
84005507:	c3                   	ret    

84005508 <_wctomb_r>:
84005508:	55                   	push   %ebp
84005509:	89 e5                	mov    %esp,%ebp
8400550b:	83 ec 08             	sub    $0x8,%esp
8400550e:	e8 eb ff ff ff       	call   840054fe <__get_current_locale>
84005513:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
84005519:	ff 75 14             	push   0x14(%ebp)
8400551c:	ff 75 10             	push   0x10(%ebp)
8400551f:	ff 75 0c             	push   0xc(%ebp)
84005522:	ff 75 08             	push   0x8(%ebp)
84005525:	ff d0                	call   *%eax
84005527:	83 c4 10             	add    $0x10,%esp
8400552a:	c9                   	leave  
8400552b:	c3                   	ret    

8400552c <__ascii_wctomb>:
8400552c:	55                   	push   %ebp
8400552d:	89 e5                	mov    %esp,%ebp
8400552f:	83 ec 10             	sub    $0x10,%esp
84005532:	8b 45 10             	mov    0x10(%ebp),%eax
84005535:	89 45 fc             	mov    %eax,-0x4(%ebp)
84005538:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8400553c:	75 07                	jne    84005545 <__ascii_wctomb+0x19>
8400553e:	b8 00 00 00 00       	mov    $0x0,%eax
84005543:	eb 28                	jmp    8400556d <__ascii_wctomb+0x41>
84005545:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
8400554c:	76 10                	jbe    8400555e <__ascii_wctomb+0x32>
8400554e:	8b 45 08             	mov    0x8(%ebp),%eax
84005551:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
84005557:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400555c:	eb 0f                	jmp    8400556d <__ascii_wctomb+0x41>
8400555e:	8b 45 fc             	mov    -0x4(%ebp),%eax
84005561:	89 c2                	mov    %eax,%edx
84005563:	8b 45 0c             	mov    0xc(%ebp),%eax
84005566:	88 10                	mov    %dl,(%eax)
84005568:	b8 01 00 00 00       	mov    $0x1,%eax
8400556d:	c9                   	leave  
8400556e:	c3                   	ret    
