
/home/kbpoyo/code/cpp/MyOs/build/source/snake/snake.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/snake/snake.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x84000000

Program Header:
    LOAD off    0x00001000 vaddr 0x84000000 paddr 0x84000000 align 2**12
         filesz 0x0000638c memsz 0x00006418 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000559f  84000000  84000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00000401  840055a0  840055a0  000065a0  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009cc  840059c0  840059c0  000069c0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000078  840063a0  840063a0  0000738c  2**5
                  ALLOC
  4 .debug_line   00003d31  00000000  00000000  0000738c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_line_str 000010a2  00000000  00000000  0000b0bd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   0001bbac  00000000  00000000  0000c15f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 00006398  00000000  00000000  00027d0b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_aranges 00000630  00000000  00000000  0002e0a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_str    00001362  00000000  00000000  0002e6d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003d  00000000  00000000  0002fa3a  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00001560  00000000  00000000  0002fa78  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000004e  00000000  00000000  00030fd8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 main.c
840063a0 l     O .bss	00000004 row_max
840063a4 l     O .bss	00000004 col_max
840063a8 l     O .bss	00000004 food
840063ac l     O .bss	0000000c snake
84000443 l     F .text	00000052 is_hit_itself
84000495 l     F .text	00000051 is_hit_wall
840004e6 l     F .text	00000037 is_hit_food
8400051d l     F .text	00000030 show_char
8400054d l     F .text	0000001f show_string
84000657 l     F .text	00000051 add_head
840006a8 l     F .text	00000071 remove_tail
84000719 l     F .text	00000070 create_snake
84000789 l     F .text	00000103 create_food
8400088c l     F .text	00000024 free_food
840008b0 l     F .text	0000015f move_forward
84000a0f l     F .text	0000007a show_welcome
84000a89 l     F .text	0000002c begin_game
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
84000f14 l     F .text	000000ad std
84000fc1 l     F .text	0000001b stdin_init
84000fdc l     F .text	0000001b stdout_init
84000ff7 l     F .text	0000001b stderr_init
840063b8 l     O .bss	00000004 __sfp_recursive_mutex
840063bc l     O .bss	00000004 __sinit_recursive_mutex
840012ba l     F .text	0000000a __fp_lock
840012c4 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 getchar.c
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 impure.c
840059c0 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
840019aa l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 mlock.c
84006408 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 __call_atexit.c
8400640c l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
84002f81 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fputwc.c
84003edf l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
840045b5 l     F .text	0000000a __get_global_locale
840045bf l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 mbtowc_r.c
8400465b l     F .text	0000000a __get_global_locale
84004665 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lib_a-memchr.o
8400478d l       .text	00000000 L20
84004744 l       .text	00000000 L5
8400478a l       .text	00000000 L15
84004750 l       .text	00000000 L8
84004771 l       .text	00000000 L9
84004780 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
84005147 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
8400541a l     F .text	0000000a __get_global_locale
84005424 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
84005524 l     F .text	0000000a __get_global_locale
8400552e l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 ctype_.c
84004575 g     F .text	00000040 _isatty_r
84003a3a g     F .text	00000037 cleanup_glue
84002cdf g     F .text	00000046 _lseek_r
8400014f g     F .text	0000001b yield
840003e3 g     F .text	00000039 ioctl
84002520 g     F .text	00000035 printf
8400542e g     F .text	00000077 _wcrtomb_r
840028db g     F .text	0000004a __sseek
84001209 g     F .text	00000099 __sinit
84003c51 g     F .text	00000112 __swbuf_r
840045c9 g     F .text	0000005f _setlocale_r
84001012 g     F .text	0000006f __sfmoreglue
840024ed g     F .text	00000006 __malloc_unlock
840047e0 g       .text	00000000 memmove
840011ef g     F .text	0000001a _cleanup
84004094 g     F .text	00000043 _fstat_r
84006410 g     O .bss	00000004 errno
84003c34 g     F .text	0000001d __srget
84002876 g     F .text	0000000a __seofread
84000122 g     F .text	0000002d execve
840000c4 g     F .text	0000001b getpid
84002c09 g     F .text	00000067 _getc_r
84002c70 g     F .text	0000006f getc
84004798 g       .text	00000000 memcpy
84002626 g     F .text	0000020c setvbuf
840011ce g     F .text	00000021 _cleanup_r
84001971 g     F .text	0000001c malloc
840024f3 g     F .text	0000002d _printf_r
84000239 g     F .text	00000021 isatty
84001967 g     F .text	0000000a __getreent
840063c0 g     O .bss	00000004 __malloc_top_pad
840063a0 g       .bss	00000000 __bss_start__
840040d7 g     F .text	0000049e __sfvwrite_r
840025e6 g     F .text	00000040 _sbrk_r
8400036e g     F .text	00000040 readdir
840039f4 g     F .text	00000046 _read_r
84002ae5 g     F .text	00000107 _fclose_r
84000edb g     F .text	00000039 fflush
840063c4 g     O .bss	00000004 __malloc_max_sbrked_mem
8400020c g     F .text	0000002d lseek
84005638 g     O .rodata	00000004 _global_impure_ptr
8400486d g     F .text	000008da _realloc_r
84003ff5 g     F .text	00000057 _fputwc_r
840012ce g     F .text	00000024 __fp_lock_all
84003a71 g     F .text	00000160 _reclaim_reent
840001be g     F .text	0000002d write
8400025a g     F .text	00000027 fstat
8400004e g     F .text	0000004c sys_call
84002fe7 g     F .text	000000a8 __sfputs_r
840012a2 g     F .text	00000006 __sfp_lock_acquire
84004700 g       .text	00000000 memchr
84006418 g       .bss	00000000 __bss_end__
84001316 g     F .text	000003db _free_r
840002e5 g     F .text	00000021 wait
84005720 g     O .rodata	00000180 _ctype_b
84004628 g     F .text	00000014 __locale_mb_cur_max
84003bd1 g     F .text	00000063 __srget_r
84002990 g     F .text	00000115 __call_exitprocs
8400620c g     O .data	00000004 __malloc_sbrk_base
84000000 g       .text	00000000 _start
8400257d g     F .text	00000069 rand
84000191 g     F .text	0000002d read
8400058a g     F .text	000000cd create_map
8400056c g     F .text	0000001e clear_map
840063e0 g     O .bss	00000028 __malloc_current_mallinfo
8400041c g     F .text	00000027 unlink
840024f3 g     F .text	0000002d _iprintf_r
84002aa5 g     F .text	00000040 _close_r
84000107 g     F .text	0000001b fork
84003d84 g     F .text	0000015b __swsetup_r
84001081 g     F .text	0000014d __sfp
84005e00 g     O .data	00000408 __malloc_av_
840012b4 g     F .text	00000006 __sinit_lock_release
84002832 g     F .text	00000044 __sread
840024e7 g     F .text	00000006 __malloc_lock
84000281 g     F .text	00000021 sbrk
84000e83 g     F .text	00000058 _fflush_r
84000010 g     F .text	0000003e cstart
8400245f g       .text	00000000 memset
84000ab5 g     F .text	00000164 main
840063c8 g     O .bss	00000004 __malloc_max_total_mem
84003d63 g     F .text	00000021 __swbuf
84002555 g     F .text	00000028 srand
84002925 g     F .text	00000025 __sclose
84002bec g     F .text	0000001d fclose
84001942 g     F .text	00000025 getchar
84001c3d g     F .text	00000822 _malloc_r
8400555c g     F .text	00000043 __ascii_wctomb
84000306 g     F .text	00000068 opendir
84001852 g     F .text	00000068 _fwalk
8400466f g     F .text	0000002a _mbtowc_r
840016f1 g     F .text	00000161 _malloc_trim_r
84005375 g     F .text	000000a5 strcmp
8400308f g     F .text	00000025 vfiprintf
840002a2 g     F .text	00000021 dup
84002520 g     F .text	00000035 iprintf
84006414 g     O .bss	00000004 _PathLocale
8400294a g     F .text	00000046 _write_r
8400463c g     F .text	0000001f setlocale
8400340a g     F .text	0000019b _printf_common
84005de4 g     O .data	00000004 _impure_ptr
84000c5d g     F .text	00000226 __sflush_r
84005174 g     F .text	00000201 __srefill_r
84004699 g     F .text	00000058 __ascii_mbtowc
840012f2 g     F .text	00000024 __fp_unlock_all
840000df g     F .text	00000028 print_msg
84002e12 g     F .text	00000093 __swhatbuf_r
84001925 g     F .text	0000001d _getchar_r
84003f45 g     F .text	000000b0 __fputwc
84002880 g     F .text	0000005b __swrite
84006208 g     O .data	00000004 __malloc_trim_threshold
84000c19 g     F .text	00000044 exit
840030b4 g     F .text	00000356 _vfiprintf_r
840018ba g     F .text	0000006b _fwalk_reent
840012a8 g     F .text	00000006 __sfp_lock_release
840058a0 g     O .rodata	00000101 _ctype_
840002c3 g     F .text	00000022 _exit
84002d25 g     F .text	000000ed __smakebuf_r
840035a5 g     F .text	0000044f _printf_i
8400016a g     F .text	00000027 open
84002ea5 g     F .text	000000dc __sprint_r
840003ae g     F .text	00000035 closedir
84005538 g     F .text	00000024 _wctomb_r
840030b4 g     F .text	00000356 _vfprintf_r
8400009a g     F .text	0000002a msleep
840054a5 g     F .text	0000007f wcrtomb
840001eb g     F .text	00000021 close
84006220 g     O .data	0000016c __global_locale
8400308f g     F .text	00000025 vfprintf
8400404c g     F .text	00000048 fputwc
8400198d g     F .text	0000001d free
840012ae g     F .text	00000006 __sinit_lock_acquire



Disassembly of section .text:

84000000 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
84000000:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
84000003:	8e d8                	mov    %eax,%ds
	mov %ax, %es
84000005:	8e c0                	mov    %eax,%es
	mov %ax, %fs
84000007:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
84000009:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
8400000b:	e9 00 00 00 00       	jmp    84000010 <cstart>

84000010 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
84000010:	55                   	push   %ebp
84000011:	89 e5                	mov    %esp,%ebp
84000013:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
84000016:	c7 45 f4 a0 63 00 84 	movl   $0x840063a0,-0xc(%ebp)
    while (start < __bss_end__) {
8400001d:	eb 0c                	jmp    8400002b <cstart+0x1b>
        *(start++) = 0;
8400001f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000022:	8d 50 01             	lea    0x1(%eax),%edx
84000025:	89 55 f4             	mov    %edx,-0xc(%ebp)
84000028:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
8400002b:	81 7d f4 18 64 00 84 	cmpl   $0x84006418,-0xc(%ebp)
84000032:	72 eb                	jb     8400001f <cstart+0xf>
    }
    
    exit(main(argc, argv));
84000034:	83 ec 08             	sub    $0x8,%esp
84000037:	ff 75 0c             	push   0xc(%ebp)
8400003a:	ff 75 08             	push   0x8(%ebp)
8400003d:	e8 73 0a 00 00       	call   84000ab5 <main>
84000042:	83 c4 10             	add    $0x10,%esp
84000045:	83 ec 0c             	sub    $0xc,%esp
84000048:	50                   	push   %eax
84000049:	e8 cb 0b 00 00       	call   84000c19 <exit>

8400004e <sys_call>:
#include    "os_cfg.h"
#include    "lib_syscall.h"
#include    <stdlib.h>


int sys_call(syscall_args_t *args) {
8400004e:	55                   	push   %ebp
8400004f:	89 e5                	mov    %esp,%ebp
84000051:	57                   	push   %edi
84000052:	56                   	push   %esi
84000053:	53                   	push   %ebx
84000054:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
84000057:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8400005e:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
84000065:	8b 45 08             	mov    0x8(%ebp),%eax
84000068:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
8400006b:	8b 55 08             	mov    0x8(%ebp),%edx
8400006e:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
84000071:	8b 4d 08             	mov    0x8(%ebp),%ecx
84000074:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
84000077:	8b 5d 08             	mov    0x8(%ebp),%ebx
8400007a:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
8400007d:	8b 75 08             	mov    0x8(%ebp),%esi
84000080:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
84000082:	8d 7d e8             	lea    -0x18(%ebp),%edi
84000085:	50                   	push   %eax
84000086:	52                   	push   %edx
84000087:	51                   	push   %ecx
84000088:	53                   	push   %ebx
84000089:	56                   	push   %esi
8400008a:	ff 1f                	lcall  *(%edi)
8400008c:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
8400008f:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
84000092:	83 c4 10             	add    $0x10,%esp
84000095:	5b                   	pop    %ebx
84000096:	5e                   	pop    %esi
84000097:	5f                   	pop    %edi
84000098:	5d                   	pop    %ebp
84000099:	c3                   	ret    

8400009a <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
8400009a:	55                   	push   %ebp
8400009b:	89 e5                	mov    %esp,%ebp
8400009d:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
840000a0:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
840000a4:	7e 1b                	jle    840000c1 <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
840000a6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
840000ad:	8b 45 08             	mov    0x8(%ebp),%eax
840000b0:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
840000b3:	8d 45 ec             	lea    -0x14(%ebp),%eax
840000b6:	50                   	push   %eax
840000b7:	e8 92 ff ff ff       	call   8400004e <sys_call>
840000bc:	83 c4 04             	add    $0x4,%esp
840000bf:	eb 01                	jmp    840000c2 <msleep+0x28>
    if (ms <= 0) return;
840000c1:	90                   	nop

}
840000c2:	c9                   	leave  
840000c3:	c3                   	ret    

840000c4 <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
840000c4:	55                   	push   %ebp
840000c5:	89 e5                	mov    %esp,%ebp
840000c7:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
840000ca:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
840000d1:	8d 45 ec             	lea    -0x14(%ebp),%eax
840000d4:	50                   	push   %eax
840000d5:	e8 74 ff ff ff       	call   8400004e <sys_call>
840000da:	83 c4 04             	add    $0x4,%esp
}
840000dd:	c9                   	leave  
840000de:	c3                   	ret    

840000df <print_msg>:

void print_msg(const char *fmt, int arg) {
840000df:	55                   	push   %ebp
840000e0:	89 e5                	mov    %esp,%ebp
840000e2:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
840000e5:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
840000ec:	8b 45 08             	mov    0x8(%ebp),%eax
840000ef:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
840000f2:	8b 45 0c             	mov    0xc(%ebp),%eax
840000f5:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
840000f8:	8d 45 ec             	lea    -0x14(%ebp),%eax
840000fb:	50                   	push   %eax
840000fc:	e8 4d ff ff ff       	call   8400004e <sys_call>
84000101:	83 c4 04             	add    $0x4,%esp
}
84000104:	90                   	nop
84000105:	c9                   	leave  
84000106:	c3                   	ret    

84000107 <fork>:

int fork (void) {
84000107:	55                   	push   %ebp
84000108:	89 e5                	mov    %esp,%ebp
8400010a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
8400010d:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
84000114:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000117:	50                   	push   %eax
84000118:	e8 31 ff ff ff       	call   8400004e <sys_call>
8400011d:	83 c4 04             	add    $0x4,%esp
}
84000120:	c9                   	leave  
84000121:	c3                   	ret    

84000122 <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
84000122:	55                   	push   %ebp
84000123:	89 e5                	mov    %esp,%ebp
84000125:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
84000128:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
8400012f:	8b 45 08             	mov    0x8(%ebp),%eax
84000132:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
84000135:	8b 45 0c             	mov    0xc(%ebp),%eax
84000138:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
8400013b:	8b 45 10             	mov    0x10(%ebp),%eax
8400013e:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
84000141:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000144:	50                   	push   %eax
84000145:	e8 04 ff ff ff       	call   8400004e <sys_call>
8400014a:	83 c4 04             	add    $0x4,%esp
}
8400014d:	c9                   	leave  
8400014e:	c3                   	ret    

8400014f <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
8400014f:	55                   	push   %ebp
84000150:	89 e5                	mov    %esp,%ebp
84000152:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
84000155:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
8400015c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8400015f:	50                   	push   %eax
84000160:	e8 e9 fe ff ff       	call   8400004e <sys_call>
84000165:	83 c4 04             	add    $0x4,%esp
}
84000168:	c9                   	leave  
84000169:	c3                   	ret    

8400016a <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
8400016a:	55                   	push   %ebp
8400016b:	89 e5                	mov    %esp,%ebp
8400016d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
84000170:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
84000177:	8b 45 08             	mov    0x8(%ebp),%eax
8400017a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
8400017d:	8b 45 0c             	mov    0xc(%ebp),%eax
84000180:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
84000183:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000186:	50                   	push   %eax
84000187:	e8 c2 fe ff ff       	call   8400004e <sys_call>
8400018c:	83 c4 04             	add    $0x4,%esp
}
8400018f:	c9                   	leave  
84000190:	c3                   	ret    

84000191 <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
84000191:	55                   	push   %ebp
84000192:	89 e5                	mov    %esp,%ebp
84000194:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
84000197:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
8400019e:	8b 45 08             	mov    0x8(%ebp),%eax
840001a1:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
840001a4:	8b 45 0c             	mov    0xc(%ebp),%eax
840001a7:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
840001aa:	8b 45 10             	mov    0x10(%ebp),%eax
840001ad:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
840001b0:	8d 45 ec             	lea    -0x14(%ebp),%eax
840001b3:	50                   	push   %eax
840001b4:	e8 95 fe ff ff       	call   8400004e <sys_call>
840001b9:	83 c4 04             	add    $0x4,%esp
}
840001bc:	c9                   	leave  
840001bd:	c3                   	ret    

840001be <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
840001be:	55                   	push   %ebp
840001bf:	89 e5                	mov    %esp,%ebp
840001c1:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
840001c4:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
840001cb:	8b 45 08             	mov    0x8(%ebp),%eax
840001ce:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
840001d1:	8b 45 0c             	mov    0xc(%ebp),%eax
840001d4:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
840001d7:	8b 45 10             	mov    0x10(%ebp),%eax
840001da:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
840001dd:	8d 45 ec             	lea    -0x14(%ebp),%eax
840001e0:	50                   	push   %eax
840001e1:	e8 68 fe ff ff       	call   8400004e <sys_call>
840001e6:	83 c4 04             	add    $0x4,%esp
}
840001e9:	c9                   	leave  
840001ea:	c3                   	ret    

840001eb <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
840001eb:	55                   	push   %ebp
840001ec:	89 e5                	mov    %esp,%ebp
840001ee:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
840001f1:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
840001f8:	8b 45 08             	mov    0x8(%ebp),%eax
840001fb:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
840001fe:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000201:	50                   	push   %eax
84000202:	e8 47 fe ff ff       	call   8400004e <sys_call>
84000207:	83 c4 04             	add    $0x4,%esp
}
8400020a:	c9                   	leave  
8400020b:	c3                   	ret    

8400020c <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
8400020c:	55                   	push   %ebp
8400020d:	89 e5                	mov    %esp,%ebp
8400020f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
84000212:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
84000219:	8b 45 08             	mov    0x8(%ebp),%eax
8400021c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
8400021f:	8b 45 0c             	mov    0xc(%ebp),%eax
84000222:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
84000225:	8b 45 10             	mov    0x10(%ebp),%eax
84000228:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8400022b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8400022e:	50                   	push   %eax
8400022f:	e8 1a fe ff ff       	call   8400004e <sys_call>
84000234:	83 c4 04             	add    $0x4,%esp
}
84000237:	c9                   	leave  
84000238:	c3                   	ret    

84000239 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
84000239:	55                   	push   %ebp
8400023a:	89 e5                	mov    %esp,%ebp
8400023c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
8400023f:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
84000246:	8b 45 08             	mov    0x8(%ebp),%eax
84000249:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8400024c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8400024f:	50                   	push   %eax
84000250:	e8 f9 fd ff ff       	call   8400004e <sys_call>
84000255:	83 c4 04             	add    $0x4,%esp
}
84000258:	c9                   	leave  
84000259:	c3                   	ret    

8400025a <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
8400025a:	55                   	push   %ebp
8400025b:	89 e5                	mov    %esp,%ebp
8400025d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
84000260:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
84000267:	8b 45 08             	mov    0x8(%ebp),%eax
8400026a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
8400026d:	8b 45 0c             	mov    0xc(%ebp),%eax
84000270:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
84000273:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000276:	50                   	push   %eax
84000277:	e8 d2 fd ff ff       	call   8400004e <sys_call>
8400027c:	83 c4 04             	add    $0x4,%esp
}
8400027f:	c9                   	leave  
84000280:	c3                   	ret    

84000281 <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
84000281:	55                   	push   %ebp
84000282:	89 e5                	mov    %esp,%ebp
84000284:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
84000287:	c7 45 ec 3f 00 00 00 	movl   $0x3f,-0x14(%ebp)
    args.arg0 = (int)incr;
8400028e:	8b 45 08             	mov    0x8(%ebp),%eax
84000291:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
84000294:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000297:	50                   	push   %eax
84000298:	e8 b1 fd ff ff       	call   8400004e <sys_call>
8400029d:	83 c4 04             	add    $0x4,%esp
}
840002a0:	c9                   	leave  
840002a1:	c3                   	ret    

840002a2 <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
840002a2:	55                   	push   %ebp
840002a3:	89 e5                	mov    %esp,%ebp
840002a5:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
840002a8:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = file;
840002af:	8b 45 08             	mov    0x8(%ebp),%eax
840002b2:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
840002b5:	8d 45 ec             	lea    -0x14(%ebp),%eax
840002b8:	50                   	push   %eax
840002b9:	e8 90 fd ff ff       	call   8400004e <sys_call>
840002be:	83 c4 04             	add    $0x4,%esp
}
840002c1:	c9                   	leave  
840002c2:	c3                   	ret    

840002c3 <_exit>:
/**
 * @brief 进程退出的系统调用
 * 
 * @param status 
 */
void _exit(int status) {
840002c3:	55                   	push   %ebp
840002c4:	89 e5                	mov    %esp,%ebp
840002c6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
840002c9:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = status;
840002d0:	8b 45 08             	mov    0x8(%ebp),%eax
840002d3:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    sys_call(&args);
840002d6:	8d 45 ec             	lea    -0x14(%ebp),%eax
840002d9:	50                   	push   %eax
840002da:	e8 6f fd ff ff       	call   8400004e <sys_call>
840002df:	83 c4 04             	add    $0x4,%esp
}
840002e2:	90                   	nop
840002e3:	c9                   	leave  
840002e4:	c3                   	ret    

840002e5 <wait>:
 * @brief 回收进程资源
 * 
 * @param status 
 * @return int 
 */
int wait(int *status) {
840002e5:	55                   	push   %ebp
840002e6:	89 e5                	mov    %esp,%ebp
840002e8:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
840002eb:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
840002f2:	8b 45 08             	mov    0x8(%ebp),%eax
840002f5:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    return sys_call(&args);
840002f8:	8d 45 ec             	lea    -0x14(%ebp),%eax
840002fb:	50                   	push   %eax
840002fc:	e8 4d fd ff ff       	call   8400004e <sys_call>
84000301:	83 c4 04             	add    $0x4,%esp
}
84000304:	c9                   	leave  
84000305:	c3                   	ret    

84000306 <opendir>:
 * @brief 打开一个目录
 * 
 * @param path 
 * @return DIR* 
 */
DIR *opendir(const char *path) {
84000306:	55                   	push   %ebp
84000307:	89 e5                	mov    %esp,%ebp
84000309:	83 ec 28             	sub    $0x28,%esp
    DIR *dir = (DIR*)malloc(sizeof(DIR));
8400030c:	83 ec 0c             	sub    $0xc,%esp
8400030f:	6a 20                	push   $0x20
84000311:	e8 5b 16 00 00       	call   84001971 <malloc>
84000316:	83 c4 10             	add    $0x10,%esp
84000319:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR*)0) {
8400031c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84000320:	75 07                	jne    84000329 <opendir+0x23>
        return (DIR*)0;
84000322:	b8 00 00 00 00       	mov    $0x0,%eax
84000327:	eb 43                	jmp    8400036c <opendir+0x66>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
84000329:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)path;
84000330:	8b 45 08             	mov    0x8(%ebp),%eax
84000333:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
84000336:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000339:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
8400033c:	83 ec 0c             	sub    $0xc,%esp
8400033f:	8d 45 dc             	lea    -0x24(%ebp),%eax
84000342:	50                   	push   %eax
84000343:	e8 06 fd ff ff       	call   8400004e <sys_call>
84000348:	83 c4 10             	add    $0x10,%esp
8400034b:	89 45 f0             	mov    %eax,-0x10(%ebp)

    if (err < 0) {
8400034e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
84000352:	79 15                	jns    84000369 <opendir+0x63>
        free(dir);
84000354:	83 ec 0c             	sub    $0xc,%esp
84000357:	ff 75 f4             	push   -0xc(%ebp)
8400035a:	e8 2e 16 00 00       	call   8400198d <free>
8400035f:	83 c4 10             	add    $0x10,%esp
        return (DIR*)0;
84000362:	b8 00 00 00 00       	mov    $0x0,%eax
84000367:	eb 03                	jmp    8400036c <opendir+0x66>
    }

    return dir;    
84000369:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
8400036c:	c9                   	leave  
8400036d:	c3                   	ret    

8400036e <readdir>:
 * @brief 读取目录信息得到目录项表
 * 
 * @param dir 
 * @return struct dirent* 
 */
struct dirent *readdir(DIR *dir) {
8400036e:	55                   	push   %ebp
8400036f:	89 e5                	mov    %esp,%ebp
84000371:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_readdir;
84000374:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
8400037b:	8b 45 08             	mov    0x8(%ebp),%eax
8400037e:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&(dir->dirent);
84000381:	8b 45 08             	mov    0x8(%ebp),%eax
84000384:	83 c0 04             	add    $0x4,%eax
84000387:	89 45 f0             	mov    %eax,-0x10(%ebp)

    int err = sys_call(&args);
8400038a:	8d 45 e8             	lea    -0x18(%ebp),%eax
8400038d:	50                   	push   %eax
8400038e:	e8 bb fc ff ff       	call   8400004e <sys_call>
84000393:	83 c4 04             	add    $0x4,%esp
84000396:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0) {
84000399:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
8400039d:	79 07                	jns    840003a6 <readdir+0x38>
        return (struct dirent*)0;
8400039f:	b8 00 00 00 00       	mov    $0x0,%eax
840003a4:	eb 06                	jmp    840003ac <readdir+0x3e>
    }

    return &dir->dirent;   
840003a6:	8b 45 08             	mov    0x8(%ebp),%eax
840003a9:	83 c0 04             	add    $0x4,%eax
}
840003ac:	c9                   	leave  
840003ad:	c3                   	ret    

840003ae <closedir>:
 * @brief 关闭目录
 * 
 * @param dir 
 * @return int 
 */
int closedir(DIR *dir) {
840003ae:	55                   	push   %ebp
840003af:	89 e5                	mov    %esp,%ebp
840003b1:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
840003b4:	c7 45 e0 3e 00 00 00 	movl   $0x3e,-0x20(%ebp)
    args.arg0 = (int)dir;
840003bb:	8b 45 08             	mov    0x8(%ebp),%eax
840003be:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
840003c1:	8d 45 e0             	lea    -0x20(%ebp),%eax
840003c4:	50                   	push   %eax
840003c5:	e8 84 fc ff ff       	call   8400004e <sys_call>
840003ca:	83 c4 04             	add    $0x4,%esp
840003cd:	89 45 f4             	mov    %eax,-0xc(%ebp)
    free(dir);
840003d0:	83 ec 0c             	sub    $0xc,%esp
840003d3:	ff 75 08             	push   0x8(%ebp)
840003d6:	e8 b2 15 00 00       	call   8400198d <free>
840003db:	83 c4 10             	add    $0x10,%esp

    return err;   
840003de:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
840003e1:	c9                   	leave  
840003e2:	c3                   	ret    

840003e3 <ioctl>:
 * @param cmd 
 * @param arg0 
 * @param arg1 
 * @return int 
 */
int ioctl(int file, int cmd, int arg0, int arg1) {
840003e3:	55                   	push   %ebp
840003e4:	89 e5                	mov    %esp,%ebp
840003e6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_ioctl;
840003e9:	c7 45 e8 3a 00 00 00 	movl   $0x3a,-0x18(%ebp)
    args.arg0 = file;
840003f0:	8b 45 08             	mov    0x8(%ebp),%eax
840003f3:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = cmd;
840003f6:	8b 45 0c             	mov    0xc(%ebp),%eax
840003f9:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg2 = arg0;
840003fc:	8b 45 10             	mov    0x10(%ebp),%eax
840003ff:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg3 = arg1;
84000402:	8b 45 14             	mov    0x14(%ebp),%eax
84000405:	89 45 f8             	mov    %eax,-0x8(%ebp)

    int err = sys_call(&args);
84000408:	8d 45 e8             	lea    -0x18(%ebp),%eax
8400040b:	50                   	push   %eax
8400040c:	e8 3d fc ff ff       	call   8400004e <sys_call>
84000411:	83 c4 04             	add    $0x4,%esp
84000414:	89 45 fc             	mov    %eax,-0x4(%ebp)

    return err;   
84000417:	8b 45 fc             	mov    -0x4(%ebp),%eax
}
8400041a:	c9                   	leave  
8400041b:	c3                   	ret    

8400041c <unlink>:
 * @brief 删除一个文件
 * 
 * @param path 
 * @return int 
 */
int unlink(const char *path) {
8400041c:	55                   	push   %ebp
8400041d:	89 e5                	mov    %esp,%ebp
8400041f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_unlink;
84000422:	c7 45 e8 3b 00 00 00 	movl   $0x3b,-0x18(%ebp)
    args.arg0 = (path);
84000429:	8b 45 08             	mov    0x8(%ebp),%eax
8400042c:	89 45 ec             	mov    %eax,-0x14(%ebp)

    int err = sys_call(&args);
8400042f:	8d 45 e8             	lea    -0x18(%ebp),%eax
84000432:	50                   	push   %eax
84000433:	e8 16 fc ff ff       	call   8400004e <sys_call>
84000438:	83 c4 04             	add    $0x4,%esp
8400043b:	89 45 fc             	mov    %eax,-0x4(%ebp)

    return err;   
8400043e:	8b 45 fc             	mov    -0x4(%ebp),%eax
84000441:	c9                   	leave  
84000442:	c3                   	ret    

84000443 <is_hit_itself>:
static snake_t snake;		// 目前只支持一条蛇

/**
 * 判断蛇是否咬到自己
 */
static int is_hit_itself (void) {
84000443:	55                   	push   %ebp
84000444:	89 e5                	mov    %esp,%ebp
84000446:	83 ec 10             	sub    $0x10,%esp
	for (body_part_t * body = snake.head->next; body; body = body->next) {
84000449:	a1 ac 63 00 84       	mov    0x840063ac,%eax
8400044e:	8b 40 08             	mov    0x8(%eax),%eax
84000451:	89 45 fc             	mov    %eax,-0x4(%ebp)
84000454:	eb 32                	jmp    84000488 <is_hit_itself+0x45>
		if ((body->row == snake.head->row) && (body->col == snake.head->col)) {
84000456:	8b 45 fc             	mov    -0x4(%ebp),%eax
84000459:	8b 10                	mov    (%eax),%edx
8400045b:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000460:	8b 00                	mov    (%eax),%eax
84000462:	39 c2                	cmp    %eax,%edx
84000464:	75 19                	jne    8400047f <is_hit_itself+0x3c>
84000466:	8b 45 fc             	mov    -0x4(%ebp),%eax
84000469:	8b 50 04             	mov    0x4(%eax),%edx
8400046c:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000471:	8b 40 04             	mov    0x4(%eax),%eax
84000474:	39 c2                	cmp    %eax,%edx
84000476:	75 07                	jne    8400047f <is_hit_itself+0x3c>
			return 1;
84000478:	b8 01 00 00 00       	mov    $0x1,%eax
8400047d:	eb 14                	jmp    84000493 <is_hit_itself+0x50>
	for (body_part_t * body = snake.head->next; body; body = body->next) {
8400047f:	8b 45 fc             	mov    -0x4(%ebp),%eax
84000482:	8b 40 08             	mov    0x8(%eax),%eax
84000485:	89 45 fc             	mov    %eax,-0x4(%ebp)
84000488:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
8400048c:	75 c8                	jne    84000456 <is_hit_itself+0x13>
		}
	}
	return 0;
8400048e:	b8 00 00 00 00       	mov    $0x0,%eax
}
84000493:	c9                   	leave  
84000494:	c3                   	ret    

84000495 <is_hit_wall>:

/**
 * 判断是否碰到墙
 */
static int is_hit_wall (void) {
84000495:	55                   	push   %ebp
84000496:	89 e5                	mov    %esp,%ebp
	return ((snake.head->row <= 0) 
84000498:	a1 ac 63 00 84       	mov    0x840063ac,%eax
8400049d:	8b 00                	mov    (%eax),%eax
			|| (snake.head->col <= 0))
			|| (snake.head->row >= row_max - 1) 
			|| (snake.head->col >= col_max - 1);
8400049f:	85 c0                	test   %eax,%eax
840004a1:	7e 35                	jle    840004d8 <is_hit_wall+0x43>
			|| (snake.head->col <= 0))
840004a3:	a1 ac 63 00 84       	mov    0x840063ac,%eax
840004a8:	8b 40 04             	mov    0x4(%eax),%eax
840004ab:	85 c0                	test   %eax,%eax
840004ad:	7e 29                	jle    840004d8 <is_hit_wall+0x43>
			|| (snake.head->row >= row_max - 1) 
840004af:	a1 ac 63 00 84       	mov    0x840063ac,%eax
840004b4:	8b 00                	mov    (%eax),%eax
840004b6:	8b 15 a0 63 00 84    	mov    0x840063a0,%edx
840004bc:	83 ea 01             	sub    $0x1,%edx
840004bf:	39 d0                	cmp    %edx,%eax
840004c1:	7d 15                	jge    840004d8 <is_hit_wall+0x43>
			|| (snake.head->col >= col_max - 1);
840004c3:	a1 ac 63 00 84       	mov    0x840063ac,%eax
840004c8:	8b 40 04             	mov    0x4(%eax),%eax
840004cb:	8b 15 a4 63 00 84    	mov    0x840063a4,%edx
840004d1:	83 ea 01             	sub    $0x1,%edx
840004d4:	39 d0                	cmp    %edx,%eax
840004d6:	7c 07                	jl     840004df <is_hit_wall+0x4a>
840004d8:	b8 01 00 00 00       	mov    $0x1,%eax
840004dd:	eb 05                	jmp    840004e4 <is_hit_wall+0x4f>
840004df:	b8 00 00 00 00       	mov    $0x0,%eax
}
840004e4:	5d                   	pop    %ebp
840004e5:	c3                   	ret    

840004e6 <is_hit_food>:

/**
 * 判断是否吃到食物
 */
static int is_hit_food (void) {
840004e6:	55                   	push   %ebp
840004e7:	89 e5                	mov    %esp,%ebp
	return ((snake.head->row == food->row) && (snake.head->col == food->col));
840004e9:	a1 ac 63 00 84       	mov    0x840063ac,%eax
840004ee:	8b 10                	mov    (%eax),%edx
840004f0:	a1 a8 63 00 84       	mov    0x840063a8,%eax
840004f5:	8b 00                	mov    (%eax),%eax
840004f7:	39 c2                	cmp    %eax,%edx
840004f9:	75 1b                	jne    84000516 <is_hit_food+0x30>
840004fb:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000500:	8b 50 04             	mov    0x4(%eax),%edx
84000503:	a1 a8 63 00 84       	mov    0x840063a8,%eax
84000508:	8b 40 04             	mov    0x4(%eax),%eax
8400050b:	39 c2                	cmp    %eax,%edx
8400050d:	75 07                	jne    84000516 <is_hit_food+0x30>
8400050f:	b8 01 00 00 00       	mov    $0x1,%eax
84000514:	eb 05                	jmp    8400051b <is_hit_food+0x35>
84000516:	b8 00 00 00 00       	mov    $0x0,%eax
}
8400051b:	5d                   	pop    %ebp
8400051c:	c3                   	ret    

8400051d <show_char>:

static inline void show_char(int row, int col, char c) {
8400051d:	55                   	push   %ebp
8400051e:	89 e5                	mov    %esp,%ebp
84000520:	83 ec 18             	sub    $0x18,%esp
84000523:	8b 45 10             	mov    0x10(%ebp),%eax
84000526:	88 45 f4             	mov    %al,-0xc(%ebp)
    printf("\x1b[%d;%dH%c\x1b[%d;%dH", row, col, c, row, col);
84000529:	0f be 45 f4          	movsbl -0xc(%ebp),%eax
8400052d:	83 ec 08             	sub    $0x8,%esp
84000530:	ff 75 0c             	push   0xc(%ebp)
84000533:	ff 75 08             	push   0x8(%ebp)
84000536:	50                   	push   %eax
84000537:	ff 75 0c             	push   0xc(%ebp)
8400053a:	ff 75 08             	push   0x8(%ebp)
8400053d:	68 a0 55 00 84       	push   $0x840055a0
84000542:	e8 d9 1f 00 00       	call   84002520 <iprintf>
84000547:	83 c4 20             	add    $0x20,%esp
}
8400054a:	90                   	nop
8400054b:	c9                   	leave  
8400054c:	c3                   	ret    

8400054d <show_string>:

static inline void show_string (int row, int col, char * str) {
8400054d:	55                   	push   %ebp
8400054e:	89 e5                	mov    %esp,%ebp
84000550:	83 ec 08             	sub    $0x8,%esp
    printf("\x1b[%d;%dH%s", row, col, str);
84000553:	ff 75 10             	push   0x10(%ebp)
84000556:	ff 75 0c             	push   0xc(%ebp)
84000559:	ff 75 08             	push   0x8(%ebp)
8400055c:	68 b3 55 00 84       	push   $0x840055b3
84000561:	e8 ba 1f 00 00       	call   84002520 <iprintf>
84000566:	83 c4 10             	add    $0x10,%esp
}
84000569:	90                   	nop
8400056a:	c9                   	leave  
8400056b:	c3                   	ret    

8400056c <clear_map>:

/**
 * 清空整个地图
 */
void clear_map (void) {
8400056c:	55                   	push   %ebp
8400056d:	89 e5                	mov    %esp,%ebp
8400056f:	83 ec 08             	sub    $0x8,%esp
    printf("%s", ESC_CLEAR_SCREEN);
84000572:	83 ec 08             	sub    $0x8,%esp
84000575:	68 be 55 00 84       	push   $0x840055be
8400057a:	68 c3 55 00 84       	push   $0x840055c3
8400057f:	e8 9c 1f 00 00       	call   84002520 <iprintf>
84000584:	83 c4 10             	add    $0x10,%esp
}
84000587:	90                   	nop
84000588:	c9                   	leave  
84000589:	c3                   	ret    

8400058a <create_map>:

/**
 * 创建地图
 */
void create_map(void) {
8400058a:	55                   	push   %ebp
8400058b:	89 e5                	mov    %esp,%ebp
8400058d:	83 ec 18             	sub    $0x18,%esp
	clear_map();
84000590:	e8 d7 ff ff ff       	call   8400056c <clear_map>

    // 上下行
    for (int col = 1; col < col_max - 1; col++) {
84000595:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
8400059c:	eb 16                	jmp    840005b4 <create_map+0x2a>
        show_char(0, col, '=');
8400059e:	83 ec 04             	sub    $0x4,%esp
840005a1:	6a 3d                	push   $0x3d
840005a3:	ff 75 f4             	push   -0xc(%ebp)
840005a6:	6a 00                	push   $0x0
840005a8:	e8 70 ff ff ff       	call   8400051d <show_char>
840005ad:	83 c4 10             	add    $0x10,%esp
    for (int col = 1; col < col_max - 1; col++) {
840005b0:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
840005b4:	a1 a4 63 00 84       	mov    0x840063a4,%eax
840005b9:	83 e8 01             	sub    $0x1,%eax
840005bc:	39 45 f4             	cmp    %eax,-0xc(%ebp)
840005bf:	7c dd                	jl     8400059e <create_map+0x14>
    }
    for (int col = 1; col < col_max - 1; col++) {
840005c1:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
840005c8:	eb 1d                	jmp    840005e7 <create_map+0x5d>
        show_char(row_max -1, col, '=');
840005ca:	a1 a0 63 00 84       	mov    0x840063a0,%eax
840005cf:	83 e8 01             	sub    $0x1,%eax
840005d2:	83 ec 04             	sub    $0x4,%esp
840005d5:	6a 3d                	push   $0x3d
840005d7:	ff 75 f0             	push   -0x10(%ebp)
840005da:	50                   	push   %eax
840005db:	e8 3d ff ff ff       	call   8400051d <show_char>
840005e0:	83 c4 10             	add    $0x10,%esp
    for (int col = 1; col < col_max - 1; col++) {
840005e3:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
840005e7:	a1 a4 63 00 84       	mov    0x840063a4,%eax
840005ec:	83 e8 01             	sub    $0x1,%eax
840005ef:	39 45 f0             	cmp    %eax,-0x10(%ebp)
840005f2:	7c d6                	jl     840005ca <create_map+0x40>
    }

    // 左右边界
    for (int row = 1; row < row_max - 1; row++) {
840005f4:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
840005fb:	eb 16                	jmp    84000613 <create_map+0x89>
        show_char(row, 0, '|');
840005fd:	83 ec 04             	sub    $0x4,%esp
84000600:	6a 7c                	push   $0x7c
84000602:	6a 00                	push   $0x0
84000604:	ff 75 ec             	push   -0x14(%ebp)
84000607:	e8 11 ff ff ff       	call   8400051d <show_char>
8400060c:	83 c4 10             	add    $0x10,%esp
    for (int row = 1; row < row_max - 1; row++) {
8400060f:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
84000613:	a1 a0 63 00 84       	mov    0x840063a0,%eax
84000618:	83 e8 01             	sub    $0x1,%eax
8400061b:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8400061e:	7c dd                	jl     840005fd <create_map+0x73>
    }
    for (int row = 1; row < row_max - 1; row++) {
84000620:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
84000627:	eb 1d                	jmp    84000646 <create_map+0xbc>
        show_char(row, col_max - 1, '|');
84000629:	a1 a4 63 00 84       	mov    0x840063a4,%eax
8400062e:	83 e8 01             	sub    $0x1,%eax
84000631:	83 ec 04             	sub    $0x4,%esp
84000634:	6a 7c                	push   $0x7c
84000636:	50                   	push   %eax
84000637:	ff 75 e8             	push   -0x18(%ebp)
8400063a:	e8 de fe ff ff       	call   8400051d <show_char>
8400063f:	83 c4 10             	add    $0x10,%esp
    for (int row = 1; row < row_max - 1; row++) {
84000642:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
84000646:	a1 a0 63 00 84       	mov    0x840063a0,%eax
8400064b:	83 e8 01             	sub    $0x1,%eax
8400064e:	39 45 e8             	cmp    %eax,-0x18(%ebp)
84000651:	7c d6                	jl     84000629 <create_map+0x9f>
    }
}
84000653:	90                   	nop
84000654:	90                   	nop
84000655:	c9                   	leave  
84000656:	c3                   	ret    

84000657 <add_head>:

/**
 * 给蛇添加头部
 */
static void add_head (int row, int col) {
84000657:	55                   	push   %ebp
84000658:	89 e5                	mov    %esp,%ebp
8400065a:	83 ec 18             	sub    $0x18,%esp
	body_part_t * part = (body_part_t *)malloc(sizeof(body_part_t));
8400065d:	83 ec 0c             	sub    $0xc,%esp
84000660:	6a 0c                	push   $0xc
84000662:	e8 0a 13 00 00       	call   84001971 <malloc>
84000667:	83 c4 10             	add    $0x10,%esp
8400066a:	89 45 f4             	mov    %eax,-0xc(%ebp)
	part->row = row;
8400066d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000670:	8b 55 08             	mov    0x8(%ebp),%edx
84000673:	89 10                	mov    %edx,(%eax)
	part->col = col;
84000675:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000678:	8b 55 0c             	mov    0xc(%ebp),%edx
8400067b:	89 50 04             	mov    %edx,0x4(%eax)
	part->next = snake.head;
8400067e:	8b 15 ac 63 00 84    	mov    0x840063ac,%edx
84000684:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000687:	89 50 08             	mov    %edx,0x8(%eax)
	snake.head = part;
8400068a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400068d:	a3 ac 63 00 84       	mov    %eax,0x840063ac
	show_char(row, col, '*');
84000692:	83 ec 04             	sub    $0x4,%esp
84000695:	6a 2a                	push   $0x2a
84000697:	ff 75 0c             	push   0xc(%ebp)
8400069a:	ff 75 08             	push   0x8(%ebp)
8400069d:	e8 7b fe ff ff       	call   8400051d <show_char>
840006a2:	83 c4 10             	add    $0x10,%esp
}
840006a5:	90                   	nop
840006a6:	c9                   	leave  
840006a7:	c3                   	ret    

840006a8 <remove_tail>:

/**
 * 移除蛇尾的最后一个结点
 */
static void remove_tail (void) {
840006a8:	55                   	push   %ebp
840006a9:	89 e5                	mov    %esp,%ebp
840006ab:	83 ec 18             	sub    $0x18,%esp
	// 先定位curr到最后一个结点
	body_part_t * pre = (body_part_t *)0;
840006ae:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
	body_part_t * curr = snake.head;
840006b5:	a1 ac 63 00 84       	mov    0x840063ac,%eax
840006ba:	89 45 f0             	mov    %eax,-0x10(%ebp)
	while (curr->next) {
840006bd:	eb 0f                	jmp    840006ce <remove_tail+0x26>
		pre = curr;
840006bf:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006c2:	89 45 f4             	mov    %eax,-0xc(%ebp)
		curr = curr->next;
840006c5:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006c8:	8b 40 08             	mov    0x8(%eax),%eax
840006cb:	89 45 f0             	mov    %eax,-0x10(%ebp)
	while (curr->next) {
840006ce:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006d1:	8b 40 08             	mov    0x8(%eax),%eax
840006d4:	85 c0                	test   %eax,%eax
840006d6:	75 e7                	jne    840006bf <remove_tail+0x17>
	}

	show_char(curr->row, curr->col, ' ');
840006d8:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006db:	8b 50 04             	mov    0x4(%eax),%edx
840006de:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006e1:	8b 00                	mov    (%eax),%eax
840006e3:	83 ec 04             	sub    $0x4,%esp
840006e6:	6a 20                	push   $0x20
840006e8:	52                   	push   %edx
840006e9:	50                   	push   %eax
840006ea:	e8 2e fe ff ff       	call   8400051d <show_char>
840006ef:	83 c4 10             	add    $0x10,%esp

	// 再移除
	pre->next = curr->next;
840006f2:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006f5:	8b 50 08             	mov    0x8(%eax),%edx
840006f8:	8b 45 f4             	mov    -0xc(%ebp),%eax
840006fb:	89 50 08             	mov    %edx,0x8(%eax)
	curr->next = (body_part_t *)0;
840006fe:	8b 45 f0             	mov    -0x10(%ebp),%eax
84000701:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
	free(curr);
84000708:	83 ec 0c             	sub    $0xc,%esp
8400070b:	ff 75 f0             	push   -0x10(%ebp)
8400070e:	e8 7a 12 00 00       	call   8400198d <free>
84000713:	83 c4 10             	add    $0x10,%esp
}
84000716:	90                   	nop
84000717:	c9                   	leave  
84000718:	c3                   	ret    

84000719 <create_snake>:

/**
 * 创建蛇。最开始只有一个头
 */
static void create_snake (void) {
84000719:	55                   	push   %ebp
8400071a:	89 e5                	mov    %esp,%ebp
8400071c:	83 ec 08             	sub    $0x8,%esp
	snake.head = (body_part_t *)malloc(sizeof(body_part_t));
8400071f:	83 ec 0c             	sub    $0xc,%esp
84000722:	6a 0c                	push   $0xc
84000724:	e8 48 12 00 00       	call   84001971 <malloc>
84000729:	83 c4 10             	add    $0x10,%esp
8400072c:	a3 ac 63 00 84       	mov    %eax,0x840063ac
	snake.head->row = 10;        // 初始位置
84000731:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000736:	c7 00 0a 00 00 00    	movl   $0xa,(%eax)
	snake.head->col = 20;
8400073c:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000741:	c7 40 04 14 00 00 00 	movl   $0x14,0x4(%eax)
	snake.head->next = (body_part_t *)0;
84000748:	a1 ac 63 00 84       	mov    0x840063ac,%eax
8400074d:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
	snake.status = SNAKE_BIT_NONE;
84000754:	c7 05 b0 63 00 84 00 	movl   $0x0,0x840063b0
8400075b:	00 00 00 
	snake.dir = PLAYER1_KEY_LEFT;
8400075e:	c7 05 b4 63 00 84 61 	movl   $0x61,0x840063b4
84000765:	00 00 00 
    show_char(snake.head->row, snake.head->col, '*');
84000768:	a1 ac 63 00 84       	mov    0x840063ac,%eax
8400076d:	8b 50 04             	mov    0x4(%eax),%edx
84000770:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000775:	8b 00                	mov    (%eax),%eax
84000777:	83 ec 04             	sub    $0x4,%esp
8400077a:	6a 2a                	push   $0x2a
8400077c:	52                   	push   %edx
8400077d:	50                   	push   %eax
8400077e:	e8 9a fd ff ff       	call   8400051d <show_char>
84000783:	83 c4 10             	add    $0x10,%esp
}
84000786:	90                   	nop
84000787:	c9                   	leave  
84000788:	c3                   	ret    

84000789 <create_food>:

/**
 * 创建食物
 */
static void create_food(void)  {
84000789:	55                   	push   %ebp
8400078a:	89 e5                	mov    %esp,%ebp
8400078c:	83 ec 18             	sub    $0x18,%esp
	// 创建一个body
	food = (body_part_t *)malloc(sizeof(body_part_t));
8400078f:	83 ec 0c             	sub    $0xc,%esp
84000792:	6a 0c                	push   $0xc
84000794:	e8 d8 11 00 00       	call   84001971 <malloc>
84000799:	83 c4 10             	add    $0x10,%esp
8400079c:	a3 a8 63 00 84       	mov    %eax,0x840063a8

	// 在设定位置时要避免与身体重合，所以要反复调整
	body_part_t * part = snake.head;
840007a1:	a1 ac 63 00 84       	mov    0x840063ac,%eax
840007a6:	89 45 f4             	mov    %eax,-0xc(%ebp)
	do {
		// 设定一个随机的位置，没有随机数怎么办？
		// 只要让每次出现的位置有变化即可，不一定要真的随机
		food->row = 1 + rand() % (row_max - 3);
840007a9:	e8 cf 1d 00 00       	call   8400257d <rand>
840007ae:	8b 15 a0 63 00 84    	mov    0x840063a0,%edx
840007b4:	8d 4a fd             	lea    -0x3(%edx),%ecx
840007b7:	99                   	cltd   
840007b8:	f7 f9                	idiv   %ecx
840007ba:	a1 a8 63 00 84       	mov    0x840063a8,%eax
840007bf:	83 c2 01             	add    $0x1,%edx
840007c2:	89 10                	mov    %edx,(%eax)
		food->col = 1 + rand() % (col_max - 3);
840007c4:	e8 b4 1d 00 00       	call   8400257d <rand>
840007c9:	8b 15 a4 63 00 84    	mov    0x840063a4,%edx
840007cf:	8d 4a fd             	lea    -0x3(%edx),%ecx
840007d2:	99                   	cltd   
840007d3:	f7 f9                	idiv   %ecx
840007d5:	a1 a8 63 00 84       	mov    0x840063a8,%eax
840007da:	83 c2 01             	add    $0x1,%edx
840007dd:	89 50 04             	mov    %edx,0x4(%eax)

		// 食物不能在墙上
		if ((food->row < 0) || (food->row >= row_max)
840007e0:	a1 a8 63 00 84       	mov    0x840063a8,%eax
840007e5:	8b 00                	mov    (%eax),%eax
840007e7:	85 c0                	test   %eax,%eax
840007e9:	0f 88 95 00 00 00    	js     84000884 <create_food+0xfb>
840007ef:	a1 a8 63 00 84       	mov    0x840063a8,%eax
840007f4:	8b 10                	mov    (%eax),%edx
840007f6:	a1 a0 63 00 84       	mov    0x840063a0,%eax
840007fb:	39 c2                	cmp    %eax,%edx
840007fd:	0f 8d 81 00 00 00    	jge    84000884 <create_food+0xfb>
				|| (food->col < 0) || (food->col >= col_max)) {
84000803:	a1 a8 63 00 84       	mov    0x840063a8,%eax
84000808:	8b 40 04             	mov    0x4(%eax),%eax
8400080b:	85 c0                	test   %eax,%eax
8400080d:	78 75                	js     84000884 <create_food+0xfb>
8400080f:	a1 a8 63 00 84       	mov    0x840063a8,%eax
84000814:	8b 50 04             	mov    0x4(%eax),%edx
84000817:	a1 a4 63 00 84       	mov    0x840063a4,%eax
8400081c:	39 c2                	cmp    %eax,%edx
8400081e:	7d 64                	jge    84000884 <create_food+0xfb>
			continue;
		}

		// 食物不能在蛇身上
		// 遍历，如果有重合，则重来。没有则退出
		while (part) {
84000820:	eb 4f                	jmp    84000871 <create_food+0xe8>
			if ((food->row != snake.head->row) || (food->col != snake.head->col)) {
84000822:	a1 a8 63 00 84       	mov    0x840063a8,%eax
84000827:	8b 10                	mov    (%eax),%edx
84000829:	a1 ac 63 00 84       	mov    0x840063ac,%eax
8400082e:	8b 00                	mov    (%eax),%eax
84000830:	39 c2                	cmp    %eax,%edx
84000832:	75 14                	jne    84000848 <create_food+0xbf>
84000834:	a1 a8 63 00 84       	mov    0x840063a8,%eax
84000839:	8b 50 04             	mov    0x4(%eax),%edx
8400083c:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000841:	8b 40 04             	mov    0x4(%eax),%eax
84000844:	39 c2                	cmp    %eax,%edx
84000846:	74 20                	je     84000868 <create_food+0xdf>
				// 将食物显示出来
				show_char(food->row, food->col, '*');
84000848:	a1 a8 63 00 84       	mov    0x840063a8,%eax
8400084d:	8b 50 04             	mov    0x4(%eax),%edx
84000850:	a1 a8 63 00 84       	mov    0x840063a8,%eax
84000855:	8b 00                	mov    (%eax),%eax
84000857:	83 ec 04             	sub    $0x4,%esp
8400085a:	6a 2a                	push   $0x2a
8400085c:	52                   	push   %edx
8400085d:	50                   	push   %eax
8400085e:	e8 ba fc ff ff       	call   8400051d <show_char>
84000863:	83 c4 10             	add    $0x10,%esp
				return;
84000866:	eb 22                	jmp    8400088a <create_food+0x101>
			}
			part = part->next;
84000868:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400086b:	8b 40 08             	mov    0x8(%eax),%eax
8400086e:	89 45 f4             	mov    %eax,-0xc(%ebp)
		while (part) {
84000871:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84000875:	75 ab                	jne    84000822 <create_food+0x99>
		}
		part = snake.head;
84000877:	a1 ac 63 00 84       	mov    0x840063ac,%eax
8400087c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400087f:	e9 25 ff ff ff       	jmp    840007a9 <create_food+0x20>
			continue;
84000884:	90                   	nop
		food->row = 1 + rand() % (row_max - 3);
84000885:	e9 1f ff ff ff       	jmp    840007a9 <create_food+0x20>
	} while (1);
}
8400088a:	c9                   	leave  
8400088b:	c3                   	ret    

8400088c <free_food>:

/**
 * 释放掉食物
 */
static void free_food (void) {
8400088c:	55                   	push   %ebp
8400088d:	89 e5                	mov    %esp,%ebp
8400088f:	83 ec 08             	sub    $0x8,%esp
	free(food);
84000892:	a1 a8 63 00 84       	mov    0x840063a8,%eax
84000897:	83 ec 0c             	sub    $0xc,%esp
8400089a:	50                   	push   %eax
8400089b:	e8 ed 10 00 00       	call   8400198d <free>
840008a0:	83 c4 10             	add    $0x10,%esp
	food = (body_part_t *)0;
840008a3:	c7 05 a8 63 00 84 00 	movl   $0x0,0x840063a8
840008aa:	00 00 00 
}
840008ad:	90                   	nop
840008ae:	c9                   	leave  
840008af:	c3                   	ret    

840008b0 <move_forward>:

/**
 * 蛇向前移动一个位置，具体移动方向由键盘控制
 */
static void move_forward (int dir) {
840008b0:	55                   	push   %ebp
840008b1:	89 e5                	mov    %esp,%ebp
840008b3:	83 ec 18             	sub    $0x18,%esp
	int next_row, next_col;

	// 计算下一位置
	switch (dir) {
840008b6:	83 7d 08 77          	cmpl   $0x77,0x8(%ebp)
840008ba:	74 5f                	je     8400091b <move_forward+0x6b>
840008bc:	83 7d 08 77          	cmpl   $0x77,0x8(%ebp)
840008c0:	0f 8f 43 01 00 00    	jg     84000a09 <move_forward+0x159>
840008c6:	83 7d 08 73          	cmpl   $0x73,0x8(%ebp)
840008ca:	74 69                	je     84000935 <move_forward+0x85>
840008cc:	83 7d 08 73          	cmpl   $0x73,0x8(%ebp)
840008d0:	0f 8f 33 01 00 00    	jg     84000a09 <move_forward+0x159>
840008d6:	83 7d 08 61          	cmpl   $0x61,0x8(%ebp)
840008da:	74 0b                	je     840008e7 <move_forward+0x37>
840008dc:	83 7d 08 64          	cmpl   $0x64,0x8(%ebp)
840008e0:	74 1f                	je     84000901 <move_forward+0x51>
	case PLAYER1_KEY_DOWN:
		next_row = snake.head->row + 1;
		next_col = snake.head->col;
		break;
	default:
		return;
840008e2:	e9 22 01 00 00       	jmp    84000a09 <move_forward+0x159>
		next_row = snake.head->row;
840008e7:	a1 ac 63 00 84       	mov    0x840063ac,%eax
840008ec:	8b 00                	mov    (%eax),%eax
840008ee:	89 45 f4             	mov    %eax,-0xc(%ebp)
		next_col = snake.head->col - 1;
840008f1:	a1 ac 63 00 84       	mov    0x840063ac,%eax
840008f6:	8b 40 04             	mov    0x4(%eax),%eax
840008f9:	83 e8 01             	sub    $0x1,%eax
840008fc:	89 45 f0             	mov    %eax,-0x10(%ebp)
		break;
840008ff:	eb 4d                	jmp    8400094e <move_forward+0x9e>
		next_row = snake.head->row;
84000901:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000906:	8b 00                	mov    (%eax),%eax
84000908:	89 45 f4             	mov    %eax,-0xc(%ebp)
		next_col = snake.head->col + 1;
8400090b:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000910:	8b 40 04             	mov    0x4(%eax),%eax
84000913:	83 c0 01             	add    $0x1,%eax
84000916:	89 45 f0             	mov    %eax,-0x10(%ebp)
		break;
84000919:	eb 33                	jmp    8400094e <move_forward+0x9e>
		next_row = snake.head->row - 1;
8400091b:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000920:	8b 00                	mov    (%eax),%eax
84000922:	83 e8 01             	sub    $0x1,%eax
84000925:	89 45 f4             	mov    %eax,-0xc(%ebp)
		next_col = snake.head->col;
84000928:	a1 ac 63 00 84       	mov    0x840063ac,%eax
8400092d:	8b 40 04             	mov    0x4(%eax),%eax
84000930:	89 45 f0             	mov    %eax,-0x10(%ebp)
		break;
84000933:	eb 19                	jmp    8400094e <move_forward+0x9e>
		next_row = snake.head->row + 1;
84000935:	a1 ac 63 00 84       	mov    0x840063ac,%eax
8400093a:	8b 00                	mov    (%eax),%eax
8400093c:	83 c0 01             	add    $0x1,%eax
8400093f:	89 45 f4             	mov    %eax,-0xc(%ebp)
		next_col = snake.head->col;
84000942:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000947:	8b 40 04             	mov    0x4(%eax),%eax
8400094a:	89 45 f0             	mov    %eax,-0x10(%ebp)
		break;
8400094d:	90                   	nop
	}

	body_part_t * next_part = snake.head->next;
8400094e:	a1 ac 63 00 84       	mov    0x840063ac,%eax
84000953:	8b 40 08             	mov    0x8(%eax),%eax
84000956:	89 45 ec             	mov    %eax,-0x14(%ebp)
	if (next_part) {
84000959:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8400095d:	74 19                	je     84000978 <move_forward+0xc8>
		if ((next_row == next_part->row) && (next_col == next_part->col)) {
8400095f:	8b 45 ec             	mov    -0x14(%ebp),%eax
84000962:	8b 00                	mov    (%eax),%eax
84000964:	39 45 f4             	cmp    %eax,-0xc(%ebp)
84000967:	75 0f                	jne    84000978 <move_forward+0xc8>
84000969:	8b 45 ec             	mov    -0x14(%ebp),%eax
8400096c:	8b 40 04             	mov    0x4(%eax),%eax
8400096f:	39 45 f0             	cmp    %eax,-0x10(%ebp)
84000972:	0f 84 94 00 00 00    	je     84000a0c <move_forward+0x15c>
			return;
		}
	}

	// 先不管有没有食物，都生成一个头部，然后前移
	add_head(next_row, next_col);
84000978:	83 ec 08             	sub    $0x8,%esp
8400097b:	ff 75 f0             	push   -0x10(%ebp)
8400097e:	ff 75 f4             	push   -0xc(%ebp)
84000981:	e8 d1 fc ff ff       	call   84000657 <add_head>
84000986:	83 c4 10             	add    $0x10,%esp

	// 然后检查相应的异常情况
	if (is_hit_itself()) {
84000989:	e8 b5 fa ff ff       	call   84000443 <is_hit_itself>
8400098e:	85 c0                	test   %eax,%eax
84000990:	74 11                	je     840009a3 <move_forward+0xf3>
		snake.status = SNAKE_BIT_ITSELF;
84000992:	c7 05 b0 63 00 84 01 	movl   $0x1,0x840063b0
84000999:	00 00 00 
		remove_tail();
8400099c:	e8 07 fd ff ff       	call   840006a8 <remove_tail>
840009a1:	eb 48                	jmp    840009eb <move_forward+0x13b>
	} else if (is_hit_wall()) {
840009a3:	e8 ed fa ff ff       	call   84000495 <is_hit_wall>
840009a8:	85 c0                	test   %eax,%eax
840009aa:	74 11                	je     840009bd <move_forward+0x10d>
		snake.status = SNAKE_BIT_WALL;
840009ac:	c7 05 b0 63 00 84 02 	movl   $0x2,0x840063b0
840009b3:	00 00 00 
		remove_tail();
840009b6:	e8 ed fc ff ff       	call   840006a8 <remove_tail>
840009bb:	eb 2e                	jmp    840009eb <move_forward+0x13b>
	} else if (is_hit_food()){
840009bd:	e8 24 fb ff ff       	call   840004e6 <is_hit_food>
840009c2:	85 c0                	test   %eax,%eax
840009c4:	74 16                	je     840009dc <move_forward+0x12c>
		// 食物被吃掉, 回收，重新生成
		free_food();
840009c6:	e8 c1 fe ff ff       	call   8400088c <free_food>
		create_food();
840009cb:	e8 b9 fd ff ff       	call   84000789 <create_food>
		snake.status = SNAKE_BIT_FOOD;
840009d0:	c7 05 b0 63 00 84 03 	movl   $0x3,0x840063b0
840009d7:	00 00 00 
840009da:	eb 0f                	jmp    840009eb <move_forward+0x13b>
	} else {
		// 没有吃到食物，需要移除尾部
		remove_tail();
840009dc:	e8 c7 fc ff ff       	call   840006a8 <remove_tail>
		snake.status = SNAKE_BIT_NONE;
840009e1:	c7 05 b0 63 00 84 00 	movl   $0x0,0x840063b0
840009e8:	00 00 00 
	}

	snake.dir = dir;
840009eb:	8b 45 08             	mov    0x8(%ebp),%eax
840009ee:	a3 b4 63 00 84       	mov    %eax,0x840063b4
	fflush(stdout);
840009f3:	e8 6f 0f 00 00       	call   84001967 <__getreent>
840009f8:	8b 40 08             	mov    0x8(%eax),%eax
840009fb:	83 ec 0c             	sub    $0xc,%esp
840009fe:	50                   	push   %eax
840009ff:	e8 d7 04 00 00       	call   84000edb <fflush>
84000a04:	83 c4 10             	add    $0x10,%esp
84000a07:	eb 04                	jmp    84000a0d <move_forward+0x15d>
		return;
84000a09:	90                   	nop
84000a0a:	eb 01                	jmp    84000a0d <move_forward+0x15d>
			return;
84000a0c:	90                   	nop
}
84000a0d:	c9                   	leave  
84000a0e:	c3                   	ret    

84000a0f <show_welcome>:

/**
 * 初始化游戏
 */
static void show_welcome (void) {
84000a0f:	55                   	push   %ebp
84000a10:	89 e5                	mov    %esp,%ebp
84000a12:	83 ec 08             	sub    $0x8,%esp
	clear_map();
84000a15:	e8 52 fb ff ff       	call   8400056c <clear_map>
	// setvbuf(stdout, NULL, _IONBF, 0); 调试用

    show_string(0, 0, "Welcome to sname game");
84000a1a:	83 ec 04             	sub    $0x4,%esp
84000a1d:	68 c6 55 00 84       	push   $0x840055c6
84000a22:	6a 00                	push   $0x0
84000a24:	6a 00                	push   $0x0
84000a26:	e8 22 fb ff ff       	call   8400054d <show_string>
84000a2b:	83 c4 10             	add    $0x10,%esp
    show_string(1, 0, "Use a.w.s.d to move snake");
84000a2e:	83 ec 04             	sub    $0x4,%esp
84000a31:	68 dc 55 00 84       	push   $0x840055dc
84000a36:	6a 00                	push   $0x0
84000a38:	6a 01                	push   $0x1
84000a3a:	e8 0e fb ff ff       	call   8400054d <show_string>
84000a3f:	83 c4 10             	add    $0x10,%esp
    show_string(2, 0, "Press any key to start game");
84000a42:	83 ec 04             	sub    $0x4,%esp
84000a45:	68 f6 55 00 84       	push   $0x840055f6
84000a4a:	6a 00                	push   $0x0
84000a4c:	6a 02                	push   $0x2
84000a4e:	e8 fa fa ff ff       	call   8400054d <show_string>
84000a53:	83 c4 10             	add    $0x10,%esp
	fflush(stdout);
84000a56:	e8 0c 0f 00 00       	call   84001967 <__getreent>
84000a5b:	8b 40 08             	mov    0x8(%eax),%eax
84000a5e:	83 ec 0c             	sub    $0xc,%esp
84000a61:	50                   	push   %eax
84000a62:	e8 74 04 00 00       	call   84000edb <fflush>
84000a67:	83 c4 10             	add    $0x10,%esp
	
	// 按Q即退出，所以无缓存输入
	setvbuf(stdin, NULL, _IONBF, 0);
84000a6a:	e8 f8 0e 00 00       	call   84001967 <__getreent>
84000a6f:	8b 40 04             	mov    0x4(%eax),%eax
84000a72:	6a 00                	push   $0x0
84000a74:	6a 02                	push   $0x2
84000a76:	6a 00                	push   $0x0
84000a78:	50                   	push   %eax
84000a79:	e8 a8 1b 00 00       	call   84002626 <setvbuf>
84000a7e:	83 c4 10             	add    $0x10,%esp
    getchar();
84000a81:	e8 bc 0e 00 00       	call   84001942 <getchar>
}
84000a86:	90                   	nop
84000a87:	c9                   	leave  
84000a88:	c3                   	ret    

84000a89 <begin_game>:

/**
 * @brief 开始游戏
 */
static void begin_game (void) {
84000a89:	55                   	push   %ebp
84000a8a:	89 e5                	mov    %esp,%ebp
84000a8c:	83 ec 08             	sub    $0x8,%esp
    create_map();
84000a8f:	e8 f6 fa ff ff       	call   8400058a <create_map>
    create_snake();
84000a94:	e8 80 fc ff ff       	call   84000719 <create_snake>
    create_food();
84000a99:	e8 eb fc ff ff       	call   84000789 <create_food>
	fflush(stdout);
84000a9e:	e8 c4 0e 00 00       	call   84001967 <__getreent>
84000aa3:	8b 40 08             	mov    0x8(%eax),%eax
84000aa6:	83 ec 0c             	sub    $0xc,%esp
84000aa9:	50                   	push   %eax
84000aaa:	e8 2c 04 00 00       	call   84000edb <fflush>
84000aaf:	83 c4 10             	add    $0x10,%esp
}
84000ab2:	90                   	nop
84000ab3:	c9                   	leave  
84000ab4:	c3                   	ret    

84000ab5 <main>:

int main (int argc, char ** argv) {
84000ab5:	8d 4c 24 04          	lea    0x4(%esp),%ecx
84000ab9:	83 e4 f0             	and    $0xfffffff0,%esp
84000abc:	ff 71 fc             	push   -0x4(%ecx)
84000abf:	55                   	push   %ebp
84000ac0:	89 e5                	mov    %esp,%ebp
84000ac2:	51                   	push   %ecx
84000ac3:	83 ec 24             	sub    $0x24,%esp
	row_max = 25;
84000ac6:	c7 05 a0 63 00 84 19 	movl   $0x19,0x840063a0
84000acd:	00 00 00 
	col_max = 80;
84000ad0:	c7 05 a4 63 00 84 50 	movl   $0x50,0x840063a4
84000ad7:	00 00 00 

	ioctl(0, TTY_CMD_ECHO, 0, 0);
84000ada:	6a 00                	push   $0x0
84000adc:	6a 00                	push   $0x0
84000ade:	6a 01                	push   $0x1
84000ae0:	6a 00                	push   $0x0
84000ae2:	e8 fc f8 ff ff       	call   840003e3 <ioctl>
84000ae7:	83 c4 10             	add    $0x10,%esp

	show_welcome();
84000aea:	e8 20 ff ff ff       	call   84000a0f <show_welcome>
    begin_game();
84000aef:	e8 95 ff ff ff       	call   84000a89 <begin_game>

    int count;
	int cnt = 0;
84000af4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
	do {
		// 检查是否有键盘输入
		ioctl(0, TTY_CMD_IN_COUNT, (int)&count, 0);
84000afb:	8d 45 e4             	lea    -0x1c(%ebp),%eax
84000afe:	6a 00                	push   $0x0
84000b00:	50                   	push   %eax
84000b01:	6a 02                	push   $0x2
84000b03:	6a 00                	push   $0x0
84000b05:	e8 d9 f8 ff ff       	call   840003e3 <ioctl>
84000b0a:	83 c4 10             	add    $0x10,%esp
		if (count) {
84000b0d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84000b10:	85 c0                	test   %eax,%eax
84000b12:	74 18                	je     84000b2c <main+0x77>
			int ch = getchar();
84000b14:	e8 29 0e 00 00       	call   84001942 <getchar>
84000b19:	89 45 f0             	mov    %eax,-0x10(%ebp)
			move_forward(ch);
84000b1c:	83 ec 0c             	sub    $0xc,%esp
84000b1f:	ff 75 f0             	push   -0x10(%ebp)
84000b22:	e8 89 fd ff ff       	call   840008b0 <move_forward>
84000b27:	83 c4 10             	add    $0x10,%esp
84000b2a:	eb 38                	jmp    84000b64 <main+0xaf>
		} else if (++cnt % 50 == 0) {
84000b2c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
84000b30:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84000b33:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
84000b38:	89 c8                	mov    %ecx,%eax
84000b3a:	f7 ea                	imul   %edx
84000b3c:	89 d0                	mov    %edx,%eax
84000b3e:	c1 f8 04             	sar    $0x4,%eax
84000b41:	89 ca                	mov    %ecx,%edx
84000b43:	c1 fa 1f             	sar    $0x1f,%edx
84000b46:	29 d0                	sub    %edx,%eax
84000b48:	6b d0 32             	imul   $0x32,%eax,%edx
84000b4b:	89 c8                	mov    %ecx,%eax
84000b4d:	29 d0                	sub    %edx,%eax
84000b4f:	85 c0                	test   %eax,%eax
84000b51:	75 11                	jne    84000b64 <main+0xaf>
			// 每隔一段时间自动往前移
			move_forward(snake.dir);
84000b53:	a1 b4 63 00 84       	mov    0x840063b4,%eax
84000b58:	83 ec 0c             	sub    $0xc,%esp
84000b5b:	50                   	push   %eax
84000b5c:	e8 4f fd ff ff       	call   840008b0 <move_forward>
84000b61:	83 c4 10             	add    $0x10,%esp
		}

		if ((snake.status == SNAKE_BIT_ITSELF) || (snake.status == SNAKE_BIT_WALL)) {
84000b64:	a1 b0 63 00 84       	mov    0x840063b0,%eax
84000b69:	83 f8 01             	cmp    $0x1,%eax
84000b6c:	74 0a                	je     84000b78 <main+0xc3>
84000b6e:	a1 b0 63 00 84       	mov    0x840063b0,%eax
84000b73:	83 f8 02             	cmp    $0x2,%eax
84000b76:	75 6d                	jne    84000be5 <main+0x130>
			int row = row_max / 2, col = col_max / 2;
84000b78:	a1 a0 63 00 84       	mov    0x840063a0,%eax
84000b7d:	89 c2                	mov    %eax,%edx
84000b7f:	c1 ea 1f             	shr    $0x1f,%edx
84000b82:	01 d0                	add    %edx,%eax
84000b84:	d1 f8                	sar    %eax
84000b86:	89 45 ec             	mov    %eax,-0x14(%ebp)
84000b89:	a1 a4 63 00 84       	mov    0x840063a4,%eax
84000b8e:	89 c2                	mov    %eax,%edx
84000b90:	c1 ea 1f             	shr    $0x1f,%edx
84000b93:	01 d0                	add    %edx,%eax
84000b95:	d1 f8                	sar    %eax
84000b97:	89 45 e8             	mov    %eax,-0x18(%ebp)
			show_string(row, col,  "GAME OVER");
84000b9a:	83 ec 04             	sub    $0x4,%esp
84000b9d:	68 12 56 00 84       	push   $0x84005612
84000ba2:	ff 75 e8             	push   -0x18(%ebp)
84000ba5:	ff 75 ec             	push   -0x14(%ebp)
84000ba8:	e8 a0 f9 ff ff       	call   8400054d <show_string>
84000bad:	83 c4 10             	add    $0x10,%esp
			show_string(row + 1, col,  "Press Any key to continue");
84000bb0:	8b 45 ec             	mov    -0x14(%ebp),%eax
84000bb3:	83 c0 01             	add    $0x1,%eax
84000bb6:	83 ec 04             	sub    $0x4,%esp
84000bb9:	68 1c 56 00 84       	push   $0x8400561c
84000bbe:	ff 75 e8             	push   -0x18(%ebp)
84000bc1:	50                   	push   %eax
84000bc2:	e8 86 f9 ff ff       	call   8400054d <show_string>
84000bc7:	83 c4 10             	add    $0x10,%esp
			fflush(stdout);
84000bca:	e8 98 0d 00 00       	call   84001967 <__getreent>
84000bcf:	8b 40 08             	mov    0x8(%eax),%eax
84000bd2:	83 ec 0c             	sub    $0xc,%esp
84000bd5:	50                   	push   %eax
84000bd6:	e8 00 03 00 00       	call   84000edb <fflush>
84000bdb:	83 c4 10             	add    $0x10,%esp
			getchar();
84000bde:	e8 5f 0d 00 00       	call   84001942 <getchar>
			break;
84000be3:	eb 12                	jmp    84000bf7 <main+0x142>
		}

		msleep(10);
84000be5:	83 ec 0c             	sub    $0xc,%esp
84000be8:	6a 0a                	push   $0xa
84000bea:	e8 ab f4 ff ff       	call   8400009a <msleep>
84000bef:	83 c4 10             	add    $0x10,%esp
		ioctl(0, TTY_CMD_IN_COUNT, (int)&count, 0);
84000bf2:	e9 04 ff ff ff       	jmp    84000afb <main+0x46>
	}while (1);

	// 这里是有危险的，如果进程异常退出，将导致回显失败
	ioctl(0, TTY_CMD_ECHO, 1, 0);
84000bf7:	6a 00                	push   $0x0
84000bf9:	6a 01                	push   $0x1
84000bfb:	6a 01                	push   $0x1
84000bfd:	6a 00                	push   $0x0
84000bff:	e8 df f7 ff ff       	call   840003e3 <ioctl>
84000c04:	83 c4 10             	add    $0x10,%esp
	clear_map();
84000c07:	e8 60 f9 ff ff       	call   8400056c <clear_map>
    return 0;
84000c0c:	b8 00 00 00 00       	mov    $0x0,%eax
}
84000c11:	8b 4d fc             	mov    -0x4(%ebp),%ecx
84000c14:	c9                   	leave  
84000c15:	8d 61 fc             	lea    -0x4(%ecx),%esp
84000c18:	c3                   	ret    

84000c19 <exit>:
84000c19:	55                   	push   %ebp
84000c1a:	89 e5                	mov    %esp,%ebp
84000c1c:	83 ec 08             	sub    $0x8,%esp
84000c1f:	83 ec 08             	sub    $0x8,%esp
84000c22:	6a 00                	push   $0x0
84000c24:	ff 75 08             	push   0x8(%ebp)
84000c27:	e8 64 1d 00 00       	call   84002990 <__call_exitprocs>
84000c2c:	83 c4 10             	add    $0x10,%esp
84000c2f:	a1 38 56 00 84       	mov    0x84005638,%eax
84000c34:	8b 40 3c             	mov    0x3c(%eax),%eax
84000c37:	85 c0                	test   %eax,%eax
84000c39:	74 17                	je     84000c52 <exit+0x39>
84000c3b:	a1 38 56 00 84       	mov    0x84005638,%eax
84000c40:	8b 40 3c             	mov    0x3c(%eax),%eax
84000c43:	8b 15 38 56 00 84    	mov    0x84005638,%edx
84000c49:	83 ec 0c             	sub    $0xc,%esp
84000c4c:	52                   	push   %edx
84000c4d:	ff d0                	call   *%eax
84000c4f:	83 c4 10             	add    $0x10,%esp
84000c52:	83 ec 0c             	sub    $0xc,%esp
84000c55:	ff 75 08             	push   0x8(%ebp)
84000c58:	e8 66 f6 ff ff       	call   840002c3 <_exit>

84000c5d <__sflush_r>:
84000c5d:	55                   	push   %ebp
84000c5e:	89 e5                	mov    %esp,%ebp
84000c60:	57                   	push   %edi
84000c61:	56                   	push   %esi
84000c62:	53                   	push   %ebx
84000c63:	83 ec 1c             	sub    $0x1c,%esp
84000c66:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84000c69:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000c6d:	66 89 45 de          	mov    %ax,-0x22(%ebp)
84000c71:	0f bf 45 de          	movswl -0x22(%ebp),%eax
84000c75:	83 e0 08             	and    $0x8,%eax
84000c78:	85 c0                	test   %eax,%eax
84000c7a:	0f 85 93 01 00 00    	jne    84000e13 <__sflush_r+0x1b6>
84000c80:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000c84:	80 cc 08             	or     $0x8,%ah
84000c87:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84000c8b:	8b 43 04             	mov    0x4(%ebx),%eax
84000c8e:	85 c0                	test   %eax,%eax
84000c90:	7f 0b                	jg     84000c9d <__sflush_r+0x40>
84000c92:	8b 43 3c             	mov    0x3c(%ebx),%eax
84000c95:	85 c0                	test   %eax,%eax
84000c97:	0f 8e 6f 01 00 00    	jle    84000e0c <__sflush_r+0x1af>
84000c9d:	8b 43 28             	mov    0x28(%ebx),%eax
84000ca0:	85 c0                	test   %eax,%eax
84000ca2:	0f 84 64 01 00 00    	je     84000e0c <__sflush_r+0x1af>
84000ca8:	8b 45 08             	mov    0x8(%ebp),%eax
84000cab:	8b 00                	mov    (%eax),%eax
84000cad:	89 45 d8             	mov    %eax,-0x28(%ebp)
84000cb0:	8b 45 08             	mov    0x8(%ebp),%eax
84000cb3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
84000cb9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000cbd:	98                   	cwtl   
84000cbe:	25 00 10 00 00       	and    $0x1000,%eax
84000cc3:	85 c0                	test   %eax,%eax
84000cc5:	74 08                	je     84000ccf <__sflush_r+0x72>
84000cc7:	8b 43 50             	mov    0x50(%ebx),%eax
84000cca:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84000ccd:	eb 64                	jmp    84000d33 <__sflush_r+0xd6>
84000ccf:	8b 43 28             	mov    0x28(%ebx),%eax
84000cd2:	8b 53 1c             	mov    0x1c(%ebx),%edx
84000cd5:	6a 01                	push   $0x1
84000cd7:	6a 00                	push   $0x0
84000cd9:	52                   	push   %edx
84000cda:	ff 75 08             	push   0x8(%ebp)
84000cdd:	ff d0                	call   *%eax
84000cdf:	83 c4 10             	add    $0x10,%esp
84000ce2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84000ce5:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
84000ce9:	75 48                	jne    84000d33 <__sflush_r+0xd6>
84000ceb:	8b 45 08             	mov    0x8(%ebp),%eax
84000cee:	8b 00                	mov    (%eax),%eax
84000cf0:	85 c0                	test   %eax,%eax
84000cf2:	74 3f                	je     84000d33 <__sflush_r+0xd6>
84000cf4:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
84000cfb:	8b 45 08             	mov    0x8(%ebp),%eax
84000cfe:	8b 00                	mov    (%eax),%eax
84000d00:	83 f8 1d             	cmp    $0x1d,%eax
84000d03:	74 0a                	je     84000d0f <__sflush_r+0xb2>
84000d05:	8b 45 08             	mov    0x8(%ebp),%eax
84000d08:	8b 00                	mov    (%eax),%eax
84000d0a:	83 f8 16             	cmp    $0x16,%eax
84000d0d:	75 11                	jne    84000d20 <__sflush_r+0xc3>
84000d0f:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
84000d16:	8b 45 08             	mov    0x8(%ebp),%eax
84000d19:	8b 55 d8             	mov    -0x28(%ebp),%edx
84000d1c:	89 10                	mov    %edx,(%eax)
84000d1e:	eb 0b                	jmp    84000d2b <__sflush_r+0xce>
84000d20:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000d24:	83 c8 40             	or     $0x40,%eax
84000d27:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84000d2b:	8b 45 e0             	mov    -0x20(%ebp),%eax
84000d2e:	e9 48 01 00 00       	jmp    84000e7b <__sflush_r+0x21e>
84000d33:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000d37:	98                   	cwtl   
84000d38:	83 e0 04             	and    $0x4,%eax
84000d3b:	85 c0                	test   %eax,%eax
84000d3d:	74 13                	je     84000d52 <__sflush_r+0xf5>
84000d3f:	8b 43 04             	mov    0x4(%ebx),%eax
84000d42:	29 45 e4             	sub    %eax,-0x1c(%ebp)
84000d45:	8b 43 30             	mov    0x30(%ebx),%eax
84000d48:	85 c0                	test   %eax,%eax
84000d4a:	74 06                	je     84000d52 <__sflush_r+0xf5>
84000d4c:	8b 43 3c             	mov    0x3c(%ebx),%eax
84000d4f:	29 45 e4             	sub    %eax,-0x1c(%ebp)
84000d52:	8b 43 28             	mov    0x28(%ebx),%eax
84000d55:	8b 53 1c             	mov    0x1c(%ebx),%edx
84000d58:	6a 00                	push   $0x0
84000d5a:	ff 75 e4             	push   -0x1c(%ebp)
84000d5d:	52                   	push   %edx
84000d5e:	ff 75 08             	push   0x8(%ebp)
84000d61:	ff d0                	call   *%eax
84000d63:	83 c4 10             	add    $0x10,%esp
84000d66:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84000d69:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
84000d6d:	75 1d                	jne    84000d8c <__sflush_r+0x12f>
84000d6f:	8b 45 08             	mov    0x8(%ebp),%eax
84000d72:	8b 00                	mov    (%eax),%eax
84000d74:	85 c0                	test   %eax,%eax
84000d76:	74 14                	je     84000d8c <__sflush_r+0x12f>
84000d78:	8b 45 08             	mov    0x8(%ebp),%eax
84000d7b:	8b 00                	mov    (%eax),%eax
84000d7d:	83 f8 1d             	cmp    $0x1d,%eax
84000d80:	74 0a                	je     84000d8c <__sflush_r+0x12f>
84000d82:	8b 45 08             	mov    0x8(%ebp),%eax
84000d85:	8b 00                	mov    (%eax),%eax
84000d87:	83 f8 16             	cmp    $0x16,%eax
84000d8a:	75 6e                	jne    84000dfa <__sflush_r+0x19d>
84000d8c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000d90:	80 e4 f7             	and    $0xf7,%ah
84000d93:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84000d97:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
84000d9e:	8b 43 10             	mov    0x10(%ebx),%eax
84000da1:	89 03                	mov    %eax,(%ebx)
84000da3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000da7:	98                   	cwtl   
84000da8:	25 00 10 00 00       	and    $0x1000,%eax
84000dad:	85 c0                	test   %eax,%eax
84000daf:	74 15                	je     84000dc6 <__sflush_r+0x169>
84000db1:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
84000db5:	75 09                	jne    84000dc0 <__sflush_r+0x163>
84000db7:	8b 45 08             	mov    0x8(%ebp),%eax
84000dba:	8b 00                	mov    (%eax),%eax
84000dbc:	85 c0                	test   %eax,%eax
84000dbe:	75 06                	jne    84000dc6 <__sflush_r+0x169>
84000dc0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84000dc3:	89 43 50             	mov    %eax,0x50(%ebx)
84000dc6:	8b 45 08             	mov    0x8(%ebp),%eax
84000dc9:	8b 55 d8             	mov    -0x28(%ebp),%edx
84000dcc:	89 10                	mov    %edx,(%eax)
84000dce:	8b 43 30             	mov    0x30(%ebx),%eax
84000dd1:	85 c0                	test   %eax,%eax
84000dd3:	74 37                	je     84000e0c <__sflush_r+0x1af>
84000dd5:	8b 53 30             	mov    0x30(%ebx),%edx
84000dd8:	8d 43 40             	lea    0x40(%ebx),%eax
84000ddb:	39 c2                	cmp    %eax,%edx
84000ddd:	74 12                	je     84000df1 <__sflush_r+0x194>
84000ddf:	8b 43 30             	mov    0x30(%ebx),%eax
84000de2:	83 ec 08             	sub    $0x8,%esp
84000de5:	50                   	push   %eax
84000de6:	ff 75 08             	push   0x8(%ebp)
84000de9:	e8 28 05 00 00       	call   84001316 <_free_r>
84000dee:	83 c4 10             	add    $0x10,%esp
84000df1:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
84000df8:	eb 12                	jmp    84000e0c <__sflush_r+0x1af>
84000dfa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000dfe:	83 c8 40             	or     $0x40,%eax
84000e01:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84000e05:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84000e0a:	eb 6f                	jmp    84000e7b <__sflush_r+0x21e>
84000e0c:	b8 00 00 00 00       	mov    $0x0,%eax
84000e11:	eb 68                	jmp    84000e7b <__sflush_r+0x21e>
84000e13:	8b 73 10             	mov    0x10(%ebx),%esi
84000e16:	85 f6                	test   %esi,%esi
84000e18:	75 07                	jne    84000e21 <__sflush_r+0x1c4>
84000e1a:	b8 00 00 00 00       	mov    $0x0,%eax
84000e1f:	eb 5a                	jmp    84000e7b <__sflush_r+0x21e>
84000e21:	8b 03                	mov    (%ebx),%eax
84000e23:	29 f0                	sub    %esi,%eax
84000e25:	89 c7                	mov    %eax,%edi
84000e27:	89 33                	mov    %esi,(%ebx)
84000e29:	0f bf 45 de          	movswl -0x22(%ebp),%eax
84000e2d:	83 e0 03             	and    $0x3,%eax
84000e30:	85 c0                	test   %eax,%eax
84000e32:	75 05                	jne    84000e39 <__sflush_r+0x1dc>
84000e34:	8b 43 14             	mov    0x14(%ebx),%eax
84000e37:	eb 05                	jmp    84000e3e <__sflush_r+0x1e1>
84000e39:	b8 00 00 00 00       	mov    $0x0,%eax
84000e3e:	89 43 08             	mov    %eax,0x8(%ebx)
84000e41:	eb 2f                	jmp    84000e72 <__sflush_r+0x215>
84000e43:	8b 43 24             	mov    0x24(%ebx),%eax
84000e46:	8b 53 1c             	mov    0x1c(%ebx),%edx
84000e49:	57                   	push   %edi
84000e4a:	56                   	push   %esi
84000e4b:	52                   	push   %edx
84000e4c:	ff 75 08             	push   0x8(%ebp)
84000e4f:	ff d0                	call   *%eax
84000e51:	83 c4 10             	add    $0x10,%esp
84000e54:	85 c0                	test   %eax,%eax
84000e56:	7f 12                	jg     84000e6a <__sflush_r+0x20d>
84000e58:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000e5c:	83 c8 40             	or     $0x40,%eax
84000e5f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84000e63:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84000e68:	eb 11                	jmp    84000e7b <__sflush_r+0x21e>
84000e6a:	89 c1                	mov    %eax,%ecx
84000e6c:	89 c8                	mov    %ecx,%eax
84000e6e:	01 c6                	add    %eax,%esi
84000e70:	29 cf                	sub    %ecx,%edi
84000e72:	85 ff                	test   %edi,%edi
84000e74:	7f cd                	jg     84000e43 <__sflush_r+0x1e6>
84000e76:	b8 00 00 00 00       	mov    $0x0,%eax
84000e7b:	8d 65 f4             	lea    -0xc(%ebp),%esp
84000e7e:	5b                   	pop    %ebx
84000e7f:	5e                   	pop    %esi
84000e80:	5f                   	pop    %edi
84000e81:	5d                   	pop    %ebp
84000e82:	c3                   	ret    

84000e83 <_fflush_r>:
84000e83:	55                   	push   %ebp
84000e84:	89 e5                	mov    %esp,%ebp
84000e86:	53                   	push   %ebx
84000e87:	83 ec 14             	sub    $0x14,%esp
84000e8a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84000e8d:	8b 45 08             	mov    0x8(%ebp),%eax
84000e90:	89 45 f4             	mov    %eax,-0xc(%ebp)
84000e93:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84000e97:	74 18                	je     84000eb1 <_fflush_r+0x2e>
84000e99:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000e9c:	8b 40 38             	mov    0x38(%eax),%eax
84000e9f:	85 c0                	test   %eax,%eax
84000ea1:	75 0e                	jne    84000eb1 <_fflush_r+0x2e>
84000ea3:	83 ec 0c             	sub    $0xc,%esp
84000ea6:	ff 75 f4             	push   -0xc(%ebp)
84000ea9:	e8 5b 03 00 00       	call   84001209 <__sinit>
84000eae:	83 c4 10             	add    $0x10,%esp
84000eb1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000eb5:	66 85 c0             	test   %ax,%ax
84000eb8:	75 07                	jne    84000ec1 <_fflush_r+0x3e>
84000eba:	b8 00 00 00 00       	mov    $0x0,%eax
84000ebf:	eb 15                	jmp    84000ed6 <_fflush_r+0x53>
84000ec1:	83 ec 08             	sub    $0x8,%esp
84000ec4:	53                   	push   %ebx
84000ec5:	ff 75 08             	push   0x8(%ebp)
84000ec8:	e8 90 fd ff ff       	call   84000c5d <__sflush_r>
84000ecd:	83 c4 10             	add    $0x10,%esp
84000ed0:	89 45 f0             	mov    %eax,-0x10(%ebp)
84000ed3:	8b 45 f0             	mov    -0x10(%ebp),%eax
84000ed6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84000ed9:	c9                   	leave  
84000eda:	c3                   	ret    

84000edb <fflush>:
84000edb:	55                   	push   %ebp
84000edc:	89 e5                	mov    %esp,%ebp
84000ede:	83 ec 08             	sub    $0x8,%esp
84000ee1:	8b 55 08             	mov    0x8(%ebp),%edx
84000ee4:	85 d2                	test   %edx,%edx
84000ee6:	75 18                	jne    84000f00 <fflush+0x25>
84000ee8:	a1 38 56 00 84       	mov    0x84005638,%eax
84000eed:	83 ec 08             	sub    $0x8,%esp
84000ef0:	68 83 0e 00 84       	push   $0x84000e83
84000ef5:	50                   	push   %eax
84000ef6:	e8 bf 09 00 00       	call   840018ba <_fwalk_reent>
84000efb:	83 c4 10             	add    $0x10,%esp
84000efe:	eb 12                	jmp    84000f12 <fflush+0x37>
84000f00:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84000f05:	83 ec 08             	sub    $0x8,%esp
84000f08:	52                   	push   %edx
84000f09:	50                   	push   %eax
84000f0a:	e8 74 ff ff ff       	call   84000e83 <_fflush_r>
84000f0f:	83 c4 10             	add    $0x10,%esp
84000f12:	c9                   	leave  
84000f13:	c3                   	ret    

84000f14 <std>:
84000f14:	55                   	push   %ebp
84000f15:	89 e5                	mov    %esp,%ebp
84000f17:	83 ec 08             	sub    $0x8,%esp
84000f1a:	8b 45 08             	mov    0x8(%ebp),%eax
84000f1d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
84000f23:	8b 45 08             	mov    0x8(%ebp),%eax
84000f26:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
84000f2d:	8b 45 08             	mov    0x8(%ebp),%eax
84000f30:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
84000f37:	8b 45 0c             	mov    0xc(%ebp),%eax
84000f3a:	89 c2                	mov    %eax,%edx
84000f3c:	8b 45 08             	mov    0x8(%ebp),%eax
84000f3f:	66 89 50 0c          	mov    %dx,0xc(%eax)
84000f43:	8b 45 08             	mov    0x8(%ebp),%eax
84000f46:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
84000f4d:	8b 45 10             	mov    0x10(%ebp),%eax
84000f50:	89 c2                	mov    %eax,%edx
84000f52:	8b 45 08             	mov    0x8(%ebp),%eax
84000f55:	66 89 50 0e          	mov    %dx,0xe(%eax)
84000f59:	8b 45 08             	mov    0x8(%ebp),%eax
84000f5c:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
84000f63:	8b 45 08             	mov    0x8(%ebp),%eax
84000f66:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
84000f6d:	8b 45 08             	mov    0x8(%ebp),%eax
84000f70:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
84000f77:	8b 45 08             	mov    0x8(%ebp),%eax
84000f7a:	83 c0 5c             	add    $0x5c,%eax
84000f7d:	83 ec 04             	sub    $0x4,%esp
84000f80:	6a 08                	push   $0x8
84000f82:	6a 00                	push   $0x0
84000f84:	50                   	push   %eax
84000f85:	e8 d5 14 00 00       	call   8400245f <memset>
84000f8a:	83 c4 10             	add    $0x10,%esp
84000f8d:	8b 45 08             	mov    0x8(%ebp),%eax
84000f90:	8b 55 08             	mov    0x8(%ebp),%edx
84000f93:	89 50 1c             	mov    %edx,0x1c(%eax)
84000f96:	8b 45 08             	mov    0x8(%ebp),%eax
84000f99:	c7 40 20 32 28 00 84 	movl   $0x84002832,0x20(%eax)
84000fa0:	8b 45 08             	mov    0x8(%ebp),%eax
84000fa3:	c7 40 24 80 28 00 84 	movl   $0x84002880,0x24(%eax)
84000faa:	8b 45 08             	mov    0x8(%ebp),%eax
84000fad:	c7 40 28 db 28 00 84 	movl   $0x840028db,0x28(%eax)
84000fb4:	8b 45 08             	mov    0x8(%ebp),%eax
84000fb7:	c7 40 2c 25 29 00 84 	movl   $0x84002925,0x2c(%eax)
84000fbe:	90                   	nop
84000fbf:	c9                   	leave  
84000fc0:	c3                   	ret    

84000fc1 <stdin_init>:
84000fc1:	55                   	push   %ebp
84000fc2:	89 e5                	mov    %esp,%ebp
84000fc4:	83 ec 08             	sub    $0x8,%esp
84000fc7:	83 ec 04             	sub    $0x4,%esp
84000fca:	6a 00                	push   $0x0
84000fcc:	6a 04                	push   $0x4
84000fce:	ff 75 08             	push   0x8(%ebp)
84000fd1:	e8 3e ff ff ff       	call   84000f14 <std>
84000fd6:	83 c4 10             	add    $0x10,%esp
84000fd9:	90                   	nop
84000fda:	c9                   	leave  
84000fdb:	c3                   	ret    

84000fdc <stdout_init>:
84000fdc:	55                   	push   %ebp
84000fdd:	89 e5                	mov    %esp,%ebp
84000fdf:	83 ec 08             	sub    $0x8,%esp
84000fe2:	83 ec 04             	sub    $0x4,%esp
84000fe5:	6a 01                	push   $0x1
84000fe7:	6a 09                	push   $0x9
84000fe9:	ff 75 08             	push   0x8(%ebp)
84000fec:	e8 23 ff ff ff       	call   84000f14 <std>
84000ff1:	83 c4 10             	add    $0x10,%esp
84000ff4:	90                   	nop
84000ff5:	c9                   	leave  
84000ff6:	c3                   	ret    

84000ff7 <stderr_init>:
84000ff7:	55                   	push   %ebp
84000ff8:	89 e5                	mov    %esp,%ebp
84000ffa:	83 ec 08             	sub    $0x8,%esp
84000ffd:	83 ec 04             	sub    $0x4,%esp
84001000:	6a 02                	push   $0x2
84001002:	6a 12                	push   $0x12
84001004:	ff 75 08             	push   0x8(%ebp)
84001007:	e8 08 ff ff ff       	call   84000f14 <std>
8400100c:	83 c4 10             	add    $0x10,%esp
8400100f:	90                   	nop
84001010:	c9                   	leave  
84001011:	c3                   	ret    

84001012 <__sfmoreglue>:
84001012:	55                   	push   %ebp
84001013:	89 e5                	mov    %esp,%ebp
84001015:	53                   	push   %ebx
84001016:	83 ec 14             	sub    $0x14,%esp
84001019:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8400101c:	8d 43 ff             	lea    -0x1(%ebx),%eax
8400101f:	6b c0 68             	imul   $0x68,%eax,%eax
84001022:	83 c0 74             	add    $0x74,%eax
84001025:	83 ec 08             	sub    $0x8,%esp
84001028:	50                   	push   %eax
84001029:	ff 75 08             	push   0x8(%ebp)
8400102c:	e8 0c 0c 00 00       	call   84001c3d <_malloc_r>
84001031:	83 c4 10             	add    $0x10,%esp
84001034:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001037:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8400103b:	75 07                	jne    84001044 <__sfmoreglue+0x32>
8400103d:	b8 00 00 00 00       	mov    $0x0,%eax
84001042:	eb 38                	jmp    8400107c <__sfmoreglue+0x6a>
84001044:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001047:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8400104d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001050:	89 58 04             	mov    %ebx,0x4(%eax)
84001053:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001056:	8d 50 0c             	lea    0xc(%eax),%edx
84001059:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400105c:	89 50 08             	mov    %edx,0x8(%eax)
8400105f:	89 d8                	mov    %ebx,%eax
84001061:	6b c0 68             	imul   $0x68,%eax,%eax
84001064:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001067:	83 c2 0c             	add    $0xc,%edx
8400106a:	83 ec 04             	sub    $0x4,%esp
8400106d:	50                   	push   %eax
8400106e:	6a 00                	push   $0x0
84001070:	52                   	push   %edx
84001071:	e8 e9 13 00 00       	call   8400245f <memset>
84001076:	83 c4 10             	add    $0x10,%esp
84001079:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400107c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8400107f:	c9                   	leave  
84001080:	c3                   	ret    

84001081 <__sfp>:
84001081:	55                   	push   %ebp
84001082:	89 e5                	mov    %esp,%ebp
84001084:	83 ec 18             	sub    $0x18,%esp
84001087:	e8 16 02 00 00       	call   840012a2 <__sfp_lock_acquire>
8400108c:	a1 38 56 00 84       	mov    0x84005638,%eax
84001091:	8b 40 38             	mov    0x38(%eax),%eax
84001094:	85 c0                	test   %eax,%eax
84001096:	75 11                	jne    840010a9 <__sfp+0x28>
84001098:	a1 38 56 00 84       	mov    0x84005638,%eax
8400109d:	83 ec 0c             	sub    $0xc,%esp
840010a0:	50                   	push   %eax
840010a1:	e8 63 01 00 00       	call   84001209 <__sinit>
840010a6:	83 c4 10             	add    $0x10,%esp
840010a9:	a1 38 56 00 84       	mov    0x84005638,%eax
840010ae:	05 e0 02 00 00       	add    $0x2e0,%eax
840010b3:	89 45 ec             	mov    %eax,-0x14(%ebp)
840010b6:	8b 45 ec             	mov    -0x14(%ebp),%eax
840010b9:	8b 40 08             	mov    0x8(%eax),%eax
840010bc:	89 45 f4             	mov    %eax,-0xc(%ebp)
840010bf:	8b 45 ec             	mov    -0x14(%ebp),%eax
840010c2:	8b 40 04             	mov    0x4(%eax),%eax
840010c5:	89 45 f0             	mov    %eax,-0x10(%ebp)
840010c8:	eb 10                	jmp    840010da <__sfp+0x59>
840010ca:	8b 45 f4             	mov    -0xc(%ebp),%eax
840010cd:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
840010d1:	66 85 c0             	test   %ax,%ax
840010d4:	74 58                	je     8400112e <__sfp+0xad>
840010d6:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
840010da:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
840010de:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
840010e2:	79 e6                	jns    840010ca <__sfp+0x49>
840010e4:	8b 45 ec             	mov    -0x14(%ebp),%eax
840010e7:	8b 00                	mov    (%eax),%eax
840010e9:	85 c0                	test   %eax,%eax
840010eb:	75 1e                	jne    8400110b <__sfp+0x8a>
840010ed:	83 ec 08             	sub    $0x8,%esp
840010f0:	6a 04                	push   $0x4
840010f2:	ff 75 08             	push   0x8(%ebp)
840010f5:	e8 18 ff ff ff       	call   84001012 <__sfmoreglue>
840010fa:	83 c4 10             	add    $0x10,%esp
840010fd:	8b 55 ec             	mov    -0x14(%ebp),%edx
84001100:	89 02                	mov    %eax,(%edx)
84001102:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001105:	8b 00                	mov    (%eax),%eax
84001107:	85 c0                	test   %eax,%eax
84001109:	74 0a                	je     84001115 <__sfp+0x94>
8400110b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8400110e:	8b 00                	mov    (%eax),%eax
84001110:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001113:	eb a1                	jmp    840010b6 <__sfp+0x35>
84001115:	90                   	nop
84001116:	e8 8d 01 00 00       	call   840012a8 <__sfp_lock_release>
8400111b:	8b 45 08             	mov    0x8(%ebp),%eax
8400111e:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
84001124:	b8 00 00 00 00       	mov    $0x0,%eax
84001129:	e9 9e 00 00 00       	jmp    840011cc <__sfp+0x14b>
8400112e:	90                   	nop
8400112f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001132:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
84001138:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400113b:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
84001141:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001144:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
8400114b:	e8 58 01 00 00       	call   840012a8 <__sfp_lock_release>
84001150:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001153:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
84001159:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400115c:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
84001163:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001166:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
8400116d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001170:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
84001177:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400117a:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
84001181:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001184:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8400118b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400118e:	83 c0 5c             	add    $0x5c,%eax
84001191:	83 ec 04             	sub    $0x4,%esp
84001194:	6a 08                	push   $0x8
84001196:	6a 00                	push   $0x0
84001198:	50                   	push   %eax
84001199:	e8 c1 12 00 00       	call   8400245f <memset>
8400119e:	83 c4 10             	add    $0x10,%esp
840011a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
840011a4:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
840011ab:	8b 45 f4             	mov    -0xc(%ebp),%eax
840011ae:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
840011b5:	8b 45 f4             	mov    -0xc(%ebp),%eax
840011b8:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
840011bf:	8b 45 f4             	mov    -0xc(%ebp),%eax
840011c2:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
840011c9:	8b 45 f4             	mov    -0xc(%ebp),%eax
840011cc:	c9                   	leave  
840011cd:	c3                   	ret    

840011ce <_cleanup_r>:
840011ce:	55                   	push   %ebp
840011cf:	89 e5                	mov    %esp,%ebp
840011d1:	83 ec 18             	sub    $0x18,%esp
840011d4:	c7 45 f4 e5 2a 00 84 	movl   $0x84002ae5,-0xc(%ebp)
840011db:	83 ec 08             	sub    $0x8,%esp
840011de:	ff 75 f4             	push   -0xc(%ebp)
840011e1:	ff 75 08             	push   0x8(%ebp)
840011e4:	e8 d1 06 00 00       	call   840018ba <_fwalk_reent>
840011e9:	83 c4 10             	add    $0x10,%esp
840011ec:	90                   	nop
840011ed:	c9                   	leave  
840011ee:	c3                   	ret    

840011ef <_cleanup>:
840011ef:	55                   	push   %ebp
840011f0:	89 e5                	mov    %esp,%ebp
840011f2:	83 ec 08             	sub    $0x8,%esp
840011f5:	a1 38 56 00 84       	mov    0x84005638,%eax
840011fa:	83 ec 0c             	sub    $0xc,%esp
840011fd:	50                   	push   %eax
840011fe:	e8 cb ff ff ff       	call   840011ce <_cleanup_r>
84001203:	83 c4 10             	add    $0x10,%esp
84001206:	90                   	nop
84001207:	c9                   	leave  
84001208:	c3                   	ret    

84001209 <__sinit>:
84001209:	55                   	push   %ebp
8400120a:	89 e5                	mov    %esp,%ebp
8400120c:	83 ec 08             	sub    $0x8,%esp
8400120f:	e8 9a 00 00 00       	call   840012ae <__sinit_lock_acquire>
84001214:	8b 45 08             	mov    0x8(%ebp),%eax
84001217:	8b 40 38             	mov    0x38(%eax),%eax
8400121a:	85 c0                	test   %eax,%eax
8400121c:	74 07                	je     84001225 <__sinit+0x1c>
8400121e:	e8 91 00 00 00       	call   840012b4 <__sinit_lock_release>
84001223:	eb 7b                	jmp    840012a0 <__sinit+0x97>
84001225:	8b 45 08             	mov    0x8(%ebp),%eax
84001228:	c7 40 3c ce 11 00 84 	movl   $0x840011ce,0x3c(%eax)
8400122f:	8b 45 08             	mov    0x8(%ebp),%eax
84001232:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
84001239:	00 00 00 
8400123c:	8b 45 08             	mov    0x8(%ebp),%eax
8400123f:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
84001246:	00 00 00 
84001249:	8b 45 08             	mov    0x8(%ebp),%eax
8400124c:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
84001252:	8b 45 08             	mov    0x8(%ebp),%eax
84001255:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
8400125b:	8b 45 08             	mov    0x8(%ebp),%eax
8400125e:	8b 40 04             	mov    0x4(%eax),%eax
84001261:	83 ec 0c             	sub    $0xc,%esp
84001264:	50                   	push   %eax
84001265:	e8 57 fd ff ff       	call   84000fc1 <stdin_init>
8400126a:	83 c4 10             	add    $0x10,%esp
8400126d:	8b 45 08             	mov    0x8(%ebp),%eax
84001270:	8b 40 08             	mov    0x8(%eax),%eax
84001273:	83 ec 0c             	sub    $0xc,%esp
84001276:	50                   	push   %eax
84001277:	e8 60 fd ff ff       	call   84000fdc <stdout_init>
8400127c:	83 c4 10             	add    $0x10,%esp
8400127f:	8b 45 08             	mov    0x8(%ebp),%eax
84001282:	8b 40 0c             	mov    0xc(%eax),%eax
84001285:	83 ec 0c             	sub    $0xc,%esp
84001288:	50                   	push   %eax
84001289:	e8 69 fd ff ff       	call   84000ff7 <stderr_init>
8400128e:	83 c4 10             	add    $0x10,%esp
84001291:	8b 45 08             	mov    0x8(%ebp),%eax
84001294:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
8400129b:	e8 14 00 00 00       	call   840012b4 <__sinit_lock_release>
840012a0:	c9                   	leave  
840012a1:	c3                   	ret    

840012a2 <__sfp_lock_acquire>:
840012a2:	55                   	push   %ebp
840012a3:	89 e5                	mov    %esp,%ebp
840012a5:	90                   	nop
840012a6:	5d                   	pop    %ebp
840012a7:	c3                   	ret    

840012a8 <__sfp_lock_release>:
840012a8:	55                   	push   %ebp
840012a9:	89 e5                	mov    %esp,%ebp
840012ab:	90                   	nop
840012ac:	5d                   	pop    %ebp
840012ad:	c3                   	ret    

840012ae <__sinit_lock_acquire>:
840012ae:	55                   	push   %ebp
840012af:	89 e5                	mov    %esp,%ebp
840012b1:	90                   	nop
840012b2:	5d                   	pop    %ebp
840012b3:	c3                   	ret    

840012b4 <__sinit_lock_release>:
840012b4:	55                   	push   %ebp
840012b5:	89 e5                	mov    %esp,%ebp
840012b7:	90                   	nop
840012b8:	5d                   	pop    %ebp
840012b9:	c3                   	ret    

840012ba <__fp_lock>:
840012ba:	55                   	push   %ebp
840012bb:	89 e5                	mov    %esp,%ebp
840012bd:	b8 00 00 00 00       	mov    $0x0,%eax
840012c2:	5d                   	pop    %ebp
840012c3:	c3                   	ret    

840012c4 <__fp_unlock>:
840012c4:	55                   	push   %ebp
840012c5:	89 e5                	mov    %esp,%ebp
840012c7:	b8 00 00 00 00       	mov    $0x0,%eax
840012cc:	5d                   	pop    %ebp
840012cd:	c3                   	ret    

840012ce <__fp_lock_all>:
840012ce:	55                   	push   %ebp
840012cf:	89 e5                	mov    %esp,%ebp
840012d1:	83 ec 08             	sub    $0x8,%esp
840012d4:	e8 c9 ff ff ff       	call   840012a2 <__sfp_lock_acquire>
840012d9:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
840012de:	83 ec 08             	sub    $0x8,%esp
840012e1:	68 ba 12 00 84       	push   $0x840012ba
840012e6:	50                   	push   %eax
840012e7:	e8 66 05 00 00       	call   84001852 <_fwalk>
840012ec:	83 c4 10             	add    $0x10,%esp
840012ef:	90                   	nop
840012f0:	c9                   	leave  
840012f1:	c3                   	ret    

840012f2 <__fp_unlock_all>:
840012f2:	55                   	push   %ebp
840012f3:	89 e5                	mov    %esp,%ebp
840012f5:	83 ec 08             	sub    $0x8,%esp
840012f8:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
840012fd:	83 ec 08             	sub    $0x8,%esp
84001300:	68 c4 12 00 84       	push   $0x840012c4
84001305:	50                   	push   %eax
84001306:	e8 47 05 00 00       	call   84001852 <_fwalk>
8400130b:	83 c4 10             	add    $0x10,%esp
8400130e:	e8 95 ff ff ff       	call   840012a8 <__sfp_lock_release>
84001313:	90                   	nop
84001314:	c9                   	leave  
84001315:	c3                   	ret    

84001316 <_free_r>:
84001316:	55                   	push   %ebp
84001317:	89 e5                	mov    %esp,%ebp
84001319:	53                   	push   %ebx
8400131a:	83 ec 34             	sub    $0x34,%esp
8400131d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
84001321:	0f 84 c4 03 00 00    	je     840016eb <_free_r+0x3d5>
84001327:	83 ec 0c             	sub    $0xc,%esp
8400132a:	ff 75 08             	push   0x8(%ebp)
8400132d:	e8 b5 11 00 00       	call   840024e7 <__malloc_lock>
84001332:	83 c4 10             	add    $0x10,%esp
84001335:	8b 45 0c             	mov    0xc(%ebp),%eax
84001338:	83 e8 08             	sub    $0x8,%eax
8400133b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400133e:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001341:	8b 40 04             	mov    0x4(%eax),%eax
84001344:	89 45 e0             	mov    %eax,-0x20(%ebp)
84001347:	8b 45 e0             	mov    -0x20(%ebp),%eax
8400134a:	83 e0 fe             	and    $0xfffffffe,%eax
8400134d:	89 45 f0             	mov    %eax,-0x10(%ebp)
84001350:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001353:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001356:	01 d0                	add    %edx,%eax
84001358:	89 45 dc             	mov    %eax,-0x24(%ebp)
8400135b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8400135e:	8b 40 04             	mov    0x4(%eax),%eax
84001361:	83 e0 fc             	and    $0xfffffffc,%eax
84001364:	89 45 d8             	mov    %eax,-0x28(%ebp)
84001367:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
8400136c:	8b 40 08             	mov    0x8(%eax),%eax
8400136f:	39 45 dc             	cmp    %eax,-0x24(%ebp)
84001372:	0f 85 94 00 00 00    	jne    8400140c <_free_r+0xf6>
84001378:	8b 45 d8             	mov    -0x28(%ebp),%eax
8400137b:	01 45 f0             	add    %eax,-0x10(%ebp)
8400137e:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001381:	83 e0 01             	and    $0x1,%eax
84001384:	85 c0                	test   %eax,%eax
84001386:	75 3a                	jne    840013c2 <_free_r+0xac>
84001388:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400138b:	8b 00                	mov    (%eax),%eax
8400138d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84001390:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001393:	f7 d8                	neg    %eax
84001395:	01 45 f4             	add    %eax,-0xc(%ebp)
84001398:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8400139b:	01 45 f0             	add    %eax,-0x10(%ebp)
8400139e:	8b 45 f4             	mov    -0xc(%ebp),%eax
840013a1:	8b 40 0c             	mov    0xc(%eax),%eax
840013a4:	89 45 ec             	mov    %eax,-0x14(%ebp)
840013a7:	8b 45 f4             	mov    -0xc(%ebp),%eax
840013aa:	8b 40 08             	mov    0x8(%eax),%eax
840013ad:	89 45 e8             	mov    %eax,-0x18(%ebp)
840013b0:	8b 45 e8             	mov    -0x18(%ebp),%eax
840013b3:	8b 55 ec             	mov    -0x14(%ebp),%edx
840013b6:	89 50 0c             	mov    %edx,0xc(%eax)
840013b9:	8b 45 ec             	mov    -0x14(%ebp),%eax
840013bc:	8b 55 e8             	mov    -0x18(%ebp),%edx
840013bf:	89 50 08             	mov    %edx,0x8(%eax)
840013c2:	8b 45 f0             	mov    -0x10(%ebp),%eax
840013c5:	83 c8 01             	or     $0x1,%eax
840013c8:	89 c2                	mov    %eax,%edx
840013ca:	8b 45 f4             	mov    -0xc(%ebp),%eax
840013cd:	89 50 04             	mov    %edx,0x4(%eax)
840013d0:	ba 00 5e 00 84       	mov    $0x84005e00,%edx
840013d5:	8b 45 f4             	mov    -0xc(%ebp),%eax
840013d8:	89 42 08             	mov    %eax,0x8(%edx)
840013db:	a1 08 62 00 84       	mov    0x84006208,%eax
840013e0:	39 45 f0             	cmp    %eax,-0x10(%ebp)
840013e3:	72 14                	jb     840013f9 <_free_r+0xe3>
840013e5:	a1 c0 63 00 84       	mov    0x840063c0,%eax
840013ea:	83 ec 08             	sub    $0x8,%esp
840013ed:	50                   	push   %eax
840013ee:	ff 75 08             	push   0x8(%ebp)
840013f1:	e8 fb 02 00 00       	call   840016f1 <_malloc_trim_r>
840013f6:	83 c4 10             	add    $0x10,%esp
840013f9:	83 ec 0c             	sub    $0xc,%esp
840013fc:	ff 75 08             	push   0x8(%ebp)
840013ff:	e8 e9 10 00 00       	call   840024ed <__malloc_unlock>
84001404:	83 c4 10             	add    $0x10,%esp
84001407:	e9 e0 02 00 00       	jmp    840016ec <_free_r+0x3d6>
8400140c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8400140f:	8b 55 d8             	mov    -0x28(%ebp),%edx
84001412:	89 50 04             	mov    %edx,0x4(%eax)
84001415:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8400141c:	8b 45 e0             	mov    -0x20(%ebp),%eax
8400141f:	83 e0 01             	and    $0x1,%eax
84001422:	85 c0                	test   %eax,%eax
84001424:	75 52                	jne    84001478 <_free_r+0x162>
84001426:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001429:	8b 00                	mov    (%eax),%eax
8400142b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8400142e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001431:	f7 d8                	neg    %eax
84001433:	01 45 f4             	add    %eax,-0xc(%ebp)
84001436:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001439:	01 45 f0             	add    %eax,-0x10(%ebp)
8400143c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400143f:	8b 40 08             	mov    0x8(%eax),%eax
84001442:	ba 08 5e 00 84       	mov    $0x84005e08,%edx
84001447:	39 d0                	cmp    %edx,%eax
84001449:	75 09                	jne    84001454 <_free_r+0x13e>
8400144b:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
84001452:	eb 24                	jmp    84001478 <_free_r+0x162>
84001454:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001457:	8b 40 0c             	mov    0xc(%eax),%eax
8400145a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8400145d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001460:	8b 40 08             	mov    0x8(%eax),%eax
84001463:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001466:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001469:	8b 55 ec             	mov    -0x14(%ebp),%edx
8400146c:	89 50 0c             	mov    %edx,0xc(%eax)
8400146f:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001472:	8b 55 e8             	mov    -0x18(%ebp),%edx
84001475:	89 50 08             	mov    %edx,0x8(%eax)
84001478:	8b 55 dc             	mov    -0x24(%ebp),%edx
8400147b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8400147e:	01 d0                	add    %edx,%eax
84001480:	8b 40 04             	mov    0x4(%eax),%eax
84001483:	83 e0 01             	and    $0x1,%eax
84001486:	85 c0                	test   %eax,%eax
84001488:	75 75                	jne    840014ff <_free_r+0x1e9>
8400148a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8400148d:	01 45 f0             	add    %eax,-0x10(%ebp)
84001490:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
84001494:	75 45                	jne    840014db <_free_r+0x1c5>
84001496:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001499:	8b 40 08             	mov    0x8(%eax),%eax
8400149c:	ba 08 5e 00 84       	mov    $0x84005e08,%edx
840014a1:	39 d0                	cmp    %edx,%eax
840014a3:	75 36                	jne    840014db <_free_r+0x1c5>
840014a5:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
840014ac:	b8 08 5e 00 84       	mov    $0x84005e08,%eax
840014b1:	8b 55 f4             	mov    -0xc(%ebp),%edx
840014b4:	89 50 0c             	mov    %edx,0xc(%eax)
840014b7:	ba 08 5e 00 84       	mov    $0x84005e08,%edx
840014bc:	8b 40 0c             	mov    0xc(%eax),%eax
840014bf:	89 42 08             	mov    %eax,0x8(%edx)
840014c2:	ba 08 5e 00 84       	mov    $0x84005e08,%edx
840014c7:	8b 45 f4             	mov    -0xc(%ebp),%eax
840014ca:	89 50 0c             	mov    %edx,0xc(%eax)
840014cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
840014d0:	8b 50 0c             	mov    0xc(%eax),%edx
840014d3:	8b 45 f4             	mov    -0xc(%ebp),%eax
840014d6:	89 50 08             	mov    %edx,0x8(%eax)
840014d9:	eb 24                	jmp    840014ff <_free_r+0x1e9>
840014db:	8b 45 dc             	mov    -0x24(%ebp),%eax
840014de:	8b 40 0c             	mov    0xc(%eax),%eax
840014e1:	89 45 ec             	mov    %eax,-0x14(%ebp)
840014e4:	8b 45 dc             	mov    -0x24(%ebp),%eax
840014e7:	8b 40 08             	mov    0x8(%eax),%eax
840014ea:	89 45 e8             	mov    %eax,-0x18(%ebp)
840014ed:	8b 45 e8             	mov    -0x18(%ebp),%eax
840014f0:	8b 55 ec             	mov    -0x14(%ebp),%edx
840014f3:	89 50 0c             	mov    %edx,0xc(%eax)
840014f6:	8b 45 ec             	mov    -0x14(%ebp),%eax
840014f9:	8b 55 e8             	mov    -0x18(%ebp),%edx
840014fc:	89 50 08             	mov    %edx,0x8(%eax)
840014ff:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001502:	83 c8 01             	or     $0x1,%eax
84001505:	89 c2                	mov    %eax,%edx
84001507:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400150a:	89 50 04             	mov    %edx,0x4(%eax)
8400150d:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001510:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001513:	01 c2                	add    %eax,%edx
84001515:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001518:	89 02                	mov    %eax,(%edx)
8400151a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8400151e:	0f 85 b7 01 00 00    	jne    840016db <_free_r+0x3c5>
84001524:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
8400152b:	77 7f                	ja     840015ac <_free_r+0x296>
8400152d:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001530:	c1 e8 03             	shr    $0x3,%eax
84001533:	89 45 d0             	mov    %eax,-0x30(%ebp)
84001536:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
8400153b:	8b 58 04             	mov    0x4(%eax),%ebx
8400153e:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001541:	8d 50 03             	lea    0x3(%eax),%edx
84001544:	85 c0                	test   %eax,%eax
84001546:	0f 48 c2             	cmovs  %edx,%eax
84001549:	c1 f8 02             	sar    $0x2,%eax
8400154c:	ba 01 00 00 00       	mov    $0x1,%edx
84001551:	89 c1                	mov    %eax,%ecx
84001553:	d3 e2                	shl    %cl,%edx
84001555:	89 d0                	mov    %edx,%eax
84001557:	ba 00 5e 00 84       	mov    $0x84005e00,%edx
8400155c:	09 d8                	or     %ebx,%eax
8400155e:	89 42 04             	mov    %eax,0x4(%edx)
84001561:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001564:	83 c0 01             	add    $0x1,%eax
84001567:	01 c0                	add    %eax,%eax
84001569:	c1 e0 02             	shl    $0x2,%eax
8400156c:	05 00 5e 00 84       	add    $0x84005e00,%eax
84001571:	83 e8 08             	sub    $0x8,%eax
84001574:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001577:	8b 45 ec             	mov    -0x14(%ebp),%eax
8400157a:	8b 40 08             	mov    0x8(%eax),%eax
8400157d:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001580:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001583:	8b 55 ec             	mov    -0x14(%ebp),%edx
84001586:	89 50 0c             	mov    %edx,0xc(%eax)
84001589:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400158c:	8b 55 e8             	mov    -0x18(%ebp),%edx
8400158f:	89 50 08             	mov    %edx,0x8(%eax)
84001592:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001595:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001598:	89 50 08             	mov    %edx,0x8(%eax)
8400159b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8400159e:	8b 50 08             	mov    0x8(%eax),%edx
840015a1:	8b 45 e8             	mov    -0x18(%ebp),%eax
840015a4:	89 50 0c             	mov    %edx,0xc(%eax)
840015a7:	e9 2f 01 00 00       	jmp    840016db <_free_r+0x3c5>
840015ac:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015af:	c1 e8 09             	shr    $0x9,%eax
840015b2:	85 c0                	test   %eax,%eax
840015b4:	75 08                	jne    840015be <_free_r+0x2a8>
840015b6:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015b9:	c1 e8 03             	shr    $0x3,%eax
840015bc:	eb 77                	jmp    84001635 <_free_r+0x31f>
840015be:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015c1:	c1 e8 09             	shr    $0x9,%eax
840015c4:	83 f8 04             	cmp    $0x4,%eax
840015c7:	77 0b                	ja     840015d4 <_free_r+0x2be>
840015c9:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015cc:	c1 e8 06             	shr    $0x6,%eax
840015cf:	83 c0 38             	add    $0x38,%eax
840015d2:	eb 61                	jmp    84001635 <_free_r+0x31f>
840015d4:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015d7:	c1 e8 09             	shr    $0x9,%eax
840015da:	83 f8 14             	cmp    $0x14,%eax
840015dd:	77 0b                	ja     840015ea <_free_r+0x2d4>
840015df:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015e2:	c1 e8 09             	shr    $0x9,%eax
840015e5:	83 c0 5b             	add    $0x5b,%eax
840015e8:	eb 4b                	jmp    84001635 <_free_r+0x31f>
840015ea:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015ed:	c1 e8 09             	shr    $0x9,%eax
840015f0:	83 f8 54             	cmp    $0x54,%eax
840015f3:	77 0b                	ja     84001600 <_free_r+0x2ea>
840015f5:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015f8:	c1 e8 0c             	shr    $0xc,%eax
840015fb:	83 c0 6e             	add    $0x6e,%eax
840015fe:	eb 35                	jmp    84001635 <_free_r+0x31f>
84001600:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001603:	c1 e8 09             	shr    $0x9,%eax
84001606:	3d 54 01 00 00       	cmp    $0x154,%eax
8400160b:	77 0b                	ja     84001618 <_free_r+0x302>
8400160d:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001610:	c1 e8 0f             	shr    $0xf,%eax
84001613:	83 c0 77             	add    $0x77,%eax
84001616:	eb 1d                	jmp    84001635 <_free_r+0x31f>
84001618:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400161b:	c1 e8 09             	shr    $0x9,%eax
8400161e:	3d 54 05 00 00       	cmp    $0x554,%eax
84001623:	77 0b                	ja     84001630 <_free_r+0x31a>
84001625:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001628:	c1 e8 12             	shr    $0x12,%eax
8400162b:	83 c0 7c             	add    $0x7c,%eax
8400162e:	eb 05                	jmp    84001635 <_free_r+0x31f>
84001630:	b8 7e 00 00 00       	mov    $0x7e,%eax
84001635:	89 45 d0             	mov    %eax,-0x30(%ebp)
84001638:	8b 45 d0             	mov    -0x30(%ebp),%eax
8400163b:	83 c0 01             	add    $0x1,%eax
8400163e:	01 c0                	add    %eax,%eax
84001640:	c1 e0 02             	shl    $0x2,%eax
84001643:	05 00 5e 00 84       	add    $0x84005e00,%eax
84001648:	83 e8 08             	sub    $0x8,%eax
8400164b:	89 45 ec             	mov    %eax,-0x14(%ebp)
8400164e:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001651:	8b 40 08             	mov    0x8(%eax),%eax
84001654:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001657:	8b 45 e8             	mov    -0x18(%ebp),%eax
8400165a:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8400165d:	75 36                	jne    84001695 <_free_r+0x37f>
8400165f:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84001664:	8b 58 04             	mov    0x4(%eax),%ebx
84001667:	8b 45 d0             	mov    -0x30(%ebp),%eax
8400166a:	8d 50 03             	lea    0x3(%eax),%edx
8400166d:	85 c0                	test   %eax,%eax
8400166f:	0f 48 c2             	cmovs  %edx,%eax
84001672:	c1 f8 02             	sar    $0x2,%eax
84001675:	ba 01 00 00 00       	mov    $0x1,%edx
8400167a:	89 c1                	mov    %eax,%ecx
8400167c:	d3 e2                	shl    %cl,%edx
8400167e:	89 d0                	mov    %edx,%eax
84001680:	ba 00 5e 00 84       	mov    $0x84005e00,%edx
84001685:	09 d8                	or     %ebx,%eax
84001687:	89 42 04             	mov    %eax,0x4(%edx)
8400168a:	eb 28                	jmp    840016b4 <_free_r+0x39e>
8400168c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8400168f:	8b 40 08             	mov    0x8(%eax),%eax
84001692:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001695:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001698:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8400169b:	74 0e                	je     840016ab <_free_r+0x395>
8400169d:	8b 45 e8             	mov    -0x18(%ebp),%eax
840016a0:	8b 40 04             	mov    0x4(%eax),%eax
840016a3:	83 e0 fc             	and    $0xfffffffc,%eax
840016a6:	39 45 f0             	cmp    %eax,-0x10(%ebp)
840016a9:	72 e1                	jb     8400168c <_free_r+0x376>
840016ab:	8b 45 e8             	mov    -0x18(%ebp),%eax
840016ae:	8b 40 0c             	mov    0xc(%eax),%eax
840016b1:	89 45 ec             	mov    %eax,-0x14(%ebp)
840016b4:	8b 45 f4             	mov    -0xc(%ebp),%eax
840016b7:	8b 55 ec             	mov    -0x14(%ebp),%edx
840016ba:	89 50 0c             	mov    %edx,0xc(%eax)
840016bd:	8b 45 f4             	mov    -0xc(%ebp),%eax
840016c0:	8b 55 e8             	mov    -0x18(%ebp),%edx
840016c3:	89 50 08             	mov    %edx,0x8(%eax)
840016c6:	8b 45 ec             	mov    -0x14(%ebp),%eax
840016c9:	8b 55 f4             	mov    -0xc(%ebp),%edx
840016cc:	89 50 08             	mov    %edx,0x8(%eax)
840016cf:	8b 45 ec             	mov    -0x14(%ebp),%eax
840016d2:	8b 50 08             	mov    0x8(%eax),%edx
840016d5:	8b 45 e8             	mov    -0x18(%ebp),%eax
840016d8:	89 50 0c             	mov    %edx,0xc(%eax)
840016db:	83 ec 0c             	sub    $0xc,%esp
840016de:	ff 75 08             	push   0x8(%ebp)
840016e1:	e8 07 0e 00 00       	call   840024ed <__malloc_unlock>
840016e6:	83 c4 10             	add    $0x10,%esp
840016e9:	eb 01                	jmp    840016ec <_free_r+0x3d6>
840016eb:	90                   	nop
840016ec:	8b 5d fc             	mov    -0x4(%ebp),%ebx
840016ef:	c9                   	leave  
840016f0:	c3                   	ret    

840016f1 <_malloc_trim_r>:
840016f1:	55                   	push   %ebp
840016f2:	89 e5                	mov    %esp,%ebp
840016f4:	83 ec 28             	sub    $0x28,%esp
840016f7:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
840016fe:	83 ec 0c             	sub    $0xc,%esp
84001701:	ff 75 08             	push   0x8(%ebp)
84001704:	e8 de 0d 00 00       	call   840024e7 <__malloc_lock>
84001709:	83 c4 10             	add    $0x10,%esp
8400170c:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84001711:	8b 40 08             	mov    0x8(%eax),%eax
84001714:	8b 40 04             	mov    0x4(%eax),%eax
84001717:	83 e0 fc             	and    $0xfffffffc,%eax
8400171a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8400171d:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001720:	2b 45 0c             	sub    0xc(%ebp),%eax
84001723:	89 c2                	mov    %eax,%edx
84001725:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001728:	01 d0                	add    %edx,%eax
8400172a:	83 e8 11             	sub    $0x11,%eax
8400172d:	ba 00 00 00 00       	mov    $0x0,%edx
84001732:	f7 75 f4             	divl   -0xc(%ebp)
84001735:	83 e8 01             	sub    $0x1,%eax
84001738:	0f af 45 f4          	imul   -0xc(%ebp),%eax
8400173c:	89 45 ec             	mov    %eax,-0x14(%ebp)
8400173f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001742:	39 45 ec             	cmp    %eax,-0x14(%ebp)
84001745:	7d 18                	jge    8400175f <_malloc_trim_r+0x6e>
84001747:	83 ec 0c             	sub    $0xc,%esp
8400174a:	ff 75 08             	push   0x8(%ebp)
8400174d:	e8 9b 0d 00 00       	call   840024ed <__malloc_unlock>
84001752:	83 c4 10             	add    $0x10,%esp
84001755:	b8 00 00 00 00       	mov    $0x0,%eax
8400175a:	e9 f1 00 00 00       	jmp    84001850 <_malloc_trim_r+0x15f>
8400175f:	83 ec 08             	sub    $0x8,%esp
84001762:	6a 00                	push   $0x0
84001764:	ff 75 08             	push   0x8(%ebp)
84001767:	e8 7a 0e 00 00       	call   840025e6 <_sbrk_r>
8400176c:	83 c4 10             	add    $0x10,%esp
8400176f:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001772:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84001777:	8b 50 08             	mov    0x8(%eax),%edx
8400177a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400177d:	01 d0                	add    %edx,%eax
8400177f:	39 45 e8             	cmp    %eax,-0x18(%ebp)
84001782:	74 18                	je     8400179c <_malloc_trim_r+0xab>
84001784:	83 ec 0c             	sub    $0xc,%esp
84001787:	ff 75 08             	push   0x8(%ebp)
8400178a:	e8 5e 0d 00 00       	call   840024ed <__malloc_unlock>
8400178f:	83 c4 10             	add    $0x10,%esp
84001792:	b8 00 00 00 00       	mov    $0x0,%eax
84001797:	e9 b4 00 00 00       	jmp    84001850 <_malloc_trim_r+0x15f>
8400179c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8400179f:	f7 d8                	neg    %eax
840017a1:	83 ec 08             	sub    $0x8,%esp
840017a4:	50                   	push   %eax
840017a5:	ff 75 08             	push   0x8(%ebp)
840017a8:	e8 39 0e 00 00       	call   840025e6 <_sbrk_r>
840017ad:	83 c4 10             	add    $0x10,%esp
840017b0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
840017b3:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
840017b7:	75 61                	jne    8400181a <_malloc_trim_r+0x129>
840017b9:	83 ec 08             	sub    $0x8,%esp
840017bc:	6a 00                	push   $0x0
840017be:	ff 75 08             	push   0x8(%ebp)
840017c1:	e8 20 0e 00 00       	call   840025e6 <_sbrk_r>
840017c6:	83 c4 10             	add    $0x10,%esp
840017c9:	89 45 e8             	mov    %eax,-0x18(%ebp)
840017cc:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
840017d1:	8b 50 08             	mov    0x8(%eax),%edx
840017d4:	8b 45 e8             	mov    -0x18(%ebp),%eax
840017d7:	29 d0                	sub    %edx,%eax
840017d9:	89 45 f0             	mov    %eax,-0x10(%ebp)
840017dc:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
840017e0:	7e 23                	jle    84001805 <_malloc_trim_r+0x114>
840017e2:	8b 15 0c 62 00 84    	mov    0x8400620c,%edx
840017e8:	8b 45 e8             	mov    -0x18(%ebp),%eax
840017eb:	29 d0                	sub    %edx,%eax
840017ed:	a3 e0 63 00 84       	mov    %eax,0x840063e0
840017f2:	8b 45 f0             	mov    -0x10(%ebp),%eax
840017f5:	83 c8 01             	or     $0x1,%eax
840017f8:	89 c2                	mov    %eax,%edx
840017fa:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
840017ff:	8b 40 08             	mov    0x8(%eax),%eax
84001802:	89 50 04             	mov    %edx,0x4(%eax)
84001805:	83 ec 0c             	sub    $0xc,%esp
84001808:	ff 75 08             	push   0x8(%ebp)
8400180b:	e8 dd 0c 00 00       	call   840024ed <__malloc_unlock>
84001810:	83 c4 10             	add    $0x10,%esp
84001813:	b8 00 00 00 00       	mov    $0x0,%eax
84001818:	eb 36                	jmp    84001850 <_malloc_trim_r+0x15f>
8400181a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400181d:	2b 45 ec             	sub    -0x14(%ebp),%eax
84001820:	83 c8 01             	or     $0x1,%eax
84001823:	89 c2                	mov    %eax,%edx
84001825:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
8400182a:	8b 40 08             	mov    0x8(%eax),%eax
8400182d:	89 50 04             	mov    %edx,0x4(%eax)
84001830:	a1 e0 63 00 84       	mov    0x840063e0,%eax
84001835:	2b 45 ec             	sub    -0x14(%ebp),%eax
84001838:	a3 e0 63 00 84       	mov    %eax,0x840063e0
8400183d:	83 ec 0c             	sub    $0xc,%esp
84001840:	ff 75 08             	push   0x8(%ebp)
84001843:	e8 a5 0c 00 00       	call   840024ed <__malloc_unlock>
84001848:	83 c4 10             	add    $0x10,%esp
8400184b:	b8 01 00 00 00       	mov    $0x1,%eax
84001850:	c9                   	leave  
84001851:	c3                   	ret    

84001852 <_fwalk>:
84001852:	55                   	push   %ebp
84001853:	89 e5                	mov    %esp,%ebp
84001855:	57                   	push   %edi
84001856:	56                   	push   %esi
84001857:	53                   	push   %ebx
84001858:	83 ec 1c             	sub    $0x1c,%esp
8400185b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
84001862:	8b 45 08             	mov    0x8(%ebp),%eax
84001865:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
8400186b:	eb 3e                	jmp    840018ab <_fwalk+0x59>
8400186d:	8b 5e 08             	mov    0x8(%esi),%ebx
84001870:	8b 7e 04             	mov    0x4(%esi),%edi
84001873:	eb 2d                	jmp    840018a2 <_fwalk+0x50>
84001875:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84001879:	66 85 c0             	test   %ax,%ax
8400187c:	74 21                	je     8400189f <_fwalk+0x4d>
8400187e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84001882:	66 83 f8 01          	cmp    $0x1,%ax
84001886:	74 17                	je     8400189f <_fwalk+0x4d>
84001888:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8400188c:	66 83 f8 ff          	cmp    $0xffff,%ax
84001890:	74 0d                	je     8400189f <_fwalk+0x4d>
84001892:	83 ec 0c             	sub    $0xc,%esp
84001895:	53                   	push   %ebx
84001896:	ff 55 0c             	call   *0xc(%ebp)
84001899:	83 c4 10             	add    $0x10,%esp
8400189c:	09 45 e4             	or     %eax,-0x1c(%ebp)
8400189f:	83 c3 68             	add    $0x68,%ebx
840018a2:	83 ef 01             	sub    $0x1,%edi
840018a5:	85 ff                	test   %edi,%edi
840018a7:	79 cc                	jns    84001875 <_fwalk+0x23>
840018a9:	8b 36                	mov    (%esi),%esi
840018ab:	85 f6                	test   %esi,%esi
840018ad:	75 be                	jne    8400186d <_fwalk+0x1b>
840018af:	8b 45 e4             	mov    -0x1c(%ebp),%eax
840018b2:	8d 65 f4             	lea    -0xc(%ebp),%esp
840018b5:	5b                   	pop    %ebx
840018b6:	5e                   	pop    %esi
840018b7:	5f                   	pop    %edi
840018b8:	5d                   	pop    %ebp
840018b9:	c3                   	ret    

840018ba <_fwalk_reent>:
840018ba:	55                   	push   %ebp
840018bb:	89 e5                	mov    %esp,%ebp
840018bd:	57                   	push   %edi
840018be:	56                   	push   %esi
840018bf:	53                   	push   %ebx
840018c0:	83 ec 1c             	sub    $0x1c,%esp
840018c3:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
840018ca:	8b 45 08             	mov    0x8(%ebp),%eax
840018cd:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
840018d3:	eb 41                	jmp    84001916 <_fwalk_reent+0x5c>
840018d5:	8b 5e 08             	mov    0x8(%esi),%ebx
840018d8:	8b 7e 04             	mov    0x4(%esi),%edi
840018db:	eb 30                	jmp    8400190d <_fwalk_reent+0x53>
840018dd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840018e1:	66 85 c0             	test   %ax,%ax
840018e4:	74 24                	je     8400190a <_fwalk_reent+0x50>
840018e6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840018ea:	66 83 f8 01          	cmp    $0x1,%ax
840018ee:	74 1a                	je     8400190a <_fwalk_reent+0x50>
840018f0:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
840018f4:	66 83 f8 ff          	cmp    $0xffff,%ax
840018f8:	74 10                	je     8400190a <_fwalk_reent+0x50>
840018fa:	83 ec 08             	sub    $0x8,%esp
840018fd:	53                   	push   %ebx
840018fe:	ff 75 08             	push   0x8(%ebp)
84001901:	ff 55 0c             	call   *0xc(%ebp)
84001904:	83 c4 10             	add    $0x10,%esp
84001907:	09 45 e4             	or     %eax,-0x1c(%ebp)
8400190a:	83 c3 68             	add    $0x68,%ebx
8400190d:	83 ef 01             	sub    $0x1,%edi
84001910:	85 ff                	test   %edi,%edi
84001912:	79 c9                	jns    840018dd <_fwalk_reent+0x23>
84001914:	8b 36                	mov    (%esi),%esi
84001916:	85 f6                	test   %esi,%esi
84001918:	75 bb                	jne    840018d5 <_fwalk_reent+0x1b>
8400191a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8400191d:	8d 65 f4             	lea    -0xc(%ebp),%esp
84001920:	5b                   	pop    %ebx
84001921:	5e                   	pop    %esi
84001922:	5f                   	pop    %edi
84001923:	5d                   	pop    %ebp
84001924:	c3                   	ret    

84001925 <_getchar_r>:
84001925:	55                   	push   %ebp
84001926:	89 e5                	mov    %esp,%ebp
84001928:	83 ec 08             	sub    $0x8,%esp
8400192b:	8b 45 08             	mov    0x8(%ebp),%eax
8400192e:	8b 40 04             	mov    0x4(%eax),%eax
84001931:	83 ec 08             	sub    $0x8,%esp
84001934:	50                   	push   %eax
84001935:	ff 75 08             	push   0x8(%ebp)
84001938:	e8 cc 12 00 00       	call   84002c09 <_getc_r>
8400193d:	83 c4 10             	add    $0x10,%esp
84001940:	c9                   	leave  
84001941:	c3                   	ret    

84001942 <getchar>:
84001942:	55                   	push   %ebp
84001943:	89 e5                	mov    %esp,%ebp
84001945:	83 ec 18             	sub    $0x18,%esp
84001948:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
8400194d:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001950:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001953:	8b 40 04             	mov    0x4(%eax),%eax
84001956:	83 ec 08             	sub    $0x8,%esp
84001959:	50                   	push   %eax
8400195a:	ff 75 f4             	push   -0xc(%ebp)
8400195d:	e8 a7 12 00 00       	call   84002c09 <_getc_r>
84001962:	83 c4 10             	add    $0x10,%esp
84001965:	c9                   	leave  
84001966:	c3                   	ret    

84001967 <__getreent>:
84001967:	55                   	push   %ebp
84001968:	89 e5                	mov    %esp,%ebp
8400196a:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
8400196f:	5d                   	pop    %ebp
84001970:	c3                   	ret    

84001971 <malloc>:
84001971:	55                   	push   %ebp
84001972:	89 e5                	mov    %esp,%ebp
84001974:	83 ec 08             	sub    $0x8,%esp
84001977:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
8400197c:	83 ec 08             	sub    $0x8,%esp
8400197f:	ff 75 08             	push   0x8(%ebp)
84001982:	50                   	push   %eax
84001983:	e8 b5 02 00 00       	call   84001c3d <_malloc_r>
84001988:	83 c4 10             	add    $0x10,%esp
8400198b:	c9                   	leave  
8400198c:	c3                   	ret    

8400198d <free>:
8400198d:	55                   	push   %ebp
8400198e:	89 e5                	mov    %esp,%ebp
84001990:	83 ec 08             	sub    $0x8,%esp
84001993:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84001998:	83 ec 08             	sub    $0x8,%esp
8400199b:	ff 75 08             	push   0x8(%ebp)
8400199e:	50                   	push   %eax
8400199f:	e8 72 f9 ff ff       	call   84001316 <_free_r>
840019a4:	83 c4 10             	add    $0x10,%esp
840019a7:	90                   	nop
840019a8:	c9                   	leave  
840019a9:	c3                   	ret    

840019aa <malloc_extend_top>:
840019aa:	55                   	push   %ebp
840019ab:	89 e5                	mov    %esp,%ebp
840019ad:	83 ec 38             	sub    $0x38,%esp
840019b0:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
840019b7:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
840019bc:	8b 40 08             	mov    0x8(%eax),%eax
840019bf:	89 45 e0             	mov    %eax,-0x20(%ebp)
840019c2:	8b 45 e0             	mov    -0x20(%ebp),%eax
840019c5:	8b 40 04             	mov    0x4(%eax),%eax
840019c8:	83 e0 fc             	and    $0xfffffffc,%eax
840019cb:	89 45 dc             	mov    %eax,-0x24(%ebp)
840019ce:	8b 55 e0             	mov    -0x20(%ebp),%edx
840019d1:	8b 45 dc             	mov    -0x24(%ebp),%eax
840019d4:	01 d0                	add    %edx,%eax
840019d6:	89 45 d8             	mov    %eax,-0x28(%ebp)
840019d9:	8b 15 c0 63 00 84    	mov    0x840063c0,%edx
840019df:	8b 45 0c             	mov    0xc(%ebp),%eax
840019e2:	01 d0                	add    %edx,%eax
840019e4:	83 c0 10             	add    $0x10,%eax
840019e7:	89 45 e8             	mov    %eax,-0x18(%ebp)
840019ea:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
840019f1:	a1 0c 62 00 84       	mov    0x8400620c,%eax
840019f6:	83 f8 ff             	cmp    $0xffffffff,%eax
840019f9:	74 15                	je     84001a10 <malloc_extend_top+0x66>
840019fb:	8b 55 d4             	mov    -0x2c(%ebp),%edx
840019fe:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001a01:	01 d0                	add    %edx,%eax
84001a03:	8d 50 ff             	lea    -0x1(%eax),%edx
84001a06:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001a09:	f7 d8                	neg    %eax
84001a0b:	21 d0                	and    %edx,%eax
84001a0d:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001a10:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001a13:	83 ec 08             	sub    $0x8,%esp
84001a16:	50                   	push   %eax
84001a17:	ff 75 08             	push   0x8(%ebp)
84001a1a:	e8 c7 0b 00 00       	call   840025e6 <_sbrk_r>
84001a1f:	83 c4 10             	add    $0x10,%esp
84001a22:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001a25:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84001a29:	0f 84 0b 02 00 00    	je     84001c3a <malloc_extend_top+0x290>
84001a2f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001a32:	3b 45 d8             	cmp    -0x28(%ebp),%eax
84001a35:	73 0e                	jae    84001a45 <malloc_extend_top+0x9b>
84001a37:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84001a3c:	39 45 e0             	cmp    %eax,-0x20(%ebp)
84001a3f:	0f 85 f5 01 00 00    	jne    84001c3a <malloc_extend_top+0x290>
84001a45:	a1 e0 63 00 84       	mov    0x840063e0,%eax
84001a4a:	89 c2                	mov    %eax,%edx
84001a4c:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001a4f:	01 d0                	add    %edx,%eax
84001a51:	a3 e0 63 00 84       	mov    %eax,0x840063e0
84001a56:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001a59:	3b 45 d8             	cmp    -0x28(%ebp),%eax
84001a5c:	75 30                	jne    84001a8e <malloc_extend_top+0xe4>
84001a5e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001a61:	8d 50 ff             	lea    -0x1(%eax),%edx
84001a64:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001a67:	21 d0                	and    %edx,%eax
84001a69:	85 c0                	test   %eax,%eax
84001a6b:	75 21                	jne    84001a8e <malloc_extend_top+0xe4>
84001a6d:	8b 55 e8             	mov    -0x18(%ebp),%edx
84001a70:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001a73:	01 d0                	add    %edx,%eax
84001a75:	89 45 d0             	mov    %eax,-0x30(%ebp)
84001a78:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84001a7d:	8b 40 08             	mov    0x8(%eax),%eax
84001a80:	8b 55 d0             	mov    -0x30(%ebp),%edx
84001a83:	83 ca 01             	or     $0x1,%edx
84001a86:	89 50 04             	mov    %edx,0x4(%eax)
84001a89:	e9 76 01 00 00       	jmp    84001c04 <malloc_extend_top+0x25a>
84001a8e:	a1 0c 62 00 84       	mov    0x8400620c,%eax
84001a93:	83 f8 ff             	cmp    $0xffffffff,%eax
84001a96:	75 0a                	jne    84001aa2 <malloc_extend_top+0xf8>
84001a98:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001a9b:	a3 0c 62 00 84       	mov    %eax,0x8400620c
84001aa0:	eb 13                	jmp    84001ab5 <malloc_extend_top+0x10b>
84001aa2:	8b 15 e0 63 00 84    	mov    0x840063e0,%edx
84001aa8:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001aab:	2b 45 d8             	sub    -0x28(%ebp),%eax
84001aae:	01 d0                	add    %edx,%eax
84001ab0:	a3 e0 63 00 84       	mov    %eax,0x840063e0
84001ab5:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001ab8:	83 c0 08             	add    $0x8,%eax
84001abb:	83 e0 07             	and    $0x7,%eax
84001abe:	89 45 cc             	mov    %eax,-0x34(%ebp)
84001ac1:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
84001ac5:	74 13                	je     84001ada <malloc_extend_top+0x130>
84001ac7:	b8 08 00 00 00       	mov    $0x8,%eax
84001acc:	2b 45 cc             	sub    -0x34(%ebp),%eax
84001acf:	89 45 f0             	mov    %eax,-0x10(%ebp)
84001ad2:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001ad5:	01 45 f4             	add    %eax,-0xc(%ebp)
84001ad8:	eb 07                	jmp    84001ae1 <malloc_extend_top+0x137>
84001ada:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
84001ae1:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001ae4:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001ae7:	01 d0                	add    %edx,%eax
84001ae9:	89 c2                	mov    %eax,%edx
84001aeb:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001aee:	83 e8 01             	sub    $0x1,%eax
84001af1:	21 c2                	and    %eax,%edx
84001af3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001af6:	29 d0                	sub    %edx,%eax
84001af8:	01 45 f0             	add    %eax,-0x10(%ebp)
84001afb:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001afe:	83 e8 01             	sub    $0x1,%eax
84001b01:	21 45 f0             	and    %eax,-0x10(%ebp)
84001b04:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001b07:	83 ec 08             	sub    $0x8,%esp
84001b0a:	50                   	push   %eax
84001b0b:	ff 75 08             	push   0x8(%ebp)
84001b0e:	e8 d3 0a 00 00       	call   840025e6 <_sbrk_r>
84001b13:	83 c4 10             	add    $0x10,%esp
84001b16:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001b19:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
84001b1d:	75 28                	jne    84001b47 <malloc_extend_top+0x19d>
84001b1f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
84001b26:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
84001b2d:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001b30:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001b33:	01 d0                	add    %edx,%eax
84001b35:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001b38:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
84001b3c:	74 09                	je     84001b47 <malloc_extend_top+0x19d>
84001b3e:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001b41:	83 e8 08             	sub    $0x8,%eax
84001b44:	01 45 ec             	add    %eax,-0x14(%ebp)
84001b47:	a1 e0 63 00 84       	mov    0x840063e0,%eax
84001b4c:	89 c2                	mov    %eax,%edx
84001b4e:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001b51:	01 d0                	add    %edx,%eax
84001b53:	a3 e0 63 00 84       	mov    %eax,0x840063e0
84001b58:	ba 00 5e 00 84       	mov    $0x84005e00,%edx
84001b5d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001b60:	89 42 08             	mov    %eax,0x8(%edx)
84001b63:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001b66:	2b 45 f4             	sub    -0xc(%ebp),%eax
84001b69:	89 c2                	mov    %eax,%edx
84001b6b:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001b6e:	01 d0                	add    %edx,%eax
84001b70:	89 45 d0             	mov    %eax,-0x30(%ebp)
84001b73:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84001b78:	8b 40 08             	mov    0x8(%eax),%eax
84001b7b:	8b 55 d0             	mov    -0x30(%ebp),%edx
84001b7e:	83 ca 01             	or     $0x1,%edx
84001b81:	89 50 04             	mov    %edx,0x4(%eax)
84001b84:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84001b89:	39 45 e0             	cmp    %eax,-0x20(%ebp)
84001b8c:	74 76                	je     84001c04 <malloc_extend_top+0x25a>
84001b8e:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
84001b92:	77 14                	ja     84001ba8 <malloc_extend_top+0x1fe>
84001b94:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84001b99:	8b 40 08             	mov    0x8(%eax),%eax
84001b9c:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
84001ba3:	e9 93 00 00 00       	jmp    84001c3b <malloc_extend_top+0x291>
84001ba8:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001bab:	83 e8 0c             	sub    $0xc,%eax
84001bae:	83 e0 f8             	and    $0xfffffff8,%eax
84001bb1:	89 45 dc             	mov    %eax,-0x24(%ebp)
84001bb4:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001bb7:	8b 40 04             	mov    0x4(%eax),%eax
84001bba:	83 e0 01             	and    $0x1,%eax
84001bbd:	0b 45 dc             	or     -0x24(%ebp),%eax
84001bc0:	89 c2                	mov    %eax,%edx
84001bc2:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001bc5:	89 50 04             	mov    %edx,0x4(%eax)
84001bc8:	8b 55 e0             	mov    -0x20(%ebp),%edx
84001bcb:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001bce:	01 d0                	add    %edx,%eax
84001bd0:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
84001bd7:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001bda:	8d 50 04             	lea    0x4(%eax),%edx
84001bdd:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001be0:	01 d0                	add    %edx,%eax
84001be2:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
84001be9:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
84001bed:	76 15                	jbe    84001c04 <malloc_extend_top+0x25a>
84001bef:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001bf2:	83 c0 08             	add    $0x8,%eax
84001bf5:	83 ec 08             	sub    $0x8,%esp
84001bf8:	50                   	push   %eax
84001bf9:	ff 75 08             	push   0x8(%ebp)
84001bfc:	e8 15 f7 ff ff       	call   84001316 <_free_r>
84001c01:	83 c4 10             	add    $0x10,%esp
84001c04:	a1 e0 63 00 84       	mov    0x840063e0,%eax
84001c09:	89 c2                	mov    %eax,%edx
84001c0b:	a1 c4 63 00 84       	mov    0x840063c4,%eax
84001c10:	39 c2                	cmp    %eax,%edx
84001c12:	76 0a                	jbe    84001c1e <malloc_extend_top+0x274>
84001c14:	a1 e0 63 00 84       	mov    0x840063e0,%eax
84001c19:	a3 c4 63 00 84       	mov    %eax,0x840063c4
84001c1e:	a1 e0 63 00 84       	mov    0x840063e0,%eax
84001c23:	89 c2                	mov    %eax,%edx
84001c25:	a1 c8 63 00 84       	mov    0x840063c8,%eax
84001c2a:	39 c2                	cmp    %eax,%edx
84001c2c:	76 0d                	jbe    84001c3b <malloc_extend_top+0x291>
84001c2e:	a1 e0 63 00 84       	mov    0x840063e0,%eax
84001c33:	a3 c8 63 00 84       	mov    %eax,0x840063c8
84001c38:	eb 01                	jmp    84001c3b <malloc_extend_top+0x291>
84001c3a:	90                   	nop
84001c3b:	c9                   	leave  
84001c3c:	c3                   	ret    

84001c3d <_malloc_r>:
84001c3d:	55                   	push   %ebp
84001c3e:	89 e5                	mov    %esp,%ebp
84001c40:	53                   	push   %ebx
84001c41:	83 ec 44             	sub    $0x44,%esp
84001c44:	8b 45 0c             	mov    0xc(%ebp),%eax
84001c47:	83 c0 0b             	add    $0xb,%eax
84001c4a:	83 f8 16             	cmp    $0x16,%eax
84001c4d:	76 0b                	jbe    84001c5a <_malloc_r+0x1d>
84001c4f:	8b 45 0c             	mov    0xc(%ebp),%eax
84001c52:	83 c0 0b             	add    $0xb,%eax
84001c55:	83 e0 f8             	and    $0xfffffff8,%eax
84001c58:	eb 05                	jmp    84001c5f <_malloc_r+0x22>
84001c5a:	b8 10 00 00 00       	mov    $0x10,%eax
84001c5f:	89 45 d0             	mov    %eax,-0x30(%ebp)
84001c62:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001c65:	85 c0                	test   %eax,%eax
84001c67:	78 08                	js     84001c71 <_malloc_r+0x34>
84001c69:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001c6c:	3b 45 0c             	cmp    0xc(%ebp),%eax
84001c6f:	73 13                	jae    84001c84 <_malloc_r+0x47>
84001c71:	8b 45 08             	mov    0x8(%ebp),%eax
84001c74:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
84001c7a:	b8 00 00 00 00       	mov    $0x0,%eax
84001c7f:	e9 d6 07 00 00       	jmp    8400245a <_malloc_r+0x81d>
84001c84:	83 ec 0c             	sub    $0xc,%esp
84001c87:	ff 75 08             	push   0x8(%ebp)
84001c8a:	e8 58 08 00 00       	call   840024e7 <__malloc_lock>
84001c8f:	83 c4 10             	add    $0x10,%esp
84001c92:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
84001c99:	0f 87 b0 00 00 00    	ja     84001d4f <_malloc_r+0x112>
84001c9f:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001ca2:	c1 e8 03             	shr    $0x3,%eax
84001ca5:	89 45 f0             	mov    %eax,-0x10(%ebp)
84001ca8:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001cab:	83 c0 01             	add    $0x1,%eax
84001cae:	01 c0                	add    %eax,%eax
84001cb0:	c1 e0 02             	shl    $0x2,%eax
84001cb3:	05 00 5e 00 84       	add    $0x84005e00,%eax
84001cb8:	83 e8 08             	sub    $0x8,%eax
84001cbb:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84001cbe:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001cc1:	8b 40 0c             	mov    0xc(%eax),%eax
84001cc4:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001cc7:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001cca:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
84001ccd:	75 0d                	jne    84001cdc <_malloc_r+0x9f>
84001ccf:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
84001cd3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001cd6:	8b 40 0c             	mov    0xc(%eax),%eax
84001cd9:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001cdc:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001cdf:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
84001ce2:	74 62                	je     84001d46 <_malloc_r+0x109>
84001ce4:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001ce7:	8b 40 04             	mov    0x4(%eax),%eax
84001cea:	83 e0 fc             	and    $0xfffffffc,%eax
84001ced:	89 45 cc             	mov    %eax,-0x34(%ebp)
84001cf0:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001cf3:	8b 40 0c             	mov    0xc(%eax),%eax
84001cf6:	89 45 d8             	mov    %eax,-0x28(%ebp)
84001cf9:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001cfc:	8b 40 08             	mov    0x8(%eax),%eax
84001cff:	89 45 dc             	mov    %eax,-0x24(%ebp)
84001d02:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001d05:	8b 55 d8             	mov    -0x28(%ebp),%edx
84001d08:	89 50 0c             	mov    %edx,0xc(%eax)
84001d0b:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001d0e:	8b 55 dc             	mov    -0x24(%ebp),%edx
84001d11:	89 50 08             	mov    %edx,0x8(%eax)
84001d14:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001d17:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001d1a:	01 d0                	add    %edx,%eax
84001d1c:	8b 50 04             	mov    0x4(%eax),%edx
84001d1f:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84001d22:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001d25:	01 c8                	add    %ecx,%eax
84001d27:	83 ca 01             	or     $0x1,%edx
84001d2a:	89 50 04             	mov    %edx,0x4(%eax)
84001d2d:	83 ec 0c             	sub    $0xc,%esp
84001d30:	ff 75 08             	push   0x8(%ebp)
84001d33:	e8 b5 07 00 00       	call   840024ed <__malloc_unlock>
84001d38:	83 c4 10             	add    $0x10,%esp
84001d3b:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001d3e:	83 c0 08             	add    $0x8,%eax
84001d41:	e9 14 07 00 00       	jmp    8400245a <_malloc_r+0x81d>
84001d46:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
84001d4a:	e9 46 01 00 00       	jmp    84001e95 <_malloc_r+0x258>
84001d4f:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d52:	c1 e8 09             	shr    $0x9,%eax
84001d55:	85 c0                	test   %eax,%eax
84001d57:	75 08                	jne    84001d61 <_malloc_r+0x124>
84001d59:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d5c:	c1 e8 03             	shr    $0x3,%eax
84001d5f:	eb 77                	jmp    84001dd8 <_malloc_r+0x19b>
84001d61:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d64:	c1 e8 09             	shr    $0x9,%eax
84001d67:	83 f8 04             	cmp    $0x4,%eax
84001d6a:	77 0b                	ja     84001d77 <_malloc_r+0x13a>
84001d6c:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d6f:	c1 e8 06             	shr    $0x6,%eax
84001d72:	83 c0 38             	add    $0x38,%eax
84001d75:	eb 61                	jmp    84001dd8 <_malloc_r+0x19b>
84001d77:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d7a:	c1 e8 09             	shr    $0x9,%eax
84001d7d:	83 f8 14             	cmp    $0x14,%eax
84001d80:	77 0b                	ja     84001d8d <_malloc_r+0x150>
84001d82:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d85:	c1 e8 09             	shr    $0x9,%eax
84001d88:	83 c0 5b             	add    $0x5b,%eax
84001d8b:	eb 4b                	jmp    84001dd8 <_malloc_r+0x19b>
84001d8d:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d90:	c1 e8 09             	shr    $0x9,%eax
84001d93:	83 f8 54             	cmp    $0x54,%eax
84001d96:	77 0b                	ja     84001da3 <_malloc_r+0x166>
84001d98:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d9b:	c1 e8 0c             	shr    $0xc,%eax
84001d9e:	83 c0 6e             	add    $0x6e,%eax
84001da1:	eb 35                	jmp    84001dd8 <_malloc_r+0x19b>
84001da3:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001da6:	c1 e8 09             	shr    $0x9,%eax
84001da9:	3d 54 01 00 00       	cmp    $0x154,%eax
84001dae:	77 0b                	ja     84001dbb <_malloc_r+0x17e>
84001db0:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001db3:	c1 e8 0f             	shr    $0xf,%eax
84001db6:	83 c0 77             	add    $0x77,%eax
84001db9:	eb 1d                	jmp    84001dd8 <_malloc_r+0x19b>
84001dbb:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001dbe:	c1 e8 09             	shr    $0x9,%eax
84001dc1:	3d 54 05 00 00       	cmp    $0x554,%eax
84001dc6:	77 0b                	ja     84001dd3 <_malloc_r+0x196>
84001dc8:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001dcb:	c1 e8 12             	shr    $0x12,%eax
84001dce:	83 c0 7c             	add    $0x7c,%eax
84001dd1:	eb 05                	jmp    84001dd8 <_malloc_r+0x19b>
84001dd3:	b8 7e 00 00 00       	mov    $0x7e,%eax
84001dd8:	89 45 f0             	mov    %eax,-0x10(%ebp)
84001ddb:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001dde:	83 c0 01             	add    $0x1,%eax
84001de1:	01 c0                	add    %eax,%eax
84001de3:	c1 e0 02             	shl    $0x2,%eax
84001de6:	05 00 5e 00 84       	add    $0x84005e00,%eax
84001deb:	83 e8 08             	sub    $0x8,%eax
84001dee:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001df1:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001df4:	8b 40 0c             	mov    0xc(%eax),%eax
84001df7:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001dfa:	e9 86 00 00 00       	jmp    84001e85 <_malloc_r+0x248>
84001dff:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e02:	8b 40 04             	mov    0x4(%eax),%eax
84001e05:	83 e0 fc             	and    $0xfffffffc,%eax
84001e08:	89 45 cc             	mov    %eax,-0x34(%ebp)
84001e0b:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001e0e:	2b 45 d0             	sub    -0x30(%ebp),%eax
84001e11:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001e14:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
84001e18:	7e 06                	jle    84001e20 <_malloc_r+0x1e3>
84001e1a:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
84001e1e:	eb 71                	jmp    84001e91 <_malloc_r+0x254>
84001e20:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
84001e24:	78 56                	js     84001e7c <_malloc_r+0x23f>
84001e26:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e29:	8b 40 0c             	mov    0xc(%eax),%eax
84001e2c:	89 45 d8             	mov    %eax,-0x28(%ebp)
84001e2f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e32:	8b 40 08             	mov    0x8(%eax),%eax
84001e35:	89 45 dc             	mov    %eax,-0x24(%ebp)
84001e38:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001e3b:	8b 55 d8             	mov    -0x28(%ebp),%edx
84001e3e:	89 50 0c             	mov    %edx,0xc(%eax)
84001e41:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001e44:	8b 55 dc             	mov    -0x24(%ebp),%edx
84001e47:	89 50 08             	mov    %edx,0x8(%eax)
84001e4a:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001e4d:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001e50:	01 d0                	add    %edx,%eax
84001e52:	8b 50 04             	mov    0x4(%eax),%edx
84001e55:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84001e58:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001e5b:	01 c8                	add    %ecx,%eax
84001e5d:	83 ca 01             	or     $0x1,%edx
84001e60:	89 50 04             	mov    %edx,0x4(%eax)
84001e63:	83 ec 0c             	sub    $0xc,%esp
84001e66:	ff 75 08             	push   0x8(%ebp)
84001e69:	e8 7f 06 00 00       	call   840024ed <__malloc_unlock>
84001e6e:	83 c4 10             	add    $0x10,%esp
84001e71:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e74:	83 c0 08             	add    $0x8,%eax
84001e77:	e9 de 05 00 00       	jmp    8400245a <_malloc_r+0x81d>
84001e7c:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e7f:	8b 40 0c             	mov    0xc(%eax),%eax
84001e82:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001e85:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e88:	3b 45 ec             	cmp    -0x14(%ebp),%eax
84001e8b:	0f 85 6e ff ff ff    	jne    84001dff <_malloc_r+0x1c2>
84001e91:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
84001e95:	b8 08 5e 00 84       	mov    $0x84005e08,%eax
84001e9a:	8b 40 08             	mov    0x8(%eax),%eax
84001e9d:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001ea0:	b8 08 5e 00 84       	mov    $0x84005e08,%eax
84001ea5:	39 45 f4             	cmp    %eax,-0xc(%ebp)
84001ea8:	0f 84 9c 02 00 00    	je     8400214a <_malloc_r+0x50d>
84001eae:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001eb1:	8b 40 04             	mov    0x4(%eax),%eax
84001eb4:	83 e0 fc             	and    $0xfffffffc,%eax
84001eb7:	89 45 cc             	mov    %eax,-0x34(%ebp)
84001eba:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001ebd:	2b 45 d0             	sub    -0x30(%ebp),%eax
84001ec0:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001ec3:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
84001ec7:	7e 7a                	jle    84001f43 <_malloc_r+0x306>
84001ec9:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001ecc:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001ecf:	01 d0                	add    %edx,%eax
84001ed1:	89 45 c4             	mov    %eax,-0x3c(%ebp)
84001ed4:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001ed7:	83 c8 01             	or     $0x1,%eax
84001eda:	89 c2                	mov    %eax,%edx
84001edc:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001edf:	89 50 04             	mov    %edx,0x4(%eax)
84001ee2:	b8 08 5e 00 84       	mov    $0x84005e08,%eax
84001ee7:	8b 55 c4             	mov    -0x3c(%ebp),%edx
84001eea:	89 50 0c             	mov    %edx,0xc(%eax)
84001eed:	ba 08 5e 00 84       	mov    $0x84005e08,%edx
84001ef2:	8b 40 0c             	mov    0xc(%eax),%eax
84001ef5:	89 42 08             	mov    %eax,0x8(%edx)
84001ef8:	ba 08 5e 00 84       	mov    $0x84005e08,%edx
84001efd:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84001f00:	89 50 0c             	mov    %edx,0xc(%eax)
84001f03:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84001f06:	8b 50 0c             	mov    0xc(%eax),%edx
84001f09:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84001f0c:	89 50 08             	mov    %edx,0x8(%eax)
84001f0f:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001f12:	83 c8 01             	or     $0x1,%eax
84001f15:	89 c2                	mov    %eax,%edx
84001f17:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84001f1a:	89 50 04             	mov    %edx,0x4(%eax)
84001f1d:	8b 55 e8             	mov    -0x18(%ebp),%edx
84001f20:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84001f23:	01 c2                	add    %eax,%edx
84001f25:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001f28:	89 02                	mov    %eax,(%edx)
84001f2a:	83 ec 0c             	sub    $0xc,%esp
84001f2d:	ff 75 08             	push   0x8(%ebp)
84001f30:	e8 b8 05 00 00       	call   840024ed <__malloc_unlock>
84001f35:	83 c4 10             	add    $0x10,%esp
84001f38:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001f3b:	83 c0 08             	add    $0x8,%eax
84001f3e:	e9 17 05 00 00       	jmp    8400245a <_malloc_r+0x81d>
84001f43:	b8 08 5e 00 84       	mov    $0x84005e08,%eax
84001f48:	ba 08 5e 00 84       	mov    $0x84005e08,%edx
84001f4d:	89 50 0c             	mov    %edx,0xc(%eax)
84001f50:	ba 08 5e 00 84       	mov    $0x84005e08,%edx
84001f55:	8b 40 0c             	mov    0xc(%eax),%eax
84001f58:	89 42 08             	mov    %eax,0x8(%edx)
84001f5b:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
84001f5f:	78 32                	js     84001f93 <_malloc_r+0x356>
84001f61:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001f64:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001f67:	01 d0                	add    %edx,%eax
84001f69:	8b 50 04             	mov    0x4(%eax),%edx
84001f6c:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84001f6f:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001f72:	01 c8                	add    %ecx,%eax
84001f74:	83 ca 01             	or     $0x1,%edx
84001f77:	89 50 04             	mov    %edx,0x4(%eax)
84001f7a:	83 ec 0c             	sub    $0xc,%esp
84001f7d:	ff 75 08             	push   0x8(%ebp)
84001f80:	e8 68 05 00 00       	call   840024ed <__malloc_unlock>
84001f85:	83 c4 10             	add    $0x10,%esp
84001f88:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001f8b:	83 c0 08             	add    $0x8,%eax
84001f8e:	e9 c7 04 00 00       	jmp    8400245a <_malloc_r+0x81d>
84001f93:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
84001f9a:	77 7f                	ja     8400201b <_malloc_r+0x3de>
84001f9c:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001f9f:	c1 e8 03             	shr    $0x3,%eax
84001fa2:	89 45 c8             	mov    %eax,-0x38(%ebp)
84001fa5:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84001faa:	8b 58 04             	mov    0x4(%eax),%ebx
84001fad:	8b 45 c8             	mov    -0x38(%ebp),%eax
84001fb0:	8d 50 03             	lea    0x3(%eax),%edx
84001fb3:	85 c0                	test   %eax,%eax
84001fb5:	0f 48 c2             	cmovs  %edx,%eax
84001fb8:	c1 f8 02             	sar    $0x2,%eax
84001fbb:	ba 01 00 00 00       	mov    $0x1,%edx
84001fc0:	89 c1                	mov    %eax,%ecx
84001fc2:	d3 e2                	shl    %cl,%edx
84001fc4:	89 d0                	mov    %edx,%eax
84001fc6:	ba 00 5e 00 84       	mov    $0x84005e00,%edx
84001fcb:	09 d8                	or     %ebx,%eax
84001fcd:	89 42 04             	mov    %eax,0x4(%edx)
84001fd0:	8b 45 c8             	mov    -0x38(%ebp),%eax
84001fd3:	83 c0 01             	add    $0x1,%eax
84001fd6:	01 c0                	add    %eax,%eax
84001fd8:	c1 e0 02             	shl    $0x2,%eax
84001fdb:	05 00 5e 00 84       	add    $0x84005e00,%eax
84001fe0:	83 e8 08             	sub    $0x8,%eax
84001fe3:	89 45 d8             	mov    %eax,-0x28(%ebp)
84001fe6:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001fe9:	8b 40 08             	mov    0x8(%eax),%eax
84001fec:	89 45 dc             	mov    %eax,-0x24(%ebp)
84001fef:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001ff2:	8b 55 d8             	mov    -0x28(%ebp),%edx
84001ff5:	89 50 0c             	mov    %edx,0xc(%eax)
84001ff8:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001ffb:	8b 55 dc             	mov    -0x24(%ebp),%edx
84001ffe:	89 50 08             	mov    %edx,0x8(%eax)
84002001:	8b 45 d8             	mov    -0x28(%ebp),%eax
84002004:	8b 55 f4             	mov    -0xc(%ebp),%edx
84002007:	89 50 08             	mov    %edx,0x8(%eax)
8400200a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8400200d:	8b 50 08             	mov    0x8(%eax),%edx
84002010:	8b 45 dc             	mov    -0x24(%ebp),%eax
84002013:	89 50 0c             	mov    %edx,0xc(%eax)
84002016:	e9 2f 01 00 00       	jmp    8400214a <_malloc_r+0x50d>
8400201b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8400201e:	c1 e8 09             	shr    $0x9,%eax
84002021:	85 c0                	test   %eax,%eax
84002023:	75 08                	jne    8400202d <_malloc_r+0x3f0>
84002025:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002028:	c1 e8 03             	shr    $0x3,%eax
8400202b:	eb 77                	jmp    840020a4 <_malloc_r+0x467>
8400202d:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002030:	c1 e8 09             	shr    $0x9,%eax
84002033:	83 f8 04             	cmp    $0x4,%eax
84002036:	77 0b                	ja     84002043 <_malloc_r+0x406>
84002038:	8b 45 cc             	mov    -0x34(%ebp),%eax
8400203b:	c1 e8 06             	shr    $0x6,%eax
8400203e:	83 c0 38             	add    $0x38,%eax
84002041:	eb 61                	jmp    840020a4 <_malloc_r+0x467>
84002043:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002046:	c1 e8 09             	shr    $0x9,%eax
84002049:	83 f8 14             	cmp    $0x14,%eax
8400204c:	77 0b                	ja     84002059 <_malloc_r+0x41c>
8400204e:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002051:	c1 e8 09             	shr    $0x9,%eax
84002054:	83 c0 5b             	add    $0x5b,%eax
84002057:	eb 4b                	jmp    840020a4 <_malloc_r+0x467>
84002059:	8b 45 cc             	mov    -0x34(%ebp),%eax
8400205c:	c1 e8 09             	shr    $0x9,%eax
8400205f:	83 f8 54             	cmp    $0x54,%eax
84002062:	77 0b                	ja     8400206f <_malloc_r+0x432>
84002064:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002067:	c1 e8 0c             	shr    $0xc,%eax
8400206a:	83 c0 6e             	add    $0x6e,%eax
8400206d:	eb 35                	jmp    840020a4 <_malloc_r+0x467>
8400206f:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002072:	c1 e8 09             	shr    $0x9,%eax
84002075:	3d 54 01 00 00       	cmp    $0x154,%eax
8400207a:	77 0b                	ja     84002087 <_malloc_r+0x44a>
8400207c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8400207f:	c1 e8 0f             	shr    $0xf,%eax
84002082:	83 c0 77             	add    $0x77,%eax
84002085:	eb 1d                	jmp    840020a4 <_malloc_r+0x467>
84002087:	8b 45 cc             	mov    -0x34(%ebp),%eax
8400208a:	c1 e8 09             	shr    $0x9,%eax
8400208d:	3d 54 05 00 00       	cmp    $0x554,%eax
84002092:	77 0b                	ja     8400209f <_malloc_r+0x462>
84002094:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002097:	c1 e8 12             	shr    $0x12,%eax
8400209a:	83 c0 7c             	add    $0x7c,%eax
8400209d:	eb 05                	jmp    840020a4 <_malloc_r+0x467>
8400209f:	b8 7e 00 00 00       	mov    $0x7e,%eax
840020a4:	89 45 c8             	mov    %eax,-0x38(%ebp)
840020a7:	8b 45 c8             	mov    -0x38(%ebp),%eax
840020aa:	83 c0 01             	add    $0x1,%eax
840020ad:	01 c0                	add    %eax,%eax
840020af:	c1 e0 02             	shl    $0x2,%eax
840020b2:	05 00 5e 00 84       	add    $0x84005e00,%eax
840020b7:	83 e8 08             	sub    $0x8,%eax
840020ba:	89 45 d8             	mov    %eax,-0x28(%ebp)
840020bd:	8b 45 d8             	mov    -0x28(%ebp),%eax
840020c0:	8b 40 08             	mov    0x8(%eax),%eax
840020c3:	89 45 dc             	mov    %eax,-0x24(%ebp)
840020c6:	8b 45 dc             	mov    -0x24(%ebp),%eax
840020c9:	3b 45 d8             	cmp    -0x28(%ebp),%eax
840020cc:	75 36                	jne    84002104 <_malloc_r+0x4c7>
840020ce:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
840020d3:	8b 58 04             	mov    0x4(%eax),%ebx
840020d6:	8b 45 c8             	mov    -0x38(%ebp),%eax
840020d9:	8d 50 03             	lea    0x3(%eax),%edx
840020dc:	85 c0                	test   %eax,%eax
840020de:	0f 48 c2             	cmovs  %edx,%eax
840020e1:	c1 f8 02             	sar    $0x2,%eax
840020e4:	ba 01 00 00 00       	mov    $0x1,%edx
840020e9:	89 c1                	mov    %eax,%ecx
840020eb:	d3 e2                	shl    %cl,%edx
840020ed:	89 d0                	mov    %edx,%eax
840020ef:	ba 00 5e 00 84       	mov    $0x84005e00,%edx
840020f4:	09 d8                	or     %ebx,%eax
840020f6:	89 42 04             	mov    %eax,0x4(%edx)
840020f9:	eb 28                	jmp    84002123 <_malloc_r+0x4e6>
840020fb:	8b 45 dc             	mov    -0x24(%ebp),%eax
840020fe:	8b 40 08             	mov    0x8(%eax),%eax
84002101:	89 45 dc             	mov    %eax,-0x24(%ebp)
84002104:	8b 45 dc             	mov    -0x24(%ebp),%eax
84002107:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8400210a:	74 0e                	je     8400211a <_malloc_r+0x4dd>
8400210c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8400210f:	8b 40 04             	mov    0x4(%eax),%eax
84002112:	83 e0 fc             	and    $0xfffffffc,%eax
84002115:	39 45 cc             	cmp    %eax,-0x34(%ebp)
84002118:	72 e1                	jb     840020fb <_malloc_r+0x4be>
8400211a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8400211d:	8b 40 0c             	mov    0xc(%eax),%eax
84002120:	89 45 d8             	mov    %eax,-0x28(%ebp)
84002123:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002126:	8b 55 d8             	mov    -0x28(%ebp),%edx
84002129:	89 50 0c             	mov    %edx,0xc(%eax)
8400212c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400212f:	8b 55 dc             	mov    -0x24(%ebp),%edx
84002132:	89 50 08             	mov    %edx,0x8(%eax)
84002135:	8b 45 d8             	mov    -0x28(%ebp),%eax
84002138:	8b 55 f4             	mov    -0xc(%ebp),%edx
8400213b:	89 50 08             	mov    %edx,0x8(%eax)
8400213e:	8b 45 d8             	mov    -0x28(%ebp),%eax
84002141:	8b 50 08             	mov    0x8(%eax),%edx
84002144:	8b 45 dc             	mov    -0x24(%ebp),%eax
84002147:	89 50 0c             	mov    %edx,0xc(%eax)
8400214a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400214d:	8d 50 03             	lea    0x3(%eax),%edx
84002150:	85 c0                	test   %eax,%eax
84002152:	0f 48 c2             	cmovs  %edx,%eax
84002155:	c1 f8 02             	sar    $0x2,%eax
84002158:	ba 01 00 00 00       	mov    $0x1,%edx
8400215d:	89 c1                	mov    %eax,%ecx
8400215f:	d3 e2                	shl    %cl,%edx
84002161:	89 d0                	mov    %edx,%eax
84002163:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84002166:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
8400216b:	8b 40 04             	mov    0x4(%eax),%eax
8400216e:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
84002171:	0f 87 13 02 00 00    	ja     8400238a <_malloc_r+0x74d>
84002177:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
8400217c:	8b 40 04             	mov    0x4(%eax),%eax
8400217f:	23 45 e4             	and    -0x1c(%ebp),%eax
84002182:	85 c0                	test   %eax,%eax
84002184:	75 27                	jne    840021ad <_malloc_r+0x570>
84002186:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002189:	83 e0 fc             	and    $0xfffffffc,%eax
8400218c:	83 c0 04             	add    $0x4,%eax
8400218f:	89 45 f0             	mov    %eax,-0x10(%ebp)
84002192:	d1 65 e4             	shll   -0x1c(%ebp)
84002195:	eb 07                	jmp    8400219e <_malloc_r+0x561>
84002197:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
8400219b:	d1 65 e4             	shll   -0x1c(%ebp)
8400219e:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
840021a3:	8b 40 04             	mov    0x4(%eax),%eax
840021a6:	23 45 e4             	and    -0x1c(%ebp),%eax
840021a9:	85 c0                	test   %eax,%eax
840021ab:	74 ea                	je     84002197 <_malloc_r+0x55a>
840021ad:	8b 45 f0             	mov    -0x10(%ebp),%eax
840021b0:	89 45 e0             	mov    %eax,-0x20(%ebp)
840021b3:	8b 45 f0             	mov    -0x10(%ebp),%eax
840021b6:	83 c0 01             	add    $0x1,%eax
840021b9:	01 c0                	add    %eax,%eax
840021bb:	c1 e0 02             	shl    $0x2,%eax
840021be:	05 00 5e 00 84       	add    $0x84005e00,%eax
840021c3:	83 e8 08             	sub    $0x8,%eax
840021c6:	89 45 ec             	mov    %eax,-0x14(%ebp)
840021c9:	8b 45 ec             	mov    -0x14(%ebp),%eax
840021cc:	89 45 d4             	mov    %eax,-0x2c(%ebp)
840021cf:	8b 45 ec             	mov    -0x14(%ebp),%eax
840021d2:	8b 40 0c             	mov    0xc(%eax),%eax
840021d5:	89 45 f4             	mov    %eax,-0xc(%ebp)
840021d8:	e9 22 01 00 00       	jmp    840022ff <_malloc_r+0x6c2>
840021dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
840021e0:	8b 40 04             	mov    0x4(%eax),%eax
840021e3:	83 e0 fc             	and    $0xfffffffc,%eax
840021e6:	89 45 cc             	mov    %eax,-0x34(%ebp)
840021e9:	8b 45 cc             	mov    -0x34(%ebp),%eax
840021ec:	2b 45 d0             	sub    -0x30(%ebp),%eax
840021ef:	89 45 e8             	mov    %eax,-0x18(%ebp)
840021f2:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
840021f6:	0f 8e 9e 00 00 00    	jle    8400229a <_malloc_r+0x65d>
840021fc:	8b 55 f4             	mov    -0xc(%ebp),%edx
840021ff:	8b 45 d0             	mov    -0x30(%ebp),%eax
84002202:	01 d0                	add    %edx,%eax
84002204:	89 45 c4             	mov    %eax,-0x3c(%ebp)
84002207:	8b 45 d0             	mov    -0x30(%ebp),%eax
8400220a:	83 c8 01             	or     $0x1,%eax
8400220d:	89 c2                	mov    %eax,%edx
8400220f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002212:	89 50 04             	mov    %edx,0x4(%eax)
84002215:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002218:	8b 40 0c             	mov    0xc(%eax),%eax
8400221b:	89 45 d8             	mov    %eax,-0x28(%ebp)
8400221e:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002221:	8b 40 08             	mov    0x8(%eax),%eax
84002224:	89 45 dc             	mov    %eax,-0x24(%ebp)
84002227:	8b 45 dc             	mov    -0x24(%ebp),%eax
8400222a:	8b 55 d8             	mov    -0x28(%ebp),%edx
8400222d:	89 50 0c             	mov    %edx,0xc(%eax)
84002230:	8b 45 d8             	mov    -0x28(%ebp),%eax
84002233:	8b 55 dc             	mov    -0x24(%ebp),%edx
84002236:	89 50 08             	mov    %edx,0x8(%eax)
84002239:	b8 08 5e 00 84       	mov    $0x84005e08,%eax
8400223e:	8b 55 c4             	mov    -0x3c(%ebp),%edx
84002241:	89 50 0c             	mov    %edx,0xc(%eax)
84002244:	ba 08 5e 00 84       	mov    $0x84005e08,%edx
84002249:	8b 40 0c             	mov    0xc(%eax),%eax
8400224c:	89 42 08             	mov    %eax,0x8(%edx)
8400224f:	ba 08 5e 00 84       	mov    $0x84005e08,%edx
84002254:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84002257:	89 50 0c             	mov    %edx,0xc(%eax)
8400225a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8400225d:	8b 50 0c             	mov    0xc(%eax),%edx
84002260:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84002263:	89 50 08             	mov    %edx,0x8(%eax)
84002266:	8b 45 e8             	mov    -0x18(%ebp),%eax
84002269:	83 c8 01             	or     $0x1,%eax
8400226c:	89 c2                	mov    %eax,%edx
8400226e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84002271:	89 50 04             	mov    %edx,0x4(%eax)
84002274:	8b 55 e8             	mov    -0x18(%ebp),%edx
84002277:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8400227a:	01 c2                	add    %eax,%edx
8400227c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8400227f:	89 02                	mov    %eax,(%edx)
84002281:	83 ec 0c             	sub    $0xc,%esp
84002284:	ff 75 08             	push   0x8(%ebp)
84002287:	e8 61 02 00 00       	call   840024ed <__malloc_unlock>
8400228c:	83 c4 10             	add    $0x10,%esp
8400228f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002292:	83 c0 08             	add    $0x8,%eax
84002295:	e9 c0 01 00 00       	jmp    8400245a <_malloc_r+0x81d>
8400229a:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8400229e:	78 56                	js     840022f6 <_malloc_r+0x6b9>
840022a0:	8b 55 f4             	mov    -0xc(%ebp),%edx
840022a3:	8b 45 cc             	mov    -0x34(%ebp),%eax
840022a6:	01 d0                	add    %edx,%eax
840022a8:	8b 50 04             	mov    0x4(%eax),%edx
840022ab:	8b 4d f4             	mov    -0xc(%ebp),%ecx
840022ae:	8b 45 cc             	mov    -0x34(%ebp),%eax
840022b1:	01 c8                	add    %ecx,%eax
840022b3:	83 ca 01             	or     $0x1,%edx
840022b6:	89 50 04             	mov    %edx,0x4(%eax)
840022b9:	8b 45 f4             	mov    -0xc(%ebp),%eax
840022bc:	8b 40 0c             	mov    0xc(%eax),%eax
840022bf:	89 45 d8             	mov    %eax,-0x28(%ebp)
840022c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
840022c5:	8b 40 08             	mov    0x8(%eax),%eax
840022c8:	89 45 dc             	mov    %eax,-0x24(%ebp)
840022cb:	8b 45 dc             	mov    -0x24(%ebp),%eax
840022ce:	8b 55 d8             	mov    -0x28(%ebp),%edx
840022d1:	89 50 0c             	mov    %edx,0xc(%eax)
840022d4:	8b 45 d8             	mov    -0x28(%ebp),%eax
840022d7:	8b 55 dc             	mov    -0x24(%ebp),%edx
840022da:	89 50 08             	mov    %edx,0x8(%eax)
840022dd:	83 ec 0c             	sub    $0xc,%esp
840022e0:	ff 75 08             	push   0x8(%ebp)
840022e3:	e8 05 02 00 00       	call   840024ed <__malloc_unlock>
840022e8:	83 c4 10             	add    $0x10,%esp
840022eb:	8b 45 f4             	mov    -0xc(%ebp),%eax
840022ee:	83 c0 08             	add    $0x8,%eax
840022f1:	e9 64 01 00 00       	jmp    8400245a <_malloc_r+0x81d>
840022f6:	8b 45 f4             	mov    -0xc(%ebp),%eax
840022f9:	8b 40 0c             	mov    0xc(%eax),%eax
840022fc:	89 45 f4             	mov    %eax,-0xc(%ebp)
840022ff:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002302:	3b 45 ec             	cmp    -0x14(%ebp),%eax
84002305:	0f 85 d2 fe ff ff    	jne    840021dd <_malloc_r+0x5a0>
8400230b:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
8400230f:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
84002313:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002316:	83 e0 03             	and    $0x3,%eax
84002319:	85 c0                	test   %eax,%eax
8400231b:	0f 85 ae fe ff ff    	jne    840021cf <_malloc_r+0x592>
84002321:	8b 45 e0             	mov    -0x20(%ebp),%eax
84002324:	83 e0 03             	and    $0x3,%eax
84002327:	85 c0                	test   %eax,%eax
84002329:	75 19                	jne    84002344 <_malloc_r+0x707>
8400232b:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84002330:	8b 48 04             	mov    0x4(%eax),%ecx
84002333:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84002336:	f7 d0                	not    %eax
84002338:	ba 00 5e 00 84       	mov    $0x84005e00,%edx
8400233d:	21 c8                	and    %ecx,%eax
8400233f:	89 42 04             	mov    %eax,0x4(%edx)
84002342:	eb 13                	jmp    84002357 <_malloc_r+0x71a>
84002344:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
84002348:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
8400234c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8400234f:	8b 40 08             	mov    0x8(%eax),%eax
84002352:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
84002355:	74 ca                	je     84002321 <_malloc_r+0x6e4>
84002357:	d1 65 e4             	shll   -0x1c(%ebp)
8400235a:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
8400235f:	8b 40 04             	mov    0x4(%eax),%eax
84002362:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
84002365:	77 23                	ja     8400238a <_malloc_r+0x74d>
84002367:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8400236b:	74 1d                	je     8400238a <_malloc_r+0x74d>
8400236d:	eb 07                	jmp    84002376 <_malloc_r+0x739>
8400236f:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
84002373:	d1 65 e4             	shll   -0x1c(%ebp)
84002376:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
8400237b:	8b 40 04             	mov    0x4(%eax),%eax
8400237e:	23 45 e4             	and    -0x1c(%ebp),%eax
84002381:	85 c0                	test   %eax,%eax
84002383:	74 ea                	je     8400236f <_malloc_r+0x732>
84002385:	e9 23 fe ff ff       	jmp    840021ad <_malloc_r+0x570>
8400238a:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
8400238f:	8b 40 08             	mov    0x8(%eax),%eax
84002392:	8b 40 04             	mov    0x4(%eax),%eax
84002395:	83 e0 fc             	and    $0xfffffffc,%eax
84002398:	2b 45 d0             	sub    -0x30(%ebp),%eax
8400239b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8400239e:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
840023a3:	8b 40 08             	mov    0x8(%eax),%eax
840023a6:	8b 40 04             	mov    0x4(%eax),%eax
840023a9:	83 e0 fc             	and    $0xfffffffc,%eax
840023ac:	39 45 d0             	cmp    %eax,-0x30(%ebp)
840023af:	77 06                	ja     840023b7 <_malloc_r+0x77a>
840023b1:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
840023b5:	7f 53                	jg     8400240a <_malloc_r+0x7cd>
840023b7:	83 ec 08             	sub    $0x8,%esp
840023ba:	ff 75 d0             	push   -0x30(%ebp)
840023bd:	ff 75 08             	push   0x8(%ebp)
840023c0:	e8 e5 f5 ff ff       	call   840019aa <malloc_extend_top>
840023c5:	83 c4 10             	add    $0x10,%esp
840023c8:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
840023cd:	8b 40 08             	mov    0x8(%eax),%eax
840023d0:	8b 40 04             	mov    0x4(%eax),%eax
840023d3:	83 e0 fc             	and    $0xfffffffc,%eax
840023d6:	2b 45 d0             	sub    -0x30(%ebp),%eax
840023d9:	89 45 e8             	mov    %eax,-0x18(%ebp)
840023dc:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
840023e1:	8b 40 08             	mov    0x8(%eax),%eax
840023e4:	8b 40 04             	mov    0x4(%eax),%eax
840023e7:	83 e0 fc             	and    $0xfffffffc,%eax
840023ea:	39 45 d0             	cmp    %eax,-0x30(%ebp)
840023ed:	77 06                	ja     840023f5 <_malloc_r+0x7b8>
840023ef:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
840023f3:	7f 15                	jg     8400240a <_malloc_r+0x7cd>
840023f5:	83 ec 0c             	sub    $0xc,%esp
840023f8:	ff 75 08             	push   0x8(%ebp)
840023fb:	e8 ed 00 00 00       	call   840024ed <__malloc_unlock>
84002400:	83 c4 10             	add    $0x10,%esp
84002403:	b8 00 00 00 00       	mov    $0x0,%eax
84002408:	eb 50                	jmp    8400245a <_malloc_r+0x81d>
8400240a:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
8400240f:	8b 40 08             	mov    0x8(%eax),%eax
84002412:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002415:	8b 45 d0             	mov    -0x30(%ebp),%eax
84002418:	83 c8 01             	or     $0x1,%eax
8400241b:	89 c2                	mov    %eax,%edx
8400241d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002420:	89 50 04             	mov    %edx,0x4(%eax)
84002423:	ba 00 5e 00 84       	mov    $0x84005e00,%edx
84002428:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8400242b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8400242e:	01 c8                	add    %ecx,%eax
84002430:	89 42 08             	mov    %eax,0x8(%edx)
84002433:	8b 45 e8             	mov    -0x18(%ebp),%eax
84002436:	83 c8 01             	or     $0x1,%eax
84002439:	89 c2                	mov    %eax,%edx
8400243b:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84002440:	8b 40 08             	mov    0x8(%eax),%eax
84002443:	89 50 04             	mov    %edx,0x4(%eax)
84002446:	83 ec 0c             	sub    $0xc,%esp
84002449:	ff 75 08             	push   0x8(%ebp)
8400244c:	e8 9c 00 00 00       	call   840024ed <__malloc_unlock>
84002451:	83 c4 10             	add    $0x10,%esp
84002454:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002457:	83 c0 08             	add    $0x8,%eax
8400245a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8400245d:	c9                   	leave  
8400245e:	c3                   	ret    

8400245f <memset>:
8400245f:	55                   	push   %ebp
84002460:	89 e5                	mov    %esp,%ebp
84002462:	57                   	push   %edi
84002463:	8b 7d 08             	mov    0x8(%ebp),%edi
84002466:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
8400246a:	8b 4d 10             	mov    0x10(%ebp),%ecx
8400246d:	fc                   	cld    
8400246e:	83 f9 10             	cmp    $0x10,%ecx
84002471:	76 69                	jbe    840024dc <memset+0x7d>
84002473:	f7 c7 07 00 00 00    	test   $0x7,%edi
84002479:	74 4c                	je     840024c7 <memset+0x68>
8400247b:	88 07                	mov    %al,(%edi)
8400247d:	47                   	inc    %edi
8400247e:	49                   	dec    %ecx
8400247f:	f7 c7 07 00 00 00    	test   $0x7,%edi
84002485:	74 40                	je     840024c7 <memset+0x68>
84002487:	88 07                	mov    %al,(%edi)
84002489:	47                   	inc    %edi
8400248a:	49                   	dec    %ecx
8400248b:	f7 c7 07 00 00 00    	test   $0x7,%edi
84002491:	74 34                	je     840024c7 <memset+0x68>
84002493:	88 07                	mov    %al,(%edi)
84002495:	47                   	inc    %edi
84002496:	49                   	dec    %ecx
84002497:	f7 c7 07 00 00 00    	test   $0x7,%edi
8400249d:	74 28                	je     840024c7 <memset+0x68>
8400249f:	88 07                	mov    %al,(%edi)
840024a1:	47                   	inc    %edi
840024a2:	49                   	dec    %ecx
840024a3:	f7 c7 07 00 00 00    	test   $0x7,%edi
840024a9:	74 1c                	je     840024c7 <memset+0x68>
840024ab:	88 07                	mov    %al,(%edi)
840024ad:	47                   	inc    %edi
840024ae:	49                   	dec    %ecx
840024af:	f7 c7 07 00 00 00    	test   $0x7,%edi
840024b5:	74 10                	je     840024c7 <memset+0x68>
840024b7:	88 07                	mov    %al,(%edi)
840024b9:	47                   	inc    %edi
840024ba:	49                   	dec    %ecx
840024bb:	f7 c7 07 00 00 00    	test   $0x7,%edi
840024c1:	74 04                	je     840024c7 <memset+0x68>
840024c3:	88 07                	mov    %al,(%edi)
840024c5:	47                   	inc    %edi
840024c6:	49                   	dec    %ecx
840024c7:	88 c4                	mov    %al,%ah
840024c9:	89 c2                	mov    %eax,%edx
840024cb:	c1 e2 10             	shl    $0x10,%edx
840024ce:	09 d0                	or     %edx,%eax
840024d0:	89 ca                	mov    %ecx,%edx
840024d2:	c1 e9 02             	shr    $0x2,%ecx
840024d5:	83 e2 03             	and    $0x3,%edx
840024d8:	f3 ab                	rep stos %eax,%es:(%edi)
840024da:	89 d1                	mov    %edx,%ecx
840024dc:	f3 aa                	rep stos %al,%es:(%edi)
840024de:	8b 45 08             	mov    0x8(%ebp),%eax
840024e1:	8d 65 fc             	lea    -0x4(%ebp),%esp
840024e4:	5f                   	pop    %edi
840024e5:	c9                   	leave  
840024e6:	c3                   	ret    

840024e7 <__malloc_lock>:
840024e7:	55                   	push   %ebp
840024e8:	89 e5                	mov    %esp,%ebp
840024ea:	90                   	nop
840024eb:	5d                   	pop    %ebp
840024ec:	c3                   	ret    

840024ed <__malloc_unlock>:
840024ed:	55                   	push   %ebp
840024ee:	89 e5                	mov    %esp,%ebp
840024f0:	90                   	nop
840024f1:	5d                   	pop    %ebp
840024f2:	c3                   	ret    

840024f3 <_iprintf_r>:
840024f3:	55                   	push   %ebp
840024f4:	89 e5                	mov    %esp,%ebp
840024f6:	83 ec 18             	sub    $0x18,%esp
840024f9:	8d 45 10             	lea    0x10(%ebp),%eax
840024fc:	89 45 f0             	mov    %eax,-0x10(%ebp)
840024ff:	8b 55 f0             	mov    -0x10(%ebp),%edx
84002502:	8b 45 08             	mov    0x8(%ebp),%eax
84002505:	8b 40 08             	mov    0x8(%eax),%eax
84002508:	52                   	push   %edx
84002509:	ff 75 0c             	push   0xc(%ebp)
8400250c:	50                   	push   %eax
8400250d:	ff 75 08             	push   0x8(%ebp)
84002510:	e8 9f 0b 00 00       	call   840030b4 <_vfiprintf_r>
84002515:	83 c4 10             	add    $0x10,%esp
84002518:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400251b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400251e:	c9                   	leave  
8400251f:	c3                   	ret    

84002520 <iprintf>:
84002520:	55                   	push   %ebp
84002521:	89 e5                	mov    %esp,%ebp
84002523:	83 ec 18             	sub    $0x18,%esp
84002526:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
8400252b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400252e:	8d 45 0c             	lea    0xc(%ebp),%eax
84002531:	89 45 ec             	mov    %eax,-0x14(%ebp)
84002534:	8b 55 ec             	mov    -0x14(%ebp),%edx
84002537:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400253a:	8b 40 08             	mov    0x8(%eax),%eax
8400253d:	52                   	push   %edx
8400253e:	ff 75 08             	push   0x8(%ebp)
84002541:	50                   	push   %eax
84002542:	ff 75 f4             	push   -0xc(%ebp)
84002545:	e8 6a 0b 00 00       	call   840030b4 <_vfiprintf_r>
8400254a:	83 c4 10             	add    $0x10,%esp
8400254d:	89 45 f0             	mov    %eax,-0x10(%ebp)
84002550:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002553:	c9                   	leave  
84002554:	c3                   	ret    

84002555 <srand>:
84002555:	55                   	push   %ebp
84002556:	89 e5                	mov    %esp,%ebp
84002558:	83 ec 10             	sub    $0x10,%esp
8400255b:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84002560:	89 45 fc             	mov    %eax,-0x4(%ebp)
84002563:	8b 45 08             	mov    0x8(%ebp),%eax
84002566:	ba 00 00 00 00       	mov    $0x0,%edx
8400256b:	8b 4d fc             	mov    -0x4(%ebp),%ecx
8400256e:	89 81 a4 00 00 00    	mov    %eax,0xa4(%ecx)
84002574:	89 91 a8 00 00 00    	mov    %edx,0xa8(%ecx)
8400257a:	90                   	nop
8400257b:	c9                   	leave  
8400257c:	c3                   	ret    

8400257d <rand>:
8400257d:	55                   	push   %ebp
8400257e:	89 e5                	mov    %esp,%ebp
84002580:	53                   	push   %ebx
84002581:	83 ec 14             	sub    $0x14,%esp
84002584:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84002589:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400258c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400258f:	8b 90 a8 00 00 00    	mov    0xa8(%eax),%edx
84002595:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax
8400259b:	69 da 2d 7f 95 4c    	imul   $0x4c957f2d,%edx,%ebx
840025a1:	69 c8 2d f4 51 58    	imul   $0x5851f42d,%eax,%ecx
840025a7:	01 d9                	add    %ebx,%ecx
840025a9:	bb 2d 7f 95 4c       	mov    $0x4c957f2d,%ebx
840025ae:	f7 e3                	mul    %ebx
840025b0:	01 d1                	add    %edx,%ecx
840025b2:	89 ca                	mov    %ecx,%edx
840025b4:	83 c0 01             	add    $0x1,%eax
840025b7:	83 d2 00             	adc    $0x0,%edx
840025ba:	8b 4d f4             	mov    -0xc(%ebp),%ecx
840025bd:	89 81 a4 00 00 00    	mov    %eax,0xa4(%ecx)
840025c3:	89 91 a8 00 00 00    	mov    %edx,0xa8(%ecx)
840025c9:	8b 45 f4             	mov    -0xc(%ebp),%eax
840025cc:	8b 90 a8 00 00 00    	mov    0xa8(%eax),%edx
840025d2:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax
840025d8:	89 d0                	mov    %edx,%eax
840025da:	31 d2                	xor    %edx,%edx
840025dc:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
840025e1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
840025e4:	c9                   	leave  
840025e5:	c3                   	ret    

840025e6 <_sbrk_r>:
840025e6:	55                   	push   %ebp
840025e7:	89 e5                	mov    %esp,%ebp
840025e9:	83 ec 18             	sub    $0x18,%esp
840025ec:	c7 05 10 64 00 84 00 	movl   $0x0,0x84006410
840025f3:	00 00 00 
840025f6:	83 ec 0c             	sub    $0xc,%esp
840025f9:	ff 75 0c             	push   0xc(%ebp)
840025fc:	e8 80 dc ff ff       	call   84000281 <sbrk>
84002601:	83 c4 10             	add    $0x10,%esp
84002604:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002607:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8400260b:	75 14                	jne    84002621 <_sbrk_r+0x3b>
8400260d:	a1 10 64 00 84       	mov    0x84006410,%eax
84002612:	85 c0                	test   %eax,%eax
84002614:	74 0b                	je     84002621 <_sbrk_r+0x3b>
84002616:	8b 15 10 64 00 84    	mov    0x84006410,%edx
8400261c:	8b 45 08             	mov    0x8(%ebp),%eax
8400261f:	89 10                	mov    %edx,(%eax)
84002621:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002624:	c9                   	leave  
84002625:	c3                   	ret    

84002626 <setvbuf>:
84002626:	55                   	push   %ebp
84002627:	89 e5                	mov    %esp,%ebp
84002629:	57                   	push   %edi
8400262a:	56                   	push   %esi
8400262b:	53                   	push   %ebx
8400262c:	83 ec 2c             	sub    $0x2c,%esp
8400262f:	8b 5d 08             	mov    0x8(%ebp),%ebx
84002632:	8b 7d 10             	mov    0x10(%ebp),%edi
84002635:	8b 75 14             	mov    0x14(%ebp),%esi
84002638:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8400263f:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84002644:	89 45 e0             	mov    %eax,-0x20(%ebp)
84002647:	8b 45 e0             	mov    -0x20(%ebp),%eax
8400264a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8400264d:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
84002651:	74 18                	je     8400266b <setvbuf+0x45>
84002653:	8b 45 dc             	mov    -0x24(%ebp),%eax
84002656:	8b 40 38             	mov    0x38(%eax),%eax
84002659:	85 c0                	test   %eax,%eax
8400265b:	75 0e                	jne    8400266b <setvbuf+0x45>
8400265d:	83 ec 0c             	sub    $0xc,%esp
84002660:	ff 75 dc             	push   -0x24(%ebp)
84002663:	e8 a1 eb ff ff       	call   84001209 <__sinit>
84002668:	83 c4 10             	add    $0x10,%esp
8400266b:	83 ff 02             	cmp    $0x2,%edi
8400266e:	74 19                	je     84002689 <setvbuf+0x63>
84002670:	85 ff                	test   %edi,%edi
84002672:	74 05                	je     84002679 <setvbuf+0x53>
84002674:	83 ff 01             	cmp    $0x1,%edi
84002677:	75 06                	jne    8400267f <setvbuf+0x59>
84002679:	89 f0                	mov    %esi,%eax
8400267b:	85 c0                	test   %eax,%eax
8400267d:	79 0a                	jns    84002689 <setvbuf+0x63>
8400267f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84002684:	e9 a1 01 00 00       	jmp    8400282a <setvbuf+0x204>
84002689:	83 ec 08             	sub    $0x8,%esp
8400268c:	53                   	push   %ebx
8400268d:	ff 75 e0             	push   -0x20(%ebp)
84002690:	e8 ee e7 ff ff       	call   84000e83 <_fflush_r>
84002695:	83 c4 10             	add    $0x10,%esp
84002698:	8b 43 30             	mov    0x30(%ebx),%eax
8400269b:	85 c0                	test   %eax,%eax
8400269d:	74 23                	je     840026c2 <setvbuf+0x9c>
8400269f:	8b 53 30             	mov    0x30(%ebx),%edx
840026a2:	8d 43 40             	lea    0x40(%ebx),%eax
840026a5:	39 c2                	cmp    %eax,%edx
840026a7:	74 12                	je     840026bb <setvbuf+0x95>
840026a9:	8b 43 30             	mov    0x30(%ebx),%eax
840026ac:	83 ec 08             	sub    $0x8,%esp
840026af:	50                   	push   %eax
840026b0:	ff 75 e0             	push   -0x20(%ebp)
840026b3:	e8 5e ec ff ff       	call   84001316 <_free_r>
840026b8:	83 c4 10             	add    $0x10,%esp
840026bb:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
840026c2:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
840026c9:	8b 43 18             	mov    0x18(%ebx),%eax
840026cc:	89 43 04             	mov    %eax,0x4(%ebx)
840026cf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840026d3:	98                   	cwtl   
840026d4:	25 80 00 00 00       	and    $0x80,%eax
840026d9:	85 c0                	test   %eax,%eax
840026db:	74 12                	je     840026ef <setvbuf+0xc9>
840026dd:	8b 43 10             	mov    0x10(%ebx),%eax
840026e0:	83 ec 08             	sub    $0x8,%esp
840026e3:	50                   	push   %eax
840026e4:	ff 75 e0             	push   -0x20(%ebp)
840026e7:	e8 2a ec ff ff       	call   84001316 <_free_r>
840026ec:	83 c4 10             	add    $0x10,%esp
840026ef:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840026f3:	66 25 5c f3          	and    $0xf35c,%ax
840026f7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840026fb:	83 ff 02             	cmp    $0x2,%edi
840026fe:	74 6f                	je     8400276f <setvbuf+0x149>
84002700:	8d 45 d4             	lea    -0x2c(%ebp),%eax
84002703:	50                   	push   %eax
84002704:	8d 45 d8             	lea    -0x28(%ebp),%eax
84002707:	50                   	push   %eax
84002708:	53                   	push   %ebx
84002709:	ff 75 e0             	push   -0x20(%ebp)
8400270c:	e8 01 07 00 00       	call   84002e12 <__swhatbuf_r>
84002711:	83 c4 10             	add    $0x10,%esp
84002714:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
84002718:	09 d0                	or     %edx,%eax
8400271a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8400271e:	85 f6                	test   %esi,%esi
84002720:	75 0a                	jne    8400272c <setvbuf+0x106>
84002722:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
84002729:	8b 75 d8             	mov    -0x28(%ebp),%esi
8400272c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
84002730:	75 73                	jne    840027a5 <setvbuf+0x17f>
84002732:	83 ec 0c             	sub    $0xc,%esp
84002735:	56                   	push   %esi
84002736:	e8 36 f2 ff ff       	call   84001971 <malloc>
8400273b:	83 c4 10             	add    $0x10,%esp
8400273e:	89 45 0c             	mov    %eax,0xc(%ebp)
84002741:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
84002745:	75 20                	jne    84002767 <setvbuf+0x141>
84002747:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
8400274e:	8b 45 d8             	mov    -0x28(%ebp),%eax
84002751:	39 c6                	cmp    %eax,%esi
84002753:	74 12                	je     84002767 <setvbuf+0x141>
84002755:	8b 75 d8             	mov    -0x28(%ebp),%esi
84002758:	83 ec 0c             	sub    $0xc,%esp
8400275b:	56                   	push   %esi
8400275c:	e8 10 f2 ff ff       	call   84001971 <malloc>
84002761:	83 c4 10             	add    $0x10,%esp
84002764:	89 45 0c             	mov    %eax,0xc(%ebp)
84002767:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8400276b:	75 2e                	jne    8400279b <setvbuf+0x175>
8400276d:	eb 01                	jmp    84002770 <setvbuf+0x14a>
8400276f:	90                   	nop
84002770:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002774:	83 c8 02             	or     $0x2,%eax
84002777:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8400277b:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
84002782:	8d 43 43             	lea    0x43(%ebx),%eax
84002785:	89 03                	mov    %eax,(%ebx)
84002787:	8b 03                	mov    (%ebx),%eax
84002789:	89 43 10             	mov    %eax,0x10(%ebx)
8400278c:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
84002793:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84002796:	e9 8f 00 00 00       	jmp    8400282a <setvbuf+0x204>
8400279b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400279f:	0c 80                	or     $0x80,%al
840027a1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840027a5:	8b 45 e0             	mov    -0x20(%ebp),%eax
840027a8:	8b 40 38             	mov    0x38(%eax),%eax
840027ab:	85 c0                	test   %eax,%eax
840027ad:	75 0e                	jne    840027bd <setvbuf+0x197>
840027af:	83 ec 0c             	sub    $0xc,%esp
840027b2:	ff 75 e0             	push   -0x20(%ebp)
840027b5:	e8 4f ea ff ff       	call   84001209 <__sinit>
840027ba:	83 c4 10             	add    $0x10,%esp
840027bd:	8b 45 d8             	mov    -0x28(%ebp),%eax
840027c0:	39 c6                	cmp    %eax,%esi
840027c2:	74 0b                	je     840027cf <setvbuf+0x1a9>
840027c4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840027c8:	80 cc 08             	or     $0x8,%ah
840027cb:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840027cf:	83 ff 01             	cmp    $0x1,%edi
840027d2:	75 0b                	jne    840027df <setvbuf+0x1b9>
840027d4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840027d8:	83 c8 01             	or     $0x1,%eax
840027db:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840027df:	8b 45 0c             	mov    0xc(%ebp),%eax
840027e2:	89 03                	mov    %eax,(%ebx)
840027e4:	8b 03                	mov    (%ebx),%eax
840027e6:	89 43 10             	mov    %eax,0x10(%ebx)
840027e9:	89 f0                	mov    %esi,%eax
840027eb:	89 43 14             	mov    %eax,0x14(%ebx)
840027ee:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840027f2:	98                   	cwtl   
840027f3:	83 e0 08             	and    $0x8,%eax
840027f6:	85 c0                	test   %eax,%eax
840027f8:	74 24                	je     8400281e <setvbuf+0x1f8>
840027fa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840027fe:	98                   	cwtl   
840027ff:	83 e0 01             	and    $0x1,%eax
84002802:	85 c0                	test   %eax,%eax
84002804:	74 11                	je     84002817 <setvbuf+0x1f1>
84002806:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8400280d:	8b 43 14             	mov    0x14(%ebx),%eax
84002810:	f7 d8                	neg    %eax
84002812:	89 43 18             	mov    %eax,0x18(%ebx)
84002815:	eb 0e                	jmp    84002825 <setvbuf+0x1ff>
84002817:	89 f0                	mov    %esi,%eax
84002819:	89 43 08             	mov    %eax,0x8(%ebx)
8400281c:	eb 07                	jmp    84002825 <setvbuf+0x1ff>
8400281e:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
84002825:	b8 00 00 00 00       	mov    $0x0,%eax
8400282a:	8d 65 f4             	lea    -0xc(%ebp),%esp
8400282d:	5b                   	pop    %ebx
8400282e:	5e                   	pop    %esi
8400282f:	5f                   	pop    %edi
84002830:	5d                   	pop    %ebp
84002831:	c3                   	ret    

84002832 <__sread>:
84002832:	55                   	push   %ebp
84002833:	89 e5                	mov    %esp,%ebp
84002835:	56                   	push   %esi
84002836:	53                   	push   %ebx
84002837:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8400283a:	8b 55 14             	mov    0x14(%ebp),%edx
8400283d:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
84002841:	98                   	cwtl   
84002842:	52                   	push   %edx
84002843:	ff 75 10             	push   0x10(%ebp)
84002846:	50                   	push   %eax
84002847:	ff 75 08             	push   0x8(%ebp)
8400284a:	e8 a5 11 00 00       	call   840039f4 <_read_r>
8400284f:	83 c4 10             	add    $0x10,%esp
84002852:	89 c6                	mov    %eax,%esi
84002854:	85 f6                	test   %esi,%esi
84002856:	78 0a                	js     84002862 <__sread+0x30>
84002858:	8b 43 50             	mov    0x50(%ebx),%eax
8400285b:	01 f0                	add    %esi,%eax
8400285d:	89 43 50             	mov    %eax,0x50(%ebx)
84002860:	eb 0b                	jmp    8400286d <__sread+0x3b>
84002862:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002866:	80 e4 ef             	and    $0xef,%ah
84002869:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8400286d:	89 f0                	mov    %esi,%eax
8400286f:	8d 65 f8             	lea    -0x8(%ebp),%esp
84002872:	5b                   	pop    %ebx
84002873:	5e                   	pop    %esi
84002874:	5d                   	pop    %ebp
84002875:	c3                   	ret    

84002876 <__seofread>:
84002876:	55                   	push   %ebp
84002877:	89 e5                	mov    %esp,%ebp
84002879:	b8 00 00 00 00       	mov    $0x0,%eax
8400287e:	5d                   	pop    %ebp
8400287f:	c3                   	ret    

84002880 <__swrite>:
84002880:	55                   	push   %ebp
84002881:	89 e5                	mov    %esp,%ebp
84002883:	53                   	push   %ebx
84002884:	83 ec 14             	sub    $0x14,%esp
84002887:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8400288a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400288e:	98                   	cwtl   
8400288f:	25 00 01 00 00       	and    $0x100,%eax
84002894:	85 c0                	test   %eax,%eax
84002896:	74 15                	je     840028ad <__swrite+0x2d>
84002898:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8400289c:	98                   	cwtl   
8400289d:	6a 02                	push   $0x2
8400289f:	6a 00                	push   $0x0
840028a1:	50                   	push   %eax
840028a2:	ff 75 08             	push   0x8(%ebp)
840028a5:	e8 35 04 00 00       	call   84002cdf <_lseek_r>
840028aa:	83 c4 10             	add    $0x10,%esp
840028ad:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840028b1:	80 e4 ef             	and    $0xef,%ah
840028b4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840028b8:	8b 55 14             	mov    0x14(%ebp),%edx
840028bb:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
840028bf:	98                   	cwtl   
840028c0:	52                   	push   %edx
840028c1:	ff 75 10             	push   0x10(%ebp)
840028c4:	50                   	push   %eax
840028c5:	ff 75 08             	push   0x8(%ebp)
840028c8:	e8 7d 00 00 00       	call   8400294a <_write_r>
840028cd:	83 c4 10             	add    $0x10,%esp
840028d0:	89 45 f4             	mov    %eax,-0xc(%ebp)
840028d3:	8b 45 f4             	mov    -0xc(%ebp),%eax
840028d6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
840028d9:	c9                   	leave  
840028da:	c3                   	ret    

840028db <__sseek>:
840028db:	55                   	push   %ebp
840028dc:	89 e5                	mov    %esp,%ebp
840028de:	56                   	push   %esi
840028df:	53                   	push   %ebx
840028e0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
840028e3:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
840028e7:	98                   	cwtl   
840028e8:	ff 75 14             	push   0x14(%ebp)
840028eb:	ff 75 10             	push   0x10(%ebp)
840028ee:	50                   	push   %eax
840028ef:	ff 75 08             	push   0x8(%ebp)
840028f2:	e8 e8 03 00 00       	call   84002cdf <_lseek_r>
840028f7:	83 c4 10             	add    $0x10,%esp
840028fa:	89 c6                	mov    %eax,%esi
840028fc:	83 fe ff             	cmp    $0xffffffff,%esi
840028ff:	75 0d                	jne    8400290e <__sseek+0x33>
84002901:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002905:	80 e4 ef             	and    $0xef,%ah
84002908:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8400290c:	eb 0e                	jmp    8400291c <__sseek+0x41>
8400290e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002912:	80 cc 10             	or     $0x10,%ah
84002915:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002919:	89 73 50             	mov    %esi,0x50(%ebx)
8400291c:	89 f0                	mov    %esi,%eax
8400291e:	8d 65 f8             	lea    -0x8(%ebp),%esp
84002921:	5b                   	pop    %ebx
84002922:	5e                   	pop    %esi
84002923:	5d                   	pop    %ebp
84002924:	c3                   	ret    

84002925 <__sclose>:
84002925:	55                   	push   %ebp
84002926:	89 e5                	mov    %esp,%ebp
84002928:	83 ec 18             	sub    $0x18,%esp
8400292b:	8b 45 0c             	mov    0xc(%ebp),%eax
8400292e:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002931:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002934:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
84002938:	98                   	cwtl   
84002939:	83 ec 08             	sub    $0x8,%esp
8400293c:	50                   	push   %eax
8400293d:	ff 75 08             	push   0x8(%ebp)
84002940:	e8 60 01 00 00       	call   84002aa5 <_close_r>
84002945:	83 c4 10             	add    $0x10,%esp
84002948:	c9                   	leave  
84002949:	c3                   	ret    

8400294a <_write_r>:
8400294a:	55                   	push   %ebp
8400294b:	89 e5                	mov    %esp,%ebp
8400294d:	83 ec 18             	sub    $0x18,%esp
84002950:	c7 05 10 64 00 84 00 	movl   $0x0,0x84006410
84002957:	00 00 00 
8400295a:	83 ec 04             	sub    $0x4,%esp
8400295d:	ff 75 14             	push   0x14(%ebp)
84002960:	ff 75 10             	push   0x10(%ebp)
84002963:	ff 75 0c             	push   0xc(%ebp)
84002966:	e8 53 d8 ff ff       	call   840001be <write>
8400296b:	83 c4 10             	add    $0x10,%esp
8400296e:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002971:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84002975:	75 14                	jne    8400298b <_write_r+0x41>
84002977:	a1 10 64 00 84       	mov    0x84006410,%eax
8400297c:	85 c0                	test   %eax,%eax
8400297e:	74 0b                	je     8400298b <_write_r+0x41>
84002980:	8b 15 10 64 00 84    	mov    0x84006410,%edx
84002986:	8b 45 08             	mov    0x8(%ebp),%eax
84002989:	89 10                	mov    %edx,(%eax)
8400298b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400298e:	c9                   	leave  
8400298f:	c3                   	ret    

84002990 <__call_exitprocs>:
84002990:	55                   	push   %ebp
84002991:	89 e5                	mov    %esp,%ebp
84002993:	57                   	push   %edi
84002994:	56                   	push   %esi
84002995:	53                   	push   %ebx
84002996:	83 ec 1c             	sub    $0x1c,%esp
84002999:	a1 38 56 00 84       	mov    0x84005638,%eax
8400299e:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
840029a4:	a1 38 56 00 84       	mov    0x84005638,%eax
840029a9:	05 48 01 00 00       	add    $0x148,%eax
840029ae:	89 45 e4             	mov    %eax,-0x1c(%ebp)
840029b1:	90                   	nop
840029b2:	85 db                	test   %ebx,%ebx
840029b4:	0f 84 e1 00 00 00    	je     84002a9b <__call_exitprocs+0x10b>
840029ba:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
840029c0:	8b 43 04             	mov    0x4(%ebx),%eax
840029c3:	8d 70 ff             	lea    -0x1(%eax),%esi
840029c6:	e9 c6 00 00 00       	jmp    84002a91 <__call_exitprocs+0x101>
840029cb:	b8 01 00 00 00       	mov    $0x1,%eax
840029d0:	89 f1                	mov    %esi,%ecx
840029d2:	d3 e0                	shl    %cl,%eax
840029d4:	89 45 e0             	mov    %eax,-0x20(%ebp)
840029d7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
840029db:	74 17                	je     840029f4 <__call_exitprocs+0x64>
840029dd:	85 ff                	test   %edi,%edi
840029df:	0f 84 a5 00 00 00    	je     84002a8a <__call_exitprocs+0xfa>
840029e5:	8d 46 20             	lea    0x20(%esi),%eax
840029e8:	8b 04 87             	mov    (%edi,%eax,4),%eax
840029eb:	39 45 0c             	cmp    %eax,0xc(%ebp)
840029ee:	0f 85 96 00 00 00    	jne    84002a8a <__call_exitprocs+0xfa>
840029f4:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
840029f8:	89 45 dc             	mov    %eax,-0x24(%ebp)
840029fb:	8b 43 04             	mov    0x4(%ebx),%eax
840029fe:	83 e8 01             	sub    $0x1,%eax
84002a01:	39 c6                	cmp    %eax,%esi
84002a03:	75 0b                	jne    84002a10 <__call_exitprocs+0x80>
84002a05:	8b 43 04             	mov    0x4(%ebx),%eax
84002a08:	83 e8 01             	sub    $0x1,%eax
84002a0b:	89 43 04             	mov    %eax,0x4(%ebx)
84002a0e:	eb 08                	jmp    84002a18 <__call_exitprocs+0x88>
84002a10:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
84002a17:	00 
84002a18:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
84002a1c:	74 6f                	je     84002a8d <__call_exitprocs+0xfd>
84002a1e:	8b 43 04             	mov    0x4(%ebx),%eax
84002a21:	89 45 d8             	mov    %eax,-0x28(%ebp)
84002a24:	85 ff                	test   %edi,%edi
84002a26:	74 0f                	je     84002a37 <__call_exitprocs+0xa7>
84002a28:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
84002a2e:	8b 45 e0             	mov    -0x20(%ebp),%eax
84002a31:	21 d0                	and    %edx,%eax
84002a33:	85 c0                	test   %eax,%eax
84002a35:	75 07                	jne    84002a3e <__call_exitprocs+0xae>
84002a37:	8b 45 dc             	mov    -0x24(%ebp),%eax
84002a3a:	ff d0                	call   *%eax
84002a3c:	eb 32                	jmp    84002a70 <__call_exitprocs+0xe0>
84002a3e:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
84002a44:	8b 45 e0             	mov    -0x20(%ebp),%eax
84002a47:	21 d0                	and    %edx,%eax
84002a49:	85 c0                	test   %eax,%eax
84002a4b:	75 14                	jne    84002a61 <__call_exitprocs+0xd1>
84002a4d:	8b 04 b7             	mov    (%edi,%esi,4),%eax
84002a50:	83 ec 08             	sub    $0x8,%esp
84002a53:	50                   	push   %eax
84002a54:	ff 75 08             	push   0x8(%ebp)
84002a57:	8b 45 dc             	mov    -0x24(%ebp),%eax
84002a5a:	ff d0                	call   *%eax
84002a5c:	83 c4 10             	add    $0x10,%esp
84002a5f:	eb 0f                	jmp    84002a70 <__call_exitprocs+0xe0>
84002a61:	8b 04 b7             	mov    (%edi,%esi,4),%eax
84002a64:	83 ec 0c             	sub    $0xc,%esp
84002a67:	50                   	push   %eax
84002a68:	8b 45 dc             	mov    -0x24(%ebp),%eax
84002a6b:	ff d0                	call   *%eax
84002a6d:	83 c4 10             	add    $0x10,%esp
84002a70:	8b 43 04             	mov    0x4(%ebx),%eax
84002a73:	39 45 d8             	cmp    %eax,-0x28(%ebp)
84002a76:	0f 85 1d ff ff ff    	jne    84002999 <__call_exitprocs+0x9>
84002a7c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84002a7f:	8b 00                	mov    (%eax),%eax
84002a81:	39 c3                	cmp    %eax,%ebx
84002a83:	74 09                	je     84002a8e <__call_exitprocs+0xfe>
84002a85:	e9 0f ff ff ff       	jmp    84002999 <__call_exitprocs+0x9>
84002a8a:	90                   	nop
84002a8b:	eb 01                	jmp    84002a8e <__call_exitprocs+0xfe>
84002a8d:	90                   	nop
84002a8e:	83 ee 01             	sub    $0x1,%esi
84002a91:	85 f6                	test   %esi,%esi
84002a93:	0f 89 32 ff ff ff    	jns    840029cb <__call_exitprocs+0x3b>
84002a99:	eb 01                	jmp    84002a9c <__call_exitprocs+0x10c>
84002a9b:	90                   	nop
84002a9c:	90                   	nop
84002a9d:	8d 65 f4             	lea    -0xc(%ebp),%esp
84002aa0:	5b                   	pop    %ebx
84002aa1:	5e                   	pop    %esi
84002aa2:	5f                   	pop    %edi
84002aa3:	5d                   	pop    %ebp
84002aa4:	c3                   	ret    

84002aa5 <_close_r>:
84002aa5:	55                   	push   %ebp
84002aa6:	89 e5                	mov    %esp,%ebp
84002aa8:	83 ec 18             	sub    $0x18,%esp
84002aab:	c7 05 10 64 00 84 00 	movl   $0x0,0x84006410
84002ab2:	00 00 00 
84002ab5:	83 ec 0c             	sub    $0xc,%esp
84002ab8:	ff 75 0c             	push   0xc(%ebp)
84002abb:	e8 2b d7 ff ff       	call   840001eb <close>
84002ac0:	83 c4 10             	add    $0x10,%esp
84002ac3:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002ac6:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84002aca:	75 14                	jne    84002ae0 <_close_r+0x3b>
84002acc:	a1 10 64 00 84       	mov    0x84006410,%eax
84002ad1:	85 c0                	test   %eax,%eax
84002ad3:	74 0b                	je     84002ae0 <_close_r+0x3b>
84002ad5:	8b 15 10 64 00 84    	mov    0x84006410,%edx
84002adb:	8b 45 08             	mov    0x8(%ebp),%eax
84002ade:	89 10                	mov    %edx,(%eax)
84002ae0:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002ae3:	c9                   	leave  
84002ae4:	c3                   	ret    

84002ae5 <_fclose_r>:
84002ae5:	55                   	push   %ebp
84002ae6:	89 e5                	mov    %esp,%ebp
84002ae8:	53                   	push   %ebx
84002ae9:	83 ec 14             	sub    $0x14,%esp
84002aec:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84002aef:	85 db                	test   %ebx,%ebx
84002af1:	75 0a                	jne    84002afd <_fclose_r+0x18>
84002af3:	b8 00 00 00 00       	mov    $0x0,%eax
84002af8:	e9 ea 00 00 00       	jmp    84002be7 <_fclose_r+0x102>
84002afd:	8b 45 08             	mov    0x8(%ebp),%eax
84002b00:	89 45 f0             	mov    %eax,-0x10(%ebp)
84002b03:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
84002b07:	74 18                	je     84002b21 <_fclose_r+0x3c>
84002b09:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002b0c:	8b 40 38             	mov    0x38(%eax),%eax
84002b0f:	85 c0                	test   %eax,%eax
84002b11:	75 0e                	jne    84002b21 <_fclose_r+0x3c>
84002b13:	83 ec 0c             	sub    $0xc,%esp
84002b16:	ff 75 f0             	push   -0x10(%ebp)
84002b19:	e8 eb e6 ff ff       	call   84001209 <__sinit>
84002b1e:	83 c4 10             	add    $0x10,%esp
84002b21:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002b25:	66 85 c0             	test   %ax,%ax
84002b28:	75 0a                	jne    84002b34 <_fclose_r+0x4f>
84002b2a:	b8 00 00 00 00       	mov    $0x0,%eax
84002b2f:	e9 b3 00 00 00       	jmp    84002be7 <_fclose_r+0x102>
84002b34:	83 ec 08             	sub    $0x8,%esp
84002b37:	53                   	push   %ebx
84002b38:	ff 75 08             	push   0x8(%ebp)
84002b3b:	e8 1d e1 ff ff       	call   84000c5d <__sflush_r>
84002b40:	83 c4 10             	add    $0x10,%esp
84002b43:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002b46:	8b 43 2c             	mov    0x2c(%ebx),%eax
84002b49:	85 c0                	test   %eax,%eax
84002b4b:	74 1d                	je     84002b6a <_fclose_r+0x85>
84002b4d:	8b 43 2c             	mov    0x2c(%ebx),%eax
84002b50:	8b 53 1c             	mov    0x1c(%ebx),%edx
84002b53:	83 ec 08             	sub    $0x8,%esp
84002b56:	52                   	push   %edx
84002b57:	ff 75 08             	push   0x8(%ebp)
84002b5a:	ff d0                	call   *%eax
84002b5c:	83 c4 10             	add    $0x10,%esp
84002b5f:	85 c0                	test   %eax,%eax
84002b61:	79 07                	jns    84002b6a <_fclose_r+0x85>
84002b63:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
84002b6a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002b6e:	98                   	cwtl   
84002b6f:	25 80 00 00 00       	and    $0x80,%eax
84002b74:	85 c0                	test   %eax,%eax
84002b76:	74 12                	je     84002b8a <_fclose_r+0xa5>
84002b78:	8b 43 10             	mov    0x10(%ebx),%eax
84002b7b:	83 ec 08             	sub    $0x8,%esp
84002b7e:	50                   	push   %eax
84002b7f:	ff 75 08             	push   0x8(%ebp)
84002b82:	e8 8f e7 ff ff       	call   84001316 <_free_r>
84002b87:	83 c4 10             	add    $0x10,%esp
84002b8a:	8b 43 30             	mov    0x30(%ebx),%eax
84002b8d:	85 c0                	test   %eax,%eax
84002b8f:	74 23                	je     84002bb4 <_fclose_r+0xcf>
84002b91:	8b 53 30             	mov    0x30(%ebx),%edx
84002b94:	8d 43 40             	lea    0x40(%ebx),%eax
84002b97:	39 c2                	cmp    %eax,%edx
84002b99:	74 12                	je     84002bad <_fclose_r+0xc8>
84002b9b:	8b 43 30             	mov    0x30(%ebx),%eax
84002b9e:	83 ec 08             	sub    $0x8,%esp
84002ba1:	50                   	push   %eax
84002ba2:	ff 75 08             	push   0x8(%ebp)
84002ba5:	e8 6c e7 ff ff       	call   84001316 <_free_r>
84002baa:	83 c4 10             	add    $0x10,%esp
84002bad:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
84002bb4:	8b 43 44             	mov    0x44(%ebx),%eax
84002bb7:	85 c0                	test   %eax,%eax
84002bb9:	74 19                	je     84002bd4 <_fclose_r+0xef>
84002bbb:	8b 43 44             	mov    0x44(%ebx),%eax
84002bbe:	83 ec 08             	sub    $0x8,%esp
84002bc1:	50                   	push   %eax
84002bc2:	ff 75 08             	push   0x8(%ebp)
84002bc5:	e8 4c e7 ff ff       	call   84001316 <_free_r>
84002bca:	83 c4 10             	add    $0x10,%esp
84002bcd:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
84002bd4:	e8 c9 e6 ff ff       	call   840012a2 <__sfp_lock_acquire>
84002bd9:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
84002bdf:	e8 c4 e6 ff ff       	call   840012a8 <__sfp_lock_release>
84002be4:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002be7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84002bea:	c9                   	leave  
84002beb:	c3                   	ret    

84002bec <fclose>:
84002bec:	55                   	push   %ebp
84002bed:	89 e5                	mov    %esp,%ebp
84002bef:	83 ec 08             	sub    $0x8,%esp
84002bf2:	8b 55 08             	mov    0x8(%ebp),%edx
84002bf5:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84002bfa:	83 ec 08             	sub    $0x8,%esp
84002bfd:	52                   	push   %edx
84002bfe:	50                   	push   %eax
84002bff:	e8 e1 fe ff ff       	call   84002ae5 <_fclose_r>
84002c04:	83 c4 10             	add    $0x10,%esp
84002c07:	c9                   	leave  
84002c08:	c3                   	ret    

84002c09 <_getc_r>:
84002c09:	55                   	push   %ebp
84002c0a:	89 e5                	mov    %esp,%ebp
84002c0c:	53                   	push   %ebx
84002c0d:	83 ec 14             	sub    $0x14,%esp
84002c10:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84002c13:	8b 45 08             	mov    0x8(%ebp),%eax
84002c16:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002c19:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84002c1d:	74 18                	je     84002c37 <_getc_r+0x2e>
84002c1f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002c22:	8b 40 38             	mov    0x38(%eax),%eax
84002c25:	85 c0                	test   %eax,%eax
84002c27:	75 0e                	jne    84002c37 <_getc_r+0x2e>
84002c29:	83 ec 0c             	sub    $0xc,%esp
84002c2c:	ff 75 f4             	push   -0xc(%ebp)
84002c2f:	e8 d5 e5 ff ff       	call   84001209 <__sinit>
84002c34:	83 c4 10             	add    $0x10,%esp
84002c37:	8b 43 04             	mov    0x4(%ebx),%eax
84002c3a:	83 e8 01             	sub    $0x1,%eax
84002c3d:	89 43 04             	mov    %eax,0x4(%ebx)
84002c40:	8b 43 04             	mov    0x4(%ebx),%eax
84002c43:	85 c0                	test   %eax,%eax
84002c45:	79 11                	jns    84002c58 <_getc_r+0x4f>
84002c47:	83 ec 08             	sub    $0x8,%esp
84002c4a:	53                   	push   %ebx
84002c4b:	ff 75 08             	push   0x8(%ebp)
84002c4e:	e8 7e 0f 00 00       	call   84003bd1 <__srget_r>
84002c53:	83 c4 10             	add    $0x10,%esp
84002c56:	eb 0d                	jmp    84002c65 <_getc_r+0x5c>
84002c58:	8b 03                	mov    (%ebx),%eax
84002c5a:	8d 50 01             	lea    0x1(%eax),%edx
84002c5d:	89 13                	mov    %edx,(%ebx)
84002c5f:	0f b6 00             	movzbl (%eax),%eax
84002c62:	0f b6 c0             	movzbl %al,%eax
84002c65:	89 45 f0             	mov    %eax,-0x10(%ebp)
84002c68:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002c6b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84002c6e:	c9                   	leave  
84002c6f:	c3                   	ret    

84002c70 <getc>:
84002c70:	55                   	push   %ebp
84002c71:	89 e5                	mov    %esp,%ebp
84002c73:	53                   	push   %ebx
84002c74:	83 ec 14             	sub    $0x14,%esp
84002c77:	8b 5d 08             	mov    0x8(%ebp),%ebx
84002c7a:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84002c7f:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002c82:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002c85:	89 45 f0             	mov    %eax,-0x10(%ebp)
84002c88:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
84002c8c:	74 18                	je     84002ca6 <getc+0x36>
84002c8e:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002c91:	8b 40 38             	mov    0x38(%eax),%eax
84002c94:	85 c0                	test   %eax,%eax
84002c96:	75 0e                	jne    84002ca6 <getc+0x36>
84002c98:	83 ec 0c             	sub    $0xc,%esp
84002c9b:	ff 75 f0             	push   -0x10(%ebp)
84002c9e:	e8 66 e5 ff ff       	call   84001209 <__sinit>
84002ca3:	83 c4 10             	add    $0x10,%esp
84002ca6:	8b 43 04             	mov    0x4(%ebx),%eax
84002ca9:	83 e8 01             	sub    $0x1,%eax
84002cac:	89 43 04             	mov    %eax,0x4(%ebx)
84002caf:	8b 43 04             	mov    0x4(%ebx),%eax
84002cb2:	85 c0                	test   %eax,%eax
84002cb4:	79 11                	jns    84002cc7 <getc+0x57>
84002cb6:	83 ec 08             	sub    $0x8,%esp
84002cb9:	53                   	push   %ebx
84002cba:	ff 75 f4             	push   -0xc(%ebp)
84002cbd:	e8 0f 0f 00 00       	call   84003bd1 <__srget_r>
84002cc2:	83 c4 10             	add    $0x10,%esp
84002cc5:	eb 0d                	jmp    84002cd4 <getc+0x64>
84002cc7:	8b 03                	mov    (%ebx),%eax
84002cc9:	8d 50 01             	lea    0x1(%eax),%edx
84002ccc:	89 13                	mov    %edx,(%ebx)
84002cce:	0f b6 00             	movzbl (%eax),%eax
84002cd1:	0f b6 c0             	movzbl %al,%eax
84002cd4:	89 45 ec             	mov    %eax,-0x14(%ebp)
84002cd7:	8b 45 ec             	mov    -0x14(%ebp),%eax
84002cda:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84002cdd:	c9                   	leave  
84002cde:	c3                   	ret    

84002cdf <_lseek_r>:
84002cdf:	55                   	push   %ebp
84002ce0:	89 e5                	mov    %esp,%ebp
84002ce2:	83 ec 18             	sub    $0x18,%esp
84002ce5:	c7 05 10 64 00 84 00 	movl   $0x0,0x84006410
84002cec:	00 00 00 
84002cef:	83 ec 04             	sub    $0x4,%esp
84002cf2:	ff 75 14             	push   0x14(%ebp)
84002cf5:	ff 75 10             	push   0x10(%ebp)
84002cf8:	ff 75 0c             	push   0xc(%ebp)
84002cfb:	e8 0c d5 ff ff       	call   8400020c <lseek>
84002d00:	83 c4 10             	add    $0x10,%esp
84002d03:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002d06:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84002d0a:	75 14                	jne    84002d20 <_lseek_r+0x41>
84002d0c:	a1 10 64 00 84       	mov    0x84006410,%eax
84002d11:	85 c0                	test   %eax,%eax
84002d13:	74 0b                	je     84002d20 <_lseek_r+0x41>
84002d15:	8b 15 10 64 00 84    	mov    0x84006410,%edx
84002d1b:	8b 45 08             	mov    0x8(%ebp),%eax
84002d1e:	89 10                	mov    %edx,(%eax)
84002d20:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002d23:	c9                   	leave  
84002d24:	c3                   	ret    

84002d25 <__smakebuf_r>:
84002d25:	55                   	push   %ebp
84002d26:	89 e5                	mov    %esp,%ebp
84002d28:	56                   	push   %esi
84002d29:	53                   	push   %ebx
84002d2a:	83 ec 10             	sub    $0x10,%esp
84002d2d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84002d30:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002d34:	98                   	cwtl   
84002d35:	83 e0 02             	and    $0x2,%eax
84002d38:	85 c0                	test   %eax,%eax
84002d3a:	74 16                	je     84002d52 <__smakebuf_r+0x2d>
84002d3c:	8d 43 43             	lea    0x43(%ebx),%eax
84002d3f:	89 03                	mov    %eax,(%ebx)
84002d41:	8b 03                	mov    (%ebx),%eax
84002d43:	89 43 10             	mov    %eax,0x10(%ebx)
84002d46:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
84002d4d:	e9 b9 00 00 00       	jmp    84002e0b <__smakebuf_r+0xe6>
84002d52:	8d 45 ec             	lea    -0x14(%ebp),%eax
84002d55:	50                   	push   %eax
84002d56:	8d 45 f0             	lea    -0x10(%ebp),%eax
84002d59:	50                   	push   %eax
84002d5a:	53                   	push   %ebx
84002d5b:	ff 75 08             	push   0x8(%ebp)
84002d5e:	e8 af 00 00 00       	call   84002e12 <__swhatbuf_r>
84002d63:	83 c4 10             	add    $0x10,%esp
84002d66:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002d69:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002d6c:	83 ec 08             	sub    $0x8,%esp
84002d6f:	50                   	push   %eax
84002d70:	ff 75 08             	push   0x8(%ebp)
84002d73:	e8 c5 ee ff ff       	call   84001c3d <_malloc_r>
84002d78:	83 c4 10             	add    $0x10,%esp
84002d7b:	89 c6                	mov    %eax,%esi
84002d7d:	85 f6                	test   %esi,%esi
84002d7f:	75 2f                	jne    84002db0 <__smakebuf_r+0x8b>
84002d81:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002d85:	98                   	cwtl   
84002d86:	25 00 02 00 00       	and    $0x200,%eax
84002d8b:	85 c0                	test   %eax,%eax
84002d8d:	75 7c                	jne    84002e0b <__smakebuf_r+0xe6>
84002d8f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002d93:	83 e0 fc             	and    $0xfffffffc,%eax
84002d96:	83 c8 02             	or     $0x2,%eax
84002d99:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002d9d:	8d 43 43             	lea    0x43(%ebx),%eax
84002da0:	89 03                	mov    %eax,(%ebx)
84002da2:	8b 03                	mov    (%ebx),%eax
84002da4:	89 43 10             	mov    %eax,0x10(%ebx)
84002da7:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
84002dae:	eb 5b                	jmp    84002e0b <__smakebuf_r+0xe6>
84002db0:	8b 45 08             	mov    0x8(%ebp),%eax
84002db3:	c7 40 3c ce 11 00 84 	movl   $0x840011ce,0x3c(%eax)
84002dba:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002dbe:	0c 80                	or     $0x80,%al
84002dc0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002dc4:	89 33                	mov    %esi,(%ebx)
84002dc6:	8b 03                	mov    (%ebx),%eax
84002dc8:	89 43 10             	mov    %eax,0x10(%ebx)
84002dcb:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002dce:	89 43 14             	mov    %eax,0x14(%ebx)
84002dd1:	8b 45 ec             	mov    -0x14(%ebp),%eax
84002dd4:	85 c0                	test   %eax,%eax
84002dd6:	74 26                	je     84002dfe <__smakebuf_r+0xd9>
84002dd8:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
84002ddc:	98                   	cwtl   
84002ddd:	83 ec 08             	sub    $0x8,%esp
84002de0:	50                   	push   %eax
84002de1:	ff 75 08             	push   0x8(%ebp)
84002de4:	e8 8c 17 00 00       	call   84004575 <_isatty_r>
84002de9:	83 c4 10             	add    $0x10,%esp
84002dec:	85 c0                	test   %eax,%eax
84002dee:	74 0e                	je     84002dfe <__smakebuf_r+0xd9>
84002df0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002df4:	83 e0 fc             	and    $0xfffffffc,%eax
84002df7:	83 c8 01             	or     $0x1,%eax
84002dfa:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002dfe:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
84002e02:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002e05:	09 d0                	or     %edx,%eax
84002e07:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002e0b:	8d 65 f8             	lea    -0x8(%ebp),%esp
84002e0e:	5b                   	pop    %ebx
84002e0f:	5e                   	pop    %esi
84002e10:	5d                   	pop    %ebp
84002e11:	c3                   	ret    

84002e12 <__swhatbuf_r>:
84002e12:	55                   	push   %ebp
84002e13:	89 e5                	mov    %esp,%ebp
84002e15:	83 ec 58             	sub    $0x58,%esp
84002e18:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
84002e1f:	8b 45 0c             	mov    0xc(%ebp),%eax
84002e22:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
84002e26:	66 85 c0             	test   %ax,%ax
84002e29:	78 1f                	js     84002e4a <__swhatbuf_r+0x38>
84002e2b:	8b 45 0c             	mov    0xc(%ebp),%eax
84002e2e:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
84002e32:	98                   	cwtl   
84002e33:	83 ec 04             	sub    $0x4,%esp
84002e36:	8d 55 ac             	lea    -0x54(%ebp),%edx
84002e39:	52                   	push   %edx
84002e3a:	50                   	push   %eax
84002e3b:	ff 75 08             	push   0x8(%ebp)
84002e3e:	e8 51 12 00 00       	call   84004094 <_fstat_r>
84002e43:	83 c4 10             	add    $0x10,%esp
84002e46:	85 c0                	test   %eax,%eax
84002e48:	79 35                	jns    84002e7f <__swhatbuf_r+0x6d>
84002e4a:	8b 45 14             	mov    0x14(%ebp),%eax
84002e4d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
84002e53:	8b 45 0c             	mov    0xc(%ebp),%eax
84002e56:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
84002e5a:	98                   	cwtl   
84002e5b:	25 80 00 00 00       	and    $0x80,%eax
84002e60:	85 c0                	test   %eax,%eax
84002e62:	74 0b                	je     84002e6f <__swhatbuf_r+0x5d>
84002e64:	8b 45 10             	mov    0x10(%ebp),%eax
84002e67:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
84002e6d:	eb 09                	jmp    84002e78 <__swhatbuf_r+0x66>
84002e6f:	8b 45 10             	mov    0x10(%ebp),%eax
84002e72:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
84002e78:	b8 00 00 00 00       	mov    $0x0,%eax
84002e7d:	eb 24                	jmp    84002ea3 <__swhatbuf_r+0x91>
84002e7f:	8b 45 b0             	mov    -0x50(%ebp),%eax
84002e82:	25 00 f0 00 00       	and    $0xf000,%eax
84002e87:	3d 00 20 00 00       	cmp    $0x2000,%eax
84002e8c:	0f 94 c0             	sete   %al
84002e8f:	0f b6 d0             	movzbl %al,%edx
84002e92:	8b 45 14             	mov    0x14(%ebp),%eax
84002e95:	89 10                	mov    %edx,(%eax)
84002e97:	8b 45 10             	mov    0x10(%ebp),%eax
84002e9a:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
84002ea0:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002ea3:	c9                   	leave  
84002ea4:	c3                   	ret    

84002ea5 <__sprint_r>:
84002ea5:	55                   	push   %ebp
84002ea6:	89 e5                	mov    %esp,%ebp
84002ea8:	56                   	push   %esi
84002ea9:	53                   	push   %ebx
84002eaa:	83 ec 10             	sub    $0x10,%esp
84002ead:	8b 5d 10             	mov    0x10(%ebp),%ebx
84002eb0:	be 00 00 00 00       	mov    $0x0,%esi
84002eb5:	8b 43 08             	mov    0x8(%ebx),%eax
84002eb8:	85 c0                	test   %eax,%eax
84002eba:	75 11                	jne    84002ecd <__sprint_r+0x28>
84002ebc:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
84002ec3:	b8 00 00 00 00       	mov    $0x0,%eax
84002ec8:	e9 ad 00 00 00       	jmp    84002f7a <__sprint_r+0xd5>
84002ecd:	8b 45 0c             	mov    0xc(%ebp),%eax
84002ed0:	8b 40 64             	mov    0x64(%eax),%eax
84002ed3:	25 00 20 00 00       	and    $0x2000,%eax
84002ed8:	85 c0                	test   %eax,%eax
84002eda:	74 7a                	je     84002f56 <__sprint_r+0xb1>
84002edc:	8b 03                	mov    (%ebx),%eax
84002ede:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002ee1:	eb 6a                	jmp    84002f4d <__sprint_r+0xa8>
84002ee3:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002ee6:	8b 00                	mov    (%eax),%eax
84002ee8:	89 45 ec             	mov    %eax,-0x14(%ebp)
84002eeb:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002eee:	8b 40 04             	mov    0x4(%eax),%eax
84002ef1:	c1 e8 02             	shr    $0x2,%eax
84002ef4:	89 45 e8             	mov    %eax,-0x18(%ebp)
84002ef7:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
84002efe:	eb 33                	jmp    84002f33 <__sprint_r+0x8e>
84002f00:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002f03:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
84002f0a:	8b 45 ec             	mov    -0x14(%ebp),%eax
84002f0d:	01 d0                	add    %edx,%eax
84002f0f:	8b 00                	mov    (%eax),%eax
84002f11:	83 ec 04             	sub    $0x4,%esp
84002f14:	ff 75 0c             	push   0xc(%ebp)
84002f17:	50                   	push   %eax
84002f18:	ff 75 08             	push   0x8(%ebp)
84002f1b:	e8 d5 10 00 00       	call   84003ff5 <_fputwc_r>
84002f20:	83 c4 10             	add    $0x10,%esp
84002f23:	83 f8 ff             	cmp    $0xffffffff,%eax
84002f26:	75 07                	jne    84002f2f <__sprint_r+0x8a>
84002f28:	be ff ff ff ff       	mov    $0xffffffff,%esi
84002f2d:	eb 3b                	jmp    84002f6a <__sprint_r+0xc5>
84002f2f:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
84002f33:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002f36:	3b 45 e8             	cmp    -0x18(%ebp),%eax
84002f39:	7c c5                	jl     84002f00 <__sprint_r+0x5b>
84002f3b:	8b 43 08             	mov    0x8(%ebx),%eax
84002f3e:	8b 55 e8             	mov    -0x18(%ebp),%edx
84002f41:	c1 e2 02             	shl    $0x2,%edx
84002f44:	29 d0                	sub    %edx,%eax
84002f46:	89 43 08             	mov    %eax,0x8(%ebx)
84002f49:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
84002f4d:	8b 43 08             	mov    0x8(%ebx),%eax
84002f50:	85 c0                	test   %eax,%eax
84002f52:	75 8f                	jne    84002ee3 <__sprint_r+0x3e>
84002f54:	eb 14                	jmp    84002f6a <__sprint_r+0xc5>
84002f56:	83 ec 04             	sub    $0x4,%esp
84002f59:	53                   	push   %ebx
84002f5a:	ff 75 0c             	push   0xc(%ebp)
84002f5d:	ff 75 08             	push   0x8(%ebp)
84002f60:	e8 72 11 00 00       	call   840040d7 <__sfvwrite_r>
84002f65:	83 c4 10             	add    $0x10,%esp
84002f68:	89 c6                	mov    %eax,%esi
84002f6a:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
84002f71:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
84002f78:	89 f0                	mov    %esi,%eax
84002f7a:	8d 65 f8             	lea    -0x8(%ebp),%esp
84002f7d:	5b                   	pop    %ebx
84002f7e:	5e                   	pop    %esi
84002f7f:	5d                   	pop    %ebp
84002f80:	c3                   	ret    

84002f81 <__sfputc_r>:
84002f81:	55                   	push   %ebp
84002f82:	89 e5                	mov    %esp,%ebp
84002f84:	83 ec 08             	sub    $0x8,%esp
84002f87:	8b 45 10             	mov    0x10(%ebp),%eax
84002f8a:	8b 40 08             	mov    0x8(%eax),%eax
84002f8d:	8d 50 ff             	lea    -0x1(%eax),%edx
84002f90:	8b 45 10             	mov    0x10(%ebp),%eax
84002f93:	89 50 08             	mov    %edx,0x8(%eax)
84002f96:	8b 45 10             	mov    0x10(%ebp),%eax
84002f99:	8b 40 08             	mov    0x8(%eax),%eax
84002f9c:	85 c0                	test   %eax,%eax
84002f9e:	79 17                	jns    84002fb7 <__sfputc_r+0x36>
84002fa0:	8b 45 10             	mov    0x10(%ebp),%eax
84002fa3:	8b 50 08             	mov    0x8(%eax),%edx
84002fa6:	8b 45 10             	mov    0x10(%ebp),%eax
84002fa9:	8b 40 18             	mov    0x18(%eax),%eax
84002fac:	39 c2                	cmp    %eax,%edx
84002fae:	7c 21                	jl     84002fd1 <__sfputc_r+0x50>
84002fb0:	8b 45 0c             	mov    0xc(%ebp),%eax
84002fb3:	3c 0a                	cmp    $0xa,%al
84002fb5:	74 1a                	je     84002fd1 <__sfputc_r+0x50>
84002fb7:	8b 45 10             	mov    0x10(%ebp),%eax
84002fba:	8b 00                	mov    (%eax),%eax
84002fbc:	8d 48 01             	lea    0x1(%eax),%ecx
84002fbf:	8b 55 10             	mov    0x10(%ebp),%edx
84002fc2:	89 0a                	mov    %ecx,(%edx)
84002fc4:	8b 55 0c             	mov    0xc(%ebp),%edx
84002fc7:	88 10                	mov    %dl,(%eax)
84002fc9:	0f b6 00             	movzbl (%eax),%eax
84002fcc:	0f b6 c0             	movzbl %al,%eax
84002fcf:	eb 14                	jmp    84002fe5 <__sfputc_r+0x64>
84002fd1:	83 ec 04             	sub    $0x4,%esp
84002fd4:	ff 75 10             	push   0x10(%ebp)
84002fd7:	ff 75 0c             	push   0xc(%ebp)
84002fda:	ff 75 08             	push   0x8(%ebp)
84002fdd:	e8 6f 0c 00 00       	call   84003c51 <__swbuf_r>
84002fe2:	83 c4 10             	add    $0x10,%esp
84002fe5:	c9                   	leave  
84002fe6:	c3                   	ret    

84002fe7 <__sfputs_r>:
84002fe7:	55                   	push   %ebp
84002fe8:	89 e5                	mov    %esp,%ebp
84002fea:	53                   	push   %ebx
84002feb:	83 ec 14             	sub    $0x14,%esp
84002fee:	8b 45 0c             	mov    0xc(%ebp),%eax
84002ff1:	8b 40 64             	mov    0x64(%eax),%eax
84002ff4:	25 00 20 00 00       	and    $0x2000,%eax
84002ff9:	85 c0                	test   %eax,%eax
84002ffb:	74 4c                	je     84003049 <__sfputs_r+0x62>
84002ffd:	8b 45 10             	mov    0x10(%ebp),%eax
84003000:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003003:	bb 00 00 00 00       	mov    $0x0,%ebx
84003008:	eb 31                	jmp    8400303b <__sfputs_r+0x54>
8400300a:	89 d8                	mov    %ebx,%eax
8400300c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
84003013:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003016:	01 d0                	add    %edx,%eax
84003018:	8b 00                	mov    (%eax),%eax
8400301a:	83 ec 04             	sub    $0x4,%esp
8400301d:	ff 75 0c             	push   0xc(%ebp)
84003020:	50                   	push   %eax
84003021:	ff 75 08             	push   0x8(%ebp)
84003024:	e8 cc 0f 00 00       	call   84003ff5 <_fputwc_r>
84003029:	83 c4 10             	add    $0x10,%esp
8400302c:	83 f8 ff             	cmp    $0xffffffff,%eax
8400302f:	75 07                	jne    84003038 <__sfputs_r+0x51>
84003031:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003036:	eb 52                	jmp    8400308a <__sfputs_r+0xa3>
84003038:	83 c3 01             	add    $0x1,%ebx
8400303b:	8b 45 14             	mov    0x14(%ebp),%eax
8400303e:	c1 e8 02             	shr    $0x2,%eax
84003041:	89 da                	mov    %ebx,%edx
84003043:	39 d0                	cmp    %edx,%eax
84003045:	77 c3                	ja     8400300a <__sfputs_r+0x23>
84003047:	eb 3c                	jmp    84003085 <__sfputs_r+0x9e>
84003049:	bb 00 00 00 00       	mov    $0x0,%ebx
8400304e:	eb 2e                	jmp    8400307e <__sfputs_r+0x97>
84003050:	89 da                	mov    %ebx,%edx
84003052:	8b 45 10             	mov    0x10(%ebp),%eax
84003055:	01 d0                	add    %edx,%eax
84003057:	0f b6 00             	movzbl (%eax),%eax
8400305a:	0f be c0             	movsbl %al,%eax
8400305d:	83 ec 04             	sub    $0x4,%esp
84003060:	ff 75 0c             	push   0xc(%ebp)
84003063:	50                   	push   %eax
84003064:	ff 75 08             	push   0x8(%ebp)
84003067:	e8 15 ff ff ff       	call   84002f81 <__sfputc_r>
8400306c:	83 c4 10             	add    $0x10,%esp
8400306f:	83 f8 ff             	cmp    $0xffffffff,%eax
84003072:	75 07                	jne    8400307b <__sfputs_r+0x94>
84003074:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003079:	eb 0f                	jmp    8400308a <__sfputs_r+0xa3>
8400307b:	83 c3 01             	add    $0x1,%ebx
8400307e:	89 d8                	mov    %ebx,%eax
84003080:	39 45 14             	cmp    %eax,0x14(%ebp)
84003083:	77 cb                	ja     84003050 <__sfputs_r+0x69>
84003085:	b8 00 00 00 00       	mov    $0x0,%eax
8400308a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8400308d:	c9                   	leave  
8400308e:	c3                   	ret    

8400308f <vfiprintf>:
8400308f:	55                   	push   %ebp
84003090:	89 e5                	mov    %esp,%ebp
84003092:	83 ec 18             	sub    $0x18,%esp
84003095:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
8400309a:	ff 75 10             	push   0x10(%ebp)
8400309d:	ff 75 0c             	push   0xc(%ebp)
840030a0:	ff 75 08             	push   0x8(%ebp)
840030a3:	50                   	push   %eax
840030a4:	e8 0b 00 00 00       	call   840030b4 <_vfiprintf_r>
840030a9:	83 c4 10             	add    $0x10,%esp
840030ac:	89 45 f4             	mov    %eax,-0xc(%ebp)
840030af:	8b 45 f4             	mov    -0xc(%ebp),%eax
840030b2:	c9                   	leave  
840030b3:	c3                   	ret    

840030b4 <_vfiprintf_r>:
840030b4:	55                   	push   %ebp
840030b5:	89 e5                	mov    %esp,%ebp
840030b7:	57                   	push   %edi
840030b8:	56                   	push   %esi
840030b9:	53                   	push   %ebx
840030ba:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
840030c0:	c7 45 e4 e7 2f 00 84 	movl   $0x84002fe7,-0x1c(%ebp)
840030c7:	8b 45 08             	mov    0x8(%ebp),%eax
840030ca:	89 45 e0             	mov    %eax,-0x20(%ebp)
840030cd:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
840030d1:	74 18                	je     840030eb <_vfiprintf_r+0x37>
840030d3:	8b 45 e0             	mov    -0x20(%ebp),%eax
840030d6:	8b 40 38             	mov    0x38(%eax),%eax
840030d9:	85 c0                	test   %eax,%eax
840030db:	75 0e                	jne    840030eb <_vfiprintf_r+0x37>
840030dd:	83 ec 0c             	sub    $0xc,%esp
840030e0:	ff 75 e0             	push   -0x20(%ebp)
840030e3:	e8 21 e1 ff ff       	call   84001209 <__sinit>
840030e8:	83 c4 10             	add    $0x10,%esp
840030eb:	8b 45 0c             	mov    0xc(%ebp),%eax
840030ee:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
840030f2:	98                   	cwtl   
840030f3:	83 e0 08             	and    $0x8,%eax
840030f6:	85 c0                	test   %eax,%eax
840030f8:	74 0a                	je     84003104 <_vfiprintf_r+0x50>
840030fa:	8b 45 0c             	mov    0xc(%ebp),%eax
840030fd:	8b 40 10             	mov    0x10(%eax),%eax
84003100:	85 c0                	test   %eax,%eax
84003102:	75 1f                	jne    84003123 <_vfiprintf_r+0x6f>
84003104:	83 ec 08             	sub    $0x8,%esp
84003107:	ff 75 0c             	push   0xc(%ebp)
8400310a:	ff 75 08             	push   0x8(%ebp)
8400310d:	e8 72 0c 00 00       	call   84003d84 <__swsetup_r>
84003112:	83 c4 10             	add    $0x10,%esp
84003115:	85 c0                	test   %eax,%eax
84003117:	74 0a                	je     84003123 <_vfiprintf_r+0x6f>
84003119:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400311e:	e9 df 02 00 00       	jmp    84003402 <_vfiprintf_r+0x34e>
84003123:	8b 5d 10             	mov    0x10(%ebp),%ebx
84003126:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
8400312d:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
84003131:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
84003135:	8b 45 14             	mov    0x14(%ebp),%eax
84003138:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
8400313e:	89 de                	mov    %ebx,%esi
84003140:	eb 03                	jmp    84003145 <_vfiprintf_r+0x91>
84003142:	83 c3 01             	add    $0x1,%ebx
84003145:	0f b6 03             	movzbl (%ebx),%eax
84003148:	84 c0                	test   %al,%al
8400314a:	74 07                	je     84003153 <_vfiprintf_r+0x9f>
8400314c:	0f b6 03             	movzbl (%ebx),%eax
8400314f:	3c 25                	cmp    $0x25,%al
84003151:	75 ef                	jne    84003142 <_vfiprintf_r+0x8e>
84003153:	89 d8                	mov    %ebx,%eax
84003155:	29 f0                	sub    %esi,%eax
84003157:	85 c0                	test   %eax,%eax
84003159:	74 2b                	je     84003186 <_vfiprintf_r+0xd2>
8400315b:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
84003161:	50                   	push   %eax
84003162:	56                   	push   %esi
84003163:	ff 75 0c             	push   0xc(%ebp)
84003166:	ff 75 08             	push   0x8(%ebp)
84003169:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8400316c:	ff d0                	call   *%eax
8400316e:	83 c4 10             	add    $0x10,%esp
84003171:	83 f8 ff             	cmp    $0xffffffff,%eax
84003174:	0f 84 68 02 00 00    	je     840033e2 <_vfiprintf_r+0x32e>
8400317a:	8b 45 94             	mov    -0x6c(%ebp),%eax
8400317d:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
84003183:	89 45 94             	mov    %eax,-0x6c(%ebp)
84003186:	0f b6 03             	movzbl (%ebx),%eax
84003189:	84 c0                	test   %al,%al
8400318b:	0f 84 54 02 00 00    	je     840033e5 <_vfiprintf_r+0x331>
84003191:	83 c3 01             	add    $0x1,%ebx
84003194:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
8400319b:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
840031a2:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
840031a9:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
840031b0:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
840031b4:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
840031bb:	c7 45 dc 3c 56 00 84 	movl   $0x8400563c,-0x24(%ebp)
840031c2:	eb 1b                	jmp    840031df <_vfiprintf_r+0x12b>
840031c4:	8b 55 80             	mov    -0x80(%ebp),%edx
840031c7:	89 f0                	mov    %esi,%eax
840031c9:	2b 45 dc             	sub    -0x24(%ebp),%eax
840031cc:	be 01 00 00 00       	mov    $0x1,%esi
840031d1:	89 c1                	mov    %eax,%ecx
840031d3:	d3 e6                	shl    %cl,%esi
840031d5:	89 f0                	mov    %esi,%eax
840031d7:	09 d0                	or     %edx,%eax
840031d9:	89 45 80             	mov    %eax,-0x80(%ebp)
840031dc:	83 c3 01             	add    $0x1,%ebx
840031df:	0f b6 03             	movzbl (%ebx),%eax
840031e2:	0f be c0             	movsbl %al,%eax
840031e5:	83 ec 04             	sub    $0x4,%esp
840031e8:	6a 05                	push   $0x5
840031ea:	50                   	push   %eax
840031eb:	ff 75 dc             	push   -0x24(%ebp)
840031ee:	e8 0d 15 00 00       	call   84004700 <memchr>
840031f3:	83 c4 10             	add    $0x10,%esp
840031f6:	89 c6                	mov    %eax,%esi
840031f8:	85 f6                	test   %esi,%esi
840031fa:	75 c8                	jne    840031c4 <_vfiprintf_r+0x110>
840031fc:	8b 45 80             	mov    -0x80(%ebp),%eax
840031ff:	83 e0 10             	and    $0x10,%eax
84003202:	85 c0                	test   %eax,%eax
84003204:	74 04                	je     8400320a <_vfiprintf_r+0x156>
84003206:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
8400320a:	8b 45 80             	mov    -0x80(%ebp),%eax
8400320d:	83 e0 08             	and    $0x8,%eax
84003210:	85 c0                	test   %eax,%eax
84003212:	74 04                	je     84003218 <_vfiprintf_r+0x164>
84003214:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
84003218:	0f b6 03             	movzbl (%ebx),%eax
8400321b:	3c 2a                	cmp    $0x2a,%al
8400321d:	75 50                	jne    8400326f <_vfiprintf_r+0x1bb>
8400321f:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
84003225:	8d 50 04             	lea    0x4(%eax),%edx
84003228:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8400322e:	8b 00                	mov    (%eax),%eax
84003230:	89 45 8c             	mov    %eax,-0x74(%ebp)
84003233:	8b 45 8c             	mov    -0x74(%ebp),%eax
84003236:	85 c0                	test   %eax,%eax
84003238:	79 11                	jns    8400324b <_vfiprintf_r+0x197>
8400323a:	8b 45 8c             	mov    -0x74(%ebp),%eax
8400323d:	f7 d8                	neg    %eax
8400323f:	89 45 8c             	mov    %eax,-0x74(%ebp)
84003242:	8b 45 80             	mov    -0x80(%ebp),%eax
84003245:	83 c8 02             	or     $0x2,%eax
84003248:	89 45 80             	mov    %eax,-0x80(%ebp)
8400324b:	83 c3 01             	add    $0x1,%ebx
8400324e:	eb 2d                	jmp    8400327d <_vfiprintf_r+0x1c9>
84003250:	8b 55 8c             	mov    -0x74(%ebp),%edx
84003253:	89 d0                	mov    %edx,%eax
84003255:	c1 e0 02             	shl    $0x2,%eax
84003258:	01 d0                	add    %edx,%eax
8400325a:	01 c0                	add    %eax,%eax
8400325c:	89 c2                	mov    %eax,%edx
8400325e:	0f b6 03             	movzbl (%ebx),%eax
84003261:	0f be c0             	movsbl %al,%eax
84003264:	83 e8 30             	sub    $0x30,%eax
84003267:	01 d0                	add    %edx,%eax
84003269:	89 45 8c             	mov    %eax,-0x74(%ebp)
8400326c:	83 c3 01             	add    $0x1,%ebx
8400326f:	0f b6 03             	movzbl (%ebx),%eax
84003272:	0f be c0             	movsbl %al,%eax
84003275:	83 e8 30             	sub    $0x30,%eax
84003278:	83 f8 09             	cmp    $0x9,%eax
8400327b:	76 d3                	jbe    84003250 <_vfiprintf_r+0x19c>
8400327d:	0f b6 03             	movzbl (%ebx),%eax
84003280:	3c 2e                	cmp    $0x2e,%al
84003282:	75 67                	jne    840032eb <_vfiprintf_r+0x237>
84003284:	83 c3 01             	add    $0x1,%ebx
84003287:	0f b6 03             	movzbl (%ebx),%eax
8400328a:	3c 2a                	cmp    $0x2a,%al
8400328c:	75 27                	jne    840032b5 <_vfiprintf_r+0x201>
8400328e:	83 c3 01             	add    $0x1,%ebx
84003291:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
84003297:	8d 50 04             	lea    0x4(%eax),%edx
8400329a:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
840032a0:	8b 00                	mov    (%eax),%eax
840032a2:	89 45 84             	mov    %eax,-0x7c(%ebp)
840032a5:	8b 45 84             	mov    -0x7c(%ebp),%eax
840032a8:	85 c0                	test   %eax,%eax
840032aa:	79 3f                	jns    840032eb <_vfiprintf_r+0x237>
840032ac:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
840032b3:	eb 36                	jmp    840032eb <_vfiprintf_r+0x237>
840032b5:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
840032bc:	eb 1f                	jmp    840032dd <_vfiprintf_r+0x229>
840032be:	8b 55 84             	mov    -0x7c(%ebp),%edx
840032c1:	89 d0                	mov    %edx,%eax
840032c3:	c1 e0 02             	shl    $0x2,%eax
840032c6:	01 d0                	add    %edx,%eax
840032c8:	01 c0                	add    %eax,%eax
840032ca:	89 c2                	mov    %eax,%edx
840032cc:	0f b6 03             	movzbl (%ebx),%eax
840032cf:	0f be c0             	movsbl %al,%eax
840032d2:	83 e8 30             	sub    $0x30,%eax
840032d5:	01 d0                	add    %edx,%eax
840032d7:	89 45 84             	mov    %eax,-0x7c(%ebp)
840032da:	83 c3 01             	add    $0x1,%ebx
840032dd:	0f b6 03             	movzbl (%ebx),%eax
840032e0:	0f be c0             	movsbl %al,%eax
840032e3:	83 e8 30             	sub    $0x30,%eax
840032e6:	83 f8 09             	cmp    $0x9,%eax
840032e9:	76 d3                	jbe    840032be <_vfiprintf_r+0x20a>
840032eb:	c7 45 dc 42 56 00 84 	movl   $0x84005642,-0x24(%ebp)
840032f2:	0f b6 03             	movzbl (%ebx),%eax
840032f5:	0f be c0             	movsbl %al,%eax
840032f8:	83 ec 04             	sub    $0x4,%esp
840032fb:	6a 03                	push   $0x3
840032fd:	50                   	push   %eax
840032fe:	ff 75 dc             	push   -0x24(%ebp)
84003301:	e8 fa 13 00 00       	call   84004700 <memchr>
84003306:	83 c4 10             	add    $0x10,%esp
84003309:	89 c6                	mov    %eax,%esi
8400330b:	85 f6                	test   %esi,%esi
8400330d:	74 1b                	je     8400332a <_vfiprintf_r+0x276>
8400330f:	8b 55 80             	mov    -0x80(%ebp),%edx
84003312:	89 f0                	mov    %esi,%eax
84003314:	2b 45 dc             	sub    -0x24(%ebp),%eax
84003317:	be 40 00 00 00       	mov    $0x40,%esi
8400331c:	89 c1                	mov    %eax,%ecx
8400331e:	d3 e6                	shl    %cl,%esi
84003320:	89 f0                	mov    %esi,%eax
84003322:	09 d0                	or     %edx,%eax
84003324:	89 45 80             	mov    %eax,-0x80(%ebp)
84003327:	83 c3 01             	add    $0x1,%ebx
8400332a:	89 d8                	mov    %ebx,%eax
8400332c:	8d 58 01             	lea    0x1(%eax),%ebx
8400332f:	0f b6 00             	movzbl (%eax),%eax
84003332:	88 45 98             	mov    %al,-0x68(%ebp)
84003335:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
84003339:	0f be c0             	movsbl %al,%eax
8400333c:	83 ec 04             	sub    $0x4,%esp
8400333f:	6a 06                	push   $0x6
84003341:	50                   	push   %eax
84003342:	68 46 56 00 84       	push   $0x84005646
84003347:	e8 b4 13 00 00       	call   84004700 <memchr>
8400334c:	83 c4 10             	add    $0x10,%esp
8400334f:	89 c6                	mov    %eax,%esi
84003351:	85 f6                	test   %esi,%esi
84003353:	74 5a                	je     840033af <_vfiprintf_r+0x2fb>
84003355:	b8 00 00 00 00       	mov    $0x0,%eax
8400335a:	85 c0                	test   %eax,%eax
8400335c:	75 2e                	jne    8400338c <_vfiprintf_r+0x2d8>
8400335e:	8b 45 80             	mov    -0x80(%ebp),%eax
84003361:	25 00 01 00 00       	and    $0x100,%eax
84003366:	85 c0                	test   %eax,%eax
84003368:	74 11                	je     8400337b <_vfiprintf_r+0x2c7>
8400336a:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
84003370:	83 c0 0c             	add    $0xc,%eax
84003373:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
84003379:	eb 55                	jmp    840033d0 <_vfiprintf_r+0x31c>
8400337b:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
84003381:	83 c0 08             	add    $0x8,%eax
84003384:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
8400338a:	eb 44                	jmp    840033d0 <_vfiprintf_r+0x31c>
8400338c:	83 ec 0c             	sub    $0xc,%esp
8400338f:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
84003395:	50                   	push   %eax
84003396:	ff 75 e4             	push   -0x1c(%ebp)
84003399:	ff 75 0c             	push   0xc(%ebp)
8400339c:	8d 45 80             	lea    -0x80(%ebp),%eax
8400339f:	50                   	push   %eax
840033a0:	ff 75 08             	push   0x8(%ebp)
840033a3:	e8 58 cc ff 7b       	call   0 <_start-0x84000000>
840033a8:	83 c4 20             	add    $0x20,%esp
840033ab:	89 c7                	mov    %eax,%edi
840033ad:	eb 21                	jmp    840033d0 <_vfiprintf_r+0x31c>
840033af:	83 ec 0c             	sub    $0xc,%esp
840033b2:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
840033b8:	50                   	push   %eax
840033b9:	ff 75 e4             	push   -0x1c(%ebp)
840033bc:	ff 75 0c             	push   0xc(%ebp)
840033bf:	8d 45 80             	lea    -0x80(%ebp),%eax
840033c2:	50                   	push   %eax
840033c3:	ff 75 08             	push   0x8(%ebp)
840033c6:	e8 da 01 00 00       	call   840035a5 <_printf_i>
840033cb:	83 c4 20             	add    $0x20,%esp
840033ce:	89 c7                	mov    %eax,%edi
840033d0:	83 ff ff             	cmp    $0xffffffff,%edi
840033d3:	74 13                	je     840033e8 <_vfiprintf_r+0x334>
840033d5:	8b 45 94             	mov    -0x6c(%ebp),%eax
840033d8:	01 f8                	add    %edi,%eax
840033da:	89 45 94             	mov    %eax,-0x6c(%ebp)
840033dd:	e9 5c fd ff ff       	jmp    8400313e <_vfiprintf_r+0x8a>
840033e2:	90                   	nop
840033e3:	eb 04                	jmp    840033e9 <_vfiprintf_r+0x335>
840033e5:	90                   	nop
840033e6:	eb 01                	jmp    840033e9 <_vfiprintf_r+0x335>
840033e8:	90                   	nop
840033e9:	8b 45 0c             	mov    0xc(%ebp),%eax
840033ec:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
840033f0:	98                   	cwtl   
840033f1:	83 e0 40             	and    $0x40,%eax
840033f4:	85 c0                	test   %eax,%eax
840033f6:	75 05                	jne    840033fd <_vfiprintf_r+0x349>
840033f8:	8b 45 94             	mov    -0x6c(%ebp),%eax
840033fb:	eb 05                	jmp    84003402 <_vfiprintf_r+0x34e>
840033fd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003402:	8d 65 f4             	lea    -0xc(%ebp),%esp
84003405:	5b                   	pop    %ebx
84003406:	5e                   	pop    %esi
84003407:	5f                   	pop    %edi
84003408:	5d                   	pop    %ebp
84003409:	c3                   	ret    

8400340a <_printf_common>:
8400340a:	55                   	push   %ebp
8400340b:	89 e5                	mov    %esp,%ebp
8400340d:	83 ec 18             	sub    $0x18,%esp
84003410:	8b 45 0c             	mov    0xc(%ebp),%eax
84003413:	8b 50 10             	mov    0x10(%eax),%edx
84003416:	8b 45 0c             	mov    0xc(%ebp),%eax
84003419:	8b 40 08             	mov    0x8(%eax),%eax
8400341c:	39 c2                	cmp    %eax,%edx
8400341e:	0f 4c d0             	cmovl  %eax,%edx
84003421:	8b 45 10             	mov    0x10(%ebp),%eax
84003424:	89 10                	mov    %edx,(%eax)
84003426:	8b 45 0c             	mov    0xc(%ebp),%eax
84003429:	0f b6 40 43          	movzbl 0x43(%eax),%eax
8400342d:	84 c0                	test   %al,%al
8400342f:	74 0d                	je     8400343e <_printf_common+0x34>
84003431:	8b 45 10             	mov    0x10(%ebp),%eax
84003434:	8b 00                	mov    (%eax),%eax
84003436:	8d 50 01             	lea    0x1(%eax),%edx
84003439:	8b 45 10             	mov    0x10(%ebp),%eax
8400343c:	89 10                	mov    %edx,(%eax)
8400343e:	8b 45 0c             	mov    0xc(%ebp),%eax
84003441:	8b 00                	mov    (%eax),%eax
84003443:	83 e0 20             	and    $0x20,%eax
84003446:	85 c0                	test   %eax,%eax
84003448:	74 0d                	je     84003457 <_printf_common+0x4d>
8400344a:	8b 45 10             	mov    0x10(%ebp),%eax
8400344d:	8b 00                	mov    (%eax),%eax
8400344f:	8d 50 02             	lea    0x2(%eax),%edx
84003452:	8b 45 10             	mov    0x10(%ebp),%eax
84003455:	89 10                	mov    %edx,(%eax)
84003457:	8b 45 0c             	mov    0xc(%ebp),%eax
8400345a:	8b 00                	mov    (%eax),%eax
8400345c:	83 e0 06             	and    $0x6,%eax
8400345f:	85 c0                	test   %eax,%eax
84003461:	75 41                	jne    840034a4 <_printf_common+0x9a>
84003463:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8400346a:	eb 24                	jmp    84003490 <_printf_common+0x86>
8400346c:	8b 45 0c             	mov    0xc(%ebp),%eax
8400346f:	83 c0 19             	add    $0x19,%eax
84003472:	6a 01                	push   $0x1
84003474:	50                   	push   %eax
84003475:	ff 75 14             	push   0x14(%ebp)
84003478:	ff 75 08             	push   0x8(%ebp)
8400347b:	8b 45 18             	mov    0x18(%ebp),%eax
8400347e:	ff d0                	call   *%eax
84003480:	83 c4 10             	add    $0x10,%esp
84003483:	83 f8 ff             	cmp    $0xffffffff,%eax
84003486:	0f 84 0b 01 00 00    	je     84003597 <_printf_common+0x18d>
8400348c:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
84003490:	8b 45 0c             	mov    0xc(%ebp),%eax
84003493:	8b 50 0c             	mov    0xc(%eax),%edx
84003496:	8b 45 10             	mov    0x10(%ebp),%eax
84003499:	8b 08                	mov    (%eax),%ecx
8400349b:	89 d0                	mov    %edx,%eax
8400349d:	29 c8                	sub    %ecx,%eax
8400349f:	39 45 f0             	cmp    %eax,-0x10(%ebp)
840034a2:	7c c8                	jl     8400346c <_printf_common+0x62>
840034a4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
840034ab:	8b 45 0c             	mov    0xc(%ebp),%eax
840034ae:	0f b6 40 43          	movzbl 0x43(%eax),%eax
840034b2:	84 c0                	test   %al,%al
840034b4:	74 04                	je     840034ba <_printf_common+0xb0>
840034b6:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
840034ba:	8b 45 0c             	mov    0xc(%ebp),%eax
840034bd:	8b 00                	mov    (%eax),%eax
840034bf:	83 e0 20             	and    $0x20,%eax
840034c2:	85 c0                	test   %eax,%eax
840034c4:	74 28                	je     840034ee <_printf_common+0xe4>
840034c6:	8b 45 f4             	mov    -0xc(%ebp),%eax
840034c9:	8d 50 01             	lea    0x1(%eax),%edx
840034cc:	89 55 f4             	mov    %edx,-0xc(%ebp)
840034cf:	8b 55 0c             	mov    0xc(%ebp),%edx
840034d2:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
840034d7:	8b 45 f4             	mov    -0xc(%ebp),%eax
840034da:	8d 50 01             	lea    0x1(%eax),%edx
840034dd:	89 55 f4             	mov    %edx,-0xc(%ebp)
840034e0:	8b 55 0c             	mov    0xc(%ebp),%edx
840034e3:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
840034e7:	8b 55 0c             	mov    0xc(%ebp),%edx
840034ea:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
840034ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
840034f1:	8b 55 0c             	mov    0xc(%ebp),%edx
840034f4:	83 c2 43             	add    $0x43,%edx
840034f7:	50                   	push   %eax
840034f8:	52                   	push   %edx
840034f9:	ff 75 14             	push   0x14(%ebp)
840034fc:	ff 75 08             	push   0x8(%ebp)
840034ff:	8b 45 18             	mov    0x18(%ebp),%eax
84003502:	ff d0                	call   *%eax
84003504:	83 c4 10             	add    $0x10,%esp
84003507:	83 f8 ff             	cmp    $0xffffffff,%eax
8400350a:	0f 84 8a 00 00 00    	je     8400359a <_printf_common+0x190>
84003510:	8b 45 0c             	mov    0xc(%ebp),%eax
84003513:	8b 50 0c             	mov    0xc(%eax),%edx
84003516:	8b 45 10             	mov    0x10(%ebp),%eax
84003519:	8b 08                	mov    (%eax),%ecx
8400351b:	89 d0                	mov    %edx,%eax
8400351d:	29 c8                	sub    %ecx,%eax
8400351f:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003522:	8b 45 0c             	mov    0xc(%ebp),%eax
84003525:	8b 00                	mov    (%eax),%eax
84003527:	83 e0 06             	and    $0x6,%eax
8400352a:	83 f8 04             	cmp    $0x4,%eax
8400352d:	75 06                	jne    84003535 <_printf_common+0x12b>
8400352f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84003533:	79 07                	jns    8400353c <_printf_common+0x132>
84003535:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8400353c:	8b 45 0c             	mov    0xc(%ebp),%eax
8400353f:	8b 50 08             	mov    0x8(%eax),%edx
84003542:	8b 45 0c             	mov    0xc(%ebp),%eax
84003545:	8b 40 10             	mov    0x10(%eax),%eax
84003548:	39 c2                	cmp    %eax,%edx
8400354a:	7e 13                	jle    8400355f <_printf_common+0x155>
8400354c:	8b 45 0c             	mov    0xc(%ebp),%eax
8400354f:	8b 50 08             	mov    0x8(%eax),%edx
84003552:	8b 45 0c             	mov    0xc(%ebp),%eax
84003555:	8b 48 10             	mov    0x10(%eax),%ecx
84003558:	89 d0                	mov    %edx,%eax
8400355a:	29 c8                	sub    %ecx,%eax
8400355c:	01 45 f4             	add    %eax,-0xc(%ebp)
8400355f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
84003566:	eb 20                	jmp    84003588 <_printf_common+0x17e>
84003568:	8b 45 0c             	mov    0xc(%ebp),%eax
8400356b:	83 c0 1a             	add    $0x1a,%eax
8400356e:	6a 01                	push   $0x1
84003570:	50                   	push   %eax
84003571:	ff 75 14             	push   0x14(%ebp)
84003574:	ff 75 08             	push   0x8(%ebp)
84003577:	8b 45 18             	mov    0x18(%ebp),%eax
8400357a:	ff d0                	call   *%eax
8400357c:	83 c4 10             	add    $0x10,%esp
8400357f:	83 f8 ff             	cmp    $0xffffffff,%eax
84003582:	74 19                	je     8400359d <_printf_common+0x193>
84003584:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
84003588:	8b 45 ec             	mov    -0x14(%ebp),%eax
8400358b:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8400358e:	7c d8                	jl     84003568 <_printf_common+0x15e>
84003590:	b8 00 00 00 00       	mov    $0x0,%eax
84003595:	eb 0c                	jmp    840035a3 <_printf_common+0x199>
84003597:	90                   	nop
84003598:	eb 04                	jmp    8400359e <_printf_common+0x194>
8400359a:	90                   	nop
8400359b:	eb 01                	jmp    8400359e <_printf_common+0x194>
8400359d:	90                   	nop
8400359e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
840035a3:	c9                   	leave  
840035a4:	c3                   	ret    

840035a5 <_printf_i>:
840035a5:	55                   	push   %ebp
840035a6:	89 e5                	mov    %esp,%ebp
840035a8:	53                   	push   %ebx
840035a9:	83 ec 24             	sub    $0x24,%esp
840035ac:	8b 45 0c             	mov    0xc(%ebp),%eax
840035af:	83 c0 1b             	add    $0x1b,%eax
840035b2:	83 c0 28             	add    $0x28,%eax
840035b5:	89 45 ec             	mov    %eax,-0x14(%ebp)
840035b8:	c7 45 e8 50 56 00 84 	movl   $0x84005650,-0x18(%ebp)
840035bf:	8b 45 0c             	mov    0xc(%ebp),%eax
840035c2:	0f b6 40 18          	movzbl 0x18(%eax),%eax
840035c6:	0f be c0             	movsbl %al,%eax
840035c9:	85 c0                	test   %eax,%eax
840035cb:	0f 84 00 03 00 00    	je     840038d1 <_printf_i+0x32c>
840035d1:	85 c0                	test   %eax,%eax
840035d3:	0f 88 52 03 00 00    	js     8400392b <_printf_i+0x386>
840035d9:	83 f8 78             	cmp    $0x78,%eax
840035dc:	0f 8f 49 03 00 00    	jg     8400392b <_printf_i+0x386>
840035e2:	83 f8 58             	cmp    $0x58,%eax
840035e5:	0f 8c 40 03 00 00    	jl     8400392b <_printf_i+0x386>
840035eb:	83 e8 58             	sub    $0x58,%eax
840035ee:	83 f8 20             	cmp    $0x20,%eax
840035f1:	0f 87 34 03 00 00    	ja     8400392b <_printf_i+0x386>
840035f7:	8b 04 85 74 56 00 84 	mov    -0x7bffa98c(,%eax,4),%eax
840035fe:	ff e0                	jmp    *%eax
84003600:	8b 45 18             	mov    0x18(%ebp),%eax
84003603:	8b 00                	mov    (%eax),%eax
84003605:	8d 48 04             	lea    0x4(%eax),%ecx
84003608:	8b 55 18             	mov    0x18(%ebp),%edx
8400360b:	89 0a                	mov    %ecx,(%edx)
8400360d:	8b 00                	mov    (%eax),%eax
8400360f:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
84003613:	89 c2                	mov    %eax,%edx
84003615:	8b 45 ec             	mov    -0x14(%ebp),%eax
84003618:	88 10                	mov    %dl,(%eax)
8400361a:	8b 45 0c             	mov    0xc(%ebp),%eax
8400361d:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
84003624:	e9 1c 03 00 00       	jmp    84003945 <_printf_i+0x3a0>
84003629:	8b 45 0c             	mov    0xc(%ebp),%eax
8400362c:	8b 00                	mov    (%eax),%eax
8400362e:	25 80 00 00 00       	and    $0x80,%eax
84003633:	85 c0                	test   %eax,%eax
84003635:	74 11                	je     84003648 <_printf_i+0xa3>
84003637:	8b 45 18             	mov    0x18(%ebp),%eax
8400363a:	8b 00                	mov    (%eax),%eax
8400363c:	8d 48 04             	lea    0x4(%eax),%ecx
8400363f:	8b 55 18             	mov    0x18(%ebp),%edx
84003642:	89 0a                	mov    %ecx,(%edx)
84003644:	8b 00                	mov    (%eax),%eax
84003646:	eb 2d                	jmp    84003675 <_printf_i+0xd0>
84003648:	8b 45 0c             	mov    0xc(%ebp),%eax
8400364b:	8b 00                	mov    (%eax),%eax
8400364d:	83 e0 40             	and    $0x40,%eax
84003650:	85 c0                	test   %eax,%eax
84003652:	74 12                	je     84003666 <_printf_i+0xc1>
84003654:	8b 45 18             	mov    0x18(%ebp),%eax
84003657:	8b 00                	mov    (%eax),%eax
84003659:	8d 48 04             	lea    0x4(%eax),%ecx
8400365c:	8b 55 18             	mov    0x18(%ebp),%edx
8400365f:	89 0a                	mov    %ecx,(%edx)
84003661:	8b 00                	mov    (%eax),%eax
84003663:	98                   	cwtl   
84003664:	eb 0f                	jmp    84003675 <_printf_i+0xd0>
84003666:	8b 45 18             	mov    0x18(%ebp),%eax
84003669:	8b 00                	mov    (%eax),%eax
8400366b:	8d 48 04             	lea    0x4(%eax),%ecx
8400366e:	8b 55 18             	mov    0x18(%ebp),%edx
84003671:	89 0a                	mov    %ecx,(%edx)
84003673:	8b 00                	mov    (%eax),%eax
84003675:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003678:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400367b:	85 c0                	test   %eax,%eax
8400367d:	79 0a                	jns    84003689 <_printf_i+0xe4>
8400367f:	f7 5d f4             	negl   -0xc(%ebp)
84003682:	8b 45 0c             	mov    0xc(%ebp),%eax
84003685:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
84003689:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
84003690:	e9 28 01 00 00       	jmp    840037bd <_printf_i+0x218>
84003695:	8b 45 0c             	mov    0xc(%ebp),%eax
84003698:	8b 00                	mov    (%eax),%eax
8400369a:	25 80 00 00 00       	and    $0x80,%eax
8400369f:	85 c0                	test   %eax,%eax
840036a1:	74 11                	je     840036b4 <_printf_i+0x10f>
840036a3:	8b 45 18             	mov    0x18(%ebp),%eax
840036a6:	8b 00                	mov    (%eax),%eax
840036a8:	8d 48 04             	lea    0x4(%eax),%ecx
840036ab:	8b 55 18             	mov    0x18(%ebp),%edx
840036ae:	89 0a                	mov    %ecx,(%edx)
840036b0:	8b 00                	mov    (%eax),%eax
840036b2:	eb 2f                	jmp    840036e3 <_printf_i+0x13e>
840036b4:	8b 45 0c             	mov    0xc(%ebp),%eax
840036b7:	8b 00                	mov    (%eax),%eax
840036b9:	83 e0 40             	and    $0x40,%eax
840036bc:	85 c0                	test   %eax,%eax
840036be:	74 14                	je     840036d4 <_printf_i+0x12f>
840036c0:	8b 45 18             	mov    0x18(%ebp),%eax
840036c3:	8b 00                	mov    (%eax),%eax
840036c5:	8d 48 04             	lea    0x4(%eax),%ecx
840036c8:	8b 55 18             	mov    0x18(%ebp),%edx
840036cb:	89 0a                	mov    %ecx,(%edx)
840036cd:	8b 00                	mov    (%eax),%eax
840036cf:	0f b7 c0             	movzwl %ax,%eax
840036d2:	eb 0f                	jmp    840036e3 <_printf_i+0x13e>
840036d4:	8b 45 18             	mov    0x18(%ebp),%eax
840036d7:	8b 00                	mov    (%eax),%eax
840036d9:	8d 48 04             	lea    0x4(%eax),%ecx
840036dc:	8b 55 18             	mov    0x18(%ebp),%edx
840036df:	89 0a                	mov    %ecx,(%edx)
840036e1:	8b 00                	mov    (%eax),%eax
840036e3:	89 45 f4             	mov    %eax,-0xc(%ebp)
840036e6:	8b 45 0c             	mov    0xc(%ebp),%eax
840036e9:	0f b6 40 18          	movzbl 0x18(%eax),%eax
840036ed:	3c 6f                	cmp    $0x6f,%al
840036ef:	75 07                	jne    840036f8 <_printf_i+0x153>
840036f1:	b8 08 00 00 00       	mov    $0x8,%eax
840036f6:	eb 05                	jmp    840036fd <_printf_i+0x158>
840036f8:	b8 0a 00 00 00       	mov    $0xa,%eax
840036fd:	89 45 f0             	mov    %eax,-0x10(%ebp)
84003700:	e9 b1 00 00 00       	jmp    840037b6 <_printf_i+0x211>
84003705:	8b 45 0c             	mov    0xc(%ebp),%eax
84003708:	c6 40 45 58          	movb   $0x58,0x45(%eax)
8400370c:	eb 1d                	jmp    8400372b <_printf_i+0x186>
8400370e:	8b 45 0c             	mov    0xc(%ebp),%eax
84003711:	8b 00                	mov    (%eax),%eax
84003713:	83 c8 20             	or     $0x20,%eax
84003716:	89 c2                	mov    %eax,%edx
84003718:	8b 45 0c             	mov    0xc(%ebp),%eax
8400371b:	89 10                	mov    %edx,(%eax)
8400371d:	8b 45 0c             	mov    0xc(%ebp),%eax
84003720:	c6 40 45 78          	movb   $0x78,0x45(%eax)
84003724:	c7 45 e8 61 56 00 84 	movl   $0x84005661,-0x18(%ebp)
8400372b:	8b 45 0c             	mov    0xc(%ebp),%eax
8400372e:	8b 00                	mov    (%eax),%eax
84003730:	25 80 00 00 00       	and    $0x80,%eax
84003735:	85 c0                	test   %eax,%eax
84003737:	74 11                	je     8400374a <_printf_i+0x1a5>
84003739:	8b 45 18             	mov    0x18(%ebp),%eax
8400373c:	8b 00                	mov    (%eax),%eax
8400373e:	8d 48 04             	lea    0x4(%eax),%ecx
84003741:	8b 55 18             	mov    0x18(%ebp),%edx
84003744:	89 0a                	mov    %ecx,(%edx)
84003746:	8b 00                	mov    (%eax),%eax
84003748:	eb 2f                	jmp    84003779 <_printf_i+0x1d4>
8400374a:	8b 45 0c             	mov    0xc(%ebp),%eax
8400374d:	8b 00                	mov    (%eax),%eax
8400374f:	83 e0 40             	and    $0x40,%eax
84003752:	85 c0                	test   %eax,%eax
84003754:	74 14                	je     8400376a <_printf_i+0x1c5>
84003756:	8b 45 18             	mov    0x18(%ebp),%eax
84003759:	8b 00                	mov    (%eax),%eax
8400375b:	8d 48 04             	lea    0x4(%eax),%ecx
8400375e:	8b 55 18             	mov    0x18(%ebp),%edx
84003761:	89 0a                	mov    %ecx,(%edx)
84003763:	8b 00                	mov    (%eax),%eax
84003765:	0f b7 c0             	movzwl %ax,%eax
84003768:	eb 0f                	jmp    84003779 <_printf_i+0x1d4>
8400376a:	8b 45 18             	mov    0x18(%ebp),%eax
8400376d:	8b 00                	mov    (%eax),%eax
8400376f:	8d 48 04             	lea    0x4(%eax),%ecx
84003772:	8b 55 18             	mov    0x18(%ebp),%edx
84003775:	89 0a                	mov    %ecx,(%edx)
84003777:	8b 00                	mov    (%eax),%eax
84003779:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400377c:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
84003783:	8b 45 0c             	mov    0xc(%ebp),%eax
84003786:	8b 00                	mov    (%eax),%eax
84003788:	83 e0 01             	and    $0x1,%eax
8400378b:	85 c0                	test   %eax,%eax
8400378d:	74 0f                	je     8400379e <_printf_i+0x1f9>
8400378f:	8b 45 0c             	mov    0xc(%ebp),%eax
84003792:	8b 00                	mov    (%eax),%eax
84003794:	83 c8 20             	or     $0x20,%eax
84003797:	89 c2                	mov    %eax,%edx
84003799:	8b 45 0c             	mov    0xc(%ebp),%eax
8400379c:	89 10                	mov    %edx,(%eax)
8400379e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
840037a2:	75 11                	jne    840037b5 <_printf_i+0x210>
840037a4:	8b 45 0c             	mov    0xc(%ebp),%eax
840037a7:	8b 00                	mov    (%eax),%eax
840037a9:	83 e0 df             	and    $0xffffffdf,%eax
840037ac:	89 c2                	mov    %eax,%edx
840037ae:	8b 45 0c             	mov    0xc(%ebp),%eax
840037b1:	89 10                	mov    %edx,(%eax)
840037b3:	eb 01                	jmp    840037b6 <_printf_i+0x211>
840037b5:	90                   	nop
840037b6:	8b 45 0c             	mov    0xc(%ebp),%eax
840037b9:	c6 40 43 00          	movb   $0x0,0x43(%eax)
840037bd:	8b 45 0c             	mov    0xc(%ebp),%eax
840037c0:	8b 50 04             	mov    0x4(%eax),%edx
840037c3:	8b 45 0c             	mov    0xc(%ebp),%eax
840037c6:	89 50 08             	mov    %edx,0x8(%eax)
840037c9:	8b 45 0c             	mov    0xc(%ebp),%eax
840037cc:	8b 40 08             	mov    0x8(%eax),%eax
840037cf:	85 c0                	test   %eax,%eax
840037d1:	78 0f                	js     840037e2 <_printf_i+0x23d>
840037d3:	8b 45 0c             	mov    0xc(%ebp),%eax
840037d6:	8b 00                	mov    (%eax),%eax
840037d8:	83 e0 fb             	and    $0xfffffffb,%eax
840037db:	89 c2                	mov    %eax,%edx
840037dd:	8b 45 0c             	mov    0xc(%ebp),%eax
840037e0:	89 10                	mov    %edx,(%eax)
840037e2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
840037e6:	75 0a                	jne    840037f2 <_printf_i+0x24d>
840037e8:	8b 45 0c             	mov    0xc(%ebp),%eax
840037eb:	8b 40 04             	mov    0x4(%eax),%eax
840037ee:	85 c0                	test   %eax,%eax
840037f0:	74 34                	je     84003826 <_printf_i+0x281>
840037f2:	8b 4d f0             	mov    -0x10(%ebp),%ecx
840037f5:	8b 45 f4             	mov    -0xc(%ebp),%eax
840037f8:	ba 00 00 00 00       	mov    $0x0,%edx
840037fd:	f7 f1                	div    %ecx
840037ff:	8b 45 e8             	mov    -0x18(%ebp),%eax
84003802:	01 d0                	add    %edx,%eax
84003804:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
84003808:	0f b6 10             	movzbl (%eax),%edx
8400380b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8400380e:	88 10                	mov    %dl,(%eax)
84003810:	8b 5d f0             	mov    -0x10(%ebp),%ebx
84003813:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003816:	ba 00 00 00 00       	mov    $0x0,%edx
8400381b:	f7 f3                	div    %ebx
8400381d:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003820:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84003824:	75 cc                	jne    840037f2 <_printf_i+0x24d>
84003826:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
8400382a:	75 26                	jne    84003852 <_printf_i+0x2ad>
8400382c:	8b 45 0c             	mov    0xc(%ebp),%eax
8400382f:	8b 00                	mov    (%eax),%eax
84003831:	83 e0 01             	and    $0x1,%eax
84003834:	85 c0                	test   %eax,%eax
84003836:	74 1a                	je     84003852 <_printf_i+0x2ad>
84003838:	8b 45 0c             	mov    0xc(%ebp),%eax
8400383b:	8b 50 04             	mov    0x4(%eax),%edx
8400383e:	8b 45 0c             	mov    0xc(%ebp),%eax
84003841:	8b 40 10             	mov    0x10(%eax),%eax
84003844:	39 c2                	cmp    %eax,%edx
84003846:	7f 0a                	jg     84003852 <_printf_i+0x2ad>
84003848:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8400384c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8400384f:	c6 00 30             	movb   $0x30,(%eax)
84003852:	8b 45 0c             	mov    0xc(%ebp),%eax
84003855:	83 c0 1b             	add    $0x1b,%eax
84003858:	83 c0 28             	add    $0x28,%eax
8400385b:	2b 45 ec             	sub    -0x14(%ebp),%eax
8400385e:	89 c2                	mov    %eax,%edx
84003860:	8b 45 0c             	mov    0xc(%ebp),%eax
84003863:	89 50 10             	mov    %edx,0x10(%eax)
84003866:	e9 e2 00 00 00       	jmp    8400394d <_printf_i+0x3a8>
8400386b:	8b 45 0c             	mov    0xc(%ebp),%eax
8400386e:	8b 00                	mov    (%eax),%eax
84003870:	25 80 00 00 00       	and    $0x80,%eax
84003875:	85 c0                	test   %eax,%eax
84003877:	74 19                	je     84003892 <_printf_i+0x2ed>
84003879:	8b 45 18             	mov    0x18(%ebp),%eax
8400387c:	8b 00                	mov    (%eax),%eax
8400387e:	8d 48 04             	lea    0x4(%eax),%ecx
84003881:	8b 55 18             	mov    0x18(%ebp),%edx
84003884:	89 0a                	mov    %ecx,(%edx)
84003886:	8b 00                	mov    (%eax),%eax
84003888:	8b 55 0c             	mov    0xc(%ebp),%edx
8400388b:	8b 52 14             	mov    0x14(%edx),%edx
8400388e:	89 10                	mov    %edx,(%eax)
84003890:	eb 3f                	jmp    840038d1 <_printf_i+0x32c>
84003892:	8b 45 0c             	mov    0xc(%ebp),%eax
84003895:	8b 00                	mov    (%eax),%eax
84003897:	83 e0 40             	and    $0x40,%eax
8400389a:	85 c0                	test   %eax,%eax
8400389c:	74 1c                	je     840038ba <_printf_i+0x315>
8400389e:	8b 45 0c             	mov    0xc(%ebp),%eax
840038a1:	8b 58 14             	mov    0x14(%eax),%ebx
840038a4:	8b 45 18             	mov    0x18(%ebp),%eax
840038a7:	8b 00                	mov    (%eax),%eax
840038a9:	8d 48 04             	lea    0x4(%eax),%ecx
840038ac:	8b 55 18             	mov    0x18(%ebp),%edx
840038af:	89 0a                	mov    %ecx,(%edx)
840038b1:	8b 00                	mov    (%eax),%eax
840038b3:	89 da                	mov    %ebx,%edx
840038b5:	66 89 10             	mov    %dx,(%eax)
840038b8:	eb 17                	jmp    840038d1 <_printf_i+0x32c>
840038ba:	8b 45 18             	mov    0x18(%ebp),%eax
840038bd:	8b 00                	mov    (%eax),%eax
840038bf:	8d 48 04             	lea    0x4(%eax),%ecx
840038c2:	8b 55 18             	mov    0x18(%ebp),%edx
840038c5:	89 0a                	mov    %ecx,(%edx)
840038c7:	8b 00                	mov    (%eax),%eax
840038c9:	8b 55 0c             	mov    0xc(%ebp),%edx
840038cc:	8b 52 14             	mov    0x14(%edx),%edx
840038cf:	89 10                	mov    %edx,(%eax)
840038d1:	8b 45 0c             	mov    0xc(%ebp),%eax
840038d4:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
840038db:	eb 70                	jmp    8400394d <_printf_i+0x3a8>
840038dd:	8b 45 18             	mov    0x18(%ebp),%eax
840038e0:	8b 00                	mov    (%eax),%eax
840038e2:	8d 48 04             	lea    0x4(%eax),%ecx
840038e5:	8b 55 18             	mov    0x18(%ebp),%edx
840038e8:	89 0a                	mov    %ecx,(%edx)
840038ea:	8b 00                	mov    (%eax),%eax
840038ec:	89 45 ec             	mov    %eax,-0x14(%ebp)
840038ef:	8b 45 0c             	mov    0xc(%ebp),%eax
840038f2:	8b 40 04             	mov    0x4(%eax),%eax
840038f5:	83 ec 04             	sub    $0x4,%esp
840038f8:	50                   	push   %eax
840038f9:	6a 00                	push   $0x0
840038fb:	ff 75 ec             	push   -0x14(%ebp)
840038fe:	e8 fd 0d 00 00       	call   84004700 <memchr>
84003903:	83 c4 10             	add    $0x10,%esp
84003906:	89 45 e0             	mov    %eax,-0x20(%ebp)
84003909:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8400390d:	74 0e                	je     8400391d <_printf_i+0x378>
8400390f:	8b 45 e0             	mov    -0x20(%ebp),%eax
84003912:	2b 45 ec             	sub    -0x14(%ebp),%eax
84003915:	89 c2                	mov    %eax,%edx
84003917:	8b 45 0c             	mov    0xc(%ebp),%eax
8400391a:	89 50 04             	mov    %edx,0x4(%eax)
8400391d:	8b 45 0c             	mov    0xc(%ebp),%eax
84003920:	8b 50 04             	mov    0x4(%eax),%edx
84003923:	8b 45 0c             	mov    0xc(%ebp),%eax
84003926:	89 50 10             	mov    %edx,0x10(%eax)
84003929:	eb 1a                	jmp    84003945 <_printf_i+0x3a0>
8400392b:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8400392f:	8b 45 0c             	mov    0xc(%ebp),%eax
84003932:	0f b6 50 18          	movzbl 0x18(%eax),%edx
84003936:	8b 45 ec             	mov    -0x14(%ebp),%eax
84003939:	88 10                	mov    %dl,(%eax)
8400393b:	8b 45 0c             	mov    0xc(%ebp),%eax
8400393e:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
84003945:	8b 45 0c             	mov    0xc(%ebp),%eax
84003948:	c6 40 43 00          	movb   $0x0,0x43(%eax)
8400394c:	90                   	nop
8400394d:	83 ec 0c             	sub    $0xc,%esp
84003950:	ff 75 14             	push   0x14(%ebp)
84003953:	ff 75 10             	push   0x10(%ebp)
84003956:	8d 45 d8             	lea    -0x28(%ebp),%eax
84003959:	50                   	push   %eax
8400395a:	ff 75 0c             	push   0xc(%ebp)
8400395d:	ff 75 08             	push   0x8(%ebp)
84003960:	e8 a5 fa ff ff       	call   8400340a <_printf_common>
84003965:	83 c4 20             	add    $0x20,%esp
84003968:	89 45 dc             	mov    %eax,-0x24(%ebp)
8400396b:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
8400396f:	74 72                	je     840039e3 <_printf_i+0x43e>
84003971:	8b 45 0c             	mov    0xc(%ebp),%eax
84003974:	8b 40 10             	mov    0x10(%eax),%eax
84003977:	50                   	push   %eax
84003978:	ff 75 ec             	push   -0x14(%ebp)
8400397b:	ff 75 10             	push   0x10(%ebp)
8400397e:	ff 75 08             	push   0x8(%ebp)
84003981:	8b 45 14             	mov    0x14(%ebp),%eax
84003984:	ff d0                	call   *%eax
84003986:	83 c4 10             	add    $0x10,%esp
84003989:	83 f8 ff             	cmp    $0xffffffff,%eax
8400398c:	74 58                	je     840039e6 <_printf_i+0x441>
8400398e:	8b 45 0c             	mov    0xc(%ebp),%eax
84003991:	8b 00                	mov    (%eax),%eax
84003993:	83 e0 02             	and    $0x2,%eax
84003996:	85 c0                	test   %eax,%eax
84003998:	74 39                	je     840039d3 <_printf_i+0x42e>
8400399a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
840039a1:	eb 20                	jmp    840039c3 <_printf_i+0x41e>
840039a3:	8b 45 0c             	mov    0xc(%ebp),%eax
840039a6:	83 c0 19             	add    $0x19,%eax
840039a9:	6a 01                	push   $0x1
840039ab:	50                   	push   %eax
840039ac:	ff 75 10             	push   0x10(%ebp)
840039af:	ff 75 08             	push   0x8(%ebp)
840039b2:	8b 45 14             	mov    0x14(%ebp),%eax
840039b5:	ff d0                	call   *%eax
840039b7:	83 c4 10             	add    $0x10,%esp
840039ba:	83 f8 ff             	cmp    $0xffffffff,%eax
840039bd:	74 2a                	je     840039e9 <_printf_i+0x444>
840039bf:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
840039c3:	8b 45 0c             	mov    0xc(%ebp),%eax
840039c6:	8b 40 0c             	mov    0xc(%eax),%eax
840039c9:	8b 55 d8             	mov    -0x28(%ebp),%edx
840039cc:	29 d0                	sub    %edx,%eax
840039ce:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
840039d1:	7c d0                	jl     840039a3 <_printf_i+0x3fe>
840039d3:	8b 45 0c             	mov    0xc(%ebp),%eax
840039d6:	8b 50 0c             	mov    0xc(%eax),%edx
840039d9:	8b 45 d8             	mov    -0x28(%ebp),%eax
840039dc:	39 c2                	cmp    %eax,%edx
840039de:	0f 4d c2             	cmovge %edx,%eax
840039e1:	eb 0c                	jmp    840039ef <_printf_i+0x44a>
840039e3:	90                   	nop
840039e4:	eb 04                	jmp    840039ea <_printf_i+0x445>
840039e6:	90                   	nop
840039e7:	eb 01                	jmp    840039ea <_printf_i+0x445>
840039e9:	90                   	nop
840039ea:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
840039ef:	8b 5d fc             	mov    -0x4(%ebp),%ebx
840039f2:	c9                   	leave  
840039f3:	c3                   	ret    

840039f4 <_read_r>:
840039f4:	55                   	push   %ebp
840039f5:	89 e5                	mov    %esp,%ebp
840039f7:	83 ec 18             	sub    $0x18,%esp
840039fa:	c7 05 10 64 00 84 00 	movl   $0x0,0x84006410
84003a01:	00 00 00 
84003a04:	83 ec 04             	sub    $0x4,%esp
84003a07:	ff 75 14             	push   0x14(%ebp)
84003a0a:	ff 75 10             	push   0x10(%ebp)
84003a0d:	ff 75 0c             	push   0xc(%ebp)
84003a10:	e8 7c c7 ff ff       	call   84000191 <read>
84003a15:	83 c4 10             	add    $0x10,%esp
84003a18:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003a1b:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84003a1f:	75 14                	jne    84003a35 <_read_r+0x41>
84003a21:	a1 10 64 00 84       	mov    0x84006410,%eax
84003a26:	85 c0                	test   %eax,%eax
84003a28:	74 0b                	je     84003a35 <_read_r+0x41>
84003a2a:	8b 15 10 64 00 84    	mov    0x84006410,%edx
84003a30:	8b 45 08             	mov    0x8(%ebp),%eax
84003a33:	89 10                	mov    %edx,(%eax)
84003a35:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003a38:	c9                   	leave  
84003a39:	c3                   	ret    

84003a3a <cleanup_glue>:
84003a3a:	55                   	push   %ebp
84003a3b:	89 e5                	mov    %esp,%ebp
84003a3d:	83 ec 08             	sub    $0x8,%esp
84003a40:	8b 45 0c             	mov    0xc(%ebp),%eax
84003a43:	8b 00                	mov    (%eax),%eax
84003a45:	85 c0                	test   %eax,%eax
84003a47:	74 14                	je     84003a5d <cleanup_glue+0x23>
84003a49:	8b 45 0c             	mov    0xc(%ebp),%eax
84003a4c:	8b 00                	mov    (%eax),%eax
84003a4e:	83 ec 08             	sub    $0x8,%esp
84003a51:	50                   	push   %eax
84003a52:	ff 75 08             	push   0x8(%ebp)
84003a55:	e8 e0 ff ff ff       	call   84003a3a <cleanup_glue>
84003a5a:	83 c4 10             	add    $0x10,%esp
84003a5d:	83 ec 08             	sub    $0x8,%esp
84003a60:	ff 75 0c             	push   0xc(%ebp)
84003a63:	ff 75 08             	push   0x8(%ebp)
84003a66:	e8 ab d8 ff ff       	call   84001316 <_free_r>
84003a6b:	83 c4 10             	add    $0x10,%esp
84003a6e:	90                   	nop
84003a6f:	c9                   	leave  
84003a70:	c3                   	ret    

84003a71 <_reclaim_reent>:
84003a71:	55                   	push   %ebp
84003a72:	89 e5                	mov    %esp,%ebp
84003a74:	83 ec 28             	sub    $0x28,%esp
84003a77:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84003a7c:	39 45 08             	cmp    %eax,0x8(%ebp)
84003a7f:	0f 84 49 01 00 00    	je     84003bce <_reclaim_reent+0x15d>
84003a85:	8b 45 08             	mov    0x8(%ebp),%eax
84003a88:	8b 40 4c             	mov    0x4c(%eax),%eax
84003a8b:	85 c0                	test   %eax,%eax
84003a8d:	74 64                	je     84003af3 <_reclaim_reent+0x82>
84003a8f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
84003a96:	eb 3e                	jmp    84003ad6 <_reclaim_reent+0x65>
84003a98:	8b 45 08             	mov    0x8(%ebp),%eax
84003a9b:	8b 50 4c             	mov    0x4c(%eax),%edx
84003a9e:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003aa1:	c1 e0 02             	shl    $0x2,%eax
84003aa4:	01 d0                	add    %edx,%eax
84003aa6:	8b 00                	mov    (%eax),%eax
84003aa8:	89 45 f0             	mov    %eax,-0x10(%ebp)
84003aab:	eb 1f                	jmp    84003acc <_reclaim_reent+0x5b>
84003aad:	8b 45 f0             	mov    -0x10(%ebp),%eax
84003ab0:	89 45 e8             	mov    %eax,-0x18(%ebp)
84003ab3:	8b 45 f0             	mov    -0x10(%ebp),%eax
84003ab6:	8b 00                	mov    (%eax),%eax
84003ab8:	89 45 f0             	mov    %eax,-0x10(%ebp)
84003abb:	83 ec 08             	sub    $0x8,%esp
84003abe:	ff 75 e8             	push   -0x18(%ebp)
84003ac1:	ff 75 08             	push   0x8(%ebp)
84003ac4:	e8 4d d8 ff ff       	call   84001316 <_free_r>
84003ac9:	83 c4 10             	add    $0x10,%esp
84003acc:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
84003ad0:	75 db                	jne    84003aad <_reclaim_reent+0x3c>
84003ad2:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
84003ad6:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003ad9:	83 f8 1f             	cmp    $0x1f,%eax
84003adc:	76 ba                	jbe    84003a98 <_reclaim_reent+0x27>
84003ade:	8b 45 08             	mov    0x8(%ebp),%eax
84003ae1:	8b 40 4c             	mov    0x4c(%eax),%eax
84003ae4:	83 ec 08             	sub    $0x8,%esp
84003ae7:	50                   	push   %eax
84003ae8:	ff 75 08             	push   0x8(%ebp)
84003aeb:	e8 26 d8 ff ff       	call   84001316 <_free_r>
84003af0:	83 c4 10             	add    $0x10,%esp
84003af3:	8b 45 08             	mov    0x8(%ebp),%eax
84003af6:	8b 40 40             	mov    0x40(%eax),%eax
84003af9:	85 c0                	test   %eax,%eax
84003afb:	74 15                	je     84003b12 <_reclaim_reent+0xa1>
84003afd:	8b 45 08             	mov    0x8(%ebp),%eax
84003b00:	8b 40 40             	mov    0x40(%eax),%eax
84003b03:	83 ec 08             	sub    $0x8,%esp
84003b06:	50                   	push   %eax
84003b07:	ff 75 08             	push   0x8(%ebp)
84003b0a:	e8 07 d8 ff ff       	call   84001316 <_free_r>
84003b0f:	83 c4 10             	add    $0x10,%esp
84003b12:	8b 45 08             	mov    0x8(%ebp),%eax
84003b15:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
84003b1b:	85 c0                	test   %eax,%eax
84003b1d:	74 50                	je     84003b6f <_reclaim_reent+0xfe>
84003b1f:	8b 45 08             	mov    0x8(%ebp),%eax
84003b22:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
84003b28:	8b 55 08             	mov    0x8(%ebp),%edx
84003b2b:	81 c2 4c 01 00 00    	add    $0x14c,%edx
84003b31:	39 d0                	cmp    %edx,%eax
84003b33:	74 3a                	je     84003b6f <_reclaim_reent+0xfe>
84003b35:	8b 45 08             	mov    0x8(%ebp),%eax
84003b38:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
84003b3e:	89 45 ec             	mov    %eax,-0x14(%ebp)
84003b41:	eb 1f                	jmp    84003b62 <_reclaim_reent+0xf1>
84003b43:	8b 45 ec             	mov    -0x14(%ebp),%eax
84003b46:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84003b49:	8b 45 ec             	mov    -0x14(%ebp),%eax
84003b4c:	8b 00                	mov    (%eax),%eax
84003b4e:	89 45 ec             	mov    %eax,-0x14(%ebp)
84003b51:	83 ec 08             	sub    $0x8,%esp
84003b54:	ff 75 e4             	push   -0x1c(%ebp)
84003b57:	ff 75 08             	push   0x8(%ebp)
84003b5a:	e8 b7 d7 ff ff       	call   84001316 <_free_r>
84003b5f:	83 c4 10             	add    $0x10,%esp
84003b62:	8b 45 08             	mov    0x8(%ebp),%eax
84003b65:	05 4c 01 00 00       	add    $0x14c,%eax
84003b6a:	39 45 ec             	cmp    %eax,-0x14(%ebp)
84003b6d:	75 d4                	jne    84003b43 <_reclaim_reent+0xd2>
84003b6f:	8b 45 08             	mov    0x8(%ebp),%eax
84003b72:	8b 40 54             	mov    0x54(%eax),%eax
84003b75:	85 c0                	test   %eax,%eax
84003b77:	74 15                	je     84003b8e <_reclaim_reent+0x11d>
84003b79:	8b 45 08             	mov    0x8(%ebp),%eax
84003b7c:	8b 40 54             	mov    0x54(%eax),%eax
84003b7f:	83 ec 08             	sub    $0x8,%esp
84003b82:	50                   	push   %eax
84003b83:	ff 75 08             	push   0x8(%ebp)
84003b86:	e8 8b d7 ff ff       	call   84001316 <_free_r>
84003b8b:	83 c4 10             	add    $0x10,%esp
84003b8e:	8b 45 08             	mov    0x8(%ebp),%eax
84003b91:	8b 40 38             	mov    0x38(%eax),%eax
84003b94:	85 c0                	test   %eax,%eax
84003b96:	74 36                	je     84003bce <_reclaim_reent+0x15d>
84003b98:	8b 45 08             	mov    0x8(%ebp),%eax
84003b9b:	8b 40 3c             	mov    0x3c(%eax),%eax
84003b9e:	83 ec 0c             	sub    $0xc,%esp
84003ba1:	ff 75 08             	push   0x8(%ebp)
84003ba4:	ff d0                	call   *%eax
84003ba6:	83 c4 10             	add    $0x10,%esp
84003ba9:	8b 45 08             	mov    0x8(%ebp),%eax
84003bac:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
84003bb2:	85 c0                	test   %eax,%eax
84003bb4:	74 18                	je     84003bce <_reclaim_reent+0x15d>
84003bb6:	8b 45 08             	mov    0x8(%ebp),%eax
84003bb9:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
84003bbf:	83 ec 08             	sub    $0x8,%esp
84003bc2:	50                   	push   %eax
84003bc3:	ff 75 08             	push   0x8(%ebp)
84003bc6:	e8 6f fe ff ff       	call   84003a3a <cleanup_glue>
84003bcb:	83 c4 10             	add    $0x10,%esp
84003bce:	90                   	nop
84003bcf:	c9                   	leave  
84003bd0:	c3                   	ret    

84003bd1 <__srget_r>:
84003bd1:	55                   	push   %ebp
84003bd2:	89 e5                	mov    %esp,%ebp
84003bd4:	53                   	push   %ebx
84003bd5:	83 ec 14             	sub    $0x14,%esp
84003bd8:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84003bdb:	8b 45 08             	mov    0x8(%ebp),%eax
84003bde:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003be1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84003be5:	74 18                	je     84003bff <__srget_r+0x2e>
84003be7:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003bea:	8b 40 38             	mov    0x38(%eax),%eax
84003bed:	85 c0                	test   %eax,%eax
84003bef:	75 0e                	jne    84003bff <__srget_r+0x2e>
84003bf1:	83 ec 0c             	sub    $0xc,%esp
84003bf4:	ff 75 f4             	push   -0xc(%ebp)
84003bf7:	e8 0d d6 ff ff       	call   84001209 <__sinit>
84003bfc:	83 c4 10             	add    $0x10,%esp
84003bff:	83 ec 08             	sub    $0x8,%esp
84003c02:	53                   	push   %ebx
84003c03:	ff 75 08             	push   0x8(%ebp)
84003c06:	e8 69 15 00 00       	call   84005174 <__srefill_r>
84003c0b:	83 c4 10             	add    $0x10,%esp
84003c0e:	85 c0                	test   %eax,%eax
84003c10:	75 18                	jne    84003c2a <__srget_r+0x59>
84003c12:	8b 43 04             	mov    0x4(%ebx),%eax
84003c15:	83 e8 01             	sub    $0x1,%eax
84003c18:	89 43 04             	mov    %eax,0x4(%ebx)
84003c1b:	8b 03                	mov    (%ebx),%eax
84003c1d:	8d 50 01             	lea    0x1(%eax),%edx
84003c20:	89 13                	mov    %edx,(%ebx)
84003c22:	0f b6 00             	movzbl (%eax),%eax
84003c25:	0f b6 c0             	movzbl %al,%eax
84003c28:	eb 05                	jmp    84003c2f <__srget_r+0x5e>
84003c2a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003c2f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84003c32:	c9                   	leave  
84003c33:	c3                   	ret    

84003c34 <__srget>:
84003c34:	55                   	push   %ebp
84003c35:	89 e5                	mov    %esp,%ebp
84003c37:	83 ec 08             	sub    $0x8,%esp
84003c3a:	8b 55 08             	mov    0x8(%ebp),%edx
84003c3d:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84003c42:	83 ec 08             	sub    $0x8,%esp
84003c45:	52                   	push   %edx
84003c46:	50                   	push   %eax
84003c47:	e8 85 ff ff ff       	call   84003bd1 <__srget_r>
84003c4c:	83 c4 10             	add    $0x10,%esp
84003c4f:	c9                   	leave  
84003c50:	c3                   	ret    

84003c51 <__swbuf_r>:
84003c51:	55                   	push   %ebp
84003c52:	89 e5                	mov    %esp,%ebp
84003c54:	57                   	push   %edi
84003c55:	56                   	push   %esi
84003c56:	53                   	push   %ebx
84003c57:	83 ec 1c             	sub    $0x1c,%esp
84003c5a:	8b 7d 0c             	mov    0xc(%ebp),%edi
84003c5d:	8b 5d 10             	mov    0x10(%ebp),%ebx
84003c60:	8b 45 08             	mov    0x8(%ebp),%eax
84003c63:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84003c66:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
84003c6a:	74 18                	je     84003c84 <__swbuf_r+0x33>
84003c6c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84003c6f:	8b 40 38             	mov    0x38(%eax),%eax
84003c72:	85 c0                	test   %eax,%eax
84003c74:	75 0e                	jne    84003c84 <__swbuf_r+0x33>
84003c76:	83 ec 0c             	sub    $0xc,%esp
84003c79:	ff 75 e4             	push   -0x1c(%ebp)
84003c7c:	e8 88 d5 ff ff       	call   84001209 <__sinit>
84003c81:	83 c4 10             	add    $0x10,%esp
84003c84:	8b 43 18             	mov    0x18(%ebx),%eax
84003c87:	89 43 08             	mov    %eax,0x8(%ebx)
84003c8a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003c8e:	98                   	cwtl   
84003c8f:	83 e0 08             	and    $0x8,%eax
84003c92:	85 c0                	test   %eax,%eax
84003c94:	74 07                	je     84003c9d <__swbuf_r+0x4c>
84003c96:	8b 43 10             	mov    0x10(%ebx),%eax
84003c99:	85 c0                	test   %eax,%eax
84003c9b:	75 1d                	jne    84003cba <__swbuf_r+0x69>
84003c9d:	83 ec 08             	sub    $0x8,%esp
84003ca0:	53                   	push   %ebx
84003ca1:	ff 75 08             	push   0x8(%ebp)
84003ca4:	e8 db 00 00 00       	call   84003d84 <__swsetup_r>
84003ca9:	83 c4 10             	add    $0x10,%esp
84003cac:	85 c0                	test   %eax,%eax
84003cae:	74 0a                	je     84003cba <__swbuf_r+0x69>
84003cb0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003cb5:	e9 a1 00 00 00       	jmp    84003d5b <__swbuf_r+0x10a>
84003cba:	89 f8                	mov    %edi,%eax
84003cbc:	0f b6 f8             	movzbl %al,%edi
84003cbf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003cc3:	98                   	cwtl   
84003cc4:	25 00 20 00 00       	and    $0x2000,%eax
84003cc9:	85 c0                	test   %eax,%eax
84003ccb:	75 14                	jne    84003ce1 <__swbuf_r+0x90>
84003ccd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003cd1:	80 cc 20             	or     $0x20,%ah
84003cd4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84003cd8:	8b 43 64             	mov    0x64(%ebx),%eax
84003cdb:	80 e4 df             	and    $0xdf,%ah
84003cde:	89 43 64             	mov    %eax,0x64(%ebx)
84003ce1:	8b 03                	mov    (%ebx),%eax
84003ce3:	8b 53 10             	mov    0x10(%ebx),%edx
84003ce6:	29 d0                	sub    %edx,%eax
84003ce8:	89 c6                	mov    %eax,%esi
84003cea:	8b 43 14             	mov    0x14(%ebx),%eax
84003ced:	39 c6                	cmp    %eax,%esi
84003cef:	7c 1f                	jl     84003d10 <__swbuf_r+0xbf>
84003cf1:	83 ec 08             	sub    $0x8,%esp
84003cf4:	53                   	push   %ebx
84003cf5:	ff 75 08             	push   0x8(%ebp)
84003cf8:	e8 86 d1 ff ff       	call   84000e83 <_fflush_r>
84003cfd:	83 c4 10             	add    $0x10,%esp
84003d00:	85 c0                	test   %eax,%eax
84003d02:	74 07                	je     84003d0b <__swbuf_r+0xba>
84003d04:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003d09:	eb 50                	jmp    84003d5b <__swbuf_r+0x10a>
84003d0b:	be 00 00 00 00       	mov    $0x0,%esi
84003d10:	8b 43 08             	mov    0x8(%ebx),%eax
84003d13:	83 e8 01             	sub    $0x1,%eax
84003d16:	89 43 08             	mov    %eax,0x8(%ebx)
84003d19:	8b 03                	mov    (%ebx),%eax
84003d1b:	8d 50 01             	lea    0x1(%eax),%edx
84003d1e:	89 13                	mov    %edx,(%ebx)
84003d20:	89 fa                	mov    %edi,%edx
84003d22:	88 10                	mov    %dl,(%eax)
84003d24:	83 c6 01             	add    $0x1,%esi
84003d27:	8b 43 14             	mov    0x14(%ebx),%eax
84003d2a:	39 c6                	cmp    %eax,%esi
84003d2c:	74 11                	je     84003d3f <__swbuf_r+0xee>
84003d2e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003d32:	98                   	cwtl   
84003d33:	83 e0 01             	and    $0x1,%eax
84003d36:	85 c0                	test   %eax,%eax
84003d38:	74 1f                	je     84003d59 <__swbuf_r+0x108>
84003d3a:	83 ff 0a             	cmp    $0xa,%edi
84003d3d:	75 1a                	jne    84003d59 <__swbuf_r+0x108>
84003d3f:	83 ec 08             	sub    $0x8,%esp
84003d42:	53                   	push   %ebx
84003d43:	ff 75 08             	push   0x8(%ebp)
84003d46:	e8 38 d1 ff ff       	call   84000e83 <_fflush_r>
84003d4b:	83 c4 10             	add    $0x10,%esp
84003d4e:	85 c0                	test   %eax,%eax
84003d50:	74 07                	je     84003d59 <__swbuf_r+0x108>
84003d52:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003d57:	eb 02                	jmp    84003d5b <__swbuf_r+0x10a>
84003d59:	89 f8                	mov    %edi,%eax
84003d5b:	8d 65 f4             	lea    -0xc(%ebp),%esp
84003d5e:	5b                   	pop    %ebx
84003d5f:	5e                   	pop    %esi
84003d60:	5f                   	pop    %edi
84003d61:	5d                   	pop    %ebp
84003d62:	c3                   	ret    

84003d63 <__swbuf>:
84003d63:	55                   	push   %ebp
84003d64:	89 e5                	mov    %esp,%ebp
84003d66:	83 ec 08             	sub    $0x8,%esp
84003d69:	8b 55 08             	mov    0x8(%ebp),%edx
84003d6c:	8b 4d 0c             	mov    0xc(%ebp),%ecx
84003d6f:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84003d74:	83 ec 04             	sub    $0x4,%esp
84003d77:	51                   	push   %ecx
84003d78:	52                   	push   %edx
84003d79:	50                   	push   %eax
84003d7a:	e8 d2 fe ff ff       	call   84003c51 <__swbuf_r>
84003d7f:	83 c4 10             	add    $0x10,%esp
84003d82:	c9                   	leave  
84003d83:	c3                   	ret    

84003d84 <__swsetup_r>:
84003d84:	55                   	push   %ebp
84003d85:	89 e5                	mov    %esp,%ebp
84003d87:	53                   	push   %ebx
84003d88:	83 ec 14             	sub    $0x14,%esp
84003d8b:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84003d8e:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84003d93:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003d96:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84003d9a:	74 18                	je     84003db4 <__swsetup_r+0x30>
84003d9c:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003d9f:	8b 40 38             	mov    0x38(%eax),%eax
84003da2:	85 c0                	test   %eax,%eax
84003da4:	75 0e                	jne    84003db4 <__swsetup_r+0x30>
84003da6:	83 ec 0c             	sub    $0xc,%esp
84003da9:	ff 75 f4             	push   -0xc(%ebp)
84003dac:	e8 58 d4 ff ff       	call   84001209 <__sinit>
84003db1:	83 c4 10             	add    $0x10,%esp
84003db4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003db8:	98                   	cwtl   
84003db9:	83 e0 08             	and    $0x8,%eax
84003dbc:	85 c0                	test   %eax,%eax
84003dbe:	0f 85 82 00 00 00    	jne    84003e46 <__swsetup_r+0xc2>
84003dc4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003dc8:	98                   	cwtl   
84003dc9:	83 e0 10             	and    $0x10,%eax
84003dcc:	85 c0                	test   %eax,%eax
84003dce:	75 1e                	jne    84003dee <__swsetup_r+0x6a>
84003dd0:	8b 45 08             	mov    0x8(%ebp),%eax
84003dd3:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
84003dd9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003ddd:	83 c8 40             	or     $0x40,%eax
84003de0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84003de4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003de9:	e9 ec 00 00 00       	jmp    84003eda <__swsetup_r+0x156>
84003dee:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003df2:	98                   	cwtl   
84003df3:	83 e0 04             	and    $0x4,%eax
84003df6:	85 c0                	test   %eax,%eax
84003df8:	74 41                	je     84003e3b <__swsetup_r+0xb7>
84003dfa:	8b 43 30             	mov    0x30(%ebx),%eax
84003dfd:	85 c0                	test   %eax,%eax
84003dff:	74 23                	je     84003e24 <__swsetup_r+0xa0>
84003e01:	8b 53 30             	mov    0x30(%ebx),%edx
84003e04:	8d 43 40             	lea    0x40(%ebx),%eax
84003e07:	39 c2                	cmp    %eax,%edx
84003e09:	74 12                	je     84003e1d <__swsetup_r+0x99>
84003e0b:	8b 43 30             	mov    0x30(%ebx),%eax
84003e0e:	83 ec 08             	sub    $0x8,%esp
84003e11:	50                   	push   %eax
84003e12:	ff 75 08             	push   0x8(%ebp)
84003e15:	e8 fc d4 ff ff       	call   84001316 <_free_r>
84003e1a:	83 c4 10             	add    $0x10,%esp
84003e1d:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
84003e24:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e28:	83 e0 db             	and    $0xffffffdb,%eax
84003e2b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84003e2f:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
84003e36:	8b 43 10             	mov    0x10(%ebx),%eax
84003e39:	89 03                	mov    %eax,(%ebx)
84003e3b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e3f:	83 c8 08             	or     $0x8,%eax
84003e42:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84003e46:	8b 43 10             	mov    0x10(%ebx),%eax
84003e49:	85 c0                	test   %eax,%eax
84003e4b:	75 2b                	jne    84003e78 <__swsetup_r+0xf4>
84003e4d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e51:	98                   	cwtl   
84003e52:	25 00 02 00 00       	and    $0x200,%eax
84003e57:	85 c0                	test   %eax,%eax
84003e59:	74 0e                	je     84003e69 <__swsetup_r+0xe5>
84003e5b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e5f:	98                   	cwtl   
84003e60:	25 80 00 00 00       	and    $0x80,%eax
84003e65:	85 c0                	test   %eax,%eax
84003e67:	74 0f                	je     84003e78 <__swsetup_r+0xf4>
84003e69:	83 ec 08             	sub    $0x8,%esp
84003e6c:	53                   	push   %ebx
84003e6d:	ff 75 08             	push   0x8(%ebp)
84003e70:	e8 b0 ee ff ff       	call   84002d25 <__smakebuf_r>
84003e75:	83 c4 10             	add    $0x10,%esp
84003e78:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e7c:	98                   	cwtl   
84003e7d:	83 e0 01             	and    $0x1,%eax
84003e80:	85 c0                	test   %eax,%eax
84003e82:	74 11                	je     84003e95 <__swsetup_r+0x111>
84003e84:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
84003e8b:	8b 43 14             	mov    0x14(%ebx),%eax
84003e8e:	f7 d8                	neg    %eax
84003e90:	89 43 18             	mov    %eax,0x18(%ebx)
84003e93:	eb 19                	jmp    84003eae <__swsetup_r+0x12a>
84003e95:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e99:	98                   	cwtl   
84003e9a:	83 e0 02             	and    $0x2,%eax
84003e9d:	85 c0                	test   %eax,%eax
84003e9f:	75 05                	jne    84003ea6 <__swsetup_r+0x122>
84003ea1:	8b 43 14             	mov    0x14(%ebx),%eax
84003ea4:	eb 05                	jmp    84003eab <__swsetup_r+0x127>
84003ea6:	b8 00 00 00 00       	mov    $0x0,%eax
84003eab:	89 43 08             	mov    %eax,0x8(%ebx)
84003eae:	8b 43 10             	mov    0x10(%ebx),%eax
84003eb1:	85 c0                	test   %eax,%eax
84003eb3:	75 20                	jne    84003ed5 <__swsetup_r+0x151>
84003eb5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003eb9:	98                   	cwtl   
84003eba:	25 80 00 00 00       	and    $0x80,%eax
84003ebf:	85 c0                	test   %eax,%eax
84003ec1:	74 12                	je     84003ed5 <__swsetup_r+0x151>
84003ec3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003ec7:	83 c8 40             	or     $0x40,%eax
84003eca:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84003ece:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003ed3:	eb 05                	jmp    84003eda <__swsetup_r+0x156>
84003ed5:	b8 00 00 00 00       	mov    $0x0,%eax
84003eda:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84003edd:	c9                   	leave  
84003ede:	c3                   	ret    

84003edf <__sputc_r>:
84003edf:	55                   	push   %ebp
84003ee0:	89 e5                	mov    %esp,%ebp
84003ee2:	83 ec 08             	sub    $0x8,%esp
84003ee5:	8b 45 10             	mov    0x10(%ebp),%eax
84003ee8:	8b 40 08             	mov    0x8(%eax),%eax
84003eeb:	8d 50 ff             	lea    -0x1(%eax),%edx
84003eee:	8b 45 10             	mov    0x10(%ebp),%eax
84003ef1:	89 50 08             	mov    %edx,0x8(%eax)
84003ef4:	8b 45 10             	mov    0x10(%ebp),%eax
84003ef7:	8b 40 08             	mov    0x8(%eax),%eax
84003efa:	85 c0                	test   %eax,%eax
84003efc:	79 17                	jns    84003f15 <__sputc_r+0x36>
84003efe:	8b 45 10             	mov    0x10(%ebp),%eax
84003f01:	8b 50 08             	mov    0x8(%eax),%edx
84003f04:	8b 45 10             	mov    0x10(%ebp),%eax
84003f07:	8b 40 18             	mov    0x18(%eax),%eax
84003f0a:	39 c2                	cmp    %eax,%edx
84003f0c:	7c 21                	jl     84003f2f <__sputc_r+0x50>
84003f0e:	8b 45 0c             	mov    0xc(%ebp),%eax
84003f11:	3c 0a                	cmp    $0xa,%al
84003f13:	74 1a                	je     84003f2f <__sputc_r+0x50>
84003f15:	8b 45 10             	mov    0x10(%ebp),%eax
84003f18:	8b 00                	mov    (%eax),%eax
84003f1a:	8d 48 01             	lea    0x1(%eax),%ecx
84003f1d:	8b 55 10             	mov    0x10(%ebp),%edx
84003f20:	89 0a                	mov    %ecx,(%edx)
84003f22:	8b 55 0c             	mov    0xc(%ebp),%edx
84003f25:	88 10                	mov    %dl,(%eax)
84003f27:	0f b6 00             	movzbl (%eax),%eax
84003f2a:	0f b6 c0             	movzbl %al,%eax
84003f2d:	eb 14                	jmp    84003f43 <__sputc_r+0x64>
84003f2f:	83 ec 04             	sub    $0x4,%esp
84003f32:	ff 75 10             	push   0x10(%ebp)
84003f35:	ff 75 0c             	push   0xc(%ebp)
84003f38:	ff 75 08             	push   0x8(%ebp)
84003f3b:	e8 11 fd ff ff       	call   84003c51 <__swbuf_r>
84003f40:	83 c4 10             	add    $0x10,%esp
84003f43:	c9                   	leave  
84003f44:	c3                   	ret    

84003f45 <__fputwc>:
84003f45:	55                   	push   %ebp
84003f46:	89 e5                	mov    %esp,%ebp
84003f48:	83 ec 18             	sub    $0x18,%esp
84003f4b:	e8 d8 06 00 00       	call   84004628 <__locale_mb_cur_max>
84003f50:	83 f8 01             	cmp    $0x1,%eax
84003f53:	75 1e                	jne    84003f73 <__fputwc+0x2e>
84003f55:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
84003f59:	7e 18                	jle    84003f73 <__fputwc+0x2e>
84003f5b:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
84003f62:	7f 0f                	jg     84003f73 <__fputwc+0x2e>
84003f64:	8b 45 0c             	mov    0xc(%ebp),%eax
84003f67:	88 45 ef             	mov    %al,-0x11(%ebp)
84003f6a:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
84003f71:	eb 3c                	jmp    84003faf <__fputwc+0x6a>
84003f73:	8b 45 10             	mov    0x10(%ebp),%eax
84003f76:	83 c0 5c             	add    $0x5c,%eax
84003f79:	50                   	push   %eax
84003f7a:	ff 75 0c             	push   0xc(%ebp)
84003f7d:	8d 45 ef             	lea    -0x11(%ebp),%eax
84003f80:	50                   	push   %eax
84003f81:	ff 75 08             	push   0x8(%ebp)
84003f84:	e8 a5 14 00 00       	call   8400542e <_wcrtomb_r>
84003f89:	83 c4 10             	add    $0x10,%esp
84003f8c:	89 45 f0             	mov    %eax,-0x10(%ebp)
84003f8f:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
84003f93:	75 1a                	jne    84003faf <__fputwc+0x6a>
84003f95:	8b 45 10             	mov    0x10(%ebp),%eax
84003f98:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
84003f9c:	83 c8 40             	or     $0x40,%eax
84003f9f:	89 c2                	mov    %eax,%edx
84003fa1:	8b 45 10             	mov    0x10(%ebp),%eax
84003fa4:	66 89 50 0c          	mov    %dx,0xc(%eax)
84003fa8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003fad:	eb 44                	jmp    84003ff3 <__fputwc+0xae>
84003faf:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
84003fb6:	eb 30                	jmp    84003fe8 <__fputwc+0xa3>
84003fb8:	8d 55 ef             	lea    -0x11(%ebp),%edx
84003fbb:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003fbe:	01 d0                	add    %edx,%eax
84003fc0:	0f b6 00             	movzbl (%eax),%eax
84003fc3:	0f b6 c0             	movzbl %al,%eax
84003fc6:	83 ec 04             	sub    $0x4,%esp
84003fc9:	ff 75 10             	push   0x10(%ebp)
84003fcc:	50                   	push   %eax
84003fcd:	ff 75 08             	push   0x8(%ebp)
84003fd0:	e8 0a ff ff ff       	call   84003edf <__sputc_r>
84003fd5:	83 c4 10             	add    $0x10,%esp
84003fd8:	83 f8 ff             	cmp    $0xffffffff,%eax
84003fdb:	75 07                	jne    84003fe4 <__fputwc+0x9f>
84003fdd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003fe2:	eb 0f                	jmp    84003ff3 <__fputwc+0xae>
84003fe4:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
84003fe8:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003feb:	3b 45 f0             	cmp    -0x10(%ebp),%eax
84003fee:	72 c8                	jb     84003fb8 <__fputwc+0x73>
84003ff0:	8b 45 0c             	mov    0xc(%ebp),%eax
84003ff3:	c9                   	leave  
84003ff4:	c3                   	ret    

84003ff5 <_fputwc_r>:
84003ff5:	55                   	push   %ebp
84003ff6:	89 e5                	mov    %esp,%ebp
84003ff8:	83 ec 18             	sub    $0x18,%esp
84003ffb:	8b 45 10             	mov    0x10(%ebp),%eax
84003ffe:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
84004002:	98                   	cwtl   
84004003:	25 00 20 00 00       	and    $0x2000,%eax
84004008:	85 c0                	test   %eax,%eax
8400400a:	75 24                	jne    84004030 <_fputwc_r+0x3b>
8400400c:	8b 45 10             	mov    0x10(%ebp),%eax
8400400f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
84004013:	80 cc 20             	or     $0x20,%ah
84004016:	89 c2                	mov    %eax,%edx
84004018:	8b 45 10             	mov    0x10(%ebp),%eax
8400401b:	66 89 50 0c          	mov    %dx,0xc(%eax)
8400401f:	8b 45 10             	mov    0x10(%ebp),%eax
84004022:	8b 40 64             	mov    0x64(%eax),%eax
84004025:	80 cc 20             	or     $0x20,%ah
84004028:	89 c2                	mov    %eax,%edx
8400402a:	8b 45 10             	mov    0x10(%ebp),%eax
8400402d:	89 50 64             	mov    %edx,0x64(%eax)
84004030:	83 ec 04             	sub    $0x4,%esp
84004033:	ff 75 10             	push   0x10(%ebp)
84004036:	ff 75 0c             	push   0xc(%ebp)
84004039:	ff 75 08             	push   0x8(%ebp)
8400403c:	e8 04 ff ff ff       	call   84003f45 <__fputwc>
84004041:	83 c4 10             	add    $0x10,%esp
84004044:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004047:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400404a:	c9                   	leave  
8400404b:	c3                   	ret    

8400404c <fputwc>:
8400404c:	55                   	push   %ebp
8400404d:	89 e5                	mov    %esp,%ebp
8400404f:	83 ec 18             	sub    $0x18,%esp
84004052:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84004057:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400405a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400405d:	89 45 f0             	mov    %eax,-0x10(%ebp)
84004060:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
84004064:	74 18                	je     8400407e <fputwc+0x32>
84004066:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004069:	8b 40 38             	mov    0x38(%eax),%eax
8400406c:	85 c0                	test   %eax,%eax
8400406e:	75 0e                	jne    8400407e <fputwc+0x32>
84004070:	83 ec 0c             	sub    $0xc,%esp
84004073:	ff 75 f0             	push   -0x10(%ebp)
84004076:	e8 8e d1 ff ff       	call   84001209 <__sinit>
8400407b:	83 c4 10             	add    $0x10,%esp
8400407e:	83 ec 04             	sub    $0x4,%esp
84004081:	ff 75 0c             	push   0xc(%ebp)
84004084:	ff 75 08             	push   0x8(%ebp)
84004087:	ff 75 f4             	push   -0xc(%ebp)
8400408a:	e8 66 ff ff ff       	call   84003ff5 <_fputwc_r>
8400408f:	83 c4 10             	add    $0x10,%esp
84004092:	c9                   	leave  
84004093:	c3                   	ret    

84004094 <_fstat_r>:
84004094:	55                   	push   %ebp
84004095:	89 e5                	mov    %esp,%ebp
84004097:	83 ec 18             	sub    $0x18,%esp
8400409a:	c7 05 10 64 00 84 00 	movl   $0x0,0x84006410
840040a1:	00 00 00 
840040a4:	83 ec 08             	sub    $0x8,%esp
840040a7:	ff 75 10             	push   0x10(%ebp)
840040aa:	ff 75 0c             	push   0xc(%ebp)
840040ad:	e8 a8 c1 ff ff       	call   8400025a <fstat>
840040b2:	83 c4 10             	add    $0x10,%esp
840040b5:	89 45 f4             	mov    %eax,-0xc(%ebp)
840040b8:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
840040bc:	75 14                	jne    840040d2 <_fstat_r+0x3e>
840040be:	a1 10 64 00 84       	mov    0x84006410,%eax
840040c3:	85 c0                	test   %eax,%eax
840040c5:	74 0b                	je     840040d2 <_fstat_r+0x3e>
840040c7:	8b 15 10 64 00 84    	mov    0x84006410,%edx
840040cd:	8b 45 08             	mov    0x8(%ebp),%eax
840040d0:	89 10                	mov    %edx,(%eax)
840040d2:	8b 45 f4             	mov    -0xc(%ebp),%eax
840040d5:	c9                   	leave  
840040d6:	c3                   	ret    

840040d7 <__sfvwrite_r>:
840040d7:	55                   	push   %ebp
840040d8:	89 e5                	mov    %esp,%ebp
840040da:	57                   	push   %edi
840040db:	56                   	push   %esi
840040dc:	53                   	push   %ebx
840040dd:	83 ec 3c             	sub    $0x3c,%esp
840040e0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
840040e3:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
840040ea:	8b 45 10             	mov    0x10(%ebp),%eax
840040ed:	8b 78 08             	mov    0x8(%eax),%edi
840040f0:	85 ff                	test   %edi,%edi
840040f2:	75 0a                	jne    840040fe <__sfvwrite_r+0x27>
840040f4:	b8 00 00 00 00       	mov    $0x0,%eax
840040f9:	e9 6f 04 00 00       	jmp    8400456d <__sfvwrite_r+0x496>
840040fe:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84004102:	98                   	cwtl   
84004103:	83 e0 08             	and    $0x8,%eax
84004106:	85 c0                	test   %eax,%eax
84004108:	74 07                	je     84004111 <__sfvwrite_r+0x3a>
8400410a:	8b 43 10             	mov    0x10(%ebx),%eax
8400410d:	85 c0                	test   %eax,%eax
8400410f:	75 1d                	jne    8400412e <__sfvwrite_r+0x57>
84004111:	83 ec 08             	sub    $0x8,%esp
84004114:	53                   	push   %ebx
84004115:	ff 75 08             	push   0x8(%ebp)
84004118:	e8 67 fc ff ff       	call   84003d84 <__swsetup_r>
8400411d:	83 c4 10             	add    $0x10,%esp
84004120:	85 c0                	test   %eax,%eax
84004122:	74 0a                	je     8400412e <__sfvwrite_r+0x57>
84004124:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84004129:	e9 3f 04 00 00       	jmp    8400456d <__sfvwrite_r+0x496>
8400412e:	8b 45 10             	mov    0x10(%ebp),%eax
84004131:	8b 00                	mov    (%eax),%eax
84004133:	89 45 c0             	mov    %eax,-0x40(%ebp)
84004136:	bf 00 00 00 00       	mov    $0x0,%edi
8400413b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400413f:	98                   	cwtl   
84004140:	83 e0 02             	and    $0x2,%eax
84004143:	85 c0                	test   %eax,%eax
84004145:	74 68                	je     840041af <__sfvwrite_r+0xd8>
84004147:	eb 11                	jmp    8400415a <__sfvwrite_r+0x83>
84004149:	8b 45 c0             	mov    -0x40(%ebp),%eax
8400414c:	8b 08                	mov    (%eax),%ecx
8400414e:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
84004151:	8b 78 04             	mov    0x4(%eax),%edi
84004154:	83 c0 08             	add    $0x8,%eax
84004157:	89 45 c0             	mov    %eax,-0x40(%ebp)
8400415a:	85 ff                	test   %edi,%edi
8400415c:	74 eb                	je     84004149 <__sfvwrite_r+0x72>
8400415e:	8b 4b 24             	mov    0x24(%ebx),%ecx
84004161:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
84004166:	39 c7                	cmp    %eax,%edi
84004168:	0f 46 c7             	cmovbe %edi,%eax
8400416b:	89 c2                	mov    %eax,%edx
8400416d:	8b 43 1c             	mov    0x1c(%ebx),%eax
84004170:	52                   	push   %edx
84004171:	ff 75 c4             	push   -0x3c(%ebp)
84004174:	50                   	push   %eax
84004175:	ff 75 08             	push   0x8(%ebp)
84004178:	ff d1                	call   *%ecx
8400417a:	83 c4 10             	add    $0x10,%esp
8400417d:	89 c6                	mov    %eax,%esi
8400417f:	85 f6                	test   %esi,%esi
84004181:	0f 8e cf 03 00 00    	jle    84004556 <__sfvwrite_r+0x47f>
84004187:	89 f0                	mov    %esi,%eax
84004189:	01 45 c4             	add    %eax,-0x3c(%ebp)
8400418c:	89 f0                	mov    %esi,%eax
8400418e:	29 c7                	sub    %eax,%edi
84004190:	8b 45 10             	mov    0x10(%ebp),%eax
84004193:	8b 40 08             	mov    0x8(%eax),%eax
84004196:	89 f2                	mov    %esi,%edx
84004198:	29 d0                	sub    %edx,%eax
8400419a:	8b 4d 10             	mov    0x10(%ebp),%ecx
8400419d:	89 41 08             	mov    %eax,0x8(%ecx)
840041a0:	8b 45 10             	mov    0x10(%ebp),%eax
840041a3:	8b 40 08             	mov    0x8(%eax),%eax
840041a6:	85 c0                	test   %eax,%eax
840041a8:	75 b0                	jne    8400415a <__sfvwrite_r+0x83>
840041aa:	e9 a0 03 00 00       	jmp    8400454f <__sfvwrite_r+0x478>
840041af:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840041b3:	98                   	cwtl   
840041b4:	83 e0 01             	and    $0x1,%eax
840041b7:	85 c0                	test   %eax,%eax
840041b9:	0f 85 44 02 00 00    	jne    84004403 <__sfvwrite_r+0x32c>
840041bf:	eb 11                	jmp    840041d2 <__sfvwrite_r+0xfb>
840041c1:	8b 45 c0             	mov    -0x40(%ebp),%eax
840041c4:	8b 08                	mov    (%eax),%ecx
840041c6:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
840041c9:	8b 78 04             	mov    0x4(%eax),%edi
840041cc:	83 c0 08             	add    $0x8,%eax
840041cf:	89 45 c0             	mov    %eax,-0x40(%ebp)
840041d2:	85 ff                	test   %edi,%edi
840041d4:	74 eb                	je     840041c1 <__sfvwrite_r+0xea>
840041d6:	8b 73 08             	mov    0x8(%ebx),%esi
840041d9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840041dd:	98                   	cwtl   
840041de:	25 00 02 00 00       	and    $0x200,%eax
840041e3:	85 c0                	test   %eax,%eax
840041e5:	0f 84 4f 01 00 00    	je     8400433a <__sfvwrite_r+0x263>
840041eb:	89 f0                	mov    %esi,%eax
840041ed:	39 c7                	cmp    %eax,%edi
840041ef:	0f 82 12 01 00 00    	jb     84004307 <__sfvwrite_r+0x230>
840041f5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840041f9:	98                   	cwtl   
840041fa:	25 80 04 00 00       	and    $0x480,%eax
840041ff:	85 c0                	test   %eax,%eax
84004201:	0f 84 00 01 00 00    	je     84004307 <__sfvwrite_r+0x230>
84004207:	8b 03                	mov    (%ebx),%eax
84004209:	8b 53 10             	mov    0x10(%ebx),%edx
8400420c:	29 d0                	sub    %edx,%eax
8400420e:	89 45 d0             	mov    %eax,-0x30(%ebp)
84004211:	8b 53 14             	mov    0x14(%ebx),%edx
84004214:	89 d0                	mov    %edx,%eax
84004216:	01 c0                	add    %eax,%eax
84004218:	01 d0                	add    %edx,%eax
8400421a:	89 c2                	mov    %eax,%edx
8400421c:	c1 ea 1f             	shr    $0x1f,%edx
8400421f:	01 d0                	add    %edx,%eax
84004221:	d1 f8                	sar    %eax
84004223:	89 45 d8             	mov    %eax,-0x28(%ebp)
84004226:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004229:	01 f8                	add    %edi,%eax
8400422b:	8d 50 01             	lea    0x1(%eax),%edx
8400422e:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004231:	39 c2                	cmp    %eax,%edx
84004233:	76 0b                	jbe    84004240 <__sfvwrite_r+0x169>
84004235:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004238:	01 f8                	add    %edi,%eax
8400423a:	83 c0 01             	add    $0x1,%eax
8400423d:	89 45 d8             	mov    %eax,-0x28(%ebp)
84004240:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84004244:	98                   	cwtl   
84004245:	25 00 04 00 00       	and    $0x400,%eax
8400424a:	85 c0                	test   %eax,%eax
8400424c:	74 4f                	je     8400429d <__sfvwrite_r+0x1c6>
8400424e:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004251:	83 ec 08             	sub    $0x8,%esp
84004254:	50                   	push   %eax
84004255:	ff 75 08             	push   0x8(%ebp)
84004258:	e8 e0 d9 ff ff       	call   84001c3d <_malloc_r>
8400425d:	83 c4 10             	add    $0x10,%esp
84004260:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004263:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
84004267:	75 0e                	jne    84004277 <__sfvwrite_r+0x1a0>
84004269:	8b 45 08             	mov    0x8(%ebp),%eax
8400426c:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
84004272:	e9 e6 02 00 00       	jmp    8400455d <__sfvwrite_r+0x486>
84004277:	8b 55 d0             	mov    -0x30(%ebp),%edx
8400427a:	8b 43 10             	mov    0x10(%ebx),%eax
8400427d:	83 ec 04             	sub    $0x4,%esp
84004280:	52                   	push   %edx
84004281:	50                   	push   %eax
84004282:	ff 75 dc             	push   -0x24(%ebp)
84004285:	e8 0e 05 00 00       	call   84004798 <memcpy>
8400428a:	83 c4 10             	add    $0x10,%esp
8400428d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84004291:	66 25 7f fb          	and    $0xfb7f,%ax
84004295:	0c 80                	or     $0x80,%al
84004297:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8400429b:	eb 49                	jmp    840042e6 <__sfvwrite_r+0x20f>
8400429d:	8b 55 d8             	mov    -0x28(%ebp),%edx
840042a0:	8b 43 10             	mov    0x10(%ebx),%eax
840042a3:	83 ec 04             	sub    $0x4,%esp
840042a6:	52                   	push   %edx
840042a7:	50                   	push   %eax
840042a8:	ff 75 08             	push   0x8(%ebp)
840042ab:	e8 bd 05 00 00       	call   8400486d <_realloc_r>
840042b0:	83 c4 10             	add    $0x10,%esp
840042b3:	89 45 dc             	mov    %eax,-0x24(%ebp)
840042b6:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
840042ba:	75 2a                	jne    840042e6 <__sfvwrite_r+0x20f>
840042bc:	8b 43 10             	mov    0x10(%ebx),%eax
840042bf:	83 ec 08             	sub    $0x8,%esp
840042c2:	50                   	push   %eax
840042c3:	ff 75 08             	push   0x8(%ebp)
840042c6:	e8 4b d0 ff ff       	call   84001316 <_free_r>
840042cb:	83 c4 10             	add    $0x10,%esp
840042ce:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840042d2:	24 7f                	and    $0x7f,%al
840042d4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840042d8:	8b 45 08             	mov    0x8(%ebp),%eax
840042db:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
840042e1:	e9 77 02 00 00       	jmp    8400455d <__sfvwrite_r+0x486>
840042e6:	8b 45 dc             	mov    -0x24(%ebp),%eax
840042e9:	89 43 10             	mov    %eax,0x10(%ebx)
840042ec:	8b 55 d0             	mov    -0x30(%ebp),%edx
840042ef:	8b 45 dc             	mov    -0x24(%ebp),%eax
840042f2:	01 d0                	add    %edx,%eax
840042f4:	89 03                	mov    %eax,(%ebx)
840042f6:	8b 45 d8             	mov    -0x28(%ebp),%eax
840042f9:	89 43 14             	mov    %eax,0x14(%ebx)
840042fc:	89 fe                	mov    %edi,%esi
840042fe:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004301:	2b 45 d0             	sub    -0x30(%ebp),%eax
84004304:	89 43 08             	mov    %eax,0x8(%ebx)
84004307:	89 f0                	mov    %esi,%eax
84004309:	39 c7                	cmp    %eax,%edi
8400430b:	73 02                	jae    8400430f <__sfvwrite_r+0x238>
8400430d:	89 fe                	mov    %edi,%esi
8400430f:	89 f2                	mov    %esi,%edx
84004311:	8b 03                	mov    (%ebx),%eax
84004313:	83 ec 04             	sub    $0x4,%esp
84004316:	52                   	push   %edx
84004317:	ff 75 c4             	push   -0x3c(%ebp)
8400431a:	50                   	push   %eax
8400431b:	e8 c0 04 00 00       	call   840047e0 <memmove>
84004320:	83 c4 10             	add    $0x10,%esp
84004323:	8b 43 08             	mov    0x8(%ebx),%eax
84004326:	29 f0                	sub    %esi,%eax
84004328:	89 43 08             	mov    %eax,0x8(%ebx)
8400432b:	8b 03                	mov    (%ebx),%eax
8400432d:	89 f2                	mov    %esi,%edx
8400432f:	01 d0                	add    %edx,%eax
84004331:	89 03                	mov    %eax,(%ebx)
84004333:	89 fe                	mov    %edi,%esi
84004335:	e9 9d 00 00 00       	jmp    840043d7 <__sfvwrite_r+0x300>
8400433a:	8b 13                	mov    (%ebx),%edx
8400433c:	8b 43 10             	mov    0x10(%ebx),%eax
8400433f:	39 c2                	cmp    %eax,%edx
84004341:	77 07                	ja     8400434a <__sfvwrite_r+0x273>
84004343:	8b 43 14             	mov    0x14(%ebx),%eax
84004346:	39 c7                	cmp    %eax,%edi
84004348:	73 4c                	jae    84004396 <__sfvwrite_r+0x2bf>
8400434a:	89 f0                	mov    %esi,%eax
8400434c:	39 c7                	cmp    %eax,%edi
8400434e:	0f 46 c7             	cmovbe %edi,%eax
84004351:	89 c6                	mov    %eax,%esi
84004353:	89 f2                	mov    %esi,%edx
84004355:	8b 03                	mov    (%ebx),%eax
84004357:	83 ec 04             	sub    $0x4,%esp
8400435a:	52                   	push   %edx
8400435b:	ff 75 c4             	push   -0x3c(%ebp)
8400435e:	50                   	push   %eax
8400435f:	e8 7c 04 00 00       	call   840047e0 <memmove>
84004364:	83 c4 10             	add    $0x10,%esp
84004367:	8b 43 08             	mov    0x8(%ebx),%eax
8400436a:	29 f0                	sub    %esi,%eax
8400436c:	89 43 08             	mov    %eax,0x8(%ebx)
8400436f:	8b 03                	mov    (%ebx),%eax
84004371:	89 f2                	mov    %esi,%edx
84004373:	01 d0                	add    %edx,%eax
84004375:	89 03                	mov    %eax,(%ebx)
84004377:	8b 43 08             	mov    0x8(%ebx),%eax
8400437a:	85 c0                	test   %eax,%eax
8400437c:	75 58                	jne    840043d6 <__sfvwrite_r+0x2ff>
8400437e:	83 ec 08             	sub    $0x8,%esp
84004381:	53                   	push   %ebx
84004382:	ff 75 08             	push   0x8(%ebp)
84004385:	e8 f9 ca ff ff       	call   84000e83 <_fflush_r>
8400438a:	83 c4 10             	add    $0x10,%esp
8400438d:	85 c0                	test   %eax,%eax
8400438f:	74 45                	je     840043d6 <__sfvwrite_r+0x2ff>
84004391:	e9 c7 01 00 00       	jmp    8400455d <__sfvwrite_r+0x486>
84004396:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
8400439c:	77 04                	ja     840043a2 <__sfvwrite_r+0x2cb>
8400439e:	89 f8                	mov    %edi,%eax
840043a0:	eb 05                	jmp    840043a7 <__sfvwrite_r+0x2d0>
840043a2:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
840043a7:	8b 4b 14             	mov    0x14(%ebx),%ecx
840043aa:	99                   	cltd   
840043ab:	f7 f9                	idiv   %ecx
840043ad:	89 c2                	mov    %eax,%edx
840043af:	8b 43 14             	mov    0x14(%ebx),%eax
840043b2:	89 d6                	mov    %edx,%esi
840043b4:	0f af f0             	imul   %eax,%esi
840043b7:	8b 53 24             	mov    0x24(%ebx),%edx
840043ba:	8b 43 1c             	mov    0x1c(%ebx),%eax
840043bd:	56                   	push   %esi
840043be:	ff 75 c4             	push   -0x3c(%ebp)
840043c1:	50                   	push   %eax
840043c2:	ff 75 08             	push   0x8(%ebp)
840043c5:	ff d2                	call   *%edx
840043c7:	83 c4 10             	add    $0x10,%esp
840043ca:	89 c6                	mov    %eax,%esi
840043cc:	85 f6                	test   %esi,%esi
840043ce:	0f 8e 85 01 00 00    	jle    84004559 <__sfvwrite_r+0x482>
840043d4:	eb 01                	jmp    840043d7 <__sfvwrite_r+0x300>
840043d6:	90                   	nop
840043d7:	89 f0                	mov    %esi,%eax
840043d9:	01 45 c4             	add    %eax,-0x3c(%ebp)
840043dc:	89 f0                	mov    %esi,%eax
840043de:	29 c7                	sub    %eax,%edi
840043e0:	8b 45 10             	mov    0x10(%ebp),%eax
840043e3:	8b 40 08             	mov    0x8(%eax),%eax
840043e6:	89 f2                	mov    %esi,%edx
840043e8:	29 d0                	sub    %edx,%eax
840043ea:	8b 4d 10             	mov    0x10(%ebp),%ecx
840043ed:	89 41 08             	mov    %eax,0x8(%ecx)
840043f0:	8b 45 10             	mov    0x10(%ebp),%eax
840043f3:	8b 40 08             	mov    0x8(%eax),%eax
840043f6:	85 c0                	test   %eax,%eax
840043f8:	0f 85 d4 fd ff ff    	jne    840041d2 <__sfvwrite_r+0xfb>
840043fe:	e9 4c 01 00 00       	jmp    8400454f <__sfvwrite_r+0x478>
84004403:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8400440a:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
84004411:	eb 18                	jmp    8400442b <__sfvwrite_r+0x354>
84004413:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8400441a:	8b 45 c0             	mov    -0x40(%ebp),%eax
8400441d:	8b 08                	mov    (%eax),%ecx
8400441f:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
84004422:	8b 78 04             	mov    0x4(%eax),%edi
84004425:	83 c0 08             	add    $0x8,%eax
84004428:	89 45 c0             	mov    %eax,-0x40(%ebp)
8400442b:	85 ff                	test   %edi,%edi
8400442d:	74 e4                	je     84004413 <__sfvwrite_r+0x33c>
8400442f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
84004433:	75 32                	jne    84004467 <__sfvwrite_r+0x390>
84004435:	83 ec 04             	sub    $0x4,%esp
84004438:	57                   	push   %edi
84004439:	6a 0a                	push   $0xa
8400443b:	8b 75 c4             	mov    -0x3c(%ebp),%esi
8400443e:	56                   	push   %esi
8400443f:	e8 bc 02 00 00       	call   84004700 <memchr>
84004444:	83 c4 10             	add    $0x10,%esp
84004447:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8400444a:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
8400444e:	74 0a                	je     8400445a <__sfvwrite_r+0x383>
84004450:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84004453:	83 c0 01             	add    $0x1,%eax
84004456:	29 f0                	sub    %esi,%eax
84004458:	eb 03                	jmp    8400445d <__sfvwrite_r+0x386>
8400445a:	8d 47 01             	lea    0x1(%edi),%eax
8400445d:	89 45 e0             	mov    %eax,-0x20(%ebp)
84004460:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
84004467:	8b 45 e0             	mov    -0x20(%ebp),%eax
8400446a:	39 c7                	cmp    %eax,%edi
8400446c:	0f 46 c7             	cmovbe %edi,%eax
8400446f:	89 c1                	mov    %eax,%ecx
84004471:	8b 53 08             	mov    0x8(%ebx),%edx
84004474:	8b 43 14             	mov    0x14(%ebx),%eax
84004477:	8d 34 02             	lea    (%edx,%eax,1),%esi
8400447a:	8b 13                	mov    (%ebx),%edx
8400447c:	8b 43 10             	mov    0x10(%ebx),%eax
8400447f:	39 c2                	cmp    %eax,%edx
84004481:	76 38                	jbe    840044bb <__sfvwrite_r+0x3e4>
84004483:	39 f1                	cmp    %esi,%ecx
84004485:	7e 34                	jle    840044bb <__sfvwrite_r+0x3e4>
84004487:	89 f2                	mov    %esi,%edx
84004489:	8b 03                	mov    (%ebx),%eax
8400448b:	83 ec 04             	sub    $0x4,%esp
8400448e:	52                   	push   %edx
8400448f:	ff 75 c4             	push   -0x3c(%ebp)
84004492:	50                   	push   %eax
84004493:	e8 48 03 00 00       	call   840047e0 <memmove>
84004498:	83 c4 10             	add    $0x10,%esp
8400449b:	8b 03                	mov    (%ebx),%eax
8400449d:	89 f2                	mov    %esi,%edx
8400449f:	01 d0                	add    %edx,%eax
840044a1:	89 03                	mov    %eax,(%ebx)
840044a3:	83 ec 08             	sub    $0x8,%esp
840044a6:	53                   	push   %ebx
840044a7:	ff 75 08             	push   0x8(%ebp)
840044aa:	e8 d4 c9 ff ff       	call   84000e83 <_fflush_r>
840044af:	83 c4 10             	add    $0x10,%esp
840044b2:	85 c0                	test   %eax,%eax
840044b4:	74 4f                	je     84004505 <__sfvwrite_r+0x42e>
840044b6:	e9 a2 00 00 00       	jmp    8400455d <__sfvwrite_r+0x486>
840044bb:	8b 73 14             	mov    0x14(%ebx),%esi
840044be:	89 c8                	mov    %ecx,%eax
840044c0:	39 c6                	cmp    %eax,%esi
840044c2:	7f 1b                	jg     840044df <__sfvwrite_r+0x408>
840044c4:	8b 53 24             	mov    0x24(%ebx),%edx
840044c7:	8b 43 1c             	mov    0x1c(%ebx),%eax
840044ca:	56                   	push   %esi
840044cb:	ff 75 c4             	push   -0x3c(%ebp)
840044ce:	50                   	push   %eax
840044cf:	ff 75 08             	push   0x8(%ebp)
840044d2:	ff d2                	call   *%edx
840044d4:	83 c4 10             	add    $0x10,%esp
840044d7:	89 c6                	mov    %eax,%esi
840044d9:	85 f6                	test   %esi,%esi
840044db:	7f 28                	jg     84004505 <__sfvwrite_r+0x42e>
840044dd:	eb 7e                	jmp    8400455d <__sfvwrite_r+0x486>
840044df:	89 ce                	mov    %ecx,%esi
840044e1:	89 f2                	mov    %esi,%edx
840044e3:	8b 03                	mov    (%ebx),%eax
840044e5:	83 ec 04             	sub    $0x4,%esp
840044e8:	52                   	push   %edx
840044e9:	ff 75 c4             	push   -0x3c(%ebp)
840044ec:	50                   	push   %eax
840044ed:	e8 ee 02 00 00       	call   840047e0 <memmove>
840044f2:	83 c4 10             	add    $0x10,%esp
840044f5:	8b 43 08             	mov    0x8(%ebx),%eax
840044f8:	29 f0                	sub    %esi,%eax
840044fa:	89 43 08             	mov    %eax,0x8(%ebx)
840044fd:	8b 03                	mov    (%ebx),%eax
840044ff:	89 f2                	mov    %esi,%edx
84004501:	01 d0                	add    %edx,%eax
84004503:	89 03                	mov    %eax,(%ebx)
84004505:	29 75 e0             	sub    %esi,-0x20(%ebp)
84004508:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8400450c:	75 1a                	jne    84004528 <__sfvwrite_r+0x451>
8400450e:	83 ec 08             	sub    $0x8,%esp
84004511:	53                   	push   %ebx
84004512:	ff 75 08             	push   0x8(%ebp)
84004515:	e8 69 c9 ff ff       	call   84000e83 <_fflush_r>
8400451a:	83 c4 10             	add    $0x10,%esp
8400451d:	85 c0                	test   %eax,%eax
8400451f:	75 3b                	jne    8400455c <__sfvwrite_r+0x485>
84004521:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
84004528:	89 f0                	mov    %esi,%eax
8400452a:	01 45 c4             	add    %eax,-0x3c(%ebp)
8400452d:	89 f0                	mov    %esi,%eax
8400452f:	29 c7                	sub    %eax,%edi
84004531:	8b 45 10             	mov    0x10(%ebp),%eax
84004534:	8b 40 08             	mov    0x8(%eax),%eax
84004537:	89 f2                	mov    %esi,%edx
84004539:	29 d0                	sub    %edx,%eax
8400453b:	8b 4d 10             	mov    0x10(%ebp),%ecx
8400453e:	89 41 08             	mov    %eax,0x8(%ecx)
84004541:	8b 45 10             	mov    0x10(%ebp),%eax
84004544:	8b 40 08             	mov    0x8(%eax),%eax
84004547:	85 c0                	test   %eax,%eax
84004549:	0f 85 dc fe ff ff    	jne    8400442b <__sfvwrite_r+0x354>
8400454f:	b8 00 00 00 00       	mov    $0x0,%eax
84004554:	eb 17                	jmp    8400456d <__sfvwrite_r+0x496>
84004556:	90                   	nop
84004557:	eb 04                	jmp    8400455d <__sfvwrite_r+0x486>
84004559:	90                   	nop
8400455a:	eb 01                	jmp    8400455d <__sfvwrite_r+0x486>
8400455c:	90                   	nop
8400455d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84004561:	83 c8 40             	or     $0x40,%eax
84004564:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84004568:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400456d:	8d 65 f4             	lea    -0xc(%ebp),%esp
84004570:	5b                   	pop    %ebx
84004571:	5e                   	pop    %esi
84004572:	5f                   	pop    %edi
84004573:	5d                   	pop    %ebp
84004574:	c3                   	ret    

84004575 <_isatty_r>:
84004575:	55                   	push   %ebp
84004576:	89 e5                	mov    %esp,%ebp
84004578:	83 ec 18             	sub    $0x18,%esp
8400457b:	c7 05 10 64 00 84 00 	movl   $0x0,0x84006410
84004582:	00 00 00 
84004585:	83 ec 0c             	sub    $0xc,%esp
84004588:	ff 75 0c             	push   0xc(%ebp)
8400458b:	e8 a9 bc ff ff       	call   84000239 <isatty>
84004590:	83 c4 10             	add    $0x10,%esp
84004593:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004596:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8400459a:	75 14                	jne    840045b0 <_isatty_r+0x3b>
8400459c:	a1 10 64 00 84       	mov    0x84006410,%eax
840045a1:	85 c0                	test   %eax,%eax
840045a3:	74 0b                	je     840045b0 <_isatty_r+0x3b>
840045a5:	8b 15 10 64 00 84    	mov    0x84006410,%edx
840045ab:	8b 45 08             	mov    0x8(%ebp),%eax
840045ae:	89 10                	mov    %edx,(%eax)
840045b0:	8b 45 f4             	mov    -0xc(%ebp),%eax
840045b3:	c9                   	leave  
840045b4:	c3                   	ret    

840045b5 <__get_global_locale>:
840045b5:	55                   	push   %ebp
840045b6:	89 e5                	mov    %esp,%ebp
840045b8:	b8 20 62 00 84       	mov    $0x84006220,%eax
840045bd:	5d                   	pop    %ebp
840045be:	c3                   	ret    

840045bf <__get_current_locale>:
840045bf:	55                   	push   %ebp
840045c0:	89 e5                	mov    %esp,%ebp
840045c2:	e8 ee ff ff ff       	call   840045b5 <__get_global_locale>
840045c7:	5d                   	pop    %ebp
840045c8:	c3                   	ret    

840045c9 <_setlocale_r>:
840045c9:	55                   	push   %ebp
840045ca:	89 e5                	mov    %esp,%ebp
840045cc:	83 ec 08             	sub    $0x8,%esp
840045cf:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
840045d3:	74 4c                	je     84004621 <_setlocale_r+0x58>
840045d5:	83 ec 08             	sub    $0x8,%esp
840045d8:	68 fb 56 00 84       	push   $0x840056fb
840045dd:	ff 75 10             	push   0x10(%ebp)
840045e0:	e8 90 0d 00 00       	call   84005375 <strcmp>
840045e5:	83 c4 10             	add    $0x10,%esp
840045e8:	85 c0                	test   %eax,%eax
840045ea:	74 35                	je     84004621 <_setlocale_r+0x58>
840045ec:	83 ec 08             	sub    $0x8,%esp
840045ef:	68 01 57 00 84       	push   $0x84005701
840045f4:	ff 75 10             	push   0x10(%ebp)
840045f7:	e8 79 0d 00 00       	call   84005375 <strcmp>
840045fc:	83 c4 10             	add    $0x10,%esp
840045ff:	85 c0                	test   %eax,%eax
84004601:	74 1e                	je     84004621 <_setlocale_r+0x58>
84004603:	83 ec 08             	sub    $0x8,%esp
84004606:	68 fa 56 00 84       	push   $0x840056fa
8400460b:	ff 75 10             	push   0x10(%ebp)
8400460e:	e8 62 0d 00 00       	call   84005375 <strcmp>
84004613:	83 c4 10             	add    $0x10,%esp
84004616:	85 c0                	test   %eax,%eax
84004618:	74 07                	je     84004621 <_setlocale_r+0x58>
8400461a:	b8 00 00 00 00       	mov    $0x0,%eax
8400461f:	eb 05                	jmp    84004626 <_setlocale_r+0x5d>
84004621:	b8 01 57 00 84       	mov    $0x84005701,%eax
84004626:	c9                   	leave  
84004627:	c3                   	ret    

84004628 <__locale_mb_cur_max>:
84004628:	55                   	push   %ebp
84004629:	89 e5                	mov    %esp,%ebp
8400462b:	e8 8f ff ff ff       	call   840045bf <__get_current_locale>
84004630:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
84004637:	0f be c0             	movsbl %al,%eax
8400463a:	5d                   	pop    %ebp
8400463b:	c3                   	ret    

8400463c <setlocale>:
8400463c:	55                   	push   %ebp
8400463d:	89 e5                	mov    %esp,%ebp
8400463f:	83 ec 08             	sub    $0x8,%esp
84004642:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
84004647:	83 ec 04             	sub    $0x4,%esp
8400464a:	ff 75 0c             	push   0xc(%ebp)
8400464d:	ff 75 08             	push   0x8(%ebp)
84004650:	50                   	push   %eax
84004651:	e8 73 ff ff ff       	call   840045c9 <_setlocale_r>
84004656:	83 c4 10             	add    $0x10,%esp
84004659:	c9                   	leave  
8400465a:	c3                   	ret    

8400465b <__get_global_locale>:
8400465b:	55                   	push   %ebp
8400465c:	89 e5                	mov    %esp,%ebp
8400465e:	b8 20 62 00 84       	mov    $0x84006220,%eax
84004663:	5d                   	pop    %ebp
84004664:	c3                   	ret    

84004665 <__get_current_locale>:
84004665:	55                   	push   %ebp
84004666:	89 e5                	mov    %esp,%ebp
84004668:	e8 ee ff ff ff       	call   8400465b <__get_global_locale>
8400466d:	5d                   	pop    %ebp
8400466e:	c3                   	ret    

8400466f <_mbtowc_r>:
8400466f:	55                   	push   %ebp
84004670:	89 e5                	mov    %esp,%ebp
84004672:	83 ec 08             	sub    $0x8,%esp
84004675:	e8 eb ff ff ff       	call   84004665 <__get_current_locale>
8400467a:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
84004680:	83 ec 0c             	sub    $0xc,%esp
84004683:	ff 75 18             	push   0x18(%ebp)
84004686:	ff 75 14             	push   0x14(%ebp)
84004689:	ff 75 10             	push   0x10(%ebp)
8400468c:	ff 75 0c             	push   0xc(%ebp)
8400468f:	ff 75 08             	push   0x8(%ebp)
84004692:	ff d0                	call   *%eax
84004694:	83 c4 20             	add    $0x20,%esp
84004697:	c9                   	leave  
84004698:	c3                   	ret    

84004699 <__ascii_mbtowc>:
84004699:	55                   	push   %ebp
8400469a:	89 e5                	mov    %esp,%ebp
8400469c:	83 ec 10             	sub    $0x10,%esp
8400469f:	8b 45 10             	mov    0x10(%ebp),%eax
840046a2:	89 45 fc             	mov    %eax,-0x4(%ebp)
840046a5:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
840046a9:	75 06                	jne    840046b1 <__ascii_mbtowc+0x18>
840046ab:	8d 45 f8             	lea    -0x8(%ebp),%eax
840046ae:	89 45 0c             	mov    %eax,0xc(%ebp)
840046b1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
840046b5:	75 07                	jne    840046be <__ascii_mbtowc+0x25>
840046b7:	b8 00 00 00 00       	mov    $0x0,%eax
840046bc:	eb 31                	jmp    840046ef <__ascii_mbtowc+0x56>
840046be:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
840046c2:	75 07                	jne    840046cb <__ascii_mbtowc+0x32>
840046c4:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
840046c9:	eb 24                	jmp    840046ef <__ascii_mbtowc+0x56>
840046cb:	8b 45 fc             	mov    -0x4(%ebp),%eax
840046ce:	0f b6 00             	movzbl (%eax),%eax
840046d1:	0f b6 d0             	movzbl %al,%edx
840046d4:	8b 45 0c             	mov    0xc(%ebp),%eax
840046d7:	89 10                	mov    %edx,(%eax)
840046d9:	8b 45 fc             	mov    -0x4(%ebp),%eax
840046dc:	0f b6 00             	movzbl (%eax),%eax
840046df:	84 c0                	test   %al,%al
840046e1:	75 07                	jne    840046ea <__ascii_mbtowc+0x51>
840046e3:	b8 00 00 00 00       	mov    $0x0,%eax
840046e8:	eb 05                	jmp    840046ef <__ascii_mbtowc+0x56>
840046ea:	b8 01 00 00 00       	mov    $0x1,%eax
840046ef:	c9                   	leave  
840046f0:	c3                   	ret    
840046f1:	66 90                	xchg   %ax,%ax
840046f3:	66 90                	xchg   %ax,%ax
840046f5:	66 90                	xchg   %ax,%ax
840046f7:	66 90                	xchg   %ax,%ax
840046f9:	66 90                	xchg   %ax,%ax
840046fb:	66 90                	xchg   %ax,%ax
840046fd:	66 90                	xchg   %ax,%ax
840046ff:	90                   	nop

84004700 <memchr>:
84004700:	55                   	push   %ebp
84004701:	89 e5                	mov    %esp,%ebp
84004703:	57                   	push   %edi
84004704:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
84004708:	8b 4d 10             	mov    0x10(%ebp),%ecx
8400470b:	8b 7d 08             	mov    0x8(%ebp),%edi
8400470e:	31 d2                	xor    %edx,%edx
84004710:	85 c9                	test   %ecx,%ecx
84004712:	74 79                	je     8400478d <L20>
84004714:	f7 c7 03 00 00 00    	test   $0x3,%edi
8400471a:	74 28                	je     84004744 <L5>
8400471c:	3a 07                	cmp    (%edi),%al
8400471e:	74 6a                	je     8400478a <L15>
84004720:	47                   	inc    %edi
84004721:	49                   	dec    %ecx
84004722:	74 69                	je     8400478d <L20>
84004724:	f7 c7 03 00 00 00    	test   $0x3,%edi
8400472a:	74 18                	je     84004744 <L5>
8400472c:	3a 07                	cmp    (%edi),%al
8400472e:	74 5a                	je     8400478a <L15>
84004730:	47                   	inc    %edi
84004731:	49                   	dec    %ecx
84004732:	74 59                	je     8400478d <L20>
84004734:	f7 c7 03 00 00 00    	test   $0x3,%edi
8400473a:	74 08                	je     84004744 <L5>
8400473c:	3a 07                	cmp    (%edi),%al
8400473e:	74 4a                	je     8400478a <L15>
84004740:	47                   	inc    %edi
84004741:	49                   	dec    %ecx
84004742:	74 49                	je     8400478d <L20>

84004744 <L5>:
84004744:	88 c4                	mov    %al,%ah
84004746:	89 c2                	mov    %eax,%edx
84004748:	c1 e2 10             	shl    $0x10,%edx
8400474b:	09 d0                	or     %edx,%eax
8400474d:	53                   	push   %ebx
8400474e:	66 90                	xchg   %ax,%ax

84004750 <L8>:
84004750:	83 e9 04             	sub    $0x4,%ecx
84004753:	72 1c                	jb     84004771 <L9>
84004755:	8b 17                	mov    (%edi),%edx
84004757:	83 c7 04             	add    $0x4,%edi
8400475a:	31 c2                	xor    %eax,%edx
8400475c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
84004762:	f7 d2                	not    %edx
84004764:	21 d3                	and    %edx,%ebx
84004766:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
8400476c:	74 e2                	je     84004750 <L8>
8400476e:	83 ef 04             	sub    $0x4,%edi

84004771 <L9>:
84004771:	5b                   	pop    %ebx
84004772:	31 d2                	xor    %edx,%edx
84004774:	83 c1 04             	add    $0x4,%ecx
84004777:	74 14                	je     8400478d <L20>
84004779:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

84004780 <L10>:
84004780:	3a 07                	cmp    (%edi),%al
84004782:	74 06                	je     8400478a <L15>
84004784:	47                   	inc    %edi
84004785:	49                   	dec    %ecx
84004786:	75 f8                	jne    84004780 <L10>
84004788:	31 ff                	xor    %edi,%edi

8400478a <L15>:
8400478a:	4a                   	dec    %edx
8400478b:	21 fa                	and    %edi,%edx

8400478d <L20>:
8400478d:	89 d0                	mov    %edx,%eax
8400478f:	8d 65 fc             	lea    -0x4(%ebp),%esp
84004792:	5f                   	pop    %edi
84004793:	c9                   	leave  
84004794:	c3                   	ret    
84004795:	66 90                	xchg   %ax,%ax
84004797:	90                   	nop

84004798 <memcpy>:
84004798:	55                   	push   %ebp
84004799:	89 e5                	mov    %esp,%ebp
8400479b:	56                   	push   %esi
8400479c:	57                   	push   %edi
8400479d:	53                   	push   %ebx
8400479e:	8b 7d 08             	mov    0x8(%ebp),%edi
840047a1:	8b 4d 10             	mov    0x10(%ebp),%ecx
840047a4:	8b 75 0c             	mov    0xc(%ebp),%esi
840047a7:	fc                   	cld    
840047a8:	83 f9 08             	cmp    $0x8,%ecx
840047ab:	76 26                	jbe    840047d3 <memcpy+0x3b>
840047ad:	89 fa                	mov    %edi,%edx
840047af:	89 cb                	mov    %ecx,%ebx
840047b1:	83 e2 03             	and    $0x3,%edx
840047b4:	74 10                	je     840047c6 <memcpy+0x2e>
840047b6:	b9 04 00 00 00       	mov    $0x4,%ecx
840047bb:	29 d1                	sub    %edx,%ecx
840047bd:	83 e1 03             	and    $0x3,%ecx
840047c0:	29 cb                	sub    %ecx,%ebx
840047c2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
840047c4:	89 d9                	mov    %ebx,%ecx
840047c6:	c1 e9 02             	shr    $0x2,%ecx
840047c9:	8d 76 00             	lea    0x0(%esi),%esi
840047cc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
840047ce:	89 d9                	mov    %ebx,%ecx
840047d0:	83 e1 03             	and    $0x3,%ecx
840047d3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
840047d5:	8b 45 08             	mov    0x8(%ebp),%eax
840047d8:	8d 65 f4             	lea    -0xc(%ebp),%esp
840047db:	5b                   	pop    %ebx
840047dc:	5f                   	pop    %edi
840047dd:	5e                   	pop    %esi
840047de:	c9                   	leave  
840047df:	c3                   	ret    

840047e0 <memmove>:
840047e0:	55                   	push   %ebp
840047e1:	89 e5                	mov    %esp,%ebp
840047e3:	56                   	push   %esi
840047e4:	57                   	push   %edi
840047e5:	53                   	push   %ebx
840047e6:	8b 7d 08             	mov    0x8(%ebp),%edi
840047e9:	8b 4d 10             	mov    0x10(%ebp),%ecx
840047ec:	8b 75 0c             	mov    0xc(%ebp),%esi
840047ef:	fc                   	cld    
840047f0:	39 fe                	cmp    %edi,%esi
840047f2:	73 43                	jae    84004837 <memmove+0x57>
840047f4:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
840047f8:	39 df                	cmp    %ebx,%edi
840047fa:	77 3b                	ja     84004837 <memmove+0x57>
840047fc:	01 ce                	add    %ecx,%esi
840047fe:	01 cf                	add    %ecx,%edi
84004800:	fd                   	std    
84004801:	83 f9 08             	cmp    $0x8,%ecx
84004804:	76 2b                	jbe    84004831 <memmove+0x51>
84004806:	89 fa                	mov    %edi,%edx
84004808:	89 cb                	mov    %ecx,%ebx
8400480a:	83 e2 03             	and    $0x3,%edx
8400480d:	74 0c                	je     8400481b <memmove+0x3b>
8400480f:	89 d1                	mov    %edx,%ecx
84004811:	4e                   	dec    %esi
84004812:	4f                   	dec    %edi
84004813:	29 cb                	sub    %ecx,%ebx
84004815:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
84004817:	89 d9                	mov    %ebx,%ecx
84004819:	46                   	inc    %esi
8400481a:	47                   	inc    %edi
8400481b:	c1 e9 02             	shr    $0x2,%ecx
8400481e:	83 ee 04             	sub    $0x4,%esi
84004821:	83 ef 04             	sub    $0x4,%edi
84004824:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
84004826:	83 c6 04             	add    $0x4,%esi
84004829:	83 c7 04             	add    $0x4,%edi
8400482c:	89 d9                	mov    %ebx,%ecx
8400482e:	83 e1 03             	and    $0x3,%ecx
84004831:	4e                   	dec    %esi
84004832:	4f                   	dec    %edi
84004833:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
84004835:	eb 2a                	jmp    84004861 <memmove+0x81>
84004837:	83 f9 08             	cmp    $0x8,%ecx
8400483a:	76 23                	jbe    8400485f <memmove+0x7f>
8400483c:	89 fa                	mov    %edi,%edx
8400483e:	89 cb                	mov    %ecx,%ebx
84004840:	83 e2 03             	and    $0x3,%edx
84004843:	74 10                	je     84004855 <memmove+0x75>
84004845:	b9 04 00 00 00       	mov    $0x4,%ecx
8400484a:	29 d1                	sub    %edx,%ecx
8400484c:	83 e1 03             	and    $0x3,%ecx
8400484f:	29 cb                	sub    %ecx,%ebx
84004851:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
84004853:	89 d9                	mov    %ebx,%ecx
84004855:	c1 e9 02             	shr    $0x2,%ecx
84004858:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
8400485a:	89 d9                	mov    %ebx,%ecx
8400485c:	83 e1 03             	and    $0x3,%ecx
8400485f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
84004861:	8b 45 08             	mov    0x8(%ebp),%eax
84004864:	fc                   	cld    
84004865:	8d 65 f4             	lea    -0xc(%ebp),%esp
84004868:	5b                   	pop    %ebx
84004869:	5f                   	pop    %edi
8400486a:	5e                   	pop    %esi
8400486b:	c9                   	leave  
8400486c:	c3                   	ret    

8400486d <_realloc_r>:
8400486d:	55                   	push   %ebp
8400486e:	89 e5                	mov    %esp,%ebp
84004870:	83 ec 78             	sub    $0x78,%esp
84004873:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
84004877:	75 16                	jne    8400488f <_realloc_r+0x22>
84004879:	83 ec 08             	sub    $0x8,%esp
8400487c:	ff 75 10             	push   0x10(%ebp)
8400487f:	ff 75 08             	push   0x8(%ebp)
84004882:	e8 b6 d3 ff ff       	call   84001c3d <_malloc_r>
84004887:	83 c4 10             	add    $0x10,%esp
8400488a:	e9 b6 08 00 00       	jmp    84005145 <_realloc_r+0x8d8>
8400488f:	83 ec 0c             	sub    $0xc,%esp
84004892:	ff 75 08             	push   0x8(%ebp)
84004895:	e8 4d dc ff ff       	call   840024e7 <__malloc_lock>
8400489a:	83 c4 10             	add    $0x10,%esp
8400489d:	8b 45 0c             	mov    0xc(%ebp),%eax
840048a0:	83 e8 08             	sub    $0x8,%eax
840048a3:	89 45 c4             	mov    %eax,-0x3c(%ebp)
840048a6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
840048a9:	89 45 f4             	mov    %eax,-0xc(%ebp)
840048ac:	8b 45 c4             	mov    -0x3c(%ebp),%eax
840048af:	8b 40 04             	mov    0x4(%eax),%eax
840048b2:	83 e0 fc             	and    $0xfffffffc,%eax
840048b5:	89 45 c0             	mov    %eax,-0x40(%ebp)
840048b8:	8b 45 c0             	mov    -0x40(%ebp),%eax
840048bb:	89 45 f0             	mov    %eax,-0x10(%ebp)
840048be:	8b 45 10             	mov    0x10(%ebp),%eax
840048c1:	83 c0 0b             	add    $0xb,%eax
840048c4:	83 f8 16             	cmp    $0x16,%eax
840048c7:	76 0b                	jbe    840048d4 <_realloc_r+0x67>
840048c9:	8b 45 10             	mov    0x10(%ebp),%eax
840048cc:	83 c0 0b             	add    $0xb,%eax
840048cf:	83 e0 f8             	and    $0xfffffff8,%eax
840048d2:	eb 05                	jmp    840048d9 <_realloc_r+0x6c>
840048d4:	b8 10 00 00 00       	mov    $0x10,%eax
840048d9:	89 45 bc             	mov    %eax,-0x44(%ebp)
840048dc:	8b 45 bc             	mov    -0x44(%ebp),%eax
840048df:	85 c0                	test   %eax,%eax
840048e1:	78 08                	js     840048eb <_realloc_r+0x7e>
840048e3:	8b 45 bc             	mov    -0x44(%ebp),%eax
840048e6:	3b 45 10             	cmp    0x10(%ebp),%eax
840048e9:	73 13                	jae    840048fe <_realloc_r+0x91>
840048eb:	8b 45 08             	mov    0x8(%ebp),%eax
840048ee:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
840048f4:	b8 00 00 00 00       	mov    $0x0,%eax
840048f9:	e9 47 08 00 00       	jmp    84005145 <_realloc_r+0x8d8>
840048fe:	8b 55 c0             	mov    -0x40(%ebp),%edx
84004901:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004904:	39 c2                	cmp    %eax,%edx
84004906:	0f 8d 8b 07 00 00    	jge    84005097 <_realloc_r+0x82a>
8400490c:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8400490f:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004912:	01 d0                	add    %edx,%eax
84004914:	89 45 ec             	mov    %eax,-0x14(%ebp)
84004917:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
8400491c:	8b 40 08             	mov    0x8(%eax),%eax
8400491f:	39 45 ec             	cmp    %eax,-0x14(%ebp)
84004922:	74 1e                	je     84004942 <_realloc_r+0xd5>
84004924:	8b 45 ec             	mov    -0x14(%ebp),%eax
84004927:	8b 40 04             	mov    0x4(%eax),%eax
8400492a:	83 e0 fe             	and    $0xfffffffe,%eax
8400492d:	89 c2                	mov    %eax,%edx
8400492f:	8b 45 ec             	mov    -0x14(%ebp),%eax
84004932:	01 d0                	add    %edx,%eax
84004934:	8b 40 04             	mov    0x4(%eax),%eax
84004937:	83 e0 01             	and    $0x1,%eax
8400493a:	85 c0                	test   %eax,%eax
8400493c:	0f 85 ca 00 00 00    	jne    84004a0c <_realloc_r+0x19f>
84004942:	8b 45 ec             	mov    -0x14(%ebp),%eax
84004945:	8b 40 04             	mov    0x4(%eax),%eax
84004948:	83 e0 fc             	and    $0xfffffffc,%eax
8400494b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8400494e:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84004953:	8b 40 08             	mov    0x8(%eax),%eax
84004956:	39 45 ec             	cmp    %eax,-0x14(%ebp)
84004959:	75 71                	jne    840049cc <_realloc_r+0x15f>
8400495b:	8b 55 e8             	mov    -0x18(%ebp),%edx
8400495e:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004961:	01 d0                	add    %edx,%eax
84004963:	89 c2                	mov    %eax,%edx
84004965:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004968:	83 c0 10             	add    $0x10,%eax
8400496b:	39 c2                	cmp    %eax,%edx
8400496d:	0f 8c a9 00 00 00    	jl     84004a1c <_realloc_r+0x1af>
84004973:	8b 45 e8             	mov    -0x18(%ebp),%eax
84004976:	01 45 f0             	add    %eax,-0x10(%ebp)
84004979:	ba 00 5e 00 84       	mov    $0x84005e00,%edx
8400497e:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
84004981:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004984:	01 c8                	add    %ecx,%eax
84004986:	89 42 08             	mov    %eax,0x8(%edx)
84004989:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400498c:	2b 45 bc             	sub    -0x44(%ebp),%eax
8400498f:	89 c2                	mov    %eax,%edx
84004991:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84004996:	8b 40 08             	mov    0x8(%eax),%eax
84004999:	83 ca 01             	or     $0x1,%edx
8400499c:	89 50 04             	mov    %edx,0x4(%eax)
8400499f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
840049a2:	8b 40 04             	mov    0x4(%eax),%eax
840049a5:	83 e0 01             	and    $0x1,%eax
840049a8:	0b 45 bc             	or     -0x44(%ebp),%eax
840049ab:	89 c2                	mov    %eax,%edx
840049ad:	8b 45 c4             	mov    -0x3c(%ebp),%eax
840049b0:	89 50 04             	mov    %edx,0x4(%eax)
840049b3:	83 ec 0c             	sub    $0xc,%esp
840049b6:	ff 75 08             	push   0x8(%ebp)
840049b9:	e8 2f db ff ff       	call   840024ed <__malloc_unlock>
840049be:	83 c4 10             	add    $0x10,%esp
840049c1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
840049c4:	83 c0 08             	add    $0x8,%eax
840049c7:	e9 79 07 00 00       	jmp    84005145 <_realloc_r+0x8d8>
840049cc:	8b 55 e8             	mov    -0x18(%ebp),%edx
840049cf:	8b 45 f0             	mov    -0x10(%ebp),%eax
840049d2:	01 d0                	add    %edx,%eax
840049d4:	89 c2                	mov    %eax,%edx
840049d6:	8b 45 bc             	mov    -0x44(%ebp),%eax
840049d9:	39 c2                	cmp    %eax,%edx
840049db:	7c 3f                	jl     84004a1c <_realloc_r+0x1af>
840049dd:	8b 45 ec             	mov    -0x14(%ebp),%eax
840049e0:	8b 40 0c             	mov    0xc(%eax),%eax
840049e3:	89 45 b8             	mov    %eax,-0x48(%ebp)
840049e6:	8b 45 ec             	mov    -0x14(%ebp),%eax
840049e9:	8b 40 08             	mov    0x8(%eax),%eax
840049ec:	89 45 b4             	mov    %eax,-0x4c(%ebp)
840049ef:	8b 45 b4             	mov    -0x4c(%ebp),%eax
840049f2:	8b 55 b8             	mov    -0x48(%ebp),%edx
840049f5:	89 50 0c             	mov    %edx,0xc(%eax)
840049f8:	8b 45 b8             	mov    -0x48(%ebp),%eax
840049fb:	8b 55 b4             	mov    -0x4c(%ebp),%edx
840049fe:	89 50 08             	mov    %edx,0x8(%eax)
84004a01:	8b 45 e8             	mov    -0x18(%ebp),%eax
84004a04:	01 45 f0             	add    %eax,-0x10(%ebp)
84004a07:	e9 8c 06 00 00       	jmp    84005098 <_realloc_r+0x82b>
84004a0c:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
84004a13:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
84004a1a:	eb 01                	jmp    84004a1d <_realloc_r+0x1b0>
84004a1c:	90                   	nop
84004a1d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004a20:	8b 40 04             	mov    0x4(%eax),%eax
84004a23:	83 e0 01             	and    $0x1,%eax
84004a26:	85 c0                	test   %eax,%eax
84004a28:	0f 85 d6 04 00 00    	jne    84004f04 <_realloc_r+0x697>
84004a2e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004a31:	8b 00                	mov    (%eax),%eax
84004a33:	f7 d8                	neg    %eax
84004a35:	89 c2                	mov    %eax,%edx
84004a37:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004a3a:	01 d0                	add    %edx,%eax
84004a3c:	89 45 b0             	mov    %eax,-0x50(%ebp)
84004a3f:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004a42:	8b 40 04             	mov    0x4(%eax),%eax
84004a45:	83 e0 fc             	and    $0xfffffffc,%eax
84004a48:	89 45 ac             	mov    %eax,-0x54(%ebp)
84004a4b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
84004a4f:	0f 84 4a 03 00 00    	je     84004d9f <_realloc_r+0x532>
84004a55:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84004a5a:	8b 40 08             	mov    0x8(%eax),%eax
84004a5d:	39 45 ec             	cmp    %eax,-0x14(%ebp)
84004a60:	0f 85 b0 01 00 00    	jne    84004c16 <_realloc_r+0x3a9>
84004a66:	8b 55 e8             	mov    -0x18(%ebp),%edx
84004a69:	8b 45 ac             	mov    -0x54(%ebp),%eax
84004a6c:	01 c2                	add    %eax,%edx
84004a6e:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004a71:	01 d0                	add    %edx,%eax
84004a73:	89 c2                	mov    %eax,%edx
84004a75:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004a78:	83 c0 10             	add    $0x10,%eax
84004a7b:	39 c2                	cmp    %eax,%edx
84004a7d:	0f 8c 1c 03 00 00    	jl     84004d9f <_realloc_r+0x532>
84004a83:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004a86:	8b 40 0c             	mov    0xc(%eax),%eax
84004a89:	89 45 b8             	mov    %eax,-0x48(%ebp)
84004a8c:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004a8f:	8b 40 08             	mov    0x8(%eax),%eax
84004a92:	89 45 b4             	mov    %eax,-0x4c(%ebp)
84004a95:	8b 45 b4             	mov    -0x4c(%ebp),%eax
84004a98:	8b 55 b8             	mov    -0x48(%ebp),%edx
84004a9b:	89 50 0c             	mov    %edx,0xc(%eax)
84004a9e:	8b 45 b8             	mov    -0x48(%ebp),%eax
84004aa1:	8b 55 b4             	mov    -0x4c(%ebp),%edx
84004aa4:	89 50 08             	mov    %edx,0x8(%eax)
84004aa7:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004aaa:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004aad:	8b 55 ac             	mov    -0x54(%ebp),%edx
84004ab0:	8b 45 e8             	mov    -0x18(%ebp),%eax
84004ab3:	01 d0                	add    %edx,%eax
84004ab5:	01 45 f0             	add    %eax,-0x10(%ebp)
84004ab8:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004abb:	83 c0 08             	add    $0x8,%eax
84004abe:	89 45 a8             	mov    %eax,-0x58(%ebp)
84004ac1:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004ac4:	83 e8 04             	sub    $0x4,%eax
84004ac7:	89 45 a0             	mov    %eax,-0x60(%ebp)
84004aca:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
84004ace:	0f 87 de 00 00 00    	ja     84004bb2 <_realloc_r+0x345>
84004ad4:	8b 45 0c             	mov    0xc(%ebp),%eax
84004ad7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004ada:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004add:	89 45 e0             	mov    %eax,-0x20(%ebp)
84004ae0:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
84004ae4:	0f 86 90 00 00 00    	jbe    84004b7a <_realloc_r+0x30d>
84004aea:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004aed:	8d 42 04             	lea    0x4(%edx),%eax
84004af0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004af3:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004af6:	8d 48 04             	lea    0x4(%eax),%ecx
84004af9:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004afc:	8b 12                	mov    (%edx),%edx
84004afe:	89 10                	mov    %edx,(%eax)
84004b00:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b03:	8d 42 04             	lea    0x4(%edx),%eax
84004b06:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b09:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b0c:	8d 48 04             	lea    0x4(%eax),%ecx
84004b0f:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b12:	8b 12                	mov    (%edx),%edx
84004b14:	89 10                	mov    %edx,(%eax)
84004b16:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
84004b1a:	76 5e                	jbe    84004b7a <_realloc_r+0x30d>
84004b1c:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b1f:	8d 42 04             	lea    0x4(%edx),%eax
84004b22:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b25:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b28:	8d 48 04             	lea    0x4(%eax),%ecx
84004b2b:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b2e:	8b 12                	mov    (%edx),%edx
84004b30:	89 10                	mov    %edx,(%eax)
84004b32:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b35:	8d 42 04             	lea    0x4(%edx),%eax
84004b38:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b3b:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b3e:	8d 48 04             	lea    0x4(%eax),%ecx
84004b41:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b44:	8b 12                	mov    (%edx),%edx
84004b46:	89 10                	mov    %edx,(%eax)
84004b48:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
84004b4c:	76 2c                	jbe    84004b7a <_realloc_r+0x30d>
84004b4e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b51:	8d 42 04             	lea    0x4(%edx),%eax
84004b54:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b57:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b5a:	8d 48 04             	lea    0x4(%eax),%ecx
84004b5d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b60:	8b 12                	mov    (%edx),%edx
84004b62:	89 10                	mov    %edx,(%eax)
84004b64:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b67:	8d 42 04             	lea    0x4(%edx),%eax
84004b6a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b6d:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b70:	8d 48 04             	lea    0x4(%eax),%ecx
84004b73:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b76:	8b 12                	mov    (%edx),%edx
84004b78:	89 10                	mov    %edx,(%eax)
84004b7a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b7d:	8d 42 04             	lea    0x4(%edx),%eax
84004b80:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b83:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b86:	8d 48 04             	lea    0x4(%eax),%ecx
84004b89:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b8c:	8b 12                	mov    (%edx),%edx
84004b8e:	89 10                	mov    %edx,(%eax)
84004b90:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b93:	8d 42 04             	lea    0x4(%edx),%eax
84004b96:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b99:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b9c:	8d 48 04             	lea    0x4(%eax),%ecx
84004b9f:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004ba2:	8b 12                	mov    (%edx),%edx
84004ba4:	89 10                	mov    %edx,(%eax)
84004ba6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84004ba9:	8b 10                	mov    (%eax),%edx
84004bab:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004bae:	89 10                	mov    %edx,(%eax)
84004bb0:	eb 14                	jmp    84004bc6 <_realloc_r+0x359>
84004bb2:	83 ec 04             	sub    $0x4,%esp
84004bb5:	ff 75 a0             	push   -0x60(%ebp)
84004bb8:	ff 75 0c             	push   0xc(%ebp)
84004bbb:	ff 75 a8             	push   -0x58(%ebp)
84004bbe:	e8 1d fc ff ff       	call   840047e0 <memmove>
84004bc3:	83 c4 10             	add    $0x10,%esp
84004bc6:	ba 00 5e 00 84       	mov    $0x84005e00,%edx
84004bcb:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84004bce:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004bd1:	01 c8                	add    %ecx,%eax
84004bd3:	89 42 08             	mov    %eax,0x8(%edx)
84004bd6:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004bd9:	2b 45 bc             	sub    -0x44(%ebp),%eax
84004bdc:	89 c2                	mov    %eax,%edx
84004bde:	b8 00 5e 00 84       	mov    $0x84005e00,%eax
84004be3:	8b 40 08             	mov    0x8(%eax),%eax
84004be6:	83 ca 01             	or     $0x1,%edx
84004be9:	89 50 04             	mov    %edx,0x4(%eax)
84004bec:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004bef:	8b 40 04             	mov    0x4(%eax),%eax
84004bf2:	83 e0 01             	and    $0x1,%eax
84004bf5:	0b 45 bc             	or     -0x44(%ebp),%eax
84004bf8:	89 c2                	mov    %eax,%edx
84004bfa:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004bfd:	89 50 04             	mov    %edx,0x4(%eax)
84004c00:	83 ec 0c             	sub    $0xc,%esp
84004c03:	ff 75 08             	push   0x8(%ebp)
84004c06:	e8 e2 d8 ff ff       	call   840024ed <__malloc_unlock>
84004c0b:	83 c4 10             	add    $0x10,%esp
84004c0e:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004c11:	e9 2f 05 00 00       	jmp    84005145 <_realloc_r+0x8d8>
84004c16:	8b 55 e8             	mov    -0x18(%ebp),%edx
84004c19:	8b 45 ac             	mov    -0x54(%ebp),%eax
84004c1c:	01 c2                	add    %eax,%edx
84004c1e:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004c21:	01 d0                	add    %edx,%eax
84004c23:	89 c2                	mov    %eax,%edx
84004c25:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004c28:	39 c2                	cmp    %eax,%edx
84004c2a:	0f 8c 6f 01 00 00    	jl     84004d9f <_realloc_r+0x532>
84004c30:	8b 45 ec             	mov    -0x14(%ebp),%eax
84004c33:	8b 40 0c             	mov    0xc(%eax),%eax
84004c36:	89 45 b8             	mov    %eax,-0x48(%ebp)
84004c39:	8b 45 ec             	mov    -0x14(%ebp),%eax
84004c3c:	8b 40 08             	mov    0x8(%eax),%eax
84004c3f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
84004c42:	8b 45 b4             	mov    -0x4c(%ebp),%eax
84004c45:	8b 55 b8             	mov    -0x48(%ebp),%edx
84004c48:	89 50 0c             	mov    %edx,0xc(%eax)
84004c4b:	8b 45 b8             	mov    -0x48(%ebp),%eax
84004c4e:	8b 55 b4             	mov    -0x4c(%ebp),%edx
84004c51:	89 50 08             	mov    %edx,0x8(%eax)
84004c54:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004c57:	8b 40 0c             	mov    0xc(%eax),%eax
84004c5a:	89 45 b8             	mov    %eax,-0x48(%ebp)
84004c5d:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004c60:	8b 40 08             	mov    0x8(%eax),%eax
84004c63:	89 45 b4             	mov    %eax,-0x4c(%ebp)
84004c66:	8b 45 b4             	mov    -0x4c(%ebp),%eax
84004c69:	8b 55 b8             	mov    -0x48(%ebp),%edx
84004c6c:	89 50 0c             	mov    %edx,0xc(%eax)
84004c6f:	8b 45 b8             	mov    -0x48(%ebp),%eax
84004c72:	8b 55 b4             	mov    -0x4c(%ebp),%edx
84004c75:	89 50 08             	mov    %edx,0x8(%eax)
84004c78:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004c7b:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004c7e:	8b 55 e8             	mov    -0x18(%ebp),%edx
84004c81:	8b 45 ac             	mov    -0x54(%ebp),%eax
84004c84:	01 d0                	add    %edx,%eax
84004c86:	01 45 f0             	add    %eax,-0x10(%ebp)
84004c89:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004c8c:	83 c0 08             	add    $0x8,%eax
84004c8f:	89 45 a8             	mov    %eax,-0x58(%ebp)
84004c92:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004c95:	83 e8 04             	sub    $0x4,%eax
84004c98:	89 45 a4             	mov    %eax,-0x5c(%ebp)
84004c9b:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
84004c9f:	0f 87 e1 00 00 00    	ja     84004d86 <_realloc_r+0x519>
84004ca5:	8b 45 0c             	mov    0xc(%ebp),%eax
84004ca8:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004cab:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004cae:	89 45 d8             	mov    %eax,-0x28(%ebp)
84004cb1:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
84004cb5:	0f 86 90 00 00 00    	jbe    84004d4b <_realloc_r+0x4de>
84004cbb:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004cbe:	8d 42 04             	lea    0x4(%edx),%eax
84004cc1:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004cc4:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004cc7:	8d 48 04             	lea    0x4(%eax),%ecx
84004cca:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004ccd:	8b 12                	mov    (%edx),%edx
84004ccf:	89 10                	mov    %edx,(%eax)
84004cd1:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004cd4:	8d 42 04             	lea    0x4(%edx),%eax
84004cd7:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004cda:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004cdd:	8d 48 04             	lea    0x4(%eax),%ecx
84004ce0:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004ce3:	8b 12                	mov    (%edx),%edx
84004ce5:	89 10                	mov    %edx,(%eax)
84004ce7:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
84004ceb:	76 5e                	jbe    84004d4b <_realloc_r+0x4de>
84004ced:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004cf0:	8d 42 04             	lea    0x4(%edx),%eax
84004cf3:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004cf6:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004cf9:	8d 48 04             	lea    0x4(%eax),%ecx
84004cfc:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004cff:	8b 12                	mov    (%edx),%edx
84004d01:	89 10                	mov    %edx,(%eax)
84004d03:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004d06:	8d 42 04             	lea    0x4(%edx),%eax
84004d09:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004d0c:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004d0f:	8d 48 04             	lea    0x4(%eax),%ecx
84004d12:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004d15:	8b 12                	mov    (%edx),%edx
84004d17:	89 10                	mov    %edx,(%eax)
84004d19:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
84004d1d:	76 2c                	jbe    84004d4b <_realloc_r+0x4de>
84004d1f:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004d22:	8d 42 04             	lea    0x4(%edx),%eax
84004d25:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004d28:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004d2b:	8d 48 04             	lea    0x4(%eax),%ecx
84004d2e:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004d31:	8b 12                	mov    (%edx),%edx
84004d33:	89 10                	mov    %edx,(%eax)
84004d35:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004d38:	8d 42 04             	lea    0x4(%edx),%eax
84004d3b:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004d3e:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004d41:	8d 48 04             	lea    0x4(%eax),%ecx
84004d44:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004d47:	8b 12                	mov    (%edx),%edx
84004d49:	89 10                	mov    %edx,(%eax)
84004d4b:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004d4e:	8d 42 04             	lea    0x4(%edx),%eax
84004d51:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004d54:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004d57:	8d 48 04             	lea    0x4(%eax),%ecx
84004d5a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004d5d:	8b 12                	mov    (%edx),%edx
84004d5f:	89 10                	mov    %edx,(%eax)
84004d61:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004d64:	8d 42 04             	lea    0x4(%edx),%eax
84004d67:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004d6a:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004d6d:	8d 48 04             	lea    0x4(%eax),%ecx
84004d70:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004d73:	8b 12                	mov    (%edx),%edx
84004d75:	89 10                	mov    %edx,(%eax)
84004d77:	8b 45 dc             	mov    -0x24(%ebp),%eax
84004d7a:	8b 10                	mov    (%eax),%edx
84004d7c:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004d7f:	89 10                	mov    %edx,(%eax)
84004d81:	e9 12 03 00 00       	jmp    84005098 <_realloc_r+0x82b>
84004d86:	83 ec 04             	sub    $0x4,%esp
84004d89:	ff 75 a4             	push   -0x5c(%ebp)
84004d8c:	ff 75 0c             	push   0xc(%ebp)
84004d8f:	ff 75 a8             	push   -0x58(%ebp)
84004d92:	e8 49 fa ff ff       	call   840047e0 <memmove>
84004d97:	83 c4 10             	add    $0x10,%esp
84004d9a:	e9 f9 02 00 00       	jmp    84005098 <_realloc_r+0x82b>
84004d9f:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
84004da3:	0f 84 5b 01 00 00    	je     84004f04 <_realloc_r+0x697>
84004da9:	8b 55 ac             	mov    -0x54(%ebp),%edx
84004dac:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004daf:	01 d0                	add    %edx,%eax
84004db1:	89 c2                	mov    %eax,%edx
84004db3:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004db6:	39 c2                	cmp    %eax,%edx
84004db8:	0f 8c 46 01 00 00    	jl     84004f04 <_realloc_r+0x697>
84004dbe:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004dc1:	8b 40 0c             	mov    0xc(%eax),%eax
84004dc4:	89 45 b8             	mov    %eax,-0x48(%ebp)
84004dc7:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004dca:	8b 40 08             	mov    0x8(%eax),%eax
84004dcd:	89 45 b4             	mov    %eax,-0x4c(%ebp)
84004dd0:	8b 45 b4             	mov    -0x4c(%ebp),%eax
84004dd3:	8b 55 b8             	mov    -0x48(%ebp),%edx
84004dd6:	89 50 0c             	mov    %edx,0xc(%eax)
84004dd9:	8b 45 b8             	mov    -0x48(%ebp),%eax
84004ddc:	8b 55 b4             	mov    -0x4c(%ebp),%edx
84004ddf:	89 50 08             	mov    %edx,0x8(%eax)
84004de2:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004de5:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004de8:	8b 45 ac             	mov    -0x54(%ebp),%eax
84004deb:	01 45 f0             	add    %eax,-0x10(%ebp)
84004dee:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004df1:	83 c0 08             	add    $0x8,%eax
84004df4:	89 45 a8             	mov    %eax,-0x58(%ebp)
84004df7:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004dfa:	83 e8 04             	sub    $0x4,%eax
84004dfd:	89 45 9c             	mov    %eax,-0x64(%ebp)
84004e00:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
84004e04:	0f 87 e1 00 00 00    	ja     84004eeb <_realloc_r+0x67e>
84004e0a:	8b 45 0c             	mov    0xc(%ebp),%eax
84004e0d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e10:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004e13:	89 45 d0             	mov    %eax,-0x30(%ebp)
84004e16:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
84004e1a:	0f 86 90 00 00 00    	jbe    84004eb0 <_realloc_r+0x643>
84004e20:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e23:	8d 42 04             	lea    0x4(%edx),%eax
84004e26:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e29:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e2c:	8d 48 04             	lea    0x4(%eax),%ecx
84004e2f:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e32:	8b 12                	mov    (%edx),%edx
84004e34:	89 10                	mov    %edx,(%eax)
84004e36:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e39:	8d 42 04             	lea    0x4(%edx),%eax
84004e3c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e3f:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e42:	8d 48 04             	lea    0x4(%eax),%ecx
84004e45:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e48:	8b 12                	mov    (%edx),%edx
84004e4a:	89 10                	mov    %edx,(%eax)
84004e4c:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
84004e50:	76 5e                	jbe    84004eb0 <_realloc_r+0x643>
84004e52:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e55:	8d 42 04             	lea    0x4(%edx),%eax
84004e58:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e5b:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e5e:	8d 48 04             	lea    0x4(%eax),%ecx
84004e61:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e64:	8b 12                	mov    (%edx),%edx
84004e66:	89 10                	mov    %edx,(%eax)
84004e68:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e6b:	8d 42 04             	lea    0x4(%edx),%eax
84004e6e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e71:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e74:	8d 48 04             	lea    0x4(%eax),%ecx
84004e77:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e7a:	8b 12                	mov    (%edx),%edx
84004e7c:	89 10                	mov    %edx,(%eax)
84004e7e:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
84004e82:	76 2c                	jbe    84004eb0 <_realloc_r+0x643>
84004e84:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e87:	8d 42 04             	lea    0x4(%edx),%eax
84004e8a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e8d:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e90:	8d 48 04             	lea    0x4(%eax),%ecx
84004e93:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e96:	8b 12                	mov    (%edx),%edx
84004e98:	89 10                	mov    %edx,(%eax)
84004e9a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e9d:	8d 42 04             	lea    0x4(%edx),%eax
84004ea0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004ea3:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004ea6:	8d 48 04             	lea    0x4(%eax),%ecx
84004ea9:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004eac:	8b 12                	mov    (%edx),%edx
84004eae:	89 10                	mov    %edx,(%eax)
84004eb0:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004eb3:	8d 42 04             	lea    0x4(%edx),%eax
84004eb6:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004eb9:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004ebc:	8d 48 04             	lea    0x4(%eax),%ecx
84004ebf:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004ec2:	8b 12                	mov    (%edx),%edx
84004ec4:	89 10                	mov    %edx,(%eax)
84004ec6:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004ec9:	8d 42 04             	lea    0x4(%edx),%eax
84004ecc:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004ecf:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004ed2:	8d 48 04             	lea    0x4(%eax),%ecx
84004ed5:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004ed8:	8b 12                	mov    (%edx),%edx
84004eda:	89 10                	mov    %edx,(%eax)
84004edc:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84004edf:	8b 10                	mov    (%eax),%edx
84004ee1:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004ee4:	89 10                	mov    %edx,(%eax)
84004ee6:	e9 ad 01 00 00       	jmp    84005098 <_realloc_r+0x82b>
84004eeb:	83 ec 04             	sub    $0x4,%esp
84004eee:	ff 75 9c             	push   -0x64(%ebp)
84004ef1:	ff 75 0c             	push   0xc(%ebp)
84004ef4:	ff 75 a8             	push   -0x58(%ebp)
84004ef7:	e8 e4 f8 ff ff       	call   840047e0 <memmove>
84004efc:	83 c4 10             	add    $0x10,%esp
84004eff:	e9 94 01 00 00       	jmp    84005098 <_realloc_r+0x82b>
84004f04:	83 ec 08             	sub    $0x8,%esp
84004f07:	ff 75 10             	push   0x10(%ebp)
84004f0a:	ff 75 08             	push   0x8(%ebp)
84004f0d:	e8 2b cd ff ff       	call   84001c3d <_malloc_r>
84004f12:	83 c4 10             	add    $0x10,%esp
84004f15:	89 45 a8             	mov    %eax,-0x58(%ebp)
84004f18:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
84004f1c:	75 18                	jne    84004f36 <_realloc_r+0x6c9>
84004f1e:	83 ec 0c             	sub    $0xc,%esp
84004f21:	ff 75 08             	push   0x8(%ebp)
84004f24:	e8 c4 d5 ff ff       	call   840024ed <__malloc_unlock>
84004f29:	83 c4 10             	add    $0x10,%esp
84004f2c:	b8 00 00 00 00       	mov    $0x0,%eax
84004f31:	e9 0f 02 00 00       	jmp    84005145 <_realloc_r+0x8d8>
84004f36:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004f39:	83 e8 08             	sub    $0x8,%eax
84004f3c:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004f3f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004f42:	8b 40 04             	mov    0x4(%eax),%eax
84004f45:	83 e0 fe             	and    $0xfffffffe,%eax
84004f48:	89 c2                	mov    %eax,%edx
84004f4a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004f4d:	01 d0                	add    %edx,%eax
84004f4f:	39 45 f4             	cmp    %eax,-0xc(%ebp)
84004f52:	75 17                	jne    84004f6b <_realloc_r+0x6fe>
84004f54:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004f57:	8b 40 04             	mov    0x4(%eax),%eax
84004f5a:	83 e0 fc             	and    $0xfffffffc,%eax
84004f5d:	01 45 f0             	add    %eax,-0x10(%ebp)
84004f60:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004f63:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004f66:	e9 2d 01 00 00       	jmp    84005098 <_realloc_r+0x82b>
84004f6b:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004f6e:	83 e8 04             	sub    $0x4,%eax
84004f71:	89 45 98             	mov    %eax,-0x68(%ebp)
84004f74:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
84004f78:	0f 87 de 00 00 00    	ja     8400505c <_realloc_r+0x7ef>
84004f7e:	8b 45 0c             	mov    0xc(%ebp),%eax
84004f81:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004f84:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004f87:	89 45 c8             	mov    %eax,-0x38(%ebp)
84004f8a:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
84004f8e:	0f 86 90 00 00 00    	jbe    84005024 <_realloc_r+0x7b7>
84004f94:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004f97:	8d 42 04             	lea    0x4(%edx),%eax
84004f9a:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004f9d:	8b 45 c8             	mov    -0x38(%ebp),%eax
84004fa0:	8d 48 04             	lea    0x4(%eax),%ecx
84004fa3:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84004fa6:	8b 12                	mov    (%edx),%edx
84004fa8:	89 10                	mov    %edx,(%eax)
84004faa:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004fad:	8d 42 04             	lea    0x4(%edx),%eax
84004fb0:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004fb3:	8b 45 c8             	mov    -0x38(%ebp),%eax
84004fb6:	8d 48 04             	lea    0x4(%eax),%ecx
84004fb9:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84004fbc:	8b 12                	mov    (%edx),%edx
84004fbe:	89 10                	mov    %edx,(%eax)
84004fc0:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
84004fc4:	76 5e                	jbe    84005024 <_realloc_r+0x7b7>
84004fc6:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004fc9:	8d 42 04             	lea    0x4(%edx),%eax
84004fcc:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004fcf:	8b 45 c8             	mov    -0x38(%ebp),%eax
84004fd2:	8d 48 04             	lea    0x4(%eax),%ecx
84004fd5:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84004fd8:	8b 12                	mov    (%edx),%edx
84004fda:	89 10                	mov    %edx,(%eax)
84004fdc:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004fdf:	8d 42 04             	lea    0x4(%edx),%eax
84004fe2:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004fe5:	8b 45 c8             	mov    -0x38(%ebp),%eax
84004fe8:	8d 48 04             	lea    0x4(%eax),%ecx
84004feb:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84004fee:	8b 12                	mov    (%edx),%edx
84004ff0:	89 10                	mov    %edx,(%eax)
84004ff2:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
84004ff6:	76 2c                	jbe    84005024 <_realloc_r+0x7b7>
84004ff8:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004ffb:	8d 42 04             	lea    0x4(%edx),%eax
84004ffe:	89 45 cc             	mov    %eax,-0x34(%ebp)
84005001:	8b 45 c8             	mov    -0x38(%ebp),%eax
84005004:	8d 48 04             	lea    0x4(%eax),%ecx
84005007:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8400500a:	8b 12                	mov    (%edx),%edx
8400500c:	89 10                	mov    %edx,(%eax)
8400500e:	8b 55 cc             	mov    -0x34(%ebp),%edx
84005011:	8d 42 04             	lea    0x4(%edx),%eax
84005014:	89 45 cc             	mov    %eax,-0x34(%ebp)
84005017:	8b 45 c8             	mov    -0x38(%ebp),%eax
8400501a:	8d 48 04             	lea    0x4(%eax),%ecx
8400501d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84005020:	8b 12                	mov    (%edx),%edx
84005022:	89 10                	mov    %edx,(%eax)
84005024:	8b 55 cc             	mov    -0x34(%ebp),%edx
84005027:	8d 42 04             	lea    0x4(%edx),%eax
8400502a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8400502d:	8b 45 c8             	mov    -0x38(%ebp),%eax
84005030:	8d 48 04             	lea    0x4(%eax),%ecx
84005033:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84005036:	8b 12                	mov    (%edx),%edx
84005038:	89 10                	mov    %edx,(%eax)
8400503a:	8b 55 cc             	mov    -0x34(%ebp),%edx
8400503d:	8d 42 04             	lea    0x4(%edx),%eax
84005040:	89 45 cc             	mov    %eax,-0x34(%ebp)
84005043:	8b 45 c8             	mov    -0x38(%ebp),%eax
84005046:	8d 48 04             	lea    0x4(%eax),%ecx
84005049:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8400504c:	8b 12                	mov    (%edx),%edx
8400504e:	89 10                	mov    %edx,(%eax)
84005050:	8b 45 cc             	mov    -0x34(%ebp),%eax
84005053:	8b 10                	mov    (%eax),%edx
84005055:	8b 45 c8             	mov    -0x38(%ebp),%eax
84005058:	89 10                	mov    %edx,(%eax)
8400505a:	eb 14                	jmp    84005070 <_realloc_r+0x803>
8400505c:	83 ec 04             	sub    $0x4,%esp
8400505f:	ff 75 98             	push   -0x68(%ebp)
84005062:	ff 75 0c             	push   0xc(%ebp)
84005065:	ff 75 a8             	push   -0x58(%ebp)
84005068:	e8 73 f7 ff ff       	call   840047e0 <memmove>
8400506d:	83 c4 10             	add    $0x10,%esp
84005070:	83 ec 08             	sub    $0x8,%esp
84005073:	ff 75 0c             	push   0xc(%ebp)
84005076:	ff 75 08             	push   0x8(%ebp)
84005079:	e8 98 c2 ff ff       	call   84001316 <_free_r>
8400507e:	83 c4 10             	add    $0x10,%esp
84005081:	83 ec 0c             	sub    $0xc,%esp
84005084:	ff 75 08             	push   0x8(%ebp)
84005087:	e8 61 d4 ff ff       	call   840024ed <__malloc_unlock>
8400508c:	83 c4 10             	add    $0x10,%esp
8400508f:	8b 45 a8             	mov    -0x58(%ebp),%eax
84005092:	e9 ae 00 00 00       	jmp    84005145 <_realloc_r+0x8d8>
84005097:	90                   	nop
84005098:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400509b:	2b 45 bc             	sub    -0x44(%ebp),%eax
8400509e:	89 45 94             	mov    %eax,-0x6c(%ebp)
840050a1:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
840050a5:	76 5d                	jbe    84005104 <_realloc_r+0x897>
840050a7:	8b 55 f4             	mov    -0xc(%ebp),%edx
840050aa:	8b 45 bc             	mov    -0x44(%ebp),%eax
840050ad:	01 d0                	add    %edx,%eax
840050af:	89 45 90             	mov    %eax,-0x70(%ebp)
840050b2:	8b 45 f4             	mov    -0xc(%ebp),%eax
840050b5:	8b 40 04             	mov    0x4(%eax),%eax
840050b8:	83 e0 01             	and    $0x1,%eax
840050bb:	0b 45 bc             	or     -0x44(%ebp),%eax
840050be:	89 c2                	mov    %eax,%edx
840050c0:	8b 45 f4             	mov    -0xc(%ebp),%eax
840050c3:	89 50 04             	mov    %edx,0x4(%eax)
840050c6:	8b 45 94             	mov    -0x6c(%ebp),%eax
840050c9:	83 c8 01             	or     $0x1,%eax
840050cc:	89 c2                	mov    %eax,%edx
840050ce:	8b 45 90             	mov    -0x70(%ebp),%eax
840050d1:	89 50 04             	mov    %edx,0x4(%eax)
840050d4:	8b 55 90             	mov    -0x70(%ebp),%edx
840050d7:	8b 45 94             	mov    -0x6c(%ebp),%eax
840050da:	01 d0                	add    %edx,%eax
840050dc:	8b 50 04             	mov    0x4(%eax),%edx
840050df:	8b 4d 90             	mov    -0x70(%ebp),%ecx
840050e2:	8b 45 94             	mov    -0x6c(%ebp),%eax
840050e5:	01 c8                	add    %ecx,%eax
840050e7:	83 ca 01             	or     $0x1,%edx
840050ea:	89 50 04             	mov    %edx,0x4(%eax)
840050ed:	8b 45 90             	mov    -0x70(%ebp),%eax
840050f0:	83 c0 08             	add    $0x8,%eax
840050f3:	83 ec 08             	sub    $0x8,%esp
840050f6:	50                   	push   %eax
840050f7:	ff 75 08             	push   0x8(%ebp)
840050fa:	e8 17 c2 ff ff       	call   84001316 <_free_r>
840050ff:	83 c4 10             	add    $0x10,%esp
84005102:	eb 2d                	jmp    84005131 <_realloc_r+0x8c4>
84005104:	8b 45 f4             	mov    -0xc(%ebp),%eax
84005107:	8b 40 04             	mov    0x4(%eax),%eax
8400510a:	83 e0 01             	and    $0x1,%eax
8400510d:	0b 45 f0             	or     -0x10(%ebp),%eax
84005110:	89 c2                	mov    %eax,%edx
84005112:	8b 45 f4             	mov    -0xc(%ebp),%eax
84005115:	89 50 04             	mov    %edx,0x4(%eax)
84005118:	8b 55 f4             	mov    -0xc(%ebp),%edx
8400511b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400511e:	01 d0                	add    %edx,%eax
84005120:	8b 50 04             	mov    0x4(%eax),%edx
84005123:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84005126:	8b 45 f0             	mov    -0x10(%ebp),%eax
84005129:	01 c8                	add    %ecx,%eax
8400512b:	83 ca 01             	or     $0x1,%edx
8400512e:	89 50 04             	mov    %edx,0x4(%eax)
84005131:	83 ec 0c             	sub    $0xc,%esp
84005134:	ff 75 08             	push   0x8(%ebp)
84005137:	e8 b1 d3 ff ff       	call   840024ed <__malloc_unlock>
8400513c:	83 c4 10             	add    $0x10,%esp
8400513f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84005142:	83 c0 08             	add    $0x8,%eax
84005145:	c9                   	leave  
84005146:	c3                   	ret    

84005147 <lflush>:
84005147:	55                   	push   %ebp
84005148:	89 e5                	mov    %esp,%ebp
8400514a:	83 ec 08             	sub    $0x8,%esp
8400514d:	8b 45 08             	mov    0x8(%ebp),%eax
84005150:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
84005154:	98                   	cwtl   
84005155:	83 e0 09             	and    $0x9,%eax
84005158:	83 f8 09             	cmp    $0x9,%eax
8400515b:	75 10                	jne    8400516d <lflush+0x26>
8400515d:	83 ec 0c             	sub    $0xc,%esp
84005160:	ff 75 08             	push   0x8(%ebp)
84005163:	e8 73 bd ff ff       	call   84000edb <fflush>
84005168:	83 c4 10             	add    $0x10,%esp
8400516b:	eb 05                	jmp    84005172 <lflush+0x2b>
8400516d:	b8 00 00 00 00       	mov    $0x0,%eax
84005172:	c9                   	leave  
84005173:	c3                   	ret    

84005174 <__srefill_r>:
84005174:	55                   	push   %ebp
84005175:	89 e5                	mov    %esp,%ebp
84005177:	56                   	push   %esi
84005178:	53                   	push   %ebx
84005179:	83 ec 10             	sub    $0x10,%esp
8400517c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8400517f:	8b 45 08             	mov    0x8(%ebp),%eax
84005182:	89 45 f4             	mov    %eax,-0xc(%ebp)
84005185:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84005189:	74 18                	je     840051a3 <__srefill_r+0x2f>
8400518b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400518e:	8b 40 38             	mov    0x38(%eax),%eax
84005191:	85 c0                	test   %eax,%eax
84005193:	75 0e                	jne    840051a3 <__srefill_r+0x2f>
84005195:	83 ec 0c             	sub    $0xc,%esp
84005198:	ff 75 f4             	push   -0xc(%ebp)
8400519b:	e8 69 c0 ff ff       	call   84001209 <__sinit>
840051a0:	83 c4 10             	add    $0x10,%esp
840051a3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840051a7:	98                   	cwtl   
840051a8:	25 00 20 00 00       	and    $0x2000,%eax
840051ad:	85 c0                	test   %eax,%eax
840051af:	75 14                	jne    840051c5 <__srefill_r+0x51>
840051b1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840051b5:	80 cc 20             	or     $0x20,%ah
840051b8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840051bc:	8b 43 64             	mov    0x64(%ebx),%eax
840051bf:	80 e4 df             	and    $0xdf,%ah
840051c2:	89 43 64             	mov    %eax,0x64(%ebx)
840051c5:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
840051cc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840051d0:	98                   	cwtl   
840051d1:	83 e0 20             	and    $0x20,%eax
840051d4:	85 c0                	test   %eax,%eax
840051d6:	74 0a                	je     840051e2 <__srefill_r+0x6e>
840051d8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
840051dd:	e9 8c 01 00 00       	jmp    8400536e <__srefill_r+0x1fa>
840051e2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840051e6:	98                   	cwtl   
840051e7:	83 e0 04             	and    $0x4,%eax
840051ea:	85 c0                	test   %eax,%eax
840051ec:	75 79                	jne    84005267 <__srefill_r+0xf3>
840051ee:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840051f2:	98                   	cwtl   
840051f3:	83 e0 10             	and    $0x10,%eax
840051f6:	85 c0                	test   %eax,%eax
840051f8:	75 1e                	jne    84005218 <__srefill_r+0xa4>
840051fa:	8b 45 08             	mov    0x8(%ebp),%eax
840051fd:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
84005203:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84005207:	83 c8 40             	or     $0x40,%eax
8400520a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8400520e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84005213:	e9 56 01 00 00       	jmp    8400536e <__srefill_r+0x1fa>
84005218:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400521c:	98                   	cwtl   
8400521d:	83 e0 08             	and    $0x8,%eax
84005220:	85 c0                	test   %eax,%eax
84005222:	74 36                	je     8400525a <__srefill_r+0xe6>
84005224:	83 ec 08             	sub    $0x8,%esp
84005227:	53                   	push   %ebx
84005228:	ff 75 08             	push   0x8(%ebp)
8400522b:	e8 53 bc ff ff       	call   84000e83 <_fflush_r>
84005230:	83 c4 10             	add    $0x10,%esp
84005233:	85 c0                	test   %eax,%eax
84005235:	74 0a                	je     84005241 <__srefill_r+0xcd>
84005237:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400523c:	e9 2d 01 00 00       	jmp    8400536e <__srefill_r+0x1fa>
84005241:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84005245:	83 e0 f7             	and    $0xfffffff7,%eax
84005248:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8400524c:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
84005253:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
8400525a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400525e:	83 c8 04             	or     $0x4,%eax
84005261:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84005265:	eb 46                	jmp    840052ad <__srefill_r+0x139>
84005267:	8b 43 30             	mov    0x30(%ebx),%eax
8400526a:	85 c0                	test   %eax,%eax
8400526c:	74 3f                	je     840052ad <__srefill_r+0x139>
8400526e:	8b 53 30             	mov    0x30(%ebx),%edx
84005271:	8d 43 40             	lea    0x40(%ebx),%eax
84005274:	39 c2                	cmp    %eax,%edx
84005276:	74 12                	je     8400528a <__srefill_r+0x116>
84005278:	8b 43 30             	mov    0x30(%ebx),%eax
8400527b:	83 ec 08             	sub    $0x8,%esp
8400527e:	50                   	push   %eax
8400527f:	ff 75 08             	push   0x8(%ebp)
84005282:	e8 8f c0 ff ff       	call   84001316 <_free_r>
84005287:	83 c4 10             	add    $0x10,%esp
8400528a:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
84005291:	8b 43 3c             	mov    0x3c(%ebx),%eax
84005294:	89 43 04             	mov    %eax,0x4(%ebx)
84005297:	8b 43 04             	mov    0x4(%ebx),%eax
8400529a:	85 c0                	test   %eax,%eax
8400529c:	74 0f                	je     840052ad <__srefill_r+0x139>
8400529e:	8b 43 38             	mov    0x38(%ebx),%eax
840052a1:	89 03                	mov    %eax,(%ebx)
840052a3:	b8 00 00 00 00       	mov    $0x0,%eax
840052a8:	e9 c1 00 00 00       	jmp    8400536e <__srefill_r+0x1fa>
840052ad:	8b 43 10             	mov    0x10(%ebx),%eax
840052b0:	85 c0                	test   %eax,%eax
840052b2:	75 0f                	jne    840052c3 <__srefill_r+0x14f>
840052b4:	83 ec 08             	sub    $0x8,%esp
840052b7:	53                   	push   %ebx
840052b8:	ff 75 08             	push   0x8(%ebp)
840052bb:	e8 65 da ff ff       	call   84002d25 <__smakebuf_r>
840052c0:	83 c4 10             	add    $0x10,%esp
840052c3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840052c7:	98                   	cwtl   
840052c8:	83 e0 03             	and    $0x3,%eax
840052cb:	85 c0                	test   %eax,%eax
840052cd:	74 48                	je     84005317 <__srefill_r+0x1a3>
840052cf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840052d3:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
840052d7:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
840052dd:	a1 38 56 00 84       	mov    0x84005638,%eax
840052e2:	83 ec 08             	sub    $0x8,%esp
840052e5:	68 47 51 00 84       	push   $0x84005147
840052ea:	50                   	push   %eax
840052eb:	e8 62 c5 ff ff       	call   84001852 <_fwalk>
840052f0:	83 c4 10             	add    $0x10,%esp
840052f3:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
840052f7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840052fb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840052ff:	98                   	cwtl   
84005300:	83 e0 09             	and    $0x9,%eax
84005303:	83 f8 09             	cmp    $0x9,%eax
84005306:	75 0f                	jne    84005317 <__srefill_r+0x1a3>
84005308:	83 ec 08             	sub    $0x8,%esp
8400530b:	53                   	push   %ebx
8400530c:	ff 75 08             	push   0x8(%ebp)
8400530f:	e8 49 b9 ff ff       	call   84000c5d <__sflush_r>
84005314:	83 c4 10             	add    $0x10,%esp
84005317:	8b 43 10             	mov    0x10(%ebx),%eax
8400531a:	89 03                	mov    %eax,(%ebx)
8400531c:	8b 43 20             	mov    0x20(%ebx),%eax
8400531f:	8b 73 14             	mov    0x14(%ebx),%esi
84005322:	8b 0b                	mov    (%ebx),%ecx
84005324:	8b 53 1c             	mov    0x1c(%ebx),%edx
84005327:	56                   	push   %esi
84005328:	51                   	push   %ecx
84005329:	52                   	push   %edx
8400532a:	ff 75 08             	push   0x8(%ebp)
8400532d:	ff d0                	call   *%eax
8400532f:	83 c4 10             	add    $0x10,%esp
84005332:	89 43 04             	mov    %eax,0x4(%ebx)
84005335:	8b 43 04             	mov    0x4(%ebx),%eax
84005338:	85 c0                	test   %eax,%eax
8400533a:	7f 2d                	jg     84005369 <__srefill_r+0x1f5>
8400533c:	8b 43 04             	mov    0x4(%ebx),%eax
8400533f:	85 c0                	test   %eax,%eax
84005341:	75 0d                	jne    84005350 <__srefill_r+0x1dc>
84005343:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84005347:	83 c8 20             	or     $0x20,%eax
8400534a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8400534e:	eb 12                	jmp    84005362 <__srefill_r+0x1ee>
84005350:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
84005357:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400535b:	83 c8 40             	or     $0x40,%eax
8400535e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84005362:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84005367:	eb 05                	jmp    8400536e <__srefill_r+0x1fa>
84005369:	b8 00 00 00 00       	mov    $0x0,%eax
8400536e:	8d 65 f8             	lea    -0x8(%ebp),%esp
84005371:	5b                   	pop    %ebx
84005372:	5e                   	pop    %esi
84005373:	5d                   	pop    %ebp
84005374:	c3                   	ret    

84005375 <strcmp>:
84005375:	55                   	push   %ebp
84005376:	89 e5                	mov    %esp,%ebp
84005378:	83 ec 10             	sub    $0x10,%esp
8400537b:	8b 55 08             	mov    0x8(%ebp),%edx
8400537e:	8b 45 0c             	mov    0xc(%ebp),%eax
84005381:	09 d0                	or     %edx,%eax
84005383:	83 e0 03             	and    $0x3,%eax
84005386:	85 c0                	test   %eax,%eax
84005388:	75 5e                	jne    840053e8 <strcmp+0x73>
8400538a:	8b 45 08             	mov    0x8(%ebp),%eax
8400538d:	89 45 fc             	mov    %eax,-0x4(%ebp)
84005390:	8b 45 0c             	mov    0xc(%ebp),%eax
84005393:	89 45 f8             	mov    %eax,-0x8(%ebp)
84005396:	eb 2c                	jmp    840053c4 <strcmp+0x4f>
84005398:	8b 45 fc             	mov    -0x4(%ebp),%eax
8400539b:	8b 00                	mov    (%eax),%eax
8400539d:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
840053a3:	8b 45 fc             	mov    -0x4(%ebp),%eax
840053a6:	8b 00                	mov    (%eax),%eax
840053a8:	f7 d0                	not    %eax
840053aa:	21 d0                	and    %edx,%eax
840053ac:	25 80 80 80 80       	and    $0x80808080,%eax
840053b1:	85 c0                	test   %eax,%eax
840053b3:	74 07                	je     840053bc <strcmp+0x47>
840053b5:	b8 00 00 00 00       	mov    $0x0,%eax
840053ba:	eb 5c                	jmp    84005418 <strcmp+0xa3>
840053bc:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
840053c0:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
840053c4:	8b 45 fc             	mov    -0x4(%ebp),%eax
840053c7:	8b 10                	mov    (%eax),%edx
840053c9:	8b 45 f8             	mov    -0x8(%ebp),%eax
840053cc:	8b 00                	mov    (%eax),%eax
840053ce:	39 c2                	cmp    %eax,%edx
840053d0:	74 c6                	je     84005398 <strcmp+0x23>
840053d2:	8b 45 fc             	mov    -0x4(%ebp),%eax
840053d5:	89 45 08             	mov    %eax,0x8(%ebp)
840053d8:	8b 45 f8             	mov    -0x8(%ebp),%eax
840053db:	89 45 0c             	mov    %eax,0xc(%ebp)
840053de:	eb 08                	jmp    840053e8 <strcmp+0x73>
840053e0:	83 45 08 01          	addl   $0x1,0x8(%ebp)
840053e4:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
840053e8:	8b 45 08             	mov    0x8(%ebp),%eax
840053eb:	0f b6 00             	movzbl (%eax),%eax
840053ee:	84 c0                	test   %al,%al
840053f0:	74 10                	je     84005402 <strcmp+0x8d>
840053f2:	8b 45 08             	mov    0x8(%ebp),%eax
840053f5:	0f b6 10             	movzbl (%eax),%edx
840053f8:	8b 45 0c             	mov    0xc(%ebp),%eax
840053fb:	0f b6 00             	movzbl (%eax),%eax
840053fe:	38 c2                	cmp    %al,%dl
84005400:	74 de                	je     840053e0 <strcmp+0x6b>
84005402:	8b 45 08             	mov    0x8(%ebp),%eax
84005405:	0f b6 00             	movzbl (%eax),%eax
84005408:	0f b6 d0             	movzbl %al,%edx
8400540b:	8b 45 0c             	mov    0xc(%ebp),%eax
8400540e:	0f b6 00             	movzbl (%eax),%eax
84005411:	0f b6 c8             	movzbl %al,%ecx
84005414:	89 d0                	mov    %edx,%eax
84005416:	29 c8                	sub    %ecx,%eax
84005418:	c9                   	leave  
84005419:	c3                   	ret    

8400541a <__get_global_locale>:
8400541a:	55                   	push   %ebp
8400541b:	89 e5                	mov    %esp,%ebp
8400541d:	b8 20 62 00 84       	mov    $0x84006220,%eax
84005422:	5d                   	pop    %ebp
84005423:	c3                   	ret    

84005424 <__get_current_locale>:
84005424:	55                   	push   %ebp
84005425:	89 e5                	mov    %esp,%ebp
84005427:	e8 ee ff ff ff       	call   8400541a <__get_global_locale>
8400542c:	5d                   	pop    %ebp
8400542d:	c3                   	ret    

8400542e <_wcrtomb_r>:
8400542e:	55                   	push   %ebp
8400542f:	89 e5                	mov    %esp,%ebp
84005431:	83 ec 18             	sub    $0x18,%esp
84005434:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8400543b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8400543f:	75 21                	jne    84005462 <_wcrtomb_r+0x34>
84005441:	e8 de ff ff ff       	call   84005424 <__get_current_locale>
84005446:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8400544c:	ff 75 14             	push   0x14(%ebp)
8400544f:	6a 00                	push   $0x0
84005451:	8d 55 ea             	lea    -0x16(%ebp),%edx
84005454:	52                   	push   %edx
84005455:	ff 75 08             	push   0x8(%ebp)
84005458:	ff d0                	call   *%eax
8400545a:	83 c4 10             	add    $0x10,%esp
8400545d:	89 45 f4             	mov    %eax,-0xc(%ebp)
84005460:	eb 1f                	jmp    84005481 <_wcrtomb_r+0x53>
84005462:	e8 bd ff ff ff       	call   84005424 <__get_current_locale>
84005467:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8400546d:	ff 75 14             	push   0x14(%ebp)
84005470:	ff 75 10             	push   0x10(%ebp)
84005473:	ff 75 0c             	push   0xc(%ebp)
84005476:	ff 75 08             	push   0x8(%ebp)
84005479:	ff d0                	call   *%eax
8400547b:	83 c4 10             	add    $0x10,%esp
8400547e:	89 45 f4             	mov    %eax,-0xc(%ebp)
84005481:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84005485:	75 19                	jne    840054a0 <_wcrtomb_r+0x72>
84005487:	8b 45 14             	mov    0x14(%ebp),%eax
8400548a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
84005490:	8b 45 08             	mov    0x8(%ebp),%eax
84005493:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
84005499:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400549e:	eb 03                	jmp    840054a3 <_wcrtomb_r+0x75>
840054a0:	8b 45 f4             	mov    -0xc(%ebp),%eax
840054a3:	c9                   	leave  
840054a4:	c3                   	ret    

840054a5 <wcrtomb>:
840054a5:	55                   	push   %ebp
840054a6:	89 e5                	mov    %esp,%ebp
840054a8:	83 ec 28             	sub    $0x28,%esp
840054ab:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
840054b2:	a1 e4 5d 00 84       	mov    0x84005de4,%eax
840054b7:	89 45 f0             	mov    %eax,-0x10(%ebp)
840054ba:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
840054be:	75 21                	jne    840054e1 <wcrtomb+0x3c>
840054c0:	e8 5f ff ff ff       	call   84005424 <__get_current_locale>
840054c5:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
840054cb:	ff 75 10             	push   0x10(%ebp)
840054ce:	6a 00                	push   $0x0
840054d0:	8d 55 e6             	lea    -0x1a(%ebp),%edx
840054d3:	52                   	push   %edx
840054d4:	ff 75 f0             	push   -0x10(%ebp)
840054d7:	ff d0                	call   *%eax
840054d9:	83 c4 10             	add    $0x10,%esp
840054dc:	89 45 f4             	mov    %eax,-0xc(%ebp)
840054df:	eb 1f                	jmp    84005500 <wcrtomb+0x5b>
840054e1:	e8 3e ff ff ff       	call   84005424 <__get_current_locale>
840054e6:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
840054ec:	ff 75 10             	push   0x10(%ebp)
840054ef:	ff 75 0c             	push   0xc(%ebp)
840054f2:	ff 75 08             	push   0x8(%ebp)
840054f5:	ff 75 f0             	push   -0x10(%ebp)
840054f8:	ff d0                	call   *%eax
840054fa:	83 c4 10             	add    $0x10,%esp
840054fd:	89 45 f4             	mov    %eax,-0xc(%ebp)
84005500:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84005504:	75 19                	jne    8400551f <wcrtomb+0x7a>
84005506:	8b 45 10             	mov    0x10(%ebp),%eax
84005509:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8400550f:	8b 45 f0             	mov    -0x10(%ebp),%eax
84005512:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
84005518:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400551d:	eb 03                	jmp    84005522 <wcrtomb+0x7d>
8400551f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84005522:	c9                   	leave  
84005523:	c3                   	ret    

84005524 <__get_global_locale>:
84005524:	55                   	push   %ebp
84005525:	89 e5                	mov    %esp,%ebp
84005527:	b8 20 62 00 84       	mov    $0x84006220,%eax
8400552c:	5d                   	pop    %ebp
8400552d:	c3                   	ret    

8400552e <__get_current_locale>:
8400552e:	55                   	push   %ebp
8400552f:	89 e5                	mov    %esp,%ebp
84005531:	e8 ee ff ff ff       	call   84005524 <__get_global_locale>
84005536:	5d                   	pop    %ebp
84005537:	c3                   	ret    

84005538 <_wctomb_r>:
84005538:	55                   	push   %ebp
84005539:	89 e5                	mov    %esp,%ebp
8400553b:	83 ec 08             	sub    $0x8,%esp
8400553e:	e8 eb ff ff ff       	call   8400552e <__get_current_locale>
84005543:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
84005549:	ff 75 14             	push   0x14(%ebp)
8400554c:	ff 75 10             	push   0x10(%ebp)
8400554f:	ff 75 0c             	push   0xc(%ebp)
84005552:	ff 75 08             	push   0x8(%ebp)
84005555:	ff d0                	call   *%eax
84005557:	83 c4 10             	add    $0x10,%esp
8400555a:	c9                   	leave  
8400555b:	c3                   	ret    

8400555c <__ascii_wctomb>:
8400555c:	55                   	push   %ebp
8400555d:	89 e5                	mov    %esp,%ebp
8400555f:	83 ec 10             	sub    $0x10,%esp
84005562:	8b 45 10             	mov    0x10(%ebp),%eax
84005565:	89 45 fc             	mov    %eax,-0x4(%ebp)
84005568:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8400556c:	75 07                	jne    84005575 <__ascii_wctomb+0x19>
8400556e:	b8 00 00 00 00       	mov    $0x0,%eax
84005573:	eb 28                	jmp    8400559d <__ascii_wctomb+0x41>
84005575:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
8400557c:	76 10                	jbe    8400558e <__ascii_wctomb+0x32>
8400557e:	8b 45 08             	mov    0x8(%ebp),%eax
84005581:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
84005587:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400558c:	eb 0f                	jmp    8400559d <__ascii_wctomb+0x41>
8400558e:	8b 45 fc             	mov    -0x4(%ebp),%eax
84005591:	89 c2                	mov    %eax,%edx
84005593:	8b 45 0c             	mov    0xc(%ebp),%eax
84005596:	88 10                	mov    %dl,(%eax)
84005598:	b8 01 00 00 00       	mov    $0x1,%eax
8400559d:	c9                   	leave  
8400559e:	c3                   	ret    
